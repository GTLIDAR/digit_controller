/*
 * Automatically Generated from Mathematica.
 * Fri 11 Sep 2020 16:32:50 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif
#include "p_com.hh"

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t32;
  double t62;
  double t88;
  double t71;
  double t89;
  double t50;
  double t77;
  double t90;
  double t97;
  double t104;
  double t118;
  double t119;
  double t127;
  double t42;
  double t100;
  double t110;
  double t113;
  double t128;
  double t152;
  double t153;
  double t154;
  double t164;
  double t131;
  double t132;
  double t133;
  double t219;
  double t220;
  double t221;
  double t155;
  double t167;
  double t170;
  double t171;
  double t172;
  double t173;
  double t182;
  double t185;
  double t202;
  double t203;
  double t206;
  double t207;
  double t208;
  double t224;
  double t225;
  double t237;
  double t241;
  double t242;
  double t245;
  double t246;
  double t298;
  double t299;
  double t304;
  double t306;
  double t250;
  double t253;
  double t254;
  double t271;
  double t272;
  double t273;
  double t275;
  double t276;
  double t277;
  double t283;
  double t284;
  double t285;
  double t297;
  double t305;
  double t307;
  double t308;
  double t309;
  double t318;
  double t319;
  double t320;
  double t323;
  double t324;
  double t325;
  double t328;
  double t329;
  double t330;
  double t331;
  double t332;
  double t335;
  double t336;
  double t337;
  double t340;
  double t384;
  double t390;
  double t391;
  double t393;
  double t344;
  double t353;
  double t355;
  double t356;
  double t357;
  double t363;
  double t369;
  double t370;
  double t375;
  double t376;
  double t377;
  double t378;
  double t392;
  double t396;
  double t397;
  double t398;
  double t399;
  double t400;
  double t401;
  double t402;
  double t403;
  double t407;
  double t408;
  double t409;
  double t410;
  double t413;
  double t414;
  double t415;
  double t420;
  double t423;
  double t426;
  double t427;
  double t472;
  double t473;
  double t475;
  double t479;
  double t431;
  double t434;
  double t437;
  double t438;
  double t439;
  double t442;
  double t450;
  double t451;
  double t455;
  double t457;
  double t458;
  double t460;
  double t469;
  double t478;
  double t480;
  double t481;
  double t484;
  double t485;
  double t489;
  double t490;
  double t493;
  double t494;
  double t497;
  double t498;
  double t503;
  double t504;
  double t507;
  double t508;
  double t509;
  double t514;
  double t515;
  double t516;
  double t551;
  double t554;
  double t555;
  double t563;
  double t523;
  double t530;
  double t531;
  double t532;
  double t533;
  double t534;
  double t536;
  double t537;
  double t538;
  double t539;
  double t540;
  double t541;
  double t562;
  double t566;
  double t567;
  double t573;
  double t574;
  double t575;
  double t579;
  double t580;
  double t581;
  double t582;
  double t583;
  double t589;
  double t590;
  double t591;
  double t592;
  double t595;
  double t596;
  double t597;
  double t598;
  double t601;
  double t632;
  double t633;
  double t634;
  double t636;
  double t605;
  double t606;
  double t607;
  double t613;
  double t614;
  double t615;
  double t619;
  double t620;
  double t621;
  double t622;
  double t623;
  double t624;
  double t631;
  double t635;
  double t637;
  double t638;
  double t639;
  double t640;
  double t641;
  double t642;
  double t643;
  double t648;
  double t649;
  double t650;
  double t657;
  double t658;
  double t713;
  double t715;
  double t716;
  double t724;
  double t661;
  double t668;
  double t669;
  double t670;
  double t671;
  double t672;
  double t730;
  double t677;
  double t680;
  double t681;
  double t684;
  double t685;
  double t686;
  double t753;
  double t723;
  double t688;
  double t693;
  double t695;
  double t698;
  double t700;
  double t701;
  double t770;
  double t767;
  double t731;
  double t778;
  double t725;
  double t794;
  double t746;
  double t781;
  double t754;
  double t45;
  double t825;
  double t829;
  double t826;
  double t827;
  double t828;
  double t830;
  double t831;
  double t834;
  double t835;
  double t840;
  double t844;
  double t845;
  double t847;
  double t860;
  double t861;
  double t862;
  double t846;
  double t850;
  double t851;
  double t852;
  double t853;
  double t856;
  double t857;
  double t858;
  double t859;
  double t863;
  double t867;
  double t868;
  double t869;
  double t870;
  double t871;
  double t872;
  double t873;
  double t874;
  double t875;
  double t876;
  double t878;
  double t879;
  double t880;
  double t881;
  double t882;
  double t885;
  double t901;
  double t902;
  double t903;
  double t908;
  double t887;
  double t890;
  double t891;
  double t892;
  double t893;
  double t894;
  double t900;
  double t907;
  double t909;
  double t910;
  double t911;
  double t912;
  double t913;
  double t914;
  double t915;
  double t916;
  double t917;
  double t918;
  double t919;
  double t920;
  double t921;
  double t922;
  double t923;
  double t926;
  double t927;
  double t928;
  double t953;
  double t954;
  double t955;
  double t957;
  double t932;
  double t933;
  double t934;
  double t935;
  double t938;
  double t939;
  double t941;
  double t942;
  double t943;
  double t944;
  double t945;
  double t949;
  double t956;
  double t958;
  double t959;
  double t960;
  double t961;
  double t962;
  double t963;
  double t964;
  double t967;
  double t968;
  double t969;
  double t970;
  double t973;
  double t974;
  double t975;
  double t976;
  double t979;
  double t980;
  double t981;
  double t982;
  double t1007;
  double t1008;
  double t1009;
  double t1011;
  double t984;
  double t985;
  double t986;
  double t990;
  double t991;
  double t993;
  double t996;
  double t997;
  double t998;
  double t999;
  double t1000;
  double t1002;
  double t1006;
  double t1010;
  double t1012;
  double t1013;
  double t1014;
  double t1015;
  double t1016;
  double t1018;
  double t1019;
  double t1020;
  double t1021;
  double t1022;
  double t1023;
  double t1024;
  double t1025;
  double t1026;
  double t1027;
  double t1028;
  double t1029;
  double t1030;
  double t1054;
  double t1055;
  double t1056;
  double t1058;
  double t1032;
  double t1035;
  double t1036;
  double t1037;
  double t1038;
  double t1039;
  double t1043;
  double t1044;
  double t1045;
  double t1046;
  double t1047;
  double t1050;
  double t1057;
  double t1059;
  double t1060;
  double t1061;
  double t1062;
  double t1063;
  double t1066;
  double t1067;
  double t1068;
  double t1069;
  double t1070;
  double t1072;
  double t1073;
  double t1074;
  double t1075;
  double t1076;
  double t1077;
  double t1078;
  double t1079;
  double t1080;
  double t1099;
  double t1100;
  double t1101;
  double t1103;
  double t1082;
  double t1083;
  double t1084;
  double t1085;
  double t1086;
  double t1087;
  double t1089;
  double t1090;
  double t1091;
  double t1092;
  double t1093;
  double t1094;
  double t1098;
  double t1102;
  double t1104;
  double t1105;
  double t1106;
  double t1107;
  double t1108;
  double t1109;
  double t1110;
  double t1111;
  double t1112;
  double t1113;
  double t1114;
  double t1115;
  double t1140;
  double t1141;
  double t1142;
  double t1145;
  double t1116;
  double t1117;
  double t1118;
  double t1119;
  double t1120;
  double t1121;
  double t1144;
  double t1123;
  double t1124;
  double t1125;
  double t1126;
  double t1127;
  double t1128;
  double t1151;
  double t1161;
  double t1130;
  double t1131;
  double t1132;
  double t1133;
  double t1134;
  double t1135;
  double t1173;
  double t1177;
  double t1165;
  double t1185;
  double t1162;
  double t1193;
  double t1146;
  double t1182;
  double t1153;
  double t1218;
  double t1219;
  double t1220;
  double t1222;
  double t1223;
  double t1224;
  double t1221;
  double t1225;
  double t1226;
  double t1227;
  double t1228;
  double t1235;
  double t1236;
  double t1237;
  double t1233;
  double t1234;
  double t1238;
  double t1239;
  double t1240;
  double t1241;
  double t1242;
  double t1244;
  double t1245;
  double t1246;
  double t1247;
  double t1249;
  double t1250;
  double t1251;
  double t1252;
  double t1256;
  double t1257;
  double t1258;
  double t1259;
  double t1260;
  double t1261;
  double t1262;
  double t1264;
  double t1265;
  double t1266;
  double t1267;
  double t1269;
  double t1270;
  double t1271;
  double t1272;
  double t1276;
  double t1277;
  double t1278;
  double t1279;
  double t1280;
  double t1281;
  double t1282;
  double t1284;
  double t1285;
  double t1286;
  double t1287;
  double t1289;
  double t1290;
  double t1291;
  double t1292;
  double t1296;
  double t1297;
  double t1298;
  double t1299;
  double t1300;
  double t1301;
  double t1302;
  double t1305;
  double t1306;
  double t1307;
  double t1308;
  double t1311;
  double t1312;
  double t1313;
  double t1314;
  double t1318;
  double t1319;
  double t1320;
  double t1321;
  double t1322;
  double t1323;
  double t1324;
  double t1327;
  double t1328;
  double t1329;
  double t1330;
  double t1332;
  double t1333;
  double t1334;
  double t1335;
  double t1339;
  double t1340;
  double t1341;
  double t712;
  double t717;
  double t728;
  double t729;
  double t732;
  double t733;
  double t734;
  double t1342;
  double t1343;
  double t1344;
  double t1345;
  double t736;
  double t745;
  double t747;
  double t748;
  double t755;
  double t756;
  double t758;
  double t1347;
  double t1348;
  double t1349;
  double t1350;
  double t765;
  double t766;
  double t768;
  double t769;
  double t771;
  double t775;
  double t776;
  double t1352;
  double t1353;
  double t1354;
  double t1355;
  double t779;
  double t782;
  double t784;
  double t785;
  double t791;
  double t792;
  double t795;
  double t799;
  double t807;
  double t811;
  double t812;
  double t814;
  double t1217;
  double t1379;
  double t1380;
  double t1381;
  double t1382;
  double t1383;
  double t1391;
  double t1392;
  double t1394;
  double t1389;
  double t1390;
  double t1395;
  double t1396;
  double t1397;
  double t1398;
  double t1399;
  double t1401;
  double t1402;
  double t1413;
  double t1415;
  double t1419;
  double t1420;
  double t1421;
  double t1423;
  double t1427;
  double t1430;
  double t1431;
  double t1432;
  double t1433;
  double t1434;
  double t1437;
  double t1439;
  double t1440;
  double t1441;
  double t1442;
  double t1447;
  double t1450;
  double t1451;
  double t1452;
  double t1460;
  double t1461;
  double t1462;
  double t1463;
  double t1464;
  double t1465;
  double t1468;
  double t1470;
  double t1471;
  double t1479;
  double t1480;
  double t1482;
  double t1483;
  double t1484;
  double t1485;
  double t1494;
  double t1495;
  double t1498;
  double t1501;
  double t1502;
  double t1503;
  double t1504;
  double t1506;
  double t1507;
  double t1510;
  double t1511;
  double t1513;
  double t1521;
  double t1522;
  double t1523;
  double t1527;
  double t1528;
  double t1529;
  double t1530;
  double t1531;
  double t1532;
  double t1533;
  double t1535;
  double t1536;
  double t1537;
  double t1540;
  double t1542;
  double t1543;
  double t1544;
  double t1545;
  double t1549;
  double t1550;
  double t1551;
  double t1139;
  double t1143;
  double t1148;
  double t1149;
  double t1154;
  double t1155;
  double t1156;
  double t1554;
  double t1555;
  double t1556;
  double t1557;
  double t1159;
  double t1160;
  double t1163;
  double t1164;
  double t1166;
  double t1167;
  double t1169;
  double t1559;
  double t1560;
  double t1561;
  double t1562;
  double t1171;
  double t1172;
  double t1175;
  double t1176;
  double t1178;
  double t1179;
  double t1180;
  double t1564;
  double t1565;
  double t1566;
  double t1567;
  double t1183;
  double t1186;
  double t1188;
  double t1189;
  double t1194;
  double t1196;
  double t1197;
  double t1199;
  double t1203;
  double t1204;
  double t1206;
  double t1208;
  double t1597;
  double t1602;
  double t1603;
  double t1604;
  double t1605;
  double t1612;
  double t1613;
  double t1614;
  double t1610;
  double t1611;
  double t1616;
  double t1617;
  double t1618;
  double t1619;
  double t1620;
  double t1622;
  double t1624;
  double t1625;
  double t1626;
  double t1628;
  double t1629;
  double t1630;
  double t1631;
  double t1635;
  double t1636;
  double t1637;
  double t1638;
  double t1639;
  double t1640;
  double t1641;
  double t1643;
  double t1644;
  double t1645;
  double t1646;
  double t1648;
  double t1649;
  double t1650;
  double t1651;
  double t1655;
  double t1656;
  double t1657;
  double t1658;
  double t1659;
  double t1660;
  double t1661;
  double t1663;
  double t1664;
  double t1665;
  double t1666;
  double t1668;
  double t1669;
  double t1670;
  double t1671;
  double t1675;
  double t1676;
  double t1677;
  double t1678;
  double t1679;
  double t1680;
  double t1681;
  double t1683;
  double t1684;
  double t1685;
  double t1686;
  double t1688;
  double t1689;
  double t1690;
  double t1691;
  double t1695;
  double t1696;
  double t1697;
  double t1698;
  double t1699;
  double t1700;
  double t1701;
  double t1703;
  double t1704;
  double t1705;
  double t1706;
  double t1708;
  double t1709;
  double t1710;
  double t1711;
  double t1715;
  double t1716;
  double t1717;
  double t1718;
  double t1719;
  double t1720;
  double t1721;
  double t1723;
  double t1724;
  double t1725;
  double t1726;
  double t1728;
  double t1729;
  double t1730;
  double t1731;
  double t1600;
  double t1760;
  double t1761;
  double t1762;
  double t1763;
  double t1764;
  double t1770;
  double t1771;
  double t1772;
  double t1768;
  double t1769;
  double t1773;
  double t1780;
  double t1781;
  double t1782;
  double t1783;
  double t1774;
  double t1775;
  double t1776;
  double t1777;
  double t1785;
  double t1786;
  double t1787;
  double t1788;
  double t1792;
  double t1793;
  double t1794;
  double t1795;
  double t1796;
  double t1797;
  double t1798;
  double t1800;
  double t1801;
  double t1802;
  double t1803;
  double t1805;
  double t1806;
  double t1807;
  double t1808;
  double t1812;
  double t1813;
  double t1814;
  double t1815;
  double t1816;
  double t1817;
  double t1818;
  double t1820;
  double t1821;
  double t1822;
  double t1823;
  double t1825;
  double t1826;
  double t1827;
  double t1828;
  double t1832;
  double t1833;
  double t1834;
  double t1835;
  double t1836;
  double t1837;
  double t1838;
  double t1840;
  double t1841;
  double t1842;
  double t1843;
  double t1845;
  double t1846;
  double t1847;
  double t1848;
  double t1852;
  double t1853;
  double t1854;
  double t1855;
  double t1856;
  double t1857;
  double t1858;
  double t1860;
  double t1861;
  double t1862;
  double t1863;
  double t1865;
  double t1866;
  double t1867;
  double t1868;
  double t1872;
  double t1873;
  double t1874;
  double t1875;
  double t1876;
  double t1877;
  double t1878;
  double t1880;
  double t1881;
  double t1882;
  double t1883;
  double t1885;
  double t1886;
  double t1887;
  double t1888;
  t32 = Cos(var1[3]);
  t62 = Cos(var1[5]);
  t88 = Sin(var1[3]);
  t71 = Sin(var1[4]);
  t89 = Sin(var1[5]);
  t50 = Sin(var1[14]);
  t77 = t32*t62*t71;
  t90 = t88*t89;
  t97 = t77 + t90;
  t104 = Cos(var1[14]);
  t118 = -1.*t62*t88;
  t119 = t32*t71*t89;
  t127 = t118 + t119;
  t42 = Cos(var1[4]);
  t100 = -0.091*t50*t97;
  t110 = -1.*t104;
  t113 = 1. + t110;
  t128 = -0.091*t113*t127;
  t152 = Cos(var1[15]);
  t153 = -1.*t152;
  t154 = 1. + t153;
  t164 = Sin(var1[15]);
  t131 = -1.*t50*t97;
  t132 = t104*t127;
  t133 = t131 + t132;
  t219 = t104*t97;
  t220 = t50*t127;
  t221 = t219 + t220;
  t155 = -0.04500040093286238*t154;
  t167 = 0.0846680539949003*t164;
  t170 = t155 + t167;
  t171 = t32*t42*t170;
  t172 = 1.296332362046933e-7*var1[15];
  t173 = -0.07877668146182712*t154;
  t182 = -0.04186915633414423*t164;
  t185 = t172 + t173 + t182;
  t202 = t185*t133;
  t203 = 3.2909349868922137e-7*var1[15];
  t206 = 0.03103092645718495*t154;
  t207 = 0.016492681424499736*t164;
  t208 = t203 + t206 + t207;
  t224 = t208*t221;
  t225 = -0.366501*t32*t42*t164;
  t237 = 0.340999127418*t154*t133;
  t241 = -0.134322983001*t154;
  t242 = 1. + t241;
  t245 = t242*t221;
  t246 = t225 + t237 + t245;
  t298 = Cos(var1[16]);
  t299 = -1.*t298;
  t304 = 1. + t299;
  t306 = Sin(var1[16]);
  t250 = 0.930418*t32*t42*t164;
  t253 = -0.8656776547239999*t154;
  t254 = 1. + t253;
  t271 = t254*t133;
  t272 = 0.340999127418*t154*t221;
  t273 = t250 + t271 + t272;
  t275 = -1.000000637725*t154;
  t276 = 1. + t275;
  t277 = t276*t32*t42;
  t283 = -0.930418*t164*t133;
  t284 = 0.366501*t164*t221;
  t285 = t277 + t283 + t284;
  t297 = -1.296332362046933e-7*var1[16];
  t305 = -0.14128592423750855*t304;
  t307 = 0.04186915633414423*t306;
  t308 = t297 + t305 + t307;
  t309 = t308*t246;
  t318 = 3.2909349868922137e-7*var1[16];
  t319 = -0.055653945343889656*t304;
  t320 = 0.016492681424499736*t306;
  t323 = t318 + t319 + t320;
  t324 = t323*t273;
  t325 = -0.04500040093286238*t304;
  t328 = -0.15185209683981668*t306;
  t329 = t325 + t328;
  t330 = t329*t285;
  t331 = 0.930418*t306*t246;
  t332 = 0.366501*t306*t273;
  t335 = -1.000000637725*t304;
  t336 = 1. + t335;
  t337 = t336*t285;
  t340 = t331 + t332 + t337;
  t384 = Cos(var1[17]);
  t390 = -1.*t384;
  t391 = 1. + t390;
  t393 = Sin(var1[17]);
  t344 = -0.8656776547239999*t304;
  t353 = 1. + t344;
  t355 = t353*t246;
  t356 = -0.340999127418*t304*t273;
  t357 = -0.930418*t306*t285;
  t363 = t355 + t356 + t357;
  t369 = -0.340999127418*t304*t246;
  t370 = -0.134322983001*t304;
  t375 = 1. + t370;
  t376 = t375*t273;
  t377 = -0.366501*t306*t285;
  t378 = t369 + t376 + t377;
  t392 = 0.039853038461262744*t391;
  t396 = 0.23670515095269612*t393;
  t397 = t392 + t396;
  t398 = t397*t340;
  t399 = 6.295460977284962e-8*var1[17];
  t400 = -0.22023473313910558*t391;
  t401 = 0.03707996069223323*t393;
  t402 = t399 + t400 + t401;
  t403 = t402*t363;
  t407 = -1.5981976069815686e-7*var1[17];
  t408 = -0.08675267452931407*t391;
  t409 = 0.014606169134372047*t393;
  t410 = t407 + t408 + t409;
  t413 = t410*t378;
  t414 = 0.366501*t393*t340;
  t415 = -0.340999127418*t391*t363;
  t420 = -0.134322983001*t391;
  t423 = 1. + t420;
  t426 = t423*t378;
  t427 = t414 + t415 + t426;
  t472 = Cos(var1[18]);
  t473 = -1.*t472;
  t475 = 1. + t473;
  t479 = Sin(var1[18]);
  t431 = 0.930418*t393*t340;
  t434 = -0.8656776547239999*t391;
  t437 = 1. + t434;
  t438 = t437*t363;
  t439 = -0.340999127418*t391*t378;
  t442 = t431 + t438 + t439;
  t450 = -1.000000637725*t391;
  t451 = 1. + t450;
  t455 = t451*t340;
  t457 = -0.930418*t393*t363;
  t458 = -0.366501*t393*t378;
  t460 = t455 + t457 + t458;
  t469 = -4.0833068682577724e-7*var1[18];
  t478 = -0.11476729583292707*t475;
  t480 = 0.0111594154470601*t479;
  t481 = t469 + t478 + t480;
  t484 = t481*t427;
  t485 = 1.6084556086870008e-7*var1[18];
  t489 = -0.29135406957765553*t475;
  t490 = 0.02832985722118838*t479;
  t493 = t485 + t489 + t490;
  t494 = t493*t442;
  t497 = 0.03044854601678662*t475;
  t498 = 0.3131431996991197*t479;
  t503 = t497 + t498;
  t504 = t503*t460;
  t507 = -0.366501*t479*t427;
  t508 = -0.930418*t479*t442;
  t509 = -1.000000637725*t475;
  t514 = 1. + t509;
  t515 = t514*t460;
  t516 = t507 + t508 + t515;
  t551 = Cos(var1[19]);
  t554 = -1.*t551;
  t555 = 1. + t554;
  t563 = Sin(var1[19]);
  t523 = -0.134322983001*t475;
  t530 = 1. + t523;
  t531 = t530*t427;
  t532 = -0.340999127418*t475*t442;
  t533 = 0.366501*t479*t460;
  t534 = t531 + t532 + t533;
  t536 = -0.340999127418*t475*t427;
  t537 = -0.8656776547239999*t475;
  t538 = 1. + t537;
  t539 = t538*t442;
  t540 = 0.930418*t479*t460;
  t541 = t536 + t539 + t540;
  t562 = -0.26285954081199375*t555;
  t566 = 0.634735404786378*t563;
  t567 = t562 + t566;
  t573 = t567*t516;
  t574 = 1.6169269214444473e-7*var1[19];
  t575 = -0.2326311605896123*t555;
  t579 = -0.09633822312984319*t563;
  t580 = t574 + t575 + t579;
  t581 = t580*t534;
  t582 = -6.369237629068993e-8*var1[19];
  t583 = -0.5905692458505322*t555;
  t589 = -0.24456909227538925*t563;
  t590 = t582 + t583 + t589;
  t591 = t590*t541;
  t592 = 0.930418*t563*t516;
  t595 = -0.340999127418*t555*t534;
  t596 = -0.8656776547239999*t555;
  t597 = 1. + t596;
  t598 = t597*t541;
  t601 = t592 + t595 + t598;
  t632 = Cos(var1[20]);
  t633 = -1.*t632;
  t634 = 1. + t633;
  t636 = Sin(var1[20]);
  t605 = 0.366501*t563*t516;
  t606 = -0.134322983001*t555;
  t607 = 1. + t606;
  t613 = t607*t534;
  t614 = -0.340999127418*t555*t541;
  t615 = t605 + t613 + t614;
  t619 = -1.000000637725*t555;
  t620 = 1. + t619;
  t621 = t620*t516;
  t622 = -0.366501*t563*t534;
  t623 = -0.930418*t563*t541;
  t624 = t621 + t622 + t623;
  t631 = -7.041766963257243e-8*var1[20];
  t635 = -0.8232948486053725*t634;
  t637 = 0.05763710717422546*t636;
  t638 = t631 + t635 + t637;
  t639 = t638*t601;
  t640 = 1.7876586242383724e-7*var1[20];
  t641 = -0.3243041141817093*t634;
  t642 = 0.02270383571304597*t636;
  t643 = t640 + t641 + t642;
  t648 = t643*t615;
  t649 = 0.06194758047549556*t634;
  t650 = 0.8848655643005321*t636;
  t657 = t649 + t650;
  t658 = t657*t624;
  t713 = Cos(var1[21]);
  t715 = -1.*t713;
  t716 = 1. + t715;
  t724 = Sin(var1[21]);
  t661 = -0.930418*t636*t601;
  t668 = -0.366501*t636*t615;
  t669 = -1.000000637725*t634;
  t670 = 1. + t669;
  t671 = t670*t624;
  t672 = t661 + t668 + t671;
  t730 = -0.175248972904*t716;
  t677 = -0.340999127418*t634*t601;
  t680 = -0.134322983001*t634;
  t681 = 1. + t680;
  t684 = t681*t615;
  t685 = 0.366501*t636*t624;
  t686 = t677 + t684 + t685;
  t753 = -0.120666640478*t716;
  t723 = -0.444895486988*t716;
  t688 = -0.8656776547239999*t634;
  t693 = 1. + t688;
  t695 = t693*t601;
  t698 = -0.340999127418*t634*t615;
  t700 = 0.930418*t636*t624;
  t701 = t695 + t698 + t700;
  t770 = 0.218018*t724;
  t767 = -0.803828*t724;
  t731 = 0.553471*t724;
  t778 = 0.444895486988*t716;
  t725 = -0.218018*t724;
  t794 = 0.175248972904*t716;
  t746 = -0.553471*t724;
  t781 = 0.120666640478*t716;
  t754 = 0.803828*t724;
  t45 = -0.001*t32*t42;
  t825 = Cos(var1[6]);
  t829 = Sin(var1[6]);
  t826 = -1.*t825;
  t827 = 1. + t826;
  t828 = 0.091*t827*t127;
  t830 = 0.091*t97*t829;
  t831 = t825*t127;
  t834 = -1.*t97*t829;
  t835 = t831 + t834;
  t840 = Cos(var1[7]);
  t844 = -1.*t840;
  t845 = 1. + t844;
  t847 = Sin(var1[7]);
  t860 = t825*t97;
  t861 = t127*t829;
  t862 = t860 + t861;
  t846 = -0.04500040093286238*t845;
  t850 = -0.0846680539949003*t847;
  t851 = t846 + t850;
  t852 = t32*t42*t851;
  t853 = 1.296332362046933e-7*var1[7];
  t856 = 0.07877668146182712*t845;
  t857 = -0.04186915633414423*t847;
  t858 = t853 + t856 + t857;
  t859 = t835*t858;
  t863 = -3.2909349868922137e-7*var1[7];
  t867 = 0.03103092645718495*t845;
  t868 = -0.016492681424499736*t847;
  t869 = t863 + t867 + t868;
  t870 = t862*t869;
  t871 = -0.340999127418*t845*t835;
  t872 = -0.134322983001*t845;
  t873 = 1. + t872;
  t874 = t873*t862;
  t875 = 0.366501*t32*t42*t847;
  t876 = t871 + t874 + t875;
  t878 = -0.8656776547239999*t845;
  t879 = 1. + t878;
  t880 = t879*t835;
  t881 = -0.340999127418*t845*t862;
  t882 = 0.930418*t32*t42*t847;
  t885 = t880 + t881 + t882;
  t901 = Cos(var1[8]);
  t902 = -1.*t901;
  t903 = 1. + t902;
  t908 = Sin(var1[8]);
  t887 = -1.000000637725*t845;
  t890 = 1. + t887;
  t891 = t32*t42*t890;
  t892 = -0.930418*t835*t847;
  t893 = -0.366501*t862*t847;
  t894 = t891 + t892 + t893;
  t900 = 1.296332362046933e-7*var1[8];
  t907 = -0.14128592423750855*t903;
  t909 = -0.04186915633414423*t908;
  t910 = t900 + t907 + t909;
  t911 = t876*t910;
  t912 = 3.2909349868922137e-7*var1[8];
  t913 = 0.055653945343889656*t903;
  t914 = 0.016492681424499736*t908;
  t915 = t912 + t913 + t914;
  t916 = t885*t915;
  t917 = -0.04500040093286238*t903;
  t918 = 0.15185209683981668*t908;
  t919 = t917 + t918;
  t920 = t894*t919;
  t921 = -1.000000637725*t903;
  t922 = 1. + t921;
  t923 = t922*t894;
  t926 = -0.930418*t876*t908;
  t927 = 0.366501*t885*t908;
  t928 = t923 + t926 + t927;
  t953 = Cos(var1[9]);
  t954 = -1.*t953;
  t955 = 1. + t954;
  t957 = Sin(var1[9]);
  t932 = 0.340999127418*t903*t876;
  t933 = -0.134322983001*t903;
  t934 = 1. + t933;
  t935 = t934*t885;
  t938 = -0.366501*t894*t908;
  t939 = t932 + t935 + t938;
  t941 = -0.8656776547239999*t903;
  t942 = 1. + t941;
  t943 = t942*t876;
  t944 = 0.340999127418*t903*t885;
  t945 = 0.930418*t894*t908;
  t949 = t943 + t944 + t945;
  t956 = 0.039853038461262744*t955;
  t958 = -0.23670515095269612*t957;
  t959 = t956 + t958;
  t960 = t959*t928;
  t961 = -1.5981976069815686e-7*var1[9];
  t962 = 0.08675267452931407*t955;
  t963 = 0.014606169134372047*t957;
  t964 = t961 + t962 + t963;
  t967 = t964*t939;
  t968 = -6.295460977284962e-8*var1[9];
  t969 = -0.22023473313910558*t955;
  t970 = -0.03707996069223323*t957;
  t973 = t968 + t969 + t970;
  t974 = t973*t949;
  t975 = -0.930418*t957*t928;
  t976 = 0.340999127418*t955*t939;
  t979 = -0.8656776547239999*t955;
  t980 = 1. + t979;
  t981 = t980*t949;
  t982 = t975 + t976 + t981;
  t1007 = Cos(var1[10]);
  t1008 = -1.*t1007;
  t1009 = 1. + t1008;
  t1011 = Sin(var1[10]);
  t984 = 0.366501*t957*t928;
  t985 = -0.134322983001*t955;
  t986 = 1. + t985;
  t990 = t986*t939;
  t991 = 0.340999127418*t955*t949;
  t993 = t984 + t990 + t991;
  t996 = -1.000000637725*t955;
  t997 = 1. + t996;
  t998 = t997*t928;
  t999 = -0.366501*t957*t939;
  t1000 = 0.930418*t957*t949;
  t1002 = t998 + t999 + t1000;
  t1006 = -1.6084556086870008e-7*var1[10];
  t1010 = -0.29135406957765553*t1009;
  t1012 = -0.02832985722118838*t1011;
  t1013 = t1006 + t1010 + t1012;
  t1014 = t1013*t982;
  t1015 = -4.0833068682577724e-7*var1[10];
  t1016 = 0.11476729583292707*t1009;
  t1018 = 0.0111594154470601*t1011;
  t1019 = t1015 + t1016 + t1018;
  t1020 = t1019*t993;
  t1021 = 0.03044854601678662*t1009;
  t1022 = -0.3131431996991197*t1011;
  t1023 = t1021 + t1022;
  t1024 = t1023*t1002;
  t1025 = 0.930418*t1011*t982;
  t1026 = -0.366501*t1011*t993;
  t1027 = -1.000000637725*t1009;
  t1028 = 1. + t1027;
  t1029 = t1028*t1002;
  t1030 = t1025 + t1026 + t1029;
  t1054 = Cos(var1[11]);
  t1055 = -1.*t1054;
  t1056 = 1. + t1055;
  t1058 = Sin(var1[11]);
  t1032 = -0.8656776547239999*t1009;
  t1035 = 1. + t1032;
  t1036 = t1035*t982;
  t1037 = 0.340999127418*t1009*t993;
  t1038 = -0.930418*t1011*t1002;
  t1039 = t1036 + t1037 + t1038;
  t1043 = 0.340999127418*t1009*t982;
  t1044 = -0.134322983001*t1009;
  t1045 = 1. + t1044;
  t1046 = t1045*t993;
  t1047 = 0.366501*t1011*t1002;
  t1050 = t1043 + t1046 + t1047;
  t1057 = -0.26285954081199375*t1056;
  t1059 = -0.634735404786378*t1058;
  t1060 = t1057 + t1059;
  t1061 = t1060*t1030;
  t1062 = 6.369237629068993e-8*var1[11];
  t1063 = -0.5905692458505322*t1056;
  t1066 = 0.24456909227538925*t1058;
  t1067 = t1062 + t1063 + t1066;
  t1068 = t1067*t1039;
  t1069 = 1.6169269214444473e-7*var1[11];
  t1070 = 0.2326311605896123*t1056;
  t1072 = -0.09633822312984319*t1058;
  t1073 = t1069 + t1070 + t1072;
  t1074 = t1073*t1050;
  t1075 = 0.366501*t1058*t1030;
  t1076 = 0.340999127418*t1056*t1039;
  t1077 = -0.134322983001*t1056;
  t1078 = 1. + t1077;
  t1079 = t1078*t1050;
  t1080 = t1075 + t1076 + t1079;
  t1099 = Cos(var1[12]);
  t1100 = -1.*t1099;
  t1101 = 1. + t1100;
  t1103 = Sin(var1[12]);
  t1082 = -0.930418*t1058*t1030;
  t1083 = -0.8656776547239999*t1056;
  t1084 = 1. + t1083;
  t1085 = t1084*t1039;
  t1086 = 0.340999127418*t1056*t1050;
  t1087 = t1082 + t1085 + t1086;
  t1089 = -1.000000637725*t1056;
  t1090 = 1. + t1089;
  t1091 = t1090*t1030;
  t1092 = 0.930418*t1058*t1039;
  t1093 = -0.366501*t1058*t1050;
  t1094 = t1091 + t1092 + t1093;
  t1098 = 1.7876586242383724e-7*var1[12];
  t1102 = 0.3243041141817093*t1101;
  t1104 = 0.02270383571304597*t1103;
  t1105 = t1098 + t1102 + t1104;
  t1106 = t1105*t1080;
  t1107 = 7.041766963257243e-8*var1[12];
  t1108 = -0.8232948486053725*t1101;
  t1109 = -0.05763710717422546*t1103;
  t1110 = t1107 + t1108 + t1109;
  t1111 = t1110*t1087;
  t1112 = 0.06194758047549556*t1101;
  t1113 = -0.8848655643005321*t1103;
  t1114 = t1112 + t1113;
  t1115 = t1114*t1094;
  t1140 = Cos(var1[13]);
  t1141 = -1.*t1140;
  t1142 = 1. + t1141;
  t1145 = Sin(var1[13]);
  t1116 = -0.366501*t1103*t1080;
  t1117 = 0.930418*t1103*t1087;
  t1118 = -1.000000637725*t1101;
  t1119 = 1. + t1118;
  t1120 = t1119*t1094;
  t1121 = t1116 + t1117 + t1120;
  t1144 = -0.444895486988*t1142;
  t1123 = 0.340999127418*t1101*t1080;
  t1124 = -0.8656776547239999*t1101;
  t1125 = 1. + t1124;
  t1126 = t1125*t1087;
  t1127 = -0.930418*t1103*t1094;
  t1128 = t1123 + t1126 + t1127;
  t1151 = 0.175248972904*t1142;
  t1161 = 0.120666640478*t1142;
  t1130 = -0.134322983001*t1101;
  t1131 = 1. + t1130;
  t1132 = t1131*t1080;
  t1133 = 0.340999127418*t1101*t1087;
  t1134 = 0.366501*t1103*t1094;
  t1135 = t1132 + t1133 + t1134;
  t1173 = -0.553471*t1145;
  t1177 = 0.803828*t1145;
  t1165 = -0.218018*t1145;
  t1185 = -0.120666640478*t1142;
  t1162 = -0.803828*t1145;
  t1193 = 0.444895486988*t1142;
  t1146 = 0.218018*t1145;
  t1182 = -0.175248972904*t1142;
  t1153 = 0.553471*t1145;
  t1218 = t62*t88*t71;
  t1219 = -1.*t32*t89;
  t1220 = t1218 + t1219;
  t1222 = t32*t62;
  t1223 = t88*t71*t89;
  t1224 = t1222 + t1223;
  t1221 = -0.091*t50*t1220;
  t1225 = -0.091*t113*t1224;
  t1226 = -1.*t50*t1220;
  t1227 = t104*t1224;
  t1228 = t1226 + t1227;
  t1235 = t104*t1220;
  t1236 = t50*t1224;
  t1237 = t1235 + t1236;
  t1233 = t42*t170*t88;
  t1234 = t185*t1228;
  t1238 = t208*t1237;
  t1239 = -0.366501*t42*t164*t88;
  t1240 = 0.340999127418*t154*t1228;
  t1241 = t242*t1237;
  t1242 = t1239 + t1240 + t1241;
  t1244 = 0.930418*t42*t164*t88;
  t1245 = t254*t1228;
  t1246 = 0.340999127418*t154*t1237;
  t1247 = t1244 + t1245 + t1246;
  t1249 = t276*t42*t88;
  t1250 = -0.930418*t164*t1228;
  t1251 = 0.366501*t164*t1237;
  t1252 = t1249 + t1250 + t1251;
  t1256 = t308*t1242;
  t1257 = t323*t1247;
  t1258 = t329*t1252;
  t1259 = 0.930418*t306*t1242;
  t1260 = 0.366501*t306*t1247;
  t1261 = t336*t1252;
  t1262 = t1259 + t1260 + t1261;
  t1264 = t353*t1242;
  t1265 = -0.340999127418*t304*t1247;
  t1266 = -0.930418*t306*t1252;
  t1267 = t1264 + t1265 + t1266;
  t1269 = -0.340999127418*t304*t1242;
  t1270 = t375*t1247;
  t1271 = -0.366501*t306*t1252;
  t1272 = t1269 + t1270 + t1271;
  t1276 = t397*t1262;
  t1277 = t402*t1267;
  t1278 = t410*t1272;
  t1279 = 0.366501*t393*t1262;
  t1280 = -0.340999127418*t391*t1267;
  t1281 = t423*t1272;
  t1282 = t1279 + t1280 + t1281;
  t1284 = 0.930418*t393*t1262;
  t1285 = t437*t1267;
  t1286 = -0.340999127418*t391*t1272;
  t1287 = t1284 + t1285 + t1286;
  t1289 = t451*t1262;
  t1290 = -0.930418*t393*t1267;
  t1291 = -0.366501*t393*t1272;
  t1292 = t1289 + t1290 + t1291;
  t1296 = t481*t1282;
  t1297 = t493*t1287;
  t1298 = t503*t1292;
  t1299 = -0.366501*t479*t1282;
  t1300 = -0.930418*t479*t1287;
  t1301 = t514*t1292;
  t1302 = t1299 + t1300 + t1301;
  t1305 = t530*t1282;
  t1306 = -0.340999127418*t475*t1287;
  t1307 = 0.366501*t479*t1292;
  t1308 = t1305 + t1306 + t1307;
  t1311 = -0.340999127418*t475*t1282;
  t1312 = t538*t1287;
  t1313 = 0.930418*t479*t1292;
  t1314 = t1311 + t1312 + t1313;
  t1318 = t567*t1302;
  t1319 = t580*t1308;
  t1320 = t590*t1314;
  t1321 = 0.930418*t563*t1302;
  t1322 = -0.340999127418*t555*t1308;
  t1323 = t597*t1314;
  t1324 = t1321 + t1322 + t1323;
  t1327 = 0.366501*t563*t1302;
  t1328 = t607*t1308;
  t1329 = -0.340999127418*t555*t1314;
  t1330 = t1327 + t1328 + t1329;
  t1332 = t620*t1302;
  t1333 = -0.366501*t563*t1308;
  t1334 = -0.930418*t563*t1314;
  t1335 = t1332 + t1333 + t1334;
  t1339 = t638*t1324;
  t1340 = t643*t1330;
  t1341 = t657*t1335;
  t712 = 2.7989049814696287e-7*var1[21];
  t717 = 0.15748067958019524*t716;
  t728 = t723 + t725;
  t729 = -0.528674719304*t728;
  t732 = t730 + t731;
  t733 = -0.29871295412*t732;
  t734 = t712 + t717 + t729 + t733;
  t1342 = -0.930418*t636*t1324;
  t1343 = -0.366501*t636*t1330;
  t1344 = t670*t1335;
  t1345 = t1342 + t1343 + t1344;
  t736 = 7.591321355439789e-8*var1[21];
  t745 = -0.2845150083511607*t716;
  t747 = t730 + t746;
  t748 = 0.445034169498*t747;
  t755 = t753 + t754;
  t756 = -0.528674719304*t755;
  t758 = t736 + t745 + t748 + t756;
  t1347 = -0.340999127418*t634*t1324;
  t1348 = t681*t1330;
  t1349 = 0.366501*t636*t1335;
  t1350 = t1347 + t1348 + t1349;
  t765 = 1.9271694180831932e-7*var1[21];
  t766 = -0.3667264808254521*t716;
  t768 = t753 + t767;
  t769 = -0.29871295412*t768;
  t771 = t723 + t770;
  t775 = 0.445034169498*t771;
  t776 = t765 + t766 + t769 + t775;
  t1352 = t693*t1324;
  t1353 = -0.340999127418*t634*t1330;
  t1354 = 0.930418*t636*t1335;
  t1355 = t1352 + t1353 + t1354;
  t779 = t778 + t770;
  t782 = t781 + t767;
  t784 = -0.693671301908*t716;
  t785 = 1. + t784;
  t791 = -0.353861996165*t716;
  t792 = 1. + t791;
  t795 = t794 + t731;
  t799 = t778 + t725;
  t807 = t794 + t746;
  t811 = -0.952469601425*t716;
  t812 = 1. + t811;
  t814 = t781 + t754;
  t1217 = -0.001*t42*t88;
  t1379 = 0.091*t827*t1224;
  t1380 = 0.091*t1220*t829;
  t1381 = t825*t1224;
  t1382 = -1.*t1220*t829;
  t1383 = t1381 + t1382;
  t1391 = t825*t1220;
  t1392 = t1224*t829;
  t1394 = t1391 + t1392;
  t1389 = t42*t88*t851;
  t1390 = t1383*t858;
  t1395 = t1394*t869;
  t1396 = -0.340999127418*t845*t1383;
  t1397 = t873*t1394;
  t1398 = 0.366501*t42*t88*t847;
  t1399 = t1396 + t1397 + t1398;
  t1401 = t879*t1383;
  t1402 = -0.340999127418*t845*t1394;
  t1413 = 0.930418*t42*t88*t847;
  t1415 = t1401 + t1402 + t1413;
  t1419 = t42*t890*t88;
  t1420 = -0.930418*t1383*t847;
  t1421 = -0.366501*t1394*t847;
  t1423 = t1419 + t1420 + t1421;
  t1427 = t1399*t910;
  t1430 = t1415*t915;
  t1431 = t1423*t919;
  t1432 = t922*t1423;
  t1433 = -0.930418*t1399*t908;
  t1434 = 0.366501*t1415*t908;
  t1437 = t1432 + t1433 + t1434;
  t1439 = 0.340999127418*t903*t1399;
  t1440 = t934*t1415;
  t1441 = -0.366501*t1423*t908;
  t1442 = t1439 + t1440 + t1441;
  t1447 = t942*t1399;
  t1450 = 0.340999127418*t903*t1415;
  t1451 = 0.930418*t1423*t908;
  t1452 = t1447 + t1450 + t1451;
  t1460 = t959*t1437;
  t1461 = t964*t1442;
  t1462 = t973*t1452;
  t1463 = -0.930418*t957*t1437;
  t1464 = 0.340999127418*t955*t1442;
  t1465 = t980*t1452;
  t1468 = t1463 + t1464 + t1465;
  t1470 = 0.366501*t957*t1437;
  t1471 = t986*t1442;
  t1479 = 0.340999127418*t955*t1452;
  t1480 = t1470 + t1471 + t1479;
  t1482 = t997*t1437;
  t1483 = -0.366501*t957*t1442;
  t1484 = 0.930418*t957*t1452;
  t1485 = t1482 + t1483 + t1484;
  t1494 = t1013*t1468;
  t1495 = t1019*t1480;
  t1498 = t1023*t1485;
  t1501 = 0.930418*t1011*t1468;
  t1502 = -0.366501*t1011*t1480;
  t1503 = t1028*t1485;
  t1504 = t1501 + t1502 + t1503;
  t1506 = t1035*t1468;
  t1507 = 0.340999127418*t1009*t1480;
  t1510 = -0.930418*t1011*t1485;
  t1511 = t1506 + t1507 + t1510;
  t1513 = 0.340999127418*t1009*t1468;
  t1521 = t1045*t1480;
  t1522 = 0.366501*t1011*t1485;
  t1523 = t1513 + t1521 + t1522;
  t1527 = t1060*t1504;
  t1528 = t1067*t1511;
  t1529 = t1073*t1523;
  t1530 = 0.366501*t1058*t1504;
  t1531 = 0.340999127418*t1056*t1511;
  t1532 = t1078*t1523;
  t1533 = t1530 + t1531 + t1532;
  t1535 = -0.930418*t1058*t1504;
  t1536 = t1084*t1511;
  t1537 = 0.340999127418*t1056*t1523;
  t1540 = t1535 + t1536 + t1537;
  t1542 = t1090*t1504;
  t1543 = 0.930418*t1058*t1511;
  t1544 = -0.366501*t1058*t1523;
  t1545 = t1542 + t1543 + t1544;
  t1549 = t1105*t1533;
  t1550 = t1110*t1540;
  t1551 = t1114*t1545;
  t1139 = -2.7989049814696287e-7*var1[13];
  t1143 = 0.15748067958019524*t1142;
  t1148 = t1144 + t1146;
  t1149 = -0.528674719304*t1148;
  t1154 = t1151 + t1153;
  t1155 = 0.29871295412*t1154;
  t1156 = t1139 + t1143 + t1149 + t1155;
  t1554 = -0.366501*t1103*t1533;
  t1555 = 0.930418*t1103*t1540;
  t1556 = t1119*t1545;
  t1557 = t1554 + t1555 + t1556;
  t1159 = -1.9271694180831932e-7*var1[13];
  t1160 = -0.3667264808254521*t1142;
  t1163 = t1161 + t1162;
  t1164 = 0.29871295412*t1163;
  t1166 = t1144 + t1165;
  t1167 = 0.445034169498*t1166;
  t1169 = t1159 + t1160 + t1164 + t1167;
  t1559 = 0.340999127418*t1101*t1533;
  t1560 = t1125*t1540;
  t1561 = -0.930418*t1103*t1545;
  t1562 = t1559 + t1560 + t1561;
  t1171 = 7.591321355439789e-8*var1[13];
  t1172 = 0.2845150083511607*t1142;
  t1175 = t1151 + t1173;
  t1176 = 0.445034169498*t1175;
  t1178 = t1161 + t1177;
  t1179 = -0.528674719304*t1178;
  t1180 = t1171 + t1172 + t1176 + t1179;
  t1564 = t1131*t1533;
  t1565 = 0.340999127418*t1101*t1540;
  t1566 = 0.366501*t1103*t1545;
  t1567 = t1564 + t1565 + t1566;
  t1183 = t1182 + t1173;
  t1186 = t1185 + t1177;
  t1188 = -0.952469601425*t1142;
  t1189 = 1. + t1188;
  t1194 = t1193 + t1165;
  t1196 = -0.693671301908*t1142;
  t1197 = 1. + t1196;
  t1199 = t1185 + t1162;
  t1203 = -0.353861996165*t1142;
  t1204 = 1. + t1203;
  t1206 = t1193 + t1146;
  t1208 = t1182 + t1153;
  t1597 = -0.091*t42*t62*t50;
  t1602 = -0.091*t113*t42*t89;
  t1603 = -1.*t42*t62*t50;
  t1604 = t104*t42*t89;
  t1605 = t1603 + t1604;
  t1612 = t104*t42*t62;
  t1613 = t42*t50*t89;
  t1614 = t1612 + t1613;
  t1610 = -1.*t170*t71;
  t1611 = t185*t1605;
  t1616 = t208*t1614;
  t1617 = 0.366501*t164*t71;
  t1618 = 0.340999127418*t154*t1605;
  t1619 = t242*t1614;
  t1620 = t1617 + t1618 + t1619;
  t1622 = -0.930418*t164*t71;
  t1624 = t254*t1605;
  t1625 = 0.340999127418*t154*t1614;
  t1626 = t1622 + t1624 + t1625;
  t1628 = -1.*t276*t71;
  t1629 = -0.930418*t164*t1605;
  t1630 = 0.366501*t164*t1614;
  t1631 = t1628 + t1629 + t1630;
  t1635 = t308*t1620;
  t1636 = t323*t1626;
  t1637 = t329*t1631;
  t1638 = 0.930418*t306*t1620;
  t1639 = 0.366501*t306*t1626;
  t1640 = t336*t1631;
  t1641 = t1638 + t1639 + t1640;
  t1643 = t353*t1620;
  t1644 = -0.340999127418*t304*t1626;
  t1645 = -0.930418*t306*t1631;
  t1646 = t1643 + t1644 + t1645;
  t1648 = -0.340999127418*t304*t1620;
  t1649 = t375*t1626;
  t1650 = -0.366501*t306*t1631;
  t1651 = t1648 + t1649 + t1650;
  t1655 = t397*t1641;
  t1656 = t402*t1646;
  t1657 = t410*t1651;
  t1658 = 0.366501*t393*t1641;
  t1659 = -0.340999127418*t391*t1646;
  t1660 = t423*t1651;
  t1661 = t1658 + t1659 + t1660;
  t1663 = 0.930418*t393*t1641;
  t1664 = t437*t1646;
  t1665 = -0.340999127418*t391*t1651;
  t1666 = t1663 + t1664 + t1665;
  t1668 = t451*t1641;
  t1669 = -0.930418*t393*t1646;
  t1670 = -0.366501*t393*t1651;
  t1671 = t1668 + t1669 + t1670;
  t1675 = t481*t1661;
  t1676 = t493*t1666;
  t1677 = t503*t1671;
  t1678 = -0.366501*t479*t1661;
  t1679 = -0.930418*t479*t1666;
  t1680 = t514*t1671;
  t1681 = t1678 + t1679 + t1680;
  t1683 = t530*t1661;
  t1684 = -0.340999127418*t475*t1666;
  t1685 = 0.366501*t479*t1671;
  t1686 = t1683 + t1684 + t1685;
  t1688 = -0.340999127418*t475*t1661;
  t1689 = t538*t1666;
  t1690 = 0.930418*t479*t1671;
  t1691 = t1688 + t1689 + t1690;
  t1695 = t567*t1681;
  t1696 = t580*t1686;
  t1697 = t590*t1691;
  t1698 = 0.930418*t563*t1681;
  t1699 = -0.340999127418*t555*t1686;
  t1700 = t597*t1691;
  t1701 = t1698 + t1699 + t1700;
  t1703 = 0.366501*t563*t1681;
  t1704 = t607*t1686;
  t1705 = -0.340999127418*t555*t1691;
  t1706 = t1703 + t1704 + t1705;
  t1708 = t620*t1681;
  t1709 = -0.366501*t563*t1686;
  t1710 = -0.930418*t563*t1691;
  t1711 = t1708 + t1709 + t1710;
  t1715 = t638*t1701;
  t1716 = t643*t1706;
  t1717 = t657*t1711;
  t1718 = -0.930418*t636*t1701;
  t1719 = -0.366501*t636*t1706;
  t1720 = t670*t1711;
  t1721 = t1718 + t1719 + t1720;
  t1723 = -0.340999127418*t634*t1701;
  t1724 = t681*t1706;
  t1725 = 0.366501*t636*t1711;
  t1726 = t1723 + t1724 + t1725;
  t1728 = t693*t1701;
  t1729 = -0.340999127418*t634*t1706;
  t1730 = 0.930418*t636*t1711;
  t1731 = t1728 + t1729 + t1730;
  t1600 = 0.001*t71;
  t1760 = 0.091*t42*t827*t89;
  t1761 = 0.091*t42*t62*t829;
  t1762 = t42*t825*t89;
  t1763 = -1.*t42*t62*t829;
  t1764 = t1762 + t1763;
  t1770 = t42*t62*t825;
  t1771 = t42*t89*t829;
  t1772 = t1770 + t1771;
  t1768 = -1.*t71*t851;
  t1769 = t1764*t858;
  t1773 = t1772*t869;
  t1780 = -0.340999127418*t845*t1764;
  t1781 = t873*t1772;
  t1782 = -0.366501*t71*t847;
  t1783 = t1780 + t1781 + t1782;
  t1774 = t879*t1764;
  t1775 = -0.340999127418*t845*t1772;
  t1776 = -0.930418*t71*t847;
  t1777 = t1774 + t1775 + t1776;
  t1785 = -1.*t890*t71;
  t1786 = -0.930418*t1764*t847;
  t1787 = -0.366501*t1772*t847;
  t1788 = t1785 + t1786 + t1787;
  t1792 = t1783*t910;
  t1793 = t1777*t915;
  t1794 = t1788*t919;
  t1795 = t922*t1788;
  t1796 = 0.366501*t1777*t908;
  t1797 = -0.930418*t1783*t908;
  t1798 = t1795 + t1796 + t1797;
  t1800 = t934*t1777;
  t1801 = 0.340999127418*t903*t1783;
  t1802 = -0.366501*t1788*t908;
  t1803 = t1800 + t1801 + t1802;
  t1805 = 0.340999127418*t903*t1777;
  t1806 = t942*t1783;
  t1807 = 0.930418*t1788*t908;
  t1808 = t1805 + t1806 + t1807;
  t1812 = t959*t1798;
  t1813 = t964*t1803;
  t1814 = t973*t1808;
  t1815 = -0.930418*t957*t1798;
  t1816 = 0.340999127418*t955*t1803;
  t1817 = t980*t1808;
  t1818 = t1815 + t1816 + t1817;
  t1820 = 0.366501*t957*t1798;
  t1821 = t986*t1803;
  t1822 = 0.340999127418*t955*t1808;
  t1823 = t1820 + t1821 + t1822;
  t1825 = t997*t1798;
  t1826 = -0.366501*t957*t1803;
  t1827 = 0.930418*t957*t1808;
  t1828 = t1825 + t1826 + t1827;
  t1832 = t1013*t1818;
  t1833 = t1019*t1823;
  t1834 = t1023*t1828;
  t1835 = 0.930418*t1011*t1818;
  t1836 = -0.366501*t1011*t1823;
  t1837 = t1028*t1828;
  t1838 = t1835 + t1836 + t1837;
  t1840 = t1035*t1818;
  t1841 = 0.340999127418*t1009*t1823;
  t1842 = -0.930418*t1011*t1828;
  t1843 = t1840 + t1841 + t1842;
  t1845 = 0.340999127418*t1009*t1818;
  t1846 = t1045*t1823;
  t1847 = 0.366501*t1011*t1828;
  t1848 = t1845 + t1846 + t1847;
  t1852 = t1060*t1838;
  t1853 = t1067*t1843;
  t1854 = t1073*t1848;
  t1855 = 0.366501*t1058*t1838;
  t1856 = 0.340999127418*t1056*t1843;
  t1857 = t1078*t1848;
  t1858 = t1855 + t1856 + t1857;
  t1860 = -0.930418*t1058*t1838;
  t1861 = t1084*t1843;
  t1862 = 0.340999127418*t1056*t1848;
  t1863 = t1860 + t1861 + t1862;
  t1865 = t1090*t1838;
  t1866 = 0.930418*t1058*t1843;
  t1867 = -0.366501*t1058*t1848;
  t1868 = t1865 + t1866 + t1867;
  t1872 = t1105*t1858;
  t1873 = t1110*t1863;
  t1874 = t1114*t1868;
  t1875 = -0.366501*t1103*t1858;
  t1876 = 0.930418*t1103*t1863;
  t1877 = t1119*t1868;
  t1878 = t1875 + t1876 + t1877;
  t1880 = 0.340999127418*t1101*t1858;
  t1881 = t1125*t1863;
  t1882 = -0.930418*t1103*t1868;
  t1883 = t1880 + t1881 + t1882;
  t1885 = t1131*t1858;
  t1886 = 0.340999127418*t1101*t1863;
  t1887 = 0.366501*t1103*t1868;
  t1888 = t1885 + t1886 + t1887;
  p_output1[0]=0.02164015026920347*(22.212*var1[0] + 0.8188*(t100 + t128 + t171 + t202 + t224 - 0.046986*t246 - 0.109508*t273 - 0.045*t285 + var1[0]) + 6.2443*(t100 + t128 + t171 + t202 + t224 + t309 + t324 + t330 - 0.045*t340 - 0.108789*t363 - 0.138152*t378 + var1[0]) + 0.9151*(t100 + t128 - 0.091*t133 + t45 + var1[0]) + 1.2271*(t100 + t128 + t171 + t202 + t224 + t309 + t324 + t330 + t398 + t403 + t413 - 0.165064*t427 - 0.189386*t442 + 0.039853*t460 + var1[0]) + 0.8958*(t100 + t128 + t171 + t202 + t224 + t309 + t324 + t330 + t398 + t403 + t413 + t484 + t494 + t504 + 0.030448*t516 - 0.193079*t534 - 0.260506*t541 + var1[0]) + 1.3229*(t100 + t128 + t171 + t202 + t224 + t309 + t324 + t330 + t398 + t403 + t413 + t484 + t494 + t504 + t573 + t581 + t591 - 0.559721*t601 - 0.310942*t615 - 0.26286*t624 + var1[0]) + 0.0439*(t100 + t128 + t171 + t202 + t224 + t309 + t324 + t330 + t398 + t403 + t413 + t484 + t494 + t504 + t573 + t581 + t591 + t639 + t648 + t658 + 0.061947*t672 - 0.402615*t686 - 0.792446*t701 + var1[0]) + 0.5313*(t100 + t128 + t171 + t202 + t224 + t309 + t324 + t330 + t398 + t403 + t413 + t484 + t494 + t504 + t573 + t581 + t591 + t639 + t648 + t658 + t672*t734 + t686*t758 + t701*t776 - 0.792446*(t672*t779 + t686*t782 + t701*t785) + 0.061947*(t672*t792 + t686*t795 + t701*t799) - 0.402615*(t672*t807 + t686*t812 + t701*t814) + var1[0]) + 0.9151*(t45 + t828 + t830 + 0.091*t835 + var1[0]) + 0.8188*(t828 + t830 + t852 + t859 + t870 - 0.046986*t876 + 0.109508*t885 - 0.045*t894 + var1[0]) + 6.2443*(t828 + t830 + t852 + t859 + t870 + t911 + t916 + t920 - 0.045*t928 + 0.138152*t939 - 0.108789*t949 + var1[0]) + 0.8958*(t1014 + t1020 + t1024 + 0.030448*t1030 - 0.260506*t1039 + 0.193079*t1050 + t828 + t830 + t852 + t859 + t870 + t911 + t916 + t920 + t960 + t967 + t974 + var1[0]) + 1.3229*(t1014 + t1020 + t1024 + t1061 + t1068 + t1074 + 0.310942*t1080 - 0.559721*t1087 - 0.26286*t1094 + t828 + t830 + t852 + t859 + t870 + t911 + t916 + t920 + t960 + t967 + t974 + var1[0]) + 0.0439*(t1014 + t1020 + t1024 + t1061 + t1068 + t1074 + t1106 + t1111 + t1115 + 0.061947*t1121 - 0.792446*t1128 + 0.402615*t1135 + t828 + t830 + t852 + t859 + t870 + t911 + t916 + t920 + t960 + t967 + t974 + var1[0]) + 0.5313*(t1014 + t1020 + t1024 + t1061 + t1068 + t1074 + t1106 + t1111 + t1115 + t1121*t1156 + t1128*t1169 + t1135*t1180 + 0.402615*(t1121*t1183 + t1128*t1186 + t1135*t1189) - 0.792446*(t1121*t1194 + t1128*t1197 + t1135*t1199) + 0.061947*(t1121*t1204 + t1128*t1206 + t1135*t1208) + t828 + t830 + t852 + t859 + t870 + t911 + t916 + t920 + t960 + t967 + t974 + var1[0]) + 1.2271*(0.039853*t1002 + t828 + t830 + t852 + t859 + t870 + t911 + t916 + t920 + t960 + t967 + t974 - 0.189386*t982 + 0.165064*t993 + var1[0]));
  p_output1[1]=0.02164015026920347*(22.212*var1[1] + 0.9151*(t1217 + t1221 + t1225 - 0.091*t1228 + var1[1]) + 0.8188*(t1221 + t1225 + t1233 + t1234 + t1238 - 0.046986*t1242 - 0.109508*t1247 - 0.045*t1252 + var1[1]) + 6.2443*(t1221 + t1225 + t1233 + t1234 + t1238 + t1256 + t1257 + t1258 - 0.045*t1262 - 0.108789*t1267 - 0.138152*t1272 + var1[1]) + 1.2271*(t1221 + t1225 + t1233 + t1234 + t1238 + t1256 + t1257 + t1258 + t1276 + t1277 + t1278 - 0.165064*t1282 - 0.189386*t1287 + 0.039853*t1292 + var1[1]) + 0.8958*(t1221 + t1225 + t1233 + t1234 + t1238 + t1256 + t1257 + t1258 + t1276 + t1277 + t1278 + t1296 + t1297 + t1298 + 0.030448*t1302 - 0.193079*t1308 - 0.260506*t1314 + var1[1]) + 1.3229*(t1221 + t1225 + t1233 + t1234 + t1238 + t1256 + t1257 + t1258 + t1276 + t1277 + t1278 + t1296 + t1297 + t1298 + t1318 + t1319 + t1320 - 0.559721*t1324 - 0.310942*t1330 - 0.26286*t1335 + var1[1]) + 0.0439*(t1221 + t1225 + t1233 + t1234 + t1238 + t1256 + t1257 + t1258 + t1276 + t1277 + t1278 + t1296 + t1297 + t1298 + t1318 + t1319 + t1320 + t1339 + t1340 + t1341 + 0.061947*t1345 - 0.402615*t1350 - 0.792446*t1355 + var1[1]) + 0.9151*(t1217 + t1379 + t1380 + 0.091*t1383 + var1[1]) + 0.8188*(t1379 + t1380 + t1389 + t1390 + t1395 - 0.046986*t1399 + 0.109508*t1415 - 0.045*t1423 + var1[1]) + 6.2443*(t1379 + t1380 + t1389 + t1390 + t1395 + t1427 + t1430 + t1431 - 0.045*t1437 + 0.138152*t1442 - 0.108789*t1452 + var1[1]) + 1.2271*(t1379 + t1380 + t1389 + t1390 + t1395 + t1427 + t1430 + t1431 + t1460 + t1461 + t1462 - 0.189386*t1468 + 0.165064*t1480 + 0.039853*t1485 + var1[1]) + 0.8958*(t1379 + t1380 + t1389 + t1390 + t1395 + t1427 + t1430 + t1431 + t1460 + t1461 + t1462 + t1494 + t1495 + t1498 + 0.030448*t1504 - 0.260506*t1511 + 0.193079*t1523 + var1[1]) + 1.3229*(t1379 + t1380 + t1389 + t1390 + t1395 + t1427 + t1430 + t1431 + t1460 + t1461 + t1462 + t1494 + t1495 + t1498 + t1527 + t1528 + t1529 + 0.310942*t1533 - 0.559721*t1540 - 0.26286*t1545 + var1[1]) + 0.0439*(t1379 + t1380 + t1389 + t1390 + t1395 + t1427 + t1430 + t1431 + t1460 + t1461 + t1462 + t1494 + t1495 + t1498 + t1527 + t1528 + t1529 + t1549 + t1550 + t1551 + 0.061947*t1557 - 0.792446*t1562 + 0.402615*t1567 + var1[1]) + 0.5313*(t1379 + t1380 + t1389 + t1390 + t1395 + t1427 + t1430 + t1431 + t1460 + t1461 + t1462 + t1494 + t1495 + t1498 + t1527 + t1528 + t1529 + t1549 + t1550 + t1551 + t1156*t1557 + t1169*t1562 + t1180*t1567 + 0.402615*(t1183*t1557 + t1186*t1562 + t1189*t1567) - 0.792446*(t1194*t1557 + t1197*t1562 + t1199*t1567) + 0.061947*(t1204*t1557 + t1206*t1562 + t1208*t1567) + var1[1]) + 0.5313*(t1221 + t1225 + t1233 + t1234 + t1238 + t1256 + t1257 + t1258 + t1276 + t1277 + t1278 + t1296 + t1297 + t1298 + t1318 + t1319 + t1320 + t1339 + t1340 + t1341 + t1345*t734 + t1350*t758 + t1355*t776 - 0.792446*(t1345*t779 + t1350*t782 + t1355*t785) + 0.061947*(t1345*t792 + t1350*t795 + t1355*t799) - 0.402615*(t1345*t807 + t1350*t812 + t1355*t814) + var1[1]));
  p_output1[2]=0.02164015026920347*(22.212*var1[2] + 0.9151*(t1597 + t1600 + t1602 - 0.091*t1605 + var1[2]) + 0.8188*(t1597 + t1602 + t1610 + t1611 + t1616 - 0.046986*t1620 - 0.109508*t1626 - 0.045*t1631 + var1[2]) + 6.2443*(t1597 + t1602 + t1610 + t1611 + t1616 + t1635 + t1636 + t1637 - 0.045*t1641 - 0.108789*t1646 - 0.138152*t1651 + var1[2]) + 1.2271*(t1597 + t1602 + t1610 + t1611 + t1616 + t1635 + t1636 + t1637 + t1655 + t1656 + t1657 - 0.165064*t1661 - 0.189386*t1666 + 0.039853*t1671 + var1[2]) + 0.8958*(t1597 + t1602 + t1610 + t1611 + t1616 + t1635 + t1636 + t1637 + t1655 + t1656 + t1657 + t1675 + t1676 + t1677 + 0.030448*t1681 - 0.193079*t1686 - 0.260506*t1691 + var1[2]) + 1.3229*(t1597 + t1602 + t1610 + t1611 + t1616 + t1635 + t1636 + t1637 + t1655 + t1656 + t1657 + t1675 + t1676 + t1677 + t1695 + t1696 + t1697 - 0.559721*t1701 - 0.310942*t1706 - 0.26286*t1711 + var1[2]) + 0.0439*(t1597 + t1602 + t1610 + t1611 + t1616 + t1635 + t1636 + t1637 + t1655 + t1656 + t1657 + t1675 + t1676 + t1677 + t1695 + t1696 + t1697 + t1715 + t1716 + t1717 + 0.061947*t1721 - 0.402615*t1726 - 0.792446*t1731 + var1[2]) + 0.9151*(t1600 + t1760 + t1761 + 0.091*t1764 + var1[2]) + 0.8188*(t1760 + t1761 + t1768 + t1769 + t1773 + 0.109508*t1777 - 0.046986*t1783 - 0.045*t1788 + var1[2]) + 6.2443*(t1760 + t1761 + t1768 + t1769 + t1773 + t1792 + t1793 + t1794 - 0.045*t1798 + 0.138152*t1803 - 0.108789*t1808 + var1[2]) + 1.2271*(t1760 + t1761 + t1768 + t1769 + t1773 + t1792 + t1793 + t1794 + t1812 + t1813 + t1814 - 0.189386*t1818 + 0.165064*t1823 + 0.039853*t1828 + var1[2]) + 0.8958*(t1760 + t1761 + t1768 + t1769 + t1773 + t1792 + t1793 + t1794 + t1812 + t1813 + t1814 + t1832 + t1833 + t1834 + 0.030448*t1838 - 0.260506*t1843 + 0.193079*t1848 + var1[2]) + 1.3229*(t1760 + t1761 + t1768 + t1769 + t1773 + t1792 + t1793 + t1794 + t1812 + t1813 + t1814 + t1832 + t1833 + t1834 + t1852 + t1853 + t1854 + 0.310942*t1858 - 0.559721*t1863 - 0.26286*t1868 + var1[2]) + 0.0439*(t1760 + t1761 + t1768 + t1769 + t1773 + t1792 + t1793 + t1794 + t1812 + t1813 + t1814 + t1832 + t1833 + t1834 + t1852 + t1853 + t1854 + t1872 + t1873 + t1874 + 0.061947*t1878 - 0.792446*t1883 + 0.402615*t1888 + var1[2]) + 0.5313*(t1760 + t1761 + t1768 + t1769 + t1773 + t1792 + t1793 + t1794 + t1812 + t1813 + t1814 + t1832 + t1833 + t1834 + t1852 + t1853 + t1854 + t1872 + t1873 + t1874 + t1156*t1878 + t1169*t1883 + t1180*t1888 + 0.402615*(t1183*t1878 + t1186*t1883 + t1189*t1888) - 0.792446*(t1194*t1878 + t1197*t1883 + t1199*t1888) + 0.061947*(t1204*t1878 + t1206*t1883 + t1208*t1888) + var1[2]) + 0.5313*(t1597 + t1602 + t1610 + t1611 + t1616 + t1635 + t1636 + t1637 + t1655 + t1656 + t1657 + t1675 + t1676 + t1677 + t1695 + t1696 + t1697 + t1715 + t1716 + t1717 + t1721*t734 + t1726*t758 + t1731*t776 - 0.792446*(t1721*t779 + t1726*t782 + t1731*t785) + 0.061947*(t1721*t792 + t1726*t795 + t1731*t799) - 0.402615*(t1721*t807 + t1726*t812 + t1731*t814) + var1[2]));
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "p_com.hh"

namespace SymExpression
{

void p_com_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
