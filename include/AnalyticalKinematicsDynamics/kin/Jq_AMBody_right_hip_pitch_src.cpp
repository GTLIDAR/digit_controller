/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:09:54 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jq_AMBody_right_hip_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t279;
  double t329;
  double t335;
  double t978;
  double t1825;
  double t1631;
  double t1657;
  double t1705;
  double t812;
  double t871;
  double t906;
  double t937;
  double t954;
  double t1205;
  double t1208;
  double t1270;
  double t1277;
  double t1362;
  double t1872;
  double t2012;
  double t2046;
  double t2080;
  double t2135;
  double t2189;
  double t2212;
  double t3171;
  double t2590;
  double t2702;
  double t2869;
  double t3047;
  double t3048;
  double t3049;
  double t3051;
  double t3125;
  double t2585;
  double t3176;
  double t3201;
  double t3225;
  double t3271;
  double t3278;
  double t3300;
  double t3323;
  double t3333;
  double t66;
  double t1765;
  double t1782;
  double t1377;
  double t1453;
  double t1135;
  double t1142;
  double t2501;
  double t2537;
  double t3674;
  double t3675;
  double t3710;
  double t3748;
  double t3829;
  double t3837;
  double t3866;
  double t3888;
  double t3901;
  double t3907;
  double t3912;
  double t3917;
  double t3949;
  double t3971;
  double t4008;
  double t4047;
  double t4055;
  double t4058;
  double t4079;
  double t4088;
  double t4093;
  double t4097;
  double t4117;
  double t4118;
  double t4129;
  double t4154;
  double t3540;
  double t4264;
  double t4269;
  double t4294;
  double t4296;
  double t4339;
  double t4340;
  double t4418;
  double t4429;
  double t4495;
  double t4506;
  double t4524;
  double t4526;
  double t4527;
  double t4528;
  double t1168;
  double t1617;
  double t2220;
  double t2286;
  double t2430;
  double t3159;
  double t3355;
  double t3379;
  double t3423;
  double t3437;
  double t3446;
  double t3493;
  double t3544;
  double t3548;
  double t3571;
  double t3593;
  double t3860;
  double t3931;
  double t4068;
  double t4075;
  double t4077;
  double t4099;
  double t4168;
  double t4172;
  double t4173;
  double t4195;
  double t4198;
  double t4200;
  double t4236;
  double t4237;
  double t4247;
  double t4254;
  double t4293;
  double t4337;
  double t4355;
  double t4361;
  double t4371;
  double t4513;
  double t4549;
  double t4556;
  double t4558;
  double t4574;
  double t4578;
  double t4581;
  double t4586;
  double t4595;
  double t4596;
  double t4622;
  double t4690;
  double t4692;
  double t4701;
  double t4709;
  double t4721;
  double t4722;
  double t4724;
  double t4726;
  double t4727;
  double t4739;
  double t4740;
  double t4752;
  double t4755;
  double t4758;
  double t4759;
  double t4764;
  double t4774;
  double t4777;
  double t4797;
  double t4802;
  double t4808;
  double t4820;
  double t4825;
  double t4826;
  double t4833;
  double t4839;
  double t4840;
  double t4934;
  double t4890;
  double t4907;
  double t4925;
  double t5026;
  double t5036;
  double t5064;
  double t5017;
  double t5147;
  double t5182;
  double t5193;
  double t5139;
  double t4928;
  double t4935;
  double t4942;
  double t4970;
  double t4975;
  double t4978;
  double t4979;
  double t4992;
  double t5004;
  double t5020;
  double t5070;
  double t5107;
  double t5109;
  double t5114;
  double t5117;
  double t5119;
  double t5130;
  double t5134;
  double t5145;
  double t5199;
  double t5221;
  double t5227;
  double t5235;
  double t5258;
  double t5263;
  double t5265;
  double t5267;
  double t5363;
  double t5366;
  double t5370;
  double t5374;
  double t5390;
  double t5391;
  double t5393;
  double t5394;
  double t5324;
  double t5333;
  double t5336;
  double t5338;
  double t5418;
  double t5425;
  double t5427;
  double t5382;
  double t5396;
  double t5398;
  double t5527;
  double t5530;
  double t5542;
  double t5549;
  double t5561;
  double t5567;
  double t5585;
  double t5601;
  double t5486;
  double t5487;
  double t5491;
  double t5493;
  double t5634;
  double t5638;
  double t5644;
  double t5556;
  double t5606;
  double t5616;
  double t5785;
  double t5791;
  double t5795;
  double t5830;
  double t5841;
  double t5858;
  double t5859;
  double t5865;
  double t5713;
  double t5721;
  double t5732;
  double t5735;
  double t5892;
  double t5900;
  double t5903;
  double t5832;
  double t5875;
  double t5887;
  double t5340;
  double t5341;
  double t5342;
  double t5345;
  double t5350;
  double t5356;
  double t5411;
  double t5433;
  double t5439;
  double t5443;
  double t5444;
  double t5445;
  double t5449;
  double t5450;
  double t5456;
  double t5461;
  double t5462;
  double t5466;
  double t5495;
  double t5498;
  double t5505;
  double t5508;
  double t5512;
  double t5525;
  double t5633;
  double t5648;
  double t5656;
  double t5658;
  double t5665;
  double t5669;
  double t5682;
  double t5686;
  double t5687;
  double t5698;
  double t5699;
  double t5706;
  double t5738;
  double t5745;
  double t5754;
  double t5758;
  double t5771;
  double t5782;
  double t5889;
  double t5905;
  double t5907;
  double t5909;
  double t5916;
  double t5929;
  double t5930;
  double t5934;
  double t5938;
  double t5940;
  double t5944;
  double t5949;
  double t6023;
  double t6026;
  double t6027;
  double t6034;
  double t6045;
  double t6048;
  double t6063;
  double t6065;
  double t6067;
  double t6155;
  double t6156;
  double t6163;
  double t6166;
  double t6172;
  double t6183;
  double t6199;
  double t6202;
  double t6121;
  double t6124;
  double t6136;
  double t6137;
  double t6230;
  double t6258;
  double t6264;
  double t6168;
  double t6220;
  double t6224;
  double t6322;
  double t6325;
  double t6338;
  double t6348;
  double t6377;
  double t6379;
  double t6410;
  double t6422;
  double t6423;
  double t6426;
  double t6431;
  double t6442;
  double t6450;
  double t6457;
  double t6396;
  double t6398;
  double t6401;
  double t6402;
  double t6501;
  double t6505;
  double t6508;
  double t6428;
  double t6473;
  double t6480;
  double t6685;
  double t6687;
  double t6692;
  double t6703;
  double t6704;
  double t6707;
  double t6645;
  double t6647;
  double t6648;
  double t6732;
  double t6738;
  double t6739;
  double t6698;
  double t6711;
  double t6713;
  double t6029;
  double t6051;
  double t6055;
  double t6062;
  double t6071;
  double t6095;
  double t6099;
  double t6100;
  double t6103;
  double t6143;
  double t6225;
  double t6270;
  double t6271;
  double t6274;
  double t6275;
  double t6281;
  double t6282;
  double t6283;
  double t6285;
  double t6302;
  double t6304;
  double t6320;
  double t6328;
  double t6360;
  double t6365;
  double t6366;
  double t6368;
  double t6371;
  double t6381;
  double t6389;
  double t6394;
  double t6407;
  double t6497;
  double t6512;
  double t6517;
  double t6540;
  double t6560;
  double t6564;
  double t6571;
  double t6602;
  double t6606;
  double t6610;
  double t6617;
  double t6618;
  double t6628;
  double t6649;
  double t6651;
  double t6662;
  double t6666;
  double t6669;
  double t6718;
  double t6743;
  double t6744;
  double t6747;
  double t6751;
  double t6752;
  double t6753;
  double t6765;
  double t6768;
  double t6776;
  double t6779;
  double t6788;
  t279 = Cos(var1[19]);
  t329 = -1.*t279;
  t335 = 1. + t329;
  t978 = Sin(var1[18]);
  t1825 = Sin(var1[19]);
  t1631 = Cos(var1[18]);
  t1657 = -1.*t1631;
  t1705 = 1. + t1657;
  t812 = -0.8656776547239999*t335;
  t871 = 1. + t812;
  t906 = -0.366501*t871;
  t937 = -0.3172717261340007*t335;
  t954 = t906 + t937;
  t1205 = -0.134322983001*t335;
  t1208 = 1. + t1205;
  t1270 = 0.930418*t1208;
  t1277 = 0.12497652119782442*t335;
  t1362 = t1270 + t1277;
  t1872 = -0.930418*t1825;
  t2012 = 0. + t1872;
  t2046 = -0.366501*t2012;
  t2080 = -0.366501*t1825;
  t2135 = 0. + t2080;
  t2189 = 0.930418*t2135;
  t2212 = t2046 + t2189;
  t3171 = Cos(var1[17]);
  t2590 = 0.340999127418*t1705*t954;
  t2702 = -0.8656776547239999*t1705;
  t2869 = 1. + t2702;
  t3047 = t2869*t1362;
  t3048 = -0.930418*t978;
  t3049 = 0. + t3048;
  t3051 = t3049*t2212;
  t3125 = 0. + t2590 + t3047 + t3051;
  t2585 = Sin(var1[17]);
  t3176 = -0.134322983001*t1705;
  t3201 = 1. + t3176;
  t3225 = t3201*t954;
  t3271 = 0.340999127418*t1705*t1362;
  t3278 = 0.366501*t978;
  t3300 = 0. + t3278;
  t3323 = t3300*t2212;
  t3333 = 0. + t3225 + t3271 + t3323;
  t66 = Cos(var1[4]);
  t1765 = -1.000000637725*t1705;
  t1782 = 1. + t1765;
  t1377 = 0.930418*t978;
  t1453 = 0. + t1377;
  t1135 = -0.366501*t978;
  t1142 = 0. + t1135;
  t2501 = Sin(var1[4]);
  t2537 = Cos(var1[5]);
  t3674 = -1.000000637725*t335;
  t3675 = 1. + t3674;
  t3710 = -0.707107*t3675;
  t3748 = -0.657905*t2012;
  t3829 = -0.259155*t2135;
  t3837 = t3710 + t3748 + t3829;
  t3866 = -0.259155*t1208;
  t3888 = 0.22434503092393926*t335;
  t3901 = 0.366501*t1825;
  t3907 = 0. + t3901;
  t3912 = -0.707107*t3907;
  t3917 = t3866 + t3888 + t3912;
  t3949 = -0.657905*t871;
  t3971 = 0.0883716288660118*t335;
  t4008 = 0.930418*t1825;
  t4047 = 0. + t4008;
  t4055 = -0.707107*t4047;
  t4058 = t3949 + t3971 + t4055;
  t4079 = t3300*t3837;
  t4088 = 0.340999127418*t1705*t3917;
  t4093 = t3201*t4058;
  t4097 = 0. + t4079 + t4088 + t4093;
  t4117 = t3049*t3837;
  t4118 = t2869*t3917;
  t4129 = 0.340999127418*t1705*t4058;
  t4154 = 0. + t4117 + t4118 + t4129;
  t3540 = Sin(var1[5]);
  t4264 = 0.707107*t3675;
  t4269 = t4264 + t3748 + t3829;
  t4294 = 0.707107*t3907;
  t4296 = t3866 + t3888 + t4294;
  t4339 = 0.707107*t4047;
  t4340 = t3949 + t3971 + t4339;
  t4418 = t3300*t4269;
  t4429 = 0.340999127418*t1705*t4296;
  t4495 = t3201*t4340;
  t4506 = 0. + t4418 + t4429 + t4495;
  t4524 = t3049*t4269;
  t4526 = t2869*t4296;
  t4527 = 0.340999127418*t1705*t4340;
  t4528 = 0. + t4524 + t4526 + t4527;
  t1168 = t954*t1142;
  t1617 = t1362*t1453;
  t2220 = t1782*t2212;
  t2286 = 0. + t1168 + t1617 + t2220;
  t2430 = -1.*t66*t2286;
  t3159 = -1.*t2585*t3125;
  t3355 = t3171*t3333;
  t3379 = 0. + t3159 + t3355;
  t3423 = t2537*t3379;
  t3437 = t3171*t3125;
  t3446 = t2585*t3333;
  t3493 = 0. + t3437 + t3446;
  t3544 = t3493*t3540;
  t3548 = 0. + t3423 + t3544;
  t3571 = -1.*t2501*t3548;
  t3593 = t2430 + t3571;
  t3860 = t1782*t3837;
  t3931 = t1453*t3917;
  t4068 = t1142*t4058;
  t4075 = 0. + t3860 + t3931 + t4068;
  t4077 = -1.*t66*t4075;
  t4099 = t3171*t4097;
  t4168 = -1.*t2585*t4154;
  t4172 = 0. + t4099 + t4168;
  t4173 = t2537*t4172;
  t4195 = t2585*t4097;
  t4198 = t3171*t4154;
  t4200 = 0. + t4195 + t4198;
  t4236 = t4200*t3540;
  t4237 = 0. + t4173 + t4236;
  t4247 = -1.*t2501*t4237;
  t4254 = t4077 + t4247;
  t4293 = t1782*t4269;
  t4337 = t1453*t4296;
  t4355 = t1142*t4340;
  t4361 = 0. + t4293 + t4337 + t4355;
  t4371 = -1.*t66*t4361;
  t4513 = t3171*t4506;
  t4549 = -1.*t2585*t4528;
  t4556 = 0. + t4513 + t4549;
  t4558 = t2537*t4556;
  t4574 = t2585*t4506;
  t4578 = t3171*t4528;
  t4581 = 0. + t4574 + t4578;
  t4586 = t4581*t3540;
  t4595 = 0. + t4558 + t4586;
  t4596 = -1.*t2501*t4595;
  t4622 = t4371 + t4596;
  t4690 = t2537*t3493;
  t4692 = -1.*t3379*t3540;
  t4701 = t4690 + t4692;
  t4709 = var2[3]*t66*t4701;
  t4721 = -1.*t2537*t3379;
  t4722 = -1.*t3493*t3540;
  t4724 = t4721 + t4722;
  t4726 = var2[4]*t4724;
  t4727 = t4709 + t4726;
  t4739 = -1.*t2537*t4172;
  t4740 = -1.*t4200*t3540;
  t4752 = t4739 + t4740;
  t4755 = var2[4]*t4752;
  t4758 = t2537*t4200;
  t4759 = -1.*t4172*t3540;
  t4764 = t4758 + t4759;
  t4774 = var2[3]*t66*t4764;
  t4777 = t4755 + t4774;
  t4797 = -1.*t2537*t4556;
  t4802 = -1.*t4581*t3540;
  t4808 = t4797 + t4802;
  t4820 = var2[4]*t4808;
  t4825 = t2537*t4581;
  t4826 = -1.*t4556*t3540;
  t4833 = t4825 + t4826;
  t4839 = var2[3]*t66*t4833;
  t4840 = t4820 + t4839;
  t4934 = t3159 + t3355;
  t4890 = -1.*t3171*t3125;
  t4907 = -1.*t2585*t3333;
  t4925 = t4890 + t4907;
  t5026 = -1.*t2585*t4097;
  t5036 = -1.*t3171*t4154;
  t5064 = t5026 + t5036;
  t5017 = t4099 + t4168;
  t5147 = -1.*t2585*t4506;
  t5182 = -1.*t3171*t4528;
  t5193 = t5147 + t5182;
  t5139 = t4513 + t4549;
  t4928 = t2537*t4925;
  t4935 = t4934*t3540;
  t4942 = t4928 + t4935;
  t4970 = var2[3]*t66*t4942;
  t4975 = t2537*t4934;
  t4978 = -1.*t4925*t3540;
  t4979 = t4975 + t4978;
  t4992 = var2[4]*t4979;
  t5004 = t4970 + t4992;
  t5020 = t2537*t5017;
  t5070 = -1.*t5064*t3540;
  t5107 = t5020 + t5070;
  t5109 = var2[4]*t5107;
  t5114 = t2537*t5064;
  t5117 = t5017*t3540;
  t5119 = t5114 + t5117;
  t5130 = var2[3]*t66*t5119;
  t5134 = t5109 + t5130;
  t5145 = t2537*t5139;
  t5199 = -1.*t5193*t3540;
  t5221 = t5145 + t5199;
  t5227 = var2[4]*t5221;
  t5235 = t2537*t5193;
  t5258 = t5139*t3540;
  t5263 = t5235 + t5258;
  t5265 = var2[3]*t66*t5263;
  t5267 = t5227 + t5265;
  t5363 = 0.340999127418*t954*t978;
  t5366 = -0.8656776547239999*t1362*t978;
  t5370 = -0.930418*t1631*t2212;
  t5374 = t5363 + t5366 + t5370;
  t5390 = -0.134322983001*t954*t978;
  t5391 = 0.340999127418*t1362*t978;
  t5393 = 0.366501*t1631*t2212;
  t5394 = t5390 + t5391 + t5393;
  t5324 = -0.366501*t1631*t954;
  t5333 = 0.930418*t1631*t1362;
  t5336 = -1.000000637725*t978*t2212;
  t5338 = t5324 + t5333 + t5336;
  t5418 = -1.*t2585*t5374;
  t5425 = t3171*t5394;
  t5427 = t5418 + t5425;
  t5382 = t3171*t5374;
  t5396 = t2585*t5394;
  t5398 = t5382 + t5396;
  t5527 = 0.366501*t1631*t3837;
  t5530 = 0.340999127418*t978*t3917;
  t5542 = -0.134322983001*t978*t4058;
  t5549 = t5527 + t5530 + t5542;
  t5561 = -0.930418*t1631*t3837;
  t5567 = -0.8656776547239999*t978*t3917;
  t5585 = 0.340999127418*t978*t4058;
  t5601 = t5561 + t5567 + t5585;
  t5486 = -1.000000637725*t978*t3837;
  t5487 = 0.930418*t1631*t3917;
  t5491 = -0.366501*t1631*t4058;
  t5493 = t5486 + t5487 + t5491;
  t5634 = t3171*t5549;
  t5638 = -1.*t2585*t5601;
  t5644 = t5634 + t5638;
  t5556 = t2585*t5549;
  t5606 = t3171*t5601;
  t5616 = t5556 + t5606;
  t5785 = 0.366501*t1631*t4269;
  t5791 = 0.340999127418*t978*t4296;
  t5795 = -0.134322983001*t978*t4340;
  t5830 = t5785 + t5791 + t5795;
  t5841 = -0.930418*t1631*t4269;
  t5858 = -0.8656776547239999*t978*t4296;
  t5859 = 0.340999127418*t978*t4340;
  t5865 = t5841 + t5858 + t5859;
  t5713 = -1.000000637725*t978*t4269;
  t5721 = 0.930418*t1631*t4296;
  t5732 = -0.366501*t1631*t4340;
  t5735 = t5713 + t5721 + t5732;
  t5892 = t3171*t5830;
  t5900 = -1.*t2585*t5865;
  t5903 = t5892 + t5900;
  t5832 = t2585*t5830;
  t5875 = t3171*t5865;
  t5887 = t5832 + t5875;
  t5340 = var2[5]*t5338;
  t5341 = 0.366501*t1631*t954;
  t5342 = -0.930418*t1631*t1362;
  t5345 = 1.000000637725*t978*t2212;
  t5350 = t5341 + t5342 + t5345;
  t5356 = var2[17]*t5350;
  t5411 = t2537*t5398;
  t5433 = -1.*t5427*t3540;
  t5439 = t5411 + t5433;
  t5443 = var2[4]*t5439;
  t5444 = -1.*t5338*t2501;
  t5445 = t2537*t5427;
  t5449 = t5398*t3540;
  t5450 = t5445 + t5449;
  t5456 = t66*t5450;
  t5461 = t5444 + t5456;
  t5462 = var2[3]*t5461;
  t5466 = t5340 + t5356 + t5443 + t5462;
  t5495 = var2[5]*t5493;
  t5498 = 1.000000637725*t978*t3837;
  t5505 = -0.930418*t1631*t3917;
  t5508 = 0.366501*t1631*t4058;
  t5512 = t5498 + t5505 + t5508;
  t5525 = var2[17]*t5512;
  t5633 = t2537*t5616;
  t5648 = -1.*t5644*t3540;
  t5656 = t5633 + t5648;
  t5658 = var2[4]*t5656;
  t5665 = -1.*t5493*t2501;
  t5669 = t2537*t5644;
  t5682 = t5616*t3540;
  t5686 = t5669 + t5682;
  t5687 = t66*t5686;
  t5698 = t5665 + t5687;
  t5699 = var2[3]*t5698;
  t5706 = t5495 + t5525 + t5658 + t5699;
  t5738 = var2[5]*t5735;
  t5745 = 1.000000637725*t978*t4269;
  t5754 = -0.930418*t1631*t4296;
  t5758 = 0.366501*t1631*t4340;
  t5771 = t5745 + t5754 + t5758;
  t5782 = var2[17]*t5771;
  t5889 = t2537*t5887;
  t5905 = -1.*t5903*t3540;
  t5907 = t5889 + t5905;
  t5909 = var2[4]*t5907;
  t5916 = -1.*t5735*t2501;
  t5929 = t2537*t5903;
  t5930 = t5887*t3540;
  t5934 = t5929 + t5930;
  t5938 = t66*t5934;
  t5940 = t5916 + t5938;
  t5944 = var2[3]*t5940;
  t5949 = t5738 + t5782 + t5909 + t5944;
  t6023 = 0.25915542260700003*t279;
  t6026 = 0.25915550358356343*t1825;
  t6027 = t6023 + t6026;
  t6034 = 0.6579050807260001*t279;
  t6045 = 0.6579052862972049*t1825;
  t6048 = t6034 + t6045;
  t6063 = 0.7071072209449999*t279;
  t6065 = -0.7071074509398115*t1825;
  t6067 = t6063 + t6065;
  t6155 = t3300*t6067;
  t6156 = 0.340999127418*t1705*t6027;
  t6163 = t3201*t6048;
  t6166 = t6155 + t6156 + t6163;
  t6172 = t3049*t6067;
  t6183 = t2869*t6027;
  t6199 = 0.340999127418*t1705*t6048;
  t6202 = t6172 + t6183 + t6199;
  t6121 = t1782*t6067;
  t6124 = t1453*t6027;
  t6136 = t1142*t6048;
  t6137 = t6121 + t6124 + t6136;
  t6230 = t3171*t6166;
  t6258 = -1.*t2585*t6202;
  t6264 = t6230 + t6258;
  t6168 = t2585*t6166;
  t6220 = t3171*t6202;
  t6224 = t6168 + t6220;
  t6322 = -0.25915542260700003*t279;
  t6325 = t6322 + t6026;
  t6338 = -0.6579050807260001*t279;
  t6348 = t6338 + t6045;
  t6377 = 0.7071074509398115*t1825;
  t6379 = t6063 + t6377;
  t6410 = t2869*t6325;
  t6422 = 0.340999127418*t1705*t6348;
  t6423 = t3049*t6379;
  t6426 = t6410 + t6422 + t6423;
  t6431 = 0.340999127418*t1705*t6325;
  t6442 = t3201*t6348;
  t6450 = t3300*t6379;
  t6457 = t6431 + t6442 + t6450;
  t6396 = t1453*t6325;
  t6398 = t1142*t6348;
  t6401 = t1782*t6379;
  t6402 = t6396 + t6398 + t6401;
  t6501 = -1.*t2585*t6426;
  t6505 = t3171*t6457;
  t6508 = t6501 + t6505;
  t6428 = t3171*t6426;
  t6473 = t2585*t6457;
  t6480 = t6428 + t6473;
  t6685 = 5.551115123125783e-17*t3201*t1825;
  t6687 = -4.7323135329568886e-18*t1705*t1825;
  t6692 = 0. + t6685 + t6687;
  t6703 = -1.3877787807814457e-17*t2869*t1825;
  t6704 = 1.8929254131827554e-17*t1705*t1825;
  t6707 = 0. + t6703 + t6704;
  t6645 = 5.551115123125783e-17*t1142*t1825;
  t6647 = -1.3877787807814457e-17*t1453*t1825;
  t6648 = 0. + t6645 + t6647;
  t6732 = t3171*t6692;
  t6738 = -1.*t2585*t6707;
  t6739 = t6732 + t6738;
  t6698 = t2585*t6692;
  t6711 = t3171*t6707;
  t6713 = t6698 + t6711;
  t6029 = -0.366501*t6027;
  t6051 = -0.930418*t6048;
  t6055 = t6029 + t6051;
  t6062 = var2[18]*t6055;
  t6071 = -1.*t1782*t6067;
  t6095 = -1.*t1453*t6027;
  t6099 = -1.*t1142*t6048;
  t6100 = t6071 + t6095 + t6099;
  t6103 = var2[17]*t6100;
  t6143 = var2[5]*t6137;
  t6225 = t2537*t6224;
  t6270 = -1.*t6264*t3540;
  t6271 = t6225 + t6270;
  t6274 = var2[4]*t6271;
  t6275 = -1.*t6137*t2501;
  t6281 = t2537*t6264;
  t6282 = t6224*t3540;
  t6283 = t6281 + t6282;
  t6285 = t66*t6283;
  t6302 = t6275 + t6285;
  t6304 = var2[3]*t6302;
  t6320 = t6062 + t6103 + t6143 + t6274 + t6304;
  t6328 = -0.366501*t6325;
  t6360 = -0.930418*t6348;
  t6365 = t6328 + t6360;
  t6366 = var2[18]*t6365;
  t6368 = -1.*t1453*t6325;
  t6371 = -1.*t1142*t6348;
  t6381 = -1.*t1782*t6379;
  t6389 = t6368 + t6371 + t6381;
  t6394 = var2[17]*t6389;
  t6407 = var2[5]*t6402;
  t6497 = t2537*t6480;
  t6512 = -1.*t6508*t3540;
  t6517 = t6497 + t6512;
  t6540 = var2[4]*t6517;
  t6560 = -1.*t6402*t2501;
  t6564 = t2537*t6508;
  t6571 = t6480*t3540;
  t6602 = t6564 + t6571;
  t6606 = t66*t6602;
  t6610 = t6560 + t6606;
  t6617 = var2[3]*t6610;
  t6618 = t6366 + t6394 + t6407 + t6540 + t6617;
  t6628 = -4.656235119693264e-17*var2[18]*t1825;
  t6649 = var2[5]*t6648;
  t6651 = -5.551115123125783e-17*t1142*t1825;
  t6662 = 1.3877787807814457e-17*t1453*t1825;
  t6666 = 0. + t6651 + t6662;
  t6669 = var2[17]*t6666;
  t6718 = t2537*t6713;
  t6743 = -1.*t6739*t3540;
  t6744 = t6718 + t6743;
  t6747 = var2[4]*t6744;
  t6751 = -1.*t6648*t2501;
  t6752 = t2537*t6739;
  t6753 = t6713*t3540;
  t6765 = t6752 + t6753;
  t6768 = t66*t6765;
  t6776 = t6751 + t6768;
  t6779 = var2[3]*t6776;
  t6788 = t6628 + t6649 + t6669 + t6747 + t6779;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0.00015*t3593*var2[3] + 0.00017*t4254*var2[3] + 0.01153*t4622*var2[3];
  p_output1[13]=-0.00018*t3593*var2[3] + 0.03335*t4254*var2[3] + 0.00017*t4622*var2[3];
  p_output1[14]=0.03396*t3593*var2[3] - 0.00018*t4254*var2[3] + 0.00015*t4622*var2[3];
  p_output1[15]=0.00015*t4727 + 0.00017*t4777 + 0.01153*t4840;
  p_output1[16]=-0.00018*t4727 + 0.03335*t4777 + 0.00017*t4840;
  p_output1[17]=0.03396*t4727 - 0.00018*t4777 + 0.00015*t4840;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0.00015*t5004 + 0.00017*t5134 + 0.01153*t5267;
  p_output1[52]=-0.00018*t5004 + 0.03335*t5134 + 0.00017*t5267;
  p_output1[53]=0.03396*t5004 - 0.00018*t5134 + 0.00015*t5267;
  p_output1[54]=0.00015*t5466 + 0.00017*t5706 + 0.01153*t5949;
  p_output1[55]=-0.00018*t5466 + 0.03335*t5706 + 0.00017*t5949;
  p_output1[56]=0.03396*t5466 - 0.00018*t5706 + 0.00015*t5949;
  p_output1[57]=0.01153*t6320 + 0.00017*t6618 + 0.00015*t6788;
  p_output1[58]=0.00017*t6320 + 0.03335*t6618 - 0.00018*t6788;
  p_output1[59]=0.00015*t6320 - 0.00018*t6618 + 0.03396*t6788;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jq_AMBody_right_hip_pitch_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
