/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:09:04 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dT_left_elbow_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t262;
  double t746;
  double t641;
  double t667;
  double t714;
  double t792;
  double t749;
  double t750;
  double t802;
  double t66;
  double t99;
  double t134;
  double t230;
  double t360;
  double t536;
  double t783;
  double t804;
  double t846;
  double t1001;
  double t1008;
  double t1026;
  double t391;
  double t442;
  double t542;
  double t854;
  double t982;
  double t999;
  double t1027;
  double t1028;
  double t1109;
  double t1132;
  double t1196;
  double t1201;
  double t1206;
  double t1211;
  double t1327;
  double t1343;
  double t169;
  double t1359;
  double t1360;
  double t1431;
  double t1437;
  double t1439;
  double t1482;
  double t1510;
  double t1516;
  double t1545;
  double t1550;
  double t1585;
  double t1587;
  double t1590;
  double t1642;
  double t1086;
  double t17;
  double t252;
  double t261;
  double t1031;
  double t1089;
  double t1105;
  double t1349;
  double t1356;
  double t1357;
  double t1557;
  double t1559;
  double t1593;
  double t1627;
  double t1640;
  double t1665;
  double t1672;
  double t1674;
  double t1675;
  double t1685;
  double t1686;
  double t1690;
  double t1735;
  double t1736;
  double t1752;
  double t1807;
  double t1836;
  double t1842;
  double t1850;
  double t1892;
  double t1900;
  double t1904;
  double t26;
  double t27;
  double t2197;
  double t2187;
  double t2201;
  double t2219;
  double t2241;
  double t2242;
  double t2264;
  double t2221;
  double t2267;
  double t2279;
  double t2304;
  double t2312;
  double t2316;
  double t2280;
  double t2339;
  double t2341;
  double t2357;
  double t2360;
  double t2369;
  double t2380;
  double t2385;
  double t2403;
  double t1700;
  double t1731;
  double t1945;
  double t1957;
  double t2343;
  double t2375;
  double t2411;
  double t2413;
  double t2003;
  double t2005;
  double t2421;
  double t2423;
  double t2430;
  double t2436;
  double t2476;
  double t2487;
  double t2504;
  double t2511;
  double t2075;
  double t2100;
  double t2114;
  double t2120;
  double t2162;
  double t2169;
  double t2664;
  double t2697;
  double t2705;
  double t2658;
  double t2718;
  double t2722;
  double t2731;
  double t2740;
  double t2742;
  double t2727;
  double t2744;
  double t2746;
  double t2754;
  double t2758;
  double t2762;
  double t2769;
  double t2770;
  double t2781;
  double t2751;
  double t2765;
  double t2786;
  double t2788;
  double t2803;
  double t2812;
  double t2816;
  double t2826;
  double t2831;
  double t2842;
  double t2846;
  double t2851;
  double t2976;
  double t2983;
  double t2963;
  double t2985;
  double t2992;
  double t2997;
  double t3012;
  double t3024;
  double t3028;
  double t3030;
  double t3031;
  double t3035;
  double t3036;
  double t2995;
  double t3029;
  double t3038;
  double t3039;
  double t3044;
  double t3047;
  double t3051;
  double t3064;
  double t3068;
  double t3070;
  double t3100;
  double t3102;
  double t3203;
  double t3234;
  double t3271;
  double t3191;
  double t3200;
  double t3221;
  double t3222;
  double t3223;
  double t3236;
  double t3253;
  double t3255;
  double t3262;
  double t3264;
  double t3266;
  double t3267;
  double t3268;
  double t3276;
  double t3279;
  double t3282;
  double t3291;
  double t3292;
  double t3296;
  double t3301;
  double t3308;
  double t3316;
  double t3317;
  double t3318;
  double t3383;
  double t3384;
  double t3390;
  double t3397;
  double t3411;
  double t3420;
  double t3423;
  double t3424;
  double t3439;
  double t3441;
  double t3442;
  double t3443;
  double t3405;
  double t3435;
  double t3444;
  double t3445;
  double t3449;
  double t3451;
  double t3454;
  double t3460;
  double t3463;
  double t3470;
  double t3484;
  double t3493;
  double t3578;
  double t3579;
  double t3586;
  double t3589;
  double t3592;
  double t3598;
  double t3587;
  double t3599;
  double t3604;
  double t3610;
  double t3613;
  double t3620;
  double t3577;
  double t3608;
  double t3621;
  double t3623;
  double t3625;
  double t3628;
  double t3630;
  double t3642;
  double t3645;
  double t3654;
  double t3669;
  double t3673;
  double t3624;
  double t3643;
  double t3675;
  double t3676;
  double t3685;
  double t3699;
  double t3700;
  double t3701;
  double t3711;
  double t3715;
  double t3718;
  double t3719;
  double t3792;
  double t3795;
  double t3796;
  double t3802;
  double t3804;
  double t3806;
  double t3791;
  double t3799;
  double t3807;
  double t3809;
  double t3812;
  double t3813;
  double t3816;
  double t3818;
  double t3824;
  double t3828;
  double t3830;
  double t3833;
  double t3810;
  double t3819;
  double t3835;
  double t3841;
  double t3847;
  double t3850;
  double t3851;
  double t3854;
  double t3858;
  double t3861;
  double t3862;
  double t3865;
  double t3962;
  double t3966;
  double t3969;
  double t3978;
  double t3982;
  double t3985;
  double t3988;
  double t4016;
  double t3983;
  double t4026;
  double t4030;
  double t4034;
  double t4050;
  double t4051;
  double t4083;
  double t4084;
  double t4093;
  double t4033;
  double t4056;
  double t4094;
  double t4096;
  double t4118;
  double t4119;
  double t4122;
  double t4124;
  double t4131;
  double t4138;
  double t4139;
  double t4140;
  double t4243;
  double t4245;
  double t4252;
  double t4219;
  double t4258;
  double t4265;
  double t4278;
  double t4280;
  double t4284;
  double t4275;
  double t4285;
  double t4291;
  double t4314;
  double t4315;
  double t4332;
  double t4335;
  double t4340;
  double t4347;
  double t4306;
  double t4333;
  double t4348;
  double t4359;
  double t4366;
  double t4381;
  double t4384;
  double t4385;
  double t4395;
  double t4400;
  double t4405;
  double t4423;
  double t4531;
  double t4534;
  double t4515;
  double t4539;
  double t4547;
  double t4555;
  double t4557;
  double t4559;
  double t4563;
  double t4568;
  double t4570;
  double t4574;
  double t4582;
  double t4548;
  double t4564;
  double t4583;
  double t4592;
  double t4611;
  double t4613;
  double t4618;
  double t4626;
  double t4636;
  double t4647;
  double t4649;
  double t4651;
  double t4719;
  double t4722;
  double t4725;
  double t4733;
  double t4741;
  double t4742;
  double t4749;
  double t4752;
  double t4761;
  double t4763;
  double t4766;
  double t4768;
  double t4814;
  double t4815;
  double t4817;
  double t4822;
  double t4826;
  double t4830;
  double t4841;
  double t4842;
  double t4849;
  double t4851;
  double t4852;
  double t4854;
  double t4825;
  double t4843;
  double t4858;
  double t4859;
  double t4865;
  double t4872;
  double t4887;
  double t4888;
  double t4896;
  double t4897;
  double t4904;
  double t4905;
  double t4975;
  double t4976;
  double t4979;
  double t4981;
  double t4982;
  double t4983;
  double t4980;
  double t4985;
  double t4986;
  double t4998;
  double t5001;
  double t5010;
  double t5016;
  double t5020;
  double t5023;
  double t4995;
  double t5014;
  double t5035;
  double t5049;
  double t5060;
  double t5061;
  double t5065;
  double t5076;
  double t5086;
  double t5088;
  double t5089;
  double t5099;
  double t5153;
  double t5162;
  double t5167;
  double t5148;
  double t5172;
  double t5181;
  double t5183;
  double t5184;
  double t5185;
  double t5186;
  double t5193;
  double t5195;
  double t5196;
  double t5198;
  double t5182;
  double t5192;
  double t5201;
  double t5204;
  double t5216;
  double t5224;
  double t5231;
  double t5233;
  double t5271;
  double t5274;
  double t5275;
  double t5282;
  double t5380;
  double t5381;
  double t5387;
  double t5389;
  double t5408;
  double t5409;
  double t5421;
  double t5424;
  double t5428;
  double t5434;
  double t5446;
  double t5448;
  double t5506;
  double t5507;
  double t5509;
  double t5517;
  double t5519;
  double t5520;
  double t5538;
  double t5540;
  double t5545;
  double t5556;
  double t5570;
  double t5536;
  double t5544;
  double t5574;
  double t5579;
  double t5597;
  double t5600;
  double t5622;
  double t5630;
  double t5635;
  double t5638;
  double t5645;
  double t5646;
  double t5718;
  double t5722;
  double t5723;
  double t5724;
  double t5731;
  double t5733;
  double t5735;
  double t5742;
  double t5750;
  double t5751;
  double t5752;
  double t5755;
  double t5728;
  double t5743;
  double t5763;
  double t5769;
  double t5780;
  double t5782;
  double t5787;
  double t5789;
  double t5804;
  double t5805;
  double t5807;
  double t5823;
  double t5882;
  double t5883;
  double t5887;
  double t5894;
  double t5902;
  double t5903;
  double t5879;
  double t5891;
  double t5910;
  double t5912;
  double t5915;
  double t5918;
  double t5919;
  double t5921;
  double t5924;
  double t5928;
  double t5930;
  double t5931;
  double t5914;
  double t5923;
  double t5934;
  double t5945;
  double t5959;
  double t5960;
  double t5961;
  double t5966;
  double t5969;
  double t5977;
  double t5978;
  double t5980;
  double t1575;
  double t1698;
  double t1927;
  double t1935;
  double t1995;
  double t2018;
  double t2022;
  double t2048;
  double t2112;
  double t2159;
  double t2173;
  double t2180;
  double t2414;
  double t2445;
  double t2526;
  double t2570;
  double t2577;
  double t2585;
  double t2587;
  double t2588;
  double t2591;
  double t2616;
  double t2618;
  double t2619;
  double t2799;
  double t2829;
  double t2860;
  double t2872;
  double t2883;
  double t2887;
  double t2890;
  double t2909;
  double t2914;
  double t2917;
  double t2919;
  double t2932;
  double t3042;
  double t3067;
  double t3106;
  double t3112;
  double t3123;
  double t3126;
  double t3130;
  double t3133;
  double t3141;
  double t3144;
  double t3153;
  double t3156;
  double t3259;
  double t3288;
  double t3322;
  double t3323;
  double t3326;
  double t3327;
  double t3337;
  double t3341;
  double t3344;
  double t3346;
  double t3350;
  double t3356;
  double t3447;
  double t3461;
  double t3513;
  double t3539;
  double t3542;
  double t3545;
  double t3546;
  double t3548;
  double t3552;
  double t3555;
  double t3558;
  double t3559;
  double t3677;
  double t3710;
  double t3720;
  double t3729;
  double t3738;
  double t3745;
  double t3751;
  double t3752;
  double t3756;
  double t3765;
  double t3767;
  double t3772;
  double t3844;
  double t3856;
  double t3866;
  double t3867;
  double t3870;
  double t3873;
  double t3876;
  double t3880;
  double t3886;
  double t3894;
  double t3902;
  double t3905;
  double t3914;
  double t3919;
  double t3922;
  double t3923;
  double t3926;
  double t3928;
  double t3932;
  double t3933;
  double t3938;
  double t3939;
  double t3942;
  double t3944;
  double t4114;
  double t4126;
  double t4142;
  double t4146;
  double t4153;
  double t4162;
  double t4167;
  double t4172;
  double t4178;
  double t4179;
  double t4181;
  double t4185;
  double t4361;
  double t4389;
  double t4424;
  double t4427;
  double t4445;
  double t4451;
  double t4460;
  double t4463;
  double t4467;
  double t4472;
  double t4476;
  double t4490;
  double t4607;
  double t4627;
  double t4661;
  double t4666;
  double t4675;
  double t4683;
  double t4685;
  double t4695;
  double t4703;
  double t4704;
  double t4707;
  double t4708;
  double t4740;
  double t4758;
  double t4769;
  double t4770;
  double t4777;
  double t4780;
  double t4783;
  double t4785;
  double t4795;
  double t4796;
  double t4799;
  double t4804;
  double t4863;
  double t4892;
  double t4912;
  double t4913;
  double t4925;
  double t4929;
  double t4937;
  double t4939;
  double t4946;
  double t4948;
  double t4952;
  double t4958;
  double t5059;
  double t5084;
  double t5106;
  double t5107;
  double t5111;
  double t5114;
  double t5120;
  double t5123;
  double t5128;
  double t5129;
  double t5133;
  double t5135;
  double t5215;
  double t5248;
  double t5293;
  double t5296;
  double t5305;
  double t5311;
  double t5312;
  double t5316;
  double t5329;
  double t5334;
  double t5345;
  double t5352;
  double t5400;
  double t5427;
  double t5449;
  double t5452;
  double t5463;
  double t5467;
  double t5468;
  double t5473;
  double t5482;
  double t5485;
  double t5490;
  double t5491;
  double t5585;
  double t5632;
  double t5649;
  double t5650;
  double t5662;
  double t5667;
  double t5681;
  double t5687;
  double t5695;
  double t5700;
  double t5709;
  double t5710;
  double t5778;
  double t5796;
  double t5826;
  double t5828;
  double t5833;
  double t5834;
  double t5839;
  double t5841;
  double t5854;
  double t5857;
  double t5859;
  double t5861;
  double t5950;
  double t5968;
  double t5990;
  double t5994;
  double t5998;
  double t6017;
  double t6028;
  double t6029;
  double t6036;
  double t6040;
  double t6043;
  double t6044;
  double t6807;
  double t6810;
  double t6937;
  double t6973;
  double t6948;
  double t6849;
  double t6855;
  double t6859;
  double t6819;
  double t6820;
  double t6821;
  double t6899;
  double t6912;
  double t6924;
  double t6925;
  double t6874;
  double t6876;
  double t6878;
  double t6880;
  double t6967;
  double t6969;
  double t6974;
  double t6983;
  double t6989;
  double t6990;
  double t6992;
  double t6931;
  double t6933;
  double t6938;
  double t6941;
  double t6961;
  double t6962;
  double t6964;
  double t7003;
  double t7005;
  double t7006;
  double t7007;
  double t7010;
  double t7011;
  double t7018;
  double t7025;
  double t7026;
  double t7027;
  double t7029;
  double t7035;
  double t7037;
  double t7039;
  double t7042;
  double t7051;
  double t7052;
  double t7053;
  double t7056;
  double t7235;
  double t7258;
  double t7244;
  double t6829;
  double t6835;
  double t6836;
  double t6840;
  double t7111;
  double t7112;
  double t7114;
  double t7118;
  double t7128;
  double t7186;
  double t7187;
  double t7196;
  double t7198;
  double t7200;
  double t7201;
  double t7214;
  double t7218;
  double t7219;
  double t7236;
  double t7242;
  double t7246;
  double t7250;
  double t7251;
  double t7252;
  double t7259;
  double t7263;
  double t7265;
  double t7266;
  double t7271;
  double t7276;
  double t7281;
  double t7282;
  double t7288;
  double t7292;
  double t7293;
  double t7297;
  double t7339;
  double t7344;
  double t7347;
  double t7349;
  double t7350;
  double t7351;
  double t7354;
  double t7355;
  double t7356;
  t262 = Cos(var1[3]);
  t746 = Cos(var1[4]);
  t641 = Cos(var1[14]);
  t667 = -1.*t641;
  t714 = 1. + t667;
  t792 = Cos(var1[13]);
  t749 = Cos(var1[5]);
  t750 = Sin(var1[13]);
  t802 = Sin(var1[5]);
  t66 = Cos(var1[15]);
  t99 = -1.*t66;
  t134 = 1. + t99;
  t230 = Sin(var1[15]);
  t360 = Sin(var1[14]);
  t536 = Sin(var1[4]);
  t783 = -1.*t262*t746*t749*t750;
  t804 = t792*t262*t746*t802;
  t846 = t783 + t804;
  t1001 = t792*t262*t746*t749;
  t1008 = t262*t746*t750*t802;
  t1026 = t1001 + t1008;
  t391 = 0.994522*t360;
  t442 = 0. + t391;
  t542 = -1.*t262*t442*t536;
  t854 = 0.103955395616*t714*t846;
  t982 = -0.9890740084840001*t714;
  t999 = 1. + t982;
  t1027 = t999*t1026;
  t1028 = t542 + t854 + t1027;
  t1109 = -0.104528*t360;
  t1132 = 0. + t1109;
  t1196 = -1.*t262*t1132*t536;
  t1201 = -0.010926102783999999*t714;
  t1206 = 1. + t1201;
  t1211 = t1206*t846;
  t1327 = 0.103955395616*t714*t1026;
  t1343 = t1196 + t1211 + t1327;
  t169 = -0.49726168403800003*t134;
  t1359 = -1.0000001112680001*t714;
  t1360 = 1. + t1359;
  t1431 = -1.*t1360*t262*t536;
  t1437 = 0.104528*t360;
  t1439 = 0. + t1437;
  t1482 = t1439*t846;
  t1510 = -0.994522*t360;
  t1516 = 0. + t1510;
  t1545 = t1516*t1026;
  t1550 = t1431 + t1482 + t1545;
  t1585 = Cos(var1[16]);
  t1587 = -1.*t1585;
  t1590 = 1. + t1587;
  t1642 = -0.051978134642000004*t134;
  t1086 = 0.05226439969100001*t134;
  t17 = Sin(var1[16]);
  t252 = -0.073913*t230;
  t261 = t169 + t252;
  t1031 = t261*t1028;
  t1089 = -0.703234*t230;
  t1105 = t1086 + t1089;
  t1349 = t1105*t1343;
  t1356 = -0.500001190325*t134;
  t1357 = 1. + t1356;
  t1557 = t1357*t1550;
  t1559 = t1031 + t1349 + t1557;
  t1593 = -0.5054634410180001*t134;
  t1627 = 1. + t1593;
  t1640 = t1627*t1028;
  t1665 = -0.707107*t230;
  t1672 = t1642 + t1665;
  t1674 = t1672*t1343;
  t1675 = 0.073913*t230;
  t1685 = t169 + t1675;
  t1686 = t1685*t1550;
  t1690 = t1640 + t1674 + t1686;
  t1735 = 0.707107*t230;
  t1736 = t1642 + t1735;
  t1752 = t1736*t1028;
  t1807 = -0.9945383682050002*t134;
  t1836 = 1. + t1807;
  t1842 = t1836*t1343;
  t1850 = 0.703234*t230;
  t1892 = t1086 + t1850;
  t1900 = t1892*t1550;
  t1904 = t1752 + t1842 + t1900;
  t26 = -0.104528*t17;
  t27 = 0. + t26;
  t2197 = Sin(var1[3]);
  t2187 = t262*t749*t536;
  t2201 = t2197*t802;
  t2219 = t2187 + t2201;
  t2241 = t749*t2197;
  t2242 = -1.*t262*t536*t802;
  t2264 = t2241 + t2242;
  t2221 = t750*t2219;
  t2267 = t792*t2264;
  t2279 = t2221 + t2267;
  t2304 = t792*t2219;
  t2312 = -1.*t750*t2264;
  t2316 = t2304 + t2312;
  t2280 = 0.103955395616*t714*t2279;
  t2339 = t1206*t2316;
  t2341 = t2280 + t2339;
  t2357 = t999*t2279;
  t2360 = 0.103955395616*t714*t2316;
  t2369 = t2357 + t2360;
  t2380 = t1516*t2279;
  t2385 = t1439*t2316;
  t2403 = t2380 + t2385;
  t1700 = -0.010926102783999999*t1590;
  t1731 = 1. + t1700;
  t1945 = 0.994522*t17;
  t1957 = 0. + t1945;
  t2343 = t1105*t2341;
  t2375 = t261*t2369;
  t2411 = t1357*t2403;
  t2413 = t2343 + t2375 + t2411;
  t2003 = -0.9890740084840001*t1590;
  t2005 = 1. + t2003;
  t2421 = t1672*t2341;
  t2423 = t1627*t2369;
  t2430 = t1685*t2403;
  t2436 = t2421 + t2423 + t2430;
  t2476 = t1836*t2341;
  t2487 = t1736*t2369;
  t2504 = t1892*t2403;
  t2511 = t2476 + t2487 + t2504;
  t2075 = -1.0000001112680001*t1590;
  t2100 = 1. + t2075;
  t2114 = -0.994522*t17;
  t2120 = 0. + t2114;
  t2162 = 0.104528*t17;
  t2169 = 0. + t2162;
  t2664 = -1.*t749*t2197;
  t2697 = t262*t536*t802;
  t2705 = t2664 + t2697;
  t2658 = -1.*t750*t2219;
  t2718 = t792*t2705;
  t2722 = t2658 + t2718;
  t2731 = -1.*t792*t2219;
  t2740 = -1.*t750*t2705;
  t2742 = t2731 + t2740;
  t2727 = 0.103955395616*t714*t2722;
  t2744 = t1206*t2742;
  t2746 = t2727 + t2744;
  t2754 = t999*t2722;
  t2758 = 0.103955395616*t714*t2742;
  t2762 = t2754 + t2758;
  t2769 = t1516*t2722;
  t2770 = t1439*t2742;
  t2781 = t2769 + t2770;
  t2751 = t1105*t2746;
  t2765 = t261*t2762;
  t2786 = t1357*t2781;
  t2788 = t2751 + t2765 + t2786;
  t2803 = t1672*t2746;
  t2812 = t1627*t2762;
  t2816 = t1685*t2781;
  t2826 = t2803 + t2812 + t2816;
  t2831 = t1836*t2746;
  t2842 = t1736*t2762;
  t2846 = t1892*t2781;
  t2851 = t2831 + t2842 + t2846;
  t2976 = t750*t2705;
  t2983 = t2304 + t2976;
  t2963 = t262*t746*t442;
  t2985 = t999*t2983;
  t2992 = t2963 + t2727 + t2985;
  t2997 = t262*t746*t1132;
  t3012 = t1206*t2722;
  t3024 = 0.103955395616*t714*t2983;
  t3028 = t2997 + t3012 + t3024;
  t3030 = t1360*t262*t746;
  t3031 = t1439*t2722;
  t3035 = t1516*t2983;
  t3036 = t3030 + t3031 + t3035;
  t2995 = t261*t2992;
  t3029 = t1105*t3028;
  t3038 = t1357*t3036;
  t3039 = t2995 + t3029 + t3038;
  t3044 = t1627*t2992;
  t3047 = t1672*t3028;
  t3051 = t1685*t3036;
  t3064 = t3044 + t3047 + t3051;
  t3068 = t1736*t2992;
  t3070 = t1836*t3028;
  t3100 = t1892*t3036;
  t3102 = t3068 + t3070 + t3100;
  t3203 = -0.051978134642000004*t230;
  t3234 = -0.49726168403800003*t230;
  t3271 = 0.05226439969100001*t230;
  t3191 = -0.5054634410180001*t230*t2992;
  t3200 = -0.707107*t66;
  t3221 = t3200 + t3203;
  t3222 = t3221*t3028;
  t3223 = 0.073913*t66;
  t3236 = t3223 + t3234;
  t3253 = t3236*t3036;
  t3255 = t3191 + t3222 + t3253;
  t3262 = 0.707107*t66;
  t3264 = t3262 + t3203;
  t3266 = t3264*t2992;
  t3267 = -0.9945383682050002*t230*t3028;
  t3268 = 0.703234*t66;
  t3276 = t3268 + t3271;
  t3279 = t3276*t3036;
  t3282 = t3266 + t3267 + t3279;
  t3291 = -0.073913*t66;
  t3292 = t3291 + t3234;
  t3296 = t3292*t2992;
  t3301 = -0.703234*t66;
  t3308 = t3301 + t3271;
  t3316 = t3308*t3028;
  t3317 = -0.500001190325*t230*t3036;
  t3318 = t3296 + t3316 + t3317;
  t3383 = -1.0000001112680001*t262*t746*t360;
  t3384 = 0.104528*t641*t2722;
  t3390 = -0.994522*t641*t2983;
  t3397 = t3383 + t3384 + t3390;
  t3411 = 0.994522*t641*t262*t746;
  t3420 = 0.103955395616*t360*t2722;
  t3423 = -0.9890740084840001*t360*t2983;
  t3424 = t3411 + t3420 + t3423;
  t3439 = -0.104528*t641*t262*t746;
  t3441 = -0.010926102783999999*t360*t2722;
  t3442 = 0.103955395616*t360*t2983;
  t3443 = t3439 + t3441 + t3442;
  t3405 = t1892*t3397;
  t3435 = t1736*t3424;
  t3444 = t1836*t3443;
  t3445 = t3405 + t3435 + t3444;
  t3449 = t1685*t3397;
  t3451 = t1627*t3424;
  t3454 = t1672*t3443;
  t3460 = t3449 + t3451 + t3454;
  t3463 = t1357*t3397;
  t3470 = t261*t3424;
  t3484 = t1105*t3443;
  t3493 = t3463 + t3470 + t3484;
  t3578 = -1.*t749*t2197*t536;
  t3579 = t262*t802;
  t3586 = t3578 + t3579;
  t3589 = -1.*t262*t749;
  t3592 = -1.*t2197*t536*t802;
  t3598 = t3589 + t3592;
  t3587 = -1.*t750*t3586;
  t3599 = t792*t3598;
  t3604 = t3587 + t3599;
  t3610 = t792*t3586;
  t3613 = t750*t3598;
  t3620 = t3610 + t3613;
  t3577 = -1.*t746*t442*t2197;
  t3608 = 0.103955395616*t714*t3604;
  t3621 = t999*t3620;
  t3623 = t3577 + t3608 + t3621;
  t3625 = -1.*t746*t1132*t2197;
  t3628 = t1206*t3604;
  t3630 = 0.103955395616*t714*t3620;
  t3642 = t3625 + t3628 + t3630;
  t3645 = -1.*t1360*t746*t2197;
  t3654 = t1439*t3604;
  t3669 = t1516*t3620;
  t3673 = t3645 + t3654 + t3669;
  t3624 = t261*t3623;
  t3643 = t1105*t3642;
  t3675 = t1357*t3673;
  t3676 = t3624 + t3643 + t3675;
  t3685 = t1627*t3623;
  t3699 = t1672*t3642;
  t3700 = t1685*t3673;
  t3701 = t3685 + t3699 + t3700;
  t3711 = t1736*t3623;
  t3715 = t1836*t3642;
  t3718 = t1892*t3673;
  t3719 = t3711 + t3715 + t3718;
  t3792 = -1.*t746*t749*t750*t2197;
  t3795 = t792*t746*t2197*t802;
  t3796 = t3792 + t3795;
  t3802 = t792*t746*t749*t2197;
  t3804 = t746*t750*t2197*t802;
  t3806 = t3802 + t3804;
  t3791 = -1.*t442*t2197*t536;
  t3799 = 0.103955395616*t714*t3796;
  t3807 = t999*t3806;
  t3809 = t3791 + t3799 + t3807;
  t3812 = -1.*t1132*t2197*t536;
  t3813 = t1206*t3796;
  t3816 = 0.103955395616*t714*t3806;
  t3818 = t3812 + t3813 + t3816;
  t3824 = -1.*t1360*t2197*t536;
  t3828 = t1439*t3796;
  t3830 = t1516*t3806;
  t3833 = t3824 + t3828 + t3830;
  t3810 = t261*t3809;
  t3819 = t1105*t3818;
  t3835 = t1357*t3833;
  t3841 = t3810 + t3819 + t3835;
  t3847 = t1627*t3809;
  t3850 = t1672*t3818;
  t3851 = t1685*t3833;
  t3854 = t3847 + t3850 + t3851;
  t3858 = t1736*t3809;
  t3861 = t1836*t3818;
  t3862 = t1892*t3833;
  t3865 = t3858 + t3861 + t3862;
  t3962 = t749*t2197*t536;
  t3966 = -1.*t262*t802;
  t3969 = t3962 + t3966;
  t3978 = t750*t3969;
  t3982 = t3978 + t3599;
  t3985 = t792*t3969;
  t3988 = -1.*t750*t3598;
  t4016 = t3985 + t3988;
  t3983 = 0.103955395616*t714*t3982;
  t4026 = t1206*t4016;
  t4030 = t3983 + t4026;
  t4034 = t999*t3982;
  t4050 = 0.103955395616*t714*t4016;
  t4051 = t4034 + t4050;
  t4083 = t1516*t3982;
  t4084 = t1439*t4016;
  t4093 = t4083 + t4084;
  t4033 = t1105*t4030;
  t4056 = t261*t4051;
  t4094 = t1357*t4093;
  t4096 = t4033 + t4056 + t4094;
  t4118 = t1672*t4030;
  t4119 = t1627*t4051;
  t4122 = t1685*t4093;
  t4124 = t4118 + t4119 + t4122;
  t4131 = t1836*t4030;
  t4138 = t1736*t4051;
  t4139 = t1892*t4093;
  t4140 = t4131 + t4138 + t4139;
  t4243 = t262*t749;
  t4245 = t2197*t536*t802;
  t4252 = t4243 + t4245;
  t4219 = -1.*t750*t3969;
  t4258 = t792*t4252;
  t4265 = t4219 + t4258;
  t4278 = -1.*t792*t3969;
  t4280 = -1.*t750*t4252;
  t4284 = t4278 + t4280;
  t4275 = 0.103955395616*t714*t4265;
  t4285 = t1206*t4284;
  t4291 = t4275 + t4285;
  t4314 = t999*t4265;
  t4315 = 0.103955395616*t714*t4284;
  t4332 = t4314 + t4315;
  t4335 = t1516*t4265;
  t4340 = t1439*t4284;
  t4347 = t4335 + t4340;
  t4306 = t1105*t4291;
  t4333 = t261*t4332;
  t4348 = t1357*t4347;
  t4359 = t4306 + t4333 + t4348;
  t4366 = t1672*t4291;
  t4381 = t1627*t4332;
  t4384 = t1685*t4347;
  t4385 = t4366 + t4381 + t4384;
  t4395 = t1836*t4291;
  t4400 = t1736*t4332;
  t4405 = t1892*t4347;
  t4423 = t4395 + t4400 + t4405;
  t4531 = t750*t4252;
  t4534 = t3985 + t4531;
  t4515 = t746*t442*t2197;
  t4539 = t999*t4534;
  t4547 = t4515 + t4275 + t4539;
  t4555 = t746*t1132*t2197;
  t4557 = t1206*t4265;
  t4559 = 0.103955395616*t714*t4534;
  t4563 = t4555 + t4557 + t4559;
  t4568 = t1360*t746*t2197;
  t4570 = t1439*t4265;
  t4574 = t1516*t4534;
  t4582 = t4568 + t4570 + t4574;
  t4548 = t261*t4547;
  t4564 = t1105*t4563;
  t4583 = t1357*t4582;
  t4592 = t4548 + t4564 + t4583;
  t4611 = t1627*t4547;
  t4613 = t1672*t4563;
  t4618 = t1685*t4582;
  t4626 = t4611 + t4613 + t4618;
  t4636 = t1736*t4547;
  t4647 = t1836*t4563;
  t4649 = t1892*t4582;
  t4651 = t4636 + t4647 + t4649;
  t4719 = -0.5054634410180001*t230*t4547;
  t4722 = t3221*t4563;
  t4725 = t3236*t4582;
  t4733 = t4719 + t4722 + t4725;
  t4741 = t3264*t4547;
  t4742 = -0.9945383682050002*t230*t4563;
  t4749 = t3276*t4582;
  t4752 = t4741 + t4742 + t4749;
  t4761 = t3292*t4547;
  t4763 = t3308*t4563;
  t4766 = -0.500001190325*t230*t4582;
  t4768 = t4761 + t4763 + t4766;
  t4814 = -1.0000001112680001*t746*t360*t2197;
  t4815 = 0.104528*t641*t4265;
  t4817 = -0.994522*t641*t4534;
  t4822 = t4814 + t4815 + t4817;
  t4826 = 0.994522*t641*t746*t2197;
  t4830 = 0.103955395616*t360*t4265;
  t4841 = -0.9890740084840001*t360*t4534;
  t4842 = t4826 + t4830 + t4841;
  t4849 = -0.104528*t641*t746*t2197;
  t4851 = -0.010926102783999999*t360*t4265;
  t4852 = 0.103955395616*t360*t4534;
  t4854 = t4849 + t4851 + t4852;
  t4825 = t1892*t4822;
  t4843 = t1736*t4842;
  t4858 = t1836*t4854;
  t4859 = t4825 + t4843 + t4858;
  t4865 = t1685*t4822;
  t4872 = t1627*t4842;
  t4887 = t1672*t4854;
  t4888 = t4865 + t4872 + t4887;
  t4896 = t1357*t4822;
  t4897 = t261*t4842;
  t4904 = t1105*t4854;
  t4905 = t4896 + t4897 + t4904;
  t4975 = -1.*t746*t749*t750;
  t4976 = t792*t746*t802;
  t4979 = t4975 + t4976;
  t4981 = -1.*t792*t746*t749;
  t4982 = -1.*t746*t750*t802;
  t4983 = t4981 + t4982;
  t4980 = 0.103955395616*t714*t4979;
  t4985 = t1206*t4983;
  t4986 = t4980 + t4985;
  t4998 = t999*t4979;
  t5001 = 0.103955395616*t714*t4983;
  t5010 = t4998 + t5001;
  t5016 = t1516*t4979;
  t5020 = t1439*t4983;
  t5023 = t5016 + t5020;
  t4995 = t1105*t4986;
  t5014 = t261*t5010;
  t5035 = t1357*t5023;
  t5049 = t4995 + t5014 + t5035;
  t5060 = t1672*t4986;
  t5061 = t1627*t5010;
  t5065 = t1685*t5023;
  t5076 = t5060 + t5061 + t5065;
  t5086 = t1836*t4986;
  t5088 = t1736*t5010;
  t5089 = t1892*t5023;
  t5099 = t5086 + t5088 + t5089;
  t5153 = t792*t746*t749;
  t5162 = t746*t750*t802;
  t5167 = t5153 + t5162;
  t5148 = -1.*t442*t536;
  t5172 = t999*t5167;
  t5181 = t5148 + t4980 + t5172;
  t5183 = -1.*t1132*t536;
  t5184 = t1206*t4979;
  t5185 = 0.103955395616*t714*t5167;
  t5186 = t5183 + t5184 + t5185;
  t5193 = -1.*t1360*t536;
  t5195 = t1439*t4979;
  t5196 = t1516*t5167;
  t5198 = t5193 + t5195 + t5196;
  t5182 = t261*t5181;
  t5192 = t1105*t5186;
  t5201 = t1357*t5198;
  t5204 = t5182 + t5192 + t5201;
  t5216 = t1627*t5181;
  t5224 = t1672*t5186;
  t5231 = t1685*t5198;
  t5233 = t5216 + t5224 + t5231;
  t5271 = t1736*t5181;
  t5274 = t1836*t5186;
  t5275 = t1892*t5198;
  t5282 = t5271 + t5274 + t5275;
  t5380 = -0.5054634410180001*t230*t5181;
  t5381 = t3221*t5186;
  t5387 = t3236*t5198;
  t5389 = t5380 + t5381 + t5387;
  t5408 = t3264*t5181;
  t5409 = -0.9945383682050002*t230*t5186;
  t5421 = t3276*t5198;
  t5424 = t5408 + t5409 + t5421;
  t5428 = t3292*t5181;
  t5434 = t3308*t5186;
  t5446 = -0.500001190325*t230*t5198;
  t5448 = t5428 + t5434 + t5446;
  t5506 = t746*t749*t750;
  t5507 = -1.*t792*t746*t802;
  t5509 = t5506 + t5507;
  t5517 = 0.103955395616*t714*t5509;
  t5519 = t1206*t5167;
  t5520 = t5517 + t5519;
  t5538 = t999*t5509;
  t5540 = t5538 + t5185;
  t5545 = t1516*t5509;
  t5556 = t1439*t5167;
  t5570 = t5545 + t5556;
  t5536 = t1105*t5520;
  t5544 = t261*t5540;
  t5574 = t1357*t5570;
  t5579 = t5536 + t5544 + t5574;
  t5597 = t1672*t5520;
  t5600 = t1627*t5540;
  t5622 = t1685*t5570;
  t5630 = t5597 + t5600 + t5622;
  t5635 = t1836*t5520;
  t5638 = t1736*t5540;
  t5645 = t1892*t5570;
  t5646 = t5635 + t5638 + t5645;
  t5718 = 1.0000001112680001*t360*t536;
  t5722 = 0.104528*t641*t4979;
  t5723 = -0.994522*t641*t5167;
  t5724 = t5718 + t5722 + t5723;
  t5731 = -0.994522*t641*t536;
  t5733 = 0.103955395616*t360*t4979;
  t5735 = -0.9890740084840001*t360*t5167;
  t5742 = t5731 + t5733 + t5735;
  t5750 = 0.104528*t641*t536;
  t5751 = -0.010926102783999999*t360*t4979;
  t5752 = 0.103955395616*t360*t5167;
  t5755 = t5750 + t5751 + t5752;
  t5728 = t1892*t5724;
  t5743 = t1736*t5742;
  t5763 = t1836*t5755;
  t5769 = t5728 + t5743 + t5763;
  t5780 = t1685*t5724;
  t5782 = t1627*t5742;
  t5787 = t1672*t5755;
  t5789 = t5780 + t5782 + t5787;
  t5804 = t1357*t5724;
  t5805 = t261*t5742;
  t5807 = t1105*t5755;
  t5823 = t5804 + t5805 + t5807;
  t5882 = t749*t750*t536;
  t5883 = -1.*t792*t536*t802;
  t5887 = t5882 + t5883;
  t5894 = -1.*t792*t749*t536;
  t5902 = -1.*t750*t536*t802;
  t5903 = t5894 + t5902;
  t5879 = -1.*t746*t442;
  t5891 = 0.103955395616*t714*t5887;
  t5910 = t999*t5903;
  t5912 = t5879 + t5891 + t5910;
  t5915 = -1.*t746*t1132;
  t5918 = t1206*t5887;
  t5919 = 0.103955395616*t714*t5903;
  t5921 = t5915 + t5918 + t5919;
  t5924 = -1.*t1360*t746;
  t5928 = t1439*t5887;
  t5930 = t1516*t5903;
  t5931 = t5924 + t5928 + t5930;
  t5914 = t261*t5912;
  t5923 = t1105*t5921;
  t5934 = t1357*t5931;
  t5945 = t5914 + t5923 + t5934;
  t5959 = t1627*t5912;
  t5960 = t1672*t5921;
  t5961 = t1685*t5931;
  t5966 = t5959 + t5960 + t5961;
  t5969 = t1736*t5912;
  t5977 = t1836*t5921;
  t5978 = t1892*t5931;
  t5980 = t5969 + t5977 + t5978;
  t1575 = t27*t1559;
  t1698 = 0.103955395616*t1590*t1690;
  t1927 = t1731*t1904;
  t1935 = t1575 + t1698 + t1927;
  t1995 = t1957*t1559;
  t2018 = t2005*t1690;
  t2022 = 0.103955395616*t1590*t1904;
  t2048 = t1995 + t2018 + t2022;
  t2112 = t2100*t1559;
  t2159 = t2120*t1690;
  t2173 = t2169*t1904;
  t2180 = t2112 + t2159 + t2173;
  t2414 = t27*t2413;
  t2445 = 0.103955395616*t1590*t2436;
  t2526 = t1731*t2511;
  t2570 = t2414 + t2445 + t2526;
  t2577 = t1957*t2413;
  t2585 = t2005*t2436;
  t2587 = 0.103955395616*t1590*t2511;
  t2588 = t2577 + t2585 + t2587;
  t2591 = t2100*t2413;
  t2616 = t2120*t2436;
  t2618 = t2169*t2511;
  t2619 = t2591 + t2616 + t2618;
  t2799 = t27*t2788;
  t2829 = 0.103955395616*t1590*t2826;
  t2860 = t1731*t2851;
  t2872 = t2799 + t2829 + t2860;
  t2883 = t1957*t2788;
  t2887 = t2005*t2826;
  t2890 = 0.103955395616*t1590*t2851;
  t2909 = t2883 + t2887 + t2890;
  t2914 = t2100*t2788;
  t2917 = t2120*t2826;
  t2919 = t2169*t2851;
  t2932 = t2914 + t2917 + t2919;
  t3042 = -1.0000001112680001*t17*t3039;
  t3067 = -0.994522*t1585*t3064;
  t3106 = 0.104528*t1585*t3102;
  t3112 = t3042 + t3067 + t3106;
  t3123 = -0.104528*t1585*t3039;
  t3126 = 0.103955395616*t17*t3064;
  t3130 = -0.010926102783999999*t17*t3102;
  t3133 = t3123 + t3126 + t3130;
  t3141 = 0.994522*t1585*t3039;
  t3144 = -0.9890740084840001*t17*t3064;
  t3153 = 0.103955395616*t17*t3102;
  t3156 = t3141 + t3144 + t3153;
  t3259 = t2120*t3255;
  t3288 = t2169*t3282;
  t3322 = t2100*t3318;
  t3323 = t3259 + t3288 + t3322;
  t3326 = 0.103955395616*t1590*t3255;
  t3327 = t1731*t3282;
  t3337 = t27*t3318;
  t3341 = t3326 + t3327 + t3337;
  t3344 = t2005*t3255;
  t3346 = 0.103955395616*t1590*t3282;
  t3350 = t1957*t3318;
  t3356 = t3344 + t3346 + t3350;
  t3447 = t2169*t3445;
  t3461 = t2120*t3460;
  t3513 = t2100*t3493;
  t3539 = t3447 + t3461 + t3513;
  t3542 = t1731*t3445;
  t3545 = 0.103955395616*t1590*t3460;
  t3546 = t27*t3493;
  t3548 = t3542 + t3545 + t3546;
  t3552 = 0.103955395616*t1590*t3445;
  t3555 = t2005*t3460;
  t3558 = t1957*t3493;
  t3559 = t3552 + t3555 + t3558;
  t3677 = t27*t3676;
  t3710 = 0.103955395616*t1590*t3701;
  t3720 = t1731*t3719;
  t3729 = t3677 + t3710 + t3720;
  t3738 = t1957*t3676;
  t3745 = t2005*t3701;
  t3751 = 0.103955395616*t1590*t3719;
  t3752 = t3738 + t3745 + t3751;
  t3756 = t2100*t3676;
  t3765 = t2120*t3701;
  t3767 = t2169*t3719;
  t3772 = t3756 + t3765 + t3767;
  t3844 = t27*t3841;
  t3856 = 0.103955395616*t1590*t3854;
  t3866 = t1731*t3865;
  t3867 = t3844 + t3856 + t3866;
  t3870 = t1957*t3841;
  t3873 = t2005*t3854;
  t3876 = 0.103955395616*t1590*t3865;
  t3880 = t3870 + t3873 + t3876;
  t3886 = t2100*t3841;
  t3894 = t2120*t3854;
  t3902 = t2169*t3865;
  t3905 = t3886 + t3894 + t3902;
  t3914 = t27*t3039;
  t3919 = 0.103955395616*t1590*t3064;
  t3922 = t1731*t3102;
  t3923 = t3914 + t3919 + t3922;
  t3926 = t1957*t3039;
  t3928 = t2005*t3064;
  t3932 = 0.103955395616*t1590*t3102;
  t3933 = t3926 + t3928 + t3932;
  t3938 = t2100*t3039;
  t3939 = t2120*t3064;
  t3942 = t2169*t3102;
  t3944 = t3938 + t3939 + t3942;
  t4114 = t27*t4096;
  t4126 = 0.103955395616*t1590*t4124;
  t4142 = t1731*t4140;
  t4146 = t4114 + t4126 + t4142;
  t4153 = t1957*t4096;
  t4162 = t2005*t4124;
  t4167 = 0.103955395616*t1590*t4140;
  t4172 = t4153 + t4162 + t4167;
  t4178 = t2100*t4096;
  t4179 = t2120*t4124;
  t4181 = t2169*t4140;
  t4185 = t4178 + t4179 + t4181;
  t4361 = t27*t4359;
  t4389 = 0.103955395616*t1590*t4385;
  t4424 = t1731*t4423;
  t4427 = t4361 + t4389 + t4424;
  t4445 = t1957*t4359;
  t4451 = t2005*t4385;
  t4460 = 0.103955395616*t1590*t4423;
  t4463 = t4445 + t4451 + t4460;
  t4467 = t2100*t4359;
  t4472 = t2120*t4385;
  t4476 = t2169*t4423;
  t4490 = t4467 + t4472 + t4476;
  t4607 = -1.0000001112680001*t17*t4592;
  t4627 = -0.994522*t1585*t4626;
  t4661 = 0.104528*t1585*t4651;
  t4666 = t4607 + t4627 + t4661;
  t4675 = -0.104528*t1585*t4592;
  t4683 = 0.103955395616*t17*t4626;
  t4685 = -0.010926102783999999*t17*t4651;
  t4695 = t4675 + t4683 + t4685;
  t4703 = 0.994522*t1585*t4592;
  t4704 = -0.9890740084840001*t17*t4626;
  t4707 = 0.103955395616*t17*t4651;
  t4708 = t4703 + t4704 + t4707;
  t4740 = t2120*t4733;
  t4758 = t2169*t4752;
  t4769 = t2100*t4768;
  t4770 = t4740 + t4758 + t4769;
  t4777 = 0.103955395616*t1590*t4733;
  t4780 = t1731*t4752;
  t4783 = t27*t4768;
  t4785 = t4777 + t4780 + t4783;
  t4795 = t2005*t4733;
  t4796 = 0.103955395616*t1590*t4752;
  t4799 = t1957*t4768;
  t4804 = t4795 + t4796 + t4799;
  t4863 = t2169*t4859;
  t4892 = t2120*t4888;
  t4912 = t2100*t4905;
  t4913 = t4863 + t4892 + t4912;
  t4925 = t1731*t4859;
  t4929 = 0.103955395616*t1590*t4888;
  t4937 = t27*t4905;
  t4939 = t4925 + t4929 + t4937;
  t4946 = 0.103955395616*t1590*t4859;
  t4948 = t2005*t4888;
  t4952 = t1957*t4905;
  t4958 = t4946 + t4948 + t4952;
  t5059 = t27*t5049;
  t5084 = 0.103955395616*t1590*t5076;
  t5106 = t1731*t5099;
  t5107 = t5059 + t5084 + t5106;
  t5111 = t1957*t5049;
  t5114 = t2005*t5076;
  t5120 = 0.103955395616*t1590*t5099;
  t5123 = t5111 + t5114 + t5120;
  t5128 = t2100*t5049;
  t5129 = t2120*t5076;
  t5133 = t2169*t5099;
  t5135 = t5128 + t5129 + t5133;
  t5215 = -1.0000001112680001*t17*t5204;
  t5248 = -0.994522*t1585*t5233;
  t5293 = 0.104528*t1585*t5282;
  t5296 = t5215 + t5248 + t5293;
  t5305 = -0.104528*t1585*t5204;
  t5311 = 0.103955395616*t17*t5233;
  t5312 = -0.010926102783999999*t17*t5282;
  t5316 = t5305 + t5311 + t5312;
  t5329 = 0.994522*t1585*t5204;
  t5334 = -0.9890740084840001*t17*t5233;
  t5345 = 0.103955395616*t17*t5282;
  t5352 = t5329 + t5334 + t5345;
  t5400 = t2120*t5389;
  t5427 = t2169*t5424;
  t5449 = t2100*t5448;
  t5452 = t5400 + t5427 + t5449;
  t5463 = 0.103955395616*t1590*t5389;
  t5467 = t1731*t5424;
  t5468 = t27*t5448;
  t5473 = t5463 + t5467 + t5468;
  t5482 = t2005*t5389;
  t5485 = 0.103955395616*t1590*t5424;
  t5490 = t1957*t5448;
  t5491 = t5482 + t5485 + t5490;
  t5585 = t27*t5579;
  t5632 = 0.103955395616*t1590*t5630;
  t5649 = t1731*t5646;
  t5650 = t5585 + t5632 + t5649;
  t5662 = t1957*t5579;
  t5667 = t2005*t5630;
  t5681 = 0.103955395616*t1590*t5646;
  t5687 = t5662 + t5667 + t5681;
  t5695 = t2100*t5579;
  t5700 = t2120*t5630;
  t5709 = t2169*t5646;
  t5710 = t5695 + t5700 + t5709;
  t5778 = t2169*t5769;
  t5796 = t2120*t5789;
  t5826 = t2100*t5823;
  t5828 = t5778 + t5796 + t5826;
  t5833 = t1731*t5769;
  t5834 = 0.103955395616*t1590*t5789;
  t5839 = t27*t5823;
  t5841 = t5833 + t5834 + t5839;
  t5854 = 0.103955395616*t1590*t5769;
  t5857 = t2005*t5789;
  t5859 = t1957*t5823;
  t5861 = t5854 + t5857 + t5859;
  t5950 = t27*t5945;
  t5968 = 0.103955395616*t1590*t5966;
  t5990 = t1731*t5980;
  t5994 = t5950 + t5968 + t5990;
  t5998 = t1957*t5945;
  t6017 = t2005*t5966;
  t6028 = 0.103955395616*t1590*t5980;
  t6029 = t5998 + t6017 + t6028;
  t6036 = t2100*t5945;
  t6040 = t2120*t5966;
  t6043 = t2169*t5980;
  t6044 = t6036 + t6040 + t6043;
  t6807 = -1.*t792;
  t6810 = 1. + t6807;
  t6937 = 0.051978134642000004*t134;
  t6973 = -0.05226439969100001*t134;
  t6948 = 0.49726168403800003*t134;
  t6849 = 0.12*t6810;
  t6855 = -0.4*t750;
  t6859 = 0. + t6849 + t6855;
  t6819 = 0.4*t6810;
  t6820 = 0.12*t750;
  t6821 = 0. + t6819 + t6820;
  t6899 = 1.1924972351948546e-8*var1[14];
  t6912 = 0.38315655000705834*t714;
  t6924 = -0.05650052807*t442;
  t6925 = t6899 + t6912 + t6924;
  t6874 = 1.1345904784751044e-7*var1[14];
  t6876 = -0.04027119345689465*t714;
  t6878 = -0.05650052807*t1132;
  t6880 = t6874 + t6876 + t6878;
  t6967 = 1.639789470231751e-8*var1[15];
  t6969 = 0.22983603018311177*t134;
  t6974 = t6973 + t1850;
  t6983 = 0.164383620275*t6974;
  t6989 = t6937 + t1735;
  t6990 = 0.18957839082800002*t6989;
  t6992 = t6967 + t6969 + t6983 + t6990;
  t6931 = -1.5601527583902087e-7*var1[15];
  t6933 = 0.09582494577057615*t134;
  t6938 = t6937 + t1665;
  t6941 = 0.231098203479*t6938;
  t6961 = t6948 + t1675;
  t6962 = 0.164383620275*t6961;
  t6964 = t6931 + t6933 + t6941 + t6962;
  t7003 = 1.568745163810375e-7*var1[15];
  t7005 = 0.08219200580743281*t134;
  t7006 = t6973 + t1089;
  t7007 = 0.231098203479*t7006;
  t7010 = t6948 + t252;
  t7011 = 0.18957839082800002*t7010;
  t7018 = t7003 + t7005 + t7007 + t7011;
  t7025 = 0.19098732144477495*t1590;
  t7026 = 0.137024246638*t2120;
  t7027 = -0.014401763312*t2169;
  t7029 = 0. + t7025 + t7026 + t7027;
  t7035 = -5.06291820800569e-8*var1[16];
  t7037 = 0.13702426188441388*t1590;
  t7039 = 0.190987300194*t1957;
  t7042 = t7035 + t7037 + t7039;
  t7051 = -4.817066759205414e-7*var1[16];
  t7052 = -0.0144017649144554*t1590;
  t7053 = 0.190987300194*t27;
  t7056 = t7051 + t7052 + t7053;
  t7235 = 0.051978134642000004*t230;
  t7258 = -0.05226439969100001*t230;
  t7244 = 0.49726168403800003*t230;
  t6829 = -0.056500534356700764*t714;
  t6835 = 0.38315650737400003*t1516;
  t6836 = -0.040271188976*t1439;
  t6840 = 0. + t6829 + t6835 + t6836;
  t7111 = 0.12*t792;
  t7112 = 0.4*t750;
  t7114 = t7111 + t7112;
  t7118 = -0.4*t792;
  t7128 = t7118 + t6820;
  t7186 = -0.13777901533039377*t1585;
  t7187 = 0.19098732144477495*t17;
  t7196 = t7186 + t7187;
  t7198 = 0.18994107176353728*t1585;
  t7200 = 0.13702426188441388*t17;
  t7201 = -5.06291820800569e-8 + t7198 + t7200;
  t7214 = -0.019963520514678434*t1585;
  t7218 = -0.0144017649144554*t17;
  t7219 = -4.817066759205414e-7 + t7214 + t7218;
  t7236 = t3200 + t7235;
  t7242 = 0.231098203479*t7236;
  t7246 = t3223 + t7244;
  t7250 = 0.164383620275*t7246;
  t7251 = 0.09582494577057615*t230;
  t7252 = -1.5601527583902087e-7 + t7242 + t7250 + t7251;
  t7259 = t3268 + t7258;
  t7263 = 0.164383620275*t7259;
  t7265 = t3262 + t7235;
  t7266 = 0.18957839082800002*t7265;
  t7271 = 0.22983603018311177*t230;
  t7276 = 1.639789470231751e-8 + t7263 + t7266 + t7271;
  t7281 = t3301 + t7258;
  t7282 = 0.231098203479*t7281;
  t7288 = t3291 + t7244;
  t7292 = 0.18957839082800002*t7288;
  t7293 = 0.08219200580743281*t230;
  t7297 = 1.568745163810375e-7 + t7282 + t7292 + t7293;
  t7339 = -0.3852670428678886*t641;
  t7344 = -0.056500534356700764*t360;
  t7347 = t7339 + t7344;
  t7349 = 0.0059058871981009595*t641;
  t7350 = -0.04027119345689465*t360;
  t7351 = 1.1345904784751044e-7 + t7349 + t7350;
  t7354 = -0.05619101817723254*t641;
  t7355 = 0.38315655000705834*t360;
  t7356 = 1.1924972351948546e-8 + t7354 + t7355;
  p_output1[0]=(-0.040001*t3729 + 0.380588*t3752 + 0.92388*t3772)*var2[3] + (-0.040001*t1935 + 0.380588*t2048 + 0.92388*t2180)*var2[4] + (-0.040001*t2570 + 0.380588*t2588 + 0.92388*t2619)*var2[5] + (-0.040001*t2872 + 0.380588*t2909 + 0.92388*t2932)*var2[13] + (0.92388*t3539 - 0.040001*t3548 + 0.380588*t3559)*var2[14] + (0.92388*t3323 - 0.040001*t3341 + 0.380588*t3356)*var2[15] + (0.92388*t3112 - 0.040001*t3133 + 0.380588*t3156)*var2[16];
  p_output1[1]=(-0.040001*t3923 + 0.380588*t3933 + 0.92388*t3944)*var2[3] + (-0.040001*t3867 + 0.380588*t3880 + 0.92388*t3905)*var2[4] + (-0.040001*t4146 + 0.380588*t4172 + 0.92388*t4185)*var2[5] + (-0.040001*t4427 + 0.380588*t4463 + 0.92388*t4490)*var2[13] + (0.92388*t4913 - 0.040001*t4939 + 0.380588*t4958)*var2[14] + (0.92388*t4770 - 0.040001*t4785 + 0.380588*t4804)*var2[15] + (0.92388*t4666 - 0.040001*t4695 + 0.380588*t4708)*var2[16];
  p_output1[2]=(-0.040001*t5994 + 0.380588*t6029 + 0.92388*t6044)*var2[4] + (-0.040001*t5650 + 0.380588*t5687 + 0.92388*t5710)*var2[5] + (-0.040001*t5107 + 0.380588*t5123 + 0.92388*t5135)*var2[13] + (0.92388*t5828 - 0.040001*t5841 + 0.380588*t5861)*var2[14] + (0.92388*t5452 - 0.040001*t5473 + 0.380588*t5491)*var2[15] + (0.92388*t5296 - 0.040001*t5316 + 0.380588*t5352)*var2[16];
  p_output1[3]=0;
  p_output1[4]=(0.096572*t3729 - 0.918819*t3752 + 0.382684*t3772)*var2[3] + (0.096572*t1935 - 0.918819*t2048 + 0.382684*t2180)*var2[4] + (0.096572*t2570 - 0.918819*t2588 + 0.382684*t2619)*var2[5] + (0.096572*t2872 - 0.918819*t2909 + 0.382684*t2932)*var2[13] + (0.382684*t3539 + 0.096572*t3548 - 0.918819*t3559)*var2[14] + (0.382684*t3323 + 0.096572*t3341 - 0.918819*t3356)*var2[15] + (0.382684*t3112 + 0.096572*t3133 - 0.918819*t3156)*var2[16];
  p_output1[5]=(0.096572*t3923 - 0.918819*t3933 + 0.382684*t3944)*var2[3] + (0.096572*t3867 - 0.918819*t3880 + 0.382684*t3905)*var2[4] + (0.096572*t4146 - 0.918819*t4172 + 0.382684*t4185)*var2[5] + (0.096572*t4427 - 0.918819*t4463 + 0.382684*t4490)*var2[13] + (0.382684*t4913 + 0.096572*t4939 - 0.918819*t4958)*var2[14] + (0.382684*t4770 + 0.096572*t4785 - 0.918819*t4804)*var2[15] + (0.382684*t4666 + 0.096572*t4695 - 0.918819*t4708)*var2[16];
  p_output1[6]=(0.096572*t5994 - 0.918819*t6029 + 0.382684*t6044)*var2[4] + (0.096572*t5650 - 0.918819*t5687 + 0.382684*t5710)*var2[5] + (0.096572*t5107 - 0.918819*t5123 + 0.382684*t5135)*var2[13] + (0.382684*t5828 + 0.096572*t5841 - 0.918819*t5861)*var2[14] + (0.382684*t5452 + 0.096572*t5473 - 0.918819*t5491)*var2[15] + (0.382684*t5296 + 0.096572*t5316 - 0.918819*t5352)*var2[16];
  p_output1[7]=0;
  p_output1[8]=(0.994522*t3729 + 0.104528*t3752)*var2[3] + (0.994522*t1935 + 0.104528*t2048)*var2[4] + (0.994522*t2570 + 0.104528*t2588)*var2[5] + (0.994522*t2872 + 0.104528*t2909)*var2[13] + (0.994522*t3548 + 0.104528*t3559)*var2[14] + (0.994522*t3341 + 0.104528*t3356)*var2[15] + (0.994522*t3133 + 0.104528*t3156)*var2[16];
  p_output1[9]=(0.994522*t3923 + 0.104528*t3933)*var2[3] + (0.994522*t3867 + 0.104528*t3880)*var2[4] + (0.994522*t4146 + 0.104528*t4172)*var2[5] + (0.994522*t4427 + 0.104528*t4463)*var2[13] + (0.994522*t4939 + 0.104528*t4958)*var2[14] + (0.994522*t4785 + 0.104528*t4804)*var2[15] + (0.994522*t4695 + 0.104528*t4708)*var2[16];
  p_output1[10]=(0.994522*t5994 + 0.104528*t6029)*var2[4] + (0.994522*t5650 + 0.104528*t5687)*var2[5] + (0.994522*t5107 + 0.104528*t5123)*var2[13] + (0.994522*t5841 + 0.104528*t5861)*var2[14] + (0.994522*t5473 + 0.104528*t5491)*var2[15] + (0.994522*t5316 + 0.104528*t5352)*var2[16];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (0.250125*t3729 + 0.206868*t3752 + 0.290567*t3772 + t3586*t6821 + t3598*t6859 + t3604*t6880 + t3620*t6925 + t3623*t6964 + t3642*t6992 + t3673*t7018 + t3676*t7029 + t3701*t7042 + t3719*t7056 - 1.*t2197*t6840*t746)*var2[3] + (0.250125*t1935 + 0.206868*t2048 + 0.290567*t2180 - 1.*t262*t536*t6840 + t1026*t6925 + t1028*t6964 + t1343*t6992 + t1550*t7018 + t1559*t7029 + t1690*t7042 + t1904*t7056 + t262*t6821*t746*t749 + t262*t6859*t746*t802 + t6880*t846)*var2[4] + (0.250125*t2570 + 0.206868*t2588 + 0.290567*t2619 + t2264*t6821 + t2219*t6859 + t2316*t6880 + t2279*t6925 + t2369*t6964 + t2341*t6992 + t2403*t7018 + t2413*t7029 + t2436*t7042 + t2511*t7056)*var2[5] + (0.250125*t2872 + 0.206868*t2909 + 0.290567*t2932 + t2742*t6880 + t2722*t6925 + t2762*t6964 + t2746*t6992 + t2781*t7018 + t2788*t7029 + t2826*t7042 + t2851*t7056 + t2219*t7114 + t2705*t7128)*var2[13] + (0.290567*t3539 + 0.250125*t3548 + 0.206868*t3559 + t3424*t6964 + t3443*t6992 + t3397*t7018 + t3493*t7029 + t3460*t7042 + t3445*t7056 + t2722*t7351 + t2983*t7356 + t262*t7347*t746)*var2[14] + (0.290567*t3323 + 0.250125*t3341 + 0.206868*t3356 + t3318*t7029 + t3255*t7042 + t3282*t7056 + t2992*t7252 + t3028*t7276 + t3036*t7297)*var2[15] + (0.290567*t3112 + 0.250125*t3133 + 0.206868*t3156 + t3039*t7196 + t3064*t7201 + t3102*t7219)*var2[16];
  p_output1[13]=var2[1] + (0.250125*t3923 + 0.206868*t3933 + 0.290567*t3944 + t2219*t6821 + t2705*t6859 + t2722*t6880 + t2983*t6925 + t2992*t6964 + t3028*t6992 + t3036*t7018 + t3039*t7029 + t3064*t7042 + t3102*t7056 + t262*t6840*t746)*var2[3] + (0.250125*t3867 + 0.206868*t3880 + 0.290567*t3905 - 1.*t2197*t536*t6840 + t3796*t6880 + t3806*t6925 + t3809*t6964 + t3818*t6992 + t3833*t7018 + t3841*t7029 + t3854*t7042 + t3865*t7056 + t2197*t6821*t746*t749 + t2197*t6859*t746*t802)*var2[4] + (0.250125*t4146 + 0.206868*t4172 + 0.290567*t4185 + t3598*t6821 + t3969*t6859 + t4016*t6880 + t3982*t6925 + t4051*t6964 + t4030*t6992 + t4093*t7018 + t4096*t7029 + t4124*t7042 + t4140*t7056)*var2[5] + (0.250125*t4427 + 0.206868*t4463 + 0.290567*t4490 + t4284*t6880 + t4265*t6925 + t4332*t6964 + t4291*t6992 + t4347*t7018 + t4359*t7029 + t4385*t7042 + t4423*t7056 + t3969*t7114 + t4252*t7128)*var2[13] + (0.290567*t4913 + 0.250125*t4939 + 0.206868*t4958 + t4842*t6964 + t4854*t6992 + t4822*t7018 + t4905*t7029 + t4888*t7042 + t4859*t7056 + t4265*t7351 + t4534*t7356 + t2197*t7347*t746)*var2[14] + (0.290567*t4770 + 0.250125*t4785 + 0.206868*t4804 + t4768*t7029 + t4733*t7042 + t4752*t7056 + t4547*t7252 + t4563*t7276 + t4582*t7297)*var2[15] + (0.290567*t4666 + 0.250125*t4695 + 0.206868*t4708 + t4592*t7196 + t4626*t7201 + t4651*t7219)*var2[16];
  p_output1[14]=var2[2] + (0.250125*t5994 + 0.206868*t6029 + 0.290567*t6044 + t5887*t6880 + t5903*t6925 + t5912*t6964 + t5921*t6992 + t5931*t7018 + t5945*t7029 + t5966*t7042 + t5980*t7056 - 1.*t6840*t746 - 1.*t536*t6821*t749 - 1.*t536*t6859*t802)*var2[4] + (0.250125*t5650 + 0.206868*t5687 + 0.290567*t5710 + t5167*t6880 + t5509*t6925 + t5540*t6964 + t5520*t6992 + t5570*t7018 + t5579*t7029 + t5630*t7042 + t5646*t7056 + t6859*t746*t749 - 1.*t6821*t746*t802)*var2[5] + (0.250125*t5107 + 0.206868*t5123 + 0.290567*t5135 + t4983*t6880 + t4979*t6925 + t5010*t6964 + t4986*t6992 + t5023*t7018 + t5049*t7029 + t5076*t7042 + t5099*t7056 + t7114*t746*t749 + t7128*t746*t802)*var2[13] + (0.290567*t5828 + 0.250125*t5841 + 0.206868*t5861 + t5742*t6964 + t5755*t6992 + t5724*t7018 + t5823*t7029 + t5789*t7042 + t5769*t7056 - 1.*t536*t7347 + t4979*t7351 + t5167*t7356)*var2[14] + (0.290567*t5452 + 0.250125*t5473 + 0.206868*t5491 + t5448*t7029 + t5389*t7042 + t5424*t7056 + t5181*t7252 + t5186*t7276 + t5198*t7297)*var2[15] + (0.290567*t5296 + 0.250125*t5316 + 0.206868*t5352 + t5204*t7196 + t5233*t7201 + t5282*t7219)*var2[16];
  p_output1[15]=0;
}



void dT_left_elbow_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
