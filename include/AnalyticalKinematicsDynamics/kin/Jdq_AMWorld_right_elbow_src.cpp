/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:22:31 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jdq_AMWorld_right_elbow_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t391;
  double t438;
  double t446;
  double t547;
  double t549;
  double t554;
  double t570;
  double t707;
  double t613;
  double t621;
  double t636;
  double t650;
  double t663;
  double t456;
  double t467;
  double t491;
  double t525;
  double t543;
  double t664;
  double t731;
  double t733;
  double t735;
  double t738;
  double t742;
  double t752;
  double t766;
  double t955;
  double t1104;
  double t563;
  double t601;
  double t604;
  double t610;
  double t667;
  double t668;
  double t673;
  double t679;
  double t695;
  double t811;
  double t863;
  double t350;
  double t356;
  double t369;
  double t1016;
  double t1023;
  double t1043;
  double t1284;
  double t1309;
  double t1327;
  double t1332;
  double t1386;
  double t1392;
  double t1484;
  double t1527;
  double t1531;
  double t1571;
  double t1574;
  double t1619;
  double t1636;
  double t1639;
  double t1641;
  double t1651;
  double t1658;
  double t2012;
  double t1839;
  double t1859;
  double t1865;
  double t1891;
  double t1942;
  double t1964;
  double t1981;
  double t1994;
  double t1822;
  double t2022;
  double t2023;
  double t2047;
  double t2049;
  double t2082;
  double t2177;
  double t2187;
  double t2199;
  double t1495;
  double t1521;
  double t966;
  double t1006;
  double t2389;
  double t2391;
  double t2495;
  double t2502;
  double t2576;
  double t2648;
  double t2719;
  double t2722;
  double t2741;
  double t2775;
  double t2795;
  double t2800;
  double t2838;
  double t2881;
  double t2887;
  double t2926;
  double t2964;
  double t2981;
  double t380;
  double t389;
  double t1738;
  double t1747;
  double t1820;
  double t2657;
  double t2812;
  double t2986;
  double t3003;
  double t3058;
  double t3122;
  double t3125;
  double t3131;
  double t3153;
  double t3159;
  double t3165;
  double t3176;
  double t3238;
  double t3239;
  double t3280;
  double t3288;
  double t3307;
  double t3320;
  double t3363;
  double t3377;
  double t2295;
  double t3657;
  double t3677;
  double t3720;
  double t3757;
  double t3836;
  double t3848;
  double t3859;
  double t3872;
  double t3980;
  double t3992;
  double t4007;
  double t4030;
  double t3760;
  double t3911;
  double t4037;
  double t4073;
  double t4117;
  double t4131;
  double t4133;
  double t4144;
  double t4214;
  double t4220;
  double t4225;
  double t4229;
  double t4248;
  double t4271;
  double t4290;
  double t4320;
  double t4413;
  double t4431;
  double t4484;
  double t4499;
  double t4682;
  double t4700;
  double t4697;
  double t4704;
  double t4705;
  double t4708;
  double t4738;
  double t4740;
  double t4707;
  double t4742;
  double t4754;
  double t4775;
  double t4786;
  double t4792;
  double t4685;
  double t4770;
  double t4795;
  double t4798;
  double t4810;
  double t4827;
  double t4830;
  double t4838;
  double t4843;
  double t4851;
  double t4880;
  double t4886;
  double t4808;
  double t4842;
  double t4925;
  double t4929;
  double t4933;
  double t4942;
  double t4944;
  double t4952;
  double t4968;
  double t4969;
  double t4973;
  double t4983;
  double t933;
  double t1490;
  double t1682;
  double t1683;
  double t1745;
  double t1995;
  double t2213;
  double t2222;
  double t2229;
  double t2253;
  double t2260;
  double t2288;
  double t2301;
  double t2310;
  double t2317;
  double t2324;
  double t3034;
  double t3139;
  double t3195;
  double t3222;
  double t3231;
  double t3306;
  double t3380;
  double t3444;
  double t3456;
  double t3464;
  double t3469;
  double t3472;
  double t3545;
  double t3568;
  double t3598;
  double t3613;
  double t4095;
  double t4202;
  double t4234;
  double t4236;
  double t4244;
  double t4393;
  double t4503;
  double t4538;
  double t4539;
  double t4549;
  double t4550;
  double t4565;
  double t4580;
  double t4591;
  double t4624;
  double t4632;
  double t4930;
  double t4967;
  double t5007;
  double t5011;
  double t5064;
  double t5080;
  double t5094;
  double t5115;
  double t5227;
  double t5239;
  double t5249;
  double t5250;
  double t2375;
  double t3648;
  double t4673;
  double t4681;
  double t5431;
  double t5437;
  double t5439;
  double t5446;
  double t5450;
  double t5482;
  double t5441;
  double t5536;
  double t5552;
  double t5568;
  double t5577;
  double t5581;
  double t5428;
  double t5557;
  double t5583;
  double t5597;
  double t5603;
  double t5614;
  double t5617;
  double t5619;
  double t5668;
  double t5670;
  double t5671;
  double t5681;
  double t5598;
  double t5625;
  double t5711;
  double t5733;
  double t5747;
  double t5754;
  double t5767;
  double t5780;
  double t5815;
  double t5837;
  double t5840;
  double t5849;
  double t5161;
  double t5163;
  double t5209;
  double t5211;
  double t5738;
  double t5805;
  double t5850;
  double t5856;
  double t5868;
  double t5870;
  double t5874;
  double t5877;
  double t5320;
  double t5323;
  double t5354;
  double t5357;
  double t5927;
  double t5931;
  double t5935;
  double t5937;
  double t6015;
  double t6020;
  double t6027;
  double t6035;
  double t6036;
  double t6037;
  double t6001;
  double t6030;
  double t6045;
  double t6046;
  double t6062;
  double t6065;
  double t6077;
  double t6080;
  double t6109;
  double t6110;
  double t6126;
  double t6128;
  double t6048;
  double t6105;
  double t6129;
  double t6131;
  double t6139;
  double t6141;
  double t6151;
  double t6179;
  double t6192;
  double t6202;
  double t6211;
  double t6214;
  double t6135;
  double t6181;
  double t6215;
  double t6217;
  double t6232;
  double t6238;
  double t6243;
  double t6244;
  double t6270;
  double t6271;
  double t6277;
  double t6278;
  double t5020;
  double t5140;
  double t5141;
  double t6297;
  double t6302;
  double t6305;
  double t6311;
  double t6313;
  double t6319;
  double t6334;
  double t6359;
  double t6361;
  double t5220;
  double t5225;
  double t5260;
  double t5264;
  double t5370;
  double t5386;
  double t5390;
  double t5407;
  double t6310;
  double t6320;
  double t6365;
  double t6370;
  double t5859;
  double t5900;
  double t5906;
  double t6373;
  double t6378;
  double t6382;
  double t6393;
  double t5920;
  double t5921;
  double t5938;
  double t5939;
  double t6399;
  double t6406;
  double t6407;
  double t6426;
  double t5946;
  double t5948;
  double t5957;
  double t5970;
  double t6224;
  double t6245;
  double t6251;
  double t6268;
  double t6269;
  double t6279;
  double t6284;
  double t6286;
  double t6288;
  double t6289;
  double t6290;
  double t6494;
  double t6501;
  double t6508;
  double t6514;
  double t6516;
  double t6522;
  double t6523;
  double t6528;
  double t6540;
  double t6544;
  double t6548;
  double t6550;
  double t6589;
  double t6592;
  double t6604;
  double t6607;
  double t6617;
  double t6623;
  double t6624;
  double t6625;
  double t6643;
  double t6645;
  double t6652;
  double t6665;
  double t6608;
  double t6633;
  double t6670;
  double t6671;
  double t6682;
  double t6683;
  double t6689;
  double t6694;
  double t6703;
  double t6704;
  double t6710;
  double t6711;
  double t6763;
  double t6764;
  double t6765;
  double t6774;
  double t6779;
  double t6786;
  double t6803;
  double t6806;
  double t6815;
  double t6772;
  double t6793;
  double t6817;
  double t6821;
  double t6832;
  double t6833;
  double t6835;
  double t6836;
  double t6839;
  double t6841;
  double t6843;
  double t6844;
  double t6894;
  double t6896;
  double t6902;
  double t6905;
  double t6908;
  double t6928;
  double t6934;
  double t6937;
  double t6941;
  double t6944;
  double t6948;
  double t6951;
  double t6907;
  double t6939;
  double t6953;
  double t6955;
  double t6966;
  double t6973;
  double t6976;
  double t6978;
  double t6996;
  double t7000;
  double t7007;
  double t7008;
  t391 = Cos(var1[27]);
  t438 = -1.*t391;
  t446 = 1. + t438;
  t547 = Cos(var1[26]);
  t549 = -1.*t547;
  t554 = 1. + t549;
  t570 = Sin(var1[26]);
  t707 = Sin(var1[27]);
  t613 = -0.010926102783999999*t446;
  t621 = 1. + t613;
  t636 = -0.994522*t621;
  t650 = -0.010866249592949247*t446;
  t663 = t636 + t650;
  t456 = -0.9890740084840001*t446;
  t467 = 1. + t456;
  t491 = 0.104528*t467;
  t525 = 0.10338592795881554*t446;
  t543 = t491 + t525;
  t664 = -0.05226439969100001*t554;
  t731 = -0.994522*t707;
  t733 = 0. + t731;
  t735 = 0.104528*t733;
  t738 = -0.104528*t707;
  t742 = 0. + t738;
  t752 = -0.994522*t742;
  t766 = t735 + t752;
  t955 = Sin(var1[25]);
  t1104 = 0.051978134642000004*t554;
  t563 = -0.49726168403800003*t554;
  t601 = -0.073913*t570;
  t604 = t563 + t601;
  t610 = t543*t604;
  t667 = 0.703234*t570;
  t668 = t664 + t667;
  t673 = t663*t668;
  t679 = -0.500001190325*t554;
  t695 = 1. + t679;
  t811 = t695*t766;
  t863 = 0. + t610 + t673 + t811;
  t350 = Cos(var1[25]);
  t356 = -1.*t350;
  t369 = 1. + t356;
  t1016 = -0.9945383682050002*t554;
  t1023 = 1. + t1016;
  t1043 = t1023*t663;
  t1284 = -0.707107*t570;
  t1309 = t1104 + t1284;
  t1327 = t543*t1309;
  t1332 = -0.703234*t570;
  t1386 = t664 + t1332;
  t1392 = t1386*t766;
  t1484 = 0. + t1043 + t1327 + t1392;
  t1527 = -0.5054634410180001*t554;
  t1531 = 1. + t1527;
  t1571 = t1531*t543;
  t1574 = 0.707107*t570;
  t1619 = t1104 + t1574;
  t1636 = t663*t1619;
  t1639 = 0.073913*t570;
  t1641 = t563 + t1639;
  t1651 = t1641*t766;
  t1658 = 0. + t1571 + t1636 + t1651;
  t2012 = Sin(var1[24]);
  t1839 = 0.994522*t955;
  t1859 = 0. + t1839;
  t1865 = t1859*t863;
  t1891 = -0.103955395616*t369*t1484;
  t1942 = -0.9890740084840001*t369;
  t1964 = 1. + t1942;
  t1981 = t1964*t1658;
  t1994 = 0. + t1865 + t1891 + t1981;
  t1822 = Cos(var1[24]);
  t2022 = 0.104528*t955;
  t2023 = 0. + t2022;
  t2047 = t2023*t863;
  t2049 = -0.010926102783999999*t369;
  t2082 = 1. + t2049;
  t2177 = t2082*t1484;
  t2187 = -0.103955395616*t369*t1658;
  t2199 = 0. + t2047 + t2177 + t2187;
  t1495 = -0.994522*t955;
  t1521 = 0. + t1495;
  t966 = -0.104528*t955;
  t1006 = 0. + t966;
  t2389 = -1.0000001112680001*t446;
  t2391 = 1. + t2389;
  t2495 = -0.382684*t2391;
  t2502 = 0.918819*t733;
  t2576 = 0.096572*t742;
  t2648 = t2495 + t2502 + t2576;
  t2719 = 0.096572*t621;
  t2722 = -0.0955161926444975*t446;
  t2741 = 0.104528*t707;
  t2775 = 0. + t2741;
  t2795 = -0.382684*t2775;
  t2800 = t2719 + t2722 + t2795;
  t2838 = 0.918819*t467;
  t2881 = -0.010039180465428352*t446;
  t2887 = 0.994522*t707;
  t2926 = 0. + t2887;
  t2964 = -0.382684*t2926;
  t2981 = t2838 + t2881 + t2964;
  t380 = -1.0000001112680001*t369;
  t389 = 1. + t380;
  t1738 = Sin(var1[4]);
  t1747 = Cos(var1[4]);
  t1820 = Cos(var1[5]);
  t2657 = t1641*t2648;
  t2812 = t1619*t2800;
  t2986 = t1531*t2981;
  t3003 = 0. + t2657 + t2812 + t2986;
  t3058 = t1386*t2648;
  t3122 = t1023*t2800;
  t3125 = t1309*t2981;
  t3131 = 0. + t3058 + t3122 + t3125;
  t3153 = t695*t2648;
  t3159 = t668*t2800;
  t3165 = t604*t2981;
  t3176 = 0. + t3153 + t3159 + t3165;
  t3238 = -0.103955395616*t369*t3003;
  t3239 = t2082*t3131;
  t3280 = t2023*t3176;
  t3288 = 0. + t3238 + t3239 + t3280;
  t3307 = t1964*t3003;
  t3320 = -0.103955395616*t369*t3131;
  t3363 = t1859*t3176;
  t3377 = 0. + t3307 + t3320 + t3363;
  t2295 = Sin(var1[5]);
  t3657 = 0.92388*t2391;
  t3677 = 0.380588*t733;
  t3720 = 0.040001*t742;
  t3757 = t3657 + t3677 + t3720;
  t3836 = 0.040001*t621;
  t3848 = -0.0395641761067022*t446;
  t3859 = 0.92388*t2775;
  t3872 = t3836 + t3848 + t3859;
  t3980 = 0.380588*t467;
  t3992 = -0.004158319780035616*t446;
  t4007 = 0.92388*t2926;
  t4030 = t3980 + t3992 + t4007;
  t3760 = t1641*t3757;
  t3911 = t1619*t3872;
  t4037 = t1531*t4030;
  t4073 = 0. + t3760 + t3911 + t4037;
  t4117 = t1386*t3757;
  t4131 = t1023*t3872;
  t4133 = t1309*t4030;
  t4144 = 0. + t4117 + t4131 + t4133;
  t4214 = t695*t3757;
  t4220 = t668*t3872;
  t4225 = t604*t4030;
  t4229 = 0. + t4214 + t4220 + t4225;
  t4248 = -0.103955395616*t369*t4073;
  t4271 = t2082*t4144;
  t4290 = t2023*t4229;
  t4320 = 0. + t4248 + t4271 + t4290;
  t4413 = t1964*t4073;
  t4431 = -0.103955395616*t369*t4144;
  t4484 = t1859*t4229;
  t4499 = 0. + t4413 + t4431 + t4484;
  t4682 = Cos(var1[3]);
  t4700 = Sin(var1[3]);
  t4697 = t4682*t1820*t1738;
  t4704 = t4700*t2295;
  t4705 = t4697 + t4704;
  t4708 = -1.*t1820*t4700;
  t4738 = t4682*t1738*t2295;
  t4740 = t4708 + t4738;
  t4707 = -1.*t2012*t4705;
  t4742 = t1822*t4740;
  t4754 = t4707 + t4742;
  t4775 = t1822*t4705;
  t4786 = t2012*t4740;
  t4792 = t4775 + t4786;
  t4685 = t4682*t1747*t1521;
  t4770 = -0.103955395616*t369*t4754;
  t4795 = t1964*t4792;
  t4798 = t4685 + t4770 + t4795;
  t4810 = t4682*t1747*t1006;
  t4827 = t2082*t4754;
  t4830 = -0.103955395616*t369*t4792;
  t4838 = t4810 + t4827 + t4830;
  t4843 = t389*t4682*t1747;
  t4851 = t2023*t4754;
  t4880 = t1859*t4792;
  t4886 = t4843 + t4851 + t4880;
  t4808 = t1641*t4798;
  t4842 = t1386*t4838;
  t4925 = t695*t4886;
  t4929 = t4808 + t4842 + t4925;
  t4933 = t1531*t4798;
  t4942 = t1309*t4838;
  t4944 = t604*t4886;
  t4952 = t4933 + t4942 + t4944;
  t4968 = t1619*t4798;
  t4969 = t1023*t4838;
  t4973 = t668*t4886;
  t4983 = t4968 + t4969 + t4973;
  t933 = t389*t863;
  t1490 = t1006*t1484;
  t1682 = t1521*t1658;
  t1683 = 0. + t933 + t1490 + t1682;
  t1745 = -1.*t1683*t1738;
  t1995 = t1822*t1994;
  t2213 = -1.*t2012*t2199;
  t2222 = 0. + t1995 + t2213;
  t2229 = t1820*t2222;
  t2253 = t2012*t1994;
  t2260 = t1822*t2199;
  t2288 = 0. + t2253 + t2260;
  t2301 = t2288*t2295;
  t2310 = 0. + t2229 + t2301;
  t2317 = t1747*t2310;
  t2324 = 0. + t1745 + t2317;
  t3034 = t1521*t3003;
  t3139 = t1006*t3131;
  t3195 = t389*t3176;
  t3222 = 0. + t3034 + t3139 + t3195;
  t3231 = -1.*t3222*t1738;
  t3306 = -1.*t2012*t3288;
  t3380 = t1822*t3377;
  t3444 = 0. + t3306 + t3380;
  t3456 = t1820*t3444;
  t3464 = t1822*t3288;
  t3469 = t2012*t3377;
  t3472 = 0. + t3464 + t3469;
  t3545 = t3472*t2295;
  t3568 = 0. + t3456 + t3545;
  t3598 = t1747*t3568;
  t3613 = 0. + t3231 + t3598;
  t4095 = t1521*t4073;
  t4202 = t1006*t4144;
  t4234 = t389*t4229;
  t4236 = 0. + t4095 + t4202 + t4234;
  t4244 = -1.*t4236*t1738;
  t4393 = -1.*t2012*t4320;
  t4503 = t1822*t4499;
  t4538 = 0. + t4393 + t4503;
  t4539 = t1820*t4538;
  t4549 = t1822*t4320;
  t4550 = t2012*t4499;
  t4565 = 0. + t4549 + t4550;
  t4580 = t4565*t2295;
  t4591 = 0. + t4539 + t4580;
  t4624 = t1747*t4591;
  t4632 = 0. + t4244 + t4624;
  t4930 = t742*t4929;
  t4967 = -0.103955395616*t446*t4952;
  t5007 = t621*t4983;
  t5011 = t4930 + t4967 + t5007;
  t5064 = t733*t4929;
  t5080 = t467*t4952;
  t5094 = -0.103955395616*t446*t4983;
  t5115 = t5064 + t5080 + t5094;
  t5227 = t2391*t4929;
  t5239 = t2926*t4952;
  t5249 = t2775*t4983;
  t5250 = t5227 + t5239 + t5249;
  t2375 = -0.00001*t2324;
  t3648 = -0.00002*t3613;
  t4673 = 0.0014*t4632;
  t4681 = t2375 + t3648 + t4673;
  t5431 = t1820*t4700*t1738;
  t5437 = -1.*t4682*t2295;
  t5439 = t5431 + t5437;
  t5446 = t4682*t1820;
  t5450 = t4700*t1738*t2295;
  t5482 = t5446 + t5450;
  t5441 = -1.*t2012*t5439;
  t5536 = t1822*t5482;
  t5552 = t5441 + t5536;
  t5568 = t1822*t5439;
  t5577 = t2012*t5482;
  t5581 = t5568 + t5577;
  t5428 = t1747*t1521*t4700;
  t5557 = -0.103955395616*t369*t5552;
  t5583 = t1964*t5581;
  t5597 = t5428 + t5557 + t5583;
  t5603 = t1747*t1006*t4700;
  t5614 = t2082*t5552;
  t5617 = -0.103955395616*t369*t5581;
  t5619 = t5603 + t5614 + t5617;
  t5668 = t389*t1747*t4700;
  t5670 = t2023*t5552;
  t5671 = t1859*t5581;
  t5681 = t5668 + t5670 + t5671;
  t5598 = t1641*t5597;
  t5625 = t1386*t5619;
  t5711 = t695*t5681;
  t5733 = t5598 + t5625 + t5711;
  t5747 = t1531*t5597;
  t5754 = t1309*t5619;
  t5767 = t604*t5681;
  t5780 = t5747 + t5754 + t5767;
  t5815 = t1619*t5597;
  t5837 = t1023*t5619;
  t5840 = t668*t5681;
  t5849 = t5815 + t5837 + t5840;
  t5161 = -0.00002*t2324;
  t5163 = 0.00956*t3613;
  t5209 = -0.00003*t4632;
  t5211 = t5161 + t5163 + t5209;
  t5738 = t742*t5733;
  t5805 = -0.103955395616*t446*t5780;
  t5850 = t621*t5849;
  t5856 = t5738 + t5805 + t5850;
  t5868 = t733*t5733;
  t5870 = t467*t5780;
  t5874 = -0.103955395616*t446*t5849;
  t5877 = t5868 + t5870 + t5874;
  t5320 = 0.0014*t2324;
  t5323 = -0.00003*t3613;
  t5354 = 0.00048*t4632;
  t5357 = t5320 + t5323 + t5354;
  t5927 = t2391*t5733;
  t5931 = t2926*t5780;
  t5935 = t2775*t5849;
  t5937 = t5927 + t5931 + t5935;
  t6015 = -1.*t1747*t1820*t2012;
  t6020 = t1822*t1747*t2295;
  t6027 = t6015 + t6020;
  t6035 = t1822*t1747*t1820;
  t6036 = t1747*t2012*t2295;
  t6037 = t6035 + t6036;
  t6001 = -1.*t1521*t1738;
  t6030 = -0.103955395616*t369*t6027;
  t6045 = t1964*t6037;
  t6046 = t6001 + t6030 + t6045;
  t6062 = -1.*t1006*t1738;
  t6065 = t2082*t6027;
  t6077 = -0.103955395616*t369*t6037;
  t6080 = t6062 + t6065 + t6077;
  t6109 = -1.*t389*t1738;
  t6110 = t2023*t6027;
  t6126 = t1859*t6037;
  t6128 = t6109 + t6110 + t6126;
  t6048 = t1641*t6046;
  t6105 = t1386*t6080;
  t6129 = t695*t6128;
  t6131 = t6048 + t6105 + t6129;
  t6139 = t1531*t6046;
  t6141 = t1309*t6080;
  t6151 = t604*t6128;
  t6179 = t6139 + t6141 + t6151;
  t6192 = t1619*t6046;
  t6202 = t1023*t6080;
  t6211 = t668*t6128;
  t6214 = t6192 + t6202 + t6211;
  t6135 = t742*t6131;
  t6181 = -0.103955395616*t446*t6179;
  t6215 = t621*t6214;
  t6217 = t6135 + t6181 + t6215;
  t6232 = t733*t6131;
  t6238 = t467*t6179;
  t6243 = -0.103955395616*t446*t6214;
  t6244 = t6232 + t6238 + t6243;
  t6270 = t2391*t6131;
  t6271 = t2926*t6179;
  t6277 = t2775*t6214;
  t6278 = t6270 + t6271 + t6277;
  t5020 = -0.994522*t5011;
  t5140 = 0.104528*t5115;
  t5141 = t5020 + t5140;
  t6297 = t1820*t2288;
  t6302 = -1.*t2222*t2295;
  t6305 = 0. + t6297 + t6302;
  t6311 = t1820*t3472;
  t6313 = -1.*t3444*t2295;
  t6319 = 0. + t6311 + t6313;
  t6334 = t1820*t4565;
  t6359 = -1.*t4538*t2295;
  t6361 = 0. + t6334 + t6359;
  t5220 = 0.096572*t5011;
  t5225 = 0.918819*t5115;
  t5260 = -0.382684*t5250;
  t5264 = t5220 + t5225 + t5260;
  t5370 = 0.040001*t5011;
  t5386 = 0.380588*t5115;
  t5390 = 0.92388*t5250;
  t5407 = t5370 + t5386 + t5390;
  t6310 = -0.00001*t6305;
  t6320 = -0.00002*t6319;
  t6365 = 0.0014*t6361;
  t6370 = t6310 + t6320 + t6365;
  t5859 = -0.994522*t5856;
  t5900 = 0.104528*t5877;
  t5906 = t5859 + t5900;
  t6373 = -0.00002*t6305;
  t6378 = 0.00956*t6319;
  t6382 = -0.00003*t6361;
  t6393 = t6373 + t6378 + t6382;
  t5920 = 0.096572*t5856;
  t5921 = 0.918819*t5877;
  t5938 = -0.382684*t5937;
  t5939 = t5920 + t5921 + t5938;
  t6399 = 0.0014*t6305;
  t6406 = -0.00003*t6319;
  t6407 = 0.00048*t6361;
  t6426 = t6399 + t6406 + t6407;
  t5946 = 0.040001*t5856;
  t5948 = 0.380588*t5877;
  t5957 = 0.92388*t5937;
  t5970 = t5946 + t5948 + t5957;
  t6224 = -0.994522*t6217;
  t6245 = 0.104528*t6244;
  t6251 = t6224 + t6245;
  t6268 = 0.096572*t6217;
  t6269 = 0.918819*t6244;
  t6279 = -0.382684*t6278;
  t6284 = t6268 + t6269 + t6279;
  t6286 = 0.040001*t6217;
  t6288 = 0.380588*t6244;
  t6289 = 0.92388*t6278;
  t6290 = t6286 + t6288 + t6289;
  t6494 = -0.00001*t1683;
  t6501 = -0.00002*t3222;
  t6508 = 0.0014*t4236;
  t6514 = t6494 + t6501 + t6508;
  t6516 = -0.00002*t1683;
  t6522 = 0.00956*t3222;
  t6523 = -0.00003*t4236;
  t6528 = t6516 + t6522 + t6523;
  t6540 = 0.0014*t1683;
  t6544 = -0.00003*t3222;
  t6548 = 0.00048*t4236;
  t6550 = t6540 + t6544 + t6548;
  t6589 = -1.*t389*t863;
  t6592 = -1.*t1006*t1484;
  t6604 = -1.*t1521*t1658;
  t6607 = 0. + t6589 + t6592 + t6604;
  t6617 = -1.*t1521*t3003;
  t6623 = -1.*t1006*t3131;
  t6624 = -1.*t389*t3176;
  t6625 = 0. + t6617 + t6623 + t6624;
  t6643 = -1.*t1521*t4073;
  t6645 = -1.*t1006*t4144;
  t6652 = -1.*t389*t4229;
  t6665 = 0. + t6643 + t6645 + t6652;
  t6608 = -0.00001*t6607;
  t6633 = -0.00002*t6625;
  t6670 = 0.0014*t6665;
  t6671 = t6608 + t6633 + t6670;
  t6682 = -0.00002*t6607;
  t6683 = 0.00956*t6625;
  t6689 = -0.00003*t6665;
  t6694 = t6682 + t6683 + t6689;
  t6703 = 0.0014*t6607;
  t6704 = -0.00003*t6625;
  t6710 = 0.00048*t6665;
  t6711 = t6703 + t6704 + t6710;
  t6763 = -0.994522*t1484;
  t6764 = 0.104528*t1658;
  t6765 = 0. + t6763 + t6764;
  t6774 = 0.104528*t3003;
  t6779 = -0.994522*t3131;
  t6786 = 0. + t6774 + t6779;
  t6803 = 0.104528*t4073;
  t6806 = -0.994522*t4144;
  t6815 = 0. + t6803 + t6806;
  t6772 = -0.00001*t6765;
  t6793 = -0.00002*t6786;
  t6817 = 0.0014*t6815;
  t6821 = t6772 + t6793 + t6817;
  t6832 = -0.00002*t6765;
  t6833 = 0.00956*t6786;
  t6835 = -0.00003*t6815;
  t6836 = t6832 + t6833 + t6835;
  t6839 = 0.0014*t6765;
  t6841 = -0.00003*t6786;
  t6843 = 0.00048*t6815;
  t6844 = t6839 + t6841 + t6843;
  t6894 = -0.073913*t663;
  t6896 = -0.703234*t543;
  t6902 = 0.707107*t766;
  t6905 = 0. + t6894 + t6896 + t6902;
  t6908 = 0.707107*t2648;
  t6928 = -0.073913*t2800;
  t6934 = -0.703234*t2981;
  t6937 = 0. + t6908 + t6928 + t6934;
  t6941 = 0.707107*t3757;
  t6944 = -0.073913*t3872;
  t6948 = -0.703234*t4030;
  t6951 = 0. + t6941 + t6944 + t6948;
  t6907 = -0.00001*t6905;
  t6939 = -0.00002*t6937;
  t6953 = 0.0014*t6951;
  t6955 = t6907 + t6939 + t6953;
  t6966 = -0.00002*t6905;
  t6973 = 0.00956*t6937;
  t6976 = -0.00003*t6951;
  t6978 = t6966 + t6973 + t6976;
  t6996 = 0.0014*t6905;
  t7000 = -0.00003*t6937;
  t7007 = 0.00048*t6951;
  t7008 = t6996 + t7000 + t7007;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=t4681*t5141 + t5211*t5264 + t5357*t5407;
  p_output1[10]=t4681*t5906 + t5211*t5939 + t5357*t5970;
  p_output1[11]=t4681*t6251 + t5211*t6284 + t5357*t6290;
  p_output1[12]=t5141*t6370 + t5264*t6393 + t5407*t6426;
  p_output1[13]=t5906*t6370 + t5939*t6393 + t5970*t6426;
  p_output1[14]=t6251*t6370 + t6284*t6393 + t6290*t6426;
  p_output1[15]=t5141*t6514 + t5264*t6528 + t5407*t6550;
  p_output1[16]=t5906*t6514 + t5939*t6528 + t5970*t6550;
  p_output1[17]=t6251*t6514 + t6284*t6528 + t6290*t6550;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=t5141*t6671 + t5264*t6694 + t5407*t6711;
  p_output1[73]=t5906*t6671 + t5939*t6694 + t5970*t6711;
  p_output1[74]=t6251*t6671 + t6284*t6694 + t6290*t6711;
  p_output1[75]=t5141*t6821 + t5264*t6836 + t5407*t6844;
  p_output1[76]=t5906*t6821 + t5939*t6836 + t5970*t6844;
  p_output1[77]=t6251*t6821 + t6284*t6836 + t6290*t6844;
  p_output1[78]=t5141*t6955 + t5264*t6978 + t5407*t7008;
  p_output1[79]=t5906*t6955 + t5939*t6978 + t5970*t7008;
  p_output1[80]=t6251*t6955 + t6284*t6978 + t6290*t7008;
  p_output1[81]=-9.999668670840007e-6*t5141 - 0.000020006377476740062*t5264 + 0.0014000002851719201*t5407;
  p_output1[82]=-9.999668670840007e-6*t5906 - 0.000020006377476740062*t5939 + 0.0014000002851719201*t5970;
  p_output1[83]=-9.999668670840007e-6*t6251 - 0.000020006377476740062*t6284 + 0.0014000002851719201*t6290;
}



void Jdq_AMWorld_right_elbow_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
