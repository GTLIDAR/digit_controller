/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:07:28 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "R_left_toe_roll_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1425;
  double t1333;
  double t1429;
  double t1345;
  double t1452;
  double t1184;
  double t1271;
  double t1314;
  double t1330;
  double t1576;
  double t1579;
  double t1581;
  double t1350;
  double t1480;
  double t1485;
  double t1583;
  double t1006;
  double t1068;
  double t1103;
  double t1487;
  double t1605;
  double t1611;
  double t1624;
  double t1631;
  double t1668;
  double t1691;
  double t1720;
  double t1892;
  double t1910;
  double t1913;
  double t1926;
  double t1931;
  double t1937;
  double t1969;
  double t1972;
  double t1982;
  double t2000;
  double t1615;
  double t1616;
  double t1620;
  double t1672;
  double t1721;
  double t1722;
  double t1762;
  double t1764;
  double t2009;
  double t1850;
  double t1857;
  double t1860;
  double t1864;
  double t1871;
  double t1873;
  double t1874;
  double t1875;
  double t836;
  double t965;
  double t969;
  double t717;
  double t1774;
  double t1778;
  double t1820;
  double t1885;
  double t2010;
  double t2021;
  double t2039;
  double t2061;
  double t2067;
  double t2115;
  double t2116;
  double t2121;
  double t2137;
  double t2153;
  double t2155;
  double t2156;
  double t2158;
  double t2160;
  double t2171;
  double t2200;
  double t2203;
  double t2217;
  double t2218;
  double t2219;
  double t2220;
  double t2226;
  double t2228;
  double t2316;
  double t2319;
  double t2331;
  double t2062;
  double t2068;
  double t2092;
  double t2174;
  double t2181;
  double t2197;
  double t2239;
  double t2241;
  double t2291;
  double t2293;
  double t2294;
  double t2298;
  double t2300;
  double t2306;
  double t2307;
  double t2312;
  double t2336;
  double t2341;
  double t2342;
  double t2351;
  double t2352;
  double t2355;
  double t2358;
  double t2363;
  double t2369;
  double t2371;
  double t2378;
  double t2383;
  double t2391;
  double t522;
  double t530;
  double t535;
  double t679;
  double t727;
  double t743;
  double t2281;
  double t2285;
  double t2286;
  double t2315;
  double t2333;
  double t2334;
  double t2372;
  double t2373;
  double t2403;
  double t2405;
  double t2409;
  double t2414;
  double t2415;
  double t2417;
  double t2421;
  double t2422;
  double t2432;
  double t2440;
  double t2441;
  double t2448;
  double t2449;
  double t2450;
  double t2451;
  double t2454;
  double t2469;
  double t2465;
  double t682;
  double t701;
  double t2377;
  double t2424;
  double t2430;
  double t2431;
  double t2455;
  double t2459;
  double t2474;
  double t2483;
  double t2486;
  double t2489;
  double t2492;
  double t2493;
  double t2496;
  double t2498;
  double t2510;
  double t2511;
  double t2519;
  double t2522;
  double t2525;
  double t2527;
  double t2528;
  double t2532;
  double t2534;
  double t2536;
  double t634;
  double t669;
  double t2627;
  double t2628;
  double t2630;
  double t2621;
  double t2623;
  double t2624;
  double t2626;
  double t2631;
  double t2644;
  double t2658;
  double t2665;
  double t2666;
  double t2702;
  double t2703;
  double t2704;
  double t2705;
  double t2655;
  double t2672;
  double t2680;
  double t2681;
  double t2691;
  double t2694;
  double t2696;
  double t2698;
  double t2686;
  double t2701;
  double t2706;
  double t2707;
  double t2716;
  double t2720;
  double t2721;
  double t2724;
  double t2728;
  double t2732;
  double t2733;
  double t2735;
  double t2709;
  double t2725;
  double t2740;
  double t2750;
  double t2756;
  double t2761;
  double t2764;
  double t2765;
  double t2771;
  double t2778;
  double t2779;
  double t2781;
  double t2470;
  double t2473;
  double t2754;
  double t2770;
  double t2786;
  double t2793;
  double t2796;
  double t2798;
  double t2803;
  double t2806;
  double t2811;
  double t2813;
  double t2816;
  double t2817;
  double t2505;
  double t2507;
  double t2508;
  double t2556;
  double t2572;
  double t2794;
  double t2807;
  double t2818;
  double t2824;
  double t2582;
  double t2585;
  double t2833;
  double t2834;
  double t2835;
  double t2837;
  double t2605;
  double t2611;
  double t2612;
  double t2844;
  double t2857;
  double t2863;
  double t2865;
  double t2889;
  double t2890;
  double t2893;
  double t2897;
  double t2903;
  double t2904;
  double t2934;
  double t2937;
  double t2938;
  double t2940;
  double t2894;
  double t2911;
  double t2913;
  double t2914;
  double t2919;
  double t2924;
  double t2930;
  double t2931;
  double t2917;
  double t2932;
  double t2942;
  double t2954;
  double t2958;
  double t2959;
  double t2961;
  double t2963;
  double t2966;
  double t2971;
  double t2973;
  double t2974;
  double t2957;
  double t2965;
  double t2976;
  double t2978;
  double t2989;
  double t2994;
  double t2995;
  double t2996;
  double t3000;
  double t3006;
  double t3007;
  double t3017;
  double t2983;
  double t2997;
  double t3018;
  double t3020;
  double t3025;
  double t3028;
  double t3035;
  double t3036;
  double t3041;
  double t3043;
  double t3046;
  double t3048;
  double t3021;
  double t3038;
  double t3050;
  double t3054;
  double t3061;
  double t3066;
  double t3069;
  double t3070;
  double t3079;
  double t3083;
  double t3086;
  double t3088;
  double t2462;
  double t2499;
  double t2539;
  double t2540;
  double t2578;
  double t2586;
  double t2613;
  double t2616;
  double t3110;
  double t3113;
  double t3116;
  double t3121;
  double t3127;
  double t3131;
  double t2829;
  double t2840;
  double t2868;
  double t2870;
  double t2878;
  double t2879;
  double t2883;
  double t2885;
  double t3055;
  double t3074;
  double t3089;
  double t3090;
  double t3093;
  double t3094;
  double t3103;
  double t3104;
  double t3115;
  double t3125;
  double t3134;
  double t3135;
  double t3144;
  double t3148;
  double t3151;
  double t3152;
  double t3176;
  double t3192;
  double t3193;
  double t3204;
  t1425 = Cos(var1[3]);
  t1333 = Cos(var1[5]);
  t1429 = Sin(var1[4]);
  t1345 = Sin(var1[3]);
  t1452 = Sin(var1[5]);
  t1184 = Cos(var1[7]);
  t1271 = -1.*t1184;
  t1314 = 1. + t1271;
  t1330 = Cos(var1[6]);
  t1576 = t1425*t1333*t1429;
  t1579 = t1345*t1452;
  t1581 = t1576 + t1579;
  t1350 = -1.*t1333*t1345;
  t1480 = t1425*t1429*t1452;
  t1485 = t1350 + t1480;
  t1583 = Sin(var1[6]);
  t1006 = Cos(var1[8]);
  t1068 = -1.*t1006;
  t1103 = 1. + t1068;
  t1487 = t1330*t1485;
  t1605 = -1.*t1581*t1583;
  t1611 = t1487 + t1605;
  t1624 = t1330*t1581;
  t1631 = t1485*t1583;
  t1668 = t1624 + t1631;
  t1691 = Cos(var1[4]);
  t1720 = Sin(var1[7]);
  t1892 = -1.000000637725*t1314;
  t1910 = 1. + t1892;
  t1913 = t1425*t1691*t1910;
  t1926 = -0.930418*t1720;
  t1931 = 0. + t1926;
  t1937 = t1611*t1931;
  t1969 = -0.366501*t1720;
  t1972 = 0. + t1969;
  t1982 = t1668*t1972;
  t2000 = t1913 + t1937 + t1982;
  t1615 = -0.340999127418*t1314*t1611;
  t1616 = -0.134322983001*t1314;
  t1620 = 1. + t1616;
  t1672 = t1620*t1668;
  t1721 = 0.366501*t1720;
  t1722 = 0. + t1721;
  t1762 = t1425*t1691*t1722;
  t1764 = t1615 + t1672 + t1762;
  t2009 = Sin(var1[8]);
  t1850 = -0.8656776547239999*t1314;
  t1857 = 1. + t1850;
  t1860 = t1857*t1611;
  t1864 = -0.340999127418*t1314*t1668;
  t1871 = 0.930418*t1720;
  t1873 = 0. + t1871;
  t1874 = t1425*t1691*t1873;
  t1875 = t1860 + t1864 + t1874;
  t836 = Cos(var1[9]);
  t965 = -1.*t836;
  t969 = 1. + t965;
  t717 = Sin(var1[10]);
  t1774 = 0.340999127418*t1103*t1764;
  t1778 = -0.134322983001*t1103;
  t1820 = 1. + t1778;
  t1885 = t1820*t1875;
  t2010 = -0.366501*t2009;
  t2021 = 0. + t2010;
  t2039 = t2000*t2021;
  t2061 = t1774 + t1885 + t2039;
  t2067 = Sin(var1[9]);
  t2115 = -1.000000637725*t1103;
  t2116 = 1. + t2115;
  t2121 = t2116*t2000;
  t2137 = -0.930418*t2009;
  t2153 = 0. + t2137;
  t2155 = t1764*t2153;
  t2156 = 0.366501*t2009;
  t2158 = 0. + t2156;
  t2160 = t1875*t2158;
  t2171 = t2121 + t2155 + t2160;
  t2200 = -0.8656776547239999*t1103;
  t2203 = 1. + t2200;
  t2217 = t2203*t1764;
  t2218 = 0.340999127418*t1103*t1875;
  t2219 = 0.930418*t2009;
  t2220 = 0. + t2219;
  t2226 = t2000*t2220;
  t2228 = t2217 + t2218 + t2226;
  t2316 = Cos(var1[10]);
  t2319 = -1.*t2316;
  t2331 = 1. + t2319;
  t2062 = 0.340999127418*t969*t2061;
  t2068 = -0.930418*t2067;
  t2092 = 0. + t2068;
  t2174 = t2092*t2171;
  t2181 = -0.8656776547239999*t969;
  t2197 = 1. + t2181;
  t2239 = t2197*t2228;
  t2241 = t2062 + t2174 + t2239;
  t2291 = -0.134322983001*t969;
  t2293 = 1. + t2291;
  t2294 = t2293*t2061;
  t2298 = 0.366501*t2067;
  t2300 = 0. + t2298;
  t2306 = t2300*t2171;
  t2307 = 0.340999127418*t969*t2228;
  t2312 = t2294 + t2306 + t2307;
  t2336 = -0.366501*t2067;
  t2341 = 0. + t2336;
  t2342 = t2341*t2061;
  t2351 = -1.000000637725*t969;
  t2352 = 1. + t2351;
  t2355 = t2352*t2171;
  t2358 = 0.930418*t2067;
  t2363 = 0. + t2358;
  t2369 = t2363*t2228;
  t2371 = t2342 + t2355 + t2369;
  t2378 = Cos(var1[11]);
  t2383 = -1.*t2378;
  t2391 = 1. + t2383;
  t522 = Cos(var1[12]);
  t530 = -1.*t522;
  t535 = 1. + t530;
  t679 = Sin(var1[11]);
  t727 = 0.930418*t717;
  t743 = 0. + t727;
  t2281 = t743*t2241;
  t2285 = -0.366501*t717;
  t2286 = 0. + t2285;
  t2315 = t2286*t2312;
  t2333 = -1.000000637725*t2331;
  t2334 = 1. + t2333;
  t2372 = t2334*t2371;
  t2373 = t2281 + t2315 + t2372;
  t2403 = -0.8656776547239999*t2331;
  t2405 = 1. + t2403;
  t2409 = t2405*t2241;
  t2414 = 0.340999127418*t2331*t2312;
  t2415 = -0.930418*t717;
  t2417 = 0. + t2415;
  t2421 = t2417*t2371;
  t2422 = t2409 + t2414 + t2421;
  t2432 = 0.340999127418*t2331*t2241;
  t2440 = -0.134322983001*t2331;
  t2441 = 1. + t2440;
  t2448 = t2441*t2312;
  t2449 = 0.366501*t717;
  t2450 = 0. + t2449;
  t2451 = t2450*t2371;
  t2454 = t2432 + t2448 + t2451;
  t2469 = Sin(var1[12]);
  t2465 = -0.120666640478*t535;
  t682 = 0.366501*t679;
  t701 = 0. + t682;
  t2377 = t701*t2373;
  t2424 = 0.340999127418*t2391*t2422;
  t2430 = -0.134322983001*t2391;
  t2431 = 1. + t2430;
  t2455 = t2431*t2454;
  t2459 = t2377 + t2424 + t2455;
  t2474 = -0.930418*t679;
  t2483 = 0. + t2474;
  t2486 = t2483*t2373;
  t2489 = -0.8656776547239999*t2391;
  t2492 = 1. + t2489;
  t2493 = t2492*t2422;
  t2496 = 0.340999127418*t2391*t2454;
  t2498 = t2486 + t2493 + t2496;
  t2510 = -1.000000637725*t2391;
  t2511 = 1. + t2510;
  t2519 = t2511*t2373;
  t2522 = 0.930418*t679;
  t2525 = 0. + t2522;
  t2527 = t2525*t2422;
  t2528 = -0.366501*t679;
  t2532 = 0. + t2528;
  t2534 = t2532*t2454;
  t2536 = t2519 + t2527 + t2534;
  t634 = -0.952469601425*t535;
  t669 = 1. + t634;
  t2627 = t1333*t1345*t1429;
  t2628 = -1.*t1425*t1452;
  t2630 = t2627 + t2628;
  t2621 = t1425*t1333;
  t2623 = t1345*t1429*t1452;
  t2624 = t2621 + t2623;
  t2626 = t1330*t2624;
  t2631 = -1.*t2630*t1583;
  t2644 = t2626 + t2631;
  t2658 = t1330*t2630;
  t2665 = t2624*t1583;
  t2666 = t2658 + t2665;
  t2702 = t1691*t1910*t1345;
  t2703 = t2644*t1931;
  t2704 = t2666*t1972;
  t2705 = t2702 + t2703 + t2704;
  t2655 = -0.340999127418*t1314*t2644;
  t2672 = t1620*t2666;
  t2680 = t1691*t1345*t1722;
  t2681 = t2655 + t2672 + t2680;
  t2691 = t1857*t2644;
  t2694 = -0.340999127418*t1314*t2666;
  t2696 = t1691*t1345*t1873;
  t2698 = t2691 + t2694 + t2696;
  t2686 = 0.340999127418*t1103*t2681;
  t2701 = t1820*t2698;
  t2706 = t2705*t2021;
  t2707 = t2686 + t2701 + t2706;
  t2716 = t2116*t2705;
  t2720 = t2681*t2153;
  t2721 = t2698*t2158;
  t2724 = t2716 + t2720 + t2721;
  t2728 = t2203*t2681;
  t2732 = 0.340999127418*t1103*t2698;
  t2733 = t2705*t2220;
  t2735 = t2728 + t2732 + t2733;
  t2709 = 0.340999127418*t969*t2707;
  t2725 = t2092*t2724;
  t2740 = t2197*t2735;
  t2750 = t2709 + t2725 + t2740;
  t2756 = t2293*t2707;
  t2761 = t2300*t2724;
  t2764 = 0.340999127418*t969*t2735;
  t2765 = t2756 + t2761 + t2764;
  t2771 = t2341*t2707;
  t2778 = t2352*t2724;
  t2779 = t2363*t2735;
  t2781 = t2771 + t2778 + t2779;
  t2470 = 0.803828*t2469;
  t2473 = t2465 + t2470;
  t2754 = t743*t2750;
  t2770 = t2286*t2765;
  t2786 = t2334*t2781;
  t2793 = t2754 + t2770 + t2786;
  t2796 = t2405*t2750;
  t2798 = 0.340999127418*t2331*t2765;
  t2803 = t2417*t2781;
  t2806 = t2796 + t2798 + t2803;
  t2811 = 0.340999127418*t2331*t2750;
  t2813 = t2441*t2765;
  t2816 = t2450*t2781;
  t2817 = t2811 + t2813 + t2816;
  t2505 = -0.175248972904*t535;
  t2507 = -0.553471*t2469;
  t2508 = t2505 + t2507;
  t2556 = -0.803828*t2469;
  t2572 = t2465 + t2556;
  t2794 = t701*t2793;
  t2807 = 0.340999127418*t2391*t2806;
  t2818 = t2431*t2817;
  t2824 = t2794 + t2807 + t2818;
  t2582 = -0.693671301908*t535;
  t2585 = 1. + t2582;
  t2833 = t2483*t2793;
  t2834 = t2492*t2806;
  t2835 = 0.340999127418*t2391*t2817;
  t2837 = t2833 + t2834 + t2835;
  t2605 = 0.444895486988*t535;
  t2611 = -0.218018*t2469;
  t2612 = t2605 + t2611;
  t2844 = t2511*t2793;
  t2857 = t2525*t2806;
  t2863 = t2532*t2817;
  t2865 = t2844 + t2857 + t2863;
  t2889 = t1691*t1330*t1452;
  t2890 = -1.*t1691*t1333*t1583;
  t2893 = t2889 + t2890;
  t2897 = t1691*t1333*t1330;
  t2903 = t1691*t1452*t1583;
  t2904 = t2897 + t2903;
  t2934 = -1.*t1910*t1429;
  t2937 = t2893*t1931;
  t2938 = t2904*t1972;
  t2940 = t2934 + t2937 + t2938;
  t2894 = -0.340999127418*t1314*t2893;
  t2911 = t1620*t2904;
  t2913 = -1.*t1429*t1722;
  t2914 = t2894 + t2911 + t2913;
  t2919 = t1857*t2893;
  t2924 = -0.340999127418*t1314*t2904;
  t2930 = -1.*t1429*t1873;
  t2931 = t2919 + t2924 + t2930;
  t2917 = 0.340999127418*t1103*t2914;
  t2932 = t1820*t2931;
  t2942 = t2940*t2021;
  t2954 = t2917 + t2932 + t2942;
  t2958 = t2116*t2940;
  t2959 = t2914*t2153;
  t2961 = t2931*t2158;
  t2963 = t2958 + t2959 + t2961;
  t2966 = t2203*t2914;
  t2971 = 0.340999127418*t1103*t2931;
  t2973 = t2940*t2220;
  t2974 = t2966 + t2971 + t2973;
  t2957 = 0.340999127418*t969*t2954;
  t2965 = t2092*t2963;
  t2976 = t2197*t2974;
  t2978 = t2957 + t2965 + t2976;
  t2989 = t2293*t2954;
  t2994 = t2300*t2963;
  t2995 = 0.340999127418*t969*t2974;
  t2996 = t2989 + t2994 + t2995;
  t3000 = t2341*t2954;
  t3006 = t2352*t2963;
  t3007 = t2363*t2974;
  t3017 = t3000 + t3006 + t3007;
  t2983 = t743*t2978;
  t2997 = t2286*t2996;
  t3018 = t2334*t3017;
  t3020 = t2983 + t2997 + t3018;
  t3025 = t2405*t2978;
  t3028 = 0.340999127418*t2331*t2996;
  t3035 = t2417*t3017;
  t3036 = t3025 + t3028 + t3035;
  t3041 = 0.340999127418*t2331*t2978;
  t3043 = t2441*t2996;
  t3046 = t2450*t3017;
  t3048 = t3041 + t3043 + t3046;
  t3021 = t701*t3020;
  t3038 = 0.340999127418*t2391*t3036;
  t3050 = t2431*t3048;
  t3054 = t3021 + t3038 + t3050;
  t3061 = t2483*t3020;
  t3066 = t2492*t3036;
  t3069 = 0.340999127418*t2391*t3048;
  t3070 = t3061 + t3066 + t3069;
  t3079 = t2511*t3020;
  t3083 = t2525*t3036;
  t3086 = t2532*t3048;
  t3088 = t3079 + t3083 + t3086;
  t2462 = t669*t2459;
  t2499 = t2473*t2498;
  t2539 = t2508*t2536;
  t2540 = t2462 + t2499 + t2539;
  t2578 = t2572*t2459;
  t2586 = t2585*t2498;
  t2613 = t2612*t2536;
  t2616 = t2578 + t2586 + t2613;
  t3110 = 0.553471*t2469;
  t3113 = t2505 + t3110;
  t3116 = 0.218018*t2469;
  t3121 = t2605 + t3116;
  t3127 = -0.353861996165*t535;
  t3131 = 1. + t3127;
  t2829 = t669*t2824;
  t2840 = t2473*t2837;
  t2868 = t2508*t2865;
  t2870 = t2829 + t2840 + t2868;
  t2878 = t2572*t2824;
  t2879 = t2585*t2837;
  t2883 = t2612*t2865;
  t2885 = t2878 + t2879 + t2883;
  t3055 = t669*t3054;
  t3074 = t2473*t3070;
  t3089 = t2508*t3088;
  t3090 = t3055 + t3074 + t3089;
  t3093 = t2572*t3054;
  t3094 = t2585*t3070;
  t3103 = t2612*t3088;
  t3104 = t3093 + t3094 + t3103;
  t3115 = t3113*t2459;
  t3125 = t3121*t2498;
  t3134 = t3131*t2536;
  t3135 = t3115 + t3125 + t3134;
  t3144 = t3113*t2824;
  t3148 = t3121*t2837;
  t3151 = t3131*t2865;
  t3152 = t3144 + t3148 + t3151;
  t3176 = t3113*t3054;
  t3192 = t3121*t3070;
  t3193 = t3131*t3088;
  t3204 = t3176 + t3192 + t3193;
  p_output1[0]=0.930418*t2540 + 0.366501*t2616;
  p_output1[1]=0.930418*t2870 + 0.366501*t2885;
  p_output1[2]=0.930418*t3090 + 0.366501*t3104;
  p_output1[3]=-0.294604*t2540 + 0.747896*t2616 - 0.594863*t3135;
  p_output1[4]=-0.294604*t2870 + 0.747896*t2885 - 0.594863*t3152;
  p_output1[5]=-0.294604*t3090 + 0.747896*t3104 - 0.594863*t3204;
  p_output1[6]=-0.218018*t2540 + 0.553471*t2616 + 0.803828*t3135;
  p_output1[7]=-0.218018*t2870 + 0.553471*t2885 + 0.803828*t3152;
  p_output1[8]=-0.218018*t3090 + 0.553471*t3104 + 0.803828*t3204;
}



void R_left_toe_roll_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
