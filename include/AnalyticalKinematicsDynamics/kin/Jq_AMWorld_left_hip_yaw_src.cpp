/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:56:32 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jq_AMWorld_left_hip_yaw_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t277;
  double t283;
  double t293;
  double t125;
  double t959;
  double t996;
  double t1129;
  double t1196;
  double t1197;
  double t475;
  double t625;
  double t695;
  double t754;
  double t904;
  double t1313;
  double t1501;
  double t938;
  double t1370;
  double t1433;
  double t25;
  double t1535;
  double t1637;
  double t1653;
  double t2544;
  double t2599;
  double t2601;
  double t2676;
  double t2704;
  double t2606;
  double t2712;
  double t2980;
  double t3595;
  double t3598;
  double t3640;
  double t3553;
  double t3556;
  double t1896;
  double t3585;
  double t3673;
  double t3714;
  double t3782;
  double t3788;
  double t3850;
  double t2410;
  double t3959;
  double t3974;
  double t4014;
  double t4402;
  double t4382;
  double t4502;
  double t4505;
  double t4519;
  double t4399;
  double t4450;
  double t4456;
  double t4481;
  double t4535;
  double t4541;
  double t4556;
  double t4567;
  double t4568;
  double t18;
  double t1473;
  double t1830;
  double t1861;
  double t1864;
  double t2036;
  double t2056;
  double t2124;
  double t2159;
  double t3004;
  double t3026;
  double t3048;
  double t3054;
  double t3060;
  double t3119;
  double t3137;
  double t3253;
  double t3370;
  double t3755;
  double t3881;
  double t3889;
  double t3891;
  double t3901;
  double t3910;
  double t3942;
  double t3958;
  double t4018;
  double t4081;
  double t4114;
  double t4122;
  double t4151;
  double t4156;
  double t4177;
  double t4215;
  double t4239;
  double t4542;
  double t4572;
  double t4583;
  double t4591;
  double t4731;
  double t4742;
  double t4892;
  double t4939;
  double t5294;
  double t5311;
  double t5402;
  double t5431;
  double t5616;
  double t5628;
  double t5671;
  double t5690;
  double t5206;
  double t3443;
  double t4290;
  double t4297;
  double t6229;
  double t6238;
  double t6246;
  double t6158;
  double t6193;
  double t6202;
  double t6228;
  double t6251;
  double t6292;
  double t6317;
  double t6343;
  double t6385;
  double t5052;
  double t5075;
  double t5090;
  double t6293;
  double t6390;
  double t6397;
  double t6398;
  double t6460;
  double t6478;
  double t6492;
  double t6504;
  double t5221;
  double t5238;
  double t5354;
  double t5355;
  double t5623;
  double t5743;
  double t5744;
  double t5745;
  double t5765;
  double t5814;
  double t5864;
  double t5892;
  double t5894;
  double t5902;
  double t5906;
  double t5908;
  double t5925;
  double t5936;
  double t5953;
  double t6038;
  double t6450;
  double t6515;
  double t6522;
  double t6617;
  double t6619;
  double t6623;
  double t6643;
  double t6647;
  double t6655;
  double t6530;
  double t6540;
  double t6542;
  double t6720;
  double t6725;
  double t6733;
  double t6752;
  double t6764;
  double t6780;
  double t6750;
  double t6785;
  double t6787;
  double t6793;
  double t6808;
  double t6809;
  double t6826;
  double t6840;
  double t6562;
  double t6565;
  double t6567;
  double t6577;
  double t6642;
  double t6657;
  double t6659;
  double t6938;
  double t6949;
  double t6950;
  double t6928;
  double t6929;
  double t6932;
  double t6935;
  double t6957;
  double t6958;
  double t6966;
  double t6967;
  double t6968;
  double t6683;
  double t6697;
  double t6705;
  double t6962;
  double t6979;
  double t6985;
  double t6990;
  double t6993;
  double t6994;
  double t6998;
  double t7001;
  double t7030;
  double t7038;
  double t7044;
  double t7053;
  double t7055;
  double t7056;
  double t7046;
  double t7057;
  double t7059;
  double t7061;
  double t7063;
  double t7064;
  double t7073;
  double t7076;
  double t6915;
  double t6916;
  double t6917;
  double t7168;
  double t7170;
  double t7173;
  double t7178;
  double t7183;
  double t7185;
  double t7174;
  double t7186;
  double t7194;
  double t7197;
  double t7205;
  double t7206;
  double t7209;
  double t7214;
  double t7241;
  double t7244;
  double t7247;
  double t7250;
  double t7254;
  double t7255;
  double t7249;
  double t7256;
  double t7257;
  double t7268;
  double t7270;
  double t7272;
  double t7282;
  double t7291;
  double t7349;
  double t7350;
  double t7351;
  double t7352;
  double t7356;
  double t7357;
  double t7360;
  double t7364;
  double t7358;
  double t7366;
  double t7367;
  double t7371;
  double t7375;
  double t7379;
  double t7399;
  double t7400;
  double t7402;
  double t7407;
  double t7415;
  double t7417;
  double t7419;
  double t7429;
  double t7431;
  double t7436;
  double t7437;
  double t7441;
  double t7451;
  double t7453;
  double t7495;
  double t7496;
  double t7500;
  double t7501;
  double t7499;
  double t7504;
  double t7505;
  double t7507;
  double t7509;
  double t7510;
  double t7427;
  double t7454;
  double t7455;
  double t6991;
  double t7007;
  double t7010;
  double t7459;
  double t7462;
  double t7463;
  double t7021;
  double t7022;
  double t7024;
  double t7479;
  double t7480;
  double t7482;
  double t7484;
  double t7489;
  double t7490;
  double t7148;
  double t7151;
  double t7152;
  double t7154;
  double t7551;
  double t7552;
  double t7558;
  double t7560;
  double t7561;
  double t7564;
  double t7567;
  double t7572;
  double t7269;
  double t7296;
  double t7300;
  double t7302;
  double t7305;
  double t7308;
  double t7311;
  double t7314;
  double t7315;
  double t7319;
  double t7595;
  double t7596;
  double t7597;
  double t7598;
  double t7599;
  double t7603;
  double t7611;
  double t7614;
  double t7632;
  double t7633;
  double t7635;
  double t7642;
  double t7662;
  double t7668;
  double t7669;
  double t7671;
  double t7636;
  double t7643;
  double t7644;
  double t7645;
  double t7647;
  double t7654;
  double t7655;
  double t7657;
  double t7658;
  double t7670;
  double t7677;
  double t7678;
  double t7681;
  double t7684;
  double t7686;
  double t7688;
  double t7690;
  double t7692;
  double t7724;
  double t7725;
  double t7726;
  double t7751;
  double t7753;
  double t7757;
  double t7758;
  double t7759;
  double t7767;
  double t7769;
  double t7770;
  double t7659;
  double t7693;
  double t7694;
  double t7700;
  double t7701;
  double t7702;
  double t7727;
  double t7731;
  double t7732;
  double t7740;
  double t7743;
  double t7744;
  double t7745;
  double t7746;
  double t7805;
  double t7806;
  double t7807;
  double t7809;
  double t7810;
  double t7812;
  double t7814;
  double t7818;
  double t7866;
  double t7867;
  double t7868;
  double t7870;
  double t7871;
  double t7872;
  double t7893;
  double t7894;
  double t7895;
  double t7896;
  double t7901;
  double t7903;
  double t7904;
  double t7905;
  double t7924;
  double t7932;
  double t7933;
  double t7935;
  double t7938;
  double t7940;
  double t7958;
  double t7959;
  double t7960;
  double t7962;
  double t7963;
  double t7964;
  double t7934;
  double t7942;
  double t7943;
  double t7944;
  double t7946;
  double t7949;
  double t7950;
  double t7951;
  double t7952;
  double t7953;
  double t7954;
  double t7956;
  double t7957;
  double t7961;
  double t7965;
  double t7969;
  double t7971;
  double t7973;
  double t7974;
  double t7975;
  double t7977;
  double t7980;
  double t7981;
  double t7983;
  double t7984;
  double t7869;
  double t7873;
  double t7874;
  double t7876;
  double t7877;
  double t7878;
  double t7881;
  double t7882;
  double t7883;
  double t7884;
  double t7888;
  double t7889;
  double t7890;
  double t7891;
  double t8006;
  double t8007;
  double t8009;
  double t8010;
  double t8013;
  double t8015;
  double t8016;
  double t8017;
  double t7955;
  double t7985;
  double t7986;
  double t7991;
  double t7992;
  double t7993;
  double t8038;
  double t8039;
  double t8040;
  double t8041;
  double t8043;
  double t8045;
  double t8046;
  double t8047;
  t277 = Cos(var1[7]);
  t283 = -1.*t277;
  t293 = 1. + t283;
  t125 = Cos(var1[6]);
  t959 = -0.134322983001*t293;
  t996 = 1. + t959;
  t1129 = -0.930418*t996;
  t1196 = -0.12497652119782442*t293;
  t1197 = t1129 + t1196;
  t475 = -0.8656776547239999*t293;
  t625 = 1. + t475;
  t695 = 0.366501*t625;
  t754 = 0.3172717261340007*t293;
  t904 = t695 + t754;
  t1313 = Sin(var1[6]);
  t1501 = Sin(var1[5]);
  t938 = t125*t904;
  t1370 = t1197*t1313;
  t1433 = 0. + t938 + t1370;
  t25 = Cos(var1[5]);
  t1535 = t125*t1197;
  t1637 = -1.*t904*t1313;
  t1653 = 0. + t1535 + t1637;
  t2544 = Sin(var1[7]);
  t2599 = 0.366501*t2544;
  t2601 = 0. + t2599;
  t2676 = 0.930418*t2544;
  t2704 = 0. + t2676;
  t2606 = -0.930418*t2601;
  t2712 = 0.366501*t2704;
  t2980 = 0. + t2606 + t2712;
  t3595 = 0.366501*t996;
  t3598 = -0.3172717261340007*t293;
  t3640 = t3595 + t3598;
  t3553 = 0.930418*t625;
  t3556 = t3553 + t1196;
  t1896 = Cos(var1[4]);
  t3585 = t125*t3556;
  t3673 = t3640*t1313;
  t3714 = 0. + t3585 + t3673;
  t3782 = t125*t3640;
  t3788 = -1.*t3556*t1313;
  t3850 = 0. + t3782 + t3788;
  t2410 = Sin(var1[4]);
  t3959 = 0.366501*t2601;
  t3974 = 0.930418*t2704;
  t4014 = 0. + t3959 + t3974;
  t4402 = Sin(var1[3]);
  t4382 = Cos(var1[3]);
  t4502 = -1.*t25*t4402*t2410;
  t4505 = t4382*t1501;
  t4519 = t4502 + t4505;
  t4399 = -1.*t4382*t25;
  t4450 = -1.*t4402*t2410*t1501;
  t4456 = t4399 + t4450;
  t4481 = t125*t4456;
  t4535 = -1.*t4519*t1313;
  t4541 = t4481 + t4535;
  t4556 = t125*t4519;
  t4567 = t4456*t1313;
  t4568 = t4556 + t4567;
  t18 = 1.000000637725*var2[7];
  t1473 = t25*t1433;
  t1830 = -1.*t1501*t1653;
  t1861 = 0. + t1473 + t1830;
  t1864 = var2[4]*t1861;
  t2036 = t1501*t1433;
  t2056 = t25*t1653;
  t2124 = 0. + t2036 + t2056;
  t2159 = t1896*t2124;
  t3004 = -1.*t2410*t2980;
  t3026 = 0. + t2159 + t3004;
  t3048 = var2[3]*t3026;
  t3054 = 0.930418*t2601;
  t3060 = -0.366501*t2704;
  t3119 = 0. + t3054 + t3060;
  t3137 = var2[6]*t3119;
  t3253 = var2[5]*t2980;
  t3370 = t18 + t1864 + t3048 + t3137 + t3253;
  t3755 = t25*t3714;
  t3881 = -1.*t1501*t3850;
  t3889 = 0. + t3755 + t3881;
  t3891 = var2[4]*t3889;
  t3901 = t1501*t3714;
  t3910 = t25*t3850;
  t3942 = 0. + t3901 + t3910;
  t3958 = t1896*t3942;
  t4018 = -1.*t2410*t4014;
  t4081 = 0. + t3958 + t4018;
  t4114 = var2[3]*t4081;
  t4122 = -0.366501*t2601;
  t4151 = -0.930418*t2704;
  t4156 = 0. + t4122 + t4151;
  t4177 = var2[6]*t4156;
  t4215 = var2[5]*t4014;
  t4239 = 0. + t3891 + t4114 + t4177 + t4215;
  t4542 = -0.340999127418*t293*t4541;
  t4572 = t996*t4568;
  t4583 = -1.*t1896*t4402*t2601;
  t4591 = t4542 + t4572 + t4583;
  t4731 = t625*t4541;
  t4742 = -0.340999127418*t293*t4568;
  t4892 = -1.*t1896*t4402*t2704;
  t4939 = t4731 + t4742 + t4892;
  t5294 = 1.000000637725*t293;
  t5311 = -1. + t5294;
  t5402 = t1313*t2601;
  t5431 = t125*t2704;
  t5616 = t5402 + t5431;
  t5628 = t125*t2601;
  t5671 = -1.*t1313*t2704;
  t5690 = t5628 + t5671;
  t5206 = -1.000000637725*t293;
  t3443 = 0.00077*t3370;
  t4290 = 0.00005*t4239;
  t4297 = t3443 + t4290;
  t6229 = t4382*t25*t2410;
  t6238 = t4402*t1501;
  t6246 = t6229 + t6238;
  t6158 = -1.*t25*t4402;
  t6193 = t4382*t2410*t1501;
  t6202 = t6158 + t6193;
  t6228 = t125*t6202;
  t6251 = -1.*t6246*t1313;
  t6292 = t6228 + t6251;
  t6317 = t125*t6246;
  t6343 = t6202*t1313;
  t6385 = t6317 + t6343;
  t5052 = 0.00005*t3370;
  t5075 = 0.00193*t4239;
  t5090 = t5052 + t5075;
  t6293 = -0.340999127418*t293*t6292;
  t6390 = t996*t6385;
  t6397 = t4382*t1896*t2601;
  t6398 = t6293 + t6390 + t6397;
  t6460 = t625*t6292;
  t6478 = -0.340999127418*t293*t6385;
  t6492 = t4382*t1896*t2704;
  t6504 = t6460 + t6478 + t6492;
  t5221 = 1. + t5206;
  t5238 = var2[6]*t5221;
  t5354 = var2[5]*t5311;
  t5355 = -1.*t5311*t2410;
  t5623 = t1501*t5616;
  t5743 = t25*t5690;
  t5744 = t5623 + t5743;
  t5745 = t1896*t5744;
  t5765 = t5355 + t5745;
  t5814 = var2[3]*t5765;
  t5864 = t25*t5616;
  t5892 = -1.*t1501*t5690;
  t5894 = t5864 + t5892;
  t5902 = var2[4]*t5894;
  t5906 = 0. + t5238 + t5354 + t5814 + t5902;
  t5908 = 1. + t5206;
  t5925 = -0.930418*t2544;
  t5936 = 0. + t5925;
  t5953 = -0.366501*t2544;
  t6038 = 0. + t5953;
  t6450 = -0.930418*t6398;
  t6515 = 0.366501*t6504;
  t6522 = t6450 + t6515;
  t6617 = -1.*t2410*t2124;
  t6619 = -1.*t1896*t2980;
  t6623 = t6617 + t6619;
  t6643 = -1.*t2410*t3942;
  t6647 = -1.*t1896*t4014;
  t6655 = t6643 + t6647;
  t6530 = 0.366501*t6398;
  t6540 = 0.930418*t6504;
  t6542 = t6530 + t6540;
  t6720 = t4382*t1896*t125*t1501;
  t6725 = -1.*t4382*t1896*t25*t1313;
  t6733 = t6720 + t6725;
  t6752 = t4382*t1896*t25*t125;
  t6764 = t4382*t1896*t1501*t1313;
  t6780 = t6752 + t6764;
  t6750 = -0.340999127418*t293*t6733;
  t6785 = t996*t6780;
  t6787 = -1.*t4382*t2410*t2601;
  t6793 = t6750 + t6785 + t6787;
  t6808 = t625*t6733;
  t6809 = -0.340999127418*t293*t6780;
  t6826 = -1.*t4382*t2410*t2704;
  t6840 = t6808 + t6809 + t6826;
  t6562 = -1.*t4382*t1896*t5908;
  t6565 = -1.*t6292*t5936;
  t6567 = -1.*t6385*t6038;
  t6577 = t6562 + t6565 + t6567;
  t6642 = 0.00077*var2[3]*t6623;
  t6657 = 0.00005*var2[3]*t6655;
  t6659 = t6642 + t6657;
  t6938 = t25*t4402*t2410;
  t6949 = -1.*t4382*t1501;
  t6950 = t6938 + t6949;
  t6928 = t4382*t25;
  t6929 = t4402*t2410*t1501;
  t6932 = t6928 + t6929;
  t6935 = t125*t6932;
  t6957 = -1.*t6950*t1313;
  t6958 = t6935 + t6957;
  t6966 = t125*t6950;
  t6967 = t6932*t1313;
  t6968 = t6966 + t6967;
  t6683 = 0.00005*var2[3]*t6623;
  t6697 = 0.00193*var2[3]*t6655;
  t6705 = t6683 + t6697;
  t6962 = -0.340999127418*t293*t6958;
  t6979 = t996*t6968;
  t6985 = t1896*t4402*t2601;
  t6990 = t6962 + t6979 + t6985;
  t6993 = t625*t6958;
  t6994 = -0.340999127418*t293*t6968;
  t6998 = t1896*t4402*t2704;
  t7001 = t6993 + t6994 + t6998;
  t7030 = t1896*t125*t4402*t1501;
  t7038 = -1.*t1896*t25*t4402*t1313;
  t7044 = t7030 + t7038;
  t7053 = t1896*t25*t125*t4402;
  t7055 = t1896*t4402*t1501*t1313;
  t7056 = t7053 + t7055;
  t7046 = -0.340999127418*t293*t7044;
  t7057 = t996*t7056;
  t7059 = -1.*t4402*t2410*t2601;
  t7061 = t7046 + t7057 + t7059;
  t7063 = t625*t7044;
  t7064 = -0.340999127418*t293*t7056;
  t7073 = -1.*t4402*t2410*t2704;
  t7076 = t7063 + t7064 + t7073;
  t6915 = -1.*t1896*t5311;
  t6916 = -1.*t2410*t5744;
  t6917 = t6915 + t6916;
  t7168 = -1.*t125*t2410*t1501;
  t7170 = t25*t2410*t1313;
  t7173 = t7168 + t7170;
  t7178 = -1.*t25*t125*t2410;
  t7183 = -1.*t2410*t1501*t1313;
  t7185 = t7178 + t7183;
  t7174 = -0.340999127418*t293*t7173;
  t7186 = t996*t7185;
  t7194 = -1.*t1896*t2601;
  t7197 = t7174 + t7186 + t7194;
  t7205 = t625*t7173;
  t7206 = -0.340999127418*t293*t7185;
  t7209 = -1.*t1896*t2704;
  t7214 = t7205 + t7206 + t7209;
  t7241 = t1896*t125*t1501;
  t7244 = -1.*t1896*t25*t1313;
  t7247 = t7241 + t7244;
  t7250 = t1896*t25*t125;
  t7254 = t1896*t1501*t1313;
  t7255 = t7250 + t7254;
  t7249 = -0.340999127418*t293*t7247;
  t7256 = t996*t7255;
  t7257 = -1.*t2410*t2601;
  t7268 = t7249 + t7256 + t7257;
  t7270 = t625*t7247;
  t7272 = -0.340999127418*t293*t7255;
  t7282 = -1.*t2410*t2704;
  t7291 = t7270 + t7272 + t7282;
  t7349 = t25*t4402;
  t7350 = -1.*t4382*t2410*t1501;
  t7351 = t7349 + t7350;
  t7352 = t125*t7351;
  t7356 = t6246*t1313;
  t7357 = t7352 + t7356;
  t7360 = -1.*t7351*t1313;
  t7364 = t6317 + t7360;
  t7358 = -0.340999127418*t293*t7357;
  t7366 = t625*t7364;
  t7367 = t7358 + t7366;
  t7371 = t996*t7357;
  t7375 = -0.340999127418*t293*t7364;
  t7379 = t7371 + t7375;
  t7399 = -1.*t1501*t3714;
  t7400 = -1.*t25*t3850;
  t7402 = t7399 + t7400;
  t7407 = var2[4]*t7402;
  t7415 = t3755 + t3881;
  t7417 = var2[3]*t1896*t7415;
  t7419 = t7407 + t7417;
  t7429 = -1.*t1501*t1433;
  t7431 = -1.*t25*t1653;
  t7436 = t7429 + t7431;
  t7437 = var2[4]*t7436;
  t7441 = t1473 + t1830;
  t7451 = var2[3]*t1896*t7441;
  t7453 = t7437 + t7451;
  t7495 = t6950*t1313;
  t7496 = t4481 + t7495;
  t7500 = -1.*t4456*t1313;
  t7501 = t6966 + t7500;
  t7499 = -0.340999127418*t293*t7496;
  t7504 = t625*t7501;
  t7505 = t7499 + t7504;
  t7507 = t996*t7496;
  t7509 = -0.340999127418*t293*t7501;
  t7510 = t7507 + t7509;
  t7427 = 0.00005*t7419;
  t7454 = 0.00077*t7453;
  t7455 = t7427 + t7454;
  t6991 = -0.930418*t6990;
  t7007 = 0.366501*t7001;
  t7010 = t6991 + t7007;
  t7459 = 0.00193*t7419;
  t7462 = 0.00005*t7453;
  t7463 = t7459 + t7462;
  t7021 = 0.366501*t6990;
  t7022 = 0.930418*t7001;
  t7024 = t7021 + t7022;
  t7479 = -1.*t1501*t5616;
  t7480 = -1.*t25*t5690;
  t7482 = t7479 + t7480;
  t7484 = var2[4]*t7482;
  t7489 = var2[3]*t1896*t5894;
  t7490 = t7484 + t7489;
  t7148 = -1.*t1896*t5908*t4402;
  t7151 = -1.*t6958*t5936;
  t7152 = -1.*t6968*t6038;
  t7154 = t7148 + t7151 + t7152;
  t7551 = -1.*t1896*t125*t1501;
  t7552 = t1896*t25*t1313;
  t7558 = t7551 + t7552;
  t7560 = -0.340999127418*t293*t7558;
  t7561 = t625*t7255;
  t7564 = t7560 + t7561;
  t7567 = t996*t7558;
  t7572 = t7567 + t7272;
  t7269 = -0.930418*t7268;
  t7296 = 0.366501*t7291;
  t7300 = t7269 + t7296;
  t7302 = 0.366501*t7268;
  t7305 = 0.930418*t7291;
  t7308 = t7302 + t7305;
  t7311 = t5908*t2410;
  t7314 = -1.*t7247*t5936;
  t7315 = -1.*t7255*t6038;
  t7319 = t7311 + t7314 + t7315;
  t7595 = -1.*t125*t6246;
  t7596 = -1.*t6202*t1313;
  t7597 = t7595 + t7596;
  t7598 = t625*t7597;
  t7599 = t6293 + t7598;
  t7603 = t996*t6292;
  t7611 = -0.340999127418*t293*t7597;
  t7614 = t7603 + t7611;
  t7632 = -1.*t125*t3556;
  t7633 = -1.*t3640*t1313;
  t7635 = t7632 + t7633;
  t7642 = t3782 + t3788;
  t7662 = -1.*t125*t904;
  t7668 = -1.*t1197*t1313;
  t7669 = t7662 + t7668;
  t7671 = t1535 + t1637;
  t7636 = -1.*t1501*t7635;
  t7643 = t25*t7642;
  t7644 = t7636 + t7643;
  t7645 = var2[4]*t7644;
  t7647 = t25*t7635;
  t7654 = t1501*t7642;
  t7655 = t7647 + t7654;
  t7657 = var2[3]*t1896*t7655;
  t7658 = t7645 + t7657;
  t7670 = -1.*t1501*t7669;
  t7677 = t25*t7671;
  t7678 = t7670 + t7677;
  t7681 = var2[4]*t7678;
  t7684 = t25*t7669;
  t7686 = t1501*t7671;
  t7688 = t7684 + t7686;
  t7690 = var2[3]*t1896*t7688;
  t7692 = t7681 + t7690;
  t7724 = -1.*t1313*t2601;
  t7725 = -1.*t125*t2704;
  t7726 = t7724 + t7725;
  t7751 = -1.*t125*t6950;
  t7753 = -1.*t6932*t1313;
  t7757 = t7751 + t7753;
  t7758 = t625*t7757;
  t7759 = t6962 + t7758;
  t7767 = t996*t6958;
  t7769 = -0.340999127418*t293*t7757;
  t7770 = t7767 + t7769;
  t7659 = 0.00005*t7658;
  t7693 = 0.00077*t7692;
  t7694 = t7659 + t7693;
  t7700 = 0.00193*t7658;
  t7701 = 0.00005*t7692;
  t7702 = t7700 + t7701;
  t7727 = -1.*t1501*t7726;
  t7731 = t7727 + t5743;
  t7732 = var2[4]*t7731;
  t7740 = t25*t7726;
  t7743 = t1501*t5690;
  t7744 = t7740 + t7743;
  t7745 = var2[3]*t1896*t7744;
  t7746 = t7732 + t7745;
  t7805 = -1.*t1896*t25*t125;
  t7806 = -1.*t1896*t1501*t1313;
  t7807 = t7805 + t7806;
  t7809 = t625*t7807;
  t7810 = t7249 + t7809;
  t7812 = t996*t7247;
  t7814 = -0.340999127418*t293*t7807;
  t7818 = t7812 + t7814;
  t7866 = 0.366501*t125*t277;
  t7867 = -0.930418*t277*t1313;
  t7868 = t7866 + t7867;
  t7870 = 0.930418*t125*t277;
  t7871 = 0.366501*t277*t1313;
  t7872 = t7870 + t7871;
  t7893 = 0.930418*t4382*t1896*t277;
  t7894 = -0.8656776547239999*t6292*t2544;
  t7895 = -0.340999127418*t6385*t2544;
  t7896 = t7893 + t7894 + t7895;
  t7901 = 0.366501*t4382*t1896*t277;
  t7903 = -0.340999127418*t6292*t2544;
  t7904 = -0.134322983001*t6385*t2544;
  t7905 = t7901 + t7903 + t7904;
  t7924 = -5.551115123125783e-17*t125*t2544;
  t7932 = 1.3877787807814457e-17*t1313*t2544;
  t7933 = t7924 + t7932;
  t7935 = 1.3877787807814457e-17*t125*t2544;
  t7938 = 5.551115123125783e-17*t1313*t2544;
  t7940 = t7935 + t7938;
  t7958 = -0.930418593350819*t125*t2544;
  t7959 = -0.3665012337268502*t1313*t2544;
  t7960 = t7958 + t7959;
  t7962 = -0.3665012337268502*t125*t2544;
  t7963 = 0.930418593350819*t1313*t2544;
  t7964 = t7962 + t7963;
  t7934 = t25*t7933;
  t7942 = -1.*t1501*t7940;
  t7943 = t7934 + t7942;
  t7944 = var2[4]*t7943;
  t7946 = t1501*t7933;
  t7949 = t25*t7940;
  t7950 = t7946 + t7949;
  t7951 = t1896*t7950;
  t7952 = 0. + t7951;
  t7953 = var2[3]*t7952;
  t7954 = 0. + t7944 + t7953;
  t7956 = 1.000000637725*var2[5]*t277;
  t7957 = -1.000000637725*var2[6]*t277;
  t7961 = t25*t7960;
  t7965 = -1.*t1501*t7964;
  t7969 = t7961 + t7965;
  t7971 = var2[4]*t7969;
  t7973 = -1.000000637725*t277*t2410;
  t7974 = t1501*t7960;
  t7975 = t25*t7964;
  t7977 = t7974 + t7975;
  t7980 = t1896*t7977;
  t7981 = t7973 + t7980;
  t7983 = var2[3]*t7981;
  t7984 = t7956 + t7957 + t7971 + t7983;
  t7869 = -1.*t1501*t7868;
  t7873 = t25*t7872;
  t7874 = t7869 + t7873;
  t7876 = var2[4]*t7874;
  t7877 = 1.000000637725*var2[5]*t2544;
  t7878 = -1.000000637725*var2[6]*t2544;
  t7881 = t25*t7868;
  t7882 = t1501*t7872;
  t7883 = t7881 + t7882;
  t7884 = t1896*t7883;
  t7888 = -1.000000637725*t2410*t2544;
  t7889 = t7884 + t7888;
  t7890 = var2[3]*t7889;
  t7891 = t7876 + t7877 + t7878 + t7890;
  t8006 = 0.930418*t1896*t277*t4402;
  t8007 = -0.8656776547239999*t6958*t2544;
  t8009 = -0.340999127418*t6968*t2544;
  t8010 = t8006 + t8007 + t8009;
  t8013 = 0.366501*t1896*t277*t4402;
  t8015 = -0.340999127418*t6958*t2544;
  t8016 = -0.134322983001*t6968*t2544;
  t8017 = t8013 + t8015 + t8016;
  t7955 = 0.00077*t7954;
  t7985 = 0.00005*t7984;
  t7986 = t7955 + t7985;
  t7991 = 0.00005*t7954;
  t7992 = 0.00193*t7984;
  t7993 = t7991 + t7992;
  t8038 = -0.930418*t277*t2410;
  t8039 = -0.8656776547239999*t7247*t2544;
  t8040 = -0.340999127418*t7255*t2544;
  t8041 = t8038 + t8039 + t8040;
  t8043 = -0.366501*t277*t2410;
  t8045 = -0.340999127418*t7247*t2544;
  t8046 = -0.134322983001*t7255*t2544;
  t8047 = t8043 + t8045 + t8046;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=t4297*(-0.930418*t4591 + 0.366501*t4939) + (0.366501*t4591 + 0.930418*t4939)*t5090 + 0.00163*t5906*(t1896*t4402*t5908 - 1.*t4541*t5936 - 1.*t4568*t6038);
  p_output1[10]=t4297*t6522 + t5090*t6542 + 0.00163*t5906*t6577;
  p_output1[11]=0;
  p_output1[12]=t6522*t6659 + t6542*t6705 + 0.00163*t5906*(t2410*t4382*t5908 - 1.*t5936*t6733 - 1.*t6038*t6780) + t4297*(-0.930418*t6793 + 0.366501*t6840) + t5090*(0.366501*t6793 + 0.930418*t6840) + 0.00163*t6577*t6917*var2[3];
  p_output1[13]=t6659*t7010 + t6705*t7024 + 0.00163*t5906*(t2410*t4402*t5908 - 1.*t5936*t7044 - 1.*t6038*t7056) + t4297*(-0.930418*t7061 + 0.366501*t7076) + t5090*(0.366501*t7061 + 0.930418*t7076) + 0.00163*t6917*t7154*var2[3];
  p_output1[14]=0.00163*t5906*(t1896*t5908 - 1.*t5936*t7173 - 1.*t6038*t7185) + t4297*(-0.930418*t7197 + 0.366501*t7214) + t5090*(0.366501*t7197 + 0.930418*t7214) + t6659*t7300 + t6705*t7308 + 0.00163*t6917*t7319*var2[3];
  p_output1[15]=0.00163*t5906*(-1.*t6038*t7357 - 1.*t5936*t7364) + t4297*(0.366501*t7367 - 0.930418*t7379) + t5090*(0.930418*t7367 + 0.366501*t7379) + t6522*t7455 + t6542*t7463 + 0.00163*t6577*t7490;
  p_output1[16]=t7010*t7455 + t7024*t7463 + 0.00163*t7154*t7490 + 0.00163*t5906*(-1.*t6038*t7496 - 1.*t5936*t7501) + t4297*(0.366501*t7505 - 0.930418*t7510) + t5090*(0.930418*t7505 + 0.366501*t7510);
  p_output1[17]=t7300*t7455 + t7308*t7463 + 0.00163*t7319*t7490 + 0.00163*t5906*(-1.*t5936*t7255 - 1.*t6038*t7558) + t4297*(0.366501*t7564 - 0.930418*t7572) + t5090*(0.930418*t7564 + 0.366501*t7572);
  p_output1[18]=0.00163*t5906*(-1.*t6038*t6292 - 1.*t5936*t7597) + t4297*(0.366501*t7599 - 0.930418*t7614) + t5090*(0.930418*t7599 + 0.366501*t7614) + t6522*t7694 + t6542*t7702 + 0.00163*t6577*t7746;
  p_output1[19]=t7010*t7694 + t7024*t7702 + 0.00163*t7154*t7746 + 0.00163*t5906*(-1.*t6038*t6958 - 1.*t5936*t7757) + t4297*(0.366501*t7759 - 0.930418*t7770) + t5090*(0.930418*t7759 + 0.366501*t7770);
  p_output1[20]=t7300*t7694 + t7308*t7702 + 0.00163*t7319*t7746 + 0.00163*t5906*(-1.*t6038*t7247 - 1.*t5936*t7807) + t4297*(0.366501*t7810 - 0.930418*t7818) + t5090*(0.930418*t7810 + 0.366501*t7818);
  p_output1[21]=0.00163*t5906*(1.000000637725*t1896*t2544*t4382 + 0.930418*t277*t6292 + 0.366501*t277*t6385) + 0.00163*t6577*t7891 + t4297*(0.366501*t7896 - 0.930418*t7905) + t5090*(0.930418*t7896 + 0.366501*t7905) + t6522*t7986 + t6542*t7993;
  p_output1[22]=0.00163*t5906*(1.000000637725*t1896*t2544*t4402 + 0.930418*t277*t6958 + 0.366501*t277*t6968) + 0.00163*t7154*t7891 + t7010*t7986 + t7024*t7993 + t4297*(0.366501*t8010 - 0.930418*t8017) + t5090*(0.930418*t8010 + 0.366501*t8017);
  p_output1[23]=0.00163*t5906*(0.930418*t277*t7247 + 0.366501*t277*t7255 + t7888) + 0.00163*t7319*t7891 + t7300*t7986 + t7308*t7993 + t4297*(0.366501*t8041 - 0.930418*t8047) + t5090*(0.930418*t8041 + 0.366501*t8047);
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jq_AMWorld_left_hip_yaw_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
