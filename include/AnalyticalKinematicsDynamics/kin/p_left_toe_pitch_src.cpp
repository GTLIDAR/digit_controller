/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:59:03 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "p_left_toe_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t687;
  double t557;
  double t732;
  double t580;
  double t799;
  double t1152;
  double t13;
  double t839;
  double t912;
  double t954;
  double t644;
  double t810;
  double t817;
  double t979;
  double t1106;
  double t1108;
  double t1122;
  double t1815;
  double t1817;
  double t1855;
  double t1499;
  double t1510;
  double t1513;
  double t1099;
  double t1600;
  double t1611;
  double t2660;
  double t2675;
  double t2691;
  double t1925;
  double t2116;
  double t1315;
  double t1332;
  double t1352;
  double t1359;
  double t2997;
  double t3003;
  double t3004;
  double t3024;
  double t3048;
  double t3053;
  double t2695;
  double t2729;
  double t2753;
  double t2785;
  double t2794;
  double t2795;
  double t3062;
  double t2858;
  double t2927;
  double t2928;
  double t2938;
  double t2951;
  double t2961;
  double t2584;
  double t2614;
  double t2617;
  double t2369;
  double t2804;
  double t2815;
  double t2817;
  double t2994;
  double t3108;
  double t3117;
  double t3196;
  double t3211;
  double t3242;
  double t3277;
  double t3286;
  double t3295;
  double t3313;
  double t3376;
  double t3387;
  double t3407;
  double t3428;
  double t3449;
  double t3454;
  double t3586;
  double t3597;
  double t3616;
  double t3623;
  double t3673;
  double t3697;
  double t3703;
  double t3710;
  double t4014;
  double t4104;
  double t4110;
  double t3238;
  double t3250;
  double t3256;
  double t3458;
  double t3461;
  double t3509;
  double t3712;
  double t3732;
  double t3807;
  double t3810;
  double t3916;
  double t3937;
  double t3958;
  double t3969;
  double t3988;
  double t3989;
  double t4135;
  double t4136;
  double t4157;
  double t4159;
  double t4160;
  double t4183;
  double t4194;
  double t4228;
  double t4237;
  double t4246;
  double t4311;
  double t4314;
  double t4328;
  double t2196;
  double t2478;
  double t2489;
  double t3737;
  double t3755;
  double t3759;
  double t3993;
  double t4133;
  double t4134;
  double t4262;
  double t4285;
  double t4332;
  double t4335;
  double t4338;
  double t4346;
  double t4356;
  double t4373;
  double t4378;
  double t4389;
  double t4428;
  double t4439;
  double t4452;
  double t4466;
  double t4516;
  double t4541;
  double t4545;
  double t4546;
  double t4810;
  double t4813;
  double t4717;
  double t4722;
  double t4579;
  double t4584;
  double t2220;
  double t2224;
  double t166;
  double t168;
  double t407;
  double t422;
  double t1025;
  double t1042;
  double t1141;
  double t1349;
  double t1440;
  double t1443;
  double t5311;
  double t5322;
  double t5324;
  double t5284;
  double t5293;
  double t5309;
  double t1527;
  double t1599;
  double t1664;
  double t1677;
  double t1895;
  double t1902;
  double t2165;
  double t2168;
  double t5367;
  double t5368;
  double t5371;
  double t5353;
  double t5354;
  double t5360;
  double t5440;
  double t5450;
  double t5458;
  double t5466;
  double t5376;
  double t5391;
  double t5392;
  double t5393;
  double t5410;
  double t5418;
  double t5422;
  double t5426;
  double t5398;
  double t5434;
  double t5467;
  double t5481;
  double t5487;
  double t5493;
  double t5503;
  double t5504;
  double t5524;
  double t5530;
  double t5533;
  double t5534;
  double t5483;
  double t5518;
  double t5542;
  double t5547;
  double t5568;
  double t5569;
  double t5576;
  double t5592;
  double t5612;
  double t5625;
  double t5628;
  double t5631;
  double t4400;
  double t4414;
  double t5552;
  double t5597;
  double t5633;
  double t5634;
  double t4592;
  double t4600;
  double t5636;
  double t5638;
  double t5640;
  double t5642;
  double t5657;
  double t5667;
  double t5673;
  double t5675;
  double t4650;
  double t4655;
  double t4868;
  double t4883;
  double t4887;
  double t4906;
  double t4939;
  double t4940;
  double t4941;
  double t4943;
  double t4985;
  double t4990;
  double t4994;
  double t4995;
  double t5017;
  double t5019;
  double t5038;
  double t5045;
  double t5052;
  double t5053;
  double t5058;
  double t5068;
  double t5090;
  double t5091;
  double t5094;
  double t5097;
  double t5106;
  double t5121;
  double t5122;
  double t5127;
  double t5130;
  double t5135;
  double t5138;
  double t5139;
  double t5153;
  double t5157;
  double t5161;
  double t5175;
  double t5177;
  double t5181;
  double t5186;
  double t5187;
  double t5198;
  double t5199;
  double t5200;
  double t5203;
  double t5231;
  double t5244;
  double t5261;
  double t5267;
  double t5903;
  double t5905;
  double t5910;
  double t5891;
  double t5892;
  double t5895;
  double t5979;
  double t5986;
  double t5991;
  double t5992;
  double t5918;
  double t5922;
  double t5923;
  double t5934;
  double t5953;
  double t5954;
  double t5956;
  double t5969;
  double t5952;
  double t5972;
  double t5993;
  double t5997;
  double t6009;
  double t6010;
  double t6012;
  double t6018;
  double t6027;
  double t6035;
  double t6044;
  double t6048;
  double t6007;
  double t6020;
  double t6057;
  double t6063;
  double t6068;
  double t6070;
  double t6087;
  double t6094;
  double t6102;
  double t6103;
  double t6107;
  double t6114;
  double t6067;
  double t6096;
  double t6116;
  double t6131;
  double t6150;
  double t6170;
  double t6179;
  double t6192;
  double t6230;
  double t6233;
  double t6239;
  double t6242;
  t687 = Cos(var1[3]);
  t557 = Cos(var1[5]);
  t732 = Sin(var1[4]);
  t580 = Sin(var1[3]);
  t799 = Sin(var1[5]);
  t1152 = Sin(var1[7]);
  t13 = Cos(var1[6]);
  t839 = t687*t557*t732;
  t912 = t580*t799;
  t954 = t839 + t912;
  t644 = -1.*t557*t580;
  t810 = t687*t732*t799;
  t817 = t644 + t810;
  t979 = Sin(var1[6]);
  t1106 = Cos(var1[7]);
  t1108 = -1.*t1106;
  t1122 = 1. + t1108;
  t1815 = t13*t817;
  t1817 = -1.*t954*t979;
  t1855 = t1815 + t1817;
  t1499 = t13*t954;
  t1510 = t817*t979;
  t1513 = t1499 + t1510;
  t1099 = Cos(var1[4]);
  t1600 = 0.366501*t1152;
  t1611 = 0. + t1600;
  t2660 = Cos(var1[8]);
  t2675 = -1.*t2660;
  t2691 = 1. + t2675;
  t1925 = 0.930418*t1152;
  t2116 = 0. + t1925;
  t1315 = -0.930418*t1152;
  t1332 = 0. + t1315;
  t1352 = -0.366501*t1152;
  t1359 = 0. + t1352;
  t2997 = -1.000000637725*t1122;
  t3003 = 1. + t2997;
  t3004 = t687*t1099*t3003;
  t3024 = t1855*t1332;
  t3048 = t1513*t1359;
  t3053 = t3004 + t3024 + t3048;
  t2695 = -0.340999127418*t1122*t1855;
  t2729 = -0.134322983001*t1122;
  t2753 = 1. + t2729;
  t2785 = t2753*t1513;
  t2794 = t687*t1099*t1611;
  t2795 = t2695 + t2785 + t2794;
  t3062 = Sin(var1[8]);
  t2858 = -0.8656776547239999*t1122;
  t2927 = 1. + t2858;
  t2928 = t2927*t1855;
  t2938 = -0.340999127418*t1122*t1513;
  t2951 = t687*t1099*t2116;
  t2961 = t2928 + t2938 + t2951;
  t2584 = Cos(var1[9]);
  t2614 = -1.*t2584;
  t2617 = 1. + t2614;
  t2369 = Sin(var1[10]);
  t2804 = 0.340999127418*t2691*t2795;
  t2815 = -0.134322983001*t2691;
  t2817 = 1. + t2815;
  t2994 = t2817*t2961;
  t3108 = -0.366501*t3062;
  t3117 = 0. + t3108;
  t3196 = t3053*t3117;
  t3211 = t2804 + t2994 + t3196;
  t3242 = Sin(var1[9]);
  t3277 = -1.000000637725*t2691;
  t3286 = 1. + t3277;
  t3295 = t3286*t3053;
  t3313 = -0.930418*t3062;
  t3376 = 0. + t3313;
  t3387 = t2795*t3376;
  t3407 = 0.366501*t3062;
  t3428 = 0. + t3407;
  t3449 = t2961*t3428;
  t3454 = t3295 + t3387 + t3449;
  t3586 = -0.8656776547239999*t2691;
  t3597 = 1. + t3586;
  t3616 = t3597*t2795;
  t3623 = 0.340999127418*t2691*t2961;
  t3673 = 0.930418*t3062;
  t3697 = 0. + t3673;
  t3703 = t3053*t3697;
  t3710 = t3616 + t3623 + t3703;
  t4014 = Cos(var1[10]);
  t4104 = -1.*t4014;
  t4110 = 1. + t4104;
  t3238 = 0.340999127418*t2617*t3211;
  t3250 = -0.930418*t3242;
  t3256 = 0. + t3250;
  t3458 = t3256*t3454;
  t3461 = -0.8656776547239999*t2617;
  t3509 = 1. + t3461;
  t3712 = t3509*t3710;
  t3732 = t3238 + t3458 + t3712;
  t3807 = -0.134322983001*t2617;
  t3810 = 1. + t3807;
  t3916 = t3810*t3211;
  t3937 = 0.366501*t3242;
  t3958 = 0. + t3937;
  t3969 = t3958*t3454;
  t3988 = 0.340999127418*t2617*t3710;
  t3989 = t3916 + t3969 + t3988;
  t4135 = -0.366501*t3242;
  t4136 = 0. + t4135;
  t4157 = t4136*t3211;
  t4159 = -1.000000637725*t2617;
  t4160 = 1. + t4159;
  t4183 = t4160*t3454;
  t4194 = 0.930418*t3242;
  t4228 = 0. + t4194;
  t4237 = t4228*t3710;
  t4246 = t4157 + t4183 + t4237;
  t4311 = Cos(var1[11]);
  t4314 = -1.*t4311;
  t4328 = 1. + t4314;
  t2196 = Sin(var1[11]);
  t2478 = 0.930418*t2369;
  t2489 = 0. + t2478;
  t3737 = t2489*t3732;
  t3755 = -0.366501*t2369;
  t3759 = 0. + t3755;
  t3993 = t3759*t3989;
  t4133 = -1.000000637725*t4110;
  t4134 = 1. + t4133;
  t4262 = t4134*t4246;
  t4285 = t3737 + t3993 + t4262;
  t4332 = -0.8656776547239999*t4110;
  t4335 = 1. + t4332;
  t4338 = t4335*t3732;
  t4346 = 0.340999127418*t4110*t3989;
  t4356 = -0.930418*t2369;
  t4373 = 0. + t4356;
  t4378 = t4373*t4246;
  t4389 = t4338 + t4346 + t4378;
  t4428 = 0.340999127418*t4110*t3732;
  t4439 = -0.134322983001*t4110;
  t4452 = 1. + t4439;
  t4466 = t4452*t3989;
  t4516 = 0.366501*t2369;
  t4541 = 0. + t4516;
  t4545 = t4541*t4246;
  t4546 = t4428 + t4466 + t4545;
  t4810 = -0.366501*t2196;
  t4813 = 0. + t4810;
  t4717 = 0.930418*t2196;
  t4722 = 0. + t4717;
  t4579 = -0.930418*t2196;
  t4584 = 0. + t4579;
  t2220 = 0.366501*t2196;
  t2224 = 0. + t2220;
  t166 = -1.*t13;
  t168 = 1. + t166;
  t407 = 0.091*t168;
  t422 = 0. + t407;
  t1025 = 0.091*t979;
  t1042 = 0. + t1025;
  t1141 = -0.04500040093286238*t1122;
  t1349 = 0.07877663122399998*t1332;
  t1440 = 0.031030906668*t1359;
  t1443 = 0. + t1141 + t1349 + t1440;
  t5311 = t557*t580*t732;
  t5322 = -1.*t687*t799;
  t5324 = t5311 + t5322;
  t5284 = t687*t557;
  t5293 = t580*t732*t799;
  t5309 = t5284 + t5293;
  t1527 = -3.2909349868922137e-7*var1[7];
  t1599 = 0.03103092645718495*t1122;
  t1664 = -0.045000372235*t1611;
  t1677 = t1527 + t1599 + t1664;
  t1895 = 1.296332362046933e-7*var1[7];
  t1902 = 0.07877668146182712*t1122;
  t2165 = -0.045000372235*t2116;
  t2168 = t1895 + t1902 + t2165;
  t5367 = t13*t5309;
  t5368 = -1.*t5324*t979;
  t5371 = t5367 + t5368;
  t5353 = t13*t5324;
  t5354 = t5309*t979;
  t5360 = t5353 + t5354;
  t5440 = t1099*t3003*t580;
  t5450 = t5371*t1332;
  t5458 = t5360*t1359;
  t5466 = t5440 + t5450 + t5458;
  t5376 = -0.340999127418*t1122*t5371;
  t5391 = t2753*t5360;
  t5392 = t1099*t580*t1611;
  t5393 = t5376 + t5391 + t5392;
  t5410 = t2927*t5371;
  t5418 = -0.340999127418*t1122*t5360;
  t5422 = t1099*t580*t2116;
  t5426 = t5410 + t5418 + t5422;
  t5398 = 0.340999127418*t2691*t5393;
  t5434 = t2817*t5426;
  t5467 = t5466*t3117;
  t5481 = t5398 + t5434 + t5467;
  t5487 = t3286*t5466;
  t5493 = t5393*t3376;
  t5503 = t5426*t3428;
  t5504 = t5487 + t5493 + t5503;
  t5524 = t3597*t5393;
  t5530 = 0.340999127418*t2691*t5426;
  t5533 = t5466*t3697;
  t5534 = t5524 + t5530 + t5533;
  t5483 = 0.340999127418*t2617*t5481;
  t5518 = t3256*t5504;
  t5542 = t3509*t5534;
  t5547 = t5483 + t5518 + t5542;
  t5568 = t3810*t5481;
  t5569 = t3958*t5504;
  t5576 = 0.340999127418*t2617*t5534;
  t5592 = t5568 + t5569 + t5576;
  t5612 = t4136*t5481;
  t5625 = t4160*t5504;
  t5628 = t4228*t5534;
  t5631 = t5612 + t5625 + t5628;
  t4400 = -0.134322983001*t4328;
  t4414 = 1. + t4400;
  t5552 = t2489*t5547;
  t5597 = t3759*t5592;
  t5633 = t4134*t5631;
  t5634 = t5552 + t5597 + t5633;
  t4592 = -0.8656776547239999*t4328;
  t4600 = 1. + t4592;
  t5636 = t4335*t5547;
  t5638 = 0.340999127418*t4110*t5592;
  t5640 = t4373*t5631;
  t5642 = t5636 + t5638 + t5640;
  t5657 = 0.340999127418*t4110*t5547;
  t5667 = t4452*t5592;
  t5673 = t4541*t5631;
  t5675 = t5657 + t5667 + t5673;
  t4650 = -1.000000637725*t4328;
  t4655 = 1. + t4650;
  t4868 = 0.06199697675299678*t4328;
  t4883 = 0.324290713329*t4813;
  t4887 = -0.823260828522*t4722;
  t4906 = 0. + t4868 + t4883 + t4887;
  t4939 = 2.95447451120871e-8*var1[11];
  t4940 = -0.8232613535360118*t4328;
  t4941 = 0.061996937216*t4584;
  t4943 = t4939 + t4940 + t4941;
  t4985 = 7.500378623168247e-8*var1[11];
  t4990 = 0.32429092013729516*t4328;
  t4994 = 0.061996937216*t2224;
  t4995 = t4985 + t4990 + t4994;
  t5017 = 2.281945176511838e-8*var1[10];
  t5019 = -0.5905366811997648*t4110;
  t5038 = -0.262809976934*t4373;
  t5045 = t5017 + t5019 + t5038;
  t5052 = 5.7930615939377813e-8*var1[10];
  t5053 = 0.23261833304643187*t4110;
  t5058 = -0.262809976934*t4541;
  t5068 = t5052 + t5053 + t5058;
  t5090 = -0.26281014453449253*t4110;
  t5091 = 0.23261818470000004*t3759;
  t5094 = -0.5905363046000001*t2489;
  t5097 = 0. + t5090 + t5091 + t5094;
  t5106 = 3.2909349868922137e-7*var1[8];
  t5121 = 0.055653945343889656*t2691;
  t5122 = -0.045000372235*t3117;
  t5127 = t5106 + t5121 + t5122;
  t5130 = -1.5981976069815686e-7*var1[9];
  t5135 = 0.08675267452931407*t2617;
  t5138 = 0.039853013046*t3958;
  t5139 = t5130 + t5135 + t5138;
  t5153 = -0.04500040093286238*t2691;
  t5157 = -0.141285834136*t3376;
  t5161 = 0.055653909852*t3428;
  t5175 = 0. + t5153 + t5157 + t5161;
  t5177 = 0.039853038461262744*t2617;
  t5181 = 0.086752619205*t4136;
  t5186 = -0.22023459268999998*t4228;
  t5187 = 0. + t5177 + t5181 + t5186;
  t5198 = 1.296332362046933e-7*var1[8];
  t5199 = -0.14128592423750855*t2691;
  t5200 = -0.045000372235*t3697;
  t5203 = t5198 + t5199 + t5200;
  t5231 = -6.295460977284962e-8*var1[9];
  t5244 = -0.22023473313910558*t2617;
  t5261 = 0.039853013046*t3256;
  t5267 = t5231 + t5244 + t5261;
  t5903 = t1099*t13*t799;
  t5905 = -1.*t1099*t557*t979;
  t5910 = t5903 + t5905;
  t5891 = t1099*t557*t13;
  t5892 = t1099*t799*t979;
  t5895 = t5891 + t5892;
  t5979 = -1.*t3003*t732;
  t5986 = t5910*t1332;
  t5991 = t5895*t1359;
  t5992 = t5979 + t5986 + t5991;
  t5918 = -0.340999127418*t1122*t5910;
  t5922 = t2753*t5895;
  t5923 = -1.*t732*t1611;
  t5934 = t5918 + t5922 + t5923;
  t5953 = t2927*t5910;
  t5954 = -0.340999127418*t1122*t5895;
  t5956 = -1.*t732*t2116;
  t5969 = t5953 + t5954 + t5956;
  t5952 = 0.340999127418*t2691*t5934;
  t5972 = t2817*t5969;
  t5993 = t5992*t3117;
  t5997 = t5952 + t5972 + t5993;
  t6009 = t3286*t5992;
  t6010 = t5934*t3376;
  t6012 = t5969*t3428;
  t6018 = t6009 + t6010 + t6012;
  t6027 = t3597*t5934;
  t6035 = 0.340999127418*t2691*t5969;
  t6044 = t5992*t3697;
  t6048 = t6027 + t6035 + t6044;
  t6007 = 0.340999127418*t2617*t5997;
  t6020 = t3256*t6018;
  t6057 = t3509*t6048;
  t6063 = t6007 + t6020 + t6057;
  t6068 = t3810*t5997;
  t6070 = t3958*t6018;
  t6087 = 0.340999127418*t2617*t6048;
  t6094 = t6068 + t6070 + t6087;
  t6102 = t4136*t5997;
  t6103 = t4160*t6018;
  t6107 = t4228*t6048;
  t6114 = t6102 + t6103 + t6107;
  t6067 = t2489*t6063;
  t6096 = t3759*t6094;
  t6116 = t4134*t6114;
  t6131 = t6067 + t6096 + t6116;
  t6150 = t4335*t6063;
  t6170 = 0.340999127418*t4110*t6094;
  t6179 = t4373*t6114;
  t6192 = t6150 + t6170 + t6179;
  t6230 = 0.340999127418*t4110*t6063;
  t6233 = t4452*t6094;
  t6239 = t4541*t6114;
  t6242 = t6230 + t6233 + t6239;
  p_output1[0]=0. + t1513*t1677 + t1855*t2168 + 0.402633*(t2224*t4285 + 0.340999127418*t4328*t4389 + t4414*t4546) - 0.79249*(0.340999127418*t4328*t4546 + t4285*t4584 + t4389*t4600) + 0.061884*(t4285*t4655 + t4389*t4722 + t4546*t4813) + t4285*t4906 + t4389*t4943 + t4546*t4995 + t3732*t5045 + t3989*t5068 + t4246*t5097 + t2961*t5127 + t3211*t5139 + t3053*t5175 + t3454*t5187 + t2795*t5203 + t3710*t5267 + t1099*t1443*t687 + t422*t817 + t1042*t954 + var1[0];
  p_output1[1]=0. + t422*t5309 + t1042*t5324 + t1677*t5360 + t2168*t5371 + t5203*t5393 + t5127*t5426 + t5175*t5466 + t5139*t5481 + t5187*t5504 + t5267*t5534 + t5045*t5547 + t5068*t5592 + t5097*t5631 + t4906*t5634 + t4943*t5642 + t4995*t5675 - 0.79249*(t4584*t5634 + t4600*t5642 + 0.340999127418*t4328*t5675) + 0.402633*(t2224*t5634 + 0.340999127418*t4328*t5642 + t4414*t5675) + 0.061884*(t4655*t5634 + t4722*t5642 + t4813*t5675) + t1099*t1443*t580 + var1[1];
  p_output1[2]=0. + t1042*t1099*t557 + t1677*t5895 + t2168*t5910 + t5203*t5934 + t5127*t5969 + t5175*t5992 + t5139*t5997 + t5187*t6018 + t5267*t6048 + t5045*t6063 + t5068*t6094 + t5097*t6114 + t4906*t6131 + t4943*t6192 + t4995*t6242 - 0.79249*(t4584*t6131 + t4600*t6192 + 0.340999127418*t4328*t6242) + 0.402633*(t2224*t6131 + 0.340999127418*t4328*t6192 + t4414*t6242) + 0.061884*(t4655*t6131 + t4722*t6192 + t4813*t6242) - 1.*t1443*t732 + t1099*t422*t799 + var1[2];
}



void p_left_toe_pitch_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
