/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:54:56 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "T_toe_roll_joint_right_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t158;
  double t215;
  double t221;
  double t217;
  double t223;
  double t197;
  double t204;
  double t209;
  double t234;
  double t220;
  double t224;
  double t225;
  double t212;
  double t243;
  double t247;
  double t251;
  double t123;
  double t163;
  double t185;
  double t228;
  double t264;
  double t294;
  double t330;
  double t337;
  double t348;
  double t426;
  double t434;
  double t447;
  double t186;
  double t193;
  double t196;
  double t299;
  double t300;
  double t305;
  double t349;
  double t350;
  double t375;
  double t380;
  double t382;
  double t383;
  double t385;
  double t391;
  double t409;
  double t416;
  double t464;
  double t470;
  double t471;
  double t473;
  double t475;
  double t480;
  double t489;
  double t493;
  double t498;
  double t504;
  double t550;
  double t551;
  double t556;
  double t84;
  double t93;
  double t126;
  double t128;
  double t352;
  double t353;
  double t369;
  double t420;
  double t452;
  double t456;
  double t541;
  double t545;
  double t558;
  double t560;
  double t561;
  double t562;
  double t565;
  double t588;
  double t592;
  double t595;
  double t625;
  double t639;
  double t645;
  double t649;
  double t650;
  double t653;
  double t654;
  double t665;
  double t782;
  double t786;
  double t789;
  double t103;
  double t113;
  double t548;
  double t598;
  double t599;
  double t608;
  double t668;
  double t673;
  double t713;
  double t721;
  double t728;
  double t735;
  double t736;
  double t756;
  double t759;
  double t761;
  double t808;
  double t815;
  double t838;
  double t849;
  double t850;
  double t860;
  double t872;
  double t878;
  double t881;
  double t887;
  double t936;
  double t937;
  double t941;
  double t15;
  double t28;
  double t31;
  double t75;
  double t88;
  double t90;
  double t693;
  double t696;
  double t705;
  double t771;
  double t796;
  double t804;
  double t892;
  double t900;
  double t942;
  double t949;
  double t968;
  double t978;
  double t989;
  double t997;
  double t1003;
  double t1009;
  double t1016;
  double t1020;
  double t1022;
  double t1030;
  double t1031;
  double t1033;
  double t1040;
  double t1057;
  double t54;
  double t78;
  double t79;
  double t910;
  double t1010;
  double t1012;
  double t1015;
  double t1068;
  double t1071;
  double t39;
  double t1113;
  double t1130;
  double t1140;
  double t1141;
  double t1143;
  double t1144;
  double t1148;
  double t1177;
  double t1194;
  double t1200;
  double t1202;
  double t1217;
  double t1226;
  double t1239;
  double t1241;
  double t1246;
  double t1249;
  double t1250;
  double t59;
  double t70;
  double t1358;
  double t1361;
  double t1363;
  double t1382;
  double t1392;
  double t1394;
  double t1380;
  double t1395;
  double t1407;
  double t1424;
  double t1437;
  double t1445;
  double t1353;
  double t1409;
  double t1447;
  double t1466;
  double t1473;
  double t1480;
  double t1486;
  double t1500;
  double t1514;
  double t1516;
  double t1521;
  double t1522;
  double t1471;
  double t1504;
  double t1527;
  double t1532;
  double t1556;
  double t1563;
  double t1570;
  double t1579;
  double t1581;
  double t1582;
  double t1590;
  double t1592;
  double t1544;
  double t1580;
  double t1593;
  double t1602;
  double t1608;
  double t1611;
  double t1612;
  double t1614;
  double t1623;
  double t1624;
  double t1627;
  double t1628;
  double t1081;
  double t1111;
  double t1603;
  double t1621;
  double t1629;
  double t1630;
  double t1642;
  double t1679;
  double t1686;
  double t1693;
  double t1704;
  double t1707;
  double t1711;
  double t1717;
  double t1181;
  double t1184;
  double t1190;
  double t1270;
  double t1274;
  double t1638;
  double t1700;
  double t1725;
  double t1726;
  double t1292;
  double t1315;
  double t1744;
  double t1745;
  double t1756;
  double t1757;
  double t1318;
  double t1325;
  double t1333;
  double t1766;
  double t1768;
  double t1770;
  double t1771;
  double t1809;
  double t1815;
  double t1819;
  double t1824;
  double t1825;
  double t1829;
  double t1808;
  double t1821;
  double t1830;
  double t1832;
  double t1840;
  double t1841;
  double t1856;
  double t1857;
  double t1867;
  double t1873;
  double t1878;
  double t1880;
  double t1835;
  double t1863;
  double t1886;
  double t1901;
  double t1906;
  double t1910;
  double t1916;
  double t1917;
  double t1922;
  double t1923;
  double t1924;
  double t1934;
  double t1905;
  double t1918;
  double t1937;
  double t1940;
  double t1943;
  double t1944;
  double t1949;
  double t1952;
  double t1958;
  double t1961;
  double t1970;
  double t1971;
  double t1941;
  double t1953;
  double t1975;
  double t1976;
  double t1980;
  double t1981;
  double t1983;
  double t1990;
  double t1995;
  double t1996;
  double t1997;
  double t2007;
  double t1977;
  double t1991;
  double t2019;
  double t2025;
  double t2030;
  double t2035;
  double t2036;
  double t2045;
  double t2049;
  double t2051;
  double t2052;
  double t2054;
  double t1072;
  double t1179;
  double t1256;
  double t1264;
  double t1287;
  double t1316;
  double t1334;
  double t1339;
  double t2084;
  double t2086;
  double t2091;
  double t2093;
  double t2100;
  double t2101;
  double t1728;
  double t1761;
  double t1774;
  double t1776;
  double t1783;
  double t1786;
  double t1790;
  double t1792;
  double t2027;
  double t2048;
  double t2055;
  double t2056;
  double t2071;
  double t2072;
  double t2073;
  double t2078;
  double t2088;
  double t2099;
  double t2104;
  double t2107;
  double t2128;
  double t2135;
  double t2136;
  double t2139;
  double t2155;
  double t2158;
  double t2159;
  double t2160;
  double t2489;
  double t2493;
  double t2518;
  double t2203;
  double t2205;
  double t2207;
  double t2210;
  double t2213;
  double t2215;
  double t2221;
  double t2224;
  double t2229;
  double t2235;
  double t2239;
  double t2258;
  double t2262;
  double t2264;
  double t2266;
  double t2267;
  double t2272;
  double t2273;
  double t2278;
  double t2279;
  double t2289;
  double t2290;
  double t2296;
  double t2298;
  double t2299;
  double t2300;
  double t2302;
  double t2305;
  double t2307;
  double t2312;
  double t2321;
  double t2322;
  double t2328;
  double t2330;
  double t2357;
  double t2359;
  double t2360;
  double t2362;
  double t2382;
  double t2383;
  double t2385;
  double t2387;
  double t2403;
  double t2404;
  double t2405;
  double t2412;
  double t2421;
  double t2422;
  double t2423;
  double t2424;
  double t2432;
  double t2437;
  double t2438;
  double t2439;
  double t2442;
  double t2446;
  double t2452;
  double t2454;
  double t2458;
  double t2461;
  double t2462;
  double t2471;
  double t2476;
  double t2478;
  double t2480;
  double t2481;
  double t2486;
  double t2488;
  double t2490;
  double t2492;
  double t2498;
  double t2499;
  double t2500;
  double t2512;
  double t2517;
  double t2522;
  double t2523;
  double t2524;
  double t2525;
  double t2528;
  double t2536;
  double t2537;
  double t2540;
  double t2541;
  double t2542;
  double t2545;
  double t2546;
  t158 = Cos(var1[3]);
  t215 = Cos(var1[5]);
  t221 = Sin(var1[3]);
  t217 = Sin(var1[4]);
  t223 = Sin(var1[5]);
  t197 = Cos(var1[18]);
  t204 = -1.*t197;
  t209 = 1. + t204;
  t234 = Cos(var1[17]);
  t220 = t158*t215*t217;
  t224 = t221*t223;
  t225 = t220 + t224;
  t212 = Sin(var1[17]);
  t243 = -1.*t215*t221;
  t247 = t158*t217*t223;
  t251 = t243 + t247;
  t123 = Sin(var1[19]);
  t163 = Cos(var1[4]);
  t185 = Sin(var1[18]);
  t228 = -1.*t212*t225;
  t264 = t234*t251;
  t294 = t228 + t264;
  t330 = t234*t225;
  t337 = t212*t251;
  t348 = t330 + t337;
  t426 = Cos(var1[19]);
  t434 = -1.*t426;
  t447 = 1. + t434;
  t186 = -0.366501*t185;
  t193 = 0. + t186;
  t196 = t158*t163*t193;
  t299 = 0.340999127418*t209*t294;
  t300 = -0.134322983001*t209;
  t305 = 1. + t300;
  t349 = t305*t348;
  t350 = t196 + t299 + t349;
  t375 = 0.930418*t185;
  t380 = 0. + t375;
  t382 = t158*t163*t380;
  t383 = -0.8656776547239999*t209;
  t385 = 1. + t383;
  t391 = t385*t294;
  t409 = 0.340999127418*t209*t348;
  t416 = t382 + t391 + t409;
  t464 = -1.000000637725*t209;
  t470 = 1. + t464;
  t471 = t470*t158*t163;
  t473 = -0.930418*t185;
  t475 = 0. + t473;
  t480 = t475*t294;
  t489 = 0.366501*t185;
  t493 = 0. + t489;
  t498 = t493*t348;
  t504 = t471 + t480 + t498;
  t550 = Cos(var1[20]);
  t551 = -1.*t550;
  t556 = 1. + t551;
  t84 = Sin(var1[21]);
  t93 = Sin(var1[20]);
  t126 = 0.930418*t123;
  t128 = 0. + t126;
  t352 = t128*t350;
  t353 = 0.366501*t123;
  t369 = 0. + t353;
  t420 = t369*t416;
  t452 = -1.000000637725*t447;
  t456 = 1. + t452;
  t541 = t456*t504;
  t545 = t352 + t420 + t541;
  t558 = -0.8656776547239999*t447;
  t560 = 1. + t558;
  t561 = t560*t350;
  t562 = -0.340999127418*t447*t416;
  t565 = -0.930418*t123;
  t588 = 0. + t565;
  t592 = t588*t504;
  t595 = t561 + t562 + t592;
  t625 = -0.340999127418*t447*t350;
  t639 = -0.134322983001*t447;
  t645 = 1. + t639;
  t649 = t645*t416;
  t650 = -0.366501*t123;
  t653 = 0. + t650;
  t654 = t653*t504;
  t665 = t625 + t649 + t654;
  t782 = Cos(var1[21]);
  t786 = -1.*t782;
  t789 = 1. + t786;
  t103 = 0.366501*t93;
  t113 = 0. + t103;
  t548 = t113*t545;
  t598 = -0.340999127418*t556*t595;
  t599 = -0.134322983001*t556;
  t608 = 1. + t599;
  t668 = t608*t665;
  t673 = t548 + t598 + t668;
  t713 = 0.930418*t93;
  t721 = 0. + t713;
  t728 = t721*t545;
  t735 = -0.8656776547239999*t556;
  t736 = 1. + t735;
  t756 = t736*t595;
  t759 = -0.340999127418*t556*t665;
  t761 = t728 + t756 + t759;
  t808 = -1.000000637725*t556;
  t815 = 1. + t808;
  t838 = t815*t545;
  t849 = -0.930418*t93;
  t850 = 0. + t849;
  t860 = t850*t595;
  t872 = -0.366501*t93;
  t878 = 0. + t872;
  t881 = t878*t665;
  t887 = t838 + t860 + t881;
  t936 = Cos(var1[22]);
  t937 = -1.*t936;
  t941 = 1. + t937;
  t15 = Cos(var1[23]);
  t28 = -1.*t15;
  t31 = 1. + t28;
  t75 = Sin(var1[22]);
  t88 = -0.366501*t84;
  t90 = 0. + t88;
  t693 = t90*t673;
  t696 = -0.930418*t84;
  t705 = 0. + t696;
  t771 = t705*t761;
  t796 = -1.000000637725*t789;
  t804 = 1. + t796;
  t892 = t804*t887;
  t900 = t693 + t771 + t892;
  t942 = -0.134322983001*t789;
  t949 = 1. + t942;
  t968 = t949*t673;
  t978 = -0.340999127418*t789*t761;
  t989 = 0.366501*t84;
  t997 = 0. + t989;
  t1003 = t997*t887;
  t1009 = t968 + t978 + t1003;
  t1016 = -0.340999127418*t789*t673;
  t1020 = -0.8656776547239999*t789;
  t1022 = 1. + t1020;
  t1030 = t1022*t761;
  t1031 = 0.930418*t84;
  t1033 = 0. + t1031;
  t1040 = t1033*t887;
  t1057 = t1016 + t1030 + t1040;
  t54 = Sin(var1[23]);
  t78 = 0.930418*t75;
  t79 = 0. + t78;
  t910 = t79*t900;
  t1010 = -0.340999127418*t941*t1009;
  t1012 = -0.8656776547239999*t941;
  t1015 = 1. + t1012;
  t1068 = t1015*t1057;
  t1071 = t910 + t1010 + t1068;
  t39 = 0.120666640478*t31;
  t1113 = 0.366501*t75;
  t1130 = 0. + t1113;
  t1140 = t1130*t900;
  t1141 = -0.134322983001*t941;
  t1143 = 1. + t1141;
  t1144 = t1143*t1009;
  t1148 = -0.340999127418*t941*t1057;
  t1177 = t1140 + t1144 + t1148;
  t1194 = -1.000000637725*t941;
  t1200 = 1. + t1194;
  t1202 = t1200*t900;
  t1217 = -0.366501*t75;
  t1226 = 0. + t1217;
  t1239 = t1226*t1009;
  t1241 = -0.930418*t75;
  t1246 = 0. + t1241;
  t1249 = t1246*t1057;
  t1250 = t1202 + t1239 + t1249;
  t59 = 0.803828*t54;
  t70 = t39 + t59;
  t1358 = t215*t221*t217;
  t1361 = -1.*t158*t223;
  t1363 = t1358 + t1361;
  t1382 = t158*t215;
  t1392 = t221*t217*t223;
  t1394 = t1382 + t1392;
  t1380 = -1.*t212*t1363;
  t1395 = t234*t1394;
  t1407 = t1380 + t1395;
  t1424 = t234*t1363;
  t1437 = t212*t1394;
  t1445 = t1424 + t1437;
  t1353 = t163*t193*t221;
  t1409 = 0.340999127418*t209*t1407;
  t1447 = t305*t1445;
  t1466 = t1353 + t1409 + t1447;
  t1473 = t163*t380*t221;
  t1480 = t385*t1407;
  t1486 = 0.340999127418*t209*t1445;
  t1500 = t1473 + t1480 + t1486;
  t1514 = t470*t163*t221;
  t1516 = t475*t1407;
  t1521 = t493*t1445;
  t1522 = t1514 + t1516 + t1521;
  t1471 = t128*t1466;
  t1504 = t369*t1500;
  t1527 = t456*t1522;
  t1532 = t1471 + t1504 + t1527;
  t1556 = t560*t1466;
  t1563 = -0.340999127418*t447*t1500;
  t1570 = t588*t1522;
  t1579 = t1556 + t1563 + t1570;
  t1581 = -0.340999127418*t447*t1466;
  t1582 = t645*t1500;
  t1590 = t653*t1522;
  t1592 = t1581 + t1582 + t1590;
  t1544 = t113*t1532;
  t1580 = -0.340999127418*t556*t1579;
  t1593 = t608*t1592;
  t1602 = t1544 + t1580 + t1593;
  t1608 = t721*t1532;
  t1611 = t736*t1579;
  t1612 = -0.340999127418*t556*t1592;
  t1614 = t1608 + t1611 + t1612;
  t1623 = t815*t1532;
  t1624 = t850*t1579;
  t1627 = t878*t1592;
  t1628 = t1623 + t1624 + t1627;
  t1081 = -0.952469601425*t31;
  t1111 = 1. + t1081;
  t1603 = t90*t1602;
  t1621 = t705*t1614;
  t1629 = t804*t1628;
  t1630 = t1603 + t1621 + t1629;
  t1642 = t949*t1602;
  t1679 = -0.340999127418*t789*t1614;
  t1686 = t997*t1628;
  t1693 = t1642 + t1679 + t1686;
  t1704 = -0.340999127418*t789*t1602;
  t1707 = t1022*t1614;
  t1711 = t1033*t1628;
  t1717 = t1704 + t1707 + t1711;
  t1181 = 0.175248972904*t31;
  t1184 = -0.553471*t54;
  t1190 = t1181 + t1184;
  t1270 = -0.693671301908*t31;
  t1274 = 1. + t1270;
  t1638 = t79*t1630;
  t1700 = -0.340999127418*t941*t1693;
  t1725 = t1015*t1717;
  t1726 = t1638 + t1700 + t1725;
  t1292 = -0.803828*t54;
  t1315 = t39 + t1292;
  t1744 = t1130*t1630;
  t1745 = t1143*t1693;
  t1756 = -0.340999127418*t941*t1717;
  t1757 = t1744 + t1745 + t1756;
  t1318 = 0.444895486988*t31;
  t1325 = 0.218018*t54;
  t1333 = t1318 + t1325;
  t1766 = t1200*t1630;
  t1768 = t1226*t1693;
  t1770 = t1246*t1717;
  t1771 = t1766 + t1768 + t1770;
  t1809 = -1.*t163*t215*t212;
  t1815 = t234*t163*t223;
  t1819 = t1809 + t1815;
  t1824 = t234*t163*t215;
  t1825 = t163*t212*t223;
  t1829 = t1824 + t1825;
  t1808 = -1.*t193*t217;
  t1821 = 0.340999127418*t209*t1819;
  t1830 = t305*t1829;
  t1832 = t1808 + t1821 + t1830;
  t1840 = -1.*t380*t217;
  t1841 = t385*t1819;
  t1856 = 0.340999127418*t209*t1829;
  t1857 = t1840 + t1841 + t1856;
  t1867 = -1.*t470*t217;
  t1873 = t475*t1819;
  t1878 = t493*t1829;
  t1880 = t1867 + t1873 + t1878;
  t1835 = t128*t1832;
  t1863 = t369*t1857;
  t1886 = t456*t1880;
  t1901 = t1835 + t1863 + t1886;
  t1906 = t560*t1832;
  t1910 = -0.340999127418*t447*t1857;
  t1916 = t588*t1880;
  t1917 = t1906 + t1910 + t1916;
  t1922 = -0.340999127418*t447*t1832;
  t1923 = t645*t1857;
  t1924 = t653*t1880;
  t1934 = t1922 + t1923 + t1924;
  t1905 = t113*t1901;
  t1918 = -0.340999127418*t556*t1917;
  t1937 = t608*t1934;
  t1940 = t1905 + t1918 + t1937;
  t1943 = t721*t1901;
  t1944 = t736*t1917;
  t1949 = -0.340999127418*t556*t1934;
  t1952 = t1943 + t1944 + t1949;
  t1958 = t815*t1901;
  t1961 = t850*t1917;
  t1970 = t878*t1934;
  t1971 = t1958 + t1961 + t1970;
  t1941 = t90*t1940;
  t1953 = t705*t1952;
  t1975 = t804*t1971;
  t1976 = t1941 + t1953 + t1975;
  t1980 = t949*t1940;
  t1981 = -0.340999127418*t789*t1952;
  t1983 = t997*t1971;
  t1990 = t1980 + t1981 + t1983;
  t1995 = -0.340999127418*t789*t1940;
  t1996 = t1022*t1952;
  t1997 = t1033*t1971;
  t2007 = t1995 + t1996 + t1997;
  t1977 = t79*t1976;
  t1991 = -0.340999127418*t941*t1990;
  t2019 = t1015*t2007;
  t2025 = t1977 + t1991 + t2019;
  t2030 = t1130*t1976;
  t2035 = t1143*t1990;
  t2036 = -0.340999127418*t941*t2007;
  t2045 = t2030 + t2035 + t2036;
  t2049 = t1200*t1976;
  t2051 = t1226*t1990;
  t2052 = t1246*t2007;
  t2054 = t2049 + t2051 + t2052;
  t1072 = t70*t1071;
  t1179 = t1111*t1177;
  t1256 = t1190*t1250;
  t1264 = t1072 + t1179 + t1256;
  t1287 = t1274*t1071;
  t1316 = t1315*t1177;
  t1334 = t1333*t1250;
  t1339 = t1287 + t1316 + t1334;
  t2084 = -0.218018*t54;
  t2086 = t1318 + t2084;
  t2091 = 0.553471*t54;
  t2093 = t1181 + t2091;
  t2100 = -0.353861996165*t31;
  t2101 = 1. + t2100;
  t1728 = t70*t1726;
  t1761 = t1111*t1757;
  t1774 = t1190*t1771;
  t1776 = t1728 + t1761 + t1774;
  t1783 = t1274*t1726;
  t1786 = t1315*t1757;
  t1790 = t1333*t1771;
  t1792 = t1783 + t1786 + t1790;
  t2027 = t70*t2025;
  t2048 = t1111*t2045;
  t2055 = t1190*t2054;
  t2056 = t2027 + t2048 + t2055;
  t2071 = t1274*t2025;
  t2072 = t1315*t2045;
  t2073 = t1333*t2054;
  t2078 = t2071 + t2072 + t2073;
  t2088 = t2086*t1071;
  t2099 = t2093*t1177;
  t2104 = t2101*t1250;
  t2107 = t2088 + t2099 + t2104;
  t2128 = t2086*t1726;
  t2135 = t2093*t1757;
  t2136 = t2101*t1771;
  t2139 = t2128 + t2135 + t2136;
  t2155 = t2086*t2025;
  t2158 = t2093*t2045;
  t2159 = t2101*t2054;
  t2160 = t2155 + t2158 + t2159;
  t2489 = -0.120666640478*t31;
  t2493 = -0.444895486988*t31;
  t2518 = -0.175248972904*t31;
  t2203 = -0.04500040093286238*t209;
  t2205 = -0.07877663122399998*t475;
  t2207 = 0.031030906668*t493;
  t2210 = 0. + t2203 + t2205 + t2207;
  t2213 = -0.091*t212;
  t2215 = 0. + t2213;
  t2221 = -1.*t234;
  t2224 = 1. + t2221;
  t2229 = -0.091*t2224;
  t2235 = 0. + t2229;
  t2239 = 1.296332362046933e-7*var1[18];
  t2258 = -0.07877668146182712*t209;
  t2262 = -0.045000372235*t380;
  t2264 = t2239 + t2258 + t2262;
  t2266 = 3.2909349868922137e-7*var1[18];
  t2267 = 0.03103092645718495*t209;
  t2272 = -0.045000372235*t193;
  t2273 = t2266 + t2267 + t2272;
  t2278 = -1.296332362046933e-7*var1[19];
  t2279 = -0.14128592423750855*t447;
  t2289 = -0.045000372235*t588;
  t2290 = t2278 + t2279 + t2289;
  t2296 = 3.2909349868922137e-7*var1[19];
  t2298 = -0.055653945343889656*t447;
  t2299 = -0.045000372235*t653;
  t2300 = t2296 + t2298 + t2299;
  t2302 = -0.04500040093286238*t447;
  t2305 = -0.055653909852*t369;
  t2307 = -0.141285834136*t128;
  t2312 = 0. + t2302 + t2305 + t2307;
  t2321 = 0.039853038461262744*t556;
  t2322 = -0.22023459268999998*t850;
  t2328 = -0.086752619205*t878;
  t2330 = 0. + t2321 + t2322 + t2328;
  t2357 = 6.295460977284962e-8*var1[20];
  t2359 = -0.22023473313910558*t556;
  t2360 = 0.039853013046*t721;
  t2362 = t2357 + t2359 + t2360;
  t2382 = -1.5981976069815686e-7*var1[20];
  t2383 = -0.08675267452931407*t556;
  t2385 = 0.039853013046*t113;
  t2387 = t2382 + t2383 + t2385;
  t2403 = 5.7930615939377813e-8*var1[21];
  t2404 = -0.23261833304643187*t789;
  t2405 = -0.262809976934*t997;
  t2412 = t2403 + t2404 + t2405;
  t2421 = -2.281945176511838e-8*var1[21];
  t2422 = -0.5905366811997648*t789;
  t2423 = -0.262809976934*t1033;
  t2424 = t2421 + t2422 + t2423;
  t2432 = -0.26281014453449253*t789;
  t2437 = -0.5905363046000001*t705;
  t2438 = -0.23261818470000004*t90;
  t2439 = 0. + t2432 + t2437 + t2438;
  t2442 = 0.06199697675299678*t941;
  t2446 = -0.823260828522*t1246;
  t2452 = -0.324290713329*t1226;
  t2454 = 0. + t2442 + t2446 + t2452;
  t2458 = 7.500378623168247e-8*var1[22];
  t2461 = -0.32429092013729516*t941;
  t2462 = 0.061996937216*t1130;
  t2471 = t2458 + t2461 + t2462;
  t2476 = -2.95447451120871e-8*var1[22];
  t2478 = -0.8232613535360118*t941;
  t2480 = 0.061996937216*t79;
  t2481 = t2476 + t2478 + t2480;
  t2486 = 7.20503013377005e-8*var1[23];
  t2488 = -0.3667270384178674*t31;
  t2490 = t2489 + t1292;
  t2492 = -0.29871295412*t2490;
  t2498 = t2493 + t1325;
  t2499 = 0.44503472296900004*t2498;
  t2500 = t2486 + t2488 + t2492 + t2499;
  t2512 = 2.838136523330542e-8*var1[23];
  t2517 = -0.2845150083511607*t31;
  t2522 = t2518 + t1184;
  t2523 = 0.44503472296900004*t2522;
  t2524 = t2489 + t59;
  t2525 = -0.5286755231320001*t2524;
  t2528 = t2512 + t2517 + t2523 + t2525;
  t2536 = 1.0464152525368286e-7*var1[23];
  t2537 = 0.15748087543254813*t31;
  t2540 = t2493 + t2084;
  t2541 = -0.5286755231320001*t2540;
  t2542 = t2518 + t2091;
  t2545 = -0.29871295412*t2542;
  t2546 = t2536 + t2537 + t2541 + t2545;
  p_output1[0]=-0.930418*t1264 + 0.366501*t1339;
  p_output1[1]=-0.930418*t1776 + 0.366501*t1792;
  p_output1[2]=-0.930418*t2056 + 0.366501*t2078;
  p_output1[3]=0.;
  p_output1[4]=-0.294604*t1264 - 0.747896*t1339 + 0.594863*t2107;
  p_output1[5]=-0.294604*t1776 - 0.747896*t1792 + 0.594863*t2139;
  p_output1[6]=-0.294604*t2056 - 0.747896*t2078 + 0.594863*t2160;
  p_output1[7]=0.;
  p_output1[8]=0.218018*t1264 + 0.553471*t1339 + 0.803828*t2107;
  p_output1[9]=0.218018*t1776 + 0.553471*t1792 + 0.803828*t2139;
  p_output1[10]=0.218018*t2056 + 0.553471*t2078 + 0.803828*t2160;
  p_output1[11]=0.;
  p_output1[12]=0. - 0.402602*t1264 - 0.792413*t1339 + 0.061997*t2107 + t158*t163*t2210 + t2215*t225 + t1009*t2471 + t1057*t2481 + t1071*t2500 + t2235*t251 + t1177*t2528 + t1250*t2546 + t2264*t294 + t2273*t348 + t2290*t350 + t2300*t416 + t2312*t504 + t2330*t545 + t2362*t595 + t2387*t665 + t2412*t673 + t2424*t761 + t2439*t887 + t2454*t900 + var1[0];
  p_output1[13]=0. - 0.402602*t1776 - 0.792413*t1792 + 0.061997*t2139 + t163*t221*t2210 + t1363*t2215 + t1394*t2235 + t1407*t2264 + t1445*t2273 + t1466*t2290 + t1500*t2300 + t1522*t2312 + t1532*t2330 + t1579*t2362 + t1592*t2387 + t1602*t2412 + t1614*t2424 + t1628*t2439 + t1630*t2454 + t1693*t2471 + t1717*t2481 + t1726*t2500 + t1757*t2528 + t1771*t2546 + var1[1];
  p_output1[14]=0. - 0.402602*t2056 - 0.792413*t2078 + 0.061997*t2160 - 1.*t217*t2210 + t163*t215*t2215 + t163*t223*t2235 + t1819*t2264 + t1829*t2273 + t1832*t2290 + t1857*t2300 + t1880*t2312 + t1901*t2330 + t1917*t2362 + t1934*t2387 + t1940*t2412 + t1952*t2424 + t1971*t2439 + t1976*t2454 + t1990*t2471 + t2007*t2481 + t2025*t2500 + t2045*t2528 + t2054*t2546 + var1[2];
  p_output1[15]=1.;
}



void T_toe_roll_joint_right_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
