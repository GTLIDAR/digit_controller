/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:09:58 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jdq_AMWorld_right_hip_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t203;
  double t235;
  double t249;
  double t458;
  double t881;
  double t782;
  double t797;
  double t800;
  double t308;
  double t343;
  double t344;
  double t390;
  double t425;
  double t515;
  double t521;
  double t576;
  double t654;
  double t683;
  double t886;
  double t949;
  double t969;
  double t1030;
  double t1039;
  double t1044;
  double t1060;
  double t1443;
  double t1278;
  double t1301;
  double t1323;
  double t1338;
  double t1353;
  double t1357;
  double t1360;
  double t1364;
  double t1258;
  double t1462;
  double t1492;
  double t1502;
  double t1540;
  double t1573;
  double t1576;
  double t1590;
  double t1599;
  double t832;
  double t856;
  double t711;
  double t741;
  double t463;
  double t468;
  double t1157;
  double t1231;
  double t1251;
  double t1935;
  double t1954;
  double t1974;
  double t2043;
  double t2044;
  double t2059;
  double t2066;
  double t2086;
  double t2105;
  double t2124;
  double t2199;
  double t2211;
  double t2232;
  double t2233;
  double t2243;
  double t2263;
  double t2265;
  double t2281;
  double t2328;
  double t2341;
  double t2477;
  double t2530;
  double t2660;
  double t2674;
  double t2698;
  double t2701;
  double t1789;
  double t2867;
  double t2871;
  double t2910;
  double t2928;
  double t2975;
  double t2998;
  double t3181;
  double t3198;
  double t3264;
  double t3267;
  double t3332;
  double t3405;
  double t3406;
  double t3413;
  double t3637;
  double t3672;
  double t3670;
  double t3673;
  double t3697;
  double t3726;
  double t3728;
  double t3739;
  double t3715;
  double t3755;
  double t3777;
  double t3784;
  double t3789;
  double t3811;
  double t3667;
  double t3782;
  double t3819;
  double t3842;
  double t3874;
  double t3906;
  double t3943;
  double t3970;
  double t4016;
  double t4019;
  double t4138;
  double t4183;
  double t477;
  double t765;
  double t1102;
  double t1132;
  double t1211;
  double t1429;
  double t1656;
  double t1671;
  double t1706;
  double t1738;
  double t1777;
  double t1781;
  double t1857;
  double t1862;
  double t1878;
  double t1891;
  double t2060;
  double t2225;
  double t2284;
  double t2290;
  double t2316;
  double t2556;
  double t2715;
  double t2734;
  double t2761;
  double t2762;
  double t2768;
  double t2772;
  double t2846;
  double t2850;
  double t2860;
  double t2862;
  double t2894;
  double t2934;
  double t3091;
  double t3098;
  double t3152;
  double t3320;
  double t3415;
  double t3430;
  double t3453;
  double t3456;
  double t3469;
  double t3478;
  double t3480;
  double t3491;
  double t3521;
  double t3523;
  double t3864;
  double t3989;
  double t4204;
  double t4211;
  double t4241;
  double t4321;
  double t4340;
  double t4366;
  double t4369;
  double t4408;
  double t4410;
  double t4443;
  double t4469;
  double t4521;
  double t1906;
  double t2863;
  double t3613;
  double t3630;
  double t4886;
  double t4894;
  double t4899;
  double t4986;
  double t5007;
  double t5037;
  double t4956;
  double t5059;
  double t5065;
  double t5110;
  double t5121;
  double t5125;
  double t4858;
  double t5093;
  double t5174;
  double t5178;
  double t5208;
  double t5215;
  double t5217;
  double t5224;
  double t5255;
  double t5257;
  double t5258;
  double t5264;
  double t4673;
  double t4674;
  double t4683;
  double t4685;
  double t5183;
  double t5225;
  double t5306;
  double t5309;
  double t5358;
  double t5366;
  double t5370;
  double t5385;
  double t5391;
  double t5392;
  double t5460;
  double t5481;
  double t5518;
  double t5520;
  double t4716;
  double t4718;
  double t4738;
  double t4752;
  double t5652;
  double t5668;
  double t5670;
  double t5676;
  double t5686;
  double t5687;
  double t5625;
  double t5671;
  double t5694;
  double t5697;
  double t5755;
  double t5758;
  double t5772;
  double t5773;
  double t5886;
  double t5893;
  double t5939;
  double t5945;
  double t5752;
  double t5839;
  double t5947;
  double t5961;
  double t5971;
  double t6004;
  double t6008;
  double t6012;
  double t6024;
  double t6031;
  double t6064;
  double t6065;
  double t6080;
  double t6081;
  double t4226;
  double t4535;
  double t6251;
  double t6271;
  double t6281;
  double t6301;
  double t6303;
  double t6311;
  double t6313;
  double t6316;
  double t6321;
  double t4688;
  double t4702;
  double t4754;
  double t4765;
  double t4785;
  double t6299;
  double t6312;
  double t6322;
  double t6339;
  double t5336;
  double t5530;
  double t6366;
  double t6372;
  double t6377;
  double t6380;
  double t5533;
  double t5542;
  double t6385;
  double t6391;
  double t6399;
  double t6400;
  double t5606;
  double t5610;
  double t5617;
  double t5964;
  double t6093;
  double t6130;
  double t6131;
  double t6176;
  double t6189;
  double t6203;
  double t6478;
  double t6526;
  double t6540;
  double t6546;
  double t6613;
  double t6643;
  double t6645;
  double t6646;
  double t6651;
  double t6653;
  double t6666;
  double t6682;
  double t6816;
  double t6818;
  double t6819;
  double t6824;
  double t6836;
  double t6866;
  double t6873;
  double t6893;
  double t6902;
  double t6905;
  double t6910;
  double t6911;
  double t6826;
  double t6898;
  double t6913;
  double t6918;
  double t6923;
  double t6928;
  double t6934;
  double t6935;
  double t6939;
  double t6941;
  double t6950;
  double t6955;
  double t7009;
  double t7010;
  double t7015;
  double t7021;
  double t7029;
  double t7032;
  double t7047;
  double t7060;
  double t7062;
  double t7017;
  double t7046;
  double t7063;
  double t7064;
  double t7066;
  double t7069;
  double t7081;
  double t7082;
  double t7089;
  double t7093;
  double t7094;
  double t7095;
  t203 = Cos(var1[19]);
  t235 = -1.*t203;
  t249 = 1. + t235;
  t458 = Sin(var1[18]);
  t881 = Sin(var1[19]);
  t782 = Cos(var1[18]);
  t797 = -1.*t782;
  t800 = 1. + t797;
  t308 = -0.8656776547239999*t249;
  t343 = 1. + t308;
  t344 = -0.366501*t343;
  t390 = -0.3172717261340007*t249;
  t425 = t344 + t390;
  t515 = -0.134322983001*t249;
  t521 = 1. + t515;
  t576 = 0.930418*t521;
  t654 = 0.12497652119782442*t249;
  t683 = t576 + t654;
  t886 = -0.930418*t881;
  t949 = 0. + t886;
  t969 = -0.366501*t949;
  t1030 = -0.366501*t881;
  t1039 = 0. + t1030;
  t1044 = 0.930418*t1039;
  t1060 = t969 + t1044;
  t1443 = Cos(var1[17]);
  t1278 = 0.340999127418*t800*t425;
  t1301 = -0.8656776547239999*t800;
  t1323 = 1. + t1301;
  t1338 = t1323*t683;
  t1353 = -0.930418*t458;
  t1357 = 0. + t1353;
  t1360 = t1357*t1060;
  t1364 = 0. + t1278 + t1338 + t1360;
  t1258 = Sin(var1[17]);
  t1462 = -0.134322983001*t800;
  t1492 = 1. + t1462;
  t1502 = t1492*t425;
  t1540 = 0.340999127418*t800*t683;
  t1573 = 0.366501*t458;
  t1576 = 0. + t1573;
  t1590 = t1576*t1060;
  t1599 = 0. + t1502 + t1540 + t1590;
  t832 = -1.000000637725*t800;
  t856 = 1. + t832;
  t711 = 0.930418*t458;
  t741 = 0. + t711;
  t463 = -0.366501*t458;
  t468 = 0. + t463;
  t1157 = Sin(var1[4]);
  t1231 = Cos(var1[4]);
  t1251 = Cos(var1[5]);
  t1935 = -1.000000637725*t249;
  t1954 = 1. + t1935;
  t1974 = -0.707107*t1954;
  t2043 = -0.657905*t949;
  t2044 = -0.259155*t1039;
  t2059 = t1974 + t2043 + t2044;
  t2066 = -0.259155*t521;
  t2086 = 0.22434503092393926*t249;
  t2105 = 0.366501*t881;
  t2124 = 0. + t2105;
  t2199 = -0.707107*t2124;
  t2211 = t2066 + t2086 + t2199;
  t2232 = -0.657905*t343;
  t2233 = 0.0883716288660118*t249;
  t2243 = 0.930418*t881;
  t2263 = 0. + t2243;
  t2265 = -0.707107*t2263;
  t2281 = t2232 + t2233 + t2265;
  t2328 = t1576*t2059;
  t2341 = 0.340999127418*t800*t2211;
  t2477 = t1492*t2281;
  t2530 = 0. + t2328 + t2341 + t2477;
  t2660 = t1357*t2059;
  t2674 = t1323*t2211;
  t2698 = 0.340999127418*t800*t2281;
  t2701 = 0. + t2660 + t2674 + t2698;
  t1789 = Sin(var1[5]);
  t2867 = 0.707107*t1954;
  t2871 = t2867 + t2043 + t2044;
  t2910 = 0.707107*t2124;
  t2928 = t2066 + t2086 + t2910;
  t2975 = 0.707107*t2263;
  t2998 = t2232 + t2233 + t2975;
  t3181 = t1576*t2871;
  t3198 = 0.340999127418*t800*t2928;
  t3264 = t1492*t2998;
  t3267 = 0. + t3181 + t3198 + t3264;
  t3332 = t1357*t2871;
  t3405 = t1323*t2928;
  t3406 = 0.340999127418*t800*t2998;
  t3413 = 0. + t3332 + t3405 + t3406;
  t3637 = Cos(var1[3]);
  t3672 = Sin(var1[3]);
  t3670 = t3637*t1251*t1157;
  t3673 = t3672*t1789;
  t3697 = t3670 + t3673;
  t3726 = -1.*t1251*t3672;
  t3728 = t3637*t1157*t1789;
  t3739 = t3726 + t3728;
  t3715 = -1.*t1258*t3697;
  t3755 = t1443*t3739;
  t3777 = t3715 + t3755;
  t3784 = t1443*t3697;
  t3789 = t1258*t3739;
  t3811 = t3784 + t3789;
  t3667 = t3637*t1231*t468;
  t3782 = 0.340999127418*t800*t3777;
  t3819 = t1492*t3811;
  t3842 = t3667 + t3782 + t3819;
  t3874 = t3637*t1231*t741;
  t3906 = t1323*t3777;
  t3943 = 0.340999127418*t800*t3811;
  t3970 = t3874 + t3906 + t3943;
  t4016 = t856*t3637*t1231;
  t4019 = t1357*t3777;
  t4138 = t1576*t3811;
  t4183 = t4016 + t4019 + t4138;
  t477 = t425*t468;
  t765 = t683*t741;
  t1102 = t856*t1060;
  t1132 = 0. + t477 + t765 + t1102;
  t1211 = -1.*t1132*t1157;
  t1429 = -1.*t1258*t1364;
  t1656 = t1443*t1599;
  t1671 = 0. + t1429 + t1656;
  t1706 = t1251*t1671;
  t1738 = t1443*t1364;
  t1777 = t1258*t1599;
  t1781 = 0. + t1738 + t1777;
  t1857 = t1781*t1789;
  t1862 = 0. + t1706 + t1857;
  t1878 = t1231*t1862;
  t1891 = 0. + t1211 + t1878;
  t2060 = t856*t2059;
  t2225 = t741*t2211;
  t2284 = t468*t2281;
  t2290 = 0. + t2060 + t2225 + t2284;
  t2316 = -1.*t2290*t1157;
  t2556 = t1443*t2530;
  t2715 = -1.*t1258*t2701;
  t2734 = 0. + t2556 + t2715;
  t2761 = t1251*t2734;
  t2762 = t1258*t2530;
  t2768 = t1443*t2701;
  t2772 = 0. + t2762 + t2768;
  t2846 = t2772*t1789;
  t2850 = 0. + t2761 + t2846;
  t2860 = t1231*t2850;
  t2862 = 0. + t2316 + t2860;
  t2894 = t856*t2871;
  t2934 = t741*t2928;
  t3091 = t468*t2998;
  t3098 = 0. + t2894 + t2934 + t3091;
  t3152 = -1.*t3098*t1157;
  t3320 = t1443*t3267;
  t3415 = -1.*t1258*t3413;
  t3430 = 0. + t3320 + t3415;
  t3453 = t1251*t3430;
  t3456 = t1258*t3267;
  t3469 = t1443*t3413;
  t3478 = 0. + t3456 + t3469;
  t3480 = t3478*t1789;
  t3491 = 0. + t3453 + t3480;
  t3521 = t1231*t3491;
  t3523 = 0. + t3152 + t3521;
  t3864 = t2263*t3842;
  t3989 = t2124*t3970;
  t4204 = t1954*t4183;
  t4211 = t3864 + t3989 + t4204;
  t4241 = t343*t3842;
  t4321 = -0.340999127418*t249*t3970;
  t4340 = t949*t4183;
  t4366 = t4241 + t4321 + t4340;
  t4369 = -0.657905*t4366;
  t4408 = -0.340999127418*t249*t3842;
  t4410 = t521*t3970;
  t4443 = t1039*t4183;
  t4469 = t4408 + t4410 + t4443;
  t4521 = -0.259155*t4469;
  t1906 = -0.00018*t1891;
  t2863 = 0.03335*t2862;
  t3613 = 0.00017*t3523;
  t3630 = t1906 + t2863 + t3613;
  t4886 = t1251*t3672*t1157;
  t4894 = -1.*t3637*t1789;
  t4899 = t4886 + t4894;
  t4986 = t3637*t1251;
  t5007 = t3672*t1157*t1789;
  t5037 = t4986 + t5007;
  t4956 = -1.*t1258*t4899;
  t5059 = t1443*t5037;
  t5065 = t4956 + t5059;
  t5110 = t1443*t4899;
  t5121 = t1258*t5037;
  t5125 = t5110 + t5121;
  t4858 = t1231*t468*t3672;
  t5093 = 0.340999127418*t800*t5065;
  t5174 = t1492*t5125;
  t5178 = t4858 + t5093 + t5174;
  t5208 = t1231*t741*t3672;
  t5215 = t1323*t5065;
  t5217 = 0.340999127418*t800*t5125;
  t5224 = t5208 + t5215 + t5217;
  t5255 = t856*t1231*t3672;
  t5257 = t1357*t5065;
  t5258 = t1576*t5125;
  t5264 = t5255 + t5257 + t5258;
  t4673 = 0.00015*t1891;
  t4674 = 0.00017*t2862;
  t4683 = 0.01153*t3523;
  t4685 = t4673 + t4674 + t4683;
  t5183 = t2263*t5178;
  t5225 = t2124*t5224;
  t5306 = t1954*t5264;
  t5309 = t5183 + t5225 + t5306;
  t5358 = t343*t5178;
  t5366 = -0.340999127418*t249*t5224;
  t5370 = t949*t5264;
  t5385 = t5358 + t5366 + t5370;
  t5391 = -0.657905*t5385;
  t5392 = -0.340999127418*t249*t5178;
  t5460 = t521*t5224;
  t5481 = t1039*t5264;
  t5518 = t5392 + t5460 + t5481;
  t5520 = -0.259155*t5518;
  t4716 = 0.03396*t1891;
  t4718 = -0.00018*t2862;
  t4738 = 0.00015*t3523;
  t4752 = t4716 + t4718 + t4738;
  t5652 = -1.*t1231*t1251*t1258;
  t5668 = t1443*t1231*t1789;
  t5670 = t5652 + t5668;
  t5676 = t1443*t1231*t1251;
  t5686 = t1231*t1258*t1789;
  t5687 = t5676 + t5686;
  t5625 = -1.*t468*t1157;
  t5671 = 0.340999127418*t800*t5670;
  t5694 = t1492*t5687;
  t5697 = t5625 + t5671 + t5694;
  t5755 = -1.*t741*t1157;
  t5758 = t1323*t5670;
  t5772 = 0.340999127418*t800*t5687;
  t5773 = t5755 + t5758 + t5772;
  t5886 = -1.*t856*t1157;
  t5893 = t1357*t5670;
  t5939 = t1576*t5687;
  t5945 = t5886 + t5893 + t5939;
  t5752 = t2263*t5697;
  t5839 = t2124*t5773;
  t5947 = t1954*t5945;
  t5961 = t5752 + t5839 + t5947;
  t5971 = t343*t5697;
  t6004 = -0.340999127418*t249*t5773;
  t6008 = t949*t5945;
  t6012 = t5971 + t6004 + t6008;
  t6024 = -0.657905*t6012;
  t6031 = -0.340999127418*t249*t5697;
  t6064 = t521*t5773;
  t6065 = t1039*t5945;
  t6080 = t6031 + t6064 + t6065;
  t6081 = -0.259155*t6080;
  t4226 = -0.707107*t4211;
  t4535 = t4226 + t4369 + t4521;
  t6251 = t1251*t1781;
  t6271 = -1.*t1671*t1789;
  t6281 = 0. + t6251 + t6271;
  t6301 = t1251*t2772;
  t6303 = -1.*t2734*t1789;
  t6311 = 0. + t6301 + t6303;
  t6313 = t1251*t3478;
  t6316 = -1.*t3430*t1789;
  t6321 = 0. + t6313 + t6316;
  t4688 = 0.707107*t4211;
  t4702 = t4688 + t4369 + t4521;
  t4754 = -0.366501*t4366;
  t4765 = 0.930418*t4469;
  t4785 = t4754 + t4765;
  t6299 = -0.00018*t6281;
  t6312 = 0.03335*t6311;
  t6322 = 0.00017*t6321;
  t6339 = t6299 + t6312 + t6322;
  t5336 = -0.707107*t5309;
  t5530 = t5336 + t5391 + t5520;
  t6366 = 0.00015*t6281;
  t6372 = 0.00017*t6311;
  t6377 = 0.01153*t6321;
  t6380 = t6366 + t6372 + t6377;
  t5533 = 0.707107*t5309;
  t5542 = t5533 + t5391 + t5520;
  t6385 = 0.03396*t6281;
  t6391 = -0.00018*t6311;
  t6399 = 0.00015*t6321;
  t6400 = t6385 + t6391 + t6399;
  t5606 = -0.366501*t5385;
  t5610 = 0.930418*t5518;
  t5617 = t5606 + t5610;
  t5964 = -0.707107*t5961;
  t6093 = t5964 + t6024 + t6081;
  t6130 = 0.707107*t5961;
  t6131 = t6130 + t6024 + t6081;
  t6176 = -0.366501*t6012;
  t6189 = 0.930418*t6080;
  t6203 = t6176 + t6189;
  t6478 = -0.00018*t1132;
  t6526 = 0.03335*t2290;
  t6540 = 0.00017*t3098;
  t6546 = t6478 + t6526 + t6540;
  t6613 = 0.00015*t1132;
  t6643 = 0.00017*t2290;
  t6645 = 0.01153*t3098;
  t6646 = t6613 + t6643 + t6645;
  t6651 = 0.03396*t1132;
  t6653 = -0.00018*t2290;
  t6666 = 0.00015*t3098;
  t6682 = t6651 + t6653 + t6666;
  t6816 = -1.*t425*t468;
  t6818 = -1.*t683*t741;
  t6819 = -1.*t856*t1060;
  t6824 = 0. + t6816 + t6818 + t6819;
  t6836 = -1.*t856*t2059;
  t6866 = -1.*t741*t2211;
  t6873 = -1.*t468*t2281;
  t6893 = 0. + t6836 + t6866 + t6873;
  t6902 = -1.*t856*t2871;
  t6905 = -1.*t741*t2928;
  t6910 = -1.*t468*t2998;
  t6911 = 0. + t6902 + t6905 + t6910;
  t6826 = -0.00018*t6824;
  t6898 = 0.03335*t6893;
  t6913 = 0.00017*t6911;
  t6918 = t6826 + t6898 + t6913;
  t6923 = 0.00015*t6824;
  t6928 = 0.00017*t6893;
  t6934 = 0.01153*t6911;
  t6935 = t6923 + t6928 + t6934;
  t6939 = 0.03396*t6824;
  t6941 = -0.00018*t6893;
  t6950 = 0.00015*t6911;
  t6955 = t6939 + t6941 + t6950;
  t7009 = -0.930418*t425;
  t7010 = -0.366501*t683;
  t7015 = 0. + t7009 + t7010;
  t7021 = -0.366501*t2211;
  t7029 = -0.930418*t2281;
  t7032 = 0. + t7021 + t7029;
  t7047 = -0.366501*t2928;
  t7060 = -0.930418*t2998;
  t7062 = 0. + t7047 + t7060;
  t7017 = -0.00018*t7015;
  t7046 = 0.03335*t7032;
  t7063 = 0.00017*t7062;
  t7064 = t7017 + t7046 + t7063;
  t7066 = 0.00015*t7015;
  t7069 = 0.00017*t7032;
  t7081 = 0.01153*t7062;
  t7082 = t7066 + t7069 + t7081;
  t7089 = 0.03396*t7015;
  t7093 = -0.00018*t7032;
  t7094 = 0.00015*t7062;
  t7095 = t7089 + t7093 + t7094;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=t3630*t4535 + t4685*t4702 + t4752*t4785;
  p_output1[10]=t3630*t5530 + t4685*t5542 + t4752*t5617;
  p_output1[11]=t3630*t6093 + t4685*t6131 + t4752*t6203;
  p_output1[12]=t4535*t6339 + t4702*t6380 + t4785*t6400;
  p_output1[13]=t5530*t6339 + t5542*t6380 + t5617*t6400;
  p_output1[14]=t6093*t6339 + t6131*t6380 + t6203*t6400;
  p_output1[15]=t4535*t6546 + t4702*t6646 + t4785*t6682;
  p_output1[16]=t5530*t6546 + t5542*t6646 + t5617*t6682;
  p_output1[17]=t6093*t6546 + t6131*t6646 + t6203*t6682;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=t4535*t6918 + t4702*t6935 + t4785*t6955;
  p_output1[52]=t5530*t6918 + t5542*t6935 + t5617*t6955;
  p_output1[53]=t6093*t6918 + t6131*t6935 + t6203*t6955;
  p_output1[54]=t4535*t7064 + t4702*t7082 + t4785*t7095;
  p_output1[55]=t5530*t7064 + t5542*t7082 + t5617*t7095;
  p_output1[56]=t6093*t7064 + t6131*t7082 + t6203*t7095;
  p_output1[57]=0.00017998792641570006*t4535 - 0.00015000434995424998*t4702 - 0.03396002164623255*t4785;
  p_output1[58]=0.00017998792641570006*t5530 - 0.00015000434995424998*t5542 - 0.03396002164623255*t5617;
  p_output1[59]=0.00017998792641570006*t6093 - 0.00015000434995424998*t6131 - 0.03396002164623255*t6203;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jdq_AMWorld_right_hip_pitch_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
