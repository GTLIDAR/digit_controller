/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:21:54 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jb_right_shoulder_yaw_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t615;
  double t660;
  double t780;
  double t884;
  double t913;
  double t244;
  double t503;
  double t613;
  double t1287;
  double t857;
  double t797;
  double t852;
  double t854;
  double t889;
  double t896;
  double t906;
  double t974;
  double t977;
  double t996;
  double t1011;
  double t1066;
  double t1242;
  double t1254;
  double t1286;
  double t1314;
  double t1321;
  double t1384;
  double t1408;
  double t1413;
  double t1444;
  double t1525;
  double t1652;
  double t1707;
  double t1708;
  double t1727;
  double t1768;
  double t1779;
  double t1792;
  double t1793;
  double t1802;
  double t1822;
  double t2025;
  double t1047;
  double t1083;
  double t1197;
  double t1564;
  double t1602;
  double t1617;
  double t1834;
  double t1889;
  double t156;
  double t2026;
  double t2077;
  double t2080;
  double t2090;
  double t2100;
  double t2102;
  double t2104;
  double t2108;
  double t138;
  double t2152;
  double t2168;
  double t2258;
  double t1898;
  double t2113;
  double t2123;
  double t2271;
  double t66;
  double t2782;
  double t2791;
  double t2811;
  double t2821;
  double t2838;
  double t2864;
  double t2953;
  double t3014;
  double t3022;
  double t2813;
  double t2880;
  double t3026;
  double t3027;
  double t3057;
  double t3100;
  double t3136;
  double t3141;
  double t2375;
  double t2399;
  double t2424;
  double t2463;
  double t2486;
  double t2497;
  double t2641;
  double t2657;
  double t2714;
  double t3230;
  double t3234;
  double t3249;
  double t3044;
  double t3152;
  double t3162;
  double t3784;
  double t3789;
  double t3800;
  double t3836;
  double t3839;
  double t3843;
  double t3888;
  double t3902;
  double t3919;
  double t3823;
  double t3877;
  double t3984;
  double t4068;
  double t4097;
  double t4106;
  double t4112;
  double t4126;
  double t4180;
  double t4194;
  double t4228;
  double t4091;
  double t4131;
  double t4140;
  double t2124;
  double t2273;
  double t2282;
  double t2465;
  double t2598;
  double t2682;
  double t2686;
  double t2713;
  double t2731;
  double t2734;
  double t2736;
  double t2747;
  double t2748;
  double t3200;
  double t3275;
  double t3362;
  double t3489;
  double t3490;
  double t3502;
  double t3546;
  double t3578;
  double t3586;
  double t3589;
  double t3600;
  double t3622;
  double t3643;
  double t4173;
  double t4239;
  double t4276;
  double t4336;
  double t4345;
  double t4363;
  double t4430;
  double t4435;
  double t4436;
  double t4450;
  double t4499;
  double t4529;
  double t4585;
  double t4735;
  double t4740;
  double t4742;
  double t4935;
  double t5197;
  double t5006;
  double t4869;
  double t4875;
  double t4897;
  double t4951;
  double t4955;
  double t4976;
  double t5010;
  double t5014;
  double t5053;
  double t5079;
  double t5109;
  double t5134;
  double t5139;
  double t5159;
  double t5162;
  double t5165;
  double t5179;
  double t5220;
  double t5224;
  double t5225;
  double t5263;
  double t5280;
  double t5443;
  double t5468;
  double t5469;
  double t5509;
  double t5510;
  double t5517;
  double t5520;
  double t5536;
  double t4743;
  double t4748;
  double t4763;
  double t4775;
  double t4779;
  double t5084;
  double t5230;
  double t5547;
  double t5552;
  double t5596;
  double t5603;
  double t5607;
  double t5618;
  double t5628;
  double t5629;
  double t5632;
  double t4698;
  double t4709;
  double t4717;
  double t5658;
  double t5659;
  double t5680;
  double t5704;
  double t5709;
  double t4749;
  double t4752;
  double t5579;
  double t5641;
  double t5645;
  double t5724;
  double t5730;
  double t5739;
  double t5747;
  double t5751;
  double t5762;
  double t5769;
  double t5800;
  double t5801;
  double t5814;
  double t5651;
  double t5710;
  double t5712;
  double t5779;
  double t5849;
  double t5850;
  double t5873;
  double t5895;
  double t5896;
  double t4667;
  double t4669;
  double t4697;
  double t5718;
  double t5970;
  double t6046;
  double t6109;
  double t6255;
  double t6317;
  double t6386;
  double t6374;
  double t6479;
  double t6462;
  double t6550;
  double t6521;
  double t6999;
  double t7003;
  double t7010;
  double t7011;
  double t7019;
  double t7022;
  double t7034;
  double t7038;
  double t7114;
  double t7119;
  double t7122;
  double t7124;
  double t7132;
  double t7135;
  double t7143;
  double t7147;
  double t7182;
  double t7183;
  double t7184;
  double t7189;
  double t7196;
  double t7201;
  double t7204;
  double t7205;
  t615 = Cos(var1[26]);
  t660 = -1.*t615;
  t780 = 1. + t660;
  t884 = Sin(var1[26]);
  t913 = -0.05226439969100001*t780;
  t244 = Cos(var1[25]);
  t503 = -1.*t244;
  t613 = 1. + t503;
  t1287 = -0.49726168403800003*t780;
  t857 = 0.051978134642000004*t780;
  t797 = -0.9945383682050002*t780;
  t852 = 1. + t797;
  t854 = 0.073913*t852;
  t889 = -0.707107*t884;
  t896 = t857 + t889;
  t906 = 0.703234*t896;
  t974 = -0.703234*t884;
  t977 = t913 + t974;
  t996 = 0.707107*t977;
  t1011 = t854 + t906 + t996;
  t1066 = Sin(var1[25]);
  t1242 = -0.500001190325*t780;
  t1254 = 1. + t1242;
  t1286 = 0.707107*t1254;
  t1314 = -0.073913*t884;
  t1321 = t1287 + t1314;
  t1384 = 0.703234*t1321;
  t1408 = 0.703234*t884;
  t1413 = t913 + t1408;
  t1444 = 0.073913*t1413;
  t1525 = t1286 + t1384 + t1444;
  t1652 = -0.5054634410180001*t780;
  t1707 = 1. + t1652;
  t1708 = 0.703234*t1707;
  t1727 = 0.073913*t884;
  t1768 = t1287 + t1727;
  t1779 = 0.707107*t1768;
  t1792 = 0.707107*t884;
  t1793 = t857 + t1792;
  t1802 = 0.073913*t1793;
  t1822 = t1708 + t1779 + t1802;
  t2025 = Cos(var1[24]);
  t1047 = -0.103955395616*t613*t1011;
  t1083 = 0.994522*t1066;
  t1197 = 0. + t1083;
  t1564 = t1197*t1525;
  t1602 = -0.9890740084840001*t613;
  t1617 = 1. + t1602;
  t1834 = t1617*t1822;
  t1889 = 0. + t1047 + t1564 + t1834;
  t156 = Sin(var1[24]);
  t2026 = -0.010926102783999999*t613;
  t2077 = 1. + t2026;
  t2080 = t2077*t1011;
  t2090 = 0.104528*t1066;
  t2100 = 0. + t2090;
  t2102 = t2100*t1525;
  t2104 = -0.103955395616*t613*t1822;
  t2108 = 0. + t2080 + t2102 + t2104;
  t138 = Cos(var1[5]);
  t2152 = t2025*t1889;
  t2168 = -1.*t156*t2108;
  t2258 = 0. + t2152 + t2168;
  t1898 = t156*t1889;
  t2113 = t2025*t2108;
  t2123 = 0. + t1898 + t2113;
  t2271 = Sin(var1[5]);
  t66 = Sin(var1[3]);
  t2782 = -0.994522*t852;
  t2791 = 0.104528*t896;
  t2811 = t2782 + t2791;
  t2821 = 0.104528*t1321;
  t2838 = -0.994522*t1413;
  t2864 = t2821 + t2838;
  t2953 = 0.104528*t1707;
  t3014 = -0.994522*t1793;
  t3022 = t2953 + t3014;
  t2813 = -0.103955395616*t613*t2811;
  t2880 = t1197*t2864;
  t3026 = t1617*t3022;
  t3027 = 0. + t2813 + t2880 + t3026;
  t3057 = t2077*t2811;
  t3100 = t2100*t2864;
  t3136 = -0.103955395616*t613*t3022;
  t3141 = 0. + t3057 + t3100 + t3136;
  t2375 = Cos(var1[3]);
  t2399 = Cos(var1[4]);
  t2424 = -0.104528*t1066;
  t2463 = 0. + t2424;
  t2486 = -1.0000001112680001*t613;
  t2497 = 1. + t2486;
  t2641 = -0.994522*t1066;
  t2657 = 0. + t2641;
  t2714 = Sin(var1[4]);
  t3230 = t2025*t3027;
  t3234 = -1.*t156*t3141;
  t3249 = 0. + t3230 + t3234;
  t3044 = t156*t3027;
  t3152 = t2025*t3141;
  t3162 = 0. + t3044 + t3152;
  t3784 = -0.073913*t852;
  t3789 = -0.703234*t896;
  t3800 = t3784 + t3789 + t996;
  t3836 = -0.703234*t1321;
  t3839 = -0.073913*t1413;
  t3843 = t1286 + t3836 + t3839;
  t3888 = -0.703234*t1707;
  t3902 = -0.073913*t1793;
  t3919 = t3888 + t1779 + t3902;
  t3823 = -0.103955395616*t613*t3800;
  t3877 = t1197*t3843;
  t3984 = t1617*t3919;
  t4068 = 0. + t3823 + t3877 + t3984;
  t4097 = t2077*t3800;
  t4106 = t2100*t3843;
  t4112 = -0.103955395616*t613*t3919;
  t4126 = 0. + t4097 + t4106 + t4112;
  t4180 = t2025*t4068;
  t4194 = -1.*t156*t4126;
  t4228 = 0. + t4180 + t4194;
  t4091 = t156*t4068;
  t4131 = t2025*t4126;
  t4140 = 0. + t4091 + t4131;
  t2124 = t138*t2123;
  t2273 = -1.*t2258*t2271;
  t2282 = 0. + t2124 + t2273;
  t2465 = t2463*t1011;
  t2598 = t2497*t1525;
  t2682 = t2657*t1822;
  t2686 = 0. + t2465 + t2598 + t2682;
  t2713 = t2399*t2686;
  t2731 = t138*t2258;
  t2734 = t2123*t2271;
  t2736 = 0. + t2731 + t2734;
  t2747 = t2714*t2736;
  t2748 = 0. + t2713 + t2747;
  t3200 = t138*t3162;
  t3275 = -1.*t3249*t2271;
  t3362 = 0. + t3200 + t3275;
  t3489 = t2463*t2811;
  t3490 = t2497*t2864;
  t3502 = t2657*t3022;
  t3546 = 0. + t3489 + t3490 + t3502;
  t3578 = t2399*t3546;
  t3586 = t138*t3249;
  t3589 = t3162*t2271;
  t3600 = 0. + t3586 + t3589;
  t3622 = t2714*t3600;
  t3643 = 0. + t3578 + t3622;
  t4173 = t138*t4140;
  t4239 = -1.*t4228*t2271;
  t4276 = 0. + t4173 + t4239;
  t4336 = t2463*t3800;
  t4345 = t2497*t3843;
  t4363 = t2657*t3919;
  t4430 = 0. + t4336 + t4345 + t4363;
  t4435 = t2399*t4430;
  t4436 = t138*t4228;
  t4450 = t4140*t2271;
  t4499 = 0. + t4436 + t4450;
  t4529 = t2714*t4499;
  t4585 = 0. + t4435 + t4529;
  t4735 = -1.*t4430*t2714;
  t4740 = t2399*t4499;
  t4742 = 0. + t4735 + t4740;
  t4935 = 0.05226439969100001*t780;
  t5197 = -0.051978134642000004*t780;
  t5006 = 0.49726168403800003*t780;
  t4869 = -1.568745163810375e-7*var1[26];
  t4875 = 0.140811*t1254;
  t4897 = 0.08219200580743281*t780;
  t4951 = t4935 + t974;
  t4955 = -0.231098203479*t4951;
  t4976 = 0.213182*t1321;
  t5010 = t5006 + t1727;
  t5014 = 0.18957839082800002*t5010;
  t5053 = -0.230568*t1413;
  t5079 = t4869 + t4875 + t4897 + t4955 + t4976 + t5014 + t5053;
  t5109 = 1.639789470231751e-8*var1[26];
  t5134 = -0.230568*t852;
  t5139 = -0.22983603018311177*t780;
  t5159 = 0.213182*t896;
  t5162 = 0.140811*t977;
  t5165 = t4935 + t1408;
  t5179 = 0.164383620275*t5165;
  t5220 = t5197 + t1792;
  t5224 = 0.18957839082800002*t5220;
  t5225 = t5109 + t5134 + t5139 + t5159 + t5162 + t5179 + t5224;
  t5263 = 1.5601527583902087e-7*var1[26];
  t5280 = 0.213182*t1707;
  t5443 = 0.09582494577057615*t780;
  t5468 = t5197 + t889;
  t5469 = -0.231098203479*t5468;
  t5509 = t5006 + t1314;
  t5510 = 0.164383620275*t5509;
  t5517 = 0.140811*t1768;
  t5520 = -0.230568*t1793;
  t5536 = t5263 + t5280 + t5443 + t5469 + t5510 + t5517 + t5520;
  t4743 = -1.*t2025;
  t4748 = 1. + t4743;
  t4763 = -1.1924972351948546e-8*var1[25];
  t4775 = 0.38315655000705834*t613;
  t4779 = -0.05650052807*t2657;
  t5084 = t1197*t5079;
  t5230 = -0.103955395616*t613*t5225;
  t5547 = t1617*t5536;
  t5552 = t4763 + t4775 + t4779 + t5084 + t5230 + t5547;
  t5596 = 1.1345904784751044e-7*var1[25];
  t5603 = 0.04027119345689465*t613;
  t5607 = -0.05650052807*t2463;
  t5618 = t2100*t5079;
  t5628 = t2077*t5225;
  t5629 = -0.103955395616*t613*t5536;
  t5632 = t5596 + t5603 + t5607 + t5618 + t5628 + t5629;
  t4698 = -1.*t3546*t2714;
  t4709 = t2399*t3600;
  t4717 = 0. + t4698 + t4709;
  t5658 = 0.4*t4748;
  t5659 = -0.12*t156;
  t5680 = t2025*t5552;
  t5704 = -1.*t156*t5632;
  t5709 = 0. + t5658 + t5659 + t5680 + t5704;
  t4749 = -0.12*t4748;
  t4752 = -0.4*t156;
  t5579 = t156*t5552;
  t5641 = t2025*t5632;
  t5645 = 0. + t4749 + t4752 + t5579 + t5641;
  t5724 = -0.056500534356700764*t613;
  t5730 = 0.040271188976*t2100;
  t5739 = 0.38315650737400003*t1197;
  t5747 = t2497*t5079;
  t5751 = t2463*t5225;
  t5762 = t2657*t5536;
  t5769 = 0. + t5724 + t5730 + t5739 + t5747 + t5751 + t5762;
  t5800 = t138*t5709;
  t5801 = t5645*t2271;
  t5814 = 0. + t5800 + t5801;
  t5651 = t138*t5645;
  t5710 = -1.*t5709*t2271;
  t5712 = 0. + t5651 + t5710;
  t5779 = -1.*t5769*t2714;
  t5849 = t2399*t5814;
  t5850 = 0. + t5779 + t5849;
  t5873 = t2399*t5769;
  t5895 = t2714*t5814;
  t5896 = 0. + t5873 + t5895;
  t4667 = -1.*t2686*t2714;
  t4669 = t2399*t2736;
  t4697 = 0. + t4667 + t4669;
  t5718 = -1.*t3362*t5712;
  t5970 = t5712*t4276;
  t6046 = -1.*t5712*t4276;
  t6109 = t5712*t2282;
  t6255 = t3362*t5712;
  t6317 = -1.*t5712*t2282;
  t6386 = t5769*t4430;
  t6374 = -1.*t3546*t5769;
  t6479 = t5769*t2686;
  t6462 = -1.*t5769*t4430;
  t6550 = -1.*t5769*t2686;
  t6521 = t3546*t5769;
  t6999 = t5079*t3843;
  t7003 = t3800*t5225;
  t7010 = t5536*t3919;
  t7011 = t6999 + t7003 + t7010;
  t7019 = -1.*t2864*t5079;
  t7022 = -1.*t2811*t5225;
  t7034 = -1.*t3022*t5536;
  t7038 = t7019 + t7022 + t7034;
  t7114 = t5079*t1525;
  t7119 = t1011*t5225;
  t7122 = t5536*t1822;
  t7124 = t7114 + t7119 + t7122;
  t7132 = -1.*t5079*t3843;
  t7135 = -1.*t3800*t5225;
  t7143 = -1.*t5536*t3919;
  t7147 = t7132 + t7135 + t7143;
  t7182 = -1.*t5079*t1525;
  t7183 = -1.*t1011*t5225;
  t7184 = -1.*t5536*t1822;
  t7189 = t7182 + t7183 + t7184;
  t7196 = t2864*t5079;
  t7201 = t2811*t5225;
  t7204 = t3022*t5536;
  t7205 = t7196 + t7201 + t7204;
  p_output1[0]=0. + t2375*t2748 - 1.*t2282*t66;
  p_output1[1]=0. + t2375*t3643 - 1.*t3362*t66;
  p_output1[2]=0. + t2375*t4585 - 1.*t4276*t66;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0. + t2282*t2375 + t2748*t66;
  p_output1[7]=0. + t2375*t3362 + t3643*t66;
  p_output1[8]=0. + t2375*t4276 + t4585*t66;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t4697;
  p_output1[13]=t4717;
  p_output1[14]=t4742;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=t4742*(t5718 - 1.*t4717*t5850 - 1.*t3643*t5896) + t4717*(t4742*t5850 + t4585*t5896 + t5970);
  p_output1[19]=t4697*(-1.*t4742*t5850 - 1.*t4585*t5896 + t6046) + t4742*(t4697*t5850 + t2748*t5896 + t6109);
  p_output1[20]=t4697*(t4717*t5850 + t3643*t5896 + t6255) + t4717*(-1.*t4697*t5850 - 1.*t2748*t5896 + t6317);
  p_output1[21]=t4697;
  p_output1[22]=t4717;
  p_output1[23]=t4742;
  p_output1[24]=t4276*(t5718 - 1.*t3600*t5814 + t6374) + t3362*(t4499*t5814 + t5970 + t6386);
  p_output1[25]=t2282*(-1.*t4499*t5814 + t6046 + t6462) + t4276*(t2736*t5814 + t6109 + t6479);
  p_output1[26]=t2282*(t3600*t5814 + t6255 + t6521) + t3362*(-1.*t2736*t5814 + t6317 + t6550);
  p_output1[27]=t2282;
  p_output1[28]=t3362;
  p_output1[29]=t4276;
  p_output1[30]=t4430*(-1.*t3162*t5645 - 1.*t3249*t5709 + t6374) + t3546*(t4140*t5645 + t4228*t5709 + t6386);
  p_output1[31]=t2686*(-1.*t4140*t5645 - 1.*t4228*t5709 + t6462) + t4430*(t2123*t5645 + t2258*t5709 + t6479);
  p_output1[32]=t2686*(t3162*t5645 + t3249*t5709 + t6521) + t3546*(-1.*t2123*t5645 - 1.*t2258*t5709 + t6550);
  p_output1[33]=t2686;
  p_output1[34]=t3546;
  p_output1[35]=t4430;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=-0.12*t1889 - 0.4*t2108 - 1.*t4430*(-1.*t3027*t5552 - 1.*t3141*t5632 + t6374) - 1.*t3546*(t4068*t5552 + t4126*t5632 + t6386);
  p_output1[145]=-0.12*t3027 - 0.4*t3141 - 1.*t2686*(-1.*t4068*t5552 - 1.*t4126*t5632 + t6462) - 1.*t4430*(t1889*t5552 + t2108*t5632 + t6479);
  p_output1[146]=-0.12*t4068 - 0.4*t4126 - 1.*t2686*(t3027*t5552 + t3141*t5632 + t6521) - 1.*t3546*(-1.*t1889*t5552 - 1.*t2108*t5632 + t6550);
  p_output1[147]=0. - 1.*t1011*t2463 - 1.*t1525*t2497 - 1.*t1822*t2657;
  p_output1[148]=0. - 1.*t2463*t2811 - 1.*t2497*t2864 - 1.*t2657*t3022;
  p_output1[149]=0. - 1.*t2463*t3800 - 1.*t2497*t3843 - 1.*t2657*t3919;
  p_output1[150]=0.005906*t1011 + 0.385267*t1525 + 0.056191*t1822 - 0.994522*(t2811*t7011 + t3800*t7038) + 0.104528*(t3022*t7011 + t3919*t7038);
  p_output1[151]=0.005906*t2811 + 0.385267*t2864 + 0.056191*t3022 - 0.994522*(t3800*t7124 + t1011*t7147) + 0.104528*(t3919*t7124 + t1822*t7147);
  p_output1[152]=0.005906*t3800 + 0.385267*t3843 + 0.056191*t3919 - 0.994522*(t2811*t7189 + t1011*t7205) + 0.104528*(t3022*t7189 + t1822*t7205);
  p_output1[153]=0. - 0.994522*t1011 + 0.104528*t1822;
  p_output1[154]=0. - 0.994522*t2811 + 0.104528*t3022;
  p_output1[155]=0. - 0.994522*t3800 + 0.104528*t3919;
  p_output1[156]=-0.001940238427185298;
  p_output1[157]=-0.000029775481400470816;
  p_output1[158]=-5.506364808560704e-7;
  p_output1[159]=-8.80875999975661e-7;
  p_output1[160]=4.610340000044122e-7;
  p_output1[161]=1.000001499774;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void Jb_right_shoulder_yaw_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
