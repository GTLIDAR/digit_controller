/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:44:02 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dR_shoulder_yaw_joint_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1193;
  double t2245;
  double t1739;
  double t1956;
  double t2036;
  double t2378;
  double t2274;
  double t2290;
  double t2628;
  double t147;
  double t158;
  double t514;
  double t1096;
  double t1418;
  double t1550;
  double t2360;
  double t2632;
  double t2642;
  double t2720;
  double t2752;
  double t2758;
  double t1420;
  double t1547;
  double t1700;
  double t2695;
  double t2716;
  double t2718;
  double t2766;
  double t2772;
  double t2872;
  double t2917;
  double t2923;
  double t2929;
  double t2960;
  double t2984;
  double t3040;
  double t3047;
  double t606;
  double t3162;
  double t3163;
  double t3176;
  double t3190;
  double t3202;
  double t3214;
  double t3223;
  double t3224;
  double t3245;
  double t3251;
  double t3334;
  double t2820;
  double t2821;
  double t2835;
  double t3550;
  double t3538;
  double t3553;
  double t3556;
  double t3570;
  double t3573;
  double t3595;
  double t1131;
  double t1147;
  double t3561;
  double t3598;
  double t3603;
  double t3617;
  double t3621;
  double t3624;
  double t3145;
  double t3147;
  double t3336;
  double t3344;
  double t3605;
  double t3625;
  double t3647;
  double t3305;
  double t3319;
  double t3673;
  double t3694;
  double t3698;
  double t3357;
  double t3360;
  double t3713;
  double t3735;
  double t3745;
  double t3442;
  double t3449;
  double t3406;
  double t3422;
  double t3456;
  double t3473;
  double t3925;
  double t3934;
  double t3944;
  double t3918;
  double t3947;
  double t3948;
  double t3992;
  double t4011;
  double t4027;
  double t3975;
  double t4030;
  double t4034;
  double t4054;
  double t4055;
  double t4071;
  double t4077;
  double t4084;
  double t4092;
  double t4192;
  double t4193;
  double t4208;
  double t4189;
  double t4196;
  double t4199;
  double t4216;
  double t4218;
  double t4234;
  double t4240;
  double t4269;
  double t4280;
  double t4281;
  double t4285;
  double t4266;
  double t4324;
  double t4393;
  double t4402;
  double t4403;
  double t4404;
  double t4416;
  double t4418;
  double t4421;
  double t4424;
  double t4431;
  double t4436;
  double t4443;
  double t4444;
  double t4560;
  double t4561;
  double t4574;
  double t4584;
  double t4585;
  double t4588;
  double t4576;
  double t4592;
  double t4599;
  double t4601;
  double t4604;
  double t4609;
  double t4555;
  double t4600;
  double t4610;
  double t4611;
  double t4614;
  double t4617;
  double t4620;
  double t4624;
  double t4630;
  double t4631;
  double t4634;
  double t4636;
  double t4688;
  double t4689;
  double t4698;
  double t4712;
  double t4715;
  double t4722;
  double t4681;
  double t4705;
  double t4727;
  double t4728;
  double t4732;
  double t4734;
  double t4739;
  double t4741;
  double t4746;
  double t4750;
  double t4752;
  double t4760;
  double t5051;
  double t5081;
  double t5092;
  double t5099;
  double t5100;
  double t5116;
  double t5121;
  double t5132;
  double t5108;
  double t5135;
  double t5194;
  double t5235;
  double t5245;
  double t5251;
  double t5273;
  double t5274;
  double t5279;
  double t5351;
  double t5354;
  double t5356;
  double t5350;
  double t5360;
  double t5363;
  double t5367;
  double t5368;
  double t5369;
  double t5364;
  double t5380;
  double t5382;
  double t5408;
  double t5411;
  double t5412;
  double t5421;
  double t5426;
  double t5428;
  double t4204;
  double t4214;
  double t5535;
  double t5551;
  double t4254;
  double t4268;
  double t4306;
  double t4310;
  double t5533;
  double t5553;
  double t5556;
  double t5560;
  double t5562;
  double t5564;
  double t5567;
  double t4322;
  double t4337;
  double t5584;
  double t5585;
  double t5594;
  double t5595;
  double t4354;
  double t4355;
  double t4363;
  double t4366;
  double t5701;
  double t5709;
  double t5710;
  double t5712;
  double t5721;
  double t5726;
  double t5735;
  double t5738;
  double t5762;
  double t5766;
  double t5772;
  double t5773;
  double t5916;
  double t5922;
  double t5923;
  double t5928;
  double t5931;
  double t5939;
  double t5924;
  double t5955;
  double t5964;
  double t5971;
  double t5976;
  double t5978;
  double t5990;
  double t6003;
  double t6013;
  double t6093;
  double t6099;
  double t6102;
  double t6092;
  double t6105;
  double t6113;
  double t6128;
  double t6129;
  double t6134;
  double t6137;
  double t6144;
  double t6158;
  double t6159;
  double t6160;
  double t6230;
  double t6231;
  double t6233;
  double t6237;
  double t6238;
  double t6248;
  double t6256;
  double t6272;
  double t6276;
  double t6278;
  double t6281;
  double t6356;
  double t6357;
  double t6360;
  double t6366;
  double t6375;
  double t6380;
  double t6385;
  double t6388;
  double t6398;
  double t6412;
  double t6414;
  double t6415;
  double t6473;
  double t6482;
  double t6489;
  double t6495;
  double t6510;
  double t6525;
  double t6471;
  double t6492;
  double t6527;
  double t6534;
  double t6540;
  double t6543;
  double t6546;
  double t6558;
  double t6572;
  double t6577;
  double t6601;
  double t6602;
  double t3333;
  double t3346;
  double t3361;
  double t3387;
  double t3431;
  double t3454;
  double t3489;
  double t3501;
  double t3774;
  double t3791;
  double t3803;
  double t3818;
  double t3856;
  double t3868;
  double t3885;
  double t3889;
  double t4128;
  double t4130;
  double t4132;
  double t4135;
  double t4152;
  double t4153;
  double t4158;
  double t4168;
  double t4202;
  double t4245;
  double t4296;
  double t4302;
  double t4313;
  double t4314;
  double t4339;
  double t4343;
  double t4412;
  double t4428;
  double t4445;
  double t4449;
  double t4502;
  double t4509;
  double t4517;
  double t4518;
  double t4644;
  double t4648;
  double t4649;
  double t4651;
  double t4657;
  double t4660;
  double t4662;
  double t4663;
  double t4784;
  double t4793;
  double t4796;
  double t4799;
  double t4813;
  double t4831;
  double t4861;
  double t4862;
  double t4950;
  double t4966;
  double t4984;
  double t4986;
  double t5001;
  double t5010;
  double t5011;
  double t5019;
  double t5300;
  double t5302;
  double t5305;
  double t5310;
  double t5317;
  double t5318;
  double t5320;
  double t5330;
  double t5459;
  double t5465;
  double t5472;
  double t5474;
  double t5485;
  double t5495;
  double t5501;
  double t5502;
  double t5559;
  double t5569;
  double t5604;
  double t5610;
  double t5617;
  double t5620;
  double t5622;
  double t5625;
  double t5715;
  double t5749;
  double t5774;
  double t5782;
  double t5808;
  double t5827;
  double t5853;
  double t5859;
  double t6056;
  double t6057;
  double t6059;
  double t6064;
  double t6067;
  double t6072;
  double t6073;
  double t6077;
  double t6126;
  double t6142;
  double t6161;
  double t6165;
  double t6170;
  double t6171;
  double t6174;
  double t6175;
  double t6296;
  double t6298;
  double t6300;
  double t6303;
  double t6320;
  double t6322;
  double t6338;
  double t6339;
  double t6372;
  double t6389;
  double t6420;
  double t6421;
  double t6424;
  double t6426;
  double t6427;
  double t6430;
  double t6638;
  double t6639;
  double t6650;
  double t6652;
  double t6666;
  double t6680;
  double t6683;
  double t6686;
  double t2809;
  double t3082;
  double t3257;
  double t3258;
  double t3266;
  double t3654;
  double t3702;
  double t3750;
  double t3764;
  double t3769;
  double t4042;
  double t4074;
  double t4093;
  double t4106;
  double t4126;
  double t4357;
  double t4368;
  double t4371;
  double t4374;
  double t4375;
  double t4520;
  double t4525;
  double t4530;
  double t4534;
  double t4538;
  double t4613;
  double t4629;
  double t4637;
  double t4638;
  double t4643;
  double t4730;
  double t4742;
  double t4768;
  double t4776;
  double t4783;
  double t4881;
  double t4885;
  double t4887;
  double t4904;
  double t4931;
  double t5209;
  double t5267;
  double t5286;
  double t5292;
  double t5296;
  double t5402;
  double t5416;
  double t5440;
  double t5442;
  double t5445;
  double t5667;
  double t5671;
  double t5674;
  double t5677;
  double t5683;
  double t5866;
  double t5869;
  double t5872;
  double t5883;
  double t5895;
  double t5967;
  double t5983;
  double t6023;
  double t6036;
  double t6049;
  double t6177;
  double t6189;
  double t6208;
  double t6213;
  double t6216;
  double t6253;
  double t6275;
  double t6283;
  double t6286;
  double t6293;
  double t6434;
  double t6450;
  double t6454;
  double t6455;
  double t6456;
  double t6539;
  double t6569;
  double t6606;
  double t6620;
  double t6621;
  t1193 = Cos(var1[3]);
  t2245 = Cos(var1[4]);
  t1739 = Cos(var1[14]);
  t1956 = -1.*t1739;
  t2036 = 1. + t1956;
  t2378 = Cos(var1[13]);
  t2274 = Cos(var1[5]);
  t2290 = Sin(var1[13]);
  t2628 = Sin(var1[5]);
  t147 = Cos(var1[15]);
  t158 = -1.*t147;
  t514 = 1. + t158;
  t1096 = Sin(var1[15]);
  t1418 = Sin(var1[14]);
  t1550 = Sin(var1[4]);
  t2360 = -1.*t1193*t2245*t2274*t2290;
  t2632 = t2378*t1193*t2245*t2628;
  t2642 = t2360 + t2632;
  t2720 = t2378*t1193*t2245*t2274;
  t2752 = t1193*t2245*t2290*t2628;
  t2758 = t2720 + t2752;
  t1420 = 0.994522*t1418;
  t1547 = 0. + t1420;
  t1700 = -1.*t1193*t1547*t1550;
  t2695 = 0.103955395616*t2036*t2642;
  t2716 = -0.9890740084840001*t2036;
  t2718 = 1. + t2716;
  t2766 = t2718*t2758;
  t2772 = t1700 + t2695 + t2766;
  t2872 = -0.104528*t1418;
  t2917 = 0. + t2872;
  t2923 = -1.*t1193*t2917*t1550;
  t2929 = -0.010926102783999999*t2036;
  t2960 = 1. + t2929;
  t2984 = t2960*t2642;
  t3040 = 0.103955395616*t2036*t2758;
  t3047 = t2923 + t2984 + t3040;
  t606 = -0.49726168403800003*t514;
  t3162 = -1.0000001112680001*t2036;
  t3163 = 1. + t3162;
  t3176 = -1.*t3163*t1193*t1550;
  t3190 = 0.104528*t1418;
  t3202 = 0. + t3190;
  t3214 = t3202*t2642;
  t3223 = -0.994522*t1418;
  t3224 = 0. + t3223;
  t3245 = t3224*t2758;
  t3251 = t3176 + t3214 + t3245;
  t3334 = -0.051978134642000004*t514;
  t2820 = 0.05226439969100001*t514;
  t2821 = -0.703234*t1096;
  t2835 = t2820 + t2821;
  t3550 = Sin(var1[3]);
  t3538 = t1193*t2274*t1550;
  t3553 = t3550*t2628;
  t3556 = t3538 + t3553;
  t3570 = t2274*t3550;
  t3573 = -1.*t1193*t1550*t2628;
  t3595 = t3570 + t3573;
  t1131 = -0.073913*t1096;
  t1147 = t606 + t1131;
  t3561 = t2290*t3556;
  t3598 = t2378*t3595;
  t3603 = t3561 + t3598;
  t3617 = t2378*t3556;
  t3621 = -1.*t2290*t3595;
  t3624 = t3617 + t3621;
  t3145 = -0.500001190325*t514;
  t3147 = 1. + t3145;
  t3336 = -0.707107*t1096;
  t3344 = t3334 + t3336;
  t3605 = 0.103955395616*t2036*t3603;
  t3625 = t2960*t3624;
  t3647 = t3605 + t3625;
  t3305 = -0.5054634410180001*t514;
  t3319 = 1. + t3305;
  t3673 = t2718*t3603;
  t3694 = 0.103955395616*t2036*t3624;
  t3698 = t3673 + t3694;
  t3357 = 0.073913*t1096;
  t3360 = t606 + t3357;
  t3713 = t3224*t3603;
  t3735 = t3202*t3624;
  t3745 = t3713 + t3735;
  t3442 = -0.9945383682050002*t514;
  t3449 = 1. + t3442;
  t3406 = 0.707107*t1096;
  t3422 = t3334 + t3406;
  t3456 = 0.703234*t1096;
  t3473 = t2820 + t3456;
  t3925 = -1.*t2274*t3550;
  t3934 = t1193*t1550*t2628;
  t3944 = t3925 + t3934;
  t3918 = -1.*t2290*t3556;
  t3947 = t2378*t3944;
  t3948 = t3918 + t3947;
  t3992 = -1.*t2378*t3556;
  t4011 = -1.*t2290*t3944;
  t4027 = t3992 + t4011;
  t3975 = 0.103955395616*t2036*t3948;
  t4030 = t2960*t4027;
  t4034 = t3975 + t4030;
  t4054 = t2718*t3948;
  t4055 = 0.103955395616*t2036*t4027;
  t4071 = t4054 + t4055;
  t4077 = t3224*t3948;
  t4084 = t3202*t4027;
  t4092 = t4077 + t4084;
  t4192 = t2290*t3944;
  t4193 = t3617 + t4192;
  t4208 = -0.051978134642000004*t1096;
  t4189 = t1193*t2245*t1547;
  t4196 = t2718*t4193;
  t4199 = t4189 + t3975 + t4196;
  t4216 = t1193*t2245*t2917;
  t4218 = t2960*t3948;
  t4234 = 0.103955395616*t2036*t4193;
  t4240 = t4216 + t4218 + t4234;
  t4269 = t3163*t1193*t2245;
  t4280 = t3202*t3948;
  t4281 = t3224*t4193;
  t4285 = t4269 + t4280 + t4281;
  t4266 = -0.49726168403800003*t1096;
  t4324 = 0.05226439969100001*t1096;
  t4393 = -1.0000001112680001*t1193*t2245*t1418;
  t4402 = 0.104528*t1739*t3948;
  t4403 = -0.994522*t1739*t4193;
  t4404 = t4393 + t4402 + t4403;
  t4416 = 0.994522*t1739*t1193*t2245;
  t4418 = 0.103955395616*t1418*t3948;
  t4421 = -0.9890740084840001*t1418*t4193;
  t4424 = t4416 + t4418 + t4421;
  t4431 = -0.104528*t1739*t1193*t2245;
  t4436 = -0.010926102783999999*t1418*t3948;
  t4443 = 0.103955395616*t1418*t4193;
  t4444 = t4431 + t4436 + t4443;
  t4560 = -1.*t2274*t3550*t1550;
  t4561 = t1193*t2628;
  t4574 = t4560 + t4561;
  t4584 = -1.*t1193*t2274;
  t4585 = -1.*t3550*t1550*t2628;
  t4588 = t4584 + t4585;
  t4576 = -1.*t2290*t4574;
  t4592 = t2378*t4588;
  t4599 = t4576 + t4592;
  t4601 = t2378*t4574;
  t4604 = t2290*t4588;
  t4609 = t4601 + t4604;
  t4555 = -1.*t2245*t1547*t3550;
  t4600 = 0.103955395616*t2036*t4599;
  t4610 = t2718*t4609;
  t4611 = t4555 + t4600 + t4610;
  t4614 = -1.*t2245*t2917*t3550;
  t4617 = t2960*t4599;
  t4620 = 0.103955395616*t2036*t4609;
  t4624 = t4614 + t4617 + t4620;
  t4630 = -1.*t3163*t2245*t3550;
  t4631 = t3202*t4599;
  t4634 = t3224*t4609;
  t4636 = t4630 + t4631 + t4634;
  t4688 = -1.*t2245*t2274*t2290*t3550;
  t4689 = t2378*t2245*t3550*t2628;
  t4698 = t4688 + t4689;
  t4712 = t2378*t2245*t2274*t3550;
  t4715 = t2245*t2290*t3550*t2628;
  t4722 = t4712 + t4715;
  t4681 = -1.*t1547*t3550*t1550;
  t4705 = 0.103955395616*t2036*t4698;
  t4727 = t2718*t4722;
  t4728 = t4681 + t4705 + t4727;
  t4732 = -1.*t2917*t3550*t1550;
  t4734 = t2960*t4698;
  t4739 = 0.103955395616*t2036*t4722;
  t4741 = t4732 + t4734 + t4739;
  t4746 = -1.*t3163*t3550*t1550;
  t4750 = t3202*t4698;
  t4752 = t3224*t4722;
  t4760 = t4746 + t4750 + t4752;
  t5051 = t2274*t3550*t1550;
  t5081 = -1.*t1193*t2628;
  t5092 = t5051 + t5081;
  t5099 = t2290*t5092;
  t5100 = t5099 + t4592;
  t5116 = t2378*t5092;
  t5121 = -1.*t2290*t4588;
  t5132 = t5116 + t5121;
  t5108 = 0.103955395616*t2036*t5100;
  t5135 = t2960*t5132;
  t5194 = t5108 + t5135;
  t5235 = t2718*t5100;
  t5245 = 0.103955395616*t2036*t5132;
  t5251 = t5235 + t5245;
  t5273 = t3224*t5100;
  t5274 = t3202*t5132;
  t5279 = t5273 + t5274;
  t5351 = t1193*t2274;
  t5354 = t3550*t1550*t2628;
  t5356 = t5351 + t5354;
  t5350 = -1.*t2290*t5092;
  t5360 = t2378*t5356;
  t5363 = t5350 + t5360;
  t5367 = -1.*t2378*t5092;
  t5368 = -1.*t2290*t5356;
  t5369 = t5367 + t5368;
  t5364 = 0.103955395616*t2036*t5363;
  t5380 = t2960*t5369;
  t5382 = t5364 + t5380;
  t5408 = t2718*t5363;
  t5411 = 0.103955395616*t2036*t5369;
  t5412 = t5408 + t5411;
  t5421 = t3224*t5363;
  t5426 = t3202*t5369;
  t5428 = t5421 + t5426;
  t4204 = -0.707107*t147;
  t4214 = t4204 + t4208;
  t5535 = t2290*t5356;
  t5551 = t5116 + t5535;
  t4254 = 0.073913*t147;
  t4268 = t4254 + t4266;
  t4306 = 0.707107*t147;
  t4310 = t4306 + t4208;
  t5533 = t2245*t1547*t3550;
  t5553 = t2718*t5551;
  t5556 = t5533 + t5364 + t5553;
  t5560 = t2245*t2917*t3550;
  t5562 = t2960*t5363;
  t5564 = 0.103955395616*t2036*t5551;
  t5567 = t5560 + t5562 + t5564;
  t4322 = 0.703234*t147;
  t4337 = t4322 + t4324;
  t5584 = t3163*t2245*t3550;
  t5585 = t3202*t5363;
  t5594 = t3224*t5551;
  t5595 = t5584 + t5585 + t5594;
  t4354 = -0.073913*t147;
  t4355 = t4354 + t4266;
  t4363 = -0.703234*t147;
  t4366 = t4363 + t4324;
  t5701 = -1.0000001112680001*t2245*t1418*t3550;
  t5709 = 0.104528*t1739*t5363;
  t5710 = -0.994522*t1739*t5551;
  t5712 = t5701 + t5709 + t5710;
  t5721 = 0.994522*t1739*t2245*t3550;
  t5726 = 0.103955395616*t1418*t5363;
  t5735 = -0.9890740084840001*t1418*t5551;
  t5738 = t5721 + t5726 + t5735;
  t5762 = -0.104528*t1739*t2245*t3550;
  t5766 = -0.010926102783999999*t1418*t5363;
  t5772 = 0.103955395616*t1418*t5551;
  t5773 = t5762 + t5766 + t5772;
  t5916 = -1.*t2245*t2274*t2290;
  t5922 = t2378*t2245*t2628;
  t5923 = t5916 + t5922;
  t5928 = -1.*t2378*t2245*t2274;
  t5931 = -1.*t2245*t2290*t2628;
  t5939 = t5928 + t5931;
  t5924 = 0.103955395616*t2036*t5923;
  t5955 = t2960*t5939;
  t5964 = t5924 + t5955;
  t5971 = t2718*t5923;
  t5976 = 0.103955395616*t2036*t5939;
  t5978 = t5971 + t5976;
  t5990 = t3224*t5923;
  t6003 = t3202*t5939;
  t6013 = t5990 + t6003;
  t6093 = t2378*t2245*t2274;
  t6099 = t2245*t2290*t2628;
  t6102 = t6093 + t6099;
  t6092 = -1.*t1547*t1550;
  t6105 = t2718*t6102;
  t6113 = t6092 + t5924 + t6105;
  t6128 = -1.*t2917*t1550;
  t6129 = t2960*t5923;
  t6134 = 0.103955395616*t2036*t6102;
  t6137 = t6128 + t6129 + t6134;
  t6144 = -1.*t3163*t1550;
  t6158 = t3202*t5923;
  t6159 = t3224*t6102;
  t6160 = t6144 + t6158 + t6159;
  t6230 = t2245*t2274*t2290;
  t6231 = -1.*t2378*t2245*t2628;
  t6233 = t6230 + t6231;
  t6237 = 0.103955395616*t2036*t6233;
  t6238 = t2960*t6102;
  t6248 = t6237 + t6238;
  t6256 = t2718*t6233;
  t6272 = t6256 + t6134;
  t6276 = t3224*t6233;
  t6278 = t3202*t6102;
  t6281 = t6276 + t6278;
  t6356 = 1.0000001112680001*t1418*t1550;
  t6357 = 0.104528*t1739*t5923;
  t6360 = -0.994522*t1739*t6102;
  t6366 = t6356 + t6357 + t6360;
  t6375 = -0.994522*t1739*t1550;
  t6380 = 0.103955395616*t1418*t5923;
  t6385 = -0.9890740084840001*t1418*t6102;
  t6388 = t6375 + t6380 + t6385;
  t6398 = 0.104528*t1739*t1550;
  t6412 = -0.010926102783999999*t1418*t5923;
  t6414 = 0.103955395616*t1418*t6102;
  t6415 = t6398 + t6412 + t6414;
  t6473 = t2274*t2290*t1550;
  t6482 = -1.*t2378*t1550*t2628;
  t6489 = t6473 + t6482;
  t6495 = -1.*t2378*t2274*t1550;
  t6510 = -1.*t2290*t1550*t2628;
  t6525 = t6495 + t6510;
  t6471 = -1.*t2245*t1547;
  t6492 = 0.103955395616*t2036*t6489;
  t6527 = t2718*t6525;
  t6534 = t6471 + t6492 + t6527;
  t6540 = -1.*t2245*t2917;
  t6543 = t2960*t6489;
  t6546 = 0.103955395616*t2036*t6525;
  t6558 = t6540 + t6543 + t6546;
  t6572 = -1.*t3163*t2245;
  t6577 = t3202*t6489;
  t6601 = t3224*t6525;
  t6602 = t6572 + t6577 + t6601;
  t3333 = t3319*t2772;
  t3346 = t3344*t3047;
  t3361 = t3360*t3251;
  t3387 = t3333 + t3346 + t3361;
  t3431 = t3422*t2772;
  t3454 = t3449*t3047;
  t3489 = t3473*t3251;
  t3501 = t3431 + t3454 + t3489;
  t3774 = t3344*t3647;
  t3791 = t3319*t3698;
  t3803 = t3360*t3745;
  t3818 = t3774 + t3791 + t3803;
  t3856 = t3449*t3647;
  t3868 = t3422*t3698;
  t3885 = t3473*t3745;
  t3889 = t3856 + t3868 + t3885;
  t4128 = t3344*t4034;
  t4130 = t3319*t4071;
  t4132 = t3360*t4092;
  t4135 = t4128 + t4130 + t4132;
  t4152 = t3449*t4034;
  t4153 = t3422*t4071;
  t4158 = t3473*t4092;
  t4168 = t4152 + t4153 + t4158;
  t4202 = -0.5054634410180001*t1096*t4199;
  t4245 = t4214*t4240;
  t4296 = t4268*t4285;
  t4302 = t4202 + t4245 + t4296;
  t4313 = t4310*t4199;
  t4314 = -0.9945383682050002*t1096*t4240;
  t4339 = t4337*t4285;
  t4343 = t4313 + t4314 + t4339;
  t4412 = t3473*t4404;
  t4428 = t3422*t4424;
  t4445 = t3449*t4444;
  t4449 = t4412 + t4428 + t4445;
  t4502 = t3360*t4404;
  t4509 = t3319*t4424;
  t4517 = t3344*t4444;
  t4518 = t4502 + t4509 + t4517;
  t4644 = t3319*t4611;
  t4648 = t3344*t4624;
  t4649 = t3360*t4636;
  t4651 = t4644 + t4648 + t4649;
  t4657 = t3422*t4611;
  t4660 = t3449*t4624;
  t4662 = t3473*t4636;
  t4663 = t4657 + t4660 + t4662;
  t4784 = t3319*t4728;
  t4793 = t3344*t4741;
  t4796 = t3360*t4760;
  t4799 = t4784 + t4793 + t4796;
  t4813 = t3422*t4728;
  t4831 = t3449*t4741;
  t4861 = t3473*t4760;
  t4862 = t4813 + t4831 + t4861;
  t4950 = t3319*t4199;
  t4966 = t3344*t4240;
  t4984 = t3360*t4285;
  t4986 = t4950 + t4966 + t4984;
  t5001 = t3422*t4199;
  t5010 = t3449*t4240;
  t5011 = t3473*t4285;
  t5019 = t5001 + t5010 + t5011;
  t5300 = t3344*t5194;
  t5302 = t3319*t5251;
  t5305 = t3360*t5279;
  t5310 = t5300 + t5302 + t5305;
  t5317 = t3449*t5194;
  t5318 = t3422*t5251;
  t5320 = t3473*t5279;
  t5330 = t5317 + t5318 + t5320;
  t5459 = t3344*t5382;
  t5465 = t3319*t5412;
  t5472 = t3360*t5428;
  t5474 = t5459 + t5465 + t5472;
  t5485 = t3449*t5382;
  t5495 = t3422*t5412;
  t5501 = t3473*t5428;
  t5502 = t5485 + t5495 + t5501;
  t5559 = -0.5054634410180001*t1096*t5556;
  t5569 = t4214*t5567;
  t5604 = t4268*t5595;
  t5610 = t5559 + t5569 + t5604;
  t5617 = t4310*t5556;
  t5620 = -0.9945383682050002*t1096*t5567;
  t5622 = t4337*t5595;
  t5625 = t5617 + t5620 + t5622;
  t5715 = t3473*t5712;
  t5749 = t3422*t5738;
  t5774 = t3449*t5773;
  t5782 = t5715 + t5749 + t5774;
  t5808 = t3360*t5712;
  t5827 = t3319*t5738;
  t5853 = t3344*t5773;
  t5859 = t5808 + t5827 + t5853;
  t6056 = t3344*t5964;
  t6057 = t3319*t5978;
  t6059 = t3360*t6013;
  t6064 = t6056 + t6057 + t6059;
  t6067 = t3449*t5964;
  t6072 = t3422*t5978;
  t6073 = t3473*t6013;
  t6077 = t6067 + t6072 + t6073;
  t6126 = -0.5054634410180001*t1096*t6113;
  t6142 = t4214*t6137;
  t6161 = t4268*t6160;
  t6165 = t6126 + t6142 + t6161;
  t6170 = t4310*t6113;
  t6171 = -0.9945383682050002*t1096*t6137;
  t6174 = t4337*t6160;
  t6175 = t6170 + t6171 + t6174;
  t6296 = t3344*t6248;
  t6298 = t3319*t6272;
  t6300 = t3360*t6281;
  t6303 = t6296 + t6298 + t6300;
  t6320 = t3449*t6248;
  t6322 = t3422*t6272;
  t6338 = t3473*t6281;
  t6339 = t6320 + t6322 + t6338;
  t6372 = t3473*t6366;
  t6389 = t3422*t6388;
  t6420 = t3449*t6415;
  t6421 = t6372 + t6389 + t6420;
  t6424 = t3360*t6366;
  t6426 = t3319*t6388;
  t6427 = t3344*t6415;
  t6430 = t6424 + t6426 + t6427;
  t6638 = t3319*t6534;
  t6639 = t3344*t6558;
  t6650 = t3360*t6602;
  t6652 = t6638 + t6639 + t6650;
  t6666 = t3422*t6534;
  t6680 = t3449*t6558;
  t6683 = t3473*t6602;
  t6686 = t6666 + t6680 + t6683;
  t2809 = t1147*t2772;
  t3082 = t2835*t3047;
  t3257 = t3147*t3251;
  t3258 = t2809 + t3082 + t3257;
  t3266 = 0.707107*t3258;
  t3654 = t2835*t3647;
  t3702 = t1147*t3698;
  t3750 = t3147*t3745;
  t3764 = t3654 + t3702 + t3750;
  t3769 = 0.707107*t3764;
  t4042 = t2835*t4034;
  t4074 = t1147*t4071;
  t4093 = t3147*t4092;
  t4106 = t4042 + t4074 + t4093;
  t4126 = 0.707107*t4106;
  t4357 = t4355*t4199;
  t4368 = t4366*t4240;
  t4371 = -0.500001190325*t1096*t4285;
  t4374 = t4357 + t4368 + t4371;
  t4375 = 0.707107*t4374;
  t4520 = t3147*t4404;
  t4525 = t1147*t4424;
  t4530 = t2835*t4444;
  t4534 = t4520 + t4525 + t4530;
  t4538 = 0.707107*t4534;
  t4613 = t1147*t4611;
  t4629 = t2835*t4624;
  t4637 = t3147*t4636;
  t4638 = t4613 + t4629 + t4637;
  t4643 = 0.707107*t4638;
  t4730 = t1147*t4728;
  t4742 = t2835*t4741;
  t4768 = t3147*t4760;
  t4776 = t4730 + t4742 + t4768;
  t4783 = 0.707107*t4776;
  t4881 = t1147*t4199;
  t4885 = t2835*t4240;
  t4887 = t3147*t4285;
  t4904 = t4881 + t4885 + t4887;
  t4931 = 0.707107*t4904;
  t5209 = t2835*t5194;
  t5267 = t1147*t5251;
  t5286 = t3147*t5279;
  t5292 = t5209 + t5267 + t5286;
  t5296 = 0.707107*t5292;
  t5402 = t2835*t5382;
  t5416 = t1147*t5412;
  t5440 = t3147*t5428;
  t5442 = t5402 + t5416 + t5440;
  t5445 = 0.707107*t5442;
  t5667 = t4355*t5556;
  t5671 = t4366*t5567;
  t5674 = -0.500001190325*t1096*t5595;
  t5677 = t5667 + t5671 + t5674;
  t5683 = 0.707107*t5677;
  t5866 = t3147*t5712;
  t5869 = t1147*t5738;
  t5872 = t2835*t5773;
  t5883 = t5866 + t5869 + t5872;
  t5895 = 0.707107*t5883;
  t5967 = t2835*t5964;
  t5983 = t1147*t5978;
  t6023 = t3147*t6013;
  t6036 = t5967 + t5983 + t6023;
  t6049 = 0.707107*t6036;
  t6177 = t4355*t6113;
  t6189 = t4366*t6137;
  t6208 = -0.500001190325*t1096*t6160;
  t6213 = t6177 + t6189 + t6208;
  t6216 = 0.707107*t6213;
  t6253 = t2835*t6248;
  t6275 = t1147*t6272;
  t6283 = t3147*t6281;
  t6286 = t6253 + t6275 + t6283;
  t6293 = 0.707107*t6286;
  t6434 = t3147*t6366;
  t6450 = t1147*t6388;
  t6454 = t2835*t6415;
  t6455 = t6434 + t6450 + t6454;
  t6456 = 0.707107*t6455;
  t6539 = t1147*t6534;
  t6569 = t2835*t6558;
  t6606 = t3147*t6602;
  t6620 = t6539 + t6569 + t6606;
  t6621 = 0.707107*t6620;
  p_output1[0]=(t4643 + 0.703234*t4651 - 0.073913*t4663)*var2[3] + (t3266 + 0.703234*t3387 - 0.073913*t3501)*var2[4] + (t3769 + 0.703234*t3818 - 0.073913*t3889)*var2[5] + (t4126 + 0.703234*t4135 - 0.073913*t4168)*var2[13] + (-0.073913*t4449 + 0.703234*t4518 + t4538)*var2[14] + (0.703234*t4302 - 0.073913*t4343 + t4375)*var2[15];
  p_output1[1]=(t4931 + 0.703234*t4986 - 0.073913*t5019)*var2[3] + (t4783 + 0.703234*t4799 - 0.073913*t4862)*var2[4] + (t5296 + 0.703234*t5310 - 0.073913*t5330)*var2[5] + (t5445 + 0.703234*t5474 - 0.073913*t5502)*var2[13] + (-0.073913*t5782 + 0.703234*t5859 + t5895)*var2[14] + (0.703234*t5610 - 0.073913*t5625 + t5683)*var2[15];
  p_output1[2]=(t6621 + 0.703234*t6652 - 0.073913*t6686)*var2[4] + (t6293 + 0.703234*t6303 - 0.073913*t6339)*var2[5] + (t6049 + 0.703234*t6064 - 0.073913*t6077)*var2[13] + (-0.073913*t6421 + 0.703234*t6430 + t6456)*var2[14] + (0.703234*t6165 - 0.073913*t6175 + t6216)*var2[15];
  p_output1[3]=(-0.104528*t4651 - 0.994522*t4663)*var2[3] + (-0.104528*t3387 - 0.994522*t3501)*var2[4] + (-0.104528*t3818 - 0.994522*t3889)*var2[5] + (-0.104528*t4135 - 0.994522*t4168)*var2[13] + (-0.994522*t4449 - 0.104528*t4518)*var2[14] + (-0.104528*t4302 - 0.994522*t4343)*var2[15];
  p_output1[4]=(-0.104528*t4986 - 0.994522*t5019)*var2[3] + (-0.104528*t4799 - 0.994522*t4862)*var2[4] + (-0.104528*t5310 - 0.994522*t5330)*var2[5] + (-0.104528*t5474 - 0.994522*t5502)*var2[13] + (-0.994522*t5782 - 0.104528*t5859)*var2[14] + (-0.104528*t5610 - 0.994522*t5625)*var2[15];
  p_output1[5]=(-0.104528*t6652 - 0.994522*t6686)*var2[4] + (-0.104528*t6303 - 0.994522*t6339)*var2[5] + (-0.104528*t6064 - 0.994522*t6077)*var2[13] + (-0.994522*t6421 - 0.104528*t6430)*var2[14] + (-0.104528*t6165 - 0.994522*t6175)*var2[15];
  p_output1[6]=(t4643 - 0.703234*t4651 + 0.073913*t4663)*var2[3] + (t3266 - 0.703234*t3387 + 0.073913*t3501)*var2[4] + (t3769 - 0.703234*t3818 + 0.073913*t3889)*var2[5] + (t4126 - 0.703234*t4135 + 0.073913*t4168)*var2[13] + (0.073913*t4449 - 0.703234*t4518 + t4538)*var2[14] + (-0.703234*t4302 + 0.073913*t4343 + t4375)*var2[15];
  p_output1[7]=(t4931 - 0.703234*t4986 + 0.073913*t5019)*var2[3] + (t4783 - 0.703234*t4799 + 0.073913*t4862)*var2[4] + (t5296 - 0.703234*t5310 + 0.073913*t5330)*var2[5] + (t5445 - 0.703234*t5474 + 0.073913*t5502)*var2[13] + (0.073913*t5782 - 0.703234*t5859 + t5895)*var2[14] + (-0.703234*t5610 + 0.073913*t5625 + t5683)*var2[15];
  p_output1[8]=(t6621 - 0.703234*t6652 + 0.073913*t6686)*var2[4] + (t6293 - 0.703234*t6303 + 0.073913*t6339)*var2[5] + (t6049 - 0.703234*t6064 + 0.073913*t6077)*var2[13] + (0.073913*t6421 - 0.703234*t6430 + t6456)*var2[14] + (-0.703234*t6165 + 0.073913*t6175 + t6216)*var2[15];
}



void dR_shoulder_yaw_joint_left_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
