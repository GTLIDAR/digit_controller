/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:10:20 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jdq_AMWorld_right_knee_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t669;
  double t684;
  double t686;
  double t656;
  double t741;
  double t1068;
  double t1072;
  double t1076;
  double t698;
  double t700;
  double t720;
  double t737;
  double t770;
  double t782;
  double t795;
  double t816;
  double t855;
  double t890;
  double t909;
  double t974;
  double t1003;
  double t1025;
  double t1042;
  double t1046;
  double t1164;
  double t1256;
  double t1267;
  double t1270;
  double t1272;
  double t1285;
  double t1323;
  double t1363;
  double t1365;
  double t1388;
  double t1482;
  double t660;
  double t665;
  double t820;
  double t840;
  double t852;
  double t1050;
  double t1104;
  double t1110;
  double t1412;
  double t1430;
  double t303;
  double t358;
  double t434;
  double t1531;
  double t1545;
  double t1648;
  double t1657;
  double t1659;
  double t1676;
  double t1837;
  double t1869;
  double t1906;
  double t1928;
  double t1944;
  double t1965;
  double t1969;
  double t1980;
  double t1991;
  double t1999;
  double t2451;
  double t2200;
  double t2279;
  double t2293;
  double t2307;
  double t2357;
  double t2382;
  double t2394;
  double t2414;
  double t2191;
  double t2455;
  double t2481;
  double t2483;
  double t2492;
  double t2519;
  double t2520;
  double t2561;
  double t2583;
  double t467;
  double t604;
  double t1485;
  double t1503;
  double t2811;
  double t2822;
  double t2852;
  double t2872;
  double t2883;
  double t2922;
  double t2930;
  double t2970;
  double t3027;
  double t1899;
  double t1903;
  double t2129;
  double t2163;
  double t2187;
  double t2871;
  double t2924;
  double t3128;
  double t3131;
  double t3214;
  double t3237;
  double t3279;
  double t3280;
  double t3305;
  double t3395;
  double t3405;
  double t3410;
  double t3461;
  double t3466;
  double t3493;
  double t3538;
  double t3622;
  double t3626;
  double t3628;
  double t3634;
  double t2710;
  double t3900;
  double t3908;
  double t3919;
  double t3936;
  double t3941;
  double t3950;
  double t3985;
  double t3999;
  double t4003;
  double t3925;
  double t3974;
  double t4025;
  double t4040;
  double t4059;
  double t4086;
  double t4102;
  double t4129;
  double t4180;
  double t4183;
  double t4191;
  double t4201;
  double t4249;
  double t4267;
  double t4284;
  double t4293;
  double t4340;
  double t4358;
  double t4385;
  double t4420;
  double t4618;
  double t4659;
  double t4634;
  double t4683;
  double t4693;
  double t4699;
  double t4713;
  double t4715;
  double t4694;
  double t4718;
  double t4721;
  double t4726;
  double t4744;
  double t4758;
  double t4630;
  double t4722;
  double t4764;
  double t4777;
  double t4783;
  double t4831;
  double t4845;
  double t4848;
  double t4912;
  double t4915;
  double t4916;
  double t4948;
  double t4781;
  double t4867;
  double t4953;
  double t4986;
  double t4989;
  double t4998;
  double t5003;
  double t5020;
  double t5050;
  double t5147;
  double t5158;
  double t5164;
  double t1439;
  double t1879;
  double t2083;
  double t2107;
  double t2134;
  double t2428;
  double t2597;
  double t2607;
  double t2612;
  double t2644;
  double t2661;
  double t2667;
  double t2745;
  double t2747;
  double t2751;
  double t2783;
  double t3204;
  double t3286;
  double t3411;
  double t3431;
  double t3460;
  double t3590;
  double t3639;
  double t3661;
  double t3733;
  double t3743;
  double t3835;
  double t3836;
  double t3837;
  double t3871;
  double t3879;
  double t3885;
  double t4042;
  double t4158;
  double t4209;
  double t4212;
  double t4239;
  double t4339;
  double t4472;
  double t4484;
  double t4509;
  double t4511;
  double t4528;
  double t4533;
  double t4535;
  double t4554;
  double t4598;
  double t4603;
  double t4987;
  double t5026;
  double t5168;
  double t5182;
  double t5195;
  double t5206;
  double t5225;
  double t5237;
  double t5309;
  double t5336;
  double t5365;
  double t5381;
  double t5393;
  double t2802;
  double t3888;
  double t4605;
  double t4616;
  double t5554;
  double t5588;
  double t5590;
  double t5652;
  double t5654;
  double t5655;
  double t5614;
  double t5669;
  double t5670;
  double t5694;
  double t5697;
  double t5704;
  double t5526;
  double t5682;
  double t5706;
  double t5709;
  double t5743;
  double t5781;
  double t5787;
  double t5797;
  double t5802;
  double t5820;
  double t5821;
  double t5846;
  double t5712;
  double t5801;
  double t5852;
  double t5863;
  double t5885;
  double t5892;
  double t5895;
  double t5920;
  double t5945;
  double t5952;
  double t5964;
  double t5970;
  double t5265;
  double t5283;
  double t5293;
  double t5294;
  double t5875;
  double t5929;
  double t5971;
  double t5980;
  double t5996;
  double t5998;
  double t5999;
  double t6007;
  double t5439;
  double t5441;
  double t5462;
  double t5470;
  double t6068;
  double t6069;
  double t6078;
  double t6084;
  double t6092;
  double t6188;
  double t6191;
  double t6193;
  double t6205;
  double t6213;
  double t6217;
  double t6175;
  double t6202;
  double t6222;
  double t6239;
  double t6248;
  double t6251;
  double t6254;
  double t6255;
  double t6258;
  double t6262;
  double t6264;
  double t6271;
  double t6244;
  double t6256;
  double t6275;
  double t6284;
  double t6291;
  double t6305;
  double t6308;
  double t6310;
  double t6315;
  double t6320;
  double t6327;
  double t6328;
  double t6290;
  double t6314;
  double t6354;
  double t6369;
  double t6386;
  double t6389;
  double t6393;
  double t6397;
  double t6418;
  double t6426;
  double t6428;
  double t6442;
  double t6455;
  double t5193;
  double t5250;
  double t5255;
  double t6485;
  double t6487;
  double t6489;
  double t6513;
  double t6519;
  double t6527;
  double t6555;
  double t6559;
  double t6561;
  double t5295;
  double t5299;
  double t5394;
  double t5493;
  double t5496;
  double t5508;
  double t6490;
  double t6533;
  double t6565;
  double t6566;
  double t5982;
  double t6025;
  double t6034;
  double t6585;
  double t6586;
  double t6587;
  double t6597;
  double t6065;
  double t6067;
  double t6102;
  double t6628;
  double t6630;
  double t6641;
  double t6642;
  double t6150;
  double t6153;
  double t6155;
  double t6383;
  double t6398;
  double t6400;
  double t6407;
  double t6415;
  double t6460;
  double t6462;
  double t6464;
  double t6470;
  double t6693;
  double t6696;
  double t6711;
  double t6720;
  double t6739;
  double t6753;
  double t6755;
  double t6763;
  double t6766;
  double t6774;
  double t6776;
  double t6777;
  double t6821;
  double t6835;
  double t6836;
  double t6839;
  double t6843;
  double t6852;
  double t6856;
  double t6859;
  double t6863;
  double t6869;
  double t6873;
  double t6874;
  double t6841;
  double t6860;
  double t6896;
  double t6900;
  double t6914;
  double t6925;
  double t6930;
  double t6932;
  double t6939;
  double t6943;
  double t6946;
  double t6949;
  double t7006;
  double t7008;
  double t7013;
  double t7016;
  double t7018;
  double t7022;
  double t7030;
  double t7033;
  double t7046;
  double t7015;
  double t7028;
  double t7050;
  double t7052;
  double t7057;
  double t7063;
  double t7071;
  double t7073;
  double t7084;
  double t7088;
  double t7089;
  double t7092;
  double t7156;
  double t7157;
  double t7160;
  double t7163;
  double t7166;
  double t7168;
  double t7170;
  double t7171;
  double t7173;
  double t7162;
  double t7169;
  double t7179;
  double t7184;
  double t7192;
  double t7194;
  double t7195;
  double t7202;
  double t7204;
  double t7210;
  double t7211;
  double t7218;
  t669 = Cos(var1[20]);
  t684 = -1.*t669;
  t686 = 1. + t684;
  t656 = Sin(var1[19]);
  t741 = Sin(var1[20]);
  t1068 = Cos(var1[19]);
  t1072 = -1.*t1068;
  t1076 = 1. + t1072;
  t698 = -0.8656776547239999*t686;
  t700 = 1. + t698;
  t720 = -0.657905*t700;
  t737 = 0.0883716288660118*t686;
  t770 = -0.930418*t741;
  t782 = 0. + t770;
  t795 = -0.707107*t782;
  t816 = t720 + t737 + t795;
  t855 = -0.134322983001*t686;
  t890 = 1. + t855;
  t909 = -0.259155*t890;
  t974 = 0.22434503092393926*t686;
  t1003 = -0.366501*t741;
  t1025 = 0. + t1003;
  t1042 = -0.707107*t1025;
  t1046 = t909 + t974 + t1042;
  t1164 = -1.000000637725*t686;
  t1256 = 1. + t1164;
  t1267 = -0.707107*t1256;
  t1270 = 0.366501*t741;
  t1272 = 0. + t1270;
  t1285 = -0.259155*t1272;
  t1323 = 0.930418*t741;
  t1363 = 0. + t1323;
  t1365 = -0.657905*t1363;
  t1388 = t1267 + t1285 + t1365;
  t1482 = Sin(var1[18]);
  t660 = -0.930418*t656;
  t665 = 0. + t660;
  t820 = t665*t816;
  t840 = -0.366501*t656;
  t852 = 0. + t840;
  t1050 = t852*t1046;
  t1104 = -1.000000637725*t1076;
  t1110 = 1. + t1104;
  t1412 = t1110*t1388;
  t1430 = 0. + t820 + t1050 + t1412;
  t303 = Cos(var1[18]);
  t358 = -1.*t303;
  t434 = 1. + t358;
  t1531 = -0.340999127418*t1076*t816;
  t1545 = -0.134322983001*t1076;
  t1648 = 1. + t1545;
  t1657 = t1648*t1046;
  t1659 = 0.366501*t656;
  t1676 = 0. + t1659;
  t1837 = t1676*t1388;
  t1869 = 0. + t1531 + t1657 + t1837;
  t1906 = -0.8656776547239999*t1076;
  t1928 = 1. + t1906;
  t1944 = t1928*t816;
  t1965 = -0.340999127418*t1076*t1046;
  t1969 = 0.930418*t656;
  t1980 = 0. + t1969;
  t1991 = t1980*t1388;
  t1999 = 0. + t1944 + t1965 + t1991;
  t2451 = Sin(var1[17]);
  t2200 = 0.366501*t1482;
  t2279 = 0. + t2200;
  t2293 = t2279*t1430;
  t2307 = 0.340999127418*t434*t1869;
  t2357 = -0.134322983001*t434;
  t2382 = 1. + t2357;
  t2394 = t2382*t1999;
  t2414 = 0. + t2293 + t2307 + t2394;
  t2191 = Cos(var1[17]);
  t2455 = -0.930418*t1482;
  t2481 = 0. + t2455;
  t2483 = t2481*t1430;
  t2492 = -0.8656776547239999*t434;
  t2519 = 1. + t2492;
  t2520 = t2519*t1869;
  t2561 = 0.340999127418*t434*t1999;
  t2583 = 0. + t2483 + t2520 + t2561;
  t467 = -1.000000637725*t434;
  t604 = 1. + t467;
  t1485 = 0.930418*t1482;
  t1503 = 0. + t1485;
  t2811 = -0.366501*t700;
  t2822 = -0.3172717261340007*t686;
  t2852 = t2811 + t2822;
  t2872 = 0.930418*t890;
  t2883 = 0.12497652119782442*t686;
  t2922 = t2872 + t2883;
  t2930 = 0.930418*t1272;
  t2970 = -0.366501*t1363;
  t3027 = t2930 + t2970;
  t1899 = -0.366501*t1482;
  t1903 = 0. + t1899;
  t2129 = Sin(var1[4]);
  t2163 = Cos(var1[4]);
  t2187 = Cos(var1[5]);
  t2871 = t2852*t665;
  t2924 = t2922*t852;
  t3128 = t1110*t3027;
  t3131 = 0. + t2871 + t2924 + t3128;
  t3214 = -0.340999127418*t1076*t2852;
  t3237 = t1648*t2922;
  t3279 = t1676*t3027;
  t3280 = 0. + t3214 + t3237 + t3279;
  t3305 = t1928*t2852;
  t3395 = -0.340999127418*t1076*t2922;
  t3405 = t1980*t3027;
  t3410 = 0. + t3305 + t3395 + t3405;
  t3461 = t2279*t3131;
  t3466 = 0.340999127418*t434*t3280;
  t3493 = t2382*t3410;
  t3538 = 0. + t3461 + t3466 + t3493;
  t3622 = t2481*t3131;
  t3626 = t2519*t3280;
  t3628 = 0.340999127418*t434*t3410;
  t3634 = 0. + t3622 + t3626 + t3628;
  t2710 = Sin(var1[5]);
  t3900 = 0.657905*t700;
  t3908 = -0.0883716288660118*t686;
  t3919 = t3900 + t3908 + t795;
  t3936 = 0.259155*t890;
  t3941 = -0.22434503092393926*t686;
  t3950 = t3936 + t3941 + t1042;
  t3985 = 0.259155*t1272;
  t3999 = 0.657905*t1363;
  t4003 = t1267 + t3985 + t3999;
  t3925 = t665*t3919;
  t3974 = t852*t3950;
  t4025 = t1110*t4003;
  t4040 = 0. + t3925 + t3974 + t4025;
  t4059 = -0.340999127418*t1076*t3919;
  t4086 = t1648*t3950;
  t4102 = t1676*t4003;
  t4129 = 0. + t4059 + t4086 + t4102;
  t4180 = t1928*t3919;
  t4183 = -0.340999127418*t1076*t3950;
  t4191 = t1980*t4003;
  t4201 = 0. + t4180 + t4183 + t4191;
  t4249 = t2279*t4040;
  t4267 = 0.340999127418*t434*t4129;
  t4284 = t2382*t4201;
  t4293 = 0. + t4249 + t4267 + t4284;
  t4340 = t2481*t4040;
  t4358 = t2519*t4129;
  t4385 = 0.340999127418*t434*t4201;
  t4420 = 0. + t4340 + t4358 + t4385;
  t4618 = Cos(var1[3]);
  t4659 = Sin(var1[3]);
  t4634 = t4618*t2187*t2129;
  t4683 = t4659*t2710;
  t4693 = t4634 + t4683;
  t4699 = -1.*t2187*t4659;
  t4713 = t4618*t2129*t2710;
  t4715 = t4699 + t4713;
  t4694 = -1.*t2451*t4693;
  t4718 = t2191*t4715;
  t4721 = t4694 + t4718;
  t4726 = t2191*t4693;
  t4744 = t2451*t4715;
  t4758 = t4726 + t4744;
  t4630 = t4618*t2163*t1903;
  t4722 = 0.340999127418*t434*t4721;
  t4764 = t2382*t4758;
  t4777 = t4630 + t4722 + t4764;
  t4783 = t4618*t2163*t1503;
  t4831 = t2519*t4721;
  t4845 = 0.340999127418*t434*t4758;
  t4848 = t4783 + t4831 + t4845;
  t4912 = t604*t4618*t2163;
  t4915 = t2481*t4721;
  t4916 = t2279*t4758;
  t4948 = t4912 + t4915 + t4916;
  t4781 = t1980*t4777;
  t4867 = t1676*t4848;
  t4953 = t1110*t4948;
  t4986 = t4781 + t4867 + t4953;
  t4989 = t1928*t4777;
  t4998 = -0.340999127418*t1076*t4848;
  t5003 = t665*t4948;
  t5020 = t4989 + t4998 + t5003;
  t5050 = -0.340999127418*t1076*t4777;
  t5147 = t1648*t4848;
  t5158 = t852*t4948;
  t5164 = t5050 + t5147 + t5158;
  t1439 = t604*t1430;
  t1879 = t1503*t1869;
  t2083 = t1903*t1999;
  t2107 = 0. + t1439 + t1879 + t2083;
  t2134 = -1.*t2107*t2129;
  t2428 = t2191*t2414;
  t2597 = -1.*t2451*t2583;
  t2607 = 0. + t2428 + t2597;
  t2612 = t2187*t2607;
  t2644 = t2451*t2414;
  t2661 = t2191*t2583;
  t2667 = 0. + t2644 + t2661;
  t2745 = t2667*t2710;
  t2747 = 0. + t2612 + t2745;
  t2751 = t2163*t2747;
  t2783 = 0. + t2134 + t2751;
  t3204 = t604*t3131;
  t3286 = t1503*t3280;
  t3411 = t1903*t3410;
  t3431 = 0. + t3204 + t3286 + t3411;
  t3460 = -1.*t3431*t2129;
  t3590 = t2191*t3538;
  t3639 = -1.*t2451*t3634;
  t3661 = 0. + t3590 + t3639;
  t3733 = t2187*t3661;
  t3743 = t2451*t3538;
  t3835 = t2191*t3634;
  t3836 = 0. + t3743 + t3835;
  t3837 = t3836*t2710;
  t3871 = 0. + t3733 + t3837;
  t3879 = t2163*t3871;
  t3885 = 0. + t3460 + t3879;
  t4042 = t604*t4040;
  t4158 = t1503*t4129;
  t4209 = t1903*t4201;
  t4212 = 0. + t4042 + t4158 + t4209;
  t4239 = -1.*t4212*t2129;
  t4339 = t2191*t4293;
  t4472 = -1.*t2451*t4420;
  t4484 = 0. + t4339 + t4472;
  t4509 = t2187*t4484;
  t4511 = t2451*t4293;
  t4528 = t2191*t4420;
  t4533 = 0. + t4511 + t4528;
  t4535 = t4533*t2710;
  t4554 = 0. + t4509 + t4535;
  t4598 = t2163*t4554;
  t4603 = 0. + t4239 + t4598;
  t4987 = t1272*t4986;
  t5026 = -0.340999127418*t686*t5020;
  t5168 = t890*t5164;
  t5182 = t4987 + t5026 + t5168;
  t5195 = t1363*t4986;
  t5206 = t700*t5020;
  t5225 = -0.340999127418*t686*t5164;
  t5237 = t5195 + t5206 + t5225;
  t5309 = t1256*t4986;
  t5336 = t782*t5020;
  t5365 = t1025*t5164;
  t5381 = t5309 + t5336 + t5365;
  t5393 = -0.707107*t5381;
  t2802 = 0.000309*t2783;
  t3888 = 0.038903*t3885;
  t4605 = -0.00004*t4603;
  t4616 = t2802 + t3888 + t4605;
  t5554 = t2187*t4659*t2129;
  t5588 = -1.*t4618*t2710;
  t5590 = t5554 + t5588;
  t5652 = t4618*t2187;
  t5654 = t4659*t2129*t2710;
  t5655 = t5652 + t5654;
  t5614 = -1.*t2451*t5590;
  t5669 = t2191*t5655;
  t5670 = t5614 + t5669;
  t5694 = t2191*t5590;
  t5697 = t2451*t5655;
  t5704 = t5694 + t5697;
  t5526 = t2163*t1903*t4659;
  t5682 = 0.340999127418*t434*t5670;
  t5706 = t2382*t5704;
  t5709 = t5526 + t5682 + t5706;
  t5743 = t2163*t1503*t4659;
  t5781 = t2519*t5670;
  t5787 = 0.340999127418*t434*t5704;
  t5797 = t5743 + t5781 + t5787;
  t5802 = t604*t2163*t4659;
  t5820 = t2481*t5670;
  t5821 = t2279*t5704;
  t5846 = t5802 + t5820 + t5821;
  t5712 = t1980*t5709;
  t5801 = t1676*t5797;
  t5852 = t1110*t5846;
  t5863 = t5712 + t5801 + t5852;
  t5885 = t1928*t5709;
  t5892 = -0.340999127418*t1076*t5797;
  t5895 = t665*t5846;
  t5920 = t5885 + t5892 + t5895;
  t5945 = -0.340999127418*t1076*t5709;
  t5952 = t1648*t5797;
  t5964 = t852*t5846;
  t5970 = t5945 + t5952 + t5964;
  t5265 = 0.004296*t2783;
  t5283 = 0.000309*t3885;
  t5293 = -0.001393*t4603;
  t5294 = t5265 + t5283 + t5293;
  t5875 = t1272*t5863;
  t5929 = -0.340999127418*t686*t5920;
  t5971 = t890*t5970;
  t5980 = t5875 + t5929 + t5971;
  t5996 = t1363*t5863;
  t5998 = t700*t5920;
  t5999 = -0.340999127418*t686*t5970;
  t6007 = t5996 + t5998 + t5999;
  t5439 = -0.001393*t2783;
  t5441 = -0.00004*t3885;
  t5462 = 0.036157*t4603;
  t5470 = t5439 + t5441 + t5462;
  t6068 = t1256*t5863;
  t6069 = t782*t5920;
  t6078 = t1025*t5970;
  t6084 = t6068 + t6069 + t6078;
  t6092 = -0.707107*t6084;
  t6188 = -1.*t2163*t2187*t2451;
  t6191 = t2191*t2163*t2710;
  t6193 = t6188 + t6191;
  t6205 = t2191*t2163*t2187;
  t6213 = t2163*t2451*t2710;
  t6217 = t6205 + t6213;
  t6175 = -1.*t1903*t2129;
  t6202 = 0.340999127418*t434*t6193;
  t6222 = t2382*t6217;
  t6239 = t6175 + t6202 + t6222;
  t6248 = -1.*t1503*t2129;
  t6251 = t2519*t6193;
  t6254 = 0.340999127418*t434*t6217;
  t6255 = t6248 + t6251 + t6254;
  t6258 = -1.*t604*t2129;
  t6262 = t2481*t6193;
  t6264 = t2279*t6217;
  t6271 = t6258 + t6262 + t6264;
  t6244 = t1980*t6239;
  t6256 = t1676*t6255;
  t6275 = t1110*t6271;
  t6284 = t6244 + t6256 + t6275;
  t6291 = t1928*t6239;
  t6305 = -0.340999127418*t1076*t6255;
  t6308 = t665*t6271;
  t6310 = t6291 + t6305 + t6308;
  t6315 = -0.340999127418*t1076*t6239;
  t6320 = t1648*t6255;
  t6327 = t852*t6271;
  t6328 = t6315 + t6320 + t6327;
  t6290 = t1272*t6284;
  t6314 = -0.340999127418*t686*t6310;
  t6354 = t890*t6328;
  t6369 = t6290 + t6314 + t6354;
  t6386 = t1363*t6284;
  t6389 = t700*t6310;
  t6393 = -0.340999127418*t686*t6328;
  t6397 = t6386 + t6389 + t6393;
  t6418 = t1256*t6284;
  t6426 = t782*t6310;
  t6428 = t1025*t6328;
  t6442 = t6418 + t6426 + t6428;
  t6455 = -0.707107*t6442;
  t5193 = 0.930418*t5182;
  t5250 = -0.366501*t5237;
  t5255 = t5193 + t5250;
  t6485 = t2187*t2667;
  t6487 = -1.*t2607*t2710;
  t6489 = 0. + t6485 + t6487;
  t6513 = t2187*t3836;
  t6519 = -1.*t3661*t2710;
  t6527 = 0. + t6513 + t6519;
  t6555 = t2187*t4533;
  t6559 = -1.*t4484*t2710;
  t6561 = 0. + t6555 + t6559;
  t5295 = -0.259155*t5182;
  t5299 = -0.657905*t5237;
  t5394 = t5295 + t5299 + t5393;
  t5493 = 0.259155*t5182;
  t5496 = 0.657905*t5237;
  t5508 = t5493 + t5496 + t5393;
  t6490 = 0.000309*t6489;
  t6533 = 0.038903*t6527;
  t6565 = -0.00004*t6561;
  t6566 = t6490 + t6533 + t6565;
  t5982 = 0.930418*t5980;
  t6025 = -0.366501*t6007;
  t6034 = t5982 + t6025;
  t6585 = 0.004296*t6489;
  t6586 = 0.000309*t6527;
  t6587 = -0.001393*t6561;
  t6597 = t6585 + t6586 + t6587;
  t6065 = -0.259155*t5980;
  t6067 = -0.657905*t6007;
  t6102 = t6065 + t6067 + t6092;
  t6628 = -0.001393*t6489;
  t6630 = -0.00004*t6527;
  t6641 = 0.036157*t6561;
  t6642 = t6628 + t6630 + t6641;
  t6150 = 0.259155*t5980;
  t6153 = 0.657905*t6007;
  t6155 = t6150 + t6153 + t6092;
  t6383 = 0.930418*t6369;
  t6398 = -0.366501*t6397;
  t6400 = t6383 + t6398;
  t6407 = -0.259155*t6369;
  t6415 = -0.657905*t6397;
  t6460 = t6407 + t6415 + t6455;
  t6462 = 0.259155*t6369;
  t6464 = 0.657905*t6397;
  t6470 = t6462 + t6464 + t6455;
  t6693 = 0.000309*t2107;
  t6696 = 0.038903*t3431;
  t6711 = -0.00004*t4212;
  t6720 = t6693 + t6696 + t6711;
  t6739 = 0.004296*t2107;
  t6753 = 0.000309*t3431;
  t6755 = -0.001393*t4212;
  t6763 = t6739 + t6753 + t6755;
  t6766 = -0.001393*t2107;
  t6774 = -0.00004*t3431;
  t6776 = 0.036157*t4212;
  t6777 = t6766 + t6774 + t6776;
  t6821 = -1.*t604*t1430;
  t6835 = -1.*t1503*t1869;
  t6836 = -1.*t1903*t1999;
  t6839 = 0. + t6821 + t6835 + t6836;
  t6843 = -1.*t604*t3131;
  t6852 = -1.*t1503*t3280;
  t6856 = -1.*t1903*t3410;
  t6859 = 0. + t6843 + t6852 + t6856;
  t6863 = -1.*t604*t4040;
  t6869 = -1.*t1503*t4129;
  t6873 = -1.*t1903*t4201;
  t6874 = 0. + t6863 + t6869 + t6873;
  t6841 = 0.000309*t6839;
  t6860 = 0.038903*t6859;
  t6896 = -0.00004*t6874;
  t6900 = t6841 + t6860 + t6896;
  t6914 = 0.004296*t6839;
  t6925 = 0.000309*t6859;
  t6930 = -0.001393*t6874;
  t6932 = t6914 + t6925 + t6930;
  t6939 = -0.001393*t6839;
  t6943 = -0.00004*t6859;
  t6946 = 0.036157*t6874;
  t6949 = t6939 + t6943 + t6946;
  t7006 = -0.366501*t1869;
  t7008 = -0.930418*t1999;
  t7013 = 0. + t7006 + t7008;
  t7016 = -0.366501*t3280;
  t7018 = -0.930418*t3410;
  t7022 = 0. + t7016 + t7018;
  t7030 = -0.366501*t4129;
  t7033 = -0.930418*t4201;
  t7046 = 0. + t7030 + t7033;
  t7015 = 0.000309*t7013;
  t7028 = 0.038903*t7022;
  t7050 = -0.00004*t7046;
  t7052 = t7015 + t7028 + t7050;
  t7057 = 0.004296*t7013;
  t7063 = 0.000309*t7022;
  t7071 = -0.001393*t7046;
  t7073 = t7057 + t7063 + t7071;
  t7084 = -0.001393*t7013;
  t7088 = -0.00004*t7022;
  t7089 = 0.036157*t7046;
  t7092 = t7084 + t7088 + t7089;
  t7156 = 0.366501*t2852;
  t7157 = -0.930418*t2922;
  t7160 = 0. + t7156 + t7157;
  t7163 = 0.366501*t3919;
  t7166 = -0.930418*t3950;
  t7168 = 0. + t7163 + t7166;
  t7170 = 0.366501*t816;
  t7171 = -0.930418*t1046;
  t7173 = 0. + t7170 + t7171;
  t7162 = 0.038903*t7160;
  t7169 = -0.00004*t7168;
  t7179 = 0.000309*t7173;
  t7184 = t7162 + t7169 + t7179;
  t7192 = 0.000309*t7160;
  t7194 = -0.001393*t7168;
  t7195 = 0.004296*t7173;
  t7202 = t7192 + t7194 + t7195;
  t7204 = -0.00004*t7160;
  t7210 = 0.036157*t7168;
  t7211 = -0.001393*t7173;
  t7218 = t7204 + t7210 + t7211;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=t4616*t5255 + t5294*t5394 + t5470*t5508;
  p_output1[10]=t4616*t6034 + t5294*t6102 + t5470*t6155;
  p_output1[11]=t4616*t6400 + t5294*t6460 + t5470*t6470;
  p_output1[12]=t5255*t6566 + t5394*t6597 + t5508*t6642;
  p_output1[13]=t6034*t6566 + t6102*t6597 + t6155*t6642;
  p_output1[14]=t6400*t6566 + t6460*t6597 + t6470*t6642;
  p_output1[15]=t5255*t6720 + t5394*t6763 + t5508*t6777;
  p_output1[16]=t6034*t6720 + t6102*t6763 + t6155*t6777;
  p_output1[17]=t6400*t6720 + t6460*t6763 + t6470*t6777;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=t5255*t6900 + t5394*t6932 + t5508*t6949;
  p_output1[52]=t6034*t6900 + t6102*t6932 + t6155*t6949;
  p_output1[53]=t6400*t6900 + t6460*t6932 + t6470*t6949;
  p_output1[54]=t5255*t7052 + t5394*t7073 + t5508*t7092;
  p_output1[55]=t6034*t7052 + t6102*t7073 + t6155*t7092;
  p_output1[56]=t6400*t7052 + t6460*t7073 + t6470*t7092;
  p_output1[57]=t5255*t7184 + t5394*t7202 + t5508*t7218;
  p_output1[58]=t6034*t7184 + t6102*t7202 + t6155*t7218;
  p_output1[59]=t6400*t7184 + t6460*t7202 + t6470*t7218;
  p_output1[60]=0.03890302493631731*t5255 + 0.00030900226566275997*t5394 - 0.00004001367925224995*t5508;
  p_output1[61]=0.03890302493631731*t6034 + 0.00030900226566275997*t6102 - 0.00004001367925224995*t6155;
  p_output1[62]=0.03890302493631731*t6400 + 0.00030900226566275997*t6460 - 0.00004001367925224995*t6470;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jdq_AMWorld_right_knee_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
