/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:10:10 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dJs_right_knee_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t78;
  double t102;
  double t228;
  double t251;
  double t613;
  double t672;
  double t1312;
  double t1274;
  double t1350;
  double t1352;
  double t1362;
  double t1367;
  double t1429;
  double t1442;
  double t751;
  double t767;
  double t769;
  double t909;
  double t913;
  double t943;
  double t1297;
  double t1315;
  double t1317;
  double t966;
  double t975;
  double t994;
  double t1612;
  double t1619;
  double t1695;
  double t1719;
  double t1720;
  double t1766;
  double t1767;
  double t1774;
  double t1810;
  double t1332;
  double t1333;
  double t1341;
  double t1622;
  double t1812;
  double t1817;
  double t1843;
  double t1860;
  double t1879;
  double t1916;
  double t649;
  double t722;
  double t725;
  double t2018;
  double t1364;
  double t1558;
  double t2152;
  double t2159;
  double t2168;
  double t2273;
  double t2313;
  double t2316;
  double t2320;
  double t2342;
  double t2349;
  double t2183;
  double t1931;
  double t1933;
  double t1953;
  double t2350;
  double t2355;
  double t2370;
  double t1474;
  double t1476;
  double t1491;
  double t2613;
  double t2614;
  double t2618;
  double t2586;
  double t2588;
  double t2605;
  double t2485;
  double t2486;
  double t2844;
  double t2849;
  double t2851;
  double t2912;
  double t2946;
  double t2949;
  double t2437;
  double t2444;
  double t2457;
  double t2562;
  double t2573;
  double t2576;
  double t2038;
  double t2042;
  double t2427;
  double t2189;
  double t2207;
  double t2138;
  double t2140;
  double t3163;
  double t3167;
  double t3168;
  double t2117;
  double t2126;
  double t2132;
  double t3126;
  double t3144;
  double t3149;
  double t3190;
  double t3199;
  double t3209;
  double t3213;
  double t3222;
  double t3235;
  double t3236;
  double t2529;
  double t2553;
  double t2557;
  double t3310;
  double t3317;
  double t3318;
  double t3290;
  double t3291;
  double t3293;
  double t2867;
  double t2868;
  double t2880;
  double t2979;
  double t3001;
  double t3003;
  double t2790;
  double t2795;
  double t2806;
  double t2889;
  double t2893;
  double t2902;
  double t3382;
  double t3383;
  double t3384;
  double t2820;
  double t2824;
  double t2826;
  double t3023;
  double t3037;
  double t3048;
  double t3420;
  double t3425;
  double t3436;
  double t1555;
  double t1572;
  double t3517;
  double t3524;
  double t3525;
  double t1580;
  double t1581;
  double t1583;
  double t3611;
  double t3621;
  double t3623;
  double t3627;
  double t3636;
  double t3640;
  double t3648;
  double t3651;
  double t3676;
  double t3683;
  double t3691;
  double t3748;
  double t3751;
  double t3754;
  double t3774;
  double t3775;
  double t3779;
  double t3854;
  double t3856;
  double t3859;
  double t3831;
  double t3840;
  double t3841;
  double t3931;
  double t3944;
  double t3945;
  double t3951;
  double t3108;
  double t3114;
  double t3116;
  double t4223;
  double t4226;
  double t4230;
  double t4203;
  double t4205;
  double t4208;
  double t4244;
  double t4246;
  double t4263;
  double t4266;
  double t4277;
  double t4281;
  double t4373;
  double t4423;
  double t4489;
  double t4493;
  double t4500;
  double t4504;
  double t4214;
  double t4238;
  double t4248;
  double t4252;
  double t4531;
  double t4539;
  double t4540;
  double t4547;
  double t4557;
  double t4577;
  double t4578;
  double t4587;
  double t4597;
  double t4606;
  double t4609;
  double t4611;
  double t4555;
  double t4594;
  double t4612;
  double t4617;
  double t4271;
  double t4282;
  double t4309;
  double t4317;
  double t4633;
  double t4638;
  double t4639;
  double t4643;
  double t4620;
  double t4773;
  double t4784;
  double t4788;
  double t4798;
  double t4800;
  double t4802;
  double t4746;
  double t4843;
  double t4850;
  double t4851;
  double t4852;
  double t4810;
  double t4820;
  double t4821;
  double t4832;
  double t5014;
  double t5030;
  double t5033;
  double t5036;
  double t5039;
  double t5041;
  double t4881;
  double t4882;
  double t4883;
  double t4466;
  double t4479;
  double t5285;
  double t5290;
  double t5295;
  double t5297;
  double t5304;
  double t5305;
  double t5311;
  double t5315;
  double t5504;
  double t5505;
  double t5510;
  double t5513;
  double t5514;
  double t5517;
  double t5526;
  double t5535;
  double t5539;
  double t5511;
  double t5519;
  double t5543;
  double t5544;
  double t5570;
  double t5573;
  double t5574;
  double t5578;
  double t4619;
  double t4623;
  double t4624;
  double t4665;
  double t4669;
  double t4678;
  double t4679;
  double t4755;
  double t4771;
  double t4863;
  double t4868;
  double t4869;
  double t4700;
  double t4708;
  double t4837;
  double t4838;
  double t5816;
  double t5833;
  double t5837;
  double t5838;
  double t4724;
  double t4725;
  double t4733;
  double t5848;
  double t5849;
  double t5851;
  double t5856;
  double t5857;
  double t5858;
  double t4889;
  double t4895;
  double t4906;
  double t5867;
  double t5870;
  double t5871;
  double t5880;
  double t4983;
  double t4992;
  double t5001;
  double t5072;
  double t5074;
  double t5082;
  double t4922;
  double t4926;
  double t4930;
  double t5046;
  double t5051;
  double t5058;
  double t4935;
  double t4938;
  double t4940;
  double t5966;
  double t5967;
  double t5969;
  double t5980;
  double t5990;
  double t5995;
  double t5099;
  double t5100;
  double t5254;
  double t5259;
  double t5268;
  double t5271;
  double t5352;
  double t5357;
  double t5361;
  double t5366;
  double t5144;
  double t5150;
  double t5160;
  double t5184;
  double t5325;
  double t5327;
  double t5339;
  double t5343;
  double t5196;
  double t5201;
  double t5205;
  double t5212;
  double t6096;
  double t6104;
  double t6106;
  double t6109;
  double t6115;
  double t6117;
  double t6120;
  double t6121;
  double t5395;
  double t5396;
  double t5399;
  double t5404;
  double t5582;
  double t5584;
  double t5591;
  double t5599;
  double t5655;
  double t5671;
  double t5674;
  double t5683;
  double t5551;
  double t5555;
  double t5559;
  double t5565;
  double t5458;
  double t5477;
  double t5478;
  double t5479;
  double t6208;
  double t6209;
  double t6222;
  double t6223;
  double t5611;
  double t5628;
  double t5635;
  double t5646;
  double t6232;
  double t6233;
  double t6242;
  double t6254;
  double t5486;
  double t5488;
  double t5490;
  double t5499;
  double t4441;
  double t4450;
  double t4453;
  double t4456;
  double t4460;
  double t4461;
  double t6359;
  double t6360;
  double t6364;
  double t6520;
  double t6521;
  double t6522;
  double t6531;
  double t6534;
  double t6555;
  double t6557;
  double t6558;
  double t6562;
  double t6577;
  double t6591;
  double t6594;
  double t6604;
  double t6704;
  double t6710;
  double t6720;
  double t6722;
  double t6729;
  double t6731;
  double t6855;
  double t6861;
  double t6864;
  double t6884;
  double t6892;
  double t6900;
  double t6963;
  double t6980;
  double t6984;
  double t6988;
  double t7046;
  double t7047;
  double t7048;
  double t7051;
  double t7059;
  double t7060;
  double t7062;
  double t7071;
  double t5749;
  double t5753;
  double t5755;
  double t7371;
  double t7376;
  double t7377;
  double t7413;
  double t7432;
  double t7433;
  double t7435;
  double t7436;
  double t7380;
  double t7382;
  double t7427;
  double t7428;
  double t7459;
  double t7470;
  double t7480;
  double t7481;
  double t7508;
  double t7510;
  double t7515;
  double t7516;
  double t4488;
  double t4494;
  double t4515;
  double t4529;
  double t7383;
  double t7412;
  double t7438;
  double t7453;
  double t7566;
  double t7568;
  double t7550;
  double t7557;
  double t6328;
  double t6331;
  double t6338;
  double t6341;
  double t7644;
  double t7651;
  double t7654;
  double t7655;
  double t7658;
  double t7665;
  double t7666;
  double t7670;
  double t7673;
  double t7674;
  double t7675;
  double t7687;
  double t7458;
  double t7471;
  double t7482;
  double t7492;
  double t7657;
  double t7672;
  double t7689;
  double t7690;
  double t7693;
  double t7694;
  double t7695;
  double t7701;
  double t7572;
  double t7585;
  double t4735;
  double t4736;
  double t4739;
  double t5779;
  double t5785;
  double t5794;
  double t6838;
  double t6843;
  double t6845;
  double t7868;
  double t7874;
  double t7883;
  double t7897;
  double t7915;
  double t7917;
  double t7920;
  double t7924;
  double t7928;
  double t7929;
  double t7936;
  double t7937;
  double t4952;
  double t4961;
  double t4966;
  double t5955;
  double t5957;
  double t5959;
  double t6684;
  double t6689;
  double t6697;
  double t7938;
  double t7939;
  double t7942;
  double t7943;
  double t8087;
  double t8091;
  double t8096;
  double t8097;
  double t8154;
  double t8155;
  double t8166;
  double t8168;
  double t7998;
  double t8002;
  double t8005;
  double t8006;
  double t5218;
  double t5223;
  double t5226;
  double t5238;
  double t6070;
  double t6076;
  double t6077;
  double t6081;
  double t6506;
  double t6507;
  double t6511;
  double t6514;
  double t8292;
  double t8316;
  double t8327;
  double t8334;
  double t8389;
  double t8398;
  double t8399;
  double t8400;
  double t8525;
  double t8532;
  double t8534;
  double t8540;
  double t8543;
  double t8545;
  double t8547;
  double t8548;
  double t8549;
  double t8535;
  double t8546;
  double t8550;
  double t8552;
  double t8565;
  double t8567;
  double t8569;
  double t8574;
  double t5439;
  double t5441;
  double t5443;
  double t5451;
  double t7029;
  double t7030;
  double t7036;
  double t7037;
  double t6185;
  double t6192;
  double t6194;
  double t6198;
  double t8689;
  double t8691;
  double t8692;
  double t8693;
  double t8708;
  double t8711;
  double t8713;
  double t8714;
  double t7704;
  double t7710;
  double t7720;
  double t7737;
  double t7750;
  double t7752;
  double t7765;
  double t7766;
  double t7902;
  double t7905;
  double t7906;
  double t7907;
  double t7974;
  double t7975;
  double t7978;
  double t7981;
  double t7828;
  double t7829;
  double t7845;
  double t7853;
  double t7909;
  double t7910;
  double t7911;
  double t7914;
  double t8885;
  double t8889;
  double t8895;
  double t8898;
  double t8917;
  double t8918;
  double t8920;
  double t8922;
  double t7857;
  double t7858;
  double t7860;
  double t7861;
  double t7985;
  double t7989;
  double t7993;
  double t7995;
  double t8941;
  double t8942;
  double t8944;
  double t8952;
  double t8954;
  double t8955;
  double t8957;
  double t8960;
  double t8115;
  double t8116;
  double t8119;
  double t8128;
  double t8175;
  double t8179;
  double t8181;
  double t8190;
  double t8044;
  double t8054;
  double t8058;
  double t8068;
  double t8140;
  double t8142;
  double t8149;
  double t8151;
  double t9005;
  double t9006;
  double t9007;
  double t9010;
  double t8070;
  double t8075;
  double t8076;
  double t8077;
  double t8215;
  double t8217;
  double t8219;
  double t8224;
  double t9018;
  double t9020;
  double t9021;
  double t9025;
  double t8359;
  double t8361;
  double t8362;
  double t8366;
  double t8413;
  double t8414;
  double t8418;
  double t8420;
  double t8264;
  double t8265;
  double t8268;
  double t8269;
  double t8375;
  double t8376;
  double t8380;
  double t8385;
  double t9107;
  double t9110;
  double t9118;
  double t9119;
  double t8276;
  double t8281;
  double t8283;
  double t8284;
  double t8422;
  double t8423;
  double t8429;
  double t8439;
  double t9125;
  double t9131;
  double t9132;
  double t9133;
  double t8488;
  double t8495;
  double t8504;
  double t8508;
  double t8580;
  double t8584;
  double t8587;
  double t8588;
  double t8455;
  double t8456;
  double t8458;
  double t8459;
  double t8512;
  double t8521;
  double t8522;
  double t8523;
  double t8468;
  double t8469;
  double t8472;
  double t8473;
  double t8598;
  double t8599;
  double t8601;
  double t8604;
  double t9200;
  double t9202;
  double t9203;
  double t9206;
  double t9209;
  double t9212;
  double t9215;
  double t9225;
  double t8733;
  double t8743;
  double t8744;
  double t8747;
  double t8699;
  double t8702;
  double t8703;
  double t8704;
  double t8670;
  double t8676;
  double t8685;
  double t8687;
  double t8641;
  double t8642;
  double t8643;
  double t8644;
  double t8721;
  double t8722;
  double t8723;
  double t8724;
  double t9298;
  double t9302;
  double t9303;
  double t9304;
  double t8624;
  double t8631;
  double t8632;
  double t8637;
  double t9311;
  double t9312;
  double t9314;
  double t9316;
  double t7608;
  double t7609;
  double t7610;
  double t7612;
  double t9359;
  double t9361;
  double t9363;
  double t9369;
  double t7624;
  double t7626;
  double t7629;
  double t7635;
  double t9452;
  double t9457;
  double t9460;
  double t9464;
  double t9465;
  double t9471;
  double t9472;
  double t9475;
  double t9476;
  double t9480;
  double t9482;
  double t9483;
  double t9484;
  double t9521;
  double t9522;
  double t9524;
  double t9525;
  double t9529;
  double t9535;
  double t9536;
  double t9537;
  double t9581;
  double t9582;
  double t9583;
  double t9584;
  double t9596;
  double t9599;
  double t9602;
  double t9603;
  double t9623;
  double t9627;
  double t9628;
  double t9629;
  double t9630;
  double t9675;
  double t9678;
  double t9681;
  double t9682;
  double t9686;
  double t9687;
  double t9694;
  double t9695;
  double t9729;
  double t9730;
  double t9731;
  double t9732;
  double t9735;
  double t9736;
  double t9737;
  double t9740;
  double t8813;
  double t8845;
  double t8862;
  t78 = Cos(var1[3]);
  t102 = Sin(var1[3]);
  t228 = Cos(var1[4]);
  t251 = Sin(var1[4]);
  t613 = Cos(var1[5]);
  t672 = Sin(var1[5]);
  t1312 = Cos(var1[17]);
  t1274 = Sin(var1[17]);
  t1350 = t613*t102*t251;
  t1352 = -1.*t78*t672;
  t1362 = t1350 + t1352;
  t1367 = t78*t613;
  t1429 = t102*t251*t672;
  t1442 = t1367 + t1429;
  t751 = -1.*t613*t102*t251;
  t767 = t78*t672;
  t769 = t751 + t767;
  t909 = -1.*t78*t613;
  t913 = -1.*t102*t251*t672;
  t943 = t909 + t913;
  t1297 = -1.*t228*t613*t1274;
  t1315 = t1312*t228*t672;
  t1317 = t1297 + t1315;
  t966 = t78*t613*t251;
  t975 = t102*t672;
  t994 = t966 + t975;
  t1612 = -0.091*t1274;
  t1619 = 0. + t1612;
  t1695 = -1.*t1312;
  t1719 = 1. + t1695;
  t1720 = -0.091*t1719;
  t1766 = 0. + t1720;
  t1767 = -1.*t613*t102;
  t1774 = t78*t251*t672;
  t1810 = t1767 + t1774;
  t1332 = t1312*t228*t613;
  t1333 = t228*t1274*t672;
  t1341 = t1332 + t1333;
  t1622 = t1619*t994;
  t1812 = t1766*t1810;
  t1817 = t1622 + t1812;
  t1843 = -1.*var1[2];
  t1860 = -1.*t228*t613*t1619;
  t1879 = -1.*t1766*t228*t672;
  t1916 = 0. + t1843 + t1860 + t1879;
  t649 = t613*t102;
  t722 = -1.*t78*t251*t672;
  t725 = t649 + t722;
  t2018 = t1312*t994;
  t1364 = t1274*t1362;
  t1558 = t1312*t943;
  t2152 = t1766*t1362;
  t2159 = t1619*t943;
  t2168 = t2152 + t2159;
  t2273 = t1619*t1362;
  t2313 = t1766*t1442;
  t2316 = 0. + var1[1] + t2273 + t2313;
  t2320 = -1.*t1766*t228*t613;
  t2342 = t228*t1619*t672;
  t2349 = t2320 + t2342;
  t2183 = t1312*t1362;
  t1931 = -1.*t1274*t994;
  t1933 = t1312*t1810;
  t1953 = t1931 + t1933;
  t2350 = -1.*t1274*t1362;
  t2355 = t1312*t1442;
  t2370 = t2350 + t2355;
  t1474 = -1.*t1312*t1362;
  t1476 = -1.*t1274*t1442;
  t1491 = t1474 + t1476;
  t2613 = -0.091*t1312*t1362;
  t2614 = -0.091*t1274*t1442;
  t2618 = t2613 + t2614;
  t2586 = 0.091*t1312*t228*t613;
  t2588 = 0.091*t228*t1274*t672;
  t2605 = t2586 + t2588;
  t2485 = t1274*t1442;
  t2486 = t2183 + t2485;
  t2844 = t228*t613*t1619*t102;
  t2849 = t1766*t228*t102*t672;
  t2851 = t2844 + t2849;
  t2912 = t613*t1619*t251;
  t2946 = t1766*t251*t672;
  t2949 = t2912 + t2946;
  t2437 = t228*t613*t1274;
  t2444 = -1.*t1312*t228*t672;
  t2457 = t2437 + t2444;
  t2562 = -1.*t1312*t228*t613;
  t2573 = -1.*t228*t1274*t672;
  t2576 = t2562 + t2573;
  t2038 = t1274*t1810;
  t2042 = t2018 + t2038;
  t2427 = t1364 + t1558;
  t2189 = -1.*t1274*t943;
  t2207 = t2183 + t2189;
  t2138 = -1.*t1274*t725;
  t2140 = t2018 + t2138;
  t3163 = t228*t613*t1619;
  t3167 = t1766*t228*t672;
  t3168 = 0. + var1[2] + t3163 + t3167;
  t2117 = t1274*t994;
  t2126 = t1312*t725;
  t2132 = t2117 + t2126;
  t3126 = -1.*t1766*t994;
  t3144 = -1.*t1619*t725;
  t3149 = t3126 + t3144;
  t3190 = -1.*var1[0];
  t3199 = -1.*t1619*t994;
  t3209 = -1.*t1766*t1810;
  t3213 = 0. + t3190 + t3199 + t3209;
  t3222 = t1766*t228*t613;
  t3235 = -1.*t228*t1619*t672;
  t3236 = t3222 + t3235;
  t2529 = -1.*t1312*t994;
  t2553 = -1.*t1274*t1810;
  t2557 = t2529 + t2553;
  t3310 = 0.091*t1312*t994;
  t3317 = 0.091*t1274*t1810;
  t3318 = t3310 + t3317;
  t3290 = -0.091*t1312*t228*t613;
  t3291 = -0.091*t228*t1274*t672;
  t3293 = t3290 + t3291;
  t2867 = -1.*t228*t613*t1274*t102;
  t2868 = t1312*t228*t102*t672;
  t2880 = t2867 + t2868;
  t2979 = t1312*t228*t613*t102;
  t3001 = t228*t1274*t102*t672;
  t3003 = t2979 + t3001;
  t2790 = -1.*t78*t228*t613*t1274;
  t2795 = t1312*t78*t228*t672;
  t2806 = t2790 + t2795;
  t2889 = t613*t1274*t251;
  t2893 = -1.*t1312*t251*t672;
  t2902 = t2889 + t2893;
  t3382 = -1.*t78*t228*t613*t1619;
  t3383 = -1.*t1766*t78*t228*t672;
  t3384 = t3382 + t3383;
  t2820 = t1312*t78*t228*t613;
  t2824 = t78*t228*t1274*t672;
  t2826 = t2820 + t2824;
  t3023 = -1.*t1312*t613*t251;
  t3037 = -1.*t1274*t251*t672;
  t3048 = t3023 + t3037;
  t3420 = -1.*t613*t1619*t251;
  t3425 = -1.*t1766*t251*t672;
  t3436 = t3420 + t3425;
  t1555 = -1.*t1274*t769;
  t1572 = t1555 + t1558;
  t3517 = -1.*t1619*t769;
  t3524 = -1.*t1766*t943;
  t3525 = t3517 + t3524;
  t1580 = t1312*t769;
  t1581 = t1274*t943;
  t1583 = t1580 + t1581;
  t3611 = 0. + var1[0] + t1622 + t1812;
  t3621 = -1.*t228*t613*t1619*t102;
  t3623 = -1.*t1766*t228*t102*t672;
  t3627 = t3621 + t3623;
  t3636 = -1.*var1[1];
  t3640 = -1.*t1619*t1362;
  t3648 = -1.*t1766*t1442;
  t3651 = 0. + t3636 + t3640 + t3648;
  t3676 = t78*t228*t613*t1619;
  t3683 = t1766*t78*t228*t672;
  t3691 = t3676 + t3683;
  t3748 = -1.*t1766*t1362;
  t3751 = -1.*t1619*t943;
  t3754 = t3748 + t3751;
  t3774 = t1766*t994;
  t3775 = t1619*t725;
  t3779 = t3774 + t3775;
  t3854 = 0.091*t1312*t1362;
  t3856 = 0.091*t1274*t1442;
  t3859 = t3854 + t3856;
  t3831 = -0.091*t1312*t994;
  t3840 = -0.091*t1274*t1810;
  t3841 = t3831 + t3840;
  t3931 = t3199 + t3209;
  t3944 = t1619*t769;
  t3945 = t1766*t943;
  t3951 = t3944 + t3945;
  t3108 = -0.366501*t1953;
  t3114 = -0.930418*t2042;
  t3116 = t3108 + t3114;
  t4223 = Cos(var1[18]);
  t4226 = -1.*t4223;
  t4230 = 1. + t4226;
  t4203 = Sin(var1[18]);
  t4205 = -0.366501*t4203;
  t4208 = 0. + t4205;
  t4244 = -0.134322983001*t4230;
  t4246 = 1. + t4244;
  t4263 = 0.930418*t4203;
  t4266 = 0. + t4263;
  t4277 = -0.8656776547239999*t4230;
  t4281 = 1. + t4277;
  t4373 = -1.*t228*t4208*t102;
  t4423 = -1.*t228*t4266*t102;
  t4489 = -0.930418*t4203;
  t4493 = 0. + t4489;
  t4500 = 0.366501*t4203;
  t4504 = 0. + t4500;
  t4214 = -1.*t4208*t251;
  t4238 = 0.340999127418*t4230*t1317;
  t4248 = t4246*t1341;
  t4252 = t4214 + t4238 + t4248;
  t4531 = -0.04500040093286238*t4230;
  t4539 = -0.07877663122399998*t4493;
  t4540 = 0.031030906668*t4504;
  t4547 = 0. + t4531 + t4539 + t4540;
  t4557 = 1.296332362046933e-7*var1[18];
  t4577 = -0.07877668146182712*t4230;
  t4578 = -0.045000372235*t4266;
  t4587 = t4557 + t4577 + t4578;
  t4597 = 3.2909349868922137e-7*var1[18];
  t4606 = 0.03103092645718495*t4230;
  t4609 = -0.045000372235*t4208;
  t4611 = t4597 + t4606 + t4609;
  t4555 = t4547*t251;
  t4594 = -1.*t4587*t1317;
  t4612 = -1.*t4611*t1341;
  t4617 = 0. + t1843 + t1860 + t4555 + t1879 + t4594 + t4612;
  t4271 = -1.*t4266*t251;
  t4282 = t4281*t1317;
  t4309 = 0.340999127418*t4230*t1341;
  t4317 = t4271 + t4282 + t4309;
  t4633 = t78*t228*t4547;
  t4638 = t4587*t1953;
  t4639 = t4611*t2042;
  t4643 = t4633 + t1622 + t1812 + t4638 + t4639;
  t4620 = 0.340999127418*t4230*t1953;
  t4773 = t4611*t2370;
  t4784 = t4587*t1491;
  t4788 = t2613 + t2614 + t4773 + t4784;
  t4798 = -1.*t4611*t1317;
  t4800 = -1.*t4587*t2576;
  t4802 = t2586 + t2588 + t4798 + t4800;
  t4746 = 0.340999127418*t4230*t2370;
  t4843 = t228*t4547*t102;
  t4850 = t4587*t2370;
  t4851 = t4611*t2486;
  t4852 = 0. + var1[1] + t4843 + t2273 + t2313 + t4850 + t4851;
  t4810 = t228*t4266*t102;
  t4820 = t4281*t2370;
  t4821 = 0.340999127418*t4230*t2486;
  t4832 = t4810 + t4820 + t4821;
  t5014 = t4611*t2427;
  t5030 = t4587*t2207;
  t5033 = t2152 + t2159 + t5014 + t5030;
  t5036 = -1.*t4611*t2457;
  t5039 = -1.*t4587*t1341;
  t5041 = t2320 + t2342 + t5036 + t5039;
  t4881 = t228*t4208*t102;
  t4882 = t4246*t2486;
  t4883 = t4881 + t4746 + t4882;
  t4466 = -1.000000637725*t4230;
  t4479 = 1. + t4466;
  t5285 = -1.*t4547*t102*t251;
  t5290 = t4587*t2880;
  t5295 = t4611*t3003;
  t5297 = t2844 + t5285 + t2849 + t5290 + t5295;
  t5304 = t228*t4547;
  t5305 = -1.*t4587*t2902;
  t5311 = -1.*t4611*t3048;
  t5315 = t5304 + t2912 + t2946 + t5305 + t5311;
  t5504 = 0.0846680539949003*t4223;
  t5505 = -0.04500040093286238*t4203;
  t5510 = t5504 + t5505;
  t5513 = -0.04186915633414423*t4223;
  t5514 = -0.07877668146182712*t4203;
  t5517 = 1.296332362046933e-7 + t5513 + t5514;
  t5526 = 0.016492681424499736*t4223;
  t5535 = 0.03103092645718495*t4203;
  t5539 = 3.2909349868922137e-7 + t5526 + t5535;
  t5511 = t5510*t251;
  t5519 = -1.*t5517*t1317;
  t5543 = -1.*t5539*t1341;
  t5544 = t5511 + t5519 + t5543;
  t5570 = t228*t5510*t102;
  t5573 = t5517*t2370;
  t5574 = t5539*t2486;
  t5578 = t5570 + t5573 + t5574;
  t4619 = t78*t228*t4208;
  t4623 = t4246*t2042;
  t4624 = t4619 + t4620 + t4623;
  t4665 = t78*t228*t4266;
  t4669 = t4281*t1953;
  t4678 = 0.340999127418*t4230*t2042;
  t4679 = t4665 + t4669 + t4678;
  t4755 = t4281*t1491;
  t4771 = t4746 + t4755;
  t4863 = t4246*t2370;
  t4868 = 0.340999127418*t4230*t1491;
  t4869 = t4863 + t4868;
  t4700 = t4281*t2557;
  t4708 = t4620 + t4700;
  t4837 = t4281*t2576;
  t4838 = t4238 + t4837;
  t5816 = -1.*t4547*t251;
  t5833 = t4587*t1317;
  t5837 = t4611*t1341;
  t5838 = 0. + var1[2] + t3163 + t5816 + t3167 + t5833 + t5837;
  t4724 = t4246*t1953;
  t4725 = 0.340999127418*t4230*t2557;
  t4733 = t4724 + t4725;
  t5848 = -1.*t4611*t1953;
  t5849 = -1.*t4587*t2557;
  t5851 = t3310 + t3317 + t5848 + t5849;
  t5856 = t4611*t1317;
  t5857 = t4587*t2576;
  t5858 = t3290 + t3291 + t5856 + t5857;
  t4889 = t4246*t1317;
  t4895 = 0.340999127418*t4230*t2576;
  t4906 = t4889 + t4895;
  t5867 = -1.*t78*t228*t4547;
  t5870 = -1.*t4587*t1953;
  t5871 = -1.*t4611*t2042;
  t5880 = 0. + t3190 + t5867 + t3199 + t3209 + t5870 + t5871;
  t4983 = 0.340999127418*t4230*t2427;
  t4992 = t4281*t2207;
  t5001 = t4983 + t4992;
  t5072 = t4246*t2427;
  t5074 = 0.340999127418*t4230*t2207;
  t5082 = t5072 + t5074;
  t4922 = 0.340999127418*t4230*t2132;
  t4926 = t4281*t2140;
  t4930 = t4922 + t4926;
  t5046 = 0.340999127418*t4230*t2457;
  t5051 = t4281*t1341;
  t5058 = t5046 + t5051;
  t4935 = t4246*t2132;
  t4938 = 0.340999127418*t4230*t2140;
  t4940 = t4935 + t4938;
  t5966 = -1.*t4611*t2132;
  t5967 = -1.*t4587*t2140;
  t5969 = t3126 + t3144 + t5966 + t5967;
  t5980 = t4611*t2457;
  t5990 = t4587*t1341;
  t5995 = t3222 + t3235 + t5980 + t5990;
  t5099 = t4246*t2457;
  t5100 = t5099 + t4309;
  t5254 = -1.*t4208*t102*t251;
  t5259 = 0.340999127418*t4230*t2880;
  t5268 = t4246*t3003;
  t5271 = t5254 + t5259 + t5268;
  t5352 = -1.*t4266*t102*t251;
  t5357 = t4281*t2880;
  t5361 = 0.340999127418*t4230*t3003;
  t5366 = t5352 + t5357 + t5361;
  t5144 = -1.*t78*t4208*t251;
  t5150 = 0.340999127418*t4230*t2806;
  t5160 = t4246*t2826;
  t5184 = t5144 + t5150 + t5160;
  t5325 = -1.*t228*t4208;
  t5327 = 0.340999127418*t4230*t2902;
  t5339 = t4246*t3048;
  t5343 = t5325 + t5327 + t5339;
  t5196 = -1.*t78*t4266*t251;
  t5201 = t4281*t2806;
  t5205 = 0.340999127418*t4230*t2826;
  t5212 = t5196 + t5201 + t5205;
  t6096 = t78*t4547*t251;
  t6104 = -1.*t4587*t2806;
  t6106 = -1.*t4611*t2826;
  t6109 = t3382 + t6096 + t3383 + t6104 + t6106;
  t6115 = -1.*t228*t4547;
  t6117 = t4587*t2902;
  t6120 = t4611*t3048;
  t6121 = t6115 + t3420 + t3425 + t6117 + t6120;
  t5395 = -1.*t228*t4266;
  t5396 = t4281*t2902;
  t5399 = 0.340999127418*t4230*t3048;
  t5404 = t5395 + t5396 + t5399;
  t5582 = -0.366501*t4223*t228*t102;
  t5584 = 0.340999127418*t4203*t2370;
  t5591 = -0.134322983001*t4203*t2486;
  t5599 = t5582 + t5584 + t5591;
  t5655 = 0.930418*t4223*t228*t102;
  t5671 = -0.8656776547239999*t4203*t2370;
  t5674 = 0.340999127418*t4203*t2486;
  t5683 = t5655 + t5671 + t5674;
  t5551 = 0.366501*t4223*t251;
  t5555 = 0.340999127418*t4203*t1317;
  t5559 = -0.134322983001*t4203*t1341;
  t5565 = t5551 + t5555 + t5559;
  t5458 = -0.366501*t4223*t78*t228;
  t5477 = 0.340999127418*t4203*t1953;
  t5478 = -0.134322983001*t4203*t2042;
  t5479 = t5458 + t5477 + t5478;
  t6208 = -1.*t5510*t251;
  t6209 = t5517*t1317;
  t6222 = t5539*t1341;
  t6223 = t6208 + t6209 + t6222;
  t5611 = -0.930418*t4223*t251;
  t5628 = -0.8656776547239999*t4203*t1317;
  t5635 = 0.340999127418*t4203*t1341;
  t5646 = t5611 + t5628 + t5635;
  t6232 = -1.*t78*t228*t5510;
  t6233 = -1.*t5517*t1953;
  t6242 = -1.*t5539*t2042;
  t6254 = t6232 + t6233 + t6242;
  t5486 = 0.930418*t4223*t78*t228;
  t5488 = -0.8656776547239999*t4203*t1953;
  t5490 = 0.340999127418*t4203*t2042;
  t5499 = t5486 + t5488 + t5490;
  t4441 = 0.340999127418*t4230*t1572;
  t4450 = t4246*t1583;
  t4453 = t4373 + t4441 + t4450;
  t4456 = t4281*t1572;
  t4460 = 0.340999127418*t4230*t1583;
  t4461 = t4423 + t4456 + t4460;
  t6359 = -1.*t4587*t1572;
  t6360 = -1.*t4611*t1583;
  t6364 = t4843 + t3517 + t3524 + t6359 + t6360;
  t6520 = t4547*t102*t251;
  t6521 = -1.*t4587*t2880;
  t6522 = -1.*t4611*t3003;
  t6531 = t3621 + t6520 + t3623 + t6521 + t6522;
  t6534 = 0. + var1[0] + t4633 + t1622 + t1812 + t4638 + t4639;
  t6555 = -1.*t78*t4547*t251;
  t6557 = t4587*t2806;
  t6558 = t4611*t2826;
  t6562 = t3676 + t6555 + t3683 + t6557 + t6558;
  t6577 = -1.*t228*t4547*t102;
  t6591 = -1.*t4587*t2370;
  t6594 = -1.*t4611*t2486;
  t6604 = 0. + t3636 + t6577 + t3640 + t3648 + t6591 + t6594;
  t6704 = -1.*t4611*t2427;
  t6710 = -1.*t4587*t2207;
  t6720 = t3748 + t3751 + t6704 + t6710;
  t6722 = t4611*t2132;
  t6729 = t4587*t2140;
  t6731 = t3774 + t3775 + t6722 + t6729;
  t6855 = -1.*t4611*t2370;
  t6861 = -1.*t4587*t1491;
  t6864 = t3854 + t3856 + t6855 + t6861;
  t6884 = t4611*t1953;
  t6892 = t4587*t2557;
  t6900 = t3831 + t3840 + t6884 + t6892;
  t6963 = t5867 + t3199 + t3209 + t5870 + t5871;
  t6980 = t4587*t1572;
  t6984 = t4611*t1583;
  t6988 = t6577 + t3944 + t3945 + t6980 + t6984;
  t7046 = t78*t228*t5510;
  t7047 = t5517*t1953;
  t7048 = t5539*t2042;
  t7051 = t7046 + t7047 + t7048;
  t7059 = -1.*t228*t5510*t102;
  t7060 = -1.*t5517*t2370;
  t7062 = -1.*t5539*t2486;
  t7071 = t7059 + t7060 + t7062;
  t5749 = 0.366501*t4624;
  t5753 = -0.930418*t4679;
  t5755 = t5749 + t5753;
  t7371 = Cos(var1[19]);
  t7376 = -1.*t7371;
  t7377 = 1. + t7376;
  t7413 = Sin(var1[19]);
  t7432 = -1.*t4479*t251;
  t7433 = t4493*t1317;
  t7435 = t4504*t1341;
  t7436 = t7432 + t7433 + t7435;
  t7380 = -0.8656776547239999*t7377;
  t7382 = 1. + t7380;
  t7427 = -0.930418*t7413;
  t7428 = 0. + t7427;
  t7459 = -0.134322983001*t7377;
  t7470 = 1. + t7459;
  t7480 = -0.366501*t7413;
  t7481 = 0. + t7480;
  t7508 = t4479*t228*t102;
  t7510 = t4493*t2370;
  t7515 = t4504*t2486;
  t7516 = t7508 + t7510 + t7515;
  t4488 = -1.*t4479*t228*t102;
  t4494 = t4493*t1572;
  t4515 = t4504*t1583;
  t4529 = t4488 + t4494 + t4515;
  t7383 = t7382*t4252;
  t7412 = -0.340999127418*t7377*t4317;
  t7438 = t7428*t7436;
  t7453 = t7383 + t7412 + t7438;
  t7566 = 0.366501*t7413;
  t7568 = 0. + t7566;
  t7550 = 0.930418*t7413;
  t7557 = 0. + t7550;
  t6328 = t4479*t78*t228;
  t6331 = t4493*t1953;
  t6338 = t4504*t2042;
  t6341 = t6328 + t6331 + t6338;
  t7644 = -1.296332362046933e-7*var1[19];
  t7651 = -0.14128592423750855*t7377;
  t7654 = -0.045000372235*t7428;
  t7655 = t7644 + t7651 + t7654;
  t7658 = 3.2909349868922137e-7*var1[19];
  t7665 = -0.055653945343889656*t7377;
  t7666 = -0.045000372235*t7481;
  t7670 = t7658 + t7665 + t7666;
  t7673 = -0.04500040093286238*t7377;
  t7674 = -0.055653909852*t7568;
  t7675 = -0.141285834136*t7557;
  t7687 = 0. + t7673 + t7674 + t7675;
  t7458 = -0.340999127418*t7377*t4252;
  t7471 = t7470*t4317;
  t7482 = t7481*t7436;
  t7492 = t7458 + t7471 + t7482;
  t7657 = t7655*t4624;
  t7672 = t7670*t4679;
  t7689 = t7687*t6341;
  t7690 = t4633 + t1622 + t1812 + t4638 + t4639 + t7657 + t7672 + t7689;
  t7693 = -1.*t7655*t4252;
  t7694 = -1.*t7670*t4317;
  t7695 = -1.*t7687*t7436;
  t7701 = 0. + t1843 + t1860 + t4555 + t1879 + t4594 + t4612 + t7693 + t7694 + t7695;
  t7572 = -1.000000637725*t7377;
  t7585 = 1. + t7572;
  t4735 = t4504*t1953;
  t4736 = t4493*t2557;
  t4739 = t4735 + t4736;
  t5779 = t4504*t2370;
  t5785 = t4493*t1491;
  t5794 = t5779 + t5785;
  t6838 = t4504*t1317;
  t6843 = t4493*t2576;
  t6845 = t6838 + t6843;
  t7868 = t7670*t4771;
  t7874 = t7655*t4869;
  t7883 = t7687*t5794;
  t7897 = t2613 + t2614 + t4773 + t4784 + t7868 + t7874 + t7883;
  t7915 = t7655*t4883;
  t7917 = t7670*t4832;
  t7920 = t7687*t7516;
  t7924 = 0. + var1[1] + t4843 + t2273 + t2313 + t4850 + t4851 + t7915 + t7917 + t7920;
  t7928 = -1.*t7670*t4838;
  t7929 = -1.*t7655*t4906;
  t7936 = -1.*t7687*t6845;
  t7937 = t2586 + t2588 + t4798 + t4800 + t7928 + t7929 + t7936;
  t4952 = t4504*t2132;
  t4961 = t4493*t2140;
  t4966 = t4952 + t4961;
  t5955 = t4504*t2427;
  t5957 = t4493*t2207;
  t5959 = t5955 + t5957;
  t6684 = t4504*t2457;
  t6689 = t4493*t1341;
  t6697 = t6684 + t6689;
  t7938 = t7382*t4883;
  t7939 = -0.340999127418*t7377*t4832;
  t7942 = t7428*t7516;
  t7943 = t7938 + t7939 + t7942;
  t8087 = t7670*t5001;
  t8091 = t7655*t5082;
  t8096 = t7687*t5959;
  t8097 = t2152 + t2159 + t5014 + t5030 + t8087 + t8091 + t8096;
  t8154 = -1.*t7670*t5058;
  t8155 = -1.*t7655*t5100;
  t8166 = -1.*t7687*t6697;
  t8168 = t2320 + t2342 + t5036 + t5039 + t8154 + t8155 + t8166;
  t7998 = -0.340999127418*t7377*t4883;
  t8002 = t7470*t4832;
  t8005 = t7481*t7516;
  t8006 = t7998 + t8002 + t8005;
  t5218 = -1.*t4479*t78*t251;
  t5223 = t4493*t2806;
  t5226 = t4504*t2826;
  t5238 = t5218 + t5223 + t5226;
  t6070 = -1.*t4479*t102*t251;
  t6076 = t4493*t2880;
  t6077 = t4504*t3003;
  t6081 = t6070 + t6076 + t6077;
  t6506 = -1.*t4479*t228;
  t6507 = t4493*t2902;
  t6511 = t4504*t3048;
  t6514 = t6506 + t6507 + t6511;
  t8292 = t7655*t5271;
  t8316 = t7670*t5366;
  t8327 = t7687*t6081;
  t8334 = t2844 + t5285 + t2849 + t5290 + t5295 + t8292 + t8316 + t8327;
  t8389 = -1.*t7655*t5343;
  t8398 = -1.*t7670*t5404;
  t8399 = -1.*t7687*t6514;
  t8400 = t5304 + t2912 + t2946 + t5305 + t5311 + t8389 + t8398 + t8399;
  t8525 = 0.04186915633414423*t7371;
  t8532 = -0.14128592423750855*t7413;
  t8534 = -1.296332362046933e-7 + t8525 + t8532;
  t8540 = 0.016492681424499736*t7371;
  t8543 = -0.055653945343889656*t7413;
  t8545 = 3.2909349868922137e-7 + t8540 + t8543;
  t8547 = -0.15185209683981668*t7371;
  t8548 = -0.04500040093286238*t7413;
  t8549 = t8547 + t8548;
  t8535 = -1.*t8534*t4252;
  t8546 = -1.*t8545*t4317;
  t8550 = -1.*t8549*t7436;
  t8552 = t8535 + t8546 + t8550;
  t8565 = t8534*t4883;
  t8567 = t8545*t4832;
  t8569 = t8549*t7516;
  t8574 = t8565 + t8567 + t8569;
  t5439 = -1.000000637725*t78*t228*t4203;
  t5441 = -0.930418*t4223*t1953;
  t5443 = 0.366501*t4223*t2042;
  t5451 = t5439 + t5441 + t5443;
  t7029 = 1.000000637725*t4203*t251;
  t7030 = -0.930418*t4223*t1317;
  t7036 = 0.366501*t4223*t1341;
  t7037 = t7029 + t7030 + t7036;
  t6185 = -1.000000637725*t228*t4203*t102;
  t6192 = -0.930418*t4223*t2370;
  t6194 = 0.366501*t4223*t2486;
  t6198 = t6185 + t6192 + t6194;
  t8689 = -1.*t7687*t7037;
  t8691 = -1.*t7655*t5565;
  t8692 = -1.*t7670*t5646;
  t8693 = t5511 + t5519 + t5543 + t8689 + t8691 + t8692;
  t8708 = t7687*t6198;
  t8711 = t7655*t5599;
  t8713 = t7670*t5683;
  t8714 = t5570 + t5573 + t5574 + t8708 + t8711 + t8713;
  t7704 = t7382*t4624;
  t7710 = -0.340999127418*t7377*t4679;
  t7720 = t7428*t6341;
  t7737 = t7704 + t7710 + t7720;
  t7750 = -0.340999127418*t7377*t4624;
  t7752 = t7470*t4679;
  t7765 = t7481*t6341;
  t7766 = t7750 + t7752 + t7765;
  t7902 = -0.340999127418*t7377*t4771;
  t7905 = t7382*t4869;
  t7906 = t7428*t5794;
  t7907 = t7902 + t7905 + t7906;
  t7974 = t7470*t4771;
  t7975 = -0.340999127418*t7377*t4869;
  t7978 = t7481*t5794;
  t7981 = t7974 + t7975 + t7978;
  t7828 = -0.340999127418*t7377*t4708;
  t7829 = t7382*t4733;
  t7845 = t7428*t4739;
  t7853 = t7828 + t7829 + t7845;
  t7909 = -0.340999127418*t7377*t4838;
  t7910 = t7382*t4906;
  t7911 = t7428*t6845;
  t7914 = t7909 + t7910 + t7911;
  t8885 = -1.*t7670*t4708;
  t8889 = -1.*t7655*t4733;
  t8895 = -1.*t7687*t4739;
  t8898 = t3310 + t3317 + t5848 + t5849 + t8885 + t8889 + t8895;
  t8917 = t7655*t4252;
  t8918 = t7670*t4317;
  t8920 = t7687*t7436;
  t8922 = 0. + var1[2] + t3163 + t5816 + t3167 + t5833 + t5837 + t8917 + t8918 + t8920;
  t7857 = t7470*t4708;
  t7858 = -0.340999127418*t7377*t4733;
  t7860 = t7481*t4739;
  t7861 = t7857 + t7858 + t7860;
  t7985 = t7470*t4838;
  t7989 = -0.340999127418*t7377*t4906;
  t7993 = t7481*t6845;
  t7995 = t7985 + t7989 + t7993;
  t8941 = -1.*t7655*t4624;
  t8942 = -1.*t7670*t4679;
  t8944 = -1.*t7687*t6341;
  t8952 = 0. + t3190 + t5867 + t3199 + t3209 + t5870 + t5871 + t8941 + t8942 + t8944;
  t8954 = t7670*t4838;
  t8955 = t7655*t4906;
  t8957 = t7687*t6845;
  t8960 = t3290 + t3291 + t5856 + t5857 + t8954 + t8955 + t8957;
  t8115 = -0.340999127418*t7377*t5001;
  t8116 = t7382*t5082;
  t8119 = t7428*t5959;
  t8128 = t8115 + t8116 + t8119;
  t8175 = t7470*t5001;
  t8179 = -0.340999127418*t7377*t5082;
  t8181 = t7481*t5959;
  t8190 = t8175 + t8179 + t8181;
  t8044 = -0.340999127418*t7377*t4930;
  t8054 = t7382*t4940;
  t8058 = t7428*t4966;
  t8068 = t8044 + t8054 + t8058;
  t8140 = -0.340999127418*t7377*t5058;
  t8142 = t7382*t5100;
  t8149 = t7428*t6697;
  t8151 = t8140 + t8142 + t8149;
  t9005 = -1.*t7670*t4930;
  t9006 = -1.*t7655*t4940;
  t9007 = -1.*t7687*t4966;
  t9010 = t3126 + t3144 + t5966 + t5967 + t9005 + t9006 + t9007;
  t8070 = t7470*t4930;
  t8075 = -0.340999127418*t7377*t4940;
  t8076 = t7481*t4966;
  t8077 = t8070 + t8075 + t8076;
  t8215 = t7470*t5058;
  t8217 = -0.340999127418*t7377*t5100;
  t8219 = t7481*t6697;
  t8224 = t8215 + t8217 + t8219;
  t9018 = t7670*t5058;
  t9020 = t7655*t5100;
  t9021 = t7687*t6697;
  t9025 = t3222 + t3235 + t5980 + t5990 + t9018 + t9020 + t9021;
  t8359 = t7382*t5271;
  t8361 = -0.340999127418*t7377*t5366;
  t8362 = t7428*t6081;
  t8366 = t8359 + t8361 + t8362;
  t8413 = -0.340999127418*t7377*t5271;
  t8414 = t7470*t5366;
  t8418 = t7481*t6081;
  t8420 = t8413 + t8414 + t8418;
  t8264 = t7382*t5184;
  t8265 = -0.340999127418*t7377*t5212;
  t8268 = t7428*t5238;
  t8269 = t8264 + t8265 + t8268;
  t8375 = t7382*t5343;
  t8376 = -0.340999127418*t7377*t5404;
  t8380 = t7428*t6514;
  t8385 = t8375 + t8376 + t8380;
  t9107 = -1.*t7655*t5184;
  t9110 = -1.*t7670*t5212;
  t9118 = -1.*t7687*t5238;
  t9119 = t3382 + t6096 + t3383 + t6104 + t6106 + t9107 + t9110 + t9118;
  t8276 = -0.340999127418*t7377*t5184;
  t8281 = t7470*t5212;
  t8283 = t7481*t5238;
  t8284 = t8276 + t8281 + t8283;
  t8422 = -0.340999127418*t7377*t5343;
  t8423 = t7470*t5404;
  t8429 = t7481*t6514;
  t8439 = t8422 + t8423 + t8429;
  t9125 = t7655*t5343;
  t9131 = t7670*t5404;
  t9132 = t7687*t6514;
  t9133 = t6115 + t3420 + t3425 + t6117 + t6120 + t9125 + t9131 + t9132;
  t8488 = -0.8656776547239999*t7413*t4883;
  t8495 = -0.340999127418*t7413*t4832;
  t8504 = -0.930418*t7371*t7516;
  t8508 = t8488 + t8495 + t8504;
  t8580 = -0.340999127418*t7413*t4883;
  t8584 = -0.134322983001*t7413*t4832;
  t8587 = -0.366501*t7371*t7516;
  t8588 = t8580 + t8584 + t8587;
  t8455 = -0.8656776547239999*t7413*t4624;
  t8456 = -0.340999127418*t7413*t4679;
  t8458 = -0.930418*t7371*t6341;
  t8459 = t8455 + t8456 + t8458;
  t8512 = -0.8656776547239999*t7413*t4252;
  t8521 = -0.340999127418*t7413*t4317;
  t8522 = -0.930418*t7371*t7436;
  t8523 = t8512 + t8521 + t8522;
  t8468 = -0.340999127418*t7413*t4624;
  t8469 = -0.134322983001*t7413*t4679;
  t8472 = -0.366501*t7371*t6341;
  t8473 = t8468 + t8469 + t8472;
  t8598 = -0.340999127418*t7413*t4252;
  t8599 = -0.134322983001*t7413*t4317;
  t8601 = -0.366501*t7371*t7436;
  t8604 = t8598 + t8599 + t8601;
  t9200 = t8534*t4252;
  t9202 = t8545*t4317;
  t9203 = t8549*t7436;
  t9206 = t9200 + t9202 + t9203;
  t9209 = -1.*t8534*t4624;
  t9212 = -1.*t8545*t4679;
  t9215 = -1.*t8549*t6341;
  t9225 = t9209 + t9212 + t9215;
  t8733 = t7481*t6198;
  t8743 = -0.340999127418*t7377*t5599;
  t8744 = t7470*t5683;
  t8747 = t8733 + t8743 + t8744;
  t8699 = t7428*t6198;
  t8702 = t7382*t5599;
  t8703 = -0.340999127418*t7377*t5683;
  t8704 = t8699 + t8702 + t8703;
  t8670 = t7428*t7037;
  t8676 = t7382*t5565;
  t8685 = -0.340999127418*t7377*t5646;
  t8687 = t8670 + t8676 + t8685;
  t8641 = t7428*t5451;
  t8642 = t7382*t5479;
  t8643 = -0.340999127418*t7377*t5499;
  t8644 = t8641 + t8642 + t8643;
  t8721 = t7481*t7037;
  t8722 = -0.340999127418*t7377*t5565;
  t8723 = t7470*t5646;
  t8724 = t8721 + t8722 + t8723;
  t9298 = t7687*t7037;
  t9302 = t7655*t5565;
  t9303 = t7670*t5646;
  t9304 = t6208 + t6209 + t6222 + t9298 + t9302 + t9303;
  t8624 = t7481*t5451;
  t8631 = -0.340999127418*t7377*t5479;
  t8632 = t7470*t5499;
  t8637 = t8624 + t8631 + t8632;
  t9311 = -1.*t7687*t5451;
  t9312 = -1.*t7655*t5479;
  t9314 = -1.*t7670*t5499;
  t9316 = t6232 + t6233 + t6242 + t9311 + t9312 + t9314;
  t7608 = t7382*t4453;
  t7609 = -0.340999127418*t7377*t4461;
  t7610 = t7428*t4529;
  t7612 = t7608 + t7609 + t7610;
  t9359 = -1.*t7655*t4453;
  t9361 = -1.*t7670*t4461;
  t9363 = -1.*t7687*t4529;
  t9369 = t4843 + t3517 + t3524 + t6359 + t6360 + t9359 + t9361 + t9363;
  t7624 = -0.340999127418*t7377*t4453;
  t7626 = t7470*t4461;
  t7629 = t7481*t4529;
  t7635 = t7624 + t7626 + t7629;
  t9452 = 0. + var1[0] + t4633 + t1622 + t1812 + t4638 + t4639 + t7657 + t7672 + t7689;
  t9457 = -1.*t7655*t5271;
  t9460 = -1.*t7670*t5366;
  t9464 = -1.*t7687*t6081;
  t9465 = t3621 + t6520 + t3623 + t6521 + t6522 + t9457 + t9460 + t9464;
  t9471 = -1.*t7655*t4883;
  t9472 = -1.*t7670*t4832;
  t9475 = -1.*t7687*t7516;
  t9476 = 0. + t3636 + t6577 + t3640 + t3648 + t6591 + t6594 + t9471 + t9472 + t9475;
  t9480 = t7655*t5184;
  t9482 = t7670*t5212;
  t9483 = t7687*t5238;
  t9484 = t3676 + t6555 + t3683 + t6557 + t6558 + t9480 + t9482 + t9483;
  t9521 = -1.*t7670*t5001;
  t9522 = -1.*t7655*t5082;
  t9524 = -1.*t7687*t5959;
  t9525 = t3748 + t3751 + t6704 + t6710 + t9521 + t9522 + t9524;
  t9529 = t7670*t4930;
  t9535 = t7655*t4940;
  t9536 = t7687*t4966;
  t9537 = t3774 + t3775 + t6722 + t6729 + t9529 + t9535 + t9536;
  t9581 = -1.*t7670*t4771;
  t9582 = -1.*t7655*t4869;
  t9583 = -1.*t7687*t5794;
  t9584 = t3854 + t3856 + t6855 + t6861 + t9581 + t9582 + t9583;
  t9596 = t7670*t4708;
  t9599 = t7655*t4733;
  t9602 = t7687*t4739;
  t9603 = t3831 + t3840 + t6884 + t6892 + t9596 + t9599 + t9602;
  t9623 = t5867 + t3199 + t3209 + t5870 + t5871 + t8941 + t8942 + t8944;
  t9627 = t7655*t4453;
  t9628 = t7670*t4461;
  t9629 = t7687*t4529;
  t9630 = t6577 + t3944 + t3945 + t6980 + t6984 + t9627 + t9628 + t9629;
  t9675 = t8534*t4624;
  t9678 = t8545*t4679;
  t9681 = t8549*t6341;
  t9682 = t9675 + t9678 + t9681;
  t9686 = -1.*t8534*t4883;
  t9687 = -1.*t8545*t4832;
  t9694 = -1.*t8549*t7516;
  t9695 = t9686 + t9687 + t9694;
  t9729 = t7687*t5451;
  t9730 = t7655*t5479;
  t9731 = t7670*t5499;
  t9732 = t7046 + t7047 + t7048 + t9729 + t9730 + t9731;
  t9735 = -1.*t7687*t6198;
  t9736 = -1.*t7655*t5599;
  t9737 = -1.*t7670*t5683;
  t9740 = t7059 + t7060 + t7062 + t9735 + t9736 + t9737;
  t8813 = -0.366501*t7737;
  t8845 = 0.930418*t7766;
  t8862 = t8813 + t8845;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=var2[1];
  p_output1[19]=-1.*var2[0];
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=-1.*t78*var2[2] + t102*var1[2]*var2[3];
  p_output1[25]=-1.*t102*var2[2] - 1.*t78*var1[2]*var2[3];
  p_output1[26]=t78*var2[0] + t102*var2[1] + (-1.*t102*var1[0] + t78*var1[1])*var2[3];
  p_output1[27]=-1.*t78*var2[3];
  p_output1[28]=-1.*t102*var2[3];
  p_output1[29]=0;
  p_output1[30]=-1.*t251*var2[1] - 1.*t102*t228*var2[2] - 1.*t228*t78*var1[2]*var2[3] + (-1.*t228*var1[1] + t102*t251*var1[2])*var2[4];
  p_output1[31]=t251*var2[0] + t228*t78*var2[2] - 1.*t102*t228*var1[2]*var2[3] + (t228*var1[0] - 1.*t251*t78*var1[2])*var2[4];
  p_output1[32]=t102*t228*var2[0] - 1.*t228*t78*var2[1] + (t228*t78*var1[0] + t102*t228*var1[1])*var2[3] + (-1.*t102*t251*var1[0] + t251*t78*var1[1])*var2[4];
  p_output1[33]=-1.*t102*t228*var2[3] - 1.*t251*t78*var2[4];
  p_output1[34]=t228*t78*var2[3] - 1.*t102*t251*var2[4];
  p_output1[35]=-1.*t228*var2[4];
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=t251*var2[1] + t102*t228*var2[2] + (-0.091*t769 + t228*t78*var1[2])*var2[3] + (-0.091*t228*t613*t78 + t228*var1[1] - 1.*t102*t251*var1[2])*var2[4] - 0.091*t725*var2[5];
  p_output1[103]=-1.*t251*var2[0] - 1.*t228*t78*var2[2] + (-0.091*t994 + t102*t228*var1[2])*var2[3] + (-0.091*t102*t228*t613 - 1.*t228*var1[0] + t251*t78*var1[2])*var2[4] - 0.091*t943*var2[5];
  p_output1[104]=-1.*t102*t228*var2[0] + t228*t78*var2[1] + (-1.*t228*t78*var1[0] - 1.*t102*t228*var1[1])*var2[3] + (0.091*t251*t613 + t102*t251*var1[0] - 1.*t251*t78*var1[1])*var2[4] + 0.091*t228*t672*var2[5];
  p_output1[105]=t102*t228*var2[3] + t251*t78*var2[4];
  p_output1[106]=-1.*t228*t78*var2[3] + t102*t251*var2[4];
  p_output1[107]=t228*var2[4];
  p_output1[108]=(-0.366501*t1317 - 0.930418*t1341)*var2[1] + (-0.366501*(t1364 - 1.*t1312*t1442) - 0.930418*t1491)*var2[2] + (-0.041869*t1572 + 0.016493*t1583 - 0.366501*(t1317*t1817 + t1916*t1953) - 0.930418*(t1341*t1817 + t1916*t2042) - 0.084668*t102*t228)*var2[3] + (-0.041869*t2806 + 0.016493*t2826 - 0.366501*(t1317*t2851 + t1916*t2880 + t2316*t2902 + t2370*t2949) - 0.930418*(t1341*t2851 + t2486*t2949 + t1916*t3003 + t2316*t3048) - 0.084668*t251*t78)*var2[4] + (0.016493*t2132 - 0.041869*t2140 - 0.366501*(t1317*t2168 + t1916*t2207 + t1341*t2316 + t2349*t2370) - 0.930418*(t1341*t2168 + t1916*t2427 + t2316*t2457 + t2349*t2486))*var2[5] + (0.016493*t1953 - 0.041869*t2557 - 0.366501*(t1491*t1916 + t2316*t2576 + t2370*t2605 + t1317*t2618) - 0.930418*(t1317*t2316 + t1916*t2370 + t2486*t2605 + t1341*t2618))*var2[17];
  p_output1[109]=(-0.366501*t2457 - 0.930418*t2576)*var2[0] + t3116*var2[2] + (-0.041869*t1953 + 0.016493*t2042 - 0.366501*(t1572*t3168 + t1317*t3525) - 0.930418*(t1583*t3168 + t1341*t3525) + 0.084668*t228*t78)*var2[3] + (-0.084668*t102*t251 - 0.041869*t2880 + 0.016493*t3003 - 0.366501*(t2806*t3168 + t2902*t3213 + t1317*t3384 + t1953*t3436) - 0.930418*(t2826*t3168 + t3048*t3213 + t1341*t3384 + t2042*t3436))*var2[4] + (-0.041869*t2207 + 0.016493*t2427 - 0.366501*(t1317*t3149 + t2140*t3168 + t1341*t3213 + t1953*t3236) - 0.930418*(t1341*t3149 + t2132*t3168 + t2457*t3213 + t2042*t3236))*var2[5] + (-0.041869*t1491 + 0.016493*t2370 - 0.366501*(t2557*t3168 + t2576*t3213 + t1953*t3293 + t1317*t3318) - 0.930418*(t1953*t3168 + t1317*t3213 + t2042*t3293 + t1341*t3318))*var2[17];
  p_output1[110]=(-0.366501*t2370 - 0.930418*t2486)*var2[0] + (-0.366501*(-1.*t1312*t1810 + t2117) - 0.930418*t2557)*var2[1] + (-0.366501*(t1953*t3611 + t1572*t3651 + t1953*t3931 + t2370*t3951) - 0.930418*(t2042*t3611 + t1583*t3651 + t2042*t3931 + t2486*t3951))*var2[3] + (-0.084668*t228 - 0.041869*t2902 + 0.016493*t3048 - 0.366501*(t2880*t3611 + t1953*t3627 + t2806*t3651 + t2370*t3691) - 0.930418*(t3003*t3611 + t2042*t3627 + t2826*t3651 + t2486*t3691))*var2[4] + (-0.041869*t1341 + 0.016493*t2457 - 0.366501*(t2207*t3611 + t2140*t3651 + t1953*t3754 + t2370*t3779) - 0.930418*(t2427*t3611 + t2132*t3651 + t2042*t3754 + t2486*t3779))*var2[5] + (0.016493*t1317 - 0.041869*t2576 - 0.366501*(t1491*t3611 + t2557*t3651 + t2370*t3841 + t1953*t3859) - 0.930418*(t2370*t3611 + t1953*t3651 + t2486*t3841 + t2042*t3859))*var2[17];
  p_output1[111]=(-0.366501*t1572 - 0.930418*t1583)*var2[3] + (-0.366501*t2806 - 0.930418*t2826)*var2[4] + (-0.930418*t2132 - 0.366501*t2140)*var2[5] + (-0.930418*t1953 - 0.366501*t2557)*var2[17];
  p_output1[112]=t3116*var2[3] + (-0.366501*t2880 - 0.930418*t3003)*var2[4] + (-0.366501*t2207 - 0.930418*t2427)*var2[5] + (-0.366501*t1491 - 0.930418*t2370)*var2[17];
  p_output1[113]=(-0.366501*t2902 - 0.930418*t3048)*var2[4] + (-0.366501*t1341 - 0.930418*t2457)*var2[5] + (-0.930418*t1317 - 0.366501*t2576)*var2[17];
  p_output1[114]=(0.366501*t4252 - 0.930418*t4317)*var2[1] + (0.366501*(-0.340999127418*t2370*t4230 - 1.*t2486*t4246 + t4373) - 0.930418*(-0.340999127418*t2486*t4230 - 1.*t2370*t4281 + t4423))*var2[2] + (0.041869*t4453 + 0.016493*t4461 - 0.151852*t4529 + 0.366501*(t4617*t4624 + t4252*t4643) - 0.930418*(t4317*t4643 + t4617*t4679))*var2[3] + (0.041869*t5184 + 0.016493*t5212 - 0.151852*t5238 + 0.366501*(t4617*t5271 + t4252*t5297 + t4883*t5315 + t4852*t5343) - 0.930418*(t4317*t5297 + t4832*t5315 + t4617*t5366 + t4852*t5404))*var2[4] + (0.016493*t4930 + 0.041869*t4940 - 0.151852*t4966 - 0.930418*(t4617*t5001 + t4317*t5033 + t4832*t5041 + t4852*t5058) + 0.366501*(t4252*t5033 + t4883*t5041 + t4617*t5082 + t4852*t5100))*var2[5] + (0.016493*t4708 + 0.041869*t4733 - 0.151852*t4739 - 0.930418*(t4617*t4771 + t4317*t4788 + t4802*t4832 + t4838*t4852) + 0.366501*(t4252*t4788 + t4617*t4869 + t4802*t4883 + t4852*t4906))*var2[17] + (-0.151852*t5451 + 0.041869*t5479 + 0.016493*t5499 + 0.366501*(t4883*t5544 + t4852*t5565 + t4252*t5578 + t4617*t5599) - 0.930418*(t4832*t5544 + t4317*t5578 + t4852*t5646 + t4617*t5683))*var2[18];
  p_output1[115]=(0.366501*(t251*t4208 - 0.340999127418*t1317*t4230 - 1.*t1341*t4246) - 0.930418*(-0.340999127418*t1341*t4230 + t251*t4266 - 1.*t1317*t4281))*var2[0] + t5755*var2[2] + (0.041869*t4624 + 0.016493*t4679 - 0.151852*t6341 + 0.366501*(t4453*t5838 + t4252*t6364) - 0.930418*(t4461*t5838 + t4317*t6364))*var2[3] + (0.041869*t5271 + 0.016493*t5366 - 0.151852*t6081 + 0.366501*(t5184*t5838 + t5343*t5880 + t4252*t6109 + t4624*t6121) - 0.930418*(t5212*t5838 + t5404*t5880 + t4317*t6109 + t4679*t6121))*var2[4] + (0.016493*t5001 + 0.041869*t5082 - 0.151852*t5959 + 0.366501*(t4940*t5838 + t5100*t5880 + t4252*t5969 + t4624*t5995) - 0.930418*(t4930*t5838 + t5058*t5880 + t4317*t5969 + t4679*t5995))*var2[5] + (0.016493*t4771 + 0.041869*t4869 - 0.151852*t5794 - 0.930418*(t4708*t5838 + t4317*t5851 + t4679*t5858 + t4838*t5880) + 0.366501*(t4733*t5838 + t4252*t5851 + t4624*t5858 + t4906*t5880))*var2[17] + (0.041869*t5599 + 0.016493*t5683 - 0.151852*t6198 + 0.366501*(t5479*t5838 + t5565*t5880 + t4624*t6223 + t4252*t6254) - 0.930418*(t5499*t5838 + t5646*t5880 + t4679*t6223 + t4317*t6254))*var2[18];
  p_output1[116]=(-0.930418*t4832 + 0.366501*t4883)*var2[0] + (0.366501*(-0.340999127418*t1953*t4230 - 1.*t2042*t4246 - 1.*t228*t4208*t78) - 0.930418*(-0.340999127418*t2042*t4230 - 1.*t1953*t4281 - 1.*t228*t4266*t78))*var2[1] + (-0.930418*(t4679*t6534 + t4461*t6604 + t4679*t6963 + t4832*t6988) + 0.366501*(t4624*t6534 + t4453*t6604 + t4624*t6963 + t4883*t6988))*var2[3] + (0.041869*t5343 + 0.016493*t5404 - 0.151852*t6514 + 0.366501*(t4624*t6531 + t5271*t6534 + t4883*t6562 + t5184*t6604) - 0.930418*(t4679*t6531 + t5366*t6534 + t4832*t6562 + t5212*t6604))*var2[4] + (0.016493*t5058 + 0.041869*t5100 - 0.151852*t6697 - 0.930418*(t5001*t6534 + t4930*t6604 + t4679*t6720 + t4832*t6731) + 0.366501*(t5082*t6534 + t4940*t6604 + t4624*t6720 + t4883*t6731))*var2[5] + (0.016493*t4838 + 0.041869*t4906 - 0.151852*t6845 - 0.930418*(t4771*t6534 + t4708*t6604 + t4679*t6864 + t4832*t6900) + 0.366501*(t4869*t6534 + t4733*t6604 + t4624*t6864 + t4883*t6900))*var2[17] + (0.041869*t5565 + 0.016493*t5646 - 0.151852*t7037 + 0.366501*(t5599*t6534 + t5479*t6604 + t4883*t7051 + t4624*t7071) - 0.930418*(t5683*t6534 + t5499*t6604 + t4832*t7051 + t4679*t7071))*var2[18];
  p_output1[117]=(0.366501*t4453 - 0.930418*t4461)*var2[3] + (0.366501*t5184 - 0.930418*t5212)*var2[4] + (-0.930418*t4930 + 0.366501*t4940)*var2[5] + (-0.930418*t4708 + 0.366501*t4733)*var2[17] + (0.366501*t5479 - 0.930418*t5499)*var2[18];
  p_output1[118]=t5755*var2[3] + (0.366501*t5271 - 0.930418*t5366)*var2[4] + (-0.930418*t5001 + 0.366501*t5082)*var2[5] + (-0.930418*t4771 + 0.366501*t4869)*var2[17] + (0.366501*t5599 - 0.930418*t5683)*var2[18];
  p_output1[119]=(0.366501*t5343 - 0.930418*t5404)*var2[4] + (-0.930418*t5058 + 0.366501*t5100)*var2[5] + (-0.930418*t4838 + 0.366501*t4906)*var2[17] + (0.366501*t5565 - 0.930418*t5646)*var2[18];
  p_output1[120]=(-0.366501*t7453 + 0.930418*t7492)*var2[1] + (-0.366501*(0.340999127418*t4832*t7377 - 1.*t4883*t7382 - 1.*t7428*t7516) + 0.930418*(0.340999127418*t4883*t7377 - 1.*t4832*t7470 - 1.*t7481*t7516))*var2[2] + (0.236705*(t4453*t7557 + t4461*t7568 + t4529*t7585) + 0.03708*t7612 + 0.014606*t7635 - 0.366501*(t7453*t7690 + t7701*t7737) + 0.930418*(t7492*t7690 + t7701*t7766))*var2[3] + (0.236705*(t5184*t7557 + t5212*t7568 + t5238*t7585) + 0.03708*t8269 + 0.014606*t8284 - 0.366501*(t7453*t8334 + t7701*t8366 + t7924*t8385 + t7943*t8400) + 0.930418*(t7492*t8334 + t8006*t8400 + t7701*t8420 + t7924*t8439))*var2[4] + (0.236705*(t4940*t7557 + t4930*t7568 + t4966*t7585) + 0.03708*t8068 + 0.014606*t8077 - 0.366501*(t7453*t8097 + t7701*t8128 + t7924*t8151 + t7943*t8168) + 0.930418*(t7492*t8097 + t8006*t8168 + t7701*t8190 + t7924*t8224))*var2[5] + (0.236705*(t4733*t7557 + t4708*t7568 + t4739*t7585) + 0.03708*t7853 + 0.014606*t7861 - 0.366501*(t7453*t7897 + t7701*t7907 + t7914*t7924 + t7937*t7943) + 0.930418*(t7492*t7897 + t7701*t7981 + t7924*t7995 + t7937*t8006))*var2[17] + (0.236705*(t5479*t7557 + t5499*t7568 + t5451*t7585) + 0.014606*t8637 + 0.03708*t8644 - 0.366501*(t7924*t8687 + t7943*t8693 + t7701*t8704 + t7453*t8714) + 0.930418*(t8006*t8693 + t7492*t8714 + t7924*t8724 + t7701*t8747))*var2[18] + (0.236705*(0.930418*t4624*t7371 + 0.366501*t4679*t7371 - 1.000000637725*t6341*t7413) + 0.03708*t8459 + 0.014606*t8473 - 0.366501*(t7701*t8508 + t7924*t8523 + t7943*t8552 + t7453*t8574) + 0.930418*(t8006*t8552 + t7492*t8574 + t7701*t8588 + t7924*t8604))*var2[19];
  p_output1[121]=(-0.366501*(0.340999127418*t4317*t7377 - 1.*t4252*t7382 - 1.*t7428*t7436) + 0.930418*(0.340999127418*t4252*t7377 - 1.*t4317*t7470 - 1.*t7436*t7481))*var2[0] + t8862*var2[2] + (0.236705*(t4624*t7557 + t4679*t7568 + t6341*t7585) + 0.03708*t7737 + 0.014606*t7766 - 0.366501*(t7612*t8922 + t7453*t9369) + 0.930418*(t7635*t8922 + t7492*t9369))*var2[3] + (0.236705*(t5271*t7557 + t5366*t7568 + t6081*t7585) + 0.03708*t8366 + 0.014606*t8420 - 0.366501*(t8269*t8922 + t8385*t8952 + t7453*t9119 + t7737*t9133) + 0.930418*(t8284*t8922 + t8439*t8952 + t7492*t9119 + t7766*t9133))*var2[4] + (0.236705*(t5082*t7557 + t5001*t7568 + t5959*t7585) + 0.03708*t8128 + 0.014606*t8190 - 0.366501*(t8068*t8922 + t8151*t8952 + t7453*t9010 + t7737*t9025) + 0.930418*(t8077*t8922 + t8224*t8952 + t7492*t9010 + t7766*t9025))*var2[5] + (0.236705*(t4869*t7557 + t4771*t7568 + t5794*t7585) + 0.03708*t7907 + 0.014606*t7981 - 0.366501*(t7453*t8898 + t7853*t8922 + t7914*t8952 + t7737*t8960) + 0.930418*(t7492*t8898 + t7861*t8922 + t7995*t8952 + t7766*t8960))*var2[17] + (0.236705*(t5599*t7557 + t5683*t7568 + t6198*t7585) + 0.03708*t8704 + 0.014606*t8747 - 0.366501*(t8644*t8922 + t8687*t8952 + t7737*t9304 + t7453*t9316) + 0.930418*(t8637*t8922 + t8724*t8952 + t7766*t9304 + t7492*t9316))*var2[18] + (0.236705*(0.366501*t4832*t7371 + 0.930418*t4883*t7371 - 1.000000637725*t7413*t7516) + 0.03708*t8508 + 0.014606*t8588 - 0.366501*(t8459*t8922 + t8523*t8952 + t7737*t9206 + t7453*t9225) + 0.930418*(t8473*t8922 + t8604*t8952 + t7766*t9206 + t7492*t9225))*var2[19];
  p_output1[122]=(-0.366501*t7943 + 0.930418*t8006)*var2[0] + (-0.366501*(0.340999127418*t4679*t7377 - 1.*t4624*t7382 - 1.*t6341*t7428) + 0.930418*(0.340999127418*t4624*t7377 - 1.*t4679*t7470 - 1.*t6341*t7481))*var2[1] + (-0.366501*(t7737*t9452 + t7612*t9476 + t7737*t9623 + t7943*t9630) + 0.930418*(t7766*t9452 + t7635*t9476 + t7766*t9623 + t8006*t9630))*var2[3] + (0.236705*(t5343*t7557 + t5404*t7568 + t6514*t7585) + 0.03708*t8385 + 0.014606*t8439 - 0.366501*(t8366*t9452 + t7737*t9465 + t8269*t9476 + t7943*t9484) + 0.930418*(t8420*t9452 + t7766*t9465 + t8284*t9476 + t8006*t9484))*var2[4] + (0.236705*(t5100*t7557 + t5058*t7568 + t6697*t7585) + 0.03708*t8151 + 0.014606*t8224 - 0.366501*(t8128*t9452 + t8068*t9476 + t7737*t9525 + t7943*t9537) + 0.930418*(t8190*t9452 + t8077*t9476 + t7766*t9525 + t8006*t9537))*var2[5] + (0.236705*(t4906*t7557 + t4838*t7568 + t6845*t7585) + 0.03708*t7914 + 0.014606*t7995 - 0.366501*(t7907*t9452 + t7853*t9476 + t7737*t9584 + t7943*t9603) + 0.930418*(t7981*t9452 + t7861*t9476 + t7766*t9584 + t8006*t9603))*var2[17] + (0.236705*(t5565*t7557 + t5646*t7568 + t7037*t7585) + 0.03708*t8687 + 0.014606*t8724 - 0.366501*(t8704*t9452 + t8644*t9476 + t7943*t9732 + t7737*t9740) + 0.930418*(t8747*t9452 + t8637*t9476 + t8006*t9732 + t7766*t9740))*var2[18] + (0.236705*(0.930418*t4252*t7371 + 0.366501*t4317*t7371 - 1.000000637725*t7413*t7436) + 0.03708*t8523 + 0.014606*t8604 - 0.366501*(t8508*t9452 + t8459*t9476 + t7943*t9682 + t7737*t9695) + 0.930418*(t8588*t9452 + t8473*t9476 + t8006*t9682 + t7766*t9695))*var2[19];
  p_output1[123]=(-0.366501*t7612 + 0.930418*t7635)*var2[3] + (-0.366501*t8269 + 0.930418*t8284)*var2[4] + (-0.366501*t8068 + 0.930418*t8077)*var2[5] + (-0.366501*t7853 + 0.930418*t7861)*var2[17] + (0.930418*t8637 - 0.366501*t8644)*var2[18] + (-0.366501*t8459 + 0.930418*t8473)*var2[19];
  p_output1[124]=t8862*var2[3] + (-0.366501*t8366 + 0.930418*t8420)*var2[4] + (-0.366501*t8128 + 0.930418*t8190)*var2[5] + (-0.366501*t7907 + 0.930418*t7981)*var2[17] + (-0.366501*t8704 + 0.930418*t8747)*var2[18] + (-0.366501*t8508 + 0.930418*t8588)*var2[19];
  p_output1[125]=(-0.366501*t8385 + 0.930418*t8439)*var2[4] + (-0.366501*t8151 + 0.930418*t8224)*var2[5] + (-0.366501*t7914 + 0.930418*t7995)*var2[17] + (-0.366501*t8687 + 0.930418*t8724)*var2[18] + (-0.366501*t8523 + 0.930418*t8604)*var2[19];
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void dJs_right_knee_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
