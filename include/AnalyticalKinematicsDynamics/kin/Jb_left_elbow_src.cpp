/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:08:58 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jb_left_elbow_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t479;
  double t521;
  double t529;
  double t290;
  double t302;
  double t336;
  double t463;
  double t849;
  double t782;
  double t800;
  double t811;
  double t842;
  double t885;
  double t892;
  double t906;
  double t924;
  double t1005;
  double t1076;
  double t1110;
  double t1139;
  double t1177;
  double t1192;
  double t1197;
  double t1242;
  double t959;
  double t1315;
  double t1318;
  double t1356;
  double t1370;
  double t1388;
  double t1400;
  double t1440;
  double t1470;
  double t1490;
  double t1517;
  double t1567;
  double t1572;
  double t1573;
  double t1574;
  double t447;
  double t189;
  double t466;
  double t473;
  double t944;
  double t995;
  double t1002;
  double t1244;
  double t1253;
  double t1310;
  double t1523;
  double t1538;
  double t1578;
  double t1580;
  double t1581;
  double t1582;
  double t1637;
  double t1639;
  double t1646;
  double t1697;
  double t1799;
  double t1895;
  double t2036;
  double t2072;
  double t2153;
  double t2167;
  double t2215;
  double t2230;
  double t2276;
  double t2281;
  double t2285;
  double t2306;
  double t2483;
  double t257;
  double t283;
  double t1560;
  double t1939;
  double t1998;
  double t2008;
  double t2307;
  double t2372;
  double t94;
  double t2505;
  double t2508;
  double t2566;
  double t2581;
  double t2590;
  double t2598;
  double t2611;
  double t2617;
  double t80;
  double t2691;
  double t2717;
  double t2760;
  double t2461;
  double t2626;
  double t2666;
  double t2780;
  double t29;
  double t3183;
  double t3217;
  double t3243;
  double t3251;
  double t3331;
  double t3374;
  double t3377;
  double t3383;
  double t3418;
  double t3427;
  double t3428;
  double t3488;
  double t3273;
  double t3402;
  double t3507;
  double t3543;
  double t3581;
  double t3594;
  double t3599;
  double t3600;
  double t3678;
  double t3691;
  double t3700;
  double t3702;
  double t3544;
  double t3647;
  double t3709;
  double t3753;
  double t3771;
  double t3794;
  double t3831;
  double t3832;
  double t2821;
  double t2833;
  double t2864;
  double t2875;
  double t2968;
  double t2971;
  double t2979;
  double t2980;
  double t3058;
  double t3929;
  double t3960;
  double t3999;
  double t3756;
  double t3834;
  double t3859;
  double t4216;
  double t4301;
  double t4311;
  double t4172;
  double t4179;
  double t4182;
  double t4328;
  double t4337;
  double t4364;
  double t4188;
  double t4324;
  double t4365;
  double t4382;
  double t4413;
  double t4425;
  double t4433;
  double t4471;
  double t4537;
  double t4564;
  double t4582;
  double t4590;
  double t4395;
  double t4527;
  double t4655;
  double t4667;
  double t4735;
  double t4780;
  double t4804;
  double t4809;
  double t4947;
  double t5058;
  double t5072;
  double t4701;
  double t4822;
  double t4894;
  double t2681;
  double t2794;
  double t2810;
  double t2957;
  double t2977;
  double t3009;
  double t3010;
  double t3025;
  double t3067;
  double t3079;
  double t3091;
  double t3095;
  double t3111;
  double t3921;
  double t4003;
  double t4006;
  double t4023;
  double t4070;
  double t4079;
  double t4081;
  double t4108;
  double t4128;
  double t4148;
  double t4152;
  double t4156;
  double t4157;
  double t4946;
  double t5074;
  double t5087;
  double t5131;
  double t5134;
  double t5136;
  double t5146;
  double t5166;
  double t5167;
  double t5236;
  double t5238;
  double t5371;
  double t5383;
  double t5739;
  double t5741;
  double t5745;
  double t5954;
  double t6054;
  double t6071;
  double t6080;
  double t6082;
  double t6097;
  double t6100;
  double t6127;
  double t6137;
  double t6141;
  double t6158;
  double t6160;
  double t6169;
  double t6185;
  double t6187;
  double t6191;
  double t6192;
  double t6205;
  double t6230;
  double t6246;
  double t6406;
  double t5985;
  double t5916;
  double t5949;
  double t5971;
  double t5974;
  double t6001;
  double t6020;
  double t6116;
  double t6183;
  double t6257;
  double t6264;
  double t6336;
  double t6346;
  double t6366;
  double t6373;
  double t6408;
  double t6417;
  double t6431;
  double t6460;
  double t6480;
  double t6500;
  double t6508;
  double t6517;
  double t6559;
  double t6563;
  double t6641;
  double t6659;
  double t6669;
  double t6671;
  double t6672;
  double t6673;
  double t5758;
  double t5802;
  double t5834;
  double t5884;
  double t5891;
  double t6322;
  double t6502;
  double t6695;
  double t6703;
  double t6778;
  double t6821;
  double t6829;
  double t6839;
  double t6852;
  double t6853;
  double t6872;
  double t5704;
  double t5708;
  double t5732;
  double t6892;
  double t6893;
  double t6908;
  double t6913;
  double t6915;
  double t5813;
  double t5818;
  double t6766;
  double t6877;
  double t6879;
  double t6923;
  double t6936;
  double t6939;
  double t6945;
  double t6946;
  double t6947;
  double t6965;
  double t6987;
  double t6988;
  double t6997;
  double t6882;
  double t6919;
  double t6920;
  double t6966;
  double t7012;
  double t7013;
  double t7027;
  double t7028;
  double t7034;
  double t5677;
  double t5697;
  double t5701;
  double t6922;
  double t7079;
  double t7165;
  double t7189;
  double t7261;
  double t7290;
  double t7386;
  double t7340;
  double t7433;
  double t7400;
  double t7494;
  double t7467;
  double t7818;
  double t7820;
  double t7831;
  double t7832;
  double t7842;
  double t7851;
  double t7853;
  double t7857;
  double t7926;
  double t7930;
  double t7933;
  double t7937;
  double t7944;
  double t7947;
  double t7948;
  double t7950;
  double t8000;
  double t8004;
  double t8007;
  double t8008;
  double t8020;
  double t8023;
  double t8028;
  double t8035;
  double t8124;
  double t8126;
  double t8128;
  double t8130;
  double t8143;
  double t8151;
  double t8152;
  double t8154;
  double t8232;
  double t8233;
  double t8240;
  double t8244;
  double t8249;
  double t8252;
  double t8253;
  double t8254;
  double t8330;
  double t8335;
  double t8338;
  double t8341;
  double t8346;
  double t8348;
  double t8351;
  double t8357;
  t479 = Cos(var1[16]);
  t521 = -1.*t479;
  t529 = 1. + t521;
  t290 = Cos(var1[15]);
  t302 = -1.*t290;
  t336 = 1. + t302;
  t463 = Sin(var1[15]);
  t849 = Sin(var1[16]);
  t782 = -0.9890740084840001*t529;
  t800 = 1. + t782;
  t811 = 0.380588*t800;
  t842 = -0.004158319780035616*t529;
  t885 = -0.994522*t849;
  t892 = 0. + t885;
  t906 = 0.92388*t892;
  t924 = t811 + t842 + t906;
  t1005 = -0.010926102783999999*t529;
  t1076 = 1. + t1005;
  t1110 = -0.040001*t1076;
  t1139 = 0.0395641761067022*t529;
  t1177 = 0.104528*t849;
  t1192 = 0. + t1177;
  t1197 = 0.92388*t1192;
  t1242 = t1110 + t1139 + t1197;
  t959 = 0.05226439969100001*t336;
  t1315 = -1.0000001112680001*t529;
  t1318 = 1. + t1315;
  t1356 = 0.92388*t1318;
  t1370 = -0.104528*t849;
  t1388 = 0. + t1370;
  t1400 = -0.040001*t1388;
  t1440 = 0.994522*t849;
  t1470 = 0. + t1440;
  t1490 = 0.380588*t1470;
  t1517 = t1356 + t1400 + t1490;
  t1567 = Cos(var1[14]);
  t1572 = -1.*t1567;
  t1573 = 1. + t1572;
  t1574 = -0.051978134642000004*t336;
  t447 = -0.49726168403800003*t336;
  t189 = Sin(var1[14]);
  t466 = 0.073913*t463;
  t473 = t447 + t466;
  t944 = t473*t924;
  t995 = 0.703234*t463;
  t1002 = t959 + t995;
  t1244 = t1002*t1242;
  t1253 = -0.500001190325*t336;
  t1310 = 1. + t1253;
  t1523 = t1310*t1517;
  t1538 = 0. + t944 + t1244 + t1523;
  t1578 = -0.707107*t463;
  t1580 = t1574 + t1578;
  t1581 = t1580*t924;
  t1582 = -0.9945383682050002*t336;
  t1637 = 1. + t1582;
  t1639 = t1637*t1242;
  t1646 = -0.703234*t463;
  t1697 = t959 + t1646;
  t1799 = t1697*t1517;
  t1895 = 0. + t1581 + t1639 + t1799;
  t2036 = -0.5054634410180001*t336;
  t2072 = 1. + t2036;
  t2153 = t2072*t924;
  t2167 = 0.707107*t463;
  t2215 = t1574 + t2167;
  t2230 = t2215*t1242;
  t2276 = -0.073913*t463;
  t2281 = t447 + t2276;
  t2285 = t2281*t1517;
  t2306 = 0. + t2153 + t2230 + t2285;
  t2483 = Cos(var1[13]);
  t257 = -0.994522*t189;
  t283 = 0. + t257;
  t1560 = t283*t1538;
  t1939 = 0.103955395616*t1573*t1895;
  t1998 = -0.9890740084840001*t1573;
  t2008 = 1. + t1998;
  t2307 = t2008*t2306;
  t2372 = 0. + t1560 + t1939 + t2307;
  t94 = Sin(var1[13]);
  t2505 = 0.104528*t189;
  t2508 = 0. + t2505;
  t2566 = t2508*t1538;
  t2581 = -0.010926102783999999*t1573;
  t2590 = 1. + t2581;
  t2598 = t2590*t1895;
  t2611 = 0.103955395616*t1573*t2306;
  t2617 = 0. + t2566 + t2598 + t2611;
  t80 = Cos(var1[5]);
  t2691 = t2483*t2372;
  t2717 = -1.*t94*t2617;
  t2760 = 0. + t2691 + t2717;
  t2461 = t94*t2372;
  t2626 = t2483*t2617;
  t2666 = 0. + t2461 + t2626;
  t2780 = Sin(var1[5]);
  t29 = Sin(var1[3]);
  t3183 = -0.918819*t800;
  t3217 = 0.010039180465428352*t529;
  t3243 = 0.382684*t892;
  t3251 = t3183 + t3217 + t3243;
  t3331 = 0.096572*t1076;
  t3374 = -0.0955161926444975*t529;
  t3377 = 0.382684*t1192;
  t3383 = t3331 + t3374 + t3377;
  t3418 = 0.382684*t1318;
  t3427 = 0.096572*t1388;
  t3428 = -0.918819*t1470;
  t3488 = t3418 + t3427 + t3428;
  t3273 = t473*t3251;
  t3402 = t1002*t3383;
  t3507 = t1310*t3488;
  t3543 = 0. + t3273 + t3402 + t3507;
  t3581 = t1580*t3251;
  t3594 = t1637*t3383;
  t3599 = t1697*t3488;
  t3600 = 0. + t3581 + t3594 + t3599;
  t3678 = t2072*t3251;
  t3691 = t2215*t3383;
  t3700 = t2281*t3488;
  t3702 = 0. + t3678 + t3691 + t3700;
  t3544 = t283*t3543;
  t3647 = 0.103955395616*t1573*t3600;
  t3709 = t2008*t3702;
  t3753 = 0. + t3544 + t3647 + t3709;
  t3771 = t2508*t3543;
  t3794 = t2590*t3600;
  t3831 = 0.103955395616*t1573*t3702;
  t3832 = 0. + t3771 + t3794 + t3831;
  t2821 = Cos(var1[3]);
  t2833 = Cos(var1[4]);
  t2864 = -1.0000001112680001*t1573;
  t2875 = 1. + t2864;
  t2968 = -0.104528*t189;
  t2971 = 0. + t2968;
  t2979 = 0.994522*t189;
  t2980 = 0. + t2979;
  t3058 = Sin(var1[4]);
  t3929 = t2483*t3753;
  t3960 = -1.*t94*t3832;
  t3999 = 0. + t3929 + t3960;
  t3756 = t94*t3753;
  t3834 = t2483*t3832;
  t3859 = 0. + t3756 + t3834;
  t4216 = 0.994522*t1076;
  t4301 = 0.010866249592949247*t529;
  t4311 = t4216 + t4301;
  t4172 = 0.104528*t800;
  t4179 = 0.10338592795881554*t529;
  t4182 = t4172 + t4179;
  t4328 = 0.994522*t1388;
  t4337 = 0.104528*t1470;
  t4364 = t4328 + t4337;
  t4188 = t4182*t473;
  t4324 = t4311*t1002;
  t4365 = t1310*t4364;
  t4382 = 0. + t4188 + t4324 + t4365;
  t4413 = t1637*t4311;
  t4425 = t4182*t1580;
  t4433 = t1697*t4364;
  t4471 = 0. + t4413 + t4425 + t4433;
  t4537 = t2072*t4182;
  t4564 = t4311*t2215;
  t4582 = t2281*t4364;
  t4590 = 0. + t4537 + t4564 + t4582;
  t4395 = t283*t4382;
  t4527 = 0.103955395616*t1573*t4471;
  t4655 = t2008*t4590;
  t4667 = 0. + t4395 + t4527 + t4655;
  t4735 = t2508*t4382;
  t4780 = t2590*t4471;
  t4804 = 0.103955395616*t1573*t4590;
  t4809 = 0. + t4735 + t4780 + t4804;
  t4947 = t2483*t4667;
  t5058 = -1.*t94*t4809;
  t5072 = 0. + t4947 + t5058;
  t4701 = t94*t4667;
  t4822 = t2483*t4809;
  t4894 = 0. + t4701 + t4822;
  t2681 = t80*t2666;
  t2794 = -1.*t2760*t2780;
  t2810 = 0. + t2681 + t2794;
  t2957 = t2875*t1538;
  t2977 = t2971*t1895;
  t3009 = t2980*t2306;
  t3010 = 0. + t2957 + t2977 + t3009;
  t3025 = t2833*t3010;
  t3067 = t80*t2760;
  t3079 = t2666*t2780;
  t3091 = 0. + t3067 + t3079;
  t3095 = t3058*t3091;
  t3111 = 0. + t3025 + t3095;
  t3921 = t80*t3859;
  t4003 = -1.*t3999*t2780;
  t4006 = 0. + t3921 + t4003;
  t4023 = t2875*t3543;
  t4070 = t2971*t3600;
  t4079 = t2980*t3702;
  t4081 = 0. + t4023 + t4070 + t4079;
  t4108 = t2833*t4081;
  t4128 = t80*t3999;
  t4148 = t3859*t2780;
  t4152 = 0. + t4128 + t4148;
  t4156 = t3058*t4152;
  t4157 = 0. + t4108 + t4156;
  t4946 = t80*t4894;
  t5074 = -1.*t5072*t2780;
  t5087 = 0. + t4946 + t5074;
  t5131 = t2875*t4382;
  t5134 = t2971*t4471;
  t5136 = t2980*t4590;
  t5146 = 0. + t5131 + t5134 + t5136;
  t5166 = t2833*t5146;
  t5167 = t80*t5072;
  t5236 = t4894*t2780;
  t5238 = 0. + t5167 + t5236;
  t5371 = t3058*t5238;
  t5383 = 0. + t5166 + t5371;
  t5739 = -1.*t5146*t3058;
  t5741 = t2833*t5238;
  t5745 = 0. + t5739 + t5741;
  t5954 = -0.05226439969100001*t336;
  t6054 = -4.817066759205414e-7*var1[16];
  t6071 = 0.250125*t1076;
  t6080 = 0.007103279865835288*t529;
  t6082 = 0.190987300194*t1388;
  t6097 = 0.290567*t1192;
  t6100 = t6054 + t6071 + t6080 + t6082 + t6097;
  t6127 = -5.06291820800569e-8*var1[16];
  t6137 = 0.206868*t800;
  t6141 = 0.16302610521286587*t529;
  t6158 = 0.290567*t892;
  t6160 = 0.190987300194*t1470;
  t6169 = t6127 + t6137 + t6141 + t6158 + t6160;
  t6185 = 0.290567*t1318;
  t6187 = 0.19098732144477495*t529;
  t6191 = 0.137024246638*t892;
  t6192 = 0.250125*t1388;
  t6205 = -0.014401763312*t1192;
  t6230 = 0.206868*t1470;
  t6246 = 0. + t6185 + t6187 + t6191 + t6192 + t6205 + t6230;
  t6406 = 0.051978134642000004*t336;
  t5985 = 0.49726168403800003*t336;
  t5916 = 1.568745163810375e-7*var1[15];
  t5949 = 0.08219200580743281*t336;
  t5971 = t5954 + t1646;
  t5974 = 0.231098203479*t5971;
  t6001 = t5985 + t2276;
  t6020 = 0.18957839082800002*t6001;
  t6116 = t1002*t6100;
  t6183 = t473*t6169;
  t6257 = t1310*t6246;
  t6264 = t5916 + t5949 + t5974 + t6020 + t6116 + t6183 + t6257;
  t6336 = 1.639789470231751e-8*var1[15];
  t6346 = 0.22983603018311177*t336;
  t6366 = t5954 + t995;
  t6373 = 0.164383620275*t6366;
  t6408 = t6406 + t2167;
  t6417 = 0.18957839082800002*t6408;
  t6431 = t1637*t6100;
  t6460 = t1580*t6169;
  t6480 = t1697*t6246;
  t6500 = t6336 + t6346 + t6373 + t6417 + t6431 + t6460 + t6480;
  t6508 = -1.5601527583902087e-7*var1[15];
  t6517 = 0.09582494577057615*t336;
  t6559 = t6406 + t1578;
  t6563 = 0.231098203479*t6559;
  t6641 = t5985 + t466;
  t6659 = 0.164383620275*t6641;
  t6669 = t2215*t6100;
  t6671 = t2072*t6169;
  t6672 = t2281*t6246;
  t6673 = t6508 + t6517 + t6563 + t6659 + t6669 + t6671 + t6672;
  t5758 = -1.*t2483;
  t5802 = 1. + t5758;
  t5834 = 1.1924972351948546e-8*var1[14];
  t5884 = 0.38315655000705834*t1573;
  t5891 = -0.05650052807*t2980;
  t6322 = t283*t6264;
  t6502 = 0.103955395616*t1573*t6500;
  t6695 = t2008*t6673;
  t6703 = t5834 + t5884 + t5891 + t6322 + t6502 + t6695;
  t6778 = 1.1345904784751044e-7*var1[14];
  t6821 = -0.04027119345689465*t1573;
  t6829 = -0.05650052807*t2971;
  t6839 = t2508*t6264;
  t6852 = t2590*t6500;
  t6853 = 0.103955395616*t1573*t6673;
  t6872 = t6778 + t6821 + t6829 + t6839 + t6852 + t6853;
  t5704 = -1.*t4081*t3058;
  t5708 = t2833*t4152;
  t5732 = 0. + t5704 + t5708;
  t6892 = 0.4*t5802;
  t6893 = 0.12*t94;
  t6908 = t2483*t6703;
  t6913 = -1.*t94*t6872;
  t6915 = 0. + t6892 + t6893 + t6908 + t6913;
  t5813 = 0.12*t5802;
  t5818 = -0.4*t94;
  t6766 = t94*t6703;
  t6877 = t2483*t6872;
  t6879 = 0. + t5813 + t5818 + t6766 + t6877;
  t6923 = -0.056500534356700764*t1573;
  t6936 = 0.38315650737400003*t283;
  t6939 = -0.040271188976*t2508;
  t6945 = t2875*t6264;
  t6946 = t2971*t6500;
  t6947 = t2980*t6673;
  t6965 = 0. + t6923 + t6936 + t6939 + t6945 + t6946 + t6947;
  t6987 = t80*t6915;
  t6988 = t6879*t2780;
  t6997 = 0. + t6987 + t6988;
  t6882 = t80*t6879;
  t6919 = -1.*t6915*t2780;
  t6920 = 0. + t6882 + t6919;
  t6966 = -1.*t6965*t3058;
  t7012 = t2833*t6997;
  t7013 = 0. + t6966 + t7012;
  t7027 = t2833*t6965;
  t7028 = t3058*t6997;
  t7034 = 0. + t7027 + t7028;
  t5677 = -1.*t3010*t3058;
  t5697 = t2833*t3091;
  t5701 = 0. + t5677 + t5697;
  t6922 = -1.*t4006*t6920;
  t7079 = t5087*t6920;
  t7165 = -1.*t5087*t6920;
  t7189 = t6920*t2810;
  t7261 = t4006*t6920;
  t7290 = -1.*t6920*t2810;
  t7386 = t5146*t6965;
  t7340 = -1.*t4081*t6965;
  t7433 = t6965*t3010;
  t7400 = -1.*t5146*t6965;
  t7494 = -1.*t6965*t3010;
  t7467 = t4081*t6965;
  t7818 = t4382*t6264;
  t7820 = t4471*t6500;
  t7831 = t4590*t6673;
  t7832 = t7818 + t7820 + t7831;
  t7842 = -1.*t3543*t6264;
  t7851 = -1.*t3600*t6500;
  t7853 = -1.*t3702*t6673;
  t7857 = t7842 + t7851 + t7853;
  t7926 = t6264*t1538;
  t7930 = t6500*t1895;
  t7933 = t6673*t2306;
  t7937 = t7926 + t7930 + t7933;
  t7944 = -1.*t4382*t6264;
  t7947 = -1.*t4471*t6500;
  t7948 = -1.*t4590*t6673;
  t7950 = t7944 + t7947 + t7948;
  t8000 = -1.*t6264*t1538;
  t8004 = -1.*t6500*t1895;
  t8007 = -1.*t6673*t2306;
  t8008 = t8000 + t8004 + t8007;
  t8020 = t3543*t6264;
  t8023 = t3600*t6500;
  t8028 = t3702*t6673;
  t8035 = t8020 + t8023 + t8028;
  t8124 = -1.*t6100*t3383;
  t8126 = -1.*t3251*t6169;
  t8128 = -1.*t3488*t6246;
  t8130 = t8124 + t8126 + t8128;
  t8143 = t4311*t6100;
  t8151 = t4182*t6169;
  t8152 = t4364*t6246;
  t8154 = t8143 + t8151 + t8152;
  t8232 = t6100*t1242;
  t8233 = t924*t6169;
  t8240 = t6246*t1517;
  t8244 = t8232 + t8233 + t8240;
  t8249 = -1.*t4311*t6100;
  t8252 = -1.*t4182*t6169;
  t8253 = -1.*t4364*t6246;
  t8254 = t8249 + t8252 + t8253;
  t8330 = -1.*t6100*t1242;
  t8335 = -1.*t924*t6169;
  t8338 = -1.*t6246*t1517;
  t8341 = t8330 + t8335 + t8338;
  t8346 = t6100*t3383;
  t8348 = t3251*t6169;
  t8351 = t3488*t6246;
  t8357 = t8346 + t8348 + t8351;
  p_output1[0]=0. - 1.*t2810*t29 + t2821*t3111;
  p_output1[1]=0. - 1.*t29*t4006 + t2821*t4157;
  p_output1[2]=0. - 1.*t29*t5087 + t2821*t5383;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0. + t2810*t2821 + t29*t3111;
  p_output1[7]=0. + t2821*t4006 + t29*t4157;
  p_output1[8]=0. + t2821*t5087 + t29*t5383;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t5701;
  p_output1[13]=t5732;
  p_output1[14]=t5745;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=t5745*(t6922 - 1.*t5732*t7013 - 1.*t4157*t7034) + t5732*(t5745*t7013 + t5383*t7034 + t7079);
  p_output1[19]=t5701*(-1.*t5745*t7013 - 1.*t5383*t7034 + t7165) + t5745*(t5701*t7013 + t3111*t7034 + t7189);
  p_output1[20]=t5701*(t5732*t7013 + t4157*t7034 + t7261) + t5732*(-1.*t5701*t7013 - 1.*t3111*t7034 + t7290);
  p_output1[21]=t5701;
  p_output1[22]=t5732;
  p_output1[23]=t5745;
  p_output1[24]=t5087*(t6922 - 1.*t4152*t6997 + t7340) + t4006*(t5238*t6997 + t7079 + t7386);
  p_output1[25]=t2810*(-1.*t5238*t6997 + t7165 + t7400) + t5087*(t3091*t6997 + t7189 + t7433);
  p_output1[26]=t2810*(t4152*t6997 + t7261 + t7467) + t4006*(-1.*t3091*t6997 + t7290 + t7494);
  p_output1[27]=t2810;
  p_output1[28]=t4006;
  p_output1[29]=t5087;
  p_output1[30]=t5146*(-1.*t3859*t6879 - 1.*t3999*t6915 + t7340) + t4081*(t4894*t6879 + t5072*t6915 + t7386);
  p_output1[31]=t3010*(-1.*t4894*t6879 - 1.*t5072*t6915 + t7400) + t5146*(t2666*t6879 + t2760*t6915 + t7433);
  p_output1[32]=t3010*(t3859*t6879 + t3999*t6915 + t7467) + t4081*(-1.*t2666*t6879 - 1.*t2760*t6915 + t7494);
  p_output1[33]=t3010;
  p_output1[34]=t4081;
  p_output1[35]=t5146;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0.12*t2372 - 0.4*t2617 - 1.*t5146*(-1.*t3753*t6703 - 1.*t3832*t6872 + t7340) - 1.*t4081*(t4667*t6703 + t4809*t6872 + t7386);
  p_output1[79]=0.12*t3753 - 0.4*t3832 - 1.*t3010*(-1.*t4667*t6703 - 1.*t4809*t6872 + t7400) - 1.*t5146*(t2372*t6703 + t2617*t6872 + t7433);
  p_output1[80]=0.12*t4667 - 0.4*t4809 - 1.*t3010*(t3753*t6703 + t3832*t6872 + t7467) - 1.*t4081*(-1.*t2372*t6703 - 1.*t2617*t6872 + t7494);
  p_output1[81]=0. - 1.*t1538*t2875 - 1.*t1895*t2971 - 1.*t2306*t2980;
  p_output1[82]=0. - 1.*t2875*t3543 - 1.*t2971*t3600 - 1.*t2980*t3702;
  p_output1[83]=0. - 1.*t2875*t4382 - 1.*t2971*t4471 - 1.*t2980*t4590;
  p_output1[84]=-0.385267*t1538 + 0.005906*t1895 - 0.056191*t2306 + 0.994522*(t3600*t7832 + t4471*t7857) + 0.104528*(t3702*t7832 + t4590*t7857);
  p_output1[85]=-0.385267*t3543 + 0.005906*t3600 - 0.056191*t3702 + 0.994522*(t4471*t7937 + t1895*t7950) + 0.104528*(t4590*t7937 + t2306*t7950);
  p_output1[86]=-0.385267*t4382 + 0.005906*t4471 - 0.056191*t4590 + 0.994522*(t3600*t8008 + t1895*t8035) + 0.104528*(t3702*t8008 + t2306*t8035);
  p_output1[87]=0. + 0.994522*t1895 + 0.104528*t2306;
  p_output1[88]=0. + 0.994522*t3600 + 0.104528*t3702;
  p_output1[89]=0. + 0.994522*t4471 + 0.104528*t4590;
  p_output1[90]=0.249652*t1242 - 0.176528*t1517 - 0.703234*(t4182*t8130 + t3251*t8154) + 0.073913*(t4311*t8130 + t3383*t8154) + 0.707107*(t4364*t8130 + t3488*t8154) - 0.151261*t924;
  p_output1[91]=-0.151261*t3251 + 0.249652*t3383 - 0.176528*t3488 + 0.073913*(t4311*t8244 + t1242*t8254) + 0.707107*(t4364*t8244 + t1517*t8254) - 0.703234*(t4182*t8244 + t8254*t924);
  p_output1[92]=-0.151261*t4182 + 0.249652*t4311 - 0.176528*t4364 + 0.073913*(t3383*t8341 + t1242*t8357) + 0.707107*(t3488*t8341 + t1517*t8357) - 0.703234*(t3251*t8341 + t8357*t924);
  p_output1[93]=0. + 0.073913*t1242 + 0.707107*t1517 - 0.703234*t924;
  p_output1[94]=0. - 0.703234*t3251 + 0.073913*t3383 + 0.707107*t3488;
  p_output1[95]=0. - 0.703234*t4182 + 0.073913*t4311 + 0.707107*t4364;
  p_output1[96]=0.0005206045180660632;
  p_output1[97]=0.1080000621822442;
  p_output1[98]=-7.214438398073231e-7;
  p_output1[99]=2.2794199999731646e-7;
  p_output1[100]=6.661520000061927e-7;
  p_output1[101]=1.0000001112680001;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void Jb_left_elbow_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
