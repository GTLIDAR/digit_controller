/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:12:39 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "T_right_toe_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t123;
  double t218;
  double t225;
  double t221;
  double t228;
  double t192;
  double t202;
  double t205;
  double t247;
  double t224;
  double t230;
  double t231;
  double t210;
  double t260;
  double t277;
  double t278;
  double t111;
  double t125;
  double t128;
  double t239;
  double t279;
  double t282;
  double t313;
  double t314;
  double t315;
  double t462;
  double t463;
  double t473;
  double t151;
  double t174;
  double t188;
  double t309;
  double t311;
  double t312;
  double t332;
  double t345;
  double t386;
  double t387;
  double t389;
  double t391;
  double t394;
  double t396;
  double t400;
  double t432;
  double t481;
  double t484;
  double t493;
  double t496;
  double t499;
  double t501;
  double t502;
  double t503;
  double t519;
  double t525;
  double t568;
  double t569;
  double t573;
  double t60;
  double t93;
  double t114;
  double t119;
  double t347;
  double t352;
  double t354;
  double t444;
  double t474;
  double t476;
  double t533;
  double t535;
  double t575;
  double t579;
  double t587;
  double t589;
  double t590;
  double t603;
  double t607;
  double t650;
  double t660;
  double t665;
  double t667;
  double t679;
  double t698;
  double t707;
  double t710;
  double t711;
  double t790;
  double t791;
  double t814;
  double t97;
  double t107;
  double t566;
  double t651;
  double t657;
  double t658;
  double t714;
  double t715;
  double t731;
  double t737;
  double t746;
  double t747;
  double t749;
  double t750;
  double t766;
  double t774;
  double t833;
  double t855;
  double t879;
  double t882;
  double t908;
  double t910;
  double t924;
  double t925;
  double t938;
  double t939;
  double t957;
  double t970;
  double t979;
  double t10;
  double t78;
  double t79;
  double t717;
  double t718;
  double t724;
  double t778;
  double t829;
  double t830;
  double t941;
  double t945;
  double t980;
  double t991;
  double t996;
  double t1003;
  double t1005;
  double t1007;
  double t1010;
  double t1012;
  double t1031;
  double t1034;
  double t1036;
  double t1037;
  double t1038;
  double t1039;
  double t1040;
  double t1045;
  double t33;
  double t42;
  double t1233;
  double t1235;
  double t1239;
  double t1253;
  double t1265;
  double t1271;
  double t1251;
  double t1290;
  double t1292;
  double t1302;
  double t1303;
  double t1306;
  double t1232;
  double t1300;
  double t1312;
  double t1324;
  double t1354;
  double t1363;
  double t1364;
  double t1365;
  double t1371;
  double t1373;
  double t1381;
  double t1383;
  double t1329;
  double t1367;
  double t1392;
  double t1395;
  double t1406;
  double t1410;
  double t1416;
  double t1424;
  double t1441;
  double t1443;
  double t1447;
  double t1448;
  double t1398;
  double t1427;
  double t1460;
  double t1465;
  double t1468;
  double t1472;
  double t1481;
  double t1485;
  double t1505;
  double t1507;
  double t1508;
  double t1530;
  double t1022;
  double t1029;
  double t1082;
  double t1104;
  double t1467;
  double t1499;
  double t1552;
  double t1553;
  double t1118;
  double t1119;
  double t1572;
  double t1577;
  double t1579;
  double t1586;
  double t1601;
  double t1605;
  double t1613;
  double t1614;
  double t1140;
  double t1142;
  double t1153;
  double t1170;
  double t1185;
  double t1187;
  double t1717;
  double t1718;
  double t1721;
  double t1726;
  double t1728;
  double t1730;
  double t1714;
  double t1722;
  double t1733;
  double t1734;
  double t1743;
  double t1746;
  double t1750;
  double t1754;
  double t1768;
  double t1788;
  double t1791;
  double t1794;
  double t1740;
  double t1756;
  double t1796;
  double t1797;
  double t1805;
  double t1811;
  double t1817;
  double t1822;
  double t1825;
  double t1829;
  double t1833;
  double t1845;
  double t1798;
  double t1824;
  double t1846;
  double t1856;
  double t1899;
  double t1908;
  double t1918;
  double t1921;
  double t1927;
  double t1932;
  double t1933;
  double t1939;
  double t1860;
  double t1925;
  double t1940;
  double t1944;
  double t1952;
  double t1958;
  double t1959;
  double t1963;
  double t1967;
  double t1968;
  double t1969;
  double t1970;
  double t948;
  double t1015;
  double t1050;
  double t1051;
  double t1110;
  double t1121;
  double t1132;
  double t1135;
  double t1149;
  double t1183;
  double t1212;
  double t1217;
  double t1569;
  double t1593;
  double t1615;
  double t1617;
  double t1626;
  double t1642;
  double t1644;
  double t1666;
  double t1697;
  double t1698;
  double t1700;
  double t1703;
  double t1948;
  double t1964;
  double t1974;
  double t1980;
  double t1982;
  double t1983;
  double t1986;
  double t1987;
  double t1997;
  double t2001;
  double t2006;
  double t2009;
  double t2096;
  double t2098;
  double t2099;
  double t2112;
  double t2114;
  double t2115;
  double t2119;
  double t2135;
  double t2144;
  double t2154;
  double t2164;
  double t2172;
  double t2174;
  double t2177;
  double t2183;
  double t2188;
  double t2189;
  double t2191;
  double t2196;
  double t2198;
  double t2201;
  double t2202;
  double t2211;
  double t2215;
  double t2216;
  double t2219;
  double t2222;
  double t2224;
  double t2227;
  double t2228;
  double t2234;
  double t2235;
  double t2245;
  double t2256;
  double t2261;
  double t2275;
  double t2276;
  double t2282;
  double t2301;
  double t2304;
  double t2308;
  double t2317;
  double t2319;
  double t2320;
  double t2321;
  double t2322;
  double t2324;
  double t2325;
  double t2327;
  double t2329;
  double t2331;
  double t2332;
  double t2333;
  double t2336;
  double t2349;
  double t2353;
  double t2361;
  double t2363;
  double t2379;
  double t2382;
  double t2386;
  double t2387;
  double t2394;
  double t2395;
  double t2397;
  double t2400;
  t123 = Cos(var1[3]);
  t218 = Cos(var1[5]);
  t225 = Sin(var1[3]);
  t221 = Sin(var1[4]);
  t228 = Sin(var1[5]);
  t192 = Cos(var1[18]);
  t202 = -1.*t192;
  t205 = 1. + t202;
  t247 = Cos(var1[17]);
  t224 = t123*t218*t221;
  t230 = t225*t228;
  t231 = t224 + t230;
  t210 = Sin(var1[17]);
  t260 = -1.*t218*t225;
  t277 = t123*t221*t228;
  t278 = t260 + t277;
  t111 = Sin(var1[19]);
  t125 = Cos(var1[4]);
  t128 = Sin(var1[18]);
  t239 = -1.*t210*t231;
  t279 = t247*t278;
  t282 = t239 + t279;
  t313 = t247*t231;
  t314 = t210*t278;
  t315 = t313 + t314;
  t462 = Cos(var1[19]);
  t463 = -1.*t462;
  t473 = 1. + t463;
  t151 = -0.366501*t128;
  t174 = 0. + t151;
  t188 = t123*t125*t174;
  t309 = 0.340999127418*t205*t282;
  t311 = -0.134322983001*t205;
  t312 = 1. + t311;
  t332 = t312*t315;
  t345 = t188 + t309 + t332;
  t386 = 0.930418*t128;
  t387 = 0. + t386;
  t389 = t123*t125*t387;
  t391 = -0.8656776547239999*t205;
  t394 = 1. + t391;
  t396 = t394*t282;
  t400 = 0.340999127418*t205*t315;
  t432 = t389 + t396 + t400;
  t481 = -1.000000637725*t205;
  t484 = 1. + t481;
  t493 = t484*t123*t125;
  t496 = -0.930418*t128;
  t499 = 0. + t496;
  t501 = t499*t282;
  t502 = 0.366501*t128;
  t503 = 0. + t502;
  t519 = t503*t315;
  t525 = t493 + t501 + t519;
  t568 = Cos(var1[20]);
  t569 = -1.*t568;
  t573 = 1. + t569;
  t60 = Sin(var1[21]);
  t93 = Sin(var1[20]);
  t114 = 0.930418*t111;
  t119 = 0. + t114;
  t347 = t119*t345;
  t352 = 0.366501*t111;
  t354 = 0. + t352;
  t444 = t354*t432;
  t474 = -1.000000637725*t473;
  t476 = 1. + t474;
  t533 = t476*t525;
  t535 = t347 + t444 + t533;
  t575 = -0.8656776547239999*t473;
  t579 = 1. + t575;
  t587 = t579*t345;
  t589 = -0.340999127418*t473*t432;
  t590 = -0.930418*t111;
  t603 = 0. + t590;
  t607 = t603*t525;
  t650 = t587 + t589 + t607;
  t660 = -0.340999127418*t473*t345;
  t665 = -0.134322983001*t473;
  t667 = 1. + t665;
  t679 = t667*t432;
  t698 = -0.366501*t111;
  t707 = 0. + t698;
  t710 = t707*t525;
  t711 = t660 + t679 + t710;
  t790 = Cos(var1[21]);
  t791 = -1.*t790;
  t814 = 1. + t791;
  t97 = 0.366501*t93;
  t107 = 0. + t97;
  t566 = t107*t535;
  t651 = -0.340999127418*t573*t650;
  t657 = -0.134322983001*t573;
  t658 = 1. + t657;
  t714 = t658*t711;
  t715 = t566 + t651 + t714;
  t731 = 0.930418*t93;
  t737 = 0. + t731;
  t746 = t737*t535;
  t747 = -0.8656776547239999*t573;
  t749 = 1. + t747;
  t750 = t749*t650;
  t766 = -0.340999127418*t573*t711;
  t774 = t746 + t750 + t766;
  t833 = -1.000000637725*t573;
  t855 = 1. + t833;
  t879 = t855*t535;
  t882 = -0.930418*t93;
  t908 = 0. + t882;
  t910 = t908*t650;
  t924 = -0.366501*t93;
  t925 = 0. + t924;
  t938 = t925*t711;
  t939 = t879 + t910 + t938;
  t957 = Cos(var1[22]);
  t970 = -1.*t957;
  t979 = 1. + t970;
  t10 = Sin(var1[22]);
  t78 = -0.366501*t60;
  t79 = 0. + t78;
  t717 = t79*t715;
  t718 = -0.930418*t60;
  t724 = 0. + t718;
  t778 = t724*t774;
  t829 = -1.000000637725*t814;
  t830 = 1. + t829;
  t941 = t830*t939;
  t945 = t717 + t778 + t941;
  t980 = -0.134322983001*t814;
  t991 = 1. + t980;
  t996 = t991*t715;
  t1003 = -0.340999127418*t814*t774;
  t1005 = 0.366501*t60;
  t1007 = 0. + t1005;
  t1010 = t1007*t939;
  t1012 = t996 + t1003 + t1010;
  t1031 = -0.340999127418*t814*t715;
  t1034 = -0.8656776547239999*t814;
  t1036 = 1. + t1034;
  t1037 = t1036*t774;
  t1038 = 0.930418*t60;
  t1039 = 0. + t1038;
  t1040 = t1039*t939;
  t1045 = t1031 + t1037 + t1040;
  t33 = 0.930418*t10;
  t42 = 0. + t33;
  t1233 = t218*t225*t221;
  t1235 = -1.*t123*t228;
  t1239 = t1233 + t1235;
  t1253 = t123*t218;
  t1265 = t225*t221*t228;
  t1271 = t1253 + t1265;
  t1251 = -1.*t210*t1239;
  t1290 = t247*t1271;
  t1292 = t1251 + t1290;
  t1302 = t247*t1239;
  t1303 = t210*t1271;
  t1306 = t1302 + t1303;
  t1232 = t125*t174*t225;
  t1300 = 0.340999127418*t205*t1292;
  t1312 = t312*t1306;
  t1324 = t1232 + t1300 + t1312;
  t1354 = t125*t387*t225;
  t1363 = t394*t1292;
  t1364 = 0.340999127418*t205*t1306;
  t1365 = t1354 + t1363 + t1364;
  t1371 = t484*t125*t225;
  t1373 = t499*t1292;
  t1381 = t503*t1306;
  t1383 = t1371 + t1373 + t1381;
  t1329 = t119*t1324;
  t1367 = t354*t1365;
  t1392 = t476*t1383;
  t1395 = t1329 + t1367 + t1392;
  t1406 = t579*t1324;
  t1410 = -0.340999127418*t473*t1365;
  t1416 = t603*t1383;
  t1424 = t1406 + t1410 + t1416;
  t1441 = -0.340999127418*t473*t1324;
  t1443 = t667*t1365;
  t1447 = t707*t1383;
  t1448 = t1441 + t1443 + t1447;
  t1398 = t107*t1395;
  t1427 = -0.340999127418*t573*t1424;
  t1460 = t658*t1448;
  t1465 = t1398 + t1427 + t1460;
  t1468 = t737*t1395;
  t1472 = t749*t1424;
  t1481 = -0.340999127418*t573*t1448;
  t1485 = t1468 + t1472 + t1481;
  t1505 = t855*t1395;
  t1507 = t908*t1424;
  t1508 = t925*t1448;
  t1530 = t1505 + t1507 + t1508;
  t1022 = -0.8656776547239999*t979;
  t1029 = 1. + t1022;
  t1082 = 0.366501*t10;
  t1104 = 0. + t1082;
  t1467 = t79*t1465;
  t1499 = t724*t1485;
  t1552 = t830*t1530;
  t1553 = t1467 + t1499 + t1552;
  t1118 = -0.134322983001*t979;
  t1119 = 1. + t1118;
  t1572 = t991*t1465;
  t1577 = -0.340999127418*t814*t1485;
  t1579 = t1007*t1530;
  t1586 = t1572 + t1577 + t1579;
  t1601 = -0.340999127418*t814*t1465;
  t1605 = t1036*t1485;
  t1613 = t1039*t1530;
  t1614 = t1601 + t1605 + t1613;
  t1140 = -1.000000637725*t979;
  t1142 = 1. + t1140;
  t1153 = -0.366501*t10;
  t1170 = 0. + t1153;
  t1185 = -0.930418*t10;
  t1187 = 0. + t1185;
  t1717 = -1.*t125*t218*t210;
  t1718 = t247*t125*t228;
  t1721 = t1717 + t1718;
  t1726 = t247*t125*t218;
  t1728 = t125*t210*t228;
  t1730 = t1726 + t1728;
  t1714 = -1.*t174*t221;
  t1722 = 0.340999127418*t205*t1721;
  t1733 = t312*t1730;
  t1734 = t1714 + t1722 + t1733;
  t1743 = -1.*t387*t221;
  t1746 = t394*t1721;
  t1750 = 0.340999127418*t205*t1730;
  t1754 = t1743 + t1746 + t1750;
  t1768 = -1.*t484*t221;
  t1788 = t499*t1721;
  t1791 = t503*t1730;
  t1794 = t1768 + t1788 + t1791;
  t1740 = t119*t1734;
  t1756 = t354*t1754;
  t1796 = t476*t1794;
  t1797 = t1740 + t1756 + t1796;
  t1805 = t579*t1734;
  t1811 = -0.340999127418*t473*t1754;
  t1817 = t603*t1794;
  t1822 = t1805 + t1811 + t1817;
  t1825 = -0.340999127418*t473*t1734;
  t1829 = t667*t1754;
  t1833 = t707*t1794;
  t1845 = t1825 + t1829 + t1833;
  t1798 = t107*t1797;
  t1824 = -0.340999127418*t573*t1822;
  t1846 = t658*t1845;
  t1856 = t1798 + t1824 + t1846;
  t1899 = t737*t1797;
  t1908 = t749*t1822;
  t1918 = -0.340999127418*t573*t1845;
  t1921 = t1899 + t1908 + t1918;
  t1927 = t855*t1797;
  t1932 = t908*t1822;
  t1933 = t925*t1845;
  t1939 = t1927 + t1932 + t1933;
  t1860 = t79*t1856;
  t1925 = t724*t1921;
  t1940 = t830*t1939;
  t1944 = t1860 + t1925 + t1940;
  t1952 = t991*t1856;
  t1958 = -0.340999127418*t814*t1921;
  t1959 = t1007*t1939;
  t1963 = t1952 + t1958 + t1959;
  t1967 = -0.340999127418*t814*t1856;
  t1968 = t1036*t1921;
  t1969 = t1039*t1939;
  t1970 = t1967 + t1968 + t1969;
  t948 = t42*t945;
  t1015 = -0.340999127418*t979*t1012;
  t1050 = t1029*t1045;
  t1051 = t948 + t1015 + t1050;
  t1110 = t1104*t945;
  t1121 = t1119*t1012;
  t1132 = -0.340999127418*t979*t1045;
  t1135 = t1110 + t1121 + t1132;
  t1149 = t1142*t945;
  t1183 = t1170*t1012;
  t1212 = t1187*t1045;
  t1217 = t1149 + t1183 + t1212;
  t1569 = t42*t1553;
  t1593 = -0.340999127418*t979*t1586;
  t1615 = t1029*t1614;
  t1617 = t1569 + t1593 + t1615;
  t1626 = t1104*t1553;
  t1642 = t1119*t1586;
  t1644 = -0.340999127418*t979*t1614;
  t1666 = t1626 + t1642 + t1644;
  t1697 = t1142*t1553;
  t1698 = t1170*t1586;
  t1700 = t1187*t1614;
  t1703 = t1697 + t1698 + t1700;
  t1948 = t42*t1944;
  t1964 = -0.340999127418*t979*t1963;
  t1974 = t1029*t1970;
  t1980 = t1948 + t1964 + t1974;
  t1982 = t1104*t1944;
  t1983 = t1119*t1963;
  t1986 = -0.340999127418*t979*t1970;
  t1987 = t1982 + t1983 + t1986;
  t1997 = t1142*t1944;
  t2001 = t1170*t1963;
  t2006 = t1187*t1970;
  t2009 = t1997 + t2001 + t2006;
  t2096 = -0.04500040093286238*t205;
  t2098 = -0.07877663122399998*t499;
  t2099 = 0.031030906668*t503;
  t2112 = 0. + t2096 + t2098 + t2099;
  t2114 = -0.091*t210;
  t2115 = 0. + t2114;
  t2119 = -1.*t247;
  t2135 = 1. + t2119;
  t2144 = -0.091*t2135;
  t2154 = 0. + t2144;
  t2164 = 1.296332362046933e-7*var1[18];
  t2172 = -0.07877668146182712*t205;
  t2174 = -0.045000372235*t387;
  t2177 = t2164 + t2172 + t2174;
  t2183 = 3.2909349868922137e-7*var1[18];
  t2188 = 0.03103092645718495*t205;
  t2189 = -0.045000372235*t174;
  t2191 = t2183 + t2188 + t2189;
  t2196 = -1.296332362046933e-7*var1[19];
  t2198 = -0.14128592423750855*t473;
  t2201 = -0.045000372235*t603;
  t2202 = t2196 + t2198 + t2201;
  t2211 = 3.2909349868922137e-7*var1[19];
  t2215 = -0.055653945343889656*t473;
  t2216 = -0.045000372235*t707;
  t2219 = t2211 + t2215 + t2216;
  t2222 = -0.04500040093286238*t473;
  t2224 = -0.055653909852*t354;
  t2227 = -0.141285834136*t119;
  t2228 = 0. + t2222 + t2224 + t2227;
  t2234 = 0.039853038461262744*t573;
  t2235 = -0.22023459268999998*t908;
  t2245 = -0.086752619205*t925;
  t2256 = 0. + t2234 + t2235 + t2245;
  t2261 = 6.295460977284962e-8*var1[20];
  t2275 = -0.22023473313910558*t573;
  t2276 = 0.039853013046*t737;
  t2282 = t2261 + t2275 + t2276;
  t2301 = -1.5981976069815686e-7*var1[20];
  t2304 = -0.08675267452931407*t573;
  t2308 = 0.039853013046*t107;
  t2317 = t2301 + t2304 + t2308;
  t2319 = 5.7930615939377813e-8*var1[21];
  t2320 = -0.23261833304643187*t814;
  t2321 = -0.262809976934*t1007;
  t2322 = t2319 + t2320 + t2321;
  t2324 = -2.281945176511838e-8*var1[21];
  t2325 = -0.5905366811997648*t814;
  t2327 = -0.262809976934*t1039;
  t2329 = t2324 + t2325 + t2327;
  t2331 = -0.26281014453449253*t814;
  t2332 = -0.5905363046000001*t724;
  t2333 = -0.23261818470000004*t79;
  t2336 = 0. + t2331 + t2332 + t2333;
  t2349 = 0.06199697675299678*t979;
  t2353 = -0.823260828522*t1187;
  t2361 = -0.324290713329*t1170;
  t2363 = 0. + t2349 + t2353 + t2361;
  t2379 = 7.500378623168247e-8*var1[22];
  t2382 = -0.32429092013729516*t979;
  t2386 = 0.061996937216*t1104;
  t2387 = t2379 + t2382 + t2386;
  t2394 = -2.95447451120871e-8*var1[22];
  t2395 = -0.8232613535360118*t979;
  t2397 = 0.061996937216*t42;
  t2400 = t2394 + t2395 + t2397;
  p_output1[0]=0.553471*t1051 + 0.218018*t1135 + 0.803828*t1217;
  p_output1[1]=0.553471*t1617 + 0.218018*t1666 + 0.803828*t1703;
  p_output1[2]=0.553471*t1980 + 0.218018*t1987 + 0.803828*t2009;
  p_output1[3]=0.;
  p_output1[4]=-0.747896*t1051 - 0.294604*t1135 + 0.594863*t1217;
  p_output1[5]=-0.747896*t1617 - 0.294604*t1666 + 0.594863*t1703;
  p_output1[6]=-0.747896*t1980 - 0.294604*t1987 + 0.594863*t2009;
  p_output1[7]=0.;
  p_output1[8]=-0.366501*t1051 + 0.930418*t1135;
  p_output1[9]=-0.366501*t1617 + 0.930418*t1666;
  p_output1[10]=-0.366501*t1980 + 0.930418*t1987;
  p_output1[11]=0.;
  p_output1[12]=0. - 0.79249*t1051 - 0.402633*t1135 + 0.061884*t1217 + t123*t125*t2112 + t2115*t231 + t1012*t2387 + t1045*t2400 + t2154*t278 + t2177*t282 + t2191*t315 + t2202*t345 + t2219*t432 + t2228*t525 + t2256*t535 + t2282*t650 + t2317*t711 + t2322*t715 + t2329*t774 + t2336*t939 + t2363*t945 + var1[0];
  p_output1[13]=0. - 0.79249*t1617 - 0.402633*t1666 + 0.061884*t1703 + t1239*t2115 + t1271*t2154 + t1292*t2177 + t1306*t2191 + t1324*t2202 + t1365*t2219 + t1383*t2228 + t125*t2112*t225 + t1395*t2256 + t1424*t2282 + t1448*t2317 + t1465*t2322 + t1485*t2329 + t1530*t2336 + t1553*t2363 + t1586*t2387 + t1614*t2400 + var1[1];
  p_output1[14]=0. - 0.79249*t1980 - 0.402633*t1987 + 0.061884*t2009 + t1721*t2177 + t125*t2115*t218 + t1730*t2191 + t1734*t2202 - 1.*t2112*t221 + t1754*t2219 + t1794*t2228 + t1797*t2256 + t125*t2154*t228 + t1822*t2282 + t1845*t2317 + t1856*t2322 + t1921*t2329 + t1939*t2336 + t1944*t2363 + t1963*t2387 + t1970*t2400 + var1[2];
  p_output1[15]=1.;
}



void T_right_toe_pitch_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
