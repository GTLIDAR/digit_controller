/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:59:36 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "AMWorld_left_toe_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t882;
  double t527;
  double t1200;
  double t647;
  double t1214;
  double t488;
  double t505;
  double t509;
  double t523;
  double t1617;
  double t1693;
  double t1731;
  double t774;
  double t1479;
  double t1480;
  double t1793;
  double t425;
  double t440;
  double t442;
  double t1601;
  double t1859;
  double t1930;
  double t1979;
  double t2022;
  double t2041;
  double t2185;
  double t2200;
  double t2639;
  double t2650;
  double t2661;
  double t2701;
  double t2778;
  double t2781;
  double t2892;
  double t2908;
  double t2913;
  double t2914;
  double t1950;
  double t1962;
  double t1968;
  double t2176;
  double t2241;
  double t2244;
  double t2251;
  double t2272;
  double t2916;
  double t2351;
  double t2386;
  double t2407;
  double t2486;
  double t2489;
  double t2514;
  double t2524;
  double t2547;
  double t330;
  double t378;
  double t397;
  double t221;
  double t2286;
  double t2313;
  double t2325;
  double t2632;
  double t2919;
  double t2937;
  double t3021;
  double t3033;
  double t3042;
  double t3180;
  double t3199;
  double t3228;
  double t3242;
  double t3243;
  double t3264;
  double t3272;
  double t3293;
  double t3303;
  double t3304;
  double t3351;
  double t3353;
  double t3429;
  double t3469;
  double t3483;
  double t3486;
  double t3488;
  double t3499;
  double t3698;
  double t3701;
  double t3704;
  double t3040;
  double t3048;
  double t3086;
  double t3310;
  double t3312;
  double t3323;
  double t3554;
  double t3555;
  double t3577;
  double t3589;
  double t3601;
  double t3617;
  double t3638;
  double t3665;
  double t3667;
  double t3668;
  double t3719;
  double t3728;
  double t3741;
  double t3753;
  double t3758;
  double t3775;
  double t3783;
  double t3789;
  double t3826;
  double t3830;
  double t3853;
  double t3862;
  double t3908;
  double t28;
  double t284;
  double t328;
  double t3560;
  double t3565;
  double t3572;
  double t3669;
  double t3714;
  double t3716;
  double t3831;
  double t3839;
  double t3941;
  double t3945;
  double t3947;
  double t3948;
  double t3951;
  double t3958;
  double t3960;
  double t3971;
  double t3998;
  double t4002;
  double t4003;
  double t4004;
  double t4009;
  double t4012;
  double t4014;
  double t4018;
  double t4040;
  double t4045;
  double t3981;
  double t3982;
  double t4091;
  double t4093;
  double t4098;
  double t4106;
  double t4107;
  double t4108;
  double t4028;
  double t4033;
  double t32;
  double t145;
  double t4143;
  double t4147;
  double t4151;
  double t4123;
  double t4137;
  double t4154;
  double t4180;
  double t4185;
  double t4186;
  double t4189;
  double t4195;
  double t4200;
  double t4205;
  double t4207;
  double t4213;
  double t4184;
  double t4197;
  double t4214;
  double t4220;
  double t4227;
  double t4229;
  double t4239;
  double t4240;
  double t4296;
  double t4299;
  double t4301;
  double t4302;
  double t4273;
  double t4277;
  double t4303;
  double t4313;
  double t4330;
  double t4338;
  double t4340;
  double t4342;
  double t4345;
  double t4349;
  double t4352;
  double t4363;
  double t4322;
  double t4343;
  double t4364;
  double t4365;
  double t4386;
  double t4396;
  double t4397;
  double t4398;
  double t4385;
  double t4400;
  double t4419;
  double t4428;
  double t4444;
  double t4450;
  double t4479;
  double t4480;
  double t4482;
  double t4486;
  double t3852;
  double t3980;
  double t4022;
  double t4024;
  double t4034;
  double t4050;
  double t4057;
  double t4063;
  double t4562;
  double t4564;
  double t4544;
  double t4547;
  double t4555;
  double t4556;
  double t4584;
  double t4587;
  double t4594;
  double t4595;
  double t4598;
  double t4599;
  double t4600;
  double t4603;
  double t4611;
  double t4617;
  double t4618;
  double t4622;
  double t4597;
  double t4606;
  double t4623;
  double t4628;
  double t4636;
  double t4641;
  double t4645;
  double t4654;
  double t4656;
  double t4657;
  double t4658;
  double t4662;
  double t4632;
  double t4655;
  double t4664;
  double t4672;
  double t4683;
  double t4687;
  double t4691;
  double t4694;
  double t4732;
  double t4733;
  double t4736;
  double t4737;
  double t4729;
  double t4730;
  double t4742;
  double t4743;
  double t4746;
  double t4751;
  double t4753;
  double t4756;
  double t4763;
  double t4779;
  double t4788;
  double t4793;
  double t4745;
  double t4757;
  double t4798;
  double t4803;
  double t4810;
  double t4812;
  double t4814;
  double t4818;
  double t4808;
  double t4819;
  double t4820;
  double t4827;
  double t4835;
  double t4836;
  double t4863;
  double t4866;
  double t4869;
  double t4872;
  double t4552;
  double t4560;
  double t4572;
  double t4573;
  double t4939;
  double t4940;
  double t4944;
  double t4945;
  double t4947;
  double t4951;
  double t4956;
  double t4959;
  double t4962;
  double t4963;
  double t4964;
  double t4965;
  double t4946;
  double t4961;
  double t4978;
  double t4979;
  double t4987;
  double t4989;
  double t4992;
  double t4995;
  double t5000;
  double t5009;
  double t5010;
  double t5011;
  double t4981;
  double t4997;
  double t5015;
  double t5023;
  double t5033;
  double t5034;
  double t5040;
  double t5045;
  double t5106;
  double t5111;
  double t5116;
  double t5117;
  double t5091;
  double t5099;
  double t5120;
  double t5121;
  double t5123;
  double t5131;
  double t5136;
  double t5138;
  double t5142;
  double t5144;
  double t5145;
  double t5149;
  double t5122;
  double t5139;
  double t5151;
  double t5152;
  double t5157;
  double t5165;
  double t5170;
  double t5173;
  double t5156;
  double t5178;
  double t5180;
  double t5183;
  double t5186;
  double t5188;
  double t5208;
  double t5215;
  double t5219;
  double t5221;
  double t5282;
  double t5287;
  double t5291;
  double t5273;
  double t5274;
  double t5276;
  double t5277;
  double t5292;
  double t5295;
  double t5309;
  double t5311;
  double t5312;
  double t5337;
  double t5338;
  double t5350;
  double t5357;
  double t5301;
  double t5313;
  double t5315;
  double t5316;
  double t5325;
  double t5331;
  double t5332;
  double t5334;
  double t5319;
  double t5336;
  double t5358;
  double t5359;
  double t5368;
  double t5371;
  double t5373;
  double t5374;
  double t5386;
  double t5387;
  double t5388;
  double t5395;
  double t5360;
  double t5378;
  double t5396;
  double t5397;
  double t5409;
  double t5414;
  double t5415;
  double t5419;
  double t5422;
  double t5423;
  double t5424;
  double t5435;
  double t5406;
  double t5420;
  double t5452;
  double t5454;
  double t5461;
  double t5465;
  double t5467;
  double t5473;
  double t5475;
  double t5478;
  double t5485;
  double t5490;
  double t4085;
  double t4099;
  double t4118;
  double t4119;
  double t4120;
  double t4222;
  double t4243;
  double t4251;
  double t4257;
  double t4259;
  double t4262;
  double t4266;
  double t4270;
  double t4423;
  double t4456;
  double t4459;
  double t4470;
  double t4471;
  double t4473;
  double t4475;
  double t4476;
  double t4487;
  double t4490;
  double t4491;
  double t4498;
  double t4499;
  double t4501;
  double t4505;
  double t4506;
  double t4514;
  double t4515;
  double t4521;
  double t4523;
  double t4528;
  double t4531;
  double t5456;
  double t5474;
  double t5492;
  double t5498;
  double t5505;
  double t5508;
  double t5510;
  double t5515;
  double t4579;
  double t4673;
  double t4695;
  double t4696;
  double t4699;
  double t4704;
  double t4707;
  double t4708;
  double t4709;
  double t4711;
  double t4722;
  double t4723;
  double t4724;
  double t4821;
  double t4837;
  double t4839;
  double t4844;
  double t4846;
  double t4858;
  double t4860;
  double t4861;
  double t4874;
  double t4875;
  double t4876;
  double t4878;
  double t4882;
  double t4887;
  double t4889;
  double t4893;
  double t4896;
  double t4897;
  double t4899;
  double t4900;
  double t4909;
  double t4912;
  double t5545;
  double t5547;
  double t5551;
  double t5552;
  double t4935;
  double t5032;
  double t5050;
  double t5053;
  double t5057;
  double t5058;
  double t5060;
  double t5063;
  double t5072;
  double t5079;
  double t5083;
  double t5089;
  double t5090;
  double t5181;
  double t5190;
  double t5192;
  double t5199;
  double t5201;
  double t5204;
  double t5206;
  double t5207;
  double t5223;
  double t5225;
  double t5227;
  double t5229;
  double t5237;
  double t5241;
  double t5242;
  double t5245;
  double t5247;
  double t5250;
  double t5255;
  double t5256;
  double t5261;
  double t5265;
  double t5578;
  double t5580;
  double t5583;
  double t5586;
  double t5595;
  double t5598;
  double t5624;
  double t5627;
  double t5628;
  double t5629;
  double t5585;
  double t5599;
  double t5600;
  double t5603;
  double t5609;
  double t5614;
  double t5615;
  double t5619;
  double t5606;
  double t5621;
  double t5630;
  double t5635;
  double t5655;
  double t5659;
  double t5660;
  double t5662;
  double t5669;
  double t5673;
  double t5675;
  double t5678;
  double t5643;
  double t5668;
  double t5682;
  double t5687;
  double t5692;
  double t5694;
  double t5698;
  double t5705;
  double t5711;
  double t5713;
  double t5717;
  double t5727;
  double t5690;
  double t5707;
  double t5728;
  double t5744;
  double t5752;
  double t5755;
  double t5757;
  double t5760;
  double t5763;
  double t5764;
  double t5770;
  double t5772;
  double t5751;
  double t5762;
  double t5773;
  double t5775;
  double t5777;
  double t5781;
  double t5782;
  double t5785;
  double t5803;
  double t5809;
  double t5810;
  double t5811;
  t882 = Cos(var1[3]);
  t527 = Cos(var1[5]);
  t1200 = Sin(var1[4]);
  t647 = Sin(var1[3]);
  t1214 = Sin(var1[5]);
  t488 = Cos(var1[7]);
  t505 = -1.*t488;
  t509 = 1. + t505;
  t523 = Cos(var1[6]);
  t1617 = t882*t527*t1200;
  t1693 = t647*t1214;
  t1731 = t1617 + t1693;
  t774 = -1.*t527*t647;
  t1479 = t882*t1200*t1214;
  t1480 = t774 + t1479;
  t1793 = Sin(var1[6]);
  t425 = Cos(var1[8]);
  t440 = -1.*t425;
  t442 = 1. + t440;
  t1601 = t523*t1480;
  t1859 = -1.*t1731*t1793;
  t1930 = t1601 + t1859;
  t1979 = t523*t1731;
  t2022 = t1480*t1793;
  t2041 = t1979 + t2022;
  t2185 = Cos(var1[4]);
  t2200 = Sin(var1[7]);
  t2639 = -1.000000637725*t509;
  t2650 = 1. + t2639;
  t2661 = t882*t2185*t2650;
  t2701 = -0.930418*t2200;
  t2778 = 0. + t2701;
  t2781 = t1930*t2778;
  t2892 = -0.366501*t2200;
  t2908 = 0. + t2892;
  t2913 = t2041*t2908;
  t2914 = t2661 + t2781 + t2913;
  t1950 = -0.340999127418*t509*t1930;
  t1962 = -0.134322983001*t509;
  t1968 = 1. + t1962;
  t2176 = t1968*t2041;
  t2241 = 0.366501*t2200;
  t2244 = 0. + t2241;
  t2251 = t882*t2185*t2244;
  t2272 = t1950 + t2176 + t2251;
  t2916 = Sin(var1[8]);
  t2351 = -0.8656776547239999*t509;
  t2386 = 1. + t2351;
  t2407 = t2386*t1930;
  t2486 = -0.340999127418*t509*t2041;
  t2489 = 0.930418*t2200;
  t2514 = 0. + t2489;
  t2524 = t882*t2185*t2514;
  t2547 = t2407 + t2486 + t2524;
  t330 = Cos(var1[9]);
  t378 = -1.*t330;
  t397 = 1. + t378;
  t221 = Sin(var1[10]);
  t2286 = 0.340999127418*t442*t2272;
  t2313 = -0.134322983001*t442;
  t2325 = 1. + t2313;
  t2632 = t2325*t2547;
  t2919 = -0.366501*t2916;
  t2937 = 0. + t2919;
  t3021 = t2914*t2937;
  t3033 = t2286 + t2632 + t3021;
  t3042 = Sin(var1[9]);
  t3180 = -1.000000637725*t442;
  t3199 = 1. + t3180;
  t3228 = t3199*t2914;
  t3242 = -0.930418*t2916;
  t3243 = 0. + t3242;
  t3264 = t2272*t3243;
  t3272 = 0.366501*t2916;
  t3293 = 0. + t3272;
  t3303 = t2547*t3293;
  t3304 = t3228 + t3264 + t3303;
  t3351 = -0.8656776547239999*t442;
  t3353 = 1. + t3351;
  t3429 = t3353*t2272;
  t3469 = 0.340999127418*t442*t2547;
  t3483 = 0.930418*t2916;
  t3486 = 0. + t3483;
  t3488 = t2914*t3486;
  t3499 = t3429 + t3469 + t3488;
  t3698 = Cos(var1[10]);
  t3701 = -1.*t3698;
  t3704 = 1. + t3701;
  t3040 = 0.340999127418*t397*t3033;
  t3048 = -0.930418*t3042;
  t3086 = 0. + t3048;
  t3310 = t3086*t3304;
  t3312 = -0.8656776547239999*t397;
  t3323 = 1. + t3312;
  t3554 = t3323*t3499;
  t3555 = t3040 + t3310 + t3554;
  t3577 = -0.134322983001*t397;
  t3589 = 1. + t3577;
  t3601 = t3589*t3033;
  t3617 = 0.366501*t3042;
  t3638 = 0. + t3617;
  t3665 = t3638*t3304;
  t3667 = 0.340999127418*t397*t3499;
  t3668 = t3601 + t3665 + t3667;
  t3719 = -0.366501*t3042;
  t3728 = 0. + t3719;
  t3741 = t3728*t3033;
  t3753 = -1.000000637725*t397;
  t3758 = 1. + t3753;
  t3775 = t3758*t3304;
  t3783 = 0.930418*t3042;
  t3789 = 0. + t3783;
  t3826 = t3789*t3499;
  t3830 = t3741 + t3775 + t3826;
  t3853 = Cos(var1[11]);
  t3862 = -1.*t3853;
  t3908 = 1. + t3862;
  t28 = Sin(var1[11]);
  t284 = 0.930418*t221;
  t328 = 0. + t284;
  t3560 = t328*t3555;
  t3565 = -0.366501*t221;
  t3572 = 0. + t3565;
  t3669 = t3572*t3668;
  t3714 = -1.000000637725*t3704;
  t3716 = 1. + t3714;
  t3831 = t3716*t3830;
  t3839 = t3560 + t3669 + t3831;
  t3941 = -0.8656776547239999*t3704;
  t3945 = 1. + t3941;
  t3947 = t3945*t3555;
  t3948 = 0.340999127418*t3704*t3668;
  t3951 = -0.930418*t221;
  t3958 = 0. + t3951;
  t3960 = t3958*t3830;
  t3971 = t3947 + t3948 + t3960;
  t3998 = 0.340999127418*t3704*t3555;
  t4002 = -0.134322983001*t3704;
  t4003 = 1. + t4002;
  t4004 = t4003*t3668;
  t4009 = 0.366501*t221;
  t4012 = 0. + t4009;
  t4014 = t4012*t3830;
  t4018 = t3998 + t4004 + t4014;
  t4040 = -0.8656776547239999*t3908;
  t4045 = 1. + t4040;
  t3981 = -0.134322983001*t3908;
  t3982 = 1. + t3981;
  t4091 = -0.366501*t4045;
  t4093 = -0.3172717261340007*t3908;
  t4098 = t4091 + t4093;
  t4106 = -0.930418*t3982;
  t4107 = -0.12497652119782442*t3908;
  t4108 = t4106 + t4107;
  t4028 = -0.930418*t28;
  t4033 = 0. + t4028;
  t32 = 0.366501*t28;
  t145 = 0. + t32;
  t4143 = -0.366501*t4033;
  t4147 = -0.930418*t145;
  t4151 = t4143 + t4147;
  t4123 = t4098*t3958;
  t4137 = t4108*t4012;
  t4154 = t3716*t4151;
  t4180 = 0. + t4123 + t4137 + t4154;
  t4185 = 0.340999127418*t3704*t4098;
  t4186 = t4003*t4108;
  t4189 = t3572*t4151;
  t4195 = 0. + t4185 + t4186 + t4189;
  t4200 = t3945*t4098;
  t4205 = 0.340999127418*t3704*t4108;
  t4207 = t328*t4151;
  t4213 = 0. + t4200 + t4205 + t4207;
  t4184 = t3789*t4180;
  t4197 = 0.340999127418*t397*t4195;
  t4214 = t3323*t4213;
  t4220 = 0. + t4184 + t4197 + t4214;
  t4227 = t3728*t4180;
  t4229 = t3589*t4195;
  t4239 = 0.340999127418*t397*t4213;
  t4240 = 0. + t4227 + t4229 + t4239;
  t4296 = t3758*t4180;
  t4299 = t3638*t4195;
  t4301 = t3086*t4213;
  t4302 = 0. + t4296 + t4299 + t4301;
  t4273 = t3353*t4220;
  t4277 = 0.340999127418*t442*t4240;
  t4303 = t4302*t3243;
  t4313 = 0. + t4273 + t4277 + t4303;
  t4330 = 0.340999127418*t442*t4220;
  t4338 = t2325*t4240;
  t4340 = t4302*t3293;
  t4342 = 0. + t4330 + t4338 + t4340;
  t4345 = t3199*t4302;
  t4349 = t4240*t2937;
  t4352 = t4220*t3486;
  t4363 = 0. + t4345 + t4349 + t4352;
  t4322 = -0.340999127418*t509*t4313;
  t4343 = t2386*t4342;
  t4364 = t2778*t4363;
  t4365 = 0. + t4322 + t4343 + t4364;
  t4386 = t1968*t4313;
  t4396 = -0.340999127418*t509*t4342;
  t4397 = t2908*t4363;
  t4398 = 0. + t4386 + t4396 + t4397;
  t4385 = -1.*t1793*t4365;
  t4400 = t523*t4398;
  t4419 = 0. + t4385 + t4400;
  t4428 = t523*t4365;
  t4444 = t1793*t4398;
  t4450 = 0. + t4428 + t4444;
  t4479 = t2244*t4313;
  t4480 = t2514*t4342;
  t4482 = t2650*t4363;
  t4486 = 0. + t4479 + t4480 + t4482;
  t3852 = t145*t3839;
  t3980 = 0.340999127418*t3908*t3971;
  t4022 = t3982*t4018;
  t4024 = t3852 + t3980 + t4022;
  t4034 = t4033*t3839;
  t4050 = t4045*t3971;
  t4057 = 0.340999127418*t3908*t4018;
  t4063 = t4034 + t4050 + t4057;
  t4562 = -0.366501*t28;
  t4564 = 0. + t4562;
  t4544 = -1.000000637725*t3908;
  t4547 = 1. + t4544;
  t4555 = 0.930418*t28;
  t4556 = 0. + t4555;
  t4584 = -0.294604*t3982;
  t4587 = 0.2550318833994125*t3908;
  t4594 = -0.594863*t4564;
  t4595 = t4584 + t4587 + t4594;
  t4598 = -0.594863*t4547;
  t4599 = 0.747896*t4033;
  t4600 = -0.294604*t145;
  t4603 = t4598 + t4599 + t4600;
  t4611 = 0.747896*t4045;
  t4617 = -0.10045970693385246*t3908;
  t4618 = -0.594863*t4556;
  t4622 = t4611 + t4617 + t4618;
  t4597 = 0.340999127418*t3704*t4595;
  t4606 = t328*t4603;
  t4623 = t3945*t4622;
  t4628 = 0. + t4597 + t4606 + t4623;
  t4636 = t4003*t4595;
  t4641 = t3572*t4603;
  t4645 = 0.340999127418*t3704*t4622;
  t4654 = 0. + t4636 + t4641 + t4645;
  t4656 = t4012*t4595;
  t4657 = t3716*t4603;
  t4658 = t3958*t4622;
  t4662 = 0. + t4656 + t4657 + t4658;
  t4632 = 0.340999127418*t397*t4628;
  t4655 = t3589*t4654;
  t4664 = t3728*t4662;
  t4672 = 0. + t4632 + t4655 + t4664;
  t4683 = t3323*t4628;
  t4687 = 0.340999127418*t397*t4654;
  t4691 = t3789*t4662;
  t4694 = 0. + t4683 + t4687 + t4691;
  t4732 = t3086*t4628;
  t4733 = t3638*t4654;
  t4736 = t3758*t4662;
  t4737 = 0. + t4732 + t4733 + t4736;
  t4729 = 0.340999127418*t442*t4672;
  t4730 = t3353*t4694;
  t4742 = t4737*t3243;
  t4743 = 0. + t4729 + t4730 + t4742;
  t4746 = t2325*t4672;
  t4751 = 0.340999127418*t442*t4694;
  t4753 = t4737*t3293;
  t4756 = 0. + t4746 + t4751 + t4753;
  t4763 = t3199*t4737;
  t4779 = t4672*t2937;
  t4788 = t4694*t3486;
  t4793 = 0. + t4763 + t4779 + t4788;
  t4745 = -0.340999127418*t509*t4743;
  t4757 = t2386*t4756;
  t4798 = t2778*t4793;
  t4803 = 0. + t4745 + t4757 + t4798;
  t4810 = t1968*t4743;
  t4812 = -0.340999127418*t509*t4756;
  t4814 = t2908*t4793;
  t4818 = 0. + t4810 + t4812 + t4814;
  t4808 = -1.*t1793*t4803;
  t4819 = t523*t4818;
  t4820 = 0. + t4808 + t4819;
  t4827 = t523*t4803;
  t4835 = t1793*t4818;
  t4836 = 0. + t4827 + t4835;
  t4863 = t2244*t4743;
  t4866 = t2514*t4756;
  t4869 = t2650*t4793;
  t4872 = 0. + t4863 + t4866 + t4869;
  t4552 = t4547*t3839;
  t4560 = t4556*t3971;
  t4572 = t4564*t4018;
  t4573 = t4552 + t4560 + t4572;
  t4939 = -0.218018*t3982;
  t4940 = 0.18873312805116788*t3908;
  t4944 = 0.803828*t4564;
  t4945 = t4939 + t4940 + t4944;
  t4947 = 0.803828*t4547;
  t4951 = 0.553471*t4033;
  t4956 = -0.218018*t145;
  t4959 = t4947 + t4951 + t4956;
  t4962 = 0.553471*t4045;
  t4963 = -0.07434394776141752*t3908;
  t4964 = 0.803828*t4556;
  t4965 = t4962 + t4963 + t4964;
  t4946 = 0.340999127418*t3704*t4945;
  t4961 = t328*t4959;
  t4978 = t3945*t4965;
  t4979 = 0. + t4946 + t4961 + t4978;
  t4987 = t4003*t4945;
  t4989 = t3572*t4959;
  t4992 = 0.340999127418*t3704*t4965;
  t4995 = 0. + t4987 + t4989 + t4992;
  t5000 = t4012*t4945;
  t5009 = t3716*t4959;
  t5010 = t3958*t4965;
  t5011 = 0. + t5000 + t5009 + t5010;
  t4981 = 0.340999127418*t397*t4979;
  t4997 = t3589*t4995;
  t5015 = t3728*t5011;
  t5023 = 0. + t4981 + t4997 + t5015;
  t5033 = t3323*t4979;
  t5034 = 0.340999127418*t397*t4995;
  t5040 = t3789*t5011;
  t5045 = 0. + t5033 + t5034 + t5040;
  t5106 = t3086*t4979;
  t5111 = t3638*t4995;
  t5116 = t3758*t5011;
  t5117 = 0. + t5106 + t5111 + t5116;
  t5091 = 0.340999127418*t442*t5023;
  t5099 = t3353*t5045;
  t5120 = t5117*t3243;
  t5121 = 0. + t5091 + t5099 + t5120;
  t5123 = t2325*t5023;
  t5131 = 0.340999127418*t442*t5045;
  t5136 = t5117*t3293;
  t5138 = 0. + t5123 + t5131 + t5136;
  t5142 = t3199*t5117;
  t5144 = t5023*t2937;
  t5145 = t5045*t3486;
  t5149 = 0. + t5142 + t5144 + t5145;
  t5122 = -0.340999127418*t509*t5121;
  t5139 = t2386*t5138;
  t5151 = t2778*t5149;
  t5152 = 0. + t5122 + t5139 + t5151;
  t5157 = t1968*t5121;
  t5165 = -0.340999127418*t509*t5138;
  t5170 = t2908*t5149;
  t5173 = 0. + t5157 + t5165 + t5170;
  t5156 = -1.*t1793*t5152;
  t5178 = t523*t5173;
  t5180 = 0. + t5156 + t5178;
  t5183 = t523*t5152;
  t5186 = t1793*t5173;
  t5188 = 0. + t5183 + t5186;
  t5208 = t2244*t5121;
  t5215 = t2514*t5138;
  t5219 = t2650*t5149;
  t5221 = 0. + t5208 + t5215 + t5219;
  t5282 = t527*t647*t1200;
  t5287 = -1.*t882*t1214;
  t5291 = t5282 + t5287;
  t5273 = t882*t527;
  t5274 = t647*t1200*t1214;
  t5276 = t5273 + t5274;
  t5277 = t523*t5276;
  t5292 = -1.*t5291*t1793;
  t5295 = t5277 + t5292;
  t5309 = t523*t5291;
  t5311 = t5276*t1793;
  t5312 = t5309 + t5311;
  t5337 = t2185*t2650*t647;
  t5338 = t5295*t2778;
  t5350 = t5312*t2908;
  t5357 = t5337 + t5338 + t5350;
  t5301 = -0.340999127418*t509*t5295;
  t5313 = t1968*t5312;
  t5315 = t2185*t647*t2244;
  t5316 = t5301 + t5313 + t5315;
  t5325 = t2386*t5295;
  t5331 = -0.340999127418*t509*t5312;
  t5332 = t2185*t647*t2514;
  t5334 = t5325 + t5331 + t5332;
  t5319 = 0.340999127418*t442*t5316;
  t5336 = t2325*t5334;
  t5358 = t5357*t2937;
  t5359 = t5319 + t5336 + t5358;
  t5368 = t3199*t5357;
  t5371 = t5316*t3243;
  t5373 = t5334*t3293;
  t5374 = t5368 + t5371 + t5373;
  t5386 = t3353*t5316;
  t5387 = 0.340999127418*t442*t5334;
  t5388 = t5357*t3486;
  t5395 = t5386 + t5387 + t5388;
  t5360 = 0.340999127418*t397*t5359;
  t5378 = t3086*t5374;
  t5396 = t3323*t5395;
  t5397 = t5360 + t5378 + t5396;
  t5409 = t3589*t5359;
  t5414 = t3638*t5374;
  t5415 = 0.340999127418*t397*t5395;
  t5419 = t5409 + t5414 + t5415;
  t5422 = t3728*t5359;
  t5423 = t3758*t5374;
  t5424 = t3789*t5395;
  t5435 = t5422 + t5423 + t5424;
  t5406 = t328*t5397;
  t5420 = t3572*t5419;
  t5452 = t3716*t5435;
  t5454 = t5406 + t5420 + t5452;
  t5461 = t3945*t5397;
  t5465 = 0.340999127418*t3704*t5419;
  t5467 = t3958*t5435;
  t5473 = t5461 + t5465 + t5467;
  t5475 = 0.340999127418*t3704*t5397;
  t5478 = t4003*t5419;
  t5485 = t4012*t5435;
  t5490 = t5475 + t5478 + t5485;
  t4085 = 1.000000637725*var2[11];
  t4099 = -0.366501*t4098;
  t4118 = -0.930418*t4108;
  t4119 = 0. + t4099 + t4118;
  t4120 = var2[10]*t4119;
  t4222 = 0.366501*t4220;
  t4243 = 0.930418*t4240;
  t4251 = 0. + t4222 + t4243;
  t4257 = var2[8]*t4251;
  t4259 = -0.930418*t4195;
  t4262 = -0.366501*t4213;
  t4266 = 0. + t4259 + t4262;
  t4270 = var2[9]*t4266;
  t4423 = -1.*t1214*t4419;
  t4456 = t527*t4450;
  t4459 = 0. + t4423 + t4456;
  t4470 = var2[4]*t4459;
  t4471 = t527*t4419;
  t4473 = t1214*t4450;
  t4475 = 0. + t4471 + t4473;
  t4476 = t2185*t4475;
  t4487 = -1.*t1200*t4486;
  t4490 = 0. + t4476 + t4487;
  t4491 = var2[3]*t4490;
  t4498 = -0.930418*t4313;
  t4499 = 0.366501*t4342;
  t4501 = 0. + t4498 + t4499;
  t4505 = var2[7]*t4501;
  t4506 = -1.*t2244*t4313;
  t4514 = -1.*t2514*t4342;
  t4515 = -1.*t2650*t4363;
  t4521 = 0. + t4506 + t4514 + t4515;
  t4523 = var2[6]*t4521;
  t4528 = var2[5]*t4486;
  t4531 = t4085 + t4120 + t4257 + t4270 + t4470 + t4491 + t4505 + t4523 + t4528;
  t5456 = t145*t5454;
  t5474 = 0.340999127418*t3908*t5473;
  t5492 = t3982*t5490;
  t5498 = t5456 + t5474 + t5492;
  t5505 = t4033*t5454;
  t5508 = t4045*t5473;
  t5510 = 0.340999127418*t3908*t5490;
  t5515 = t5505 + t5508 + t5510;
  t4579 = 2.3257599990333944e-7*var2[11];
  t4673 = 0.930418*t4672;
  t4695 = 0.366501*t4694;
  t4696 = 0. + t4673 + t4695;
  t4699 = var2[8]*t4696;
  t4704 = -0.366501*t4628;
  t4707 = -0.930418*t4654;
  t4708 = 0. + t4704 + t4707;
  t4709 = var2[9]*t4708;
  t4711 = -0.930418*t4595;
  t4722 = -0.366501*t4622;
  t4723 = 0. + t4711 + t4722;
  t4724 = var2[10]*t4723;
  t4821 = -1.*t1214*t4820;
  t4837 = t527*t4836;
  t4839 = 0. + t4821 + t4837;
  t4844 = var2[4]*t4839;
  t4846 = t527*t4820;
  t4858 = t1214*t4836;
  t4860 = 0. + t4846 + t4858;
  t4861 = t2185*t4860;
  t4874 = -1.*t1200*t4872;
  t4875 = 0. + t4861 + t4874;
  t4876 = var2[3]*t4875;
  t4878 = -0.930418*t4743;
  t4882 = 0.366501*t4756;
  t4887 = 0. + t4878 + t4882;
  t4889 = var2[7]*t4887;
  t4893 = -1.*t2244*t4743;
  t4896 = -1.*t2514*t4756;
  t4897 = -1.*t2650*t4793;
  t4899 = 0. + t4893 + t4896 + t4897;
  t4900 = var2[6]*t4899;
  t4909 = var2[5]*t4872;
  t4912 = t4579 + t4699 + t4709 + t4724 + t4844 + t4876 + t4889 + t4900 + t4909;
  t5545 = t4547*t5454;
  t5547 = t4556*t5473;
  t5551 = t4564*t5490;
  t5552 = t5545 + t5547 + t5551;
  t4935 = 1.9655299995924302e-7*var2[11];
  t5032 = 0.930418*t5023;
  t5050 = 0.366501*t5045;
  t5053 = 0. + t5032 + t5050;
  t5057 = var2[8]*t5053;
  t5058 = -0.366501*t4979;
  t5060 = -0.930418*t4995;
  t5063 = 0. + t5058 + t5060;
  t5072 = var2[9]*t5063;
  t5079 = -0.930418*t4945;
  t5083 = -0.366501*t4965;
  t5089 = 0. + t5079 + t5083;
  t5090 = var2[10]*t5089;
  t5181 = -1.*t1214*t5180;
  t5190 = t527*t5188;
  t5192 = 0. + t5181 + t5190;
  t5199 = var2[4]*t5192;
  t5201 = t527*t5180;
  t5204 = t1214*t5188;
  t5206 = 0. + t5201 + t5204;
  t5207 = t2185*t5206;
  t5223 = -1.*t1200*t5221;
  t5225 = 0. + t5207 + t5223;
  t5227 = var2[3]*t5225;
  t5229 = -0.930418*t5121;
  t5237 = 0.366501*t5138;
  t5241 = 0. + t5229 + t5237;
  t5242 = var2[7]*t5241;
  t5245 = -1.*t2244*t5121;
  t5247 = -1.*t2514*t5138;
  t5250 = -1.*t2650*t5149;
  t5255 = 0. + t5245 + t5247 + t5250;
  t5256 = var2[6]*t5255;
  t5261 = var2[5]*t5221;
  t5265 = t4935 + t5057 + t5072 + t5090 + t5199 + t5227 + t5242 + t5256 + t5261;
  t5578 = t2185*t523*t1214;
  t5580 = -1.*t2185*t527*t1793;
  t5583 = t5578 + t5580;
  t5586 = t2185*t527*t523;
  t5595 = t2185*t1214*t1793;
  t5598 = t5586 + t5595;
  t5624 = -1.*t2650*t1200;
  t5627 = t5583*t2778;
  t5628 = t5598*t2908;
  t5629 = t5624 + t5627 + t5628;
  t5585 = -0.340999127418*t509*t5583;
  t5599 = t1968*t5598;
  t5600 = -1.*t1200*t2244;
  t5603 = t5585 + t5599 + t5600;
  t5609 = t2386*t5583;
  t5614 = -0.340999127418*t509*t5598;
  t5615 = -1.*t1200*t2514;
  t5619 = t5609 + t5614 + t5615;
  t5606 = 0.340999127418*t442*t5603;
  t5621 = t2325*t5619;
  t5630 = t5629*t2937;
  t5635 = t5606 + t5621 + t5630;
  t5655 = t3199*t5629;
  t5659 = t5603*t3243;
  t5660 = t5619*t3293;
  t5662 = t5655 + t5659 + t5660;
  t5669 = t3353*t5603;
  t5673 = 0.340999127418*t442*t5619;
  t5675 = t5629*t3486;
  t5678 = t5669 + t5673 + t5675;
  t5643 = 0.340999127418*t397*t5635;
  t5668 = t3086*t5662;
  t5682 = t3323*t5678;
  t5687 = t5643 + t5668 + t5682;
  t5692 = t3589*t5635;
  t5694 = t3638*t5662;
  t5698 = 0.340999127418*t397*t5678;
  t5705 = t5692 + t5694 + t5698;
  t5711 = t3728*t5635;
  t5713 = t3758*t5662;
  t5717 = t3789*t5678;
  t5727 = t5711 + t5713 + t5717;
  t5690 = t328*t5687;
  t5707 = t3572*t5705;
  t5728 = t3716*t5727;
  t5744 = t5690 + t5707 + t5728;
  t5752 = t3945*t5687;
  t5755 = 0.340999127418*t3704*t5705;
  t5757 = t3958*t5727;
  t5760 = t5752 + t5755 + t5757;
  t5763 = 0.340999127418*t3704*t5687;
  t5764 = t4003*t5705;
  t5770 = t4012*t5727;
  t5772 = t5763 + t5764 + t5770;
  t5751 = t145*t5744;
  t5762 = 0.340999127418*t3908*t5760;
  t5773 = t3982*t5772;
  t5775 = t5751 + t5762 + t5773;
  t5777 = t4033*t5744;
  t5781 = t4045*t5760;
  t5782 = 0.340999127418*t3908*t5772;
  t5785 = t5777 + t5781 + t5782;
  t5803 = t4547*t5744;
  t5809 = t4556*t5760;
  t5810 = t4564*t5772;
  t5811 = t5803 + t5809 + t5810;
  p_output1[0]=0.00001*(-0.930418*t4024 - 0.366501*t4063)*t4531 + 0.00001*(-0.294604*t4024 + 0.747896*t4063 - 0.594863*t4573)*t4912 + 0.00001*(-0.218018*t4024 + 0.553471*t4063 + 0.803828*t4573)*t5265;
  p_output1[1]=0.00001*t4531*(-0.930418*t5498 - 0.366501*t5515) + 0.00001*t4912*(-0.294604*t5498 + 0.747896*t5515 - 0.594863*t5552) + 0.00001*t5265*(-0.218018*t5498 + 0.553471*t5515 + 0.803828*t5552);
  p_output1[2]=0.00001*t4531*(-0.930418*t5775 - 0.366501*t5785) + 0.00001*t4912*(-0.294604*t5775 + 0.747896*t5785 - 0.594863*t5811) + 0.00001*t5265*(-0.218018*t5775 + 0.553471*t5785 + 0.803828*t5811);
}



void AMWorld_left_toe_pitch_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
