/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:09:47 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dJb_right_hip_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t201;
  double t159;
  double t168;
  double t179;
  double t332;
  double t186;
  double t193;
  double t196;
  double t213;
  double t250;
  double t251;
  double t256;
  double t276;
  double t287;
  double t295;
  double t57;
  double t85;
  double t96;
  double t377;
  double t391;
  double t395;
  double t406;
  double t409;
  double t442;
  double t445;
  double t446;
  double t473;
  double t478;
  double t480;
  double t483;
  double t523;
  double t528;
  double t540;
  double t544;
  double t749;
  double t655;
  double t656;
  double t666;
  double t668;
  double t680;
  double t706;
  double t719;
  double t733;
  double t628;
  double t754;
  double t766;
  double t770;
  double t792;
  double t797;
  double t814;
  double t818;
  double t830;
  double t610;
  double t737;
  double t858;
  double t1047;
  double t23;
  double t584;
  double t1138;
  double t1140;
  double t1141;
  double t1111;
  double t1106;
  double t861;
  double t900;
  double t942;
  double t1019;
  double t1347;
  double t1366;
  double t607;
  double t103;
  double t121;
  double t310;
  double t353;
  double t366;
  double t451;
  double t453;
  double t466;
  double t557;
  double t562;
  double t870;
  double t1050;
  double t1057;
  double t1505;
  double t1509;
  double t1517;
  double t1524;
  double t1536;
  double t1560;
  double t1570;
  double t1584;
  double t1700;
  double t1721;
  double t1722;
  double t1526;
  double t1602;
  double t1666;
  double t1971;
  double t2007;
  double t2015;
  double t2033;
  double t2035;
  double t2038;
  double t2075;
  double t2100;
  double t2119;
  double t2027;
  double t2058;
  double t2126;
  double t2145;
  double t2194;
  double t2197;
  double t2203;
  double t2236;
  double t2346;
  double t2347;
  double t2353;
  double t2153;
  double t2249;
  double t2308;
  double t2579;
  double t2640;
  double t2655;
  double t2662;
  double t2692;
  double t2694;
  double t2743;
  double t2750;
  double t2757;
  double t2786;
  double t2792;
  double t2808;
  double t2841;
  double t2877;
  double t2788;
  double t2903;
  double t3027;
  double t3033;
  double t3040;
  double t2991;
  double t2914;
  double t2932;
  double t2955;
  double t2960;
  double t3195;
  double t3218;
  double t2651;
  double t2664;
  double t2697;
  double t2724;
  double t2919;
  double t2965;
  double t2967;
  double t3490;
  double t3497;
  double t3509;
  double t3513;
  double t3553;
  double t3557;
  double t3578;
  double t3606;
  double t3671;
  double t3684;
  double t3713;
  double t3532;
  double t3628;
  double t3638;
  double t3915;
  double t3919;
  double t3941;
  double t3985;
  double t3997;
  double t4003;
  double t3930;
  double t3994;
  double t4039;
  double t4051;
  double t4074;
  double t4085;
  double t4093;
  double t4095;
  double t4160;
  double t4177;
  double t4202;
  double t4056;
  double t4114;
  double t4134;
  double t4454;
  double t4464;
  double t4474;
  double t4493;
  double t4497;
  double t4503;
  double t4519;
  double t4520;
  double t4539;
  double t4483;
  double t4510;
  double t4548;
  double t4569;
  double t4617;
  double t4619;
  double t4639;
  double t4648;
  double t4671;
  double t4675;
  double t4677;
  double t4591;
  double t4650;
  double t4660;
  double t4819;
  double t4786;
  double t4787;
  double t4803;
  double t5053;
  double t5072;
  double t5079;
  double t5096;
  double t5108;
  double t5112;
  double t5123;
  double t5127;
  double t5158;
  double t5190;
  double t5209;
  double t5103;
  double t5141;
  double t5146;
  double t4816;
  double t4834;
  double t4901;
  double t4902;
  double t4906;
  double t4957;
  double t4990;
  double t5008;
  double t5030;
  double t5446;
  double t5449;
  double t5451;
  double t5454;
  double t5469;
  double t5477;
  double t5524;
  double t5543;
  double t5564;
  double t5453;
  double t5483;
  double t5494;
  double t602;
  double t1078;
  double t1082;
  double t1119;
  double t1155;
  double t1217;
  double t1238;
  double t1246;
  double t1249;
  double t1295;
  double t1315;
  double t1320;
  double t1371;
  double t1410;
  double t1441;
  double t1442;
  double t1447;
  double t1693;
  double t1731;
  double t1744;
  double t1769;
  double t1770;
  double t1771;
  double t1785;
  double t1803;
  double t1826;
  double t1889;
  double t1902;
  double t1918;
  double t1921;
  double t2309;
  double t2355;
  double t2360;
  double t2374;
  double t2388;
  double t2398;
  double t2407;
  double t2412;
  double t2435;
  double t2453;
  double t2462;
  double t2473;
  double t2480;
  double t2735;
  double t2979;
  double t2982;
  double t2994;
  double t3078;
  double t3085;
  double t3090;
  double t3094;
  double t3099;
  double t3155;
  double t3162;
  double t3164;
  double t3227;
  double t3298;
  double t3330;
  double t3352;
  double t3394;
  double t3655;
  double t3737;
  double t3758;
  double t3791;
  double t3802;
  double t3804;
  double t3824;
  double t3825;
  double t3843;
  double t3857;
  double t3865;
  double t3872;
  double t3875;
  double t4153;
  double t4207;
  double t4222;
  double t4266;
  double t4273;
  double t4276;
  double t4278;
  double t4279;
  double t4294;
  double t4327;
  double t4343;
  double t4364;
  double t4378;
  double t4661;
  double t4678;
  double t4689;
  double t4698;
  double t4704;
  double t4723;
  double t4835;
  double t4843;
  double t4855;
  double t4859;
  double t4976;
  double t5039;
  double t5045;
  double t5151;
  double t5214;
  double t5223;
  double t5241;
  double t5262;
  double t5270;
  double t5272;
  double t5275;
  double t5276;
  double t5303;
  double t5305;
  double t5309;
  double t5312;
  double t5335;
  double t5347;
  double t5356;
  double t5368;
  double t5507;
  double t5566;
  double t5572;
  double t5579;
  double t5618;
  double t5620;
  double t5631;
  double t5675;
  double t5682;
  double t5700;
  double t5713;
  double t5717;
  double t6845;
  double t6859;
  double t6871;
  double t6872;
  double t6874;
  double t6896;
  double t6905;
  double t6907;
  double t6908;
  double t6912;
  double t6915;
  double t6920;
  double t6921;
  double t6925;
  double t6927;
  double t6931;
  double t6933;
  double t6942;
  double t6944;
  double t6826;
  double t6833;
  double t6837;
  double t6903;
  double t6923;
  double t6950;
  double t6957;
  double t6969;
  double t6971;
  double t6973;
  double t6974;
  double t6978;
  double t6982;
  double t6983;
  double t6821;
  double t6965;
  double t6998;
  double t7018;
  double t7022;
  double t7028;
  double t7056;
  double t7001;
  double t7164;
  double t7173;
  double t7183;
  double t7145;
  double t7072;
  double t7088;
  double t7094;
  double t7097;
  double t7123;
  double t7131;
  double t7260;
  double t7263;
  double t7265;
  double t7273;
  double t7282;
  double t7291;
  double t7296;
  double t7313;
  double t7320;
  double t7328;
  double t7211;
  double t7008;
  double t7059;
  double t7068;
  double t7136;
  double t7149;
  double t7150;
  double t6820;
  double t7299;
  double t7332;
  double t7341;
  double t7362;
  double t7363;
  double t7366;
  double t7541;
  double t7504;
  double t7510;
  double t7527;
  double t7429;
  double t7442;
  double t7448;
  double t7453;
  double t7477;
  double t7478;
  double t7489;
  double t7493;
  double t6769;
  double t6780;
  double t6782;
  double t6640;
  double t6653;
  double t6661;
  double t7656;
  double t7669;
  double t7673;
  double t7676;
  double t6676;
  double t6685;
  double t6699;
  double t6742;
  double t6747;
  double t6748;
  double t7722;
  double t7725;
  double t7726;
  double t7727;
  double t7728;
  double t7729;
  double t7731;
  double t7734;
  double t7735;
  double t7736;
  double t7744;
  double t7745;
  double t7755;
  double t7756;
  double t7758;
  double t7730;
  double t7747;
  double t7749;
  double t7781;
  double t7782;
  double t7789;
  double t7791;
  double t7792;
  double t7794;
  double t7802;
  double t7803;
  double t7804;
  double t7753;
  double t7762;
  double t7764;
  double t7798;
  double t7805;
  double t7806;
  double t7817;
  double t7818;
  double t7819;
  double t6709;
  double t6715;
  double t6716;
  double t6790;
  double t6791;
  double t6802;
  double t7860;
  double t7861;
  double t7862;
  double t7865;
  double t7870;
  double t7876;
  double t7881;
  double t7897;
  double t7900;
  double t7863;
  double t7877;
  double t7910;
  double t7916;
  double t7929;
  double t7935;
  double t7937;
  double t7940;
  double t7955;
  double t7957;
  double t7961;
  double t7926;
  double t7946;
  double t7949;
  double t7973;
  double t7978;
  double t7983;
  double t7990;
  double t7996;
  double t8002;
  double t8003;
  double t7952;
  double t7962;
  double t7963;
  double t7993;
  double t8006;
  double t8007;
  double t8011;
  double t8013;
  double t8015;
  double t8047;
  double t8079;
  double t8082;
  double t8091;
  double t8092;
  double t8111;
  double t8113;
  double t8115;
  double t8117;
  double t6481;
  double t6485;
  double t6486;
  double t6504;
  double t6508;
  double t6509;
  double t6555;
  double t6577;
  double t6584;
  double t8306;
  double t8309;
  double t8310;
  double t8311;
  double t8330;
  double t8332;
  double t8334;
  double t8335;
  double t6472;
  double t6480;
  double t6497;
  double t6518;
  double t6590;
  double t6595;
  double t6619;
  double t6637;
  double t6673;
  double t6708;
  double t6721;
  double t6723;
  double t6728;
  double t6738;
  double t6760;
  double t6783;
  double t6807;
  double t6814;
  double t7071;
  double t7161;
  double t7377;
  double t7380;
  double t8492;
  double t8494;
  double t8495;
  double t7537;
  double t7540;
  double t7582;
  double t7583;
  double t8517;
  double t8518;
  double t8519;
  double t7720;
  double t7766;
  double t7827;
  double t7835;
  double t7964;
  double t7967;
  double t8024;
  double t8025;
  double t8048;
  double t8050;
  double t8098;
  double t8099;
  double t8614;
  double t8615;
  double t8617;
  double t8125;
  double t8131;
  double t8146;
  double t8148;
  double t8640;
  double t8641;
  double t8642;
  double t8210;
  double t8211;
  double t8222;
  double t8223;
  double t8239;
  double t8241;
  double t8251;
  double t8255;
  double t8279;
  double t8282;
  double t8317;
  double t8318;
  double t8343;
  double t8345;
  double t8725;
  double t8727;
  double t8729;
  double t8371;
  double t8372;
  double t8739;
  double t8740;
  double t8741;
  double t8424;
  double t8425;
  double t8440;
  double t8441;
  double t8466;
  double t8467;
  double t8477;
  double t8478;
  double t8561;
  double t8562;
  double t8553;
  double t8554;
  double t8582;
  double t8583;
  double t8880;
  double t8881;
  double t8882;
  double t8874;
  double t8875;
  double t8876;
  double t8592;
  double t8593;
  double t8681;
  double t8684;
  double t8671;
  double t8672;
  double t8700;
  double t8701;
  double t8972;
  double t8973;
  double t8974;
  double t8964;
  double t8965;
  double t8966;
  double t8709;
  double t8710;
  double t8782;
  double t8783;
  double t8766;
  double t8767;
  double t8795;
  double t8796;
  double t8804;
  double t8805;
  double t9036;
  double t9037;
  double t9038;
  double t9025;
  double t9026;
  double t9027;
  double t9089;
  double t9090;
  double t9091;
  double t9085;
  double t9086;
  double t9087;
  double t9138;
  double t9139;
  double t9141;
  double t9133;
  double t9134;
  double t9135;
  double t9189;
  double t9190;
  double t9196;
  double t9178;
  double t9179;
  double t9180;
  double t9273;
  double t9275;
  double t9276;
  double t9278;
  double t9279;
  double t9280;
  double t9281;
  double t9286;
  double t9288;
  double t9290;
  double t9291;
  double t9293;
  double t9294;
  double t9295;
  double t9297;
  double t9299;
  double t9300;
  double t9301;
  double t9302;
  double t9303;
  double t9304;
  double t9321;
  double t9323;
  double t9324;
  double t9326;
  double t9327;
  double t9328;
  double t9329;
  double t9331;
  double t9333;
  double t9334;
  double t9335;
  double t9337;
  double t9338;
  double t9339;
  double t9340;
  double t9342;
  double t9344;
  double t9347;
  double t9349;
  double t9350;
  double t9351;
  double t9367;
  double t9368;
  double t9369;
  double t9370;
  double t9371;
  double t9380;
  double t9381;
  double t9383;
  double t9386;
  double t9387;
  double t9389;
  double t9393;
  double t9394;
  double t9395;
  double t9398;
  double t9399;
  double t9400;
  double t9401;
  double t9403;
  double t9406;
  double t9407;
  double t9409;
  t201 = Sin(var1[19]);
  t159 = Cos(var1[19]);
  t168 = -1.*t159;
  t179 = 1. + t168;
  t332 = Sin(var1[18]);
  t186 = -1.000000637725*t179;
  t193 = 1. + t186;
  t196 = 0.707107*t193;
  t213 = -0.930418*t201;
  t250 = 0. + t213;
  t251 = -0.657905*t250;
  t256 = -0.366501*t201;
  t276 = 0. + t256;
  t287 = -0.259155*t276;
  t295 = t196 + t251 + t287;
  t57 = Cos(var1[18]);
  t85 = -1.*t57;
  t96 = 1. + t85;
  t377 = -0.134322983001*t179;
  t391 = 1. + t377;
  t395 = -0.259155*t391;
  t406 = 0.22434503092393926*t179;
  t409 = 0.366501*t201;
  t442 = 0. + t409;
  t445 = 0.707107*t442;
  t446 = t395 + t406 + t445;
  t473 = -0.8656776547239999*t179;
  t478 = 1. + t473;
  t480 = -0.657905*t478;
  t483 = 0.0883716288660118*t179;
  t523 = 0.930418*t201;
  t528 = 0. + t523;
  t540 = 0.707107*t528;
  t544 = t480 + t483 + t540;
  t749 = Sin(var1[17]);
  t655 = 0.366501*t332;
  t656 = 0. + t655;
  t666 = t656*t295;
  t668 = 0.340999127418*t96*t446;
  t680 = -0.134322983001*t96;
  t706 = 1. + t680;
  t719 = t706*t544;
  t733 = 0. + t666 + t668 + t719;
  t628 = Cos(var1[17]);
  t754 = -0.930418*t332;
  t766 = 0. + t754;
  t770 = t766*t295;
  t792 = -0.8656776547239999*t96;
  t797 = 1. + t792;
  t814 = t797*t446;
  t818 = 0.340999127418*t96*t544;
  t830 = 0. + t770 + t814 + t818;
  t610 = Cos(var1[5]);
  t737 = t628*t733;
  t858 = -1.*t749*t830;
  t1047 = Sin(var1[5]);
  t23 = Cos(var1[3]);
  t584 = Sin(var1[4]);
  t1138 = -1.*t749*t733;
  t1140 = -1.*t628*t830;
  t1141 = t1138 + t1140;
  t1111 = t737 + t858;
  t1106 = Sin(var1[3]);
  t861 = 0. + t737 + t858;
  t900 = t749*t733;
  t942 = t628*t830;
  t1019 = 0. + t900 + t942;
  t1347 = t610*t1019;
  t1366 = -1.*t861*t1047;
  t607 = Cos(var1[4]);
  t103 = -1.000000637725*t96;
  t121 = 1. + t103;
  t310 = t121*t295;
  t353 = 0.930418*t332;
  t366 = 0. + t353;
  t451 = t366*t446;
  t453 = -0.366501*t332;
  t466 = 0. + t453;
  t557 = t466*t544;
  t562 = 0. + t310 + t451 + t557;
  t870 = t610*t861;
  t1050 = t1019*t1047;
  t1057 = 0. + t870 + t1050;
  t1505 = 0.366501*t57*t295;
  t1509 = 0.340999127418*t332*t446;
  t1517 = -0.134322983001*t332*t544;
  t1524 = t1505 + t1509 + t1517;
  t1536 = -0.930418*t57*t295;
  t1560 = -0.8656776547239999*t332*t446;
  t1570 = 0.340999127418*t332*t544;
  t1584 = t1536 + t1560 + t1570;
  t1700 = t628*t1524;
  t1721 = -1.*t749*t1584;
  t1722 = t1700 + t1721;
  t1526 = t749*t1524;
  t1602 = t628*t1584;
  t1666 = t1526 + t1602;
  t1971 = 0.7071072209449999*t159;
  t2007 = -0.7071074509398115*t201;
  t2015 = t1971 + t2007;
  t2033 = 0.25915542260700003*t159;
  t2035 = 0.25915550358356343*t201;
  t2038 = t2033 + t2035;
  t2075 = 0.6579050807260001*t159;
  t2100 = 0.6579052862972049*t201;
  t2119 = t2075 + t2100;
  t2027 = t656*t2015;
  t2058 = 0.340999127418*t96*t2038;
  t2126 = t706*t2119;
  t2145 = t2027 + t2058 + t2126;
  t2194 = t766*t2015;
  t2197 = t797*t2038;
  t2203 = 0.340999127418*t96*t2119;
  t2236 = t2194 + t2197 + t2203;
  t2346 = t628*t2145;
  t2347 = -1.*t749*t2236;
  t2353 = t2346 + t2347;
  t2153 = t749*t2145;
  t2249 = t628*t2236;
  t2308 = t2153 + t2249;
  t2579 = -0.707107*t193;
  t2640 = t2579 + t251 + t287;
  t2655 = -0.707107*t442;
  t2662 = t395 + t406 + t2655;
  t2692 = -0.707107*t528;
  t2694 = t480 + t483 + t2692;
  t2743 = t656*t2640;
  t2750 = 0.340999127418*t96*t2662;
  t2757 = t706*t2694;
  t2786 = 0. + t2743 + t2750 + t2757;
  t2792 = t766*t2640;
  t2808 = t797*t2662;
  t2841 = 0.340999127418*t96*t2694;
  t2877 = 0. + t2792 + t2808 + t2841;
  t2788 = t628*t2786;
  t2903 = -1.*t749*t2877;
  t3027 = -1.*t749*t2786;
  t3033 = -1.*t628*t2877;
  t3040 = t3027 + t3033;
  t2991 = t2788 + t2903;
  t2914 = 0. + t2788 + t2903;
  t2932 = t749*t2786;
  t2955 = t628*t2877;
  t2960 = 0. + t2932 + t2955;
  t3195 = t610*t2960;
  t3218 = -1.*t2914*t1047;
  t2651 = t121*t2640;
  t2664 = t366*t2662;
  t2697 = t466*t2694;
  t2724 = 0. + t2651 + t2664 + t2697;
  t2919 = t610*t2914;
  t2965 = t2960*t1047;
  t2967 = 0. + t2919 + t2965;
  t3490 = 0.366501*t57*t2640;
  t3497 = 0.340999127418*t332*t2662;
  t3509 = -0.134322983001*t332*t2694;
  t3513 = t3490 + t3497 + t3509;
  t3553 = -0.930418*t57*t2640;
  t3557 = -0.8656776547239999*t332*t2662;
  t3578 = 0.340999127418*t332*t2694;
  t3606 = t3553 + t3557 + t3578;
  t3671 = t628*t3513;
  t3684 = -1.*t749*t3606;
  t3713 = t3671 + t3684;
  t3532 = t749*t3513;
  t3628 = t628*t3606;
  t3638 = t3532 + t3628;
  t3915 = -0.25915542260700003*t159;
  t3919 = t3915 + t2035;
  t3941 = -0.6579050807260001*t159;
  t3985 = t3941 + t2100;
  t3997 = 0.7071074509398115*t201;
  t4003 = t1971 + t3997;
  t3930 = t797*t3919;
  t3994 = 0.340999127418*t96*t3985;
  t4039 = t766*t4003;
  t4051 = t3930 + t3994 + t4039;
  t4074 = 0.340999127418*t96*t3919;
  t4085 = t706*t3985;
  t4093 = t656*t4003;
  t4095 = t4074 + t4085 + t4093;
  t4160 = -1.*t749*t4051;
  t4177 = t628*t4095;
  t4202 = t4160 + t4177;
  t4056 = t628*t4051;
  t4114 = t749*t4095;
  t4134 = t4056 + t4114;
  t4454 = -0.366501*t478;
  t4464 = -0.3172717261340007*t179;
  t4474 = t4454 + t4464;
  t4493 = 0.930418*t391;
  t4497 = 0.12497652119782442*t179;
  t4503 = t4493 + t4497;
  t4519 = -0.366501*t250;
  t4520 = 0.930418*t276;
  t4539 = t4519 + t4520;
  t4483 = 0.340999127418*t96*t4474;
  t4510 = t797*t4503;
  t4548 = t766*t4539;
  t4569 = 0. + t4483 + t4510 + t4548;
  t4617 = t706*t4474;
  t4619 = 0.340999127418*t96*t4503;
  t4639 = t656*t4539;
  t4648 = 0. + t4617 + t4619 + t4639;
  t4671 = -1.*t749*t4569;
  t4675 = t628*t4648;
  t4677 = t4671 + t4675;
  t4591 = -1.*t628*t4569;
  t4650 = -1.*t749*t4648;
  t4660 = t4591 + t4650;
  t4819 = 0. + t4671 + t4675;
  t4786 = t628*t4569;
  t4787 = t749*t4648;
  t4803 = 0. + t4786 + t4787;
  t5053 = 0.340999127418*t4474*t332;
  t5072 = -0.8656776547239999*t4503*t332;
  t5079 = -0.930418*t57*t4539;
  t5096 = t5053 + t5072 + t5079;
  t5108 = -0.134322983001*t4474*t332;
  t5112 = 0.340999127418*t4503*t332;
  t5123 = 0.366501*t57*t4539;
  t5127 = t5108 + t5112 + t5123;
  t5158 = -1.*t749*t5096;
  t5190 = t628*t5127;
  t5209 = t5158 + t5190;
  t5103 = t628*t5096;
  t5141 = t749*t5127;
  t5146 = t5103 + t5141;
  t4816 = t610*t4803;
  t4834 = -1.*t4819*t1047;
  t4901 = t4474*t466;
  t4902 = t4503*t366;
  t4906 = t121*t4539;
  t4957 = 0. + t4901 + t4902 + t4906;
  t4990 = t610*t4819;
  t5008 = t4803*t1047;
  t5030 = 0. + t4990 + t5008;
  t5446 = 5.551115123125783e-17*t706*t201;
  t5449 = -4.7323135329568886e-18*t96*t201;
  t5451 = 0. + t5446 + t5449;
  t5454 = -1.3877787807814457e-17*t797*t201;
  t5469 = 1.8929254131827554e-17*t96*t201;
  t5477 = 0. + t5454 + t5469;
  t5524 = t628*t5451;
  t5543 = -1.*t749*t5477;
  t5564 = t5524 + t5543;
  t5453 = t749*t5451;
  t5483 = t628*t5477;
  t5494 = t5453 + t5483;
  t602 = -1.*t562*t584;
  t1078 = t607*t1057;
  t1082 = t602 + t1078;
  t1119 = t610*t1111;
  t1155 = -1.*t1141*t1047;
  t1217 = t1119 + t1155;
  t1238 = t610*t1141;
  t1246 = t1111*t1047;
  t1249 = t1238 + t1246;
  t1295 = -1.*t610*t861;
  t1315 = -1.*t1019*t1047;
  t1320 = t1295 + t1315;
  t1371 = t1347 + t1366;
  t1410 = 0. + t1347 + t1366;
  t1441 = t607*t562;
  t1442 = t584*t1057;
  t1447 = 0. + t1441 + t1442;
  t1693 = t610*t1666;
  t1731 = -1.*t1722*t1047;
  t1744 = t1693 + t1731;
  t1769 = -1.000000637725*t332*t295;
  t1770 = 0.930418*t57*t446;
  t1771 = -0.366501*t57*t544;
  t1785 = t1769 + t1770 + t1771;
  t1803 = t607*t1785;
  t1826 = t610*t1722;
  t1889 = t1666*t1047;
  t1902 = t1826 + t1889;
  t1918 = t584*t1902;
  t1921 = t1803 + t1918;
  t2309 = t610*t2308;
  t2355 = -1.*t2353*t1047;
  t2360 = t2309 + t2355;
  t2374 = t121*t2015;
  t2388 = t366*t2038;
  t2398 = t466*t2119;
  t2407 = t2374 + t2388 + t2398;
  t2412 = t607*t2407;
  t2435 = t610*t2353;
  t2453 = t2308*t1047;
  t2462 = t2435 + t2453;
  t2473 = t584*t2462;
  t2480 = t2412 + t2473;
  t2735 = -1.*t2724*t584;
  t2979 = t607*t2967;
  t2982 = t2735 + t2979;
  t2994 = t610*t2991;
  t3078 = -1.*t3040*t1047;
  t3085 = t2994 + t3078;
  t3090 = t610*t3040;
  t3094 = t2991*t1047;
  t3099 = t3090 + t3094;
  t3155 = -1.*t610*t2914;
  t3162 = -1.*t2960*t1047;
  t3164 = t3155 + t3162;
  t3227 = t3195 + t3218;
  t3298 = 0. + t3195 + t3218;
  t3330 = t607*t2724;
  t3352 = t584*t2967;
  t3394 = 0. + t3330 + t3352;
  t3655 = t610*t3638;
  t3737 = -1.*t3713*t1047;
  t3758 = t3655 + t3737;
  t3791 = -1.000000637725*t332*t2640;
  t3802 = 0.930418*t57*t2662;
  t3804 = -0.366501*t57*t2694;
  t3824 = t3791 + t3802 + t3804;
  t3825 = t607*t3824;
  t3843 = t610*t3713;
  t3857 = t3638*t1047;
  t3865 = t3843 + t3857;
  t3872 = t584*t3865;
  t3875 = t3825 + t3872;
  t4153 = t610*t4134;
  t4207 = -1.*t4202*t1047;
  t4222 = t4153 + t4207;
  t4266 = t366*t3919;
  t4273 = t466*t3985;
  t4276 = t121*t4003;
  t4278 = t4266 + t4273 + t4276;
  t4279 = t607*t4278;
  t4294 = t610*t4202;
  t4327 = t4134*t1047;
  t4343 = t4294 + t4327;
  t4364 = t584*t4343;
  t4378 = t4279 + t4364;
  t4661 = t610*t4660;
  t4678 = t4677*t1047;
  t4689 = t4661 + t4678;
  t4698 = t610*t4677;
  t4704 = -1.*t4660*t1047;
  t4723 = t4698 + t4704;
  t4835 = t4816 + t4834;
  t4843 = -1.*t610*t4819;
  t4855 = -1.*t4803*t1047;
  t4859 = t4843 + t4855;
  t4976 = -1.*t4957*t584;
  t5039 = t607*t5030;
  t5045 = t4976 + t5039;
  t5151 = t610*t5146;
  t5214 = -1.*t5209*t1047;
  t5223 = t5151 + t5214;
  t5241 = -0.366501*t57*t4474;
  t5262 = 0.930418*t57*t4503;
  t5270 = -1.000000637725*t332*t4539;
  t5272 = t5241 + t5262 + t5270;
  t5275 = t607*t5272;
  t5276 = t610*t5209;
  t5303 = t5146*t1047;
  t5305 = t5276 + t5303;
  t5309 = t584*t5305;
  t5312 = t5275 + t5309;
  t5335 = 0. + t4816 + t4834;
  t5347 = t607*t4957;
  t5356 = t584*t5030;
  t5368 = 0. + t5347 + t5356;
  t5507 = t610*t5494;
  t5566 = -1.*t5564*t1047;
  t5572 = t5507 + t5566;
  t5579 = 5.551115123125783e-17*t466*t201;
  t5618 = -1.3877787807814457e-17*t366*t201;
  t5620 = 0. + t5579 + t5618;
  t5631 = t607*t5620;
  t5675 = t610*t5564;
  t5682 = t5494*t1047;
  t5700 = t5675 + t5682;
  t5713 = t584*t5700;
  t5717 = t5631 + t5713;
  t6845 = 3.2909349868922137e-7*var1[19];
  t6859 = -0.189863*t391;
  t6871 = -0.009948468299545453*t179;
  t6872 = -0.045000372235*t276;
  t6874 = -0.001824*t442;
  t6896 = t6845 + t6859 + t6871 + t6872 + t6874;
  t6905 = -0.001824*t193;
  t6907 = -0.04500040093286238*t179;
  t6908 = -0.134034*t250;
  t6912 = -0.189863*t276;
  t6915 = -0.055653909852*t442;
  t6920 = -0.141285834136*t528;
  t6921 = 0. + t6905 + t6907 + t6908 + t6912 + t6915 + t6920;
  t6925 = -1.296332362046933e-7*var1[19];
  t6927 = -0.134034*t478;
  t6931 = -0.07654280690854481*t179;
  t6933 = -0.045000372235*t250;
  t6942 = -0.001824*t528;
  t6944 = t6925 + t6927 + t6931 + t6933 + t6942;
  t6826 = 3.2909349868922137e-7*var1[18];
  t6833 = 0.03103092645718495*t96;
  t6837 = -0.045000372235*t466;
  t6903 = 0.340999127418*t96*t6896;
  t6923 = t656*t6921;
  t6950 = t706*t6944;
  t6957 = t6826 + t6833 + t6837 + t6903 + t6923 + t6950;
  t6969 = 1.296332362046933e-7*var1[18];
  t6971 = -0.07877668146182712*t96;
  t6973 = -0.045000372235*t366;
  t6974 = t797*t6896;
  t6978 = t766*t6921;
  t6982 = 0.340999127418*t96*t6944;
  t6983 = t6969 + t6971 + t6973 + t6974 + t6978 + t6982;
  t6821 = -0.091*t749;
  t6965 = t628*t6957;
  t6998 = -1.*t749*t6983;
  t7018 = -0.091*t628;
  t7022 = -1.*t749*t6957;
  t7028 = -1.*t628*t6983;
  t7056 = t7018 + t7022 + t7028;
  t7001 = t6821 + t6965 + t6998;
  t7164 = t610*t7056;
  t7173 = t7001*t1047;
  t7183 = t7164 + t7173;
  t7145 = 0. + t6821 + t6965 + t6998;
  t7072 = -1.*t628;
  t7088 = 1. + t7072;
  t7094 = -0.091*t7088;
  t7097 = t749*t6957;
  t7123 = t628*t6983;
  t7131 = 0. + t7094 + t7097 + t7123;
  t7260 = -0.04500040093286238*t96;
  t7263 = -0.07877663122399998*t766;
  t7265 = 0.031030906668*t656;
  t7273 = t366*t6896;
  t7282 = t121*t6921;
  t7291 = t466*t6944;
  t7296 = 0. + t7260 + t7263 + t7265 + t7273 + t7282 + t7291;
  t7313 = t610*t7145;
  t7320 = t7131*t1047;
  t7328 = 0. + t7313 + t7320;
  t7211 = 0. + t4976 + t5039;
  t7008 = t610*t7001;
  t7059 = -1.*t7056*t1047;
  t7068 = t7008 + t7059;
  t7136 = t610*t7131;
  t7149 = -1.*t7145*t1047;
  t7150 = 0. + t7136 + t7149;
  t6820 = 0. + t2735 + t2979;
  t7299 = -1.*t7296*t584;
  t7332 = t607*t7328;
  t7341 = 0. + t7299 + t7332;
  t7362 = t607*t7296;
  t7363 = t584*t7328;
  t7366 = 0. + t7362 + t7363;
  t7541 = t7136 + t7149;
  t7504 = -1.*t610*t7145;
  t7510 = -1.*t7131*t1047;
  t7527 = t7504 + t7510;
  t7429 = t5335*t7150;
  t7442 = t7211*t7341;
  t7448 = t5368*t7366;
  t7453 = t7429 + t7442 + t7448;
  t7477 = -1.*t3298*t7150;
  t7478 = -1.*t6820*t7341;
  t7489 = -1.*t3394*t7366;
  t7493 = t7477 + t7478 + t7489;
  t6769 = -1.*t607*t4957;
  t6780 = -1.*t584*t5030;
  t6782 = t6769 + t6780;
  t6640 = -1.*t607*t2724;
  t6653 = -1.*t584*t2967;
  t6661 = t6640 + t6653;
  t7656 = t7299 + t7332;
  t7669 = -1.*t607*t7296;
  t7673 = -1.*t584*t7328;
  t7676 = t7669 + t7673;
  t6676 = -1.*t3824*t584;
  t6685 = t607*t3865;
  t6699 = t6676 + t6685;
  t6742 = -1.*t5272*t584;
  t6747 = t607*t5305;
  t6748 = t6742 + t6747;
  t7722 = 0.016492681424499736*t57;
  t7725 = 0.03103092645718495*t332;
  t7726 = 0.340999127418*t332*t6896;
  t7727 = 0.366501*t57*t6921;
  t7728 = -0.134322983001*t332*t6944;
  t7729 = 3.2909349868922137e-7 + t7722 + t7725 + t7726 + t7727 + t7728;
  t7731 = -0.04186915633414423*t57;
  t7734 = -0.07877668146182712*t332;
  t7735 = -0.8656776547239999*t332*t6896;
  t7736 = -0.930418*t57*t6921;
  t7744 = 0.340999127418*t332*t6944;
  t7745 = 1.296332362046933e-7 + t7731 + t7734 + t7735 + t7736 + t7744;
  t7755 = t628*t7729;
  t7756 = -1.*t749*t7745;
  t7758 = t7755 + t7756;
  t7730 = t749*t7729;
  t7747 = t628*t7745;
  t7749 = t7730 + t7747;
  t7781 = 0.0846680539949003*t57;
  t7782 = -0.04500040093286238*t332;
  t7789 = 0.930418*t57*t6896;
  t7791 = -1.000000637725*t332*t6921;
  t7792 = -0.366501*t57*t6944;
  t7794 = t7781 + t7782 + t7789 + t7791 + t7792;
  t7802 = t610*t7758;
  t7803 = t7749*t1047;
  t7804 = t7802 + t7803;
  t7753 = t610*t7749;
  t7762 = -1.*t7758*t1047;
  t7764 = t7753 + t7762;
  t7798 = -1.*t7794*t584;
  t7805 = t607*t7804;
  t7806 = t7798 + t7805;
  t7817 = t607*t7794;
  t7818 = t584*t7804;
  t7819 = t7817 + t7818;
  t6709 = -1.*t4278*t584;
  t6715 = t607*t4343;
  t6716 = t6709 + t6715;
  t6790 = -1.*t5620*t584;
  t6791 = t607*t5700;
  t6802 = t6790 + t6791;
  t7860 = 0.04244052873518331*t159;
  t7861 = -0.04317639976965198*t201;
  t7862 = t7860 + t7861;
  t7865 = 0.015824183600499735*t159;
  t7870 = 0.015554496221973413*t201;
  t7876 = 3.2909349868922137e-7 + t7865 + t7870;
  t7881 = 0.04017207390214423*t159;
  t7897 = 0.039487431864731776*t201;
  t7900 = -1.296332362046933e-7 + t7881 + t7897;
  t7863 = t656*t7862;
  t7877 = 0.340999127418*t96*t7876;
  t7910 = t706*t7900;
  t7916 = t7863 + t7877 + t7910;
  t7929 = t766*t7862;
  t7935 = t797*t7876;
  t7937 = 0.340999127418*t96*t7900;
  t7940 = t7929 + t7935 + t7937;
  t7955 = t628*t7916;
  t7957 = -1.*t749*t7940;
  t7961 = t7955 + t7957;
  t7926 = t749*t7916;
  t7946 = t628*t7940;
  t7949 = t7926 + t7946;
  t7973 = t121*t7862;
  t7978 = t366*t7876;
  t7983 = t466*t7900;
  t7990 = t7973 + t7978 + t7983;
  t7996 = t610*t7961;
  t8002 = t7949*t1047;
  t8003 = t7996 + t8002;
  t7952 = t610*t7949;
  t7962 = -1.*t7961*t1047;
  t7963 = t7952 + t7962;
  t7993 = -1.*t7990*t584;
  t8006 = t607*t8003;
  t8007 = t7993 + t8006;
  t8011 = t607*t7990;
  t8013 = t584*t8003;
  t8015 = t8011 + t8013;
  t8047 = 0. + t602 + t1078;
  t8079 = -1.*t5335*t7150;
  t8082 = -1.*t7211*t7341;
  t8091 = -1.*t5368*t7366;
  t8092 = t8079 + t8082 + t8091;
  t8111 = t7150*t1410;
  t8113 = t7341*t8047;
  t8115 = t7366*t1447;
  t8117 = t8111 + t8113 + t8115;
  t6481 = -1.*t607*t562;
  t6485 = -1.*t584*t1057;
  t6486 = t6481 + t6485;
  t6504 = -1.*t1785*t584;
  t6508 = t607*t1902;
  t6509 = t6504 + t6508;
  t6555 = -1.*t2407*t584;
  t6577 = t607*t2462;
  t6584 = t6555 + t6577;
  t8306 = t3298*t7150;
  t8309 = t6820*t7341;
  t8310 = t3394*t7366;
  t8311 = t8306 + t8309 + t8310;
  t8330 = -1.*t7150*t1410;
  t8332 = -1.*t7341*t8047;
  t8334 = -1.*t7366*t1447;
  t8335 = t8330 + t8332 + t8334;
  t6472 = var2[17]*t607*t1249;
  t6480 = var2[5]*t607*t1371;
  t6497 = var2[4]*t6486;
  t6518 = var2[18]*t6509;
  t6590 = var2[19]*t6584;
  t6595 = t6472 + t6480 + t6497 + t6518 + t6590;
  t6619 = var2[17]*t607*t3099;
  t6637 = var2[5]*t607*t3227;
  t6673 = var2[4]*t6661;
  t6708 = var2[18]*t6699;
  t6721 = var2[19]*t6716;
  t6723 = t6619 + t6637 + t6673 + t6708 + t6721;
  t6728 = var2[17]*t607*t4689;
  t6738 = var2[5]*t607*t4835;
  t6760 = var2[18]*t6748;
  t6783 = var2[4]*t6782;
  t6807 = var2[19]*t6802;
  t6814 = t6728 + t6738 + t6760 + t6783 + t6807;
  t7071 = t5335*t7068;
  t7161 = t4723*t7150;
  t7377 = -1.*t3298*t7068;
  t7380 = -1.*t3085*t7150;
  t8492 = t4957*t7296;
  t8494 = t5030*t7328;
  t8495 = t8492 + t8494 + t7429;
  t7537 = t5335*t7527;
  t7540 = t4859*t7150;
  t7582 = -1.*t3298*t7527;
  t7583 = -1.*t3164*t7150;
  t8517 = -1.*t2724*t7296;
  t8518 = -1.*t2967*t7328;
  t8519 = t8517 + t8518 + t7477;
  t7720 = t5223*t7150;
  t7766 = t5335*t7764;
  t7827 = -1.*t3758*t7150;
  t7835 = -1.*t3298*t7764;
  t7964 = -1.*t3298*t7963;
  t7967 = -1.*t7150*t4222;
  t8024 = t5335*t7963;
  t8025 = t7150*t5572;
  t8048 = -1.*t5335*t7068;
  t8050 = -1.*t4723*t7150;
  t8098 = t7150*t1217;
  t8099 = t7068*t1410;
  t8614 = -1.*t4957*t7296;
  t8615 = -1.*t5030*t7328;
  t8617 = t8614 + t8615 + t8079;
  t8125 = -1.*t5335*t7527;
  t8131 = -1.*t4859*t7150;
  t8146 = t7150*t1320;
  t8148 = t7527*t1410;
  t8640 = t7296*t562;
  t8641 = t7328*t1057;
  t8642 = t8640 + t8641 + t8111;
  t8210 = -1.*t5223*t7150;
  t8211 = -1.*t5335*t7764;
  t8222 = t7764*t1410;
  t8223 = t7150*t1744;
  t8239 = t1410*t7963;
  t8241 = t7150*t2360;
  t8251 = -1.*t5335*t7963;
  t8255 = -1.*t7150*t5572;
  t8279 = t3298*t7068;
  t8282 = t3085*t7150;
  t8317 = -1.*t7150*t1217;
  t8318 = -1.*t7068*t1410;
  t8343 = t3298*t7527;
  t8345 = t3164*t7150;
  t8725 = t2724*t7296;
  t8727 = t2967*t7328;
  t8729 = t8725 + t8727 + t8306;
  t8371 = -1.*t7150*t1320;
  t8372 = -1.*t7527*t1410;
  t8739 = -1.*t7296*t562;
  t8740 = -1.*t7328*t1057;
  t8741 = t8739 + t8740 + t8330;
  t8424 = t3758*t7150;
  t8425 = t3298*t7764;
  t8440 = -1.*t7764*t1410;
  t8441 = -1.*t7150*t1744;
  t8466 = -1.*t1410*t7963;
  t8467 = -1.*t7150*t2360;
  t8477 = t3298*t7963;
  t8478 = t7150*t4222;
  t8561 = -1.*t2724*t7794;
  t8562 = -1.*t3824*t7296;
  t8553 = t4957*t7794;
  t8554 = t5272*t7296;
  t8582 = -1.*t2724*t7990;
  t8583 = -1.*t7296*t4278;
  t8880 = t4803*t7131;
  t8881 = t4819*t7145;
  t8882 = t8880 + t8881 + t8492;
  t8874 = -1.*t2960*t7131;
  t8875 = -1.*t2914*t7145;
  t8876 = t8874 + t8875 + t8517;
  t8592 = t4957*t7990;
  t8593 = t7296*t5620;
  t8681 = t7296*t1785;
  t8684 = t7794*t562;
  t8671 = -1.*t4957*t7794;
  t8672 = -1.*t5272*t7296;
  t8700 = t562*t7990;
  t8701 = t7296*t2407;
  t8972 = -1.*t4803*t7131;
  t8973 = -1.*t4819*t7145;
  t8974 = t8972 + t8973 + t8614;
  t8964 = t7131*t1019;
  t8965 = t7145*t861;
  t8966 = t8964 + t8965 + t8640;
  t8709 = -1.*t4957*t7990;
  t8710 = -1.*t7296*t5620;
  t8782 = -1.*t7296*t1785;
  t8783 = -1.*t7794*t562;
  t8766 = t2724*t7794;
  t8767 = t3824*t7296;
  t8795 = -1.*t562*t7990;
  t8796 = -1.*t7296*t2407;
  t8804 = t2724*t7990;
  t8805 = t7296*t4278;
  t9036 = t2960*t7131;
  t9037 = t2914*t7145;
  t9038 = t9036 + t9037 + t8725;
  t9025 = -1.*t7131*t1019;
  t9026 = -1.*t7145*t861;
  t9027 = t9025 + t9026 + t8739;
  t9089 = t4648*t6957;
  t9090 = t4569*t6983;
  t9091 = t9089 + t9090 + t8492;
  t9085 = -1.*t2786*t6957;
  t9086 = -1.*t2877*t6983;
  t9087 = t9085 + t9086 + t8517;
  t9138 = -1.*t4648*t6957;
  t9139 = -1.*t4569*t6983;
  t9141 = t9138 + t9139 + t8614;
  t9133 = t6957*t733;
  t9134 = t6983*t830;
  t9135 = t9133 + t9134 + t8640;
  t9189 = t2786*t6957;
  t9190 = t2877*t6983;
  t9196 = t9189 + t9190 + t8725;
  t9178 = -1.*t6957*t733;
  t9179 = -1.*t6983*t830;
  t9180 = t9178 + t9179 + t8739;
  t9273 = -1.*t2640*t7862;
  t9275 = -1.*t2662*t7876;
  t9276 = -1.*t2694*t7900;
  t9278 = -1.*t6896*t3919;
  t9279 = -1.*t6944*t3985;
  t9280 = -1.*t6921*t4003;
  t9281 = t9273 + t9275 + t9276 + t9278 + t9279 + t9280;
  t9286 = t4503*t6896;
  t9288 = t4539*t6921;
  t9290 = t4474*t6944;
  t9291 = t9286 + t9288 + t9290;
  t9293 = -1.*t2662*t6896;
  t9294 = -1.*t2640*t6921;
  t9295 = -1.*t2694*t6944;
  t9297 = t9293 + t9294 + t9295;
  t9299 = t4539*t7862;
  t9300 = t4503*t7876;
  t9301 = t4474*t7900;
  t9302 = -1.3877787807814457e-17*t6896*t201;
  t9303 = 5.551115123125783e-17*t6944*t201;
  t9304 = 0. + t9299 + t9300 + t9301 + t9302 + t9303;
  t9321 = t6921*t2015;
  t9323 = t295*t7862;
  t9324 = t446*t7876;
  t9326 = t544*t7900;
  t9327 = t6896*t2038;
  t9328 = t6944*t2119;
  t9329 = t9321 + t9323 + t9324 + t9326 + t9327 + t9328;
  t9331 = -1.*t4503*t6896;
  t9333 = -1.*t4539*t6921;
  t9334 = -1.*t4474*t6944;
  t9335 = t9331 + t9333 + t9334;
  t9337 = t6896*t446;
  t9338 = t295*t6921;
  t9339 = t6944*t544;
  t9340 = t9337 + t9338 + t9339;
  t9342 = -1.*t4539*t7862;
  t9344 = -1.*t4503*t7876;
  t9347 = -1.*t4474*t7900;
  t9349 = 1.3877787807814457e-17*t6896*t201;
  t9350 = -5.551115123125783e-17*t6944*t201;
  t9351 = 0. + t9342 + t9344 + t9347 + t9349 + t9350;
  t9367 = -1.*t6921*t2015;
  t9368 = -1.*t295*t7862;
  t9369 = -1.*t446*t7876;
  t9370 = -1.*t544*t7900;
  t9371 = -1.*t6896*t2038;
  t9380 = -1.*t6944*t2119;
  t9381 = t9367 + t9368 + t9369 + t9370 + t9371 + t9380;
  t9383 = t2640*t7862;
  t9386 = t2662*t7876;
  t9387 = t2694*t7900;
  t9389 = t6896*t3919;
  t9393 = t6944*t3985;
  t9394 = t6921*t4003;
  t9395 = t9383 + t9386 + t9387 + t9389 + t9393 + t9394;
  t9398 = -1.*t6896*t446;
  t9399 = -1.*t295*t6921;
  t9400 = -1.*t6944*t544;
  t9401 = t9398 + t9399 + t9400;
  t9403 = t2662*t6896;
  t9406 = t2640*t6921;
  t9407 = t2694*t6944;
  t9409 = t9403 + t9406 + t9407;
  p_output1[0]=(-1.*t1106*t1447 - 1.*t1410*t23)*var2[3] + t1082*t23*var2[4] + (-1.*t1106*t1320 + t1371*t23*t584)*var2[5] + (-1.*t1106*t1217 + t1249*t23*t584)*var2[17] + (-1.*t1106*t1744 + t1921*t23)*var2[18] + (-1.*t1106*t2360 + t23*t2480)*var2[19];
  p_output1[1]=(-1.*t23*t3298 - 1.*t1106*t3394)*var2[3] + t23*t2982*var2[4] + (-1.*t1106*t3164 + t23*t3227*t584)*var2[5] + (-1.*t1106*t3085 + t23*t3099*t584)*var2[17] + (-1.*t1106*t3758 + t23*t3875)*var2[18] + (-1.*t1106*t4222 + t23*t4378)*var2[19];
  p_output1[2]=(-1.*t23*t5335 - 1.*t1106*t5368)*var2[3] + t23*t5045*var2[4] + (-1.*t1106*t4859 + t23*t4835*t584)*var2[5] + (-1.*t1106*t4723 + t23*t4689*t584)*var2[17] + (-1.*t1106*t5223 + t23*t5312)*var2[18] + (-1.*t1106*t5572 + t23*t5717)*var2[19];
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=(-1.*t1106*t1410 + t1447*t23)*var2[3] + t1082*t1106*var2[4] + (t1320*t23 + t1106*t1371*t584)*var2[5] + (t1217*t23 + t1106*t1249*t584)*var2[17] + (t1106*t1921 + t1744*t23)*var2[18] + (t23*t2360 + t1106*t2480)*var2[19];
  p_output1[7]=(-1.*t1106*t3298 + t23*t3394)*var2[3] + t1106*t2982*var2[4] + (t23*t3164 + t1106*t3227*t584)*var2[5] + (t23*t3085 + t1106*t3099*t584)*var2[17] + (t23*t3758 + t1106*t3875)*var2[18] + (t23*t4222 + t1106*t4378)*var2[19];
  p_output1[8]=(-1.*t1106*t5335 + t23*t5368)*var2[3] + t1106*t5045*var2[4] + (t23*t4859 + t1106*t4835*t584)*var2[5] + (t23*t4723 + t1106*t4689*t584)*var2[17] + (t23*t5223 + t1106*t5312)*var2[18] + (t23*t5572 + t1106*t5717)*var2[19];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t6595;
  p_output1[13]=t6723;
  p_output1[14]=t6814;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(t6661*t7453 + t6782*t7493 + t7211*(-1.*t6661*t7341 - 1.*t2982*t7366 - 1.*t3394*t7656 - 1.*t6820*t7676) + t6820*(t6782*t7341 + t5045*t7366 + t5368*t7656 + t7211*t7676))*var2[4] + (t3227*t607*t7453 + t4835*t607*t7493 + t6820*(t4835*t607*t7341 + t4835*t584*t7366 + t7537 + t7540 + t5368*t584*t7541 + t607*t7211*t7541) + t7211*(-1.*t3227*t607*t7341 - 1.*t3227*t584*t7366 - 1.*t3394*t584*t7541 - 1.*t607*t6820*t7541 + t7582 + t7583))*var2[5] + (t6820*(t7071 + t7161 + t5368*t584*t7183 + t607*t7183*t7211 + t4689*t607*t7341 + t4689*t584*t7366) + t7211*(-1.*t3394*t584*t7183 - 1.*t607*t6820*t7183 - 1.*t3099*t607*t7341 - 1.*t3099*t584*t7366 + t7377 + t7380) + t3099*t607*t7453 + t4689*t607*t7493)*var2[17] + (t6699*t7453 + t6748*t7493 + t6820*(t6748*t7341 + t5312*t7366 + t7720 + t7766 + t7211*t7806 + t5368*t7819) + t7211*(-1.*t6699*t7341 - 1.*t3875*t7366 - 1.*t6820*t7806 - 1.*t3394*t7819 + t7827 + t7835))*var2[18] + (t6716*t7453 + t6802*t7493 + t7211*(-1.*t6716*t7341 - 1.*t4378*t7366 + t7964 + t7967 - 1.*t6820*t8007 - 1.*t3394*t8015) + t6820*(t6802*t7341 + t5717*t7366 + t7211*t8007 + t5368*t8015 + t8024 + t8025))*var2[19];
  p_output1[19]=((-1.*t6782*t7341 - 1.*t5045*t7366 - 1.*t5368*t7656 - 1.*t7211*t7676)*t8047 + t7211*(t6486*t7341 + t1082*t7366 + t1447*t7656 + t7676*t8047) + t6486*t8092 + t6782*t8117)*var2[4] + (t1371*t607*t8092 + t4835*t607*t8117 + t8047*(-1.*t4835*t607*t7341 - 1.*t4835*t584*t7366 - 1.*t5368*t584*t7541 - 1.*t607*t7211*t7541 + t8125 + t8131) + t7211*(t1371*t607*t7341 + t1371*t584*t7366 + t1447*t584*t7541 + t607*t7541*t8047 + t8146 + t8148))*var2[5] + (t8047*(-1.*t5368*t584*t7183 - 1.*t607*t7183*t7211 - 1.*t4689*t607*t7341 - 1.*t4689*t584*t7366 + t8048 + t8050) + t1249*t607*t8092 + t7211*(t1447*t584*t7183 + t1249*t607*t7341 + t1249*t584*t7366 + t607*t7183*t8047 + t8098 + t8099) + t4689*t607*t8117)*var2[17] + (t6509*t8092 + t6748*t8117 + t8047*(-1.*t6748*t7341 - 1.*t5312*t7366 - 1.*t7211*t7806 - 1.*t5368*t7819 + t8210 + t8211) + t7211*(t6509*t7341 + t1921*t7366 + t1447*t7819 + t7806*t8047 + t8222 + t8223))*var2[18] + (t6584*t8092 + t6802*t8117 + t7211*(t6584*t7341 + t2480*t7366 + t1447*t8015 + t8007*t8047 + t8239 + t8241) + t8047*(-1.*t6802*t7341 - 1.*t5717*t7366 - 1.*t7211*t8007 - 1.*t5368*t8015 + t8251 + t8255))*var2[19];
  p_output1[20]=((t6661*t7341 + t2982*t7366 + t3394*t7656 + t6820*t7676)*t8047 + t6820*(-1.*t6486*t7341 - 1.*t1082*t7366 - 1.*t1447*t7656 - 1.*t7676*t8047) + t6486*t8311 + t6661*t8335)*var2[4] + (t1371*t607*t8311 + t3227*t607*t8335 + t8047*(t3227*t607*t7341 + t3227*t584*t7366 + t3394*t584*t7541 + t607*t6820*t7541 + t8343 + t8345) + t6820*(-1.*t1371*t607*t7341 - 1.*t1371*t584*t7366 - 1.*t1447*t584*t7541 - 1.*t607*t7541*t8047 + t8371 + t8372))*var2[5] + (t8047*(t3394*t584*t7183 + t607*t6820*t7183 + t3099*t607*t7341 + t3099*t584*t7366 + t8279 + t8282) + t1249*t607*t8311 + t6820*(-1.*t1447*t584*t7183 - 1.*t1249*t607*t7341 - 1.*t1249*t584*t7366 - 1.*t607*t7183*t8047 + t8317 + t8318) + t3099*t607*t8335)*var2[17] + (t6509*t8311 + t6699*t8335 + t8047*(t6699*t7341 + t3875*t7366 + t6820*t7806 + t3394*t7819 + t8424 + t8425) + t6820*(-1.*t6509*t7341 - 1.*t1921*t7366 - 1.*t1447*t7819 - 1.*t7806*t8047 + t8440 + t8441))*var2[18] + (t6584*t8311 + t6716*t8335 + t6820*(-1.*t6584*t7341 - 1.*t2480*t7366 - 1.*t1447*t8015 - 1.*t8007*t8047 + t8466 + t8467) + t8047*(t6716*t7341 + t4378*t7366 + t6820*t8007 + t3394*t8015 + t8477 + t8478))*var2[19];
  p_output1[21]=t6595;
  p_output1[22]=t6723;
  p_output1[23]=t6814;
  p_output1[24]=(t3298*(t4835*t7328 + t7537 + t7540 + t5030*t7541) + t5335*(-1.*t3227*t7328 - 1.*t2967*t7541 + t7582 + t7583) + t3164*t8495 + t4859*t8519)*var2[5] + (t3298*(t7071 + t7161 + t5030*t7183 + t4689*t7328) + t5335*(-1.*t2967*t7183 - 1.*t3099*t7328 + t7377 + t7380) + t3085*t8495 + t4723*t8519)*var2[17] + (t3758*t8495 + t5223*t8519 + t3298*(t5305*t7328 + t7720 + t7766 + t5030*t7804 + t8553 + t8554) + t5335*(-1.*t3865*t7328 - 1.*t2967*t7804 + t7827 + t7835 + t8561 + t8562))*var2[18] + (t4222*t8495 + t5572*t8519 + t5335*(-1.*t4343*t7328 + t7964 + t7967 - 1.*t2967*t8003 + t8582 + t8583) + t3298*(t5700*t7328 + t5030*t8003 + t8024 + t8025 + t8592 + t8593))*var2[19];
  p_output1[25]=(t1410*(-1.*t4835*t7328 - 1.*t5030*t7541 + t8125 + t8131) + t5335*(t1371*t7328 + t1057*t7541 + t8146 + t8148) + t1320*t8617 + t4859*t8642)*var2[5] + (t1410*(-1.*t5030*t7183 - 1.*t4689*t7328 + t8048 + t8050) + t5335*(t1057*t7183 + t1249*t7328 + t8098 + t8099) + t1217*t8617 + t4723*t8642)*var2[17] + (t1744*t8617 + t5223*t8642 + t1410*(-1.*t5305*t7328 - 1.*t5030*t7804 + t8210 + t8211 + t8671 + t8672) + t5335*(t1902*t7328 + t1057*t7804 + t8222 + t8223 + t8681 + t8684))*var2[18] + (t2360*t8617 + t5572*t8642 + t5335*(t2462*t7328 + t1057*t8003 + t8239 + t8241 + t8700 + t8701) + t1410*(-1.*t5700*t7328 - 1.*t5030*t8003 + t8251 + t8255 + t8709 + t8710))*var2[19];
  p_output1[26]=(t1410*(t3227*t7328 + t2967*t7541 + t8343 + t8345) + t3298*(-1.*t1371*t7328 - 1.*t1057*t7541 + t8371 + t8372) + t1320*t8729 + t3164*t8741)*var2[5] + (t1410*(t2967*t7183 + t3099*t7328 + t8279 + t8282) + t3298*(-1.*t1057*t7183 - 1.*t1249*t7328 + t8317 + t8318) + t1217*t8729 + t3085*t8741)*var2[17] + (t1744*t8729 + t3758*t8741 + t1410*(t3865*t7328 + t2967*t7804 + t8424 + t8425 + t8766 + t8767) + t3298*(-1.*t1902*t7328 - 1.*t1057*t7804 + t8440 + t8441 + t8782 + t8783))*var2[18] + (t2360*t8729 + t4222*t8741 + t3298*(-1.*t2462*t7328 - 1.*t1057*t8003 + t8466 + t8467 + t8795 + t8796) + t1410*(t4343*t7328 + t2967*t8003 + t8477 + t8478 + t8804 + t8805))*var2[19];
  p_output1[27]=t1320*var2[5] + t1217*var2[17] + t1744*var2[18] + t2360*var2[19];
  p_output1[28]=t3164*var2[5] + t3085*var2[17] + t3758*var2[18] + t4222*var2[19];
  p_output1[29]=t4859*var2[5] + t4723*var2[17] + t5223*var2[18] + t5572*var2[19];
  p_output1[30]=(t4957*(-1.*t2960*t7001 - 1.*t2914*t7056 - 1.*t2991*t7131 - 1.*t3040*t7145) + t2724*(t4803*t7001 + t4819*t7056 + t4677*t7131 + t4660*t7145))*var2[17] + (t2724*(t5146*t7131 + t5209*t7145 + t4803*t7749 + t4819*t7758 + t8553 + t8554) + t4957*(-1.*t3638*t7131 - 1.*t3713*t7145 - 1.*t2960*t7749 - 1.*t2914*t7758 + t8561 + t8562) + t5272*t8876 + t3824*t8882)*var2[18] + (t4957*(-1.*t4134*t7131 - 1.*t4202*t7145 - 1.*t2960*t7949 - 1.*t2914*t7961 + t8582 + t8583) + t2724*(t5494*t7131 + t5564*t7145 + t4803*t7949 + t4819*t7961 + t8592 + t8593) + t5620*t8876 + t4278*t8882)*var2[19];
  p_output1[31]=(t562*(-1.*t4803*t7001 - 1.*t4819*t7056 - 1.*t4677*t7131 - 1.*t4660*t7145) + t4957*(t1019*t7001 + t1111*t7131 + t1141*t7145 + t7056*t861))*var2[17] + (t562*(-1.*t5146*t7131 - 1.*t5209*t7145 - 1.*t4803*t7749 - 1.*t4819*t7758 + t8671 + t8672) + t4957*(t1666*t7131 + t1722*t7145 + t1019*t7749 + t7758*t861 + t8681 + t8684) + t5272*t8966 + t1785*t8974)*var2[18] + (t4957*(t2308*t7131 + t2353*t7145 + t1019*t7949 + t7961*t861 + t8700 + t8701) + t562*(-1.*t5494*t7131 - 1.*t5564*t7145 - 1.*t4803*t7949 - 1.*t4819*t7961 + t8709 + t8710) + t5620*t8966 + t2407*t8974)*var2[19];
  p_output1[32]=(t562*(t2960*t7001 + t2914*t7056 + t2991*t7131 + t3040*t7145) + t2724*(-1.*t1019*t7001 - 1.*t1111*t7131 - 1.*t1141*t7145 - 1.*t7056*t861))*var2[17] + (t562*(t3638*t7131 + t3713*t7145 + t2960*t7749 + t2914*t7758 + t8766 + t8767) + t2724*(-1.*t1666*t7131 - 1.*t1722*t7145 - 1.*t1019*t7749 - 1.*t7758*t861 + t8782 + t8783) + t3824*t9027 + t1785*t9038)*var2[18] + (t2724*(-1.*t2308*t7131 - 1.*t2353*t7145 - 1.*t1019*t7949 - 1.*t7961*t861 + t8795 + t8796) + t562*(t4134*t7131 + t4202*t7145 + t2960*t7949 + t2914*t7961 + t8804 + t8805) + t4278*t9027 + t2407*t9038)*var2[19];
  p_output1[33]=t1785*var2[18] + t2407*var2[19];
  p_output1[34]=t3824*var2[18] + t4278*var2[19];
  p_output1[35]=t5272*var2[18] + t5620*var2[19];
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=(-0.091*t1524 - 1.*t2724*(t5127*t6957 + t5096*t6983 + t4648*t7729 + t4569*t7745 + t8553 + t8554) - 1.*t4957*(-1.*t3513*t6957 - 1.*t3606*t6983 - 1.*t2786*t7729 - 1.*t2877*t7745 + t8561 + t8562) - 1.*t5272*t9087 - 1.*t3824*t9091)*var2[18] + (-0.091*t2145 - 1.*t4957*(-1.*t4095*t6957 - 1.*t4051*t6983 - 1.*t2786*t7916 - 1.*t2877*t7940 + t8582 + t8583) - 1.*t2724*(t5451*t6957 + t5477*t6983 + t4648*t7916 + t4569*t7940 + t8592 + t8593) - 1.*t5620*t9087 - 1.*t4278*t9091)*var2[19];
  p_output1[103]=(-0.091*t3513 - 1.*t562*(-1.*t5127*t6957 - 1.*t5096*t6983 - 1.*t4648*t7729 - 1.*t4569*t7745 + t8671 + t8672) - 1.*t4957*(t1524*t6957 + t1584*t6983 + t733*t7729 + t7745*t830 + t8681 + t8684) - 1.*t5272*t9135 - 1.*t1785*t9141)*var2[18] + (-0.091*t4095 - 1.*t4957*(t2145*t6957 + t2236*t6983 + t733*t7916 + t7940*t830 + t8700 + t8701) - 1.*t562*(-1.*t5451*t6957 - 1.*t5477*t6983 - 1.*t4648*t7916 - 1.*t4569*t7940 + t8709 + t8710) - 1.*t5620*t9135 - 1.*t2407*t9141)*var2[19];
  p_output1[104]=(-0.091*t5127 - 1.*t562*(t3513*t6957 + t3606*t6983 + t2786*t7729 + t2877*t7745 + t8766 + t8767) - 1.*t2724*(-1.*t1524*t6957 - 1.*t1584*t6983 - 1.*t733*t7729 - 1.*t7745*t830 + t8782 + t8783) - 1.*t3824*t9180 - 1.*t1785*t9196)*var2[18] + (-0.091*t5451 - 1.*t2724*(-1.*t2145*t6957 - 1.*t2236*t6983 - 1.*t733*t7916 - 1.*t7940*t830 + t8795 + t8796) - 1.*t562*(t4095*t6957 + t4051*t6983 + t2786*t7916 + t2877*t7940 + t8804 + t8805) - 1.*t4278*t9180 - 1.*t2407*t9196)*var2[19];
  p_output1[105]=(1.000000637725*t295*t332 - 0.930418*t446*t57 + 0.366501*t544*t57)*var2[18] + (-1.*t121*t2015 - 1.*t2038*t366 - 1.*t2119*t466)*var2[19];
  p_output1[106]=(1.000000637725*t2640*t332 - 0.930418*t2662*t57 + 0.366501*t2694*t57)*var2[18] + (-1.*t366*t3919 - 1.*t121*t4003 - 1.*t3985*t466)*var2[19];
  p_output1[107]=(1.000000637725*t332*t4539 + 0.366501*t4474*t57 - 0.930418*t4503*t57)*var2[18] + (0. + 1.3877787807814457e-17*t201*t366 - 5.551115123125783e-17*t201*t466)*var2[19];
  p_output1[108]=(0.084668*t2015 - 0.041869*t2038 + 0.016493*t2119 - 0.366501*(t4503*t9281 + t3919*t9291 - 1.3877787807814457e-17*t201*t9297 + t2662*t9304) - 0.930418*(t4474*t9281 + t3985*t9291 + 5.551115123125783e-17*t201*t9297 + t2694*t9304))*var2[19];
  p_output1[109]=(-0.041869*t3919 + 0.016493*t3985 + 0.084668*t4003 - 0.366501*(t4503*t9329 + t2038*t9335 - 1.3877787807814457e-17*t201*t9340 + t446*t9351) - 0.930418*(t4474*t9329 + t2119*t9335 + 5.551115123125783e-17*t201*t9340 + t544*t9351))*var2[19];
  p_output1[110]=(0. + 1.496594514982519e-18*t201 - 0.366501*(t2662*t9381 + t446*t9395 + t3919*t9401 + t2038*t9409) - 0.930418*(t2694*t9381 + t544*t9395 + t3985*t9401 + t2119*t9409))*var2[19];
  p_output1[111]=(-0.366501*t2038 - 0.930418*t2119)*var2[19];
  p_output1[112]=(-0.366501*t3919 - 0.930418*t3985)*var2[19];
  p_output1[113]=-4.656235119693264e-17*t201*var2[19];
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void dJb_right_hip_pitch_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
