/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:08:30 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jq_AMWorld_left_shoulder_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t105;
  double t128;
  double t129;
  double t149;
  double t262;
  double t600;
  double t634;
  double t727;
  double t599;
  double t1193;
  double t1219;
  double t1224;
  double t1248;
  double t1291;
  double t777;
  double t812;
  double t848;
  double t881;
  double t958;
  double t1296;
  double t146;
  double t266;
  double t278;
  double t538;
  double t1848;
  double t1934;
  double t1941;
  double t966;
  double t1438;
  double t1491;
  double t1947;
  double t2380;
  double t2381;
  double t3020;
  double t3021;
  double t3236;
  double t3242;
  double t3353;
  double t3364;
  double t3560;
  double t3596;
  double t3598;
  double t3655;
  double t3748;
  double t3771;
  double t2754;
  double t2760;
  double t2818;
  double t2821;
  double t2127;
  double t2148;
  double t4008;
  double t4136;
  double t4219;
  double t3365;
  double t3853;
  double t3947;
  double t4866;
  double t4911;
  double t4900;
  double t4924;
  double t4949;
  double t5003;
  double t5007;
  double t5033;
  double t4987;
  double t5135;
  double t5145;
  double t5170;
  double t5174;
  double t5177;
  double t64;
  double t286;
  double t416;
  double t499;
  double t514;
  double t537;
  double t1540;
  double t2027;
  double t2087;
  double t2096;
  double t2147;
  double t2155;
  double t2168;
  double t2176;
  double t2217;
  double t2218;
  double t2290;
  double t2298;
  double t2363;
  double t2468;
  double t2479;
  double t2481;
  double t2697;
  double t2753;
  double t2846;
  double t3997;
  double t4329;
  double t4332;
  double t4335;
  double t4337;
  double t4386;
  double t4582;
  double t4600;
  double t4605;
  double t4671;
  double t4675;
  double t4747;
  double t5546;
  double t5549;
  double t5634;
  double t5635;
  double t5415;
  double t5727;
  double t5816;
  double t5825;
  double t5554;
  double t5657;
  double t5685;
  double t4895;
  double t5163;
  double t5183;
  double t5185;
  double t5197;
  double t5216;
  double t5254;
  double t5261;
  double t5347;
  double t5369;
  double t5504;
  double t5697;
  double t5843;
  double t5851;
  double t5896;
  double t5937;
  double t5945;
  double t5959;
  double t5963;
  double t5971;
  double t5978;
  double t6035;
  double t6093;
  double t6150;
  double t6151;
  double t6153;
  double t6164;
  double t6167;
  double t6172;
  double t2355;
  double t4832;
  double t4844;
  double t6261;
  double t6265;
  double t6270;
  double t6275;
  double t6281;
  double t6283;
  double t6274;
  double t6286;
  double t6301;
  double t6306;
  double t6314;
  double t6316;
  double t5331;
  double t5342;
  double t6135;
  double t6137;
  double t6250;
  double t6304;
  double t6322;
  double t6346;
  double t6355;
  double t6356;
  double t6363;
  double t6381;
  double t6195;
  double t6196;
  double t6201;
  double t6401;
  double t6404;
  double t6406;
  double t6408;
  double t6411;
  double t6412;
  double t6458;
  double t6459;
  double t6466;
  double t6471;
  double t6473;
  double t6476;
  double t6456;
  double t6468;
  double t6478;
  double t6486;
  double t6499;
  double t6500;
  double t6504;
  double t6506;
  double t6513;
  double t6521;
  double t6525;
  double t6532;
  double t6533;
  double t6535;
  double t6350;
  double t6382;
  double t6395;
  double t6566;
  double t6568;
  double t6569;
  double t6576;
  double t6577;
  double t6578;
  double t6416;
  double t6417;
  double t6598;
  double t6603;
  double t6604;
  double t6429;
  double t6446;
  double t6645;
  double t6646;
  double t6648;
  double t6650;
  double t6660;
  double t6666;
  double t6642;
  double t6649;
  double t6683;
  double t6685;
  double t6689;
  double t6692;
  double t6693;
  double t6706;
  double t6713;
  double t6714;
  double t6716;
  double t6720;
  double t6721;
  double t6730;
  double t6575;
  double t6579;
  double t6581;
  double t6745;
  double t6758;
  double t6759;
  double t6769;
  double t6770;
  double t6771;
  double t6766;
  double t6772;
  double t6773;
  double t6786;
  double t6788;
  double t6790;
  double t6590;
  double t6595;
  double t6607;
  double t6614;
  double t6743;
  double t6779;
  double t6792;
  double t6795;
  double t6799;
  double t6801;
  double t6802;
  double t6808;
  double t6619;
  double t6623;
  double t6627;
  double t6823;
  double t6825;
  double t6827;
  double t6831;
  double t6832;
  double t6833;
  double t6852;
  double t6853;
  double t6854;
  double t6856;
  double t6858;
  double t6861;
  double t6843;
  double t6855;
  double t6862;
  double t6863;
  double t6870;
  double t6871;
  double t6873;
  double t6874;
  double t6885;
  double t6887;
  double t6893;
  double t6896;
  double t6897;
  double t6902;
  double t6932;
  double t6934;
  double t6936;
  double t6945;
  double t6947;
  double t6948;
  double t6924;
  double t6940;
  double t6949;
  double t6951;
  double t6953;
  double t6956;
  double t6957;
  double t6961;
  double t6977;
  double t6978;
  double t6980;
  double t6981;
  double t6983;
  double t6991;
  double t7009;
  double t7012;
  double t7013;
  double t7008;
  double t7014;
  double t7018;
  double t7027;
  double t7030;
  double t7025;
  double t7033;
  double t7034;
  double t7040;
  double t7042;
  double t7046;
  double t7053;
  double t7055;
  double t7057;
  double t7063;
  double t7064;
  double t7080;
  double t7081;
  double t7082;
  double t7085;
  double t7086;
  double t7087;
  double t7092;
  double t7098;
  double t7101;
  double t7102;
  double t7104;
  double t7108;
  double t7109;
  double t7111;
  double t7121;
  double t7122;
  double t7129;
  double t7130;
  double t7132;
  double t7134;
  double t7137;
  double t7163;
  double t7165;
  double t7169;
  double t7174;
  double t7168;
  double t7176;
  double t7178;
  double t7180;
  double t7181;
  double t7183;
  double t7187;
  double t7188;
  double t7190;
  double t7195;
  double t7196;
  double t7095;
  double t7112;
  double t7114;
  double t6796;
  double t6813;
  double t6820;
  double t7119;
  double t7120;
  double t7146;
  double t7151;
  double t6835;
  double t6836;
  double t7154;
  double t7155;
  double t7156;
  double t6839;
  double t6840;
  double t6868;
  double t6875;
  double t6881;
  double t6906;
  double t6910;
  double t6913;
  double t6918;
  double t7224;
  double t7230;
  double t7231;
  double t7232;
  double t7234;
  double t7235;
  double t7241;
  double t7248;
  double t7253;
  double t7256;
  double t7257;
  double t7258;
  double t7259;
  double t7273;
  double t7274;
  double t7276;
  double t7277;
  double t7278;
  double t7280;
  double t7281;
  double t7282;
  double t7286;
  double t7287;
  double t7290;
  double t7291;
  double t7295;
  double t7317;
  double t7318;
  double t7322;
  double t7315;
  double t7344;
  double t7346;
  double t7347;
  double t7342;
  double t7316;
  double t7323;
  double t7325;
  double t7326;
  double t7327;
  double t7333;
  double t7334;
  double t7337;
  double t7338;
  double t7343;
  double t7348;
  double t7349;
  double t7350;
  double t7351;
  double t7356;
  double t7357;
  double t7358;
  double t7359;
  double t7367;
  double t7368;
  double t7369;
  double t7365;
  double t7366;
  double t7370;
  double t7373;
  double t7374;
  double t7375;
  double t7376;
  double t7377;
  double t7379;
  double t7380;
  double t7390;
  double t7391;
  double t7392;
  double t7393;
  double t7394;
  double t7396;
  double t7397;
  double t7398;
  double t7402;
  double t7405;
  double t7406;
  double t7407;
  double t7409;
  double t7339;
  double t7360;
  double t7361;
  double t7363;
  double t7364;
  double t7382;
  double t7383;
  double t7385;
  double t7386;
  double t7387;
  double t7429;
  double t7430;
  double t7431;
  double t7432;
  double t7433;
  double t7436;
  double t7437;
  double t7438;
  double t7446;
  double t7447;
  double t7448;
  double t7449;
  double t7451;
  double t7480;
  double t7481;
  double t7482;
  double t7493;
  double t7496;
  double t7499;
  double t7474;
  double t7476;
  double t7477;
  double t7504;
  double t7505;
  double t7506;
  double t7483;
  double t7500;
  double t7502;
  double t7535;
  double t7537;
  double t7525;
  double t7526;
  double t7469;
  double t7471;
  double t7472;
  double t7473;
  double t7478;
  double t7503;
  double t7507;
  double t7508;
  double t7509;
  double t7510;
  double t7512;
  double t7513;
  double t7514;
  double t7515;
  double t7516;
  double t7517;
  double t7520;
  double t7560;
  double t7561;
  double t7563;
  double t7564;
  double t7556;
  double t7568;
  double t7569;
  double t7572;
  double t7562;
  double t7565;
  double t7566;
  double t7528;
  double t7538;
  double t7540;
  double t7543;
  double t7544;
  double t7545;
  double t7546;
  double t7547;
  double t7548;
  double t7549;
  double t7550;
  double t7557;
  double t7558;
  double t7559;
  double t7567;
  double t7573;
  double t7574;
  double t7576;
  double t7577;
  double t7578;
  double t7579;
  double t7580;
  double t7581;
  double t7582;
  double t7583;
  double t7584;
  double t7594;
  double t7595;
  double t7596;
  double t7597;
  double t7599;
  double t7600;
  double t7601;
  double t7603;
  double t7607;
  double t7608;
  double t7609;
  double t7610;
  double t7612;
  double t7613;
  double t7524;
  double t7551;
  double t7553;
  double t7555;
  double t7585;
  double t7586;
  double t7587;
  double t7590;
  double t7591;
  double t7592;
  double t7623;
  double t7624;
  double t7625;
  double t7626;
  double t7628;
  double t7629;
  double t7630;
  double t7631;
  double t7636;
  double t7637;
  double t7639;
  double t7640;
  double t7643;
  double t7644;
  double t7652;
  double t7653;
  double t7655;
  double t7656;
  double t7658;
  double t7661;
  double t7662;
  double t7663;
  double t7668;
  double t7669;
  double t7670;
  double t7671;
  double t7673;
  double t7674;
  t105 = Sin(var1[14]);
  t128 = -0.104528*t105;
  t129 = 0. + t128;
  t149 = 0.994522*t105;
  t262 = 0. + t149;
  t600 = Cos(var1[14]);
  t634 = -1.*t600;
  t727 = 1. + t634;
  t599 = Cos(var1[13]);
  t1193 = -0.9890740084840001*t727;
  t1219 = 1. + t1193;
  t1224 = -0.104528*t1219;
  t1248 = -0.10338592795881554*t727;
  t1291 = t1224 + t1248;
  t777 = -0.010926102783999999*t727;
  t812 = 1. + t777;
  t848 = -0.994522*t812;
  t881 = -0.010866249592949247*t727;
  t958 = t848 + t881;
  t1296 = Sin(var1[13]);
  t146 = -0.994522*t129;
  t266 = -0.104528*t262;
  t278 = 0. + t146 + t266;
  t538 = Cos(var1[5]);
  t1848 = t599*t1291;
  t1934 = -1.*t958*t1296;
  t1941 = 0. + t1848 + t1934;
  t966 = t599*t958;
  t1438 = t1291*t1296;
  t1491 = 0. + t966 + t1438;
  t1947 = Sin(var1[5]);
  t2380 = -1.0000001112680001*t727;
  t2381 = 1. + t2380;
  t3020 = 0.703234*t1219;
  t3021 = -0.007683655156165408*t727;
  t3236 = -0.994522*t105;
  t3242 = 0. + t3236;
  t3353 = -0.707107*t3242;
  t3364 = t3020 + t3021 + t3353;
  t3560 = -0.073913*t812;
  t3596 = 0.07310496868062215*t727;
  t3598 = 0.104528*t105;
  t3655 = 0. + t3598;
  t3748 = -0.707107*t3655;
  t3771 = t3560 + t3596 + t3748;
  t2754 = -0.707107*t2381;
  t2760 = -0.073913*t129;
  t2818 = 0.703234*t262;
  t2821 = 0. + t2754 + t2760 + t2818;
  t2127 = Sin(var1[4]);
  t2148 = Cos(var1[4]);
  t4008 = t599*t3364;
  t4136 = -1.*t1296*t3771;
  t4219 = 0. + t4008 + t4136;
  t3365 = t1296*t3364;
  t3853 = t599*t3771;
  t3947 = 0. + t3365 + t3853;
  t4866 = Sin(var1[3]);
  t4911 = Cos(var1[3]);
  t4900 = -1.*t538*t4866*t2127;
  t4924 = t4911*t1947;
  t4949 = t4900 + t4924;
  t5003 = -1.*t4911*t538;
  t5007 = -1.*t4866*t2127*t1947;
  t5033 = t5003 + t5007;
  t4987 = -1.*t1296*t4949;
  t5135 = t599*t5033;
  t5145 = t4987 + t5135;
  t5170 = t599*t4949;
  t5174 = t1296*t5033;
  t5177 = t5170 + t5174;
  t64 = -1.0000001112680001*var2[14];
  t286 = var2[5]*t278;
  t416 = 0.994522*t129;
  t499 = 0.104528*t262;
  t514 = 0. + t416 + t499;
  t537 = var2[13]*t514;
  t1540 = t538*t1491;
  t2027 = -1.*t1941*t1947;
  t2087 = 0. + t1540 + t2027;
  t2096 = var2[4]*t2087;
  t2147 = -1.*t278*t2127;
  t2155 = t538*t1941;
  t2168 = t1491*t1947;
  t2176 = 0. + t2155 + t2168;
  t2217 = t2148*t2176;
  t2218 = 0. + t2147 + t2217;
  t2290 = var2[3]*t2218;
  t2298 = t64 + t286 + t537 + t2096 + t2290;
  t2363 = -4.610340000044122e-7*var2[14];
  t2468 = 0.707107*t2381;
  t2479 = 0.073913*t129;
  t2481 = -0.703234*t262;
  t2697 = 0. + t2468 + t2479 + t2481;
  t2753 = var2[13]*t2697;
  t2846 = var2[5]*t2821;
  t3997 = t538*t3947;
  t4329 = -1.*t4219*t1947;
  t4332 = 0. + t3997 + t4329;
  t4335 = var2[4]*t4332;
  t4337 = -1.*t2821*t2127;
  t4386 = t538*t4219;
  t4582 = t3947*t1947;
  t4600 = 0. + t4386 + t4582;
  t4605 = t2148*t4600;
  t4671 = 0. + t4337 + t4605;
  t4675 = var2[3]*t4671;
  t4747 = t2363 + t2753 + t2846 + t4335 + t4675;
  t5546 = 0.707107*t3242;
  t5549 = t3020 + t3021 + t5546;
  t5634 = 0.707107*t3655;
  t5635 = t3560 + t3596 + t5634;
  t5415 = 0. + t2468 + t2760 + t2818;
  t5727 = t599*t5549;
  t5816 = -1.*t1296*t5635;
  t5825 = 0. + t5727 + t5816;
  t5554 = t1296*t5549;
  t5657 = t599*t5635;
  t5685 = 0. + t5554 + t5657;
  t4895 = -1.*t2148*t262*t4866;
  t5163 = 0.103955395616*t727*t5145;
  t5183 = t1219*t5177;
  t5185 = t4895 + t5163 + t5183;
  t5197 = -1.*t2148*t129*t4866;
  t5216 = t812*t5145;
  t5254 = 0.103955395616*t727*t5177;
  t5261 = t5197 + t5216 + t5254;
  t5347 = 0. + t2754 + t2479 + t2481;
  t5369 = var2[13]*t5347;
  t5504 = var2[5]*t5415;
  t5697 = t538*t5685;
  t5843 = -1.*t5825*t1947;
  t5851 = 0. + t5697 + t5843;
  t5896 = var2[4]*t5851;
  t5937 = -1.*t5415*t2127;
  t5945 = t538*t5825;
  t5959 = t5685*t1947;
  t5963 = 0. + t5945 + t5959;
  t5971 = t2148*t5963;
  t5978 = 0. + t5937 + t5971;
  t6035 = var2[3]*t5978;
  t6093 = t2363 + t5369 + t5504 + t5896 + t6035;
  t6150 = 0.703234*t5185;
  t6151 = -0.073913*t5261;
  t6153 = -1.*t2381*t2148*t4866;
  t6164 = t3655*t5145;
  t6167 = t3242*t5177;
  t6172 = t6153 + t6164 + t6167;
  t2355 = 0.00578*t2298;
  t4832 = -0.00205*t4747;
  t4844 = t2355 + t4832;
  t6261 = t4911*t538*t2127;
  t6265 = t4866*t1947;
  t6270 = t6261 + t6265;
  t6275 = -1.*t538*t4866;
  t6281 = t4911*t2127*t1947;
  t6283 = t6275 + t6281;
  t6274 = -1.*t1296*t6270;
  t6286 = t599*t6283;
  t6301 = t6274 + t6286;
  t6306 = t599*t6270;
  t6314 = t1296*t6283;
  t6316 = t6306 + t6314;
  t5331 = -0.00205*t2298;
  t5342 = 0.00209*t4747;
  t6135 = -0.00001*t6093;
  t6137 = t5331 + t5342 + t6135;
  t6250 = t4911*t2148*t262;
  t6304 = 0.103955395616*t727*t6301;
  t6322 = t1219*t6316;
  t6346 = t6250 + t6304 + t6322;
  t6355 = t4911*t2148*t129;
  t6356 = t812*t6301;
  t6363 = 0.103955395616*t727*t6316;
  t6381 = t6355 + t6356 + t6363;
  t6195 = -0.00001*t4747;
  t6196 = 0.00676*t6093;
  t6201 = t6195 + t6196;
  t6401 = 0.703234*t6346;
  t6404 = -0.073913*t6381;
  t6406 = t2381*t4911*t2148;
  t6408 = t3655*t6301;
  t6411 = t3242*t6316;
  t6412 = t6406 + t6408 + t6411;
  t6458 = -1.*t4911*t2148*t538*t1296;
  t6459 = t599*t4911*t2148*t1947;
  t6466 = t6458 + t6459;
  t6471 = t599*t4911*t2148*t538;
  t6473 = t4911*t2148*t1296*t1947;
  t6476 = t6471 + t6473;
  t6456 = -1.*t4911*t262*t2127;
  t6468 = 0.103955395616*t727*t6466;
  t6478 = t1219*t6476;
  t6486 = t6456 + t6468 + t6478;
  t6499 = -1.*t4911*t129*t2127;
  t6500 = t812*t6466;
  t6504 = 0.103955395616*t727*t6476;
  t6506 = t6499 + t6500 + t6504;
  t6513 = 0.703234*t6486;
  t6521 = -0.073913*t6506;
  t6525 = -1.*t2381*t4911*t2127;
  t6532 = t3655*t6466;
  t6533 = t3242*t6476;
  t6535 = t6525 + t6532 + t6533;
  t6350 = -0.104528*t6346;
  t6382 = -0.994522*t6381;
  t6395 = t6350 + t6382;
  t6566 = -1.*t2148*t278;
  t6568 = -1.*t2127*t2176;
  t6569 = t6566 + t6568;
  t6576 = -1.*t2148*t2821;
  t6577 = -1.*t2127*t4600;
  t6578 = t6576 + t6577;
  t6416 = -0.707107*t6412;
  t6417 = t6401 + t6404 + t6416;
  t6598 = -1.*t2148*t5415;
  t6603 = -1.*t2127*t5963;
  t6604 = t6598 + t6603;
  t6429 = 0.707107*t6412;
  t6446 = t6401 + t6404 + t6429;
  t6645 = -1.*t2148*t538*t1296*t4866;
  t6646 = t599*t2148*t4866*t1947;
  t6648 = t6645 + t6646;
  t6650 = t599*t2148*t538*t4866;
  t6660 = t2148*t1296*t4866*t1947;
  t6666 = t6650 + t6660;
  t6642 = -1.*t262*t4866*t2127;
  t6649 = 0.103955395616*t727*t6648;
  t6683 = t1219*t6666;
  t6685 = t6642 + t6649 + t6683;
  t6689 = -1.*t129*t4866*t2127;
  t6692 = t812*t6648;
  t6693 = 0.103955395616*t727*t6666;
  t6706 = t6689 + t6692 + t6693;
  t6713 = 0.703234*t6685;
  t6714 = -0.073913*t6706;
  t6716 = -1.*t2381*t4866*t2127;
  t6720 = t3655*t6648;
  t6721 = t3242*t6666;
  t6730 = t6716 + t6720 + t6721;
  t6575 = 0.00578*var2[3]*t6569;
  t6579 = -0.00205*var2[3]*t6578;
  t6581 = t6575 + t6579;
  t6745 = t538*t4866*t2127;
  t6758 = -1.*t4911*t1947;
  t6759 = t6745 + t6758;
  t6769 = t4911*t538;
  t6770 = t4866*t2127*t1947;
  t6771 = t6769 + t6770;
  t6766 = -1.*t1296*t6759;
  t6772 = t599*t6771;
  t6773 = t6766 + t6772;
  t6786 = t599*t6759;
  t6788 = t1296*t6771;
  t6790 = t6786 + t6788;
  t6590 = -0.00205*var2[3]*t6569;
  t6595 = 0.00209*var2[3]*t6578;
  t6607 = -0.00001*var2[3]*t6604;
  t6614 = t6590 + t6595 + t6607;
  t6743 = t2148*t262*t4866;
  t6779 = 0.103955395616*t727*t6773;
  t6792 = t1219*t6790;
  t6795 = t6743 + t6779 + t6792;
  t6799 = t2148*t129*t4866;
  t6801 = t812*t6773;
  t6802 = 0.103955395616*t727*t6790;
  t6808 = t6799 + t6801 + t6802;
  t6619 = -0.00001*var2[3]*t6578;
  t6623 = 0.00676*var2[3]*t6604;
  t6627 = t6619 + t6623;
  t6823 = 0.703234*t6795;
  t6825 = -0.073913*t6808;
  t6827 = t2381*t2148*t4866;
  t6831 = t3655*t6773;
  t6832 = t3242*t6790;
  t6833 = t6827 + t6831 + t6832;
  t6852 = -1.*t2148*t538*t1296;
  t6853 = t599*t2148*t1947;
  t6854 = t6852 + t6853;
  t6856 = t599*t2148*t538;
  t6858 = t2148*t1296*t1947;
  t6861 = t6856 + t6858;
  t6843 = -1.*t262*t2127;
  t6855 = 0.103955395616*t727*t6854;
  t6862 = t1219*t6861;
  t6863 = t6843 + t6855 + t6862;
  t6870 = -1.*t129*t2127;
  t6871 = t812*t6854;
  t6873 = 0.103955395616*t727*t6861;
  t6874 = t6870 + t6871 + t6873;
  t6885 = 0.703234*t6863;
  t6887 = -0.073913*t6874;
  t6893 = -1.*t2381*t2127;
  t6896 = t3655*t6854;
  t6897 = t3242*t6861;
  t6902 = t6893 + t6896 + t6897;
  t6932 = t538*t1296*t2127;
  t6934 = -1.*t599*t2127*t1947;
  t6936 = t6932 + t6934;
  t6945 = -1.*t599*t538*t2127;
  t6947 = -1.*t1296*t2127*t1947;
  t6948 = t6945 + t6947;
  t6924 = -1.*t2148*t262;
  t6940 = 0.103955395616*t727*t6936;
  t6949 = t1219*t6948;
  t6951 = t6924 + t6940 + t6949;
  t6953 = -1.*t2148*t129;
  t6956 = t812*t6936;
  t6957 = 0.103955395616*t727*t6948;
  t6961 = t6953 + t6956 + t6957;
  t6977 = 0.703234*t6951;
  t6978 = -0.073913*t6961;
  t6980 = -1.*t2381*t2148;
  t6981 = t3655*t6936;
  t6983 = t3242*t6948;
  t6991 = t6980 + t6981 + t6983;
  t7009 = t538*t4866;
  t7012 = -1.*t4911*t2127*t1947;
  t7013 = t7009 + t7012;
  t7008 = t1296*t6270;
  t7014 = t599*t7013;
  t7018 = t7008 + t7014;
  t7027 = -1.*t1296*t7013;
  t7030 = t6306 + t7027;
  t7025 = 0.103955395616*t727*t7018;
  t7033 = t812*t7030;
  t7034 = t7025 + t7033;
  t7040 = t1219*t7018;
  t7042 = 0.103955395616*t727*t7030;
  t7046 = t7040 + t7042;
  t7053 = -0.073913*t7034;
  t7055 = 0.703234*t7046;
  t7057 = t3242*t7018;
  t7063 = t3655*t7030;
  t7064 = t7057 + t7063;
  t7080 = -1.*t538*t1941;
  t7081 = -1.*t1491*t1947;
  t7082 = t7080 + t7081;
  t7085 = var2[4]*t7082;
  t7086 = t1540 + t2027;
  t7087 = var2[3]*t2148*t7086;
  t7092 = t7085 + t7087;
  t7098 = -1.*t538*t4219;
  t7101 = -1.*t3947*t1947;
  t7102 = t7098 + t7101;
  t7104 = var2[4]*t7102;
  t7108 = t3997 + t4329;
  t7109 = var2[3]*t2148*t7108;
  t7111 = t7104 + t7109;
  t7121 = -1.*t538*t5825;
  t7122 = -1.*t5685*t1947;
  t7129 = t7121 + t7122;
  t7130 = var2[4]*t7129;
  t7132 = t5697 + t5843;
  t7134 = var2[3]*t2148*t7132;
  t7137 = t7130 + t7134;
  t7163 = t1296*t6759;
  t7165 = t7163 + t5135;
  t7169 = -1.*t1296*t5033;
  t7174 = t6786 + t7169;
  t7168 = 0.103955395616*t727*t7165;
  t7176 = t812*t7174;
  t7178 = t7168 + t7176;
  t7180 = t1219*t7165;
  t7181 = 0.103955395616*t727*t7174;
  t7183 = t7180 + t7181;
  t7187 = -0.073913*t7178;
  t7188 = 0.703234*t7183;
  t7190 = t3242*t7165;
  t7195 = t3655*t7174;
  t7196 = t7190 + t7195;
  t7095 = 0.00578*t7092;
  t7112 = -0.00205*t7111;
  t7114 = t7095 + t7112;
  t6796 = -0.104528*t6795;
  t6813 = -0.994522*t6808;
  t6820 = t6796 + t6813;
  t7119 = -0.00205*t7092;
  t7120 = 0.00209*t7111;
  t7146 = -0.00001*t7137;
  t7151 = t7119 + t7120 + t7146;
  t6835 = -0.707107*t6833;
  t6836 = t6823 + t6825 + t6835;
  t7154 = -0.00001*t7111;
  t7155 = 0.00676*t7137;
  t7156 = t7154 + t7155;
  t6839 = 0.707107*t6833;
  t6840 = t6823 + t6825 + t6839;
  t6868 = -0.104528*t6863;
  t6875 = -0.994522*t6874;
  t6881 = t6868 + t6875;
  t6906 = -0.707107*t6902;
  t6910 = t6885 + t6887 + t6906;
  t6913 = 0.707107*t6902;
  t6918 = t6885 + t6887 + t6913;
  t7224 = t2148*t538*t1296;
  t7230 = -1.*t599*t2148*t1947;
  t7231 = t7224 + t7230;
  t7232 = 0.103955395616*t727*t7231;
  t7234 = t812*t6861;
  t7235 = t7232 + t7234;
  t7241 = t1219*t7231;
  t7248 = t7241 + t6873;
  t7253 = -0.073913*t7235;
  t7256 = 0.703234*t7248;
  t7257 = t3242*t7231;
  t7258 = t3655*t6861;
  t7259 = t7257 + t7258;
  t7273 = -1.*t599*t6270;
  t7274 = -1.*t1296*t6283;
  t7276 = t7273 + t7274;
  t7277 = t812*t7276;
  t7278 = t6304 + t7277;
  t7280 = t1219*t6301;
  t7281 = 0.103955395616*t727*t7276;
  t7282 = t7280 + t7281;
  t7286 = -0.073913*t7278;
  t7287 = 0.703234*t7282;
  t7290 = t3242*t6301;
  t7291 = t3655*t7276;
  t7295 = t7290 + t7291;
  t7317 = -1.*t599*t958;
  t7318 = -1.*t1291*t1296;
  t7322 = t7317 + t7318;
  t7315 = t1848 + t1934;
  t7344 = -1.*t1296*t3364;
  t7346 = -1.*t599*t3771;
  t7347 = t7344 + t7346;
  t7342 = t4008 + t4136;
  t7316 = t538*t7315;
  t7323 = -1.*t7322*t1947;
  t7325 = t7316 + t7323;
  t7326 = var2[4]*t7325;
  t7327 = t538*t7322;
  t7333 = t7315*t1947;
  t7334 = t7327 + t7333;
  t7337 = var2[3]*t2148*t7334;
  t7338 = t7326 + t7337;
  t7343 = t538*t7342;
  t7348 = -1.*t7347*t1947;
  t7349 = t7343 + t7348;
  t7350 = var2[4]*t7349;
  t7351 = t538*t7347;
  t7356 = t7342*t1947;
  t7357 = t7351 + t7356;
  t7358 = var2[3]*t2148*t7357;
  t7359 = t7350 + t7358;
  t7367 = -1.*t1296*t5549;
  t7368 = -1.*t599*t5635;
  t7369 = t7367 + t7368;
  t7365 = t5727 + t5816;
  t7366 = t538*t7365;
  t7370 = -1.*t7369*t1947;
  t7373 = t7366 + t7370;
  t7374 = var2[4]*t7373;
  t7375 = t538*t7369;
  t7376 = t7365*t1947;
  t7377 = t7375 + t7376;
  t7379 = var2[3]*t2148*t7377;
  t7380 = t7374 + t7379;
  t7390 = -1.*t599*t6759;
  t7391 = -1.*t1296*t6771;
  t7392 = t7390 + t7391;
  t7393 = t812*t7392;
  t7394 = t6779 + t7393;
  t7396 = t1219*t6773;
  t7397 = 0.103955395616*t727*t7392;
  t7398 = t7396 + t7397;
  t7402 = -0.073913*t7394;
  t7405 = 0.703234*t7398;
  t7406 = t3242*t6773;
  t7407 = t3655*t7392;
  t7409 = t7406 + t7407;
  t7339 = 0.00578*t7338;
  t7360 = -0.00205*t7359;
  t7361 = t7339 + t7360;
  t7363 = -0.00205*t7338;
  t7364 = 0.00209*t7359;
  t7382 = -0.00001*t7380;
  t7383 = t7363 + t7364 + t7382;
  t7385 = -0.00001*t7359;
  t7386 = 0.00676*t7380;
  t7387 = t7385 + t7386;
  t7429 = -1.*t599*t2148*t538;
  t7430 = -1.*t2148*t1296*t1947;
  t7431 = t7429 + t7430;
  t7432 = t812*t7431;
  t7433 = t6855 + t7432;
  t7436 = t1219*t6854;
  t7437 = 0.103955395616*t727*t7431;
  t7438 = t7436 + t7437;
  t7446 = -0.073913*t7433;
  t7447 = 0.703234*t7438;
  t7448 = t3242*t6854;
  t7449 = t3655*t7431;
  t7451 = t7448 + t7449;
  t7480 = 0.7032334678540001*t600;
  t7481 = -0.7032341264384028*t105;
  t7482 = t7480 + t7481;
  t7493 = -0.07391248049600001*t600;
  t7496 = 0.07391254971569594*t105;
  t7499 = t7493 + t7496;
  t7474 = 0.707107662212*t600;
  t7476 = 0.7071070786783819*t105;
  t7477 = t7474 + t7476;
  t7504 = t599*t7482;
  t7505 = -1.*t1296*t7499;
  t7506 = t7504 + t7505;
  t7483 = t1296*t7482;
  t7500 = t599*t7499;
  t7502 = t7483 + t7500;
  t7535 = 1.3877787807814457e-17*t599*t105;
  t7537 = 0. + t7535;
  t7525 = 1.3877787807814457e-17*t1296*t105;
  t7526 = 0. + t7525;
  t7469 = -0.707107662212*t600;
  t7471 = -0.7071070786783819*t105;
  t7472 = t7469 + t7471;
  t7473 = var2[13]*t7472;
  t7478 = var2[5]*t7477;
  t7503 = t538*t7502;
  t7507 = -1.*t7506*t1947;
  t7508 = t7503 + t7507;
  t7509 = var2[4]*t7508;
  t7510 = -1.*t7477*t2127;
  t7512 = t538*t7506;
  t7513 = t7502*t1947;
  t7514 = t7512 + t7513;
  t7515 = t2148*t7514;
  t7516 = t7510 + t7515;
  t7517 = var2[3]*t7516;
  t7520 = t7473 + t7478 + t7509 + t7517;
  t7560 = -0.7032334678540001*t600;
  t7561 = t7560 + t7481;
  t7563 = 0.07391248049600001*t600;
  t7564 = t7563 + t7496;
  t7556 = t7474 + t7471;
  t7568 = t599*t7561;
  t7569 = -1.*t1296*t7564;
  t7572 = t7568 + t7569;
  t7562 = t1296*t7561;
  t7565 = t599*t7564;
  t7566 = t7562 + t7565;
  t7528 = t538*t7526;
  t7538 = -1.*t7537*t1947;
  t7540 = t7528 + t7538;
  t7543 = var2[4]*t7540;
  t7544 = t538*t7537;
  t7545 = t7526*t1947;
  t7546 = t7544 + t7545;
  t7547 = t2148*t7546;
  t7548 = 0. + t7547;
  t7549 = var2[3]*t7548;
  t7550 = 0. + t7543 + t7549;
  t7557 = var2[5]*t7556;
  t7558 = t7469 + t7476;
  t7559 = var2[13]*t7558;
  t7567 = t538*t7566;
  t7573 = -1.*t7572*t1947;
  t7574 = t7567 + t7573;
  t7576 = var2[4]*t7574;
  t7577 = -1.*t7556*t2127;
  t7578 = t538*t7572;
  t7579 = t7566*t1947;
  t7580 = t7578 + t7579;
  t7581 = t2148*t7580;
  t7582 = t7577 + t7581;
  t7583 = var2[3]*t7582;
  t7584 = t7557 + t7559 + t7576 + t7583;
  t7594 = 0.994522*t600*t4911*t2148;
  t7595 = 0.103955395616*t105*t6301;
  t7596 = -0.9890740084840001*t105*t6316;
  t7597 = t7594 + t7595 + t7596;
  t7599 = -0.104528*t600*t4911*t2148;
  t7600 = -0.010926102783999999*t105*t6301;
  t7601 = 0.103955395616*t105*t6316;
  t7603 = t7599 + t7600 + t7601;
  t7607 = -1.0000001112680001*t4911*t2148*t105;
  t7608 = 0.104528*t600*t6301;
  t7609 = -0.994522*t600*t6316;
  t7610 = t7607 + t7608 + t7609;
  t7612 = 0.703234*t7597;
  t7613 = -0.073913*t7603;
  t7524 = -0.00205*t7520;
  t7551 = 0.00578*t7550;
  t7553 = t7524 + t7551;
  t7555 = 0.00209*t7520;
  t7585 = -0.00001*t7584;
  t7586 = -0.00205*t7550;
  t7587 = t7555 + t7585 + t7586;
  t7590 = -0.00001*t7520;
  t7591 = 0.00676*t7584;
  t7592 = t7590 + t7591;
  t7623 = 0.994522*t600*t2148*t4866;
  t7624 = 0.103955395616*t105*t6773;
  t7625 = -0.9890740084840001*t105*t6790;
  t7626 = t7623 + t7624 + t7625;
  t7628 = -0.104528*t600*t2148*t4866;
  t7629 = -0.010926102783999999*t105*t6773;
  t7630 = 0.103955395616*t105*t6790;
  t7631 = t7628 + t7629 + t7630;
  t7636 = -1.0000001112680001*t2148*t105*t4866;
  t7637 = 0.104528*t600*t6773;
  t7639 = -0.994522*t600*t6790;
  t7640 = t7636 + t7637 + t7639;
  t7643 = 0.703234*t7626;
  t7644 = -0.073913*t7631;
  t7652 = -0.994522*t600*t2127;
  t7653 = 0.103955395616*t105*t6854;
  t7655 = -0.9890740084840001*t105*t6861;
  t7656 = t7652 + t7653 + t7655;
  t7658 = 0.104528*t600*t2127;
  t7661 = -0.010926102783999999*t105*t6854;
  t7662 = 0.103955395616*t105*t6861;
  t7663 = t7658 + t7661 + t7662;
  t7668 = 1.0000001112680001*t105*t2127;
  t7669 = 0.104528*t600*t6854;
  t7670 = -0.994522*t600*t6861;
  t7671 = t7668 + t7669 + t7670;
  t7673 = 0.703234*t7656;
  t7674 = -0.073913*t7663;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=t4844*(-0.104528*t5185 - 0.994522*t5261) + t6137*(t6150 + t6151 - 0.707107*t6172) + (t6150 + t6151 + 0.707107*t6172)*t6201;
  p_output1[10]=t4844*t6395 + t6137*t6417 + t6201*t6446;
  p_output1[11]=0;
  p_output1[12]=t4844*(-0.104528*t6486 - 0.994522*t6506) + t6137*(t6513 + t6521 - 0.707107*t6535) + t6201*(t6513 + t6521 + 0.707107*t6535) + t6395*t6581 + t6417*t6614 + t6446*t6627;
  p_output1[13]=t4844*(-0.104528*t6685 - 0.994522*t6706) + t6137*(t6713 + t6714 - 0.707107*t6730) + t6201*(t6713 + t6714 + 0.707107*t6730) + t6581*t6820 + t6614*t6836 + t6627*t6840;
  p_output1[14]=t6581*t6881 + t6614*t6910 + t6627*t6918 + t4844*(-0.104528*t6951 - 0.994522*t6961) + t6137*(t6977 + t6978 - 0.707107*t6991) + t6201*(t6977 + t6978 + 0.707107*t6991);
  p_output1[15]=t4844*(-0.994522*t7034 - 0.104528*t7046) + t6137*(t7053 + t7055 - 0.707107*t7064) + t6201*(t7053 + t7055 + 0.707107*t7064) + t6395*t7114 + t6417*t7151 + t6446*t7156;
  p_output1[16]=t6820*t7114 + t6836*t7151 + t6840*t7156 + t4844*(-0.994522*t7178 - 0.104528*t7183) + t6137*(t7187 + t7188 - 0.707107*t7196) + t6201*(t7187 + t7188 + 0.707107*t7196);
  p_output1[17]=t6881*t7114 + t6910*t7151 + t6918*t7156 + t4844*(-0.994522*t7235 - 0.104528*t7248) + t6137*(t7253 + t7256 - 0.707107*t7259) + t6201*(t7253 + t7256 + 0.707107*t7259);
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t4844*(-0.994522*t7278 - 0.104528*t7282) + t6137*(t7286 + t7287 - 0.707107*t7295) + t6201*(t7286 + t7287 + 0.707107*t7295) + t6395*t7361 + t6417*t7383 + t6446*t7387;
  p_output1[40]=t6820*t7361 + t6836*t7383 + t6840*t7387 + t4844*(-0.994522*t7394 - 0.104528*t7398) + t6137*(t7402 + t7405 - 0.707107*t7409) + t6201*(t7402 + t7405 + 0.707107*t7409);
  p_output1[41]=t6881*t7361 + t6910*t7383 + t6918*t7387 + t4844*(-0.994522*t7433 - 0.104528*t7438) + t6137*(t7446 + t7447 - 0.707107*t7451) + t6201*(t7446 + t7447 + 0.707107*t7451);
  p_output1[42]=t6395*t7553 + t6417*t7587 + t6446*t7592 + t4844*(-0.104528*t7597 - 0.994522*t7603) + t6137*(-0.707107*t7610 + t7612 + t7613) + t6201*(0.707107*t7610 + t7612 + t7613);
  p_output1[43]=t6820*t7553 + t6836*t7587 + t6840*t7592 + t4844*(-0.104528*t7626 - 0.994522*t7631) + t6137*(-0.707107*t7640 + t7643 + t7644) + t6201*(0.707107*t7640 + t7643 + t7644);
  p_output1[44]=t6881*t7553 + t6910*t7587 + t6918*t7592 + t4844*(-0.104528*t7656 - 0.994522*t7663) + t6137*(-0.707107*t7671 + t7673 + t7674) + t6201*(0.707107*t7671 + t7673 + t7674);
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jq_AMWorld_left_shoulder_pitch_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
