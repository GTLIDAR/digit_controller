/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:20:43 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "R_right_toe_roll_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t271;
  double t1092;
  double t1135;
  double t1093;
  double t1199;
  double t873;
  double t922;
  double t1030;
  double t1280;
  double t1132;
  double t1201;
  double t1223;
  double t1037;
  double t1281;
  double t1303;
  double t1304;
  double t236;
  double t285;
  double t365;
  double t1258;
  double t1454;
  double t1474;
  double t1507;
  double t1603;
  double t1611;
  double t1807;
  double t1810;
  double t1817;
  double t366;
  double t530;
  double t609;
  double t1478;
  double t1479;
  double t1484;
  double t1629;
  double t1632;
  double t1670;
  double t1679;
  double t1681;
  double t1683;
  double t1723;
  double t1749;
  double t1752;
  double t1753;
  double t1835;
  double t1837;
  double t1841;
  double t1853;
  double t1854;
  double t1855;
  double t1860;
  double t1864;
  double t1865;
  double t1868;
  double t1902;
  double t1911;
  double t1913;
  double t150;
  double t167;
  double t247;
  double t268;
  double t1635;
  double t1640;
  double t1645;
  double t1754;
  double t1824;
  double t1829;
  double t1869;
  double t1883;
  double t1948;
  double t1952;
  double t1962;
  double t1977;
  double t1981;
  double t1982;
  double t1983;
  double t1989;
  double t2005;
  double t2007;
  double t2020;
  double t2021;
  double t2022;
  double t2029;
  double t2036;
  double t2044;
  double t2146;
  double t2152;
  double t2156;
  double t183;
  double t213;
  double t1900;
  double t1990;
  double t1993;
  double t1995;
  double t2045;
  double t2068;
  double t2091;
  double t2093;
  double t2096;
  double t2097;
  double t2099;
  double t2131;
  double t2133;
  double t2137;
  double t2160;
  double t2164;
  double t2167;
  double t2172;
  double t2186;
  double t2193;
  double t2197;
  double t2201;
  double t2204;
  double t2210;
  double t2217;
  double t2218;
  double t2233;
  double t99;
  double t103;
  double t109;
  double t135;
  double t157;
  double t163;
  double t2076;
  double t2078;
  double t2090;
  double t2142;
  double t2157;
  double t2158;
  double t2211;
  double t2212;
  double t2242;
  double t2244;
  double t2252;
  double t2253;
  double t2254;
  double t2258;
  double t2260;
  double t2261;
  double t2271;
  double t2272;
  double t2275;
  double t2277;
  double t2278;
  double t2279;
  double t2281;
  double t2282;
  double t118;
  double t136;
  double t141;
  double t2216;
  double t2262;
  double t2269;
  double t2270;
  double t2290;
  double t2291;
  double t111;
  double t2311;
  double t2314;
  double t2315;
  double t2316;
  double t2324;
  double t2326;
  double t2334;
  double t2337;
  double t2347;
  double t2349;
  double t2355;
  double t2357;
  double t2362;
  double t2363;
  double t2366;
  double t2369;
  double t2370;
  double t2371;
  double t119;
  double t133;
  double t2431;
  double t2436;
  double t2437;
  double t2441;
  double t2444;
  double t2446;
  double t2440;
  double t2447;
  double t2449;
  double t2453;
  double t2454;
  double t2457;
  double t2430;
  double t2450;
  double t2462;
  double t2463;
  double t2466;
  double t2469;
  double t2471;
  double t2473;
  double t2476;
  double t2477;
  double t2478;
  double t2483;
  double t2465;
  double t2475;
  double t2485;
  double t2486;
  double t2489;
  double t2491;
  double t2492;
  double t2493;
  double t2495;
  double t2498;
  double t2500;
  double t2501;
  double t2487;
  double t2494;
  double t2503;
  double t2504;
  double t2508;
  double t2509;
  double t2512;
  double t2513;
  double t2518;
  double t2519;
  double t2520;
  double t2522;
  double t2297;
  double t2304;
  double t2507;
  double t2517;
  double t2527;
  double t2528;
  double t2535;
  double t2537;
  double t2538;
  double t2539;
  double t2542;
  double t2543;
  double t2545;
  double t2554;
  double t2341;
  double t2343;
  double t2346;
  double t2386;
  double t2387;
  double t2532;
  double t2541;
  double t2556;
  double t2574;
  double t2394;
  double t2396;
  double t2585;
  double t2587;
  double t2593;
  double t2599;
  double t2409;
  double t2412;
  double t2413;
  double t2604;
  double t2607;
  double t2611;
  double t2615;
  double t2644;
  double t2648;
  double t2649;
  double t2652;
  double t2655;
  double t2656;
  double t2635;
  double t2651;
  double t2657;
  double t2659;
  double t2672;
  double t2674;
  double t2676;
  double t2678;
  double t2684;
  double t2688;
  double t2690;
  double t2691;
  double t2662;
  double t2681;
  double t2692;
  double t2695;
  double t2715;
  double t2717;
  double t2722;
  double t2726;
  double t2731;
  double t2732;
  double t2736;
  double t2737;
  double t2703;
  double t2727;
  double t2738;
  double t2739;
  double t2747;
  double t2748;
  double t2757;
  double t2762;
  double t2768;
  double t2770;
  double t2772;
  double t2773;
  double t2743;
  double t2766;
  double t2774;
  double t2782;
  double t2789;
  double t2790;
  double t2791;
  double t2793;
  double t2806;
  double t2811;
  double t2813;
  double t2819;
  double t2787;
  double t2794;
  double t2823;
  double t2825;
  double t2830;
  double t2835;
  double t2837;
  double t2839;
  double t2841;
  double t2843;
  double t2846;
  double t2856;
  double t2293;
  double t2340;
  double t2374;
  double t2382;
  double t2393;
  double t2402;
  double t2417;
  double t2419;
  double t2890;
  double t2891;
  double t2895;
  double t2899;
  double t2906;
  double t2908;
  double t2579;
  double t2601;
  double t2616;
  double t2621;
  double t2623;
  double t2624;
  double t2626;
  double t2627;
  double t2826;
  double t2840;
  double t2857;
  double t2860;
  double t2869;
  double t2877;
  double t2879;
  double t2881;
  double t2892;
  double t2904;
  double t2913;
  double t2921;
  double t2929;
  double t2931;
  double t2934;
  double t2935;
  double t2949;
  double t2950;
  double t2953;
  double t2955;
  t271 = Cos(var1[3]);
  t1092 = Cos(var1[5]);
  t1135 = Sin(var1[3]);
  t1093 = Sin(var1[4]);
  t1199 = Sin(var1[5]);
  t873 = Cos(var1[18]);
  t922 = -1.*t873;
  t1030 = 1. + t922;
  t1280 = Cos(var1[17]);
  t1132 = t271*t1092*t1093;
  t1201 = t1135*t1199;
  t1223 = t1132 + t1201;
  t1037 = Sin(var1[17]);
  t1281 = -1.*t1092*t1135;
  t1303 = t271*t1093*t1199;
  t1304 = t1281 + t1303;
  t236 = Sin(var1[19]);
  t285 = Cos(var1[4]);
  t365 = Sin(var1[18]);
  t1258 = -1.*t1037*t1223;
  t1454 = t1280*t1304;
  t1474 = t1258 + t1454;
  t1507 = t1280*t1223;
  t1603 = t1037*t1304;
  t1611 = t1507 + t1603;
  t1807 = Cos(var1[19]);
  t1810 = -1.*t1807;
  t1817 = 1. + t1810;
  t366 = -0.366501*t365;
  t530 = 0. + t366;
  t609 = t271*t285*t530;
  t1478 = 0.340999127418*t1030*t1474;
  t1479 = -0.134322983001*t1030;
  t1484 = 1. + t1479;
  t1629 = t1484*t1611;
  t1632 = t609 + t1478 + t1629;
  t1670 = 0.930418*t365;
  t1679 = 0. + t1670;
  t1681 = t271*t285*t1679;
  t1683 = -0.8656776547239999*t1030;
  t1723 = 1. + t1683;
  t1749 = t1723*t1474;
  t1752 = 0.340999127418*t1030*t1611;
  t1753 = t1681 + t1749 + t1752;
  t1835 = -1.000000637725*t1030;
  t1837 = 1. + t1835;
  t1841 = t1837*t271*t285;
  t1853 = -0.930418*t365;
  t1854 = 0. + t1853;
  t1855 = t1854*t1474;
  t1860 = 0.366501*t365;
  t1864 = 0. + t1860;
  t1865 = t1864*t1611;
  t1868 = t1841 + t1855 + t1865;
  t1902 = Cos(var1[20]);
  t1911 = -1.*t1902;
  t1913 = 1. + t1911;
  t150 = Sin(var1[21]);
  t167 = Sin(var1[20]);
  t247 = 0.930418*t236;
  t268 = 0. + t247;
  t1635 = t268*t1632;
  t1640 = 0.366501*t236;
  t1645 = 0. + t1640;
  t1754 = t1645*t1753;
  t1824 = -1.000000637725*t1817;
  t1829 = 1. + t1824;
  t1869 = t1829*t1868;
  t1883 = t1635 + t1754 + t1869;
  t1948 = -0.8656776547239999*t1817;
  t1952 = 1. + t1948;
  t1962 = t1952*t1632;
  t1977 = -0.340999127418*t1817*t1753;
  t1981 = -0.930418*t236;
  t1982 = 0. + t1981;
  t1983 = t1982*t1868;
  t1989 = t1962 + t1977 + t1983;
  t2005 = -0.340999127418*t1817*t1632;
  t2007 = -0.134322983001*t1817;
  t2020 = 1. + t2007;
  t2021 = t2020*t1753;
  t2022 = -0.366501*t236;
  t2029 = 0. + t2022;
  t2036 = t2029*t1868;
  t2044 = t2005 + t2021 + t2036;
  t2146 = Cos(var1[21]);
  t2152 = -1.*t2146;
  t2156 = 1. + t2152;
  t183 = 0.366501*t167;
  t213 = 0. + t183;
  t1900 = t213*t1883;
  t1990 = -0.340999127418*t1913*t1989;
  t1993 = -0.134322983001*t1913;
  t1995 = 1. + t1993;
  t2045 = t1995*t2044;
  t2068 = t1900 + t1990 + t2045;
  t2091 = 0.930418*t167;
  t2093 = 0. + t2091;
  t2096 = t2093*t1883;
  t2097 = -0.8656776547239999*t1913;
  t2099 = 1. + t2097;
  t2131 = t2099*t1989;
  t2133 = -0.340999127418*t1913*t2044;
  t2137 = t2096 + t2131 + t2133;
  t2160 = -1.000000637725*t1913;
  t2164 = 1. + t2160;
  t2167 = t2164*t1883;
  t2172 = -0.930418*t167;
  t2186 = 0. + t2172;
  t2193 = t2186*t1989;
  t2197 = -0.366501*t167;
  t2201 = 0. + t2197;
  t2204 = t2201*t2044;
  t2210 = t2167 + t2193 + t2204;
  t2217 = Cos(var1[22]);
  t2218 = -1.*t2217;
  t2233 = 1. + t2218;
  t99 = Cos(var1[23]);
  t103 = -1.*t99;
  t109 = 1. + t103;
  t135 = Sin(var1[22]);
  t157 = -0.366501*t150;
  t163 = 0. + t157;
  t2076 = t163*t2068;
  t2078 = -0.930418*t150;
  t2090 = 0. + t2078;
  t2142 = t2090*t2137;
  t2157 = -1.000000637725*t2156;
  t2158 = 1. + t2157;
  t2211 = t2158*t2210;
  t2212 = t2076 + t2142 + t2211;
  t2242 = -0.134322983001*t2156;
  t2244 = 1. + t2242;
  t2252 = t2244*t2068;
  t2253 = -0.340999127418*t2156*t2137;
  t2254 = 0.366501*t150;
  t2258 = 0. + t2254;
  t2260 = t2258*t2210;
  t2261 = t2252 + t2253 + t2260;
  t2271 = -0.340999127418*t2156*t2068;
  t2272 = -0.8656776547239999*t2156;
  t2275 = 1. + t2272;
  t2277 = t2275*t2137;
  t2278 = 0.930418*t150;
  t2279 = 0. + t2278;
  t2281 = t2279*t2210;
  t2282 = t2271 + t2277 + t2281;
  t118 = Sin(var1[23]);
  t136 = 0.930418*t135;
  t141 = 0. + t136;
  t2216 = t141*t2212;
  t2262 = -0.340999127418*t2233*t2261;
  t2269 = -0.8656776547239999*t2233;
  t2270 = 1. + t2269;
  t2290 = t2270*t2282;
  t2291 = t2216 + t2262 + t2290;
  t111 = 0.120666640478*t109;
  t2311 = 0.366501*t135;
  t2314 = 0. + t2311;
  t2315 = t2314*t2212;
  t2316 = -0.134322983001*t2233;
  t2324 = 1. + t2316;
  t2326 = t2324*t2261;
  t2334 = -0.340999127418*t2233*t2282;
  t2337 = t2315 + t2326 + t2334;
  t2347 = -1.000000637725*t2233;
  t2349 = 1. + t2347;
  t2355 = t2349*t2212;
  t2357 = -0.366501*t135;
  t2362 = 0. + t2357;
  t2363 = t2362*t2261;
  t2366 = -0.930418*t135;
  t2369 = 0. + t2366;
  t2370 = t2369*t2282;
  t2371 = t2355 + t2363 + t2370;
  t119 = 0.803828*t118;
  t133 = t111 + t119;
  t2431 = t1092*t1135*t1093;
  t2436 = -1.*t271*t1199;
  t2437 = t2431 + t2436;
  t2441 = t271*t1092;
  t2444 = t1135*t1093*t1199;
  t2446 = t2441 + t2444;
  t2440 = -1.*t1037*t2437;
  t2447 = t1280*t2446;
  t2449 = t2440 + t2447;
  t2453 = t1280*t2437;
  t2454 = t1037*t2446;
  t2457 = t2453 + t2454;
  t2430 = t285*t530*t1135;
  t2450 = 0.340999127418*t1030*t2449;
  t2462 = t1484*t2457;
  t2463 = t2430 + t2450 + t2462;
  t2466 = t285*t1679*t1135;
  t2469 = t1723*t2449;
  t2471 = 0.340999127418*t1030*t2457;
  t2473 = t2466 + t2469 + t2471;
  t2476 = t1837*t285*t1135;
  t2477 = t1854*t2449;
  t2478 = t1864*t2457;
  t2483 = t2476 + t2477 + t2478;
  t2465 = t268*t2463;
  t2475 = t1645*t2473;
  t2485 = t1829*t2483;
  t2486 = t2465 + t2475 + t2485;
  t2489 = t1952*t2463;
  t2491 = -0.340999127418*t1817*t2473;
  t2492 = t1982*t2483;
  t2493 = t2489 + t2491 + t2492;
  t2495 = -0.340999127418*t1817*t2463;
  t2498 = t2020*t2473;
  t2500 = t2029*t2483;
  t2501 = t2495 + t2498 + t2500;
  t2487 = t213*t2486;
  t2494 = -0.340999127418*t1913*t2493;
  t2503 = t1995*t2501;
  t2504 = t2487 + t2494 + t2503;
  t2508 = t2093*t2486;
  t2509 = t2099*t2493;
  t2512 = -0.340999127418*t1913*t2501;
  t2513 = t2508 + t2509 + t2512;
  t2518 = t2164*t2486;
  t2519 = t2186*t2493;
  t2520 = t2201*t2501;
  t2522 = t2518 + t2519 + t2520;
  t2297 = -0.952469601425*t109;
  t2304 = 1. + t2297;
  t2507 = t163*t2504;
  t2517 = t2090*t2513;
  t2527 = t2158*t2522;
  t2528 = t2507 + t2517 + t2527;
  t2535 = t2244*t2504;
  t2537 = -0.340999127418*t2156*t2513;
  t2538 = t2258*t2522;
  t2539 = t2535 + t2537 + t2538;
  t2542 = -0.340999127418*t2156*t2504;
  t2543 = t2275*t2513;
  t2545 = t2279*t2522;
  t2554 = t2542 + t2543 + t2545;
  t2341 = 0.175248972904*t109;
  t2343 = -0.553471*t118;
  t2346 = t2341 + t2343;
  t2386 = -0.693671301908*t109;
  t2387 = 1. + t2386;
  t2532 = t141*t2528;
  t2541 = -0.340999127418*t2233*t2539;
  t2556 = t2270*t2554;
  t2574 = t2532 + t2541 + t2556;
  t2394 = -0.803828*t118;
  t2396 = t111 + t2394;
  t2585 = t2314*t2528;
  t2587 = t2324*t2539;
  t2593 = -0.340999127418*t2233*t2554;
  t2599 = t2585 + t2587 + t2593;
  t2409 = 0.444895486988*t109;
  t2412 = 0.218018*t118;
  t2413 = t2409 + t2412;
  t2604 = t2349*t2528;
  t2607 = t2362*t2539;
  t2611 = t2369*t2554;
  t2615 = t2604 + t2607 + t2611;
  t2644 = -1.*t285*t1092*t1037;
  t2648 = t1280*t285*t1199;
  t2649 = t2644 + t2648;
  t2652 = t1280*t285*t1092;
  t2655 = t285*t1037*t1199;
  t2656 = t2652 + t2655;
  t2635 = -1.*t530*t1093;
  t2651 = 0.340999127418*t1030*t2649;
  t2657 = t1484*t2656;
  t2659 = t2635 + t2651 + t2657;
  t2672 = -1.*t1679*t1093;
  t2674 = t1723*t2649;
  t2676 = 0.340999127418*t1030*t2656;
  t2678 = t2672 + t2674 + t2676;
  t2684 = -1.*t1837*t1093;
  t2688 = t1854*t2649;
  t2690 = t1864*t2656;
  t2691 = t2684 + t2688 + t2690;
  t2662 = t268*t2659;
  t2681 = t1645*t2678;
  t2692 = t1829*t2691;
  t2695 = t2662 + t2681 + t2692;
  t2715 = t1952*t2659;
  t2717 = -0.340999127418*t1817*t2678;
  t2722 = t1982*t2691;
  t2726 = t2715 + t2717 + t2722;
  t2731 = -0.340999127418*t1817*t2659;
  t2732 = t2020*t2678;
  t2736 = t2029*t2691;
  t2737 = t2731 + t2732 + t2736;
  t2703 = t213*t2695;
  t2727 = -0.340999127418*t1913*t2726;
  t2738 = t1995*t2737;
  t2739 = t2703 + t2727 + t2738;
  t2747 = t2093*t2695;
  t2748 = t2099*t2726;
  t2757 = -0.340999127418*t1913*t2737;
  t2762 = t2747 + t2748 + t2757;
  t2768 = t2164*t2695;
  t2770 = t2186*t2726;
  t2772 = t2201*t2737;
  t2773 = t2768 + t2770 + t2772;
  t2743 = t163*t2739;
  t2766 = t2090*t2762;
  t2774 = t2158*t2773;
  t2782 = t2743 + t2766 + t2774;
  t2789 = t2244*t2739;
  t2790 = -0.340999127418*t2156*t2762;
  t2791 = t2258*t2773;
  t2793 = t2789 + t2790 + t2791;
  t2806 = -0.340999127418*t2156*t2739;
  t2811 = t2275*t2762;
  t2813 = t2279*t2773;
  t2819 = t2806 + t2811 + t2813;
  t2787 = t141*t2782;
  t2794 = -0.340999127418*t2233*t2793;
  t2823 = t2270*t2819;
  t2825 = t2787 + t2794 + t2823;
  t2830 = t2314*t2782;
  t2835 = t2324*t2793;
  t2837 = -0.340999127418*t2233*t2819;
  t2839 = t2830 + t2835 + t2837;
  t2841 = t2349*t2782;
  t2843 = t2362*t2793;
  t2846 = t2369*t2819;
  t2856 = t2841 + t2843 + t2846;
  t2293 = t133*t2291;
  t2340 = t2304*t2337;
  t2374 = t2346*t2371;
  t2382 = t2293 + t2340 + t2374;
  t2393 = t2387*t2291;
  t2402 = t2396*t2337;
  t2417 = t2413*t2371;
  t2419 = t2393 + t2402 + t2417;
  t2890 = -0.218018*t118;
  t2891 = t2409 + t2890;
  t2895 = 0.553471*t118;
  t2899 = t2341 + t2895;
  t2906 = -0.353861996165*t109;
  t2908 = 1. + t2906;
  t2579 = t133*t2574;
  t2601 = t2304*t2599;
  t2616 = t2346*t2615;
  t2621 = t2579 + t2601 + t2616;
  t2623 = t2387*t2574;
  t2624 = t2396*t2599;
  t2626 = t2413*t2615;
  t2627 = t2623 + t2624 + t2626;
  t2826 = t133*t2825;
  t2840 = t2304*t2839;
  t2857 = t2346*t2856;
  t2860 = t2826 + t2840 + t2857;
  t2869 = t2387*t2825;
  t2877 = t2396*t2839;
  t2879 = t2413*t2856;
  t2881 = t2869 + t2877 + t2879;
  t2892 = t2891*t2291;
  t2904 = t2899*t2337;
  t2913 = t2908*t2371;
  t2921 = t2892 + t2904 + t2913;
  t2929 = t2891*t2574;
  t2931 = t2899*t2599;
  t2934 = t2908*t2615;
  t2935 = t2929 + t2931 + t2934;
  t2949 = t2891*t2825;
  t2950 = t2899*t2839;
  t2953 = t2908*t2856;
  t2955 = t2949 + t2950 + t2953;
  p_output1[0]=-0.930418*t2382 + 0.366501*t2419;
  p_output1[1]=-0.930418*t2621 + 0.366501*t2627;
  p_output1[2]=-0.930418*t2860 + 0.366501*t2881;
  p_output1[3]=-0.294604*t2382 - 0.747896*t2419 + 0.594863*t2921;
  p_output1[4]=-0.294604*t2621 - 0.747896*t2627 + 0.594863*t2935;
  p_output1[5]=-0.294604*t2860 - 0.747896*t2881 + 0.594863*t2955;
  p_output1[6]=0.218018*t2382 + 0.553471*t2419 + 0.803828*t2921;
  p_output1[7]=0.218018*t2621 + 0.553471*t2627 + 0.803828*t2935;
  p_output1[8]=0.218018*t2860 + 0.553471*t2881 + 0.803828*t2955;
}



void R_right_toe_roll_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
