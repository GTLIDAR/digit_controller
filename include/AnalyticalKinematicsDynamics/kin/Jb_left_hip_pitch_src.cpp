/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:56:38 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jb_left_hip_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t529;
  double t581;
  double t630;
  double t338;
  double t432;
  double t457;
  double t899;
  double t737;
  double t738;
  double t863;
  double t891;
  double t908;
  double t931;
  double t963;
  double t979;
  double t1204;
  double t1352;
  double t1371;
  double t1487;
  double t1520;
  double t1544;
  double t1579;
  double t1597;
  double t1646;
  double t1756;
  double t1783;
  double t1791;
  double t1813;
  double t1913;
  double t1921;
  double t1931;
  double t1949;
  double t1953;
  double t1973;
  double t2108;
  double t1019;
  double t1078;
  double t1081;
  double t1629;
  double t1718;
  double t1753;
  double t1997;
  double t2069;
  double t309;
  double t2125;
  double t2176;
  double t2210;
  double t2268;
  double t2276;
  double t2390;
  double t2464;
  double t2516;
  double t2621;
  double t2070;
  double t2551;
  double t2584;
  double t176;
  double t2622;
  double t2653;
  double t2721;
  double t138;
  double t3508;
  double t3509;
  double t3525;
  double t3620;
  double t3628;
  double t3631;
  double t3642;
  double t3649;
  double t3655;
  double t3606;
  double t3639;
  double t3684;
  double t3706;
  double t3752;
  double t3794;
  double t3814;
  double t3820;
  double t2873;
  double t2897;
  double t3743;
  double t3856;
  double t3904;
  double t3932;
  double t3983;
  double t3990;
  double t3061;
  double t3070;
  double t3072;
  double t3150;
  double t3155;
  double t3273;
  double t3326;
  double t4374;
  double t4386;
  double t4401;
  double t4440;
  double t4462;
  double t4469;
  double t4540;
  double t4550;
  double t4552;
  double t4432;
  double t4510;
  double t4597;
  double t4608;
  double t4640;
  double t4658;
  double t4664;
  double t4708;
  double t4623;
  double t4726;
  double t4732;
  double t4822;
  double t4862;
  double t4880;
  double t2614;
  double t2766;
  double t2847;
  double t2943;
  double t2968;
  double t2984;
  double t3055;
  double t3097;
  double t3172;
  double t3353;
  double t3360;
  double t3371;
  double t3382;
  double t3916;
  double t4087;
  double t4190;
  double t4203;
  double t4209;
  double t4225;
  double t4236;
  double t4266;
  double t4285;
  double t4291;
  double t4305;
  double t4333;
  double t4357;
  double t4745;
  double t4916;
  double t4932;
  double t4999;
  double t5003;
  double t5023;
  double t5044;
  double t5074;
  double t5097;
  double t5113;
  double t5126;
  double t5131;
  double t5142;
  double t5668;
  double t5677;
  double t5691;
  double t5692;
  double t5713;
  double t5716;
  double t5803;
  double t5811;
  double t5869;
  double t5874;
  double t5878;
  double t5882;
  double t5918;
  double t5948;
  double t5955;
  double t5959;
  double t5968;
  double t5970;
  double t5984;
  double t5659;
  double t5664;
  double t5667;
  double t5781;
  double t5942;
  double t6012;
  double t6024;
  double t6081;
  double t6123;
  double t6128;
  double t6185;
  double t6191;
  double t6215;
  double t6238;
  double t5614;
  double t5621;
  double t5652;
  double t6071;
  double t6250;
  double t6261;
  double t6287;
  double t6307;
  double t6388;
  double t6396;
  double t6451;
  double t6461;
  double t6473;
  double t6489;
  double t6501;
  double t6505;
  double t6527;
  double t6529;
  double t6551;
  double t6573;
  double t5499;
  double t5511;
  double t5554;
  double t5601;
  double t5604;
  double t5605;
  double t6271;
  double t6398;
  double t6424;
  double t6482;
  double t6577;
  double t6582;
  double t6629;
  double t6632;
  double t6645;
  double t5444;
  double t5461;
  double t5469;
  double t6683;
  double t6433;
  double t6899;
  double t6793;
  double t7007;
  double t6956;
  double t7071;
  double t7057;
  double t7132;
  double t7106;
  double t7167;
  double t7145;
  double t7574;
  double t7576;
  double t7578;
  double t7588;
  double t7602;
  double t7603;
  double t7614;
  double t7615;
  double t7702;
  double t7705;
  double t7707;
  double t7716;
  double t7723;
  double t7730;
  double t7731;
  double t7746;
  double t7799;
  double t7810;
  double t7811;
  double t7812;
  double t7784;
  double t7787;
  double t7789;
  double t7791;
  t529 = Cos(var1[8]);
  t581 = -1.*t529;
  t630 = 1. + t581;
  t338 = Cos(var1[7]);
  t432 = -1.*t338;
  t457 = 1. + t432;
  t899 = Sin(var1[8]);
  t737 = -0.8656776547239999*t630;
  t738 = 1. + t737;
  t863 = -0.657905*t738;
  t891 = 0.0883716288660118*t630;
  t908 = -0.930418*t899;
  t931 = 0. + t908;
  t963 = 0.707107*t931;
  t979 = t863 + t891 + t963;
  t1204 = -0.134322983001*t630;
  t1352 = 1. + t1204;
  t1371 = 0.259155*t1352;
  t1487 = -0.22434503092393926*t630;
  t1520 = 0.366501*t899;
  t1544 = 0. + t1520;
  t1579 = 0.707107*t1544;
  t1597 = t1371 + t1487 + t1579;
  t1646 = Sin(var1[7]);
  t1756 = -1.000000637725*t630;
  t1783 = 1. + t1756;
  t1791 = 0.707107*t1783;
  t1813 = -0.366501*t899;
  t1913 = 0. + t1813;
  t1921 = 0.259155*t1913;
  t1931 = 0.930418*t899;
  t1949 = 0. + t1931;
  t1953 = -0.657905*t1949;
  t1973 = t1791 + t1921 + t1953;
  t2108 = Cos(var1[6]);
  t1019 = -0.340999127418*t457*t979;
  t1078 = -0.8656776547239999*t457;
  t1081 = 1. + t1078;
  t1629 = t1081*t1597;
  t1718 = -0.930418*t1646;
  t1753 = 0. + t1718;
  t1997 = t1753*t1973;
  t2069 = 0. + t1019 + t1629 + t1997;
  t309 = Sin(var1[6]);
  t2125 = -0.134322983001*t457;
  t2176 = 1. + t2125;
  t2210 = t2176*t979;
  t2268 = -0.340999127418*t457*t1597;
  t2276 = -0.366501*t1646;
  t2390 = 0. + t2276;
  t2464 = t2390*t1973;
  t2516 = 0. + t2210 + t2268 + t2464;
  t2621 = Cos(var1[5]);
  t2070 = -1.*t309*t2069;
  t2551 = t2108*t2516;
  t2584 = 0. + t2070 + t2551;
  t176 = Sin(var1[5]);
  t2622 = t2108*t2069;
  t2653 = t309*t2516;
  t2721 = 0. + t2622 + t2653;
  t138 = Sin(var1[3]);
  t3508 = 0.657905*t738;
  t3509 = -0.0883716288660118*t630;
  t3525 = t3508 + t3509 + t963;
  t3620 = -0.259155*t1352;
  t3628 = 0.22434503092393926*t630;
  t3631 = t3620 + t3628 + t1579;
  t3642 = -0.259155*t1913;
  t3649 = 0.657905*t1949;
  t3655 = t1791 + t3642 + t3649;
  t3606 = -0.340999127418*t457*t3525;
  t3639 = t1081*t3631;
  t3684 = t1753*t3655;
  t3706 = 0. + t3606 + t3639 + t3684;
  t3752 = t2176*t3525;
  t3794 = -0.340999127418*t457*t3631;
  t3814 = t2390*t3655;
  t3820 = 0. + t3752 + t3794 + t3814;
  t2873 = Cos(var1[3]);
  t2897 = Sin(var1[4]);
  t3743 = -1.*t309*t3706;
  t3856 = t2108*t3820;
  t3904 = 0. + t3743 + t3856;
  t3932 = t2108*t3706;
  t3983 = t309*t3820;
  t3990 = 0. + t3932 + t3983;
  t3061 = Cos(var1[4]);
  t3070 = 0.366501*t1646;
  t3072 = 0. + t3070;
  t3150 = 0.930418*t1646;
  t3155 = 0. + t3150;
  t3273 = -1.000000637725*t457;
  t3326 = 1. + t3273;
  t4374 = -0.366501*t738;
  t4386 = -0.3172717261340007*t630;
  t4401 = t4374 + t4386;
  t4440 = -0.930418*t1352;
  t4462 = -0.12497652119782442*t630;
  t4469 = t4440 + t4462;
  t4540 = -0.930418*t1913;
  t4550 = -0.366501*t1949;
  t4552 = t4540 + t4550;
  t4432 = -0.340999127418*t457*t4401;
  t4510 = t1081*t4469;
  t4597 = t1753*t4552;
  t4608 = 0. + t4432 + t4510 + t4597;
  t4640 = t2176*t4401;
  t4658 = -0.340999127418*t457*t4469;
  t4664 = t2390*t4552;
  t4708 = 0. + t4640 + t4658 + t4664;
  t4623 = -1.*t309*t4608;
  t4726 = t2108*t4708;
  t4732 = 0. + t4623 + t4726;
  t4822 = t2108*t4608;
  t4862 = t309*t4708;
  t4880 = 0. + t4822 + t4862;
  t2614 = -1.*t176*t2584;
  t2766 = t2621*t2721;
  t2847 = 0. + t2614 + t2766;
  t2943 = t2621*t2584;
  t2968 = t176*t2721;
  t2984 = 0. + t2943 + t2968;
  t3055 = t2897*t2984;
  t3097 = t3072*t979;
  t3172 = t3155*t1597;
  t3353 = t3326*t1973;
  t3360 = 0. + t3097 + t3172 + t3353;
  t3371 = t3061*t3360;
  t3382 = 0. + t3055 + t3371;
  t3916 = -1.*t176*t3904;
  t4087 = t2621*t3990;
  t4190 = 0. + t3916 + t4087;
  t4203 = t2621*t3904;
  t4209 = t176*t3990;
  t4225 = 0. + t4203 + t4209;
  t4236 = t2897*t4225;
  t4266 = t3072*t3525;
  t4285 = t3155*t3631;
  t4291 = t3326*t3655;
  t4305 = 0. + t4266 + t4285 + t4291;
  t4333 = t3061*t4305;
  t4357 = 0. + t4236 + t4333;
  t4745 = -1.*t176*t4732;
  t4916 = t2621*t4880;
  t4932 = 0. + t4745 + t4916;
  t4999 = t2621*t4732;
  t5003 = t176*t4880;
  t5023 = 0. + t4999 + t5003;
  t5044 = t2897*t5023;
  t5074 = t4401*t3072;
  t5097 = t4469*t3155;
  t5113 = t3326*t4552;
  t5126 = 0. + t5074 + t5097 + t5113;
  t5131 = t3061*t5126;
  t5142 = 0. + t5044 + t5131;
  t5668 = 3.2909349868922137e-7*var1[8];
  t5677 = 0.189863*t1352;
  t5691 = 0.009948468299545453*t630;
  t5692 = -0.045000372235*t1913;
  t5713 = -0.001824*t1544;
  t5716 = t5668 + t5677 + t5691 + t5692 + t5713;
  t5803 = -0.001824*t1783;
  t5811 = -0.04500040093286238*t630;
  t5869 = -0.141285834136*t931;
  t5874 = 0.189863*t1913;
  t5878 = 0.055653909852*t1544;
  t5882 = -0.134034*t1949;
  t5918 = 0. + t5803 + t5811 + t5869 + t5874 + t5878 + t5882;
  t5948 = 1.296332362046933e-7*var1[8];
  t5955 = -0.134034*t738;
  t5959 = -0.07654280690854481*t630;
  t5968 = -0.001824*t931;
  t5970 = -0.045000372235*t1949;
  t5984 = t5948 + t5955 + t5959 + t5968 + t5970;
  t5659 = -3.2909349868922137e-7*var1[7];
  t5664 = 0.03103092645718495*t457;
  t5667 = -0.045000372235*t3072;
  t5781 = -0.340999127418*t457*t5716;
  t5942 = t2390*t5918;
  t6012 = t2176*t5984;
  t6024 = t5659 + t5664 + t5667 + t5781 + t5942 + t6012;
  t6081 = 1.296332362046933e-7*var1[7];
  t6123 = 0.07877668146182712*t457;
  t6128 = -0.045000372235*t3155;
  t6185 = t1081*t5716;
  t6191 = t1753*t5918;
  t6215 = -0.340999127418*t457*t5984;
  t6238 = t6081 + t6123 + t6128 + t6185 + t6191 + t6215;
  t5614 = -1.*t2108;
  t5621 = 1. + t5614;
  t5652 = 0.091*t5621;
  t6071 = t309*t6024;
  t6250 = t2108*t6238;
  t6261 = 0. + t5652 + t6071 + t6250;
  t6287 = 0.091*t309;
  t6307 = t2108*t6024;
  t6388 = -1.*t309*t6238;
  t6396 = 0. + t6287 + t6307 + t6388;
  t6451 = t176*t6261;
  t6461 = t2621*t6396;
  t6473 = 0. + t6451 + t6461;
  t6489 = -0.04500040093286238*t457;
  t6501 = 0.07877663122399998*t1753;
  t6505 = 0.031030906668*t2390;
  t6527 = t3155*t5716;
  t6529 = t3326*t5918;
  t6551 = t3072*t5984;
  t6573 = 0. + t6489 + t6501 + t6505 + t6527 + t6529 + t6551;
  t5499 = t3061*t4225;
  t5511 = -1.*t2897*t4305;
  t5554 = 0. + t5499 + t5511;
  t5601 = t3061*t5023;
  t5604 = -1.*t2897*t5126;
  t5605 = 0. + t5601 + t5604;
  t6271 = t2621*t6261;
  t6398 = -1.*t176*t6396;
  t6424 = 0. + t6271 + t6398;
  t6482 = t2897*t6473;
  t6577 = t3061*t6573;
  t6582 = 0. + t6482 + t6577;
  t6629 = t3061*t6473;
  t6632 = -1.*t2897*t6573;
  t6645 = 0. + t6629 + t6632;
  t5444 = t3061*t2984;
  t5461 = -1.*t2897*t3360;
  t5469 = 0. + t5444 + t5461;
  t6683 = t4932*t6424;
  t6433 = -1.*t6424*t4190;
  t6899 = t2847*t6424;
  t6793 = -1.*t4932*t6424;
  t7007 = -1.*t2847*t6424;
  t6956 = t6424*t4190;
  t7071 = -1.*t6573*t4305;
  t7057 = t5126*t6573;
  t7132 = -1.*t5126*t6573;
  t7106 = t3360*t6573;
  t7167 = t6573*t4305;
  t7145 = -1.*t3360*t6573;
  t7574 = -1.*t5716*t3631;
  t7576 = -1.*t3525*t5984;
  t7578 = -1.*t5918*t3655;
  t7588 = t7574 + t7576 + t7578;
  t7602 = t4469*t5716;
  t7603 = t4552*t5918;
  t7614 = t4401*t5984;
  t7615 = t7602 + t7603 + t7614;
  t7702 = t5716*t1597;
  t7705 = t1973*t5918;
  t7707 = t979*t5984;
  t7716 = t7702 + t7705 + t7707;
  t7723 = -1.*t4469*t5716;
  t7730 = -1.*t4552*t5918;
  t7731 = -1.*t4401*t5984;
  t7746 = t7723 + t7730 + t7731;
  t7799 = t5716*t3631;
  t7810 = t3525*t5984;
  t7811 = t5918*t3655;
  t7812 = t7799 + t7810 + t7811;
  t7784 = -1.*t5716*t1597;
  t7787 = -1.*t1973*t5918;
  t7789 = -1.*t979*t5984;
  t7791 = t7784 + t7787 + t7789;
  p_output1[0]=0. - 1.*t138*t2847 + t2873*t3382;
  p_output1[1]=0. - 1.*t138*t4190 + t2873*t4357;
  p_output1[2]=0. - 1.*t138*t4932 + t2873*t5142;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0. + t2847*t2873 + t138*t3382;
  p_output1[7]=0. + t2873*t4190 + t138*t4357;
  p_output1[8]=0. + t2873*t4932 + t138*t5142;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t5469;
  p_output1[13]=t5554;
  p_output1[14]=t5605;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=t5605*(t6433 - 1.*t4357*t6582 - 1.*t5554*t6645) + t5554*(t5142*t6582 + t5605*t6645 + t6683);
  p_output1[19]=t5469*(-1.*t5142*t6582 - 1.*t5605*t6645 + t6793) + t5605*(t3382*t6582 + t5469*t6645 + t6899);
  p_output1[20]=t5469*(t4357*t6582 + t5554*t6645 + t6956) + t5554*(-1.*t3382*t6582 - 1.*t5469*t6645 + t7007);
  p_output1[21]=t5469;
  p_output1[22]=t5554;
  p_output1[23]=t5605;
  p_output1[24]=t4190*(t5023*t6473 + t6683 + t7057) + t4932*(t6433 - 1.*t4225*t6473 + t7071);
  p_output1[25]=t4932*(t2984*t6473 + t6899 + t7106) + t2847*(-1.*t5023*t6473 + t6793 + t7132);
  p_output1[26]=t4190*(-1.*t2984*t6473 + t7007 + t7145) + t2847*(t4225*t6473 + t6956 + t7167);
  p_output1[27]=t2847;
  p_output1[28]=t4190;
  p_output1[29]=t4932;
  p_output1[30]=t4305*(t4880*t6261 + t4732*t6396 + t7057) + t5126*(-1.*t3990*t6261 - 1.*t3904*t6396 + t7071);
  p_output1[31]=t5126*(t2721*t6261 + t2584*t6396 + t7106) + t3360*(-1.*t4880*t6261 - 1.*t4732*t6396 + t7132);
  p_output1[32]=t4305*(-1.*t2721*t6261 - 1.*t2584*t6396 + t7145) + t3360*(t3990*t6261 + t3904*t6396 + t7167);
  p_output1[33]=t3360;
  p_output1[34]=t4305;
  p_output1[35]=t5126;
  p_output1[36]=0.091*t2516 - 1.*t4305*(t4708*t6024 + t4608*t6238 + t7057) - 1.*t5126*(-1.*t3820*t6024 - 1.*t3706*t6238 + t7071);
  p_output1[37]=0.091*t3820 - 1.*t5126*(t2516*t6024 + t2069*t6238 + t7106) - 1.*t3360*(-1.*t4708*t6024 - 1.*t4608*t6238 + t7132);
  p_output1[38]=0.091*t4708 - 1.*t4305*(-1.*t2516*t6024 - 1.*t2069*t6238 + t7145) - 1.*t3360*(t3820*t6024 + t3706*t6238 + t7167);
  p_output1[39]=0. - 1.*t1597*t3155 - 1.*t1973*t3326 - 1.*t3072*t979;
  p_output1[40]=0. - 1.*t3072*t3525 - 1.*t3155*t3631 - 1.*t3326*t3655;
  p_output1[41]=0. - 1.*t3072*t4401 - 1.*t3155*t4469 - 1.*t3326*t4552;
  p_output1[42]=-0.041869*t1597 - 0.084668*t1973 - 0.930418*(t4401*t7588 + t3525*t7615) + 0.366501*(t4469*t7588 + t3631*t7615) - 0.016493*t979;
  p_output1[43]=-0.016493*t3525 - 0.041869*t3631 - 0.084668*t3655 + 0.366501*(t4469*t7716 + t1597*t7746) - 0.930418*(t4401*t7716 + t7746*t979);
  p_output1[44]=-0.016493*t4401 - 0.041869*t4469 - 0.084668*t4552 + 0.366501*(t3631*t7791 + t1597*t7812) - 0.930418*(t3525*t7791 + t7812*t979);
  p_output1[45]=0. + 0.366501*t1597 - 0.930418*t979;
  p_output1[46]=0. - 0.930418*t3525 + 0.366501*t3631;
  p_output1[47]=0. - 0.930418*t4401 + 0.366501*t4469;
  p_output1[48]=0.0005201975130401382;
  p_output1[49]=-0.06054041022593147;
  p_output1[50]=-3.5276704552964465e-7;
  p_output1[51]=-3.6361499999859603e-7;
  p_output1[52]=3.6361499999859603e-7;
  p_output1[53]=-1.000000637725;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void Jb_left_hip_pitch_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
