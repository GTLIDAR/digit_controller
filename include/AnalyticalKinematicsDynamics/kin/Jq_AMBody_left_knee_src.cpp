/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:57:07 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jq_AMBody_left_knee_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t364;
  double t382;
  double t515;
  double t798;
  double t807;
  double t822;
  double t1366;
  double t152;
  double t170;
  double t289;
  double t1113;
  double t1146;
  double t1191;
  double t1231;
  double t1260;
  double t594;
  double t687;
  double t722;
  double t737;
  double t738;
  double t1371;
  double t1429;
  double t1532;
  double t1539;
  double t1596;
  double t1908;
  double t1945;
  double t2104;
  double t1061;
  double t1064;
  double t1096;
  double t1354;
  double t2109;
  double t2199;
  double t2207;
  double t2356;
  double t2490;
  double t2540;
  double t2544;
  double t2573;
  double t2577;
  double t2598;
  double t2661;
  double t2680;
  double t2702;
  double t2810;
  double t2857;
  double t2862;
  double t2924;
  double t3000;
  double t3008;
  double t3018;
  double t3095;
  double t3121;
  double t3189;
  double t3289;
  double t2416;
  double t2445;
  double t2451;
  double t2685;
  double t2708;
  double t2748;
  double t3240;
  double t3244;
  double t133;
  double t3325;
  double t3363;
  double t3383;
  double t3395;
  double t3404;
  double t3483;
  double t3498;
  double t3512;
  double t18;
  double t115;
  double t3849;
  double t3851;
  double t3854;
  double t3872;
  double t3931;
  double t3951;
  double t3993;
  double t3996;
  double t4004;
  double t4007;
  double t4010;
  double t4038;
  double t4043;
  double t4044;
  double t4048;
  double t4049;
  double t4053;
  double t4062;
  double t3962;
  double t4040;
  double t4064;
  double t4073;
  double t4087;
  double t4094;
  double t4096;
  double t4107;
  double t4132;
  double t4144;
  double t4153;
  double t4154;
  double t3528;
  double t4080;
  double t4119;
  double t4181;
  double t4188;
  double t4194;
  double t4198;
  double t4204;
  double t4222;
  double t3729;
  double t3741;
  double t3742;
  double t3745;
  double t3758;
  double t3802;
  double t3806;
  double t4394;
  double t4396;
  double t4406;
  double t4429;
  double t4455;
  double t4459;
  double t4397;
  double t4431;
  double t4470;
  double t4471;
  double t4485;
  double t4497;
  double t4502;
  double t4509;
  double t4526;
  double t4529;
  double t4530;
  double t4532;
  double t4476;
  double t4524;
  double t4537;
  double t4538;
  double t4546;
  double t4548;
  double t4549;
  double t4552;
  double t3260;
  double t3518;
  double t3519;
  double t3520;
  double t3535;
  double t3618;
  double t3622;
  double t3680;
  double t3685;
  double t3727;
  double t3743;
  double t3800;
  double t3808;
  double t3809;
  double t3810;
  double t3815;
  double t4189;
  double t4236;
  double t4242;
  double t4249;
  double t4262;
  double t4263;
  double t4289;
  double t4293;
  double t4295;
  double t4298;
  double t4308;
  double t4309;
  double t4318;
  double t4344;
  double t4363;
  double t4375;
  double t4544;
  double t4558;
  double t4572;
  double t4579;
  double t4584;
  double t4588;
  double t4589;
  double t4607;
  double t4611;
  double t4620;
  double t4621;
  double t4645;
  double t4646;
  double t4647;
  double t4653;
  double t4663;
  double t4728;
  double t4730;
  double t4733;
  double t4754;
  double t4761;
  double t4762;
  double t4767;
  double t4776;
  double t4781;
  double t4785;
  double t4801;
  double t4802;
  double t4809;
  double t4822;
  double t4826;
  double t4828;
  double t4832;
  double t4839;
  double t4867;
  double t4868;
  double t4870;
  double t4886;
  double t4894;
  double t4897;
  double t4914;
  double t4920;
  double t4921;
  double t4984;
  double t5000;
  double t5003;
  double t5026;
  double t5072;
  double t5108;
  double t5110;
  double t5113;
  double t5164;
  double t5170;
  double t5172;
  double t5177;
  double t4987;
  double t5032;
  double t5042;
  double t5045;
  double t5051;
  double t5053;
  double t5058;
  double t5061;
  double t5063;
  double t5080;
  double t5118;
  double t5125;
  double t5127;
  double t5131;
  double t5134;
  double t5135;
  double t5141;
  double t5147;
  double t5166;
  double t5179;
  double t5186;
  double t5187;
  double t5200;
  double t5203;
  double t5212;
  double t5213;
  double t5220;
  double t5262;
  double t5284;
  double t5290;
  double t5308;
  double t5319;
  double t5320;
  double t5327;
  double t5330;
  double t5314;
  double t5332;
  double t5334;
  double t5346;
  double t5353;
  double t5354;
  double t5393;
  double t5400;
  double t5407;
  double t5409;
  double t5485;
  double t5489;
  double t5492;
  double t5493;
  double t5500;
  double t5501;
  double t5507;
  double t5525;
  double t5494;
  double t5526;
  double t5533;
  double t5536;
  double t5545;
  double t5556;
  double t5581;
  double t5588;
  double t5589;
  double t5596;
  double t5653;
  double t5656;
  double t5657;
  double t5663;
  double t5667;
  double t5670;
  double t5675;
  double t5678;
  double t5664;
  double t5681;
  double t5693;
  double t5699;
  double t5702;
  double t5706;
  double t5745;
  double t5746;
  double t5750;
  double t5751;
  double t5343;
  double t5357;
  double t5362;
  double t5377;
  double t5378;
  double t5384;
  double t5385;
  double t5392;
  double t5410;
  double t5421;
  double t5428;
  double t5429;
  double t5442;
  double t5449;
  double t5465;
  double t5467;
  double t5468;
  double t5469;
  double t5534;
  double t5561;
  double t5562;
  double t5563;
  double t5565;
  double t5567;
  double t5572;
  double t5576;
  double t5597;
  double t5602;
  double t5607;
  double t5609;
  double t5616;
  double t5617;
  double t5621;
  double t5640;
  double t5641;
  double t5644;
  double t5696;
  double t5707;
  double t5715;
  double t5729;
  double t5731;
  double t5732;
  double t5740;
  double t5741;
  double t5762;
  double t5764;
  double t5765;
  double t5772;
  double t5775;
  double t5777;
  double t5780;
  double t5784;
  double t5790;
  double t5804;
  double t5881;
  double t5885;
  double t5888;
  double t5889;
  double t5896;
  double t5902;
  double t5918;
  double t5919;
  double t5960;
  double t5961;
  double t5962;
  double t5966;
  double t6004;
  double t6007;
  double t6011;
  double t6013;
  double t6025;
  double t6033;
  double t6035;
  double t6044;
  double t5987;
  double t5993;
  double t5997;
  double t5998;
  double t6016;
  double t6052;
  double t6059;
  double t6079;
  double t6082;
  double t6093;
  double t6161;
  double t6162;
  double t6164;
  double t6170;
  double t6178;
  double t6180;
  double t6184;
  double t6186;
  double t6192;
  double t6193;
  double t6203;
  double t6207;
  double t6253;
  double t6254;
  double t6267;
  double t6268;
  double t6271;
  double t6272;
  double t6288;
  double t6291;
  double t6235;
  double t6236;
  double t6239;
  double t6244;
  double t6269;
  double t6296;
  double t6299;
  double t6302;
  double t6304;
  double t6306;
  double t6369;
  double t6370;
  double t6377;
  double t6380;
  double t6402;
  double t6407;
  double t6409;
  double t6410;
  double t6425;
  double t6429;
  double t6434;
  double t6435;
  double t6459;
  double t6462;
  double t6465;
  double t6466;
  double t6473;
  double t6475;
  double t6476;
  double t6486;
  double t6446;
  double t6447;
  double t6452;
  double t6454;
  double t6471;
  double t6487;
  double t6490;
  double t6492;
  double t6493;
  double t6505;
  double t5892;
  double t5932;
  double t5938;
  double t5943;
  double t5948;
  double t5951;
  double t5967;
  double t5972;
  double t5983;
  double t6000;
  double t6075;
  double t6096;
  double t6098;
  double t6112;
  double t6113;
  double t6116;
  double t6121;
  double t6122;
  double t6128;
  double t6130;
  double t6131;
  double t6143;
  double t6177;
  double t6188;
  double t6190;
  double t6191;
  double t6213;
  double t6215;
  double t6221;
  double t6225;
  double t6226;
  double t6247;
  double t6301;
  double t6308;
  double t6309;
  double t6310;
  double t6317;
  double t6338;
  double t6340;
  double t6341;
  double t6342;
  double t6346;
  double t6355;
  double t6358;
  double t6397;
  double t6411;
  double t6412;
  double t6423;
  double t6436;
  double t6437;
  double t6440;
  double t6443;
  double t6445;
  double t6458;
  double t6491;
  double t6518;
  double t6521;
  double t6524;
  double t6525;
  double t6529;
  double t6538;
  double t6544;
  double t6549;
  double t6550;
  double t6553;
  double t6571;
  double t6595;
  double t6603;
  double t6605;
  double t6607;
  double t6609;
  double t6620;
  double t6650;
  double t6655;
  double t6657;
  double t6632;
  double t6633;
  double t6658;
  double t6659;
  double t6667;
  double t6669;
  double t6676;
  double t6679;
  double t6691;
  double t6692;
  double t6695;
  double t6697;
  double t6663;
  double t6681;
  double t6701;
  double t6702;
  double t6718;
  double t6728;
  double t6747;
  double t6753;
  double t6710;
  double t6758;
  double t6762;
  double t6766;
  double t6768;
  double t6769;
  double t6817;
  double t6828;
  double t6830;
  double t6832;
  double t6917;
  double t6921;
  double t6924;
  double t6925;
  double t6938;
  double t6942;
  double t6935;
  double t6936;
  double t6943;
  double t6944;
  double t6952;
  double t6956;
  double t6958;
  double t6964;
  double t6985;
  double t6988;
  double t6990;
  double t6992;
  double t6949;
  double t6982;
  double t6993;
  double t6996;
  double t7002;
  double t7007;
  double t7009;
  double t7010;
  double t6999;
  double t7011;
  double t7016;
  double t7021;
  double t7025;
  double t7033;
  double t7091;
  double t7092;
  double t7099;
  double t7100;
  double t7150;
  double t7151;
  double t7162;
  double t7165;
  double t7168;
  double t7170;
  double t7190;
  double t7192;
  double t7193;
  double t7180;
  double t7181;
  double t7194;
  double t7198;
  double t7208;
  double t7211;
  double t7212;
  double t7213;
  double t7199;
  double t7215;
  double t7217;
  double t7221;
  double t7224;
  double t7226;
  double t7243;
  double t7244;
  double t7246;
  double t7250;
  double t6606;
  double t6626;
  double t6628;
  double t6630;
  double t6764;
  double t6774;
  double t6777;
  double t6785;
  double t6786;
  double t6790;
  double t6793;
  double t6800;
  double t6837;
  double t6844;
  double t6847;
  double t6849;
  double t6850;
  double t6852;
  double t6854;
  double t6855;
  double t6861;
  double t6867;
  double t6877;
  double t6886;
  double t6892;
  double t6910;
  double t6923;
  double t6929;
  double t6930;
  double t6931;
  double t7018;
  double t7035;
  double t7040;
  double t7046;
  double t7052;
  double t7064;
  double t7087;
  double t7088;
  double t7103;
  double t7104;
  double t7105;
  double t7108;
  double t7111;
  double t7115;
  double t7121;
  double t7124;
  double t7127;
  double t7128;
  double t7129;
  double t7130;
  double t7139;
  double t7141;
  double t7148;
  double t7163;
  double t7174;
  double t7178;
  double t7179;
  double t7219;
  double t7229;
  double t7230;
  double t7233;
  double t7234;
  double t7236;
  double t7237;
  double t7239;
  double t7252;
  double t7253;
  double t7254;
  double t7260;
  double t7264;
  double t7266;
  double t7268;
  double t7269;
  double t7270;
  double t7271;
  t364 = Cos(var1[9]);
  t382 = -1.*t364;
  t515 = 1. + t382;
  t798 = Cos(var1[8]);
  t807 = -1.*t798;
  t822 = 1. + t807;
  t1366 = Sin(var1[9]);
  t152 = Cos(var1[7]);
  t170 = -1.*t152;
  t289 = 1. + t170;
  t1113 = -0.134322983001*t515;
  t1146 = 1. + t1113;
  t1191 = -0.930418*t1146;
  t1231 = -0.12497652119782442*t515;
  t1260 = t1191 + t1231;
  t594 = -0.8656776547239999*t515;
  t687 = 1. + t594;
  t722 = -0.366501*t687;
  t737 = -0.3172717261340007*t515;
  t738 = t722 + t737;
  t1371 = -0.930418*t1366;
  t1429 = 0. + t1371;
  t1532 = -0.366501*t1429;
  t1539 = 0.366501*t1366;
  t1596 = 0. + t1539;
  t1908 = -0.930418*t1596;
  t1945 = t1532 + t1908;
  t2104 = Sin(var1[8]);
  t1061 = -0.8656776547239999*t822;
  t1064 = 1. + t1061;
  t1096 = t738*t1064;
  t1354 = 0.340999127418*t1260*t822;
  t2109 = -0.930418*t2104;
  t2199 = 0. + t2109;
  t2207 = t1945*t2199;
  t2356 = 0. + t1096 + t1354 + t2207;
  t2490 = -0.134322983001*t822;
  t2540 = 1. + t2490;
  t2544 = t1260*t2540;
  t2573 = 0.340999127418*t738*t822;
  t2577 = 0.366501*t2104;
  t2598 = 0. + t2577;
  t2661 = t1945*t2598;
  t2680 = 0. + t2544 + t2573 + t2661;
  t2702 = Sin(var1[7]);
  t2810 = -1.000000637725*t822;
  t2857 = 1. + t2810;
  t2862 = t2857*t1945;
  t2924 = -0.366501*t2104;
  t3000 = 0. + t2924;
  t3008 = t1260*t3000;
  t3018 = 0.930418*t2104;
  t3095 = 0. + t3018;
  t3121 = t738*t3095;
  t3189 = 0. + t2862 + t3008 + t3121;
  t3289 = Cos(var1[6]);
  t2416 = -0.340999127418*t289*t2356;
  t2445 = -0.8656776547239999*t289;
  t2451 = 1. + t2445;
  t2685 = t2451*t2680;
  t2708 = -0.930418*t2702;
  t2748 = 0. + t2708;
  t3240 = t2748*t3189;
  t3244 = 0. + t2416 + t2685 + t3240;
  t133 = Sin(var1[6]);
  t3325 = -0.134322983001*t289;
  t3363 = 1. + t3325;
  t3383 = t3363*t2356;
  t3395 = -0.340999127418*t289*t2680;
  t3404 = -0.366501*t2702;
  t3483 = 0. + t3404;
  t3498 = t3483*t3189;
  t3512 = 0. + t3383 + t3395 + t3498;
  t18 = Sin(var1[4]);
  t115 = Cos(var1[5]);
  t3849 = 0.259155*t1146;
  t3851 = -0.22434503092393926*t515;
  t3854 = -0.366501*t1366;
  t3872 = 0. + t3854;
  t3931 = -0.707107*t3872;
  t3951 = t3849 + t3851 + t3931;
  t3993 = -0.657905*t687;
  t3996 = 0.0883716288660118*t515;
  t4004 = 0.930418*t1366;
  t4007 = 0. + t4004;
  t4010 = -0.707107*t4007;
  t4038 = t3993 + t3996 + t4010;
  t4043 = -1.000000637725*t515;
  t4044 = 1. + t4043;
  t4048 = -0.707107*t4044;
  t4049 = -0.657905*t1429;
  t4053 = 0.259155*t1596;
  t4062 = t4048 + t4049 + t4053;
  t3962 = 0.340999127418*t822*t3951;
  t4040 = t1064*t4038;
  t4064 = t4062*t2199;
  t4073 = 0. + t3962 + t4040 + t4064;
  t4087 = t2540*t3951;
  t4094 = 0.340999127418*t822*t4038;
  t4096 = t4062*t2598;
  t4107 = 0. + t4087 + t4094 + t4096;
  t4132 = t2857*t4062;
  t4144 = t3951*t3000;
  t4153 = t4038*t3095;
  t4154 = 0. + t4132 + t4144 + t4153;
  t3528 = Sin(var1[5]);
  t4080 = -0.340999127418*t289*t4073;
  t4119 = t2451*t4107;
  t4181 = t2748*t4154;
  t4188 = 0. + t4080 + t4119 + t4181;
  t4194 = t3363*t4073;
  t4198 = -0.340999127418*t289*t4107;
  t4204 = t3483*t4154;
  t4222 = 0. + t4194 + t4198 + t4204;
  t3729 = Cos(var1[4]);
  t3741 = 0.366501*t2702;
  t3742 = 0. + t3741;
  t3745 = 0.930418*t2702;
  t3758 = 0. + t3745;
  t3802 = -1.000000637725*t289;
  t3806 = 1. + t3802;
  t4394 = 0.707107*t3872;
  t4396 = t3849 + t3851 + t4394;
  t4406 = 0.707107*t4007;
  t4429 = t3993 + t3996 + t4406;
  t4455 = 0.707107*t4044;
  t4459 = t4455 + t4049 + t4053;
  t4397 = 0.340999127418*t822*t4396;
  t4431 = t1064*t4429;
  t4470 = t4459*t2199;
  t4471 = 0. + t4397 + t4431 + t4470;
  t4485 = t2540*t4396;
  t4497 = 0.340999127418*t822*t4429;
  t4502 = t4459*t2598;
  t4509 = 0. + t4485 + t4497 + t4502;
  t4526 = t2857*t4459;
  t4529 = t4396*t3000;
  t4530 = t4429*t3095;
  t4532 = 0. + t4526 + t4529 + t4530;
  t4476 = -0.340999127418*t289*t4471;
  t4524 = t2451*t4509;
  t4537 = t2748*t4532;
  t4538 = 0. + t4476 + t4524 + t4537;
  t4546 = t3363*t4471;
  t4548 = -0.340999127418*t289*t4509;
  t4549 = t3483*t4532;
  t4552 = 0. + t4546 + t4548 + t4549;
  t3260 = -1.*t133*t3244;
  t3518 = t3289*t3512;
  t3519 = 0. + t3260 + t3518;
  t3520 = t115*t3519;
  t3535 = t3289*t3244;
  t3618 = t133*t3512;
  t3622 = 0. + t3535 + t3618;
  t3680 = t3528*t3622;
  t3685 = 0. + t3520 + t3680;
  t3727 = -1.*t18*t3685;
  t3743 = t3742*t2356;
  t3800 = t3758*t2680;
  t3808 = t3806*t3189;
  t3809 = 0. + t3743 + t3800 + t3808;
  t3810 = -1.*t3729*t3809;
  t3815 = t3727 + t3810;
  t4189 = -1.*t133*t4188;
  t4236 = t3289*t4222;
  t4242 = 0. + t4189 + t4236;
  t4249 = t115*t4242;
  t4262 = t3289*t4188;
  t4263 = t133*t4222;
  t4289 = 0. + t4262 + t4263;
  t4293 = t3528*t4289;
  t4295 = 0. + t4249 + t4293;
  t4298 = -1.*t18*t4295;
  t4308 = t3742*t4073;
  t4309 = t3758*t4107;
  t4318 = t3806*t4154;
  t4344 = 0. + t4308 + t4309 + t4318;
  t4363 = -1.*t3729*t4344;
  t4375 = t4298 + t4363;
  t4544 = -1.*t133*t4538;
  t4558 = t3289*t4552;
  t4572 = 0. + t4544 + t4558;
  t4579 = t115*t4572;
  t4584 = t3289*t4538;
  t4588 = t133*t4552;
  t4589 = 0. + t4584 + t4588;
  t4607 = t3528*t4589;
  t4611 = 0. + t4579 + t4607;
  t4620 = -1.*t18*t4611;
  t4621 = t3742*t4471;
  t4645 = t3758*t4509;
  t4646 = t3806*t4532;
  t4647 = 0. + t4621 + t4645 + t4646;
  t4653 = -1.*t3729*t4647;
  t4663 = t4620 + t4653;
  t4728 = -1.*t3528*t3519;
  t4730 = t115*t3622;
  t4733 = t4728 + t4730;
  t4754 = var2[3]*t3729*t4733;
  t4761 = -1.*t115*t3519;
  t4762 = -1.*t3528*t3622;
  t4767 = t4761 + t4762;
  t4776 = var2[4]*t4767;
  t4781 = t4754 + t4776;
  t4785 = -1.*t3528*t4242;
  t4801 = t115*t4289;
  t4802 = t4785 + t4801;
  t4809 = var2[3]*t3729*t4802;
  t4822 = -1.*t115*t4242;
  t4826 = -1.*t3528*t4289;
  t4828 = t4822 + t4826;
  t4832 = var2[4]*t4828;
  t4839 = t4809 + t4832;
  t4867 = -1.*t3528*t4572;
  t4868 = t115*t4589;
  t4870 = t4867 + t4868;
  t4886 = var2[3]*t3729*t4870;
  t4894 = -1.*t115*t4572;
  t4897 = -1.*t3528*t4589;
  t4914 = t4894 + t4897;
  t4920 = var2[4]*t4914;
  t4921 = t4886 + t4920;
  t4984 = t3260 + t3518;
  t5000 = -1.*t3289*t3244;
  t5003 = -1.*t133*t3512;
  t5026 = t5000 + t5003;
  t5072 = t4189 + t4236;
  t5108 = -1.*t3289*t4188;
  t5110 = -1.*t133*t4222;
  t5113 = t5108 + t5110;
  t5164 = t4544 + t4558;
  t5170 = -1.*t3289*t4538;
  t5172 = -1.*t133*t4552;
  t5177 = t5170 + t5172;
  t4987 = t3528*t4984;
  t5032 = t115*t5026;
  t5042 = t4987 + t5032;
  t5045 = var2[3]*t3729*t5042;
  t5051 = t115*t4984;
  t5053 = -1.*t3528*t5026;
  t5058 = t5051 + t5053;
  t5061 = var2[4]*t5058;
  t5063 = t5045 + t5061;
  t5080 = t3528*t5072;
  t5118 = t115*t5113;
  t5125 = t5080 + t5118;
  t5127 = var2[3]*t3729*t5125;
  t5131 = t115*t5072;
  t5134 = -1.*t3528*t5113;
  t5135 = t5131 + t5134;
  t5141 = var2[4]*t5135;
  t5147 = t5127 + t5141;
  t5166 = t3528*t5164;
  t5179 = t115*t5177;
  t5186 = t5166 + t5179;
  t5187 = var2[3]*t3729*t5186;
  t5200 = t115*t5164;
  t5203 = -1.*t3528*t5177;
  t5212 = t5200 + t5203;
  t5213 = var2[4]*t5212;
  t5220 = t5187 + t5213;
  t5262 = -0.340999127418*t2702*t2356;
  t5284 = -0.8656776547239999*t2702*t2680;
  t5290 = -0.930418*t152*t3189;
  t5308 = t5262 + t5284 + t5290;
  t5319 = -0.134322983001*t2702*t2356;
  t5320 = -0.340999127418*t2702*t2680;
  t5327 = -0.366501*t152*t3189;
  t5330 = t5319 + t5320 + t5327;
  t5314 = -1.*t133*t5308;
  t5332 = t3289*t5330;
  t5334 = t5314 + t5332;
  t5346 = t3289*t5308;
  t5353 = t133*t5330;
  t5354 = t5346 + t5353;
  t5393 = 0.366501*t152*t2356;
  t5400 = 0.930418*t152*t2680;
  t5407 = -1.000000637725*t2702*t3189;
  t5409 = t5393 + t5400 + t5407;
  t5485 = -0.340999127418*t2702*t4073;
  t5489 = -0.8656776547239999*t2702*t4107;
  t5492 = -0.930418*t152*t4154;
  t5493 = t5485 + t5489 + t5492;
  t5500 = -0.134322983001*t2702*t4073;
  t5501 = -0.340999127418*t2702*t4107;
  t5507 = -0.366501*t152*t4154;
  t5525 = t5500 + t5501 + t5507;
  t5494 = -1.*t133*t5493;
  t5526 = t3289*t5525;
  t5533 = t5494 + t5526;
  t5536 = t3289*t5493;
  t5545 = t133*t5525;
  t5556 = t5536 + t5545;
  t5581 = 0.366501*t152*t4073;
  t5588 = 0.930418*t152*t4107;
  t5589 = -1.000000637725*t2702*t4154;
  t5596 = t5581 + t5588 + t5589;
  t5653 = -0.340999127418*t2702*t4471;
  t5656 = -0.8656776547239999*t2702*t4509;
  t5657 = -0.930418*t152*t4532;
  t5663 = t5653 + t5656 + t5657;
  t5667 = -0.134322983001*t2702*t4471;
  t5670 = -0.340999127418*t2702*t4509;
  t5675 = -0.366501*t152*t4532;
  t5678 = t5667 + t5670 + t5675;
  t5664 = -1.*t133*t5663;
  t5681 = t3289*t5678;
  t5693 = t5664 + t5681;
  t5699 = t3289*t5663;
  t5702 = t133*t5678;
  t5706 = t5699 + t5702;
  t5745 = 0.366501*t152*t4471;
  t5746 = 0.930418*t152*t4509;
  t5750 = -1.000000637725*t2702*t4532;
  t5751 = t5745 + t5746 + t5750;
  t5343 = -1.*t3528*t5334;
  t5357 = t115*t5354;
  t5362 = t5343 + t5357;
  t5377 = var2[4]*t5362;
  t5378 = t115*t5334;
  t5384 = t3528*t5354;
  t5385 = t5378 + t5384;
  t5392 = t3729*t5385;
  t5410 = -1.*t18*t5409;
  t5421 = t5392 + t5410;
  t5428 = var2[3]*t5421;
  t5429 = var2[5]*t5409;
  t5442 = -0.366501*t152*t2356;
  t5449 = -0.930418*t152*t2680;
  t5465 = 1.000000637725*t2702*t3189;
  t5467 = t5442 + t5449 + t5465;
  t5468 = var2[6]*t5467;
  t5469 = t5377 + t5428 + t5429 + t5468;
  t5534 = -1.*t3528*t5533;
  t5561 = t115*t5556;
  t5562 = t5534 + t5561;
  t5563 = var2[4]*t5562;
  t5565 = t115*t5533;
  t5567 = t3528*t5556;
  t5572 = t5565 + t5567;
  t5576 = t3729*t5572;
  t5597 = -1.*t18*t5596;
  t5602 = t5576 + t5597;
  t5607 = var2[3]*t5602;
  t5609 = var2[5]*t5596;
  t5616 = -0.366501*t152*t4073;
  t5617 = -0.930418*t152*t4107;
  t5621 = 1.000000637725*t2702*t4154;
  t5640 = t5616 + t5617 + t5621;
  t5641 = var2[6]*t5640;
  t5644 = t5563 + t5607 + t5609 + t5641;
  t5696 = -1.*t3528*t5693;
  t5707 = t115*t5706;
  t5715 = t5696 + t5707;
  t5729 = var2[4]*t5715;
  t5731 = t115*t5693;
  t5732 = t3528*t5706;
  t5740 = t5731 + t5732;
  t5741 = t3729*t5740;
  t5762 = -1.*t18*t5751;
  t5764 = t5741 + t5762;
  t5765 = var2[3]*t5764;
  t5772 = var2[5]*t5751;
  t5775 = -0.366501*t152*t4471;
  t5777 = -0.930418*t152*t4509;
  t5780 = 1.000000637725*t2702*t4532;
  t5784 = t5775 + t5777 + t5780;
  t5790 = var2[6]*t5784;
  t5804 = t5729 + t5765 + t5772 + t5790;
  t5881 = 0.366501*t798*t1945;
  t5885 = 0.340999127418*t738*t2104;
  t5888 = -0.134322983001*t1260*t2104;
  t5889 = t5881 + t5885 + t5888;
  t5896 = -0.930418*t798*t1945;
  t5902 = -0.8656776547239999*t738*t2104;
  t5918 = 0.340999127418*t1260*t2104;
  t5919 = t5896 + t5902 + t5918;
  t5960 = 0.930418*t738*t798;
  t5961 = -0.366501*t1260*t798;
  t5962 = -1.000000637725*t1945*t2104;
  t5966 = t5960 + t5961 + t5962;
  t6004 = t2451*t5889;
  t6007 = -0.340999127418*t289*t5919;
  t6011 = t2748*t5966;
  t6013 = t6004 + t6007 + t6011;
  t6025 = -0.340999127418*t289*t5889;
  t6033 = t3363*t5919;
  t6035 = t3483*t5966;
  t6044 = t6025 + t6033 + t6035;
  t5987 = t3758*t5889;
  t5993 = t3742*t5919;
  t5997 = t3806*t5966;
  t5998 = t5987 + t5993 + t5997;
  t6016 = -1.*t133*t6013;
  t6052 = t3289*t6044;
  t6059 = t6016 + t6052;
  t6079 = t3289*t6013;
  t6082 = t133*t6044;
  t6093 = t6079 + t6082;
  t6161 = -0.930418*t798*t4062;
  t6162 = 0.340999127418*t3951*t2104;
  t6164 = -0.8656776547239999*t4038*t2104;
  t6170 = t6161 + t6162 + t6164;
  t6178 = 0.366501*t798*t4062;
  t6180 = -0.134322983001*t3951*t2104;
  t6184 = 0.340999127418*t4038*t2104;
  t6186 = t6178 + t6180 + t6184;
  t6192 = -0.366501*t798*t3951;
  t6193 = 0.930418*t798*t4038;
  t6203 = -1.000000637725*t4062*t2104;
  t6207 = t6192 + t6193 + t6203;
  t6253 = t2748*t6207;
  t6254 = -0.340999127418*t289*t6170;
  t6267 = t2451*t6186;
  t6268 = t6253 + t6254 + t6267;
  t6271 = t3483*t6207;
  t6272 = t3363*t6170;
  t6288 = -0.340999127418*t289*t6186;
  t6291 = t6271 + t6272 + t6288;
  t6235 = t3806*t6207;
  t6236 = t3742*t6170;
  t6239 = t3758*t6186;
  t6244 = t6235 + t6236 + t6239;
  t6269 = -1.*t133*t6268;
  t6296 = t3289*t6291;
  t6299 = t6269 + t6296;
  t6302 = t3289*t6268;
  t6304 = t133*t6291;
  t6306 = t6302 + t6304;
  t6369 = -0.930418*t798*t4459;
  t6370 = 0.340999127418*t4396*t2104;
  t6377 = -0.8656776547239999*t4429*t2104;
  t6380 = t6369 + t6370 + t6377;
  t6402 = 0.366501*t798*t4459;
  t6407 = -0.134322983001*t4396*t2104;
  t6409 = 0.340999127418*t4429*t2104;
  t6410 = t6402 + t6407 + t6409;
  t6425 = -0.366501*t798*t4396;
  t6429 = 0.930418*t798*t4429;
  t6434 = -1.000000637725*t4459*t2104;
  t6435 = t6425 + t6429 + t6434;
  t6459 = t2748*t6435;
  t6462 = -0.340999127418*t289*t6380;
  t6465 = t2451*t6410;
  t6466 = t6459 + t6462 + t6465;
  t6473 = t3483*t6435;
  t6475 = t3363*t6380;
  t6476 = -0.340999127418*t289*t6410;
  t6486 = t6473 + t6475 + t6476;
  t6446 = t3806*t6435;
  t6447 = t3742*t6380;
  t6452 = t3758*t6410;
  t6454 = t6446 + t6447 + t6452;
  t6471 = -1.*t133*t6466;
  t6487 = t3289*t6486;
  t6490 = t6471 + t6487;
  t6492 = t3289*t6466;
  t6493 = t133*t6486;
  t6505 = t6492 + t6493;
  t5892 = 0.366501*t5889;
  t5932 = -0.930418*t5919;
  t5938 = t5892 + t5932;
  t5943 = var2[7]*t5938;
  t5948 = -1.*t3758*t5889;
  t5951 = -1.*t3742*t5919;
  t5967 = -1.*t3806*t5966;
  t5972 = t5948 + t5951 + t5967;
  t5983 = var2[6]*t5972;
  t6000 = var2[5]*t5998;
  t6075 = -1.*t3528*t6059;
  t6096 = t115*t6093;
  t6098 = t6075 + t6096;
  t6112 = var2[4]*t6098;
  t6113 = -1.*t18*t5998;
  t6116 = t115*t6059;
  t6121 = t3528*t6093;
  t6122 = t6116 + t6121;
  t6128 = t3729*t6122;
  t6130 = t6113 + t6128;
  t6131 = var2[3]*t6130;
  t6143 = t5943 + t5983 + t6000 + t6112 + t6131;
  t6177 = -0.930418*t6170;
  t6188 = 0.366501*t6186;
  t6190 = t6177 + t6188;
  t6191 = var2[7]*t6190;
  t6213 = -1.*t3806*t6207;
  t6215 = -1.*t3742*t6170;
  t6221 = -1.*t3758*t6186;
  t6225 = t6213 + t6215 + t6221;
  t6226 = var2[6]*t6225;
  t6247 = var2[5]*t6244;
  t6301 = -1.*t3528*t6299;
  t6308 = t115*t6306;
  t6309 = t6301 + t6308;
  t6310 = var2[4]*t6309;
  t6317 = -1.*t18*t6244;
  t6338 = t115*t6299;
  t6340 = t3528*t6306;
  t6341 = t6338 + t6340;
  t6342 = t3729*t6341;
  t6346 = t6317 + t6342;
  t6355 = var2[3]*t6346;
  t6358 = t6191 + t6226 + t6247 + t6310 + t6355;
  t6397 = -0.930418*t6380;
  t6411 = 0.366501*t6410;
  t6412 = t6397 + t6411;
  t6423 = var2[7]*t6412;
  t6436 = -1.*t3806*t6435;
  t6437 = -1.*t3742*t6380;
  t6440 = -1.*t3758*t6410;
  t6443 = t6436 + t6437 + t6440;
  t6445 = var2[6]*t6443;
  t6458 = var2[5]*t6454;
  t6491 = -1.*t3528*t6490;
  t6518 = t115*t6505;
  t6521 = t6491 + t6518;
  t6524 = var2[4]*t6521;
  t6525 = -1.*t18*t6454;
  t6529 = t115*t6490;
  t6538 = t3528*t6505;
  t6544 = t6529 + t6538;
  t6549 = t3729*t6544;
  t6550 = t6525 + t6549;
  t6553 = var2[3]*t6550;
  t6571 = t6423 + t6445 + t6458 + t6524 + t6553;
  t6595 = 0.25915542260700003*t364;
  t6603 = -0.25915550358356343*t1366;
  t6605 = t6595 + t6603;
  t6607 = -0.6579050807260001*t364;
  t6609 = 0.6579052862972049*t1366;
  t6620 = t6607 + t6609;
  t6650 = 0.7071072209449999*t364;
  t6655 = 0.7071074509398115*t1366;
  t6657 = t6650 + t6655;
  t6632 = 0.340999127418*t822*t6605;
  t6633 = t1064*t6620;
  t6658 = t6657*t2199;
  t6659 = t6632 + t6633 + t6658;
  t6667 = t2540*t6605;
  t6669 = 0.340999127418*t822*t6620;
  t6676 = t6657*t2598;
  t6679 = t6667 + t6669 + t6676;
  t6691 = t2857*t6657;
  t6692 = t6605*t3000;
  t6695 = t6620*t3095;
  t6697 = t6691 + t6692 + t6695;
  t6663 = -0.340999127418*t289*t6659;
  t6681 = t2451*t6679;
  t6701 = t2748*t6697;
  t6702 = t6663 + t6681 + t6701;
  t6718 = t3363*t6659;
  t6728 = -0.340999127418*t289*t6679;
  t6747 = t3483*t6697;
  t6753 = t6718 + t6728 + t6747;
  t6710 = -1.*t133*t6702;
  t6758 = t3289*t6753;
  t6762 = t6710 + t6758;
  t6766 = t3289*t6702;
  t6768 = t133*t6753;
  t6769 = t6766 + t6768;
  t6817 = t3742*t6659;
  t6828 = t3758*t6679;
  t6830 = t3806*t6697;
  t6832 = t6817 + t6828 + t6830;
  t6917 = -0.25915542260700003*t364;
  t6921 = t6917 + t6603;
  t6924 = 0.6579050807260001*t364;
  t6925 = t6924 + t6609;
  t6938 = -0.7071074509398115*t1366;
  t6942 = t6650 + t6938;
  t6935 = 0.340999127418*t822*t6921;
  t6936 = t1064*t6925;
  t6943 = t6942*t2199;
  t6944 = t6935 + t6936 + t6943;
  t6952 = t2540*t6921;
  t6956 = 0.340999127418*t822*t6925;
  t6958 = t6942*t2598;
  t6964 = t6952 + t6956 + t6958;
  t6985 = t2857*t6942;
  t6988 = t6921*t3000;
  t6990 = t6925*t3095;
  t6992 = t6985 + t6988 + t6990;
  t6949 = -0.340999127418*t289*t6944;
  t6982 = t2451*t6964;
  t6993 = t2748*t6992;
  t6996 = t6949 + t6982 + t6993;
  t7002 = t3363*t6944;
  t7007 = -0.340999127418*t289*t6964;
  t7009 = t3483*t6992;
  t7010 = t7002 + t7007 + t7009;
  t6999 = -1.*t133*t6996;
  t7011 = t3289*t7010;
  t7016 = t6999 + t7011;
  t7021 = t3289*t6996;
  t7025 = t133*t7010;
  t7033 = t7021 + t7025;
  t7091 = t3742*t6944;
  t7092 = t3758*t6964;
  t7099 = t3806*t6992;
  t7100 = t7091 + t7092 + t7099;
  t7150 = 5.551115123125783e-17*t1064*t1366;
  t7151 = 4.7323135329568886e-18*t822*t1366;
  t7162 = 0. + t7150 + t7151;
  t7165 = 1.3877787807814457e-17*t2540*t1366;
  t7168 = 1.8929254131827554e-17*t822*t1366;
  t7170 = 0. + t7165 + t7168;
  t7190 = 1.3877787807814457e-17*t1366*t3000;
  t7192 = 5.551115123125783e-17*t1366*t3095;
  t7193 = 0. + t7190 + t7192;
  t7180 = -0.340999127418*t289*t7162;
  t7181 = t2451*t7170;
  t7194 = t2748*t7193;
  t7198 = t7180 + t7181 + t7194;
  t7208 = t3363*t7162;
  t7211 = -0.340999127418*t289*t7170;
  t7212 = t3483*t7193;
  t7213 = t7208 + t7211 + t7212;
  t7199 = -1.*t133*t7198;
  t7215 = t3289*t7213;
  t7217 = t7199 + t7215;
  t7221 = t3289*t7198;
  t7224 = t133*t7213;
  t7226 = t7221 + t7224;
  t7243 = t7162*t3742;
  t7244 = t7170*t3758;
  t7246 = t3806*t7193;
  t7250 = t7243 + t7244 + t7246;
  t6606 = 0.930418*t6605;
  t6626 = 0.366501*t6620;
  t6628 = t6606 + t6626;
  t6630 = var2[8]*t6628;
  t6764 = -1.*t3528*t6762;
  t6774 = t115*t6769;
  t6777 = t6764 + t6774;
  t6785 = var2[4]*t6777;
  t6786 = t115*t6762;
  t6790 = t3528*t6769;
  t6793 = t6786 + t6790;
  t6800 = t3729*t6793;
  t6837 = -1.*t18*t6832;
  t6844 = t6800 + t6837;
  t6847 = var2[3]*t6844;
  t6849 = -0.930418*t6659;
  t6850 = 0.366501*t6679;
  t6852 = t6849 + t6850;
  t6854 = var2[7]*t6852;
  t6855 = -1.*t3742*t6659;
  t6861 = -1.*t3758*t6679;
  t6867 = -1.*t3806*t6697;
  t6877 = t6855 + t6861 + t6867;
  t6886 = var2[6]*t6877;
  t6892 = var2[5]*t6832;
  t6910 = t6630 + t6785 + t6847 + t6854 + t6886 + t6892;
  t6923 = 0.930418*t6921;
  t6929 = 0.366501*t6925;
  t6930 = t6923 + t6929;
  t6931 = var2[8]*t6930;
  t7018 = -1.*t3528*t7016;
  t7035 = t115*t7033;
  t7040 = t7018 + t7035;
  t7046 = var2[4]*t7040;
  t7052 = t115*t7016;
  t7064 = t3528*t7033;
  t7087 = t7052 + t7064;
  t7088 = t3729*t7087;
  t7103 = -1.*t18*t7100;
  t7104 = t7088 + t7103;
  t7105 = var2[3]*t7104;
  t7108 = -0.930418*t6944;
  t7111 = 0.366501*t6964;
  t7115 = t7108 + t7111;
  t7121 = var2[7]*t7115;
  t7124 = -1.*t3742*t6944;
  t7127 = -1.*t3758*t6964;
  t7128 = -1.*t3806*t6992;
  t7129 = t7124 + t7127 + t7128;
  t7130 = var2[6]*t7129;
  t7139 = var2[5]*t7100;
  t7141 = t6931 + t7046 + t7105 + t7121 + t7130 + t7139;
  t7148 = 3.325703601397834e-17*var2[8]*t1366;
  t7163 = -0.930418*t7162;
  t7174 = 0.366501*t7170;
  t7178 = t7163 + t7174;
  t7179 = var2[7]*t7178;
  t7219 = -1.*t3528*t7217;
  t7229 = t115*t7226;
  t7230 = t7219 + t7229;
  t7233 = var2[4]*t7230;
  t7234 = t115*t7217;
  t7236 = t3528*t7226;
  t7237 = t7234 + t7236;
  t7239 = t3729*t7237;
  t7252 = -1.*t18*t7250;
  t7253 = t7239 + t7252;
  t7254 = var2[3]*t7253;
  t7260 = -1.*t7162*t3742;
  t7264 = -1.*t7170*t3758;
  t7266 = -1.*t3806*t7193;
  t7268 = t7260 + t7264 + t7266;
  t7269 = var2[6]*t7268;
  t7270 = var2[5]*t7250;
  t7271 = t7148 + t7179 + t7233 + t7254 + t7269 + t7270;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0.000309*t3815*var2[3] + 0.004296*t4375*var2[3] + 0.001393*t4663*var2[3];
  p_output1[13]=0.00004*t3815*var2[3] + 0.001393*t4375*var2[3] + 0.036157*t4663*var2[3];
  p_output1[14]=0.038903*t3815*var2[3] + 0.000309*t4375*var2[3] + 0.00004*t4663*var2[3];
  p_output1[15]=0.000309*t4781 + 0.004296*t4839 + 0.001393*t4921;
  p_output1[16]=0.00004*t4781 + 0.001393*t4839 + 0.036157*t4921;
  p_output1[17]=0.038903*t4781 + 0.000309*t4839 + 0.00004*t4921;
  p_output1[18]=0.000309*t5063 + 0.004296*t5147 + 0.001393*t5220;
  p_output1[19]=0.00004*t5063 + 0.001393*t5147 + 0.036157*t5220;
  p_output1[20]=0.038903*t5063 + 0.000309*t5147 + 0.00004*t5220;
  p_output1[21]=0.000309*t5469 + 0.004296*t5644 + 0.001393*t5804;
  p_output1[22]=0.00004*t5469 + 0.001393*t5644 + 0.036157*t5804;
  p_output1[23]=0.038903*t5469 + 0.000309*t5644 + 0.00004*t5804;
  p_output1[24]=0.000309*t6143 + 0.004296*t6358 + 0.001393*t6571;
  p_output1[25]=0.00004*t6143 + 0.001393*t6358 + 0.036157*t6571;
  p_output1[26]=0.038903*t6143 + 0.000309*t6358 + 0.00004*t6571;
  p_output1[27]=0.004296*t6910 + 0.001393*t7141 + 0.000309*t7271;
  p_output1[28]=0.001393*t6910 + 0.036157*t7141 + 0.00004*t7271;
  p_output1[29]=0.000309*t6910 + 0.00004*t7141 + 0.038903*t7271;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jq_AMBody_left_knee_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
