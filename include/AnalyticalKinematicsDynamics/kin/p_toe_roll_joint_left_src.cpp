/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:41:48 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "p_toe_roll_joint_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t516;
  double t292;
  double t643;
  double t387;
  double t649;
  double t1895;
  double t15;
  double t1325;
  double t1333;
  double t1610;
  double t473;
  double t802;
  double t1304;
  double t1612;
  double t1737;
  double t1784;
  double t1835;
  double t2399;
  double t2410;
  double t2413;
  double t2244;
  double t2249;
  double t2311;
  double t1694;
  double t2382;
  double t2383;
  double t2946;
  double t2960;
  double t2963;
  double t2472;
  double t2497;
  double t1897;
  double t1941;
  double t2066;
  double t2067;
  double t3069;
  double t3072;
  double t3080;
  double t3103;
  double t3104;
  double t3114;
  double t2964;
  double t2974;
  double t2980;
  double t2982;
  double t2985;
  double t2992;
  double t3118;
  double t3033;
  double t3038;
  double t3044;
  double t3056;
  double t3060;
  double t3061;
  double t2866;
  double t2894;
  double t2912;
  double t2848;
  double t3009;
  double t3031;
  double t3032;
  double t3063;
  double t3120;
  double t3124;
  double t3140;
  double t3146;
  double t3156;
  double t3178;
  double t3183;
  double t3185;
  double t3192;
  double t3193;
  double t3198;
  double t3228;
  double t3232;
  double t3233;
  double t3241;
  double t3246;
  double t3247;
  double t3255;
  double t3261;
  double t3273;
  double t3296;
  double t3302;
  double t3307;
  double t3378;
  double t3390;
  double t3391;
  double t3152;
  double t3157;
  double t3167;
  double t3242;
  double t3243;
  double t3245;
  double t3310;
  double t3312;
  double t3333;
  double t3334;
  double t3338;
  double t3345;
  double t3348;
  double t3353;
  double t3356;
  double t3359;
  double t3409;
  double t3410;
  double t3411;
  double t3412;
  double t3447;
  double t3450;
  double t3453;
  double t3457;
  double t3459;
  double t3460;
  double t3470;
  double t3471;
  double t3482;
  double t2545;
  double t2555;
  double t2581;
  double t2593;
  double t2775;
  double t2854;
  double t2864;
  double t3316;
  double t3320;
  double t3323;
  double t3368;
  double t3395;
  double t3396;
  double t3463;
  double t3464;
  double t3487;
  double t3493;
  double t3504;
  double t3505;
  double t3508;
  double t3518;
  double t3519;
  double t3521;
  double t3529;
  double t3544;
  double t3545;
  double t3549;
  double t3550;
  double t3551;
  double t3552;
  double t3554;
  double t2780;
  double t2781;
  double t3469;
  double t3522;
  double t3526;
  double t3528;
  double t3555;
  double t3561;
  double t3570;
  double t3580;
  double t3582;
  double t3587;
  double t3591;
  double t3592;
  double t3594;
  double t3596;
  double t2586;
  double t3604;
  double t3606;
  double t3609;
  double t3611;
  double t3617;
  double t3618;
  double t3619;
  double t3623;
  double t3627;
  double t3628;
  double t3651;
  double t3563;
  double t3658;
  double t3653;
  double t3715;
  double t3667;
  double t3687;
  double t3742;
  double t3564;
  double t3710;
  double t2691;
  double t16;
  double t112;
  double t113;
  double t256;
  double t1646;
  double t1673;
  double t1849;
  double t1981;
  double t2230;
  double t2235;
  double t4078;
  double t4081;
  double t4082;
  double t4051;
  double t4056;
  double t4066;
  double t2375;
  double t2377;
  double t2387;
  double t2388;
  double t2427;
  double t2463;
  double t2501;
  double t2507;
  double t2774;
  double t4120;
  double t4124;
  double t4129;
  double t4092;
  double t4094;
  double t4100;
  double t4194;
  double t4198;
  double t4200;
  double t4203;
  double t4135;
  double t4136;
  double t4144;
  double t4145;
  double t4154;
  double t4157;
  double t4165;
  double t4179;
  double t4151;
  double t4189;
  double t4205;
  double t4206;
  double t4210;
  double t4212;
  double t4218;
  double t4221;
  double t4229;
  double t4230;
  double t4233;
  double t4239;
  double t4209;
  double t4226;
  double t4245;
  double t4252;
  double t4259;
  double t4264;
  double t4265;
  double t4266;
  double t4276;
  double t4290;
  double t4294;
  double t4303;
  double t3566;
  double t4255;
  double t4275;
  double t4310;
  double t4317;
  double t4326;
  double t4327;
  double t4329;
  double t4331;
  double t4337;
  double t4340;
  double t4343;
  double t4348;
  double t3599;
  double t3602;
  double t3635;
  double t3640;
  double t4320;
  double t4333;
  double t4350;
  double t4351;
  double t3654;
  double t4359;
  double t4361;
  double t4362;
  double t4363;
  double t3662;
  double t4365;
  double t4369;
  double t4371;
  double t4372;
  double t3672;
  double t3679;
  double t3682;
  double t3688;
  double t3701;
  double t3704;
  double t3711;
  double t3713;
  double t3723;
  double t3729;
  double t3730;
  double t3733;
  double t3735;
  double t3736;
  double t3741;
  double t3743;
  double t3744;
  double t3745;
  double t3763;
  double t3768;
  double t3773;
  double t3776;
  double t3782;
  double t3783;
  double t3786;
  double t3788;
  double t3789;
  double t3790;
  double t3792;
  double t3796;
  double t3809;
  double t3812;
  double t3817;
  double t3821;
  double t3830;
  double t3841;
  double t3843;
  double t3851;
  double t3853;
  double t3854;
  double t3855;
  double t3862;
  double t3863;
  double t3866;
  double t3872;
  double t3875;
  double t3877;
  double t3882;
  double t3883;
  double t3888;
  double t3901;
  double t3902;
  double t3903;
  double t3917;
  double t3921;
  double t3927;
  double t3928;
  double t3937;
  double t3938;
  double t3939;
  double t3942;
  double t3953;
  double t3954;
  double t3964;
  double t3967;
  double t3984;
  double t3991;
  double t3998;
  double t4000;
  double t4012;
  double t4015;
  double t4039;
  double t4041;
  double t4514;
  double t4516;
  double t4520;
  double t4507;
  double t4508;
  double t4512;
  double t4550;
  double t4552;
  double t4555;
  double t4563;
  double t4525;
  double t4527;
  double t4528;
  double t4531;
  double t4541;
  double t4543;
  double t4544;
  double t4546;
  double t4539;
  double t4547;
  double t4576;
  double t4578;
  double t4580;
  double t4582;
  double t4585;
  double t4586;
  double t4590;
  double t4601;
  double t4603;
  double t4604;
  double t4579;
  double t4589;
  double t4606;
  double t4608;
  double t4614;
  double t4615;
  double t4616;
  double t4618;
  double t4622;
  double t4627;
  double t4632;
  double t4634;
  double t4610;
  double t4621;
  double t4636;
  double t4642;
  double t4649;
  double t4652;
  double t4653;
  double t4659;
  double t4667;
  double t4672;
  double t4673;
  double t4676;
  double t4648;
  double t4662;
  double t4677;
  double t4679;
  double t4683;
  double t4684;
  double t4686;
  double t4689;
  double t4695;
  double t4697;
  double t4699;
  double t4701;
  t516 = Cos(var1[3]);
  t292 = Cos(var1[5]);
  t643 = Sin(var1[4]);
  t387 = Sin(var1[3]);
  t649 = Sin(var1[5]);
  t1895 = Sin(var1[7]);
  t15 = Cos(var1[6]);
  t1325 = t516*t292*t643;
  t1333 = t387*t649;
  t1610 = t1325 + t1333;
  t473 = -1.*t292*t387;
  t802 = t516*t643*t649;
  t1304 = t473 + t802;
  t1612 = Sin(var1[6]);
  t1737 = Cos(var1[7]);
  t1784 = -1.*t1737;
  t1835 = 1. + t1784;
  t2399 = t15*t1304;
  t2410 = -1.*t1610*t1612;
  t2413 = t2399 + t2410;
  t2244 = t15*t1610;
  t2249 = t1304*t1612;
  t2311 = t2244 + t2249;
  t1694 = Cos(var1[4]);
  t2382 = 0.366501*t1895;
  t2383 = 0. + t2382;
  t2946 = Cos(var1[8]);
  t2960 = -1.*t2946;
  t2963 = 1. + t2960;
  t2472 = 0.930418*t1895;
  t2497 = 0. + t2472;
  t1897 = -0.930418*t1895;
  t1941 = 0. + t1897;
  t2066 = -0.366501*t1895;
  t2067 = 0. + t2066;
  t3069 = -1.000000637725*t1835;
  t3072 = 1. + t3069;
  t3080 = t516*t1694*t3072;
  t3103 = t2413*t1941;
  t3104 = t2311*t2067;
  t3114 = t3080 + t3103 + t3104;
  t2964 = -0.340999127418*t1835*t2413;
  t2974 = -0.134322983001*t1835;
  t2980 = 1. + t2974;
  t2982 = t2980*t2311;
  t2985 = t516*t1694*t2383;
  t2992 = t2964 + t2982 + t2985;
  t3118 = Sin(var1[8]);
  t3033 = -0.8656776547239999*t1835;
  t3038 = 1. + t3033;
  t3044 = t3038*t2413;
  t3056 = -0.340999127418*t1835*t2311;
  t3060 = t516*t1694*t2497;
  t3061 = t3044 + t3056 + t3060;
  t2866 = Cos(var1[9]);
  t2894 = -1.*t2866;
  t2912 = 1. + t2894;
  t2848 = Sin(var1[10]);
  t3009 = 0.340999127418*t2963*t2992;
  t3031 = -0.134322983001*t2963;
  t3032 = 1. + t3031;
  t3063 = t3032*t3061;
  t3120 = -0.366501*t3118;
  t3124 = 0. + t3120;
  t3140 = t3114*t3124;
  t3146 = t3009 + t3063 + t3140;
  t3156 = Sin(var1[9]);
  t3178 = -1.000000637725*t2963;
  t3183 = 1. + t3178;
  t3185 = t3183*t3114;
  t3192 = -0.930418*t3118;
  t3193 = 0. + t3192;
  t3198 = t2992*t3193;
  t3228 = 0.366501*t3118;
  t3232 = 0. + t3228;
  t3233 = t3061*t3232;
  t3241 = t3185 + t3198 + t3233;
  t3246 = -0.8656776547239999*t2963;
  t3247 = 1. + t3246;
  t3255 = t3247*t2992;
  t3261 = 0.340999127418*t2963*t3061;
  t3273 = 0.930418*t3118;
  t3296 = 0. + t3273;
  t3302 = t3114*t3296;
  t3307 = t3255 + t3261 + t3302;
  t3378 = Cos(var1[10]);
  t3390 = -1.*t3378;
  t3391 = 1. + t3390;
  t3152 = 0.340999127418*t2912*t3146;
  t3157 = -0.930418*t3156;
  t3167 = 0. + t3157;
  t3242 = t3167*t3241;
  t3243 = -0.8656776547239999*t2912;
  t3245 = 1. + t3243;
  t3310 = t3245*t3307;
  t3312 = t3152 + t3242 + t3310;
  t3333 = -0.134322983001*t2912;
  t3334 = 1. + t3333;
  t3338 = t3334*t3146;
  t3345 = 0.366501*t3156;
  t3348 = 0. + t3345;
  t3353 = t3348*t3241;
  t3356 = 0.340999127418*t2912*t3307;
  t3359 = t3338 + t3353 + t3356;
  t3409 = -0.366501*t3156;
  t3410 = 0. + t3409;
  t3411 = t3410*t3146;
  t3412 = -1.000000637725*t2912;
  t3447 = 1. + t3412;
  t3450 = t3447*t3241;
  t3453 = 0.930418*t3156;
  t3457 = 0. + t3453;
  t3459 = t3457*t3307;
  t3460 = t3411 + t3450 + t3459;
  t3470 = Cos(var1[11]);
  t3471 = -1.*t3470;
  t3482 = 1. + t3471;
  t2545 = Cos(var1[12]);
  t2555 = -1.*t2545;
  t2581 = 1. + t2555;
  t2593 = Sin(var1[12]);
  t2775 = Sin(var1[11]);
  t2854 = 0.930418*t2848;
  t2864 = 0. + t2854;
  t3316 = t2864*t3312;
  t3320 = -0.366501*t2848;
  t3323 = 0. + t3320;
  t3368 = t3323*t3359;
  t3395 = -1.000000637725*t3391;
  t3396 = 1. + t3395;
  t3463 = t3396*t3460;
  t3464 = t3316 + t3368 + t3463;
  t3487 = -0.8656776547239999*t3391;
  t3493 = 1. + t3487;
  t3504 = t3493*t3312;
  t3505 = 0.340999127418*t3391*t3359;
  t3508 = -0.930418*t2848;
  t3518 = 0. + t3508;
  t3519 = t3518*t3460;
  t3521 = t3504 + t3505 + t3519;
  t3529 = 0.340999127418*t3391*t3312;
  t3544 = -0.134322983001*t3391;
  t3545 = 1. + t3544;
  t3549 = t3545*t3359;
  t3550 = 0.366501*t2848;
  t3551 = 0. + t3550;
  t3552 = t3551*t3460;
  t3554 = t3529 + t3549 + t3552;
  t2780 = 0.366501*t2775;
  t2781 = 0. + t2780;
  t3469 = t2781*t3464;
  t3522 = 0.340999127418*t3482*t3521;
  t3526 = -0.134322983001*t3482;
  t3528 = 1. + t3526;
  t3555 = t3528*t3554;
  t3561 = t3469 + t3522 + t3555;
  t3570 = -0.930418*t2775;
  t3580 = 0. + t3570;
  t3582 = t3580*t3464;
  t3587 = -0.8656776547239999*t3482;
  t3591 = 1. + t3587;
  t3592 = t3591*t3521;
  t3594 = 0.340999127418*t3482*t3554;
  t3596 = t3582 + t3592 + t3594;
  t2586 = -0.175248972904*t2581;
  t3604 = -1.000000637725*t3482;
  t3606 = 1. + t3604;
  t3609 = t3606*t3464;
  t3611 = 0.930418*t2775;
  t3617 = 0. + t3611;
  t3618 = t3617*t3521;
  t3619 = -0.366501*t2775;
  t3623 = 0. + t3619;
  t3627 = t3623*t3554;
  t3628 = t3609 + t3618 + t3627;
  t3651 = -0.120666640478*t2581;
  t3563 = 0.444895486988*t2581;
  t3658 = -0.553471*t2593;
  t3653 = 0.803828*t2593;
  t3715 = 0.120666640478*t2581;
  t3667 = -0.803828*t2593;
  t3687 = -0.218018*t2593;
  t3742 = -0.444895486988*t2581;
  t3564 = 0.218018*t2593;
  t3710 = 0.175248972904*t2581;
  t2691 = 0.553471*t2593;
  t16 = -1.*t15;
  t112 = 1. + t16;
  t113 = 0.091*t112;
  t256 = 0. + t113;
  t1646 = 0.091*t1612;
  t1673 = 0. + t1646;
  t1849 = -0.04500040093286238*t1835;
  t1981 = 0.07877663122399998*t1941;
  t2230 = 0.031030906668*t2067;
  t2235 = 0. + t1849 + t1981 + t2230;
  t4078 = t292*t387*t643;
  t4081 = -1.*t516*t649;
  t4082 = t4078 + t4081;
  t4051 = t516*t292;
  t4056 = t387*t643*t649;
  t4066 = t4051 + t4056;
  t2375 = -3.2909349868922137e-7*var1[7];
  t2377 = 0.03103092645718495*t1835;
  t2387 = -0.045000372235*t2383;
  t2388 = t2375 + t2377 + t2387;
  t2427 = 1.296332362046933e-7*var1[7];
  t2463 = 0.07877668146182712*t1835;
  t2501 = -0.045000372235*t2497;
  t2507 = t2427 + t2463 + t2501;
  t2774 = t2586 + t2691;
  t4120 = t15*t4066;
  t4124 = -1.*t4082*t1612;
  t4129 = t4120 + t4124;
  t4092 = t15*t4082;
  t4094 = t4066*t1612;
  t4100 = t4092 + t4094;
  t4194 = t1694*t3072*t387;
  t4198 = t4129*t1941;
  t4200 = t4100*t2067;
  t4203 = t4194 + t4198 + t4200;
  t4135 = -0.340999127418*t1835*t4129;
  t4136 = t2980*t4100;
  t4144 = t1694*t387*t2383;
  t4145 = t4135 + t4136 + t4144;
  t4154 = t3038*t4129;
  t4157 = -0.340999127418*t1835*t4100;
  t4165 = t1694*t387*t2497;
  t4179 = t4154 + t4157 + t4165;
  t4151 = 0.340999127418*t2963*t4145;
  t4189 = t3032*t4179;
  t4205 = t4203*t3124;
  t4206 = t4151 + t4189 + t4205;
  t4210 = t3183*t4203;
  t4212 = t4145*t3193;
  t4218 = t4179*t3232;
  t4221 = t4210 + t4212 + t4218;
  t4229 = t3247*t4145;
  t4230 = 0.340999127418*t2963*t4179;
  t4233 = t4203*t3296;
  t4239 = t4229 + t4230 + t4233;
  t4209 = 0.340999127418*t2912*t4206;
  t4226 = t3167*t4221;
  t4245 = t3245*t4239;
  t4252 = t4209 + t4226 + t4245;
  t4259 = t3334*t4206;
  t4264 = t3348*t4221;
  t4265 = 0.340999127418*t2912*t4239;
  t4266 = t4259 + t4264 + t4265;
  t4276 = t3410*t4206;
  t4290 = t3447*t4221;
  t4294 = t3457*t4239;
  t4303 = t4276 + t4290 + t4294;
  t3566 = t3563 + t3564;
  t4255 = t2864*t4252;
  t4275 = t3323*t4266;
  t4310 = t3396*t4303;
  t4317 = t4255 + t4275 + t4310;
  t4326 = t3493*t4252;
  t4327 = 0.340999127418*t3391*t4266;
  t4329 = t3518*t4303;
  t4331 = t4326 + t4327 + t4329;
  t4337 = 0.340999127418*t3391*t4252;
  t4340 = t3545*t4266;
  t4343 = t3551*t4303;
  t4348 = t4337 + t4340 + t4343;
  t3599 = -0.353861996165*t2581;
  t3602 = 1. + t3599;
  t3635 = -0.952469601425*t2581;
  t3640 = 1. + t3635;
  t4320 = t2781*t4317;
  t4333 = 0.340999127418*t3482*t4331;
  t4350 = t3528*t4348;
  t4351 = t4320 + t4333 + t4350;
  t3654 = t3651 + t3653;
  t4359 = t3580*t4317;
  t4361 = t3591*t4331;
  t4362 = 0.340999127418*t3482*t4348;
  t4363 = t4359 + t4361 + t4362;
  t3662 = t2586 + t3658;
  t4365 = t3606*t4317;
  t4369 = t3617*t4331;
  t4371 = t3623*t4348;
  t4372 = t4365 + t4369 + t4371;
  t3672 = t3651 + t3667;
  t3679 = -0.693671301908*t2581;
  t3682 = 1. + t3679;
  t3688 = t3563 + t3687;
  t3701 = 2.838136523330542e-8*var1[12];
  t3704 = 0.2845150083511607*t2581;
  t3711 = t3710 + t3658;
  t3713 = 0.44503472296900004*t3711;
  t3723 = t3715 + t3653;
  t3729 = -0.5286755231320001*t3723;
  t3730 = t3701 + t3704 + t3713 + t3729;
  t3733 = -7.20503013377005e-8*var1[12];
  t3735 = -0.3667270384178674*t2581;
  t3736 = t3715 + t3667;
  t3741 = 0.29871295412*t3736;
  t3743 = t3742 + t3687;
  t3744 = 0.44503472296900004*t3743;
  t3745 = t3733 + t3735 + t3741 + t3744;
  t3763 = -1.0464152525368286e-7*var1[12];
  t3768 = 0.15748087543254813*t2581;
  t3773 = t3742 + t3564;
  t3776 = -0.5286755231320001*t3773;
  t3782 = t3710 + t2691;
  t3783 = 0.29871295412*t3782;
  t3786 = t3763 + t3768 + t3776 + t3783;
  t3788 = 0.06199697675299678*t3482;
  t3789 = 0.324290713329*t3623;
  t3790 = -0.823260828522*t3617;
  t3792 = 0. + t3788 + t3789 + t3790;
  t3796 = 2.95447451120871e-8*var1[11];
  t3809 = -0.8232613535360118*t3482;
  t3812 = 0.061996937216*t3580;
  t3817 = t3796 + t3809 + t3812;
  t3821 = 7.500378623168247e-8*var1[11];
  t3830 = 0.32429092013729516*t3482;
  t3841 = 0.061996937216*t2781;
  t3843 = t3821 + t3830 + t3841;
  t3851 = 2.281945176511838e-8*var1[10];
  t3853 = -0.5905366811997648*t3391;
  t3854 = -0.262809976934*t3518;
  t3855 = t3851 + t3853 + t3854;
  t3862 = 5.7930615939377813e-8*var1[10];
  t3863 = 0.23261833304643187*t3391;
  t3866 = -0.262809976934*t3551;
  t3872 = t3862 + t3863 + t3866;
  t3875 = -0.26281014453449253*t3391;
  t3877 = 0.23261818470000004*t3323;
  t3882 = -0.5905363046000001*t2864;
  t3883 = 0. + t3875 + t3877 + t3882;
  t3888 = 3.2909349868922137e-7*var1[8];
  t3901 = 0.055653945343889656*t2963;
  t3902 = -0.045000372235*t3124;
  t3903 = t3888 + t3901 + t3902;
  t3917 = -1.5981976069815686e-7*var1[9];
  t3921 = 0.08675267452931407*t2912;
  t3927 = 0.039853013046*t3348;
  t3928 = t3917 + t3921 + t3927;
  t3937 = -0.04500040093286238*t2963;
  t3938 = -0.141285834136*t3193;
  t3939 = 0.055653909852*t3232;
  t3942 = 0. + t3937 + t3938 + t3939;
  t3953 = 0.039853038461262744*t2912;
  t3954 = 0.086752619205*t3410;
  t3964 = -0.22023459268999998*t3457;
  t3967 = 0. + t3953 + t3954 + t3964;
  t3984 = 1.296332362046933e-7*var1[8];
  t3991 = -0.14128592423750855*t2963;
  t3998 = -0.045000372235*t3296;
  t4000 = t3984 + t3991 + t3998;
  t4012 = -6.295460977284962e-8*var1[9];
  t4015 = -0.22023473313910558*t2912;
  t4039 = 0.039853013046*t3167;
  t4041 = t4012 + t4015 + t4039;
  t4514 = t1694*t15*t649;
  t4516 = -1.*t1694*t292*t1612;
  t4520 = t4514 + t4516;
  t4507 = t1694*t292*t15;
  t4508 = t1694*t649*t1612;
  t4512 = t4507 + t4508;
  t4550 = -1.*t3072*t643;
  t4552 = t4520*t1941;
  t4555 = t4512*t2067;
  t4563 = t4550 + t4552 + t4555;
  t4525 = -0.340999127418*t1835*t4520;
  t4527 = t2980*t4512;
  t4528 = -1.*t643*t2383;
  t4531 = t4525 + t4527 + t4528;
  t4541 = t3038*t4520;
  t4543 = -0.340999127418*t1835*t4512;
  t4544 = -1.*t643*t2497;
  t4546 = t4541 + t4543 + t4544;
  t4539 = 0.340999127418*t2963*t4531;
  t4547 = t3032*t4546;
  t4576 = t4563*t3124;
  t4578 = t4539 + t4547 + t4576;
  t4580 = t3183*t4563;
  t4582 = t4531*t3193;
  t4585 = t4546*t3232;
  t4586 = t4580 + t4582 + t4585;
  t4590 = t3247*t4531;
  t4601 = 0.340999127418*t2963*t4546;
  t4603 = t4563*t3296;
  t4604 = t4590 + t4601 + t4603;
  t4579 = 0.340999127418*t2912*t4578;
  t4589 = t3167*t4586;
  t4606 = t3245*t4604;
  t4608 = t4579 + t4589 + t4606;
  t4614 = t3334*t4578;
  t4615 = t3348*t4586;
  t4616 = 0.340999127418*t2912*t4604;
  t4618 = t4614 + t4615 + t4616;
  t4622 = t3410*t4578;
  t4627 = t3447*t4586;
  t4632 = t3457*t4604;
  t4634 = t4622 + t4627 + t4632;
  t4610 = t2864*t4608;
  t4621 = t3323*t4618;
  t4636 = t3396*t4634;
  t4642 = t4610 + t4621 + t4636;
  t4649 = t3493*t4608;
  t4652 = 0.340999127418*t3391*t4618;
  t4653 = t3518*t4634;
  t4659 = t4649 + t4652 + t4653;
  t4667 = 0.340999127418*t3391*t4608;
  t4672 = t3545*t4618;
  t4673 = t3551*t4634;
  t4676 = t4667 + t4672 + t4673;
  t4648 = t2781*t4642;
  t4662 = 0.340999127418*t3482*t4659;
  t4677 = t3528*t4676;
  t4679 = t4648 + t4662 + t4677;
  t4683 = t3580*t4642;
  t4684 = t3591*t4659;
  t4686 = 0.340999127418*t3482*t4676;
  t4689 = t4683 + t4684 + t4686;
  t4695 = t3606*t4642;
  t4697 = t3617*t4659;
  t4699 = t3623*t4676;
  t4701 = t4695 + t4697 + t4699;
  p_output1[0]=0. + t1610*t1673 + t2311*t2388 + t2413*t2507 + t1304*t256 + 0.061997*(t2774*t3561 + t3566*t3596 + t3602*t3628) + 0.402602*(t3561*t3640 + t3596*t3654 + t3628*t3662) - 0.792413*(t3561*t3672 + t3596*t3682 + t3628*t3688) + t3561*t3730 + t3596*t3745 + t3628*t3786 + t3464*t3792 + t3521*t3817 + t3554*t3843 + t3312*t3855 + t3359*t3872 + t3460*t3883 + t3061*t3903 + t3146*t3928 + t3114*t3942 + t3241*t3967 + t2992*t4000 + t3307*t4041 + t1694*t2235*t516 + var1[0];
  p_output1[1]=0. + t1694*t2235*t387 + t256*t4066 + t1673*t4082 + t2388*t4100 + t2507*t4129 + t4000*t4145 + t3903*t4179 + t3942*t4203 + t3928*t4206 + t3967*t4221 + t4041*t4239 + t3855*t4252 + t3872*t4266 + t3883*t4303 + t3792*t4317 + t3817*t4331 + t3843*t4348 + t3730*t4351 + t3745*t4363 + t3786*t4372 + 0.061997*(t2774*t4351 + t3566*t4363 + t3602*t4372) + 0.402602*(t3640*t4351 + t3654*t4363 + t3662*t4372) - 0.792413*(t3672*t4351 + t3682*t4363 + t3688*t4372) + var1[1];
  p_output1[2]=0. + t1673*t1694*t292 + t2388*t4512 + t2507*t4520 + t4000*t4531 + t3903*t4546 + t3942*t4563 + t3928*t4578 + t3967*t4586 + t4041*t4604 + t3855*t4608 + t3872*t4618 + t3883*t4634 + t3792*t4642 + t3817*t4659 + t3843*t4676 + t3730*t4679 + t3745*t4689 + t3786*t4701 + 0.061997*(t2774*t4679 + t3566*t4689 + t3602*t4701) + 0.402602*(t3640*t4679 + t3654*t4689 + t3662*t4701) - 0.792413*(t3672*t4679 + t3682*t4689 + t3688*t4701) - 1.*t2235*t643 + t1694*t256*t649 + var1[2];
}



void p_toe_roll_joint_left_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
