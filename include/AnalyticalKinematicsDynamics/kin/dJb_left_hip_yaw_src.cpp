/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:56:24 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dJb_left_hip_yaw_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t310;
  double t436;
  double t344;
  double t387;
  double t254;
  double t443;
  double t507;
  double t202;
  double t27;
  double t45;
  double t70;
  double t95;
  double t111;
  double t134;
  double t227;
  double t399;
  double t541;
  double t586;
  double t591;
  double t593;
  double t598;
  double t603;
  double t623;
  double t631;
  double t777;
  double t17;
  double t884;
  double t1044;
  double t1065;
  double t1075;
  double t1168;
  double t1179;
  double t1208;
  double t1434;
  double t1441;
  double t1448;
  double t1532;
  double t1616;
  double t1623;
  double t1919;
  double t1925;
  double t1938;
  double t1947;
  double t1956;
  double t1868;
  double t1879;
  double t1888;
  double t1892;
  double t1904;
  double t1907;
  double t2001;
  double t2025;
  double t2103;
  double t2126;
  double t2177;
  double t2333;
  double t2335;
  double t2349;
  double t2373;
  double t2417;
  double t2420;
  double t2574;
  double t2603;
  double t2604;
  double t2685;
  double t2689;
  double t2703;
  double t2934;
  double t2937;
  double t2957;
  double t2985;
  double t2986;
  double t2993;
  double t3315;
  double t3356;
  double t3281;
  double t3286;
  double t3310;
  double t3312;
  double t3360;
  double t3367;
  double t3393;
  double t3433;
  double t3435;
  double t3622;
  double t3636;
  double t3651;
  double t3662;
  double t3811;
  double t3818;
  double t3969;
  double t3993;
  double t4054;
  double t4116;
  double t4120;
  double t4130;
  double t4304;
  double t4307;
  double t4366;
  double t4384;
  double t4388;
  double t4425;
  double t188;
  double t792;
  double t797;
  double t916;
  double t924;
  double t987;
  double t1103;
  double t1118;
  double t1121;
  double t1238;
  double t1240;
  double t1261;
  double t1288;
  double t1312;
  double t1531;
  double t1640;
  double t1641;
  double t1665;
  double t1672;
  double t1675;
  double t1690;
  double t1711;
  double t1763;
  double t2090;
  double t2196;
  double t2203;
  double t2280;
  double t2283;
  double t2292;
  double t2372;
  double t2387;
  double t2404;
  double t2437;
  double t2549;
  double t2641;
  double t2717;
  double t2727;
  double t2839;
  double t2858;
  double t2900;
  double t2963;
  double t3022;
  double t3040;
  double t3120;
  double t3138;
  double t3149;
  double t3219;
  double t3222;
  double t3231;
  double t3374;
  double t3437;
  double t3444;
  double t3454;
  double t3456;
  double t3476;
  double t3655;
  double t3695;
  double t3772;
  double t3860;
  double t3922;
  double t4085;
  double t4179;
  double t4214;
  double t4243;
  double t4276;
  double t4281;
  double t4380;
  double t4432;
  double t4441;
  double t4538;
  double t4576;
  double t4584;
  double t4604;
  double t4662;
  double t6118;
  double t6119;
  double t6136;
  double t6137;
  double t6149;
  double t6161;
  double t6163;
  double t6166;
  double t6198;
  double t6199;
  double t6201;
  double t6206;
  double t6207;
  double t6228;
  double t6235;
  double t6249;
  double t6085;
  double t6092;
  double t6108;
  double t6197;
  double t6260;
  double t6282;
  double t6309;
  double t6310;
  double t6333;
  double t6334;
  double t6353;
  double t6367;
  double t6368;
  double t6376;
  double t6381;
  double t6382;
  double t6390;
  double t6406;
  double t6408;
  double t6413;
  double t6428;
  double t6432;
  double t6293;
  double t6337;
  double t6339;
  double t6370;
  double t6434;
  double t6446;
  double t6456;
  double t6459;
  double t6465;
  double t6502;
  double t6503;
  double t6510;
  double t6511;
  double t6513;
  double t6531;
  double t6538;
  double t6546;
  double t6495;
  double t6470;
  double t6512;
  double t6514;
  double t6517;
  double t6344;
  double t6450;
  double t6477;
  double t6479;
  double t6493;
  double t6494;
  double t6496;
  double t6497;
  double t6618;
  double t6596;
  double t6599;
  double t6600;
  double t6058;
  double t6066;
  double t6070;
  double t5916;
  double t5932;
  double t5941;
  double t6690;
  double t6711;
  double t6712;
  double t6715;
  double t6077;
  double t6080;
  double t5967;
  double t5979;
  double t6010;
  double t6764;
  double t6769;
  double t6770;
  double t6778;
  double t6785;
  double t6786;
  double t6777;
  double t6791;
  double t6792;
  double t6796;
  double t6798;
  double t6801;
  double t6808;
  double t6809;
  double t6810;
  double t6814;
  double t6819;
  double t6825;
  double t6794;
  double t6803;
  double t6806;
  double t6811;
  double t6826;
  double t6828;
  double t6840;
  double t6841;
  double t6842;
  double t5659;
  double t5710;
  double t5727;
  double t6951;
  double t6957;
  double t6958;
  double t6959;
  double t6939;
  double t6941;
  double t6947;
  double t6948;
  double t5754;
  double t5782;
  double t5785;
  double t7224;
  double t7225;
  double t7226;
  double t7233;
  double t7205;
  double t7206;
  double t7209;
  double t7210;
  double t5735;
  double t5738;
  double t5741;
  double t5789;
  double t5802;
  double t5830;
  double t5912;
  double t5946;
  double t6019;
  double t6023;
  double t6028;
  double t6056;
  double t6072;
  double t6083;
  double t6084;
  double t6518;
  double t6519;
  double t6564;
  double t6568;
  double t6601;
  double t6607;
  double t6646;
  double t6652;
  double t7427;
  double t7429;
  double t7432;
  double t7447;
  double t7449;
  double t7450;
  double t6807;
  double t6848;
  double t6860;
  double t6870;
  double t7065;
  double t7066;
  double t7040;
  double t7041;
  double t7014;
  double t7015;
  double t7534;
  double t7536;
  double t7538;
  double t7548;
  double t7549;
  double t7554;
  double t6980;
  double t6987;
  double t7100;
  double t7103;
  double t7139;
  double t7165;
  double t7340;
  double t7341;
  double t7316;
  double t7317;
  double t7293;
  double t7294;
  double t7646;
  double t7649;
  double t7651;
  double t7660;
  double t7661;
  double t7663;
  double t7263;
  double t7267;
  double t7361;
  double t7365;
  double t7384;
  double t7389;
  double t7496;
  double t7508;
  double t7514;
  double t7597;
  double t7598;
  double t7623;
  double t7739;
  double t7741;
  double t7747;
  double t7748;
  double t8014;
  double t8022;
  double t8054;
  t310 = Sin(var1[7]);
  t436 = Cos(var1[6]);
  t344 = 0.366501*t310;
  t387 = 0. + t344;
  t254 = Sin(var1[6]);
  t443 = 0.930418*t310;
  t507 = 0. + t443;
  t202 = Cos(var1[4]);
  t27 = Cos(var1[7]);
  t45 = -1.*t27;
  t70 = 1. + t45;
  t95 = 1.000000637725*t70;
  t111 = -1. + t95;
  t134 = Sin(var1[4]);
  t227 = Sin(var1[5]);
  t399 = t254*t387;
  t541 = t436*t507;
  t586 = t399 + t541;
  t591 = t227*t586;
  t593 = Cos(var1[5]);
  t598 = t436*t387;
  t603 = -1.*t254*t507;
  t623 = t598 + t603;
  t631 = t593*t623;
  t777 = t591 + t631;
  t17 = Cos(var1[3]);
  t884 = Sin(var1[3]);
  t1044 = t593*t586;
  t1065 = -1.*t227*t623;
  t1075 = t1044 + t1065;
  t1168 = -1.*t254*t387;
  t1179 = -1.*t436*t507;
  t1208 = t1168 + t1179;
  t1434 = 0.366501*t436*t27;
  t1441 = -0.930418*t27*t254;
  t1448 = t1434 + t1441;
  t1532 = 0.930418*t436*t27;
  t1616 = 0.366501*t27*t254;
  t1623 = t1532 + t1616;
  t1919 = -0.134322983001*t70;
  t1925 = 1. + t1919;
  t1938 = 0.366501*t1925;
  t1947 = -0.3172717261340007*t70;
  t1956 = t1938 + t1947;
  t1868 = -0.8656776547239999*t70;
  t1879 = 1. + t1868;
  t1888 = 0.930418*t1879;
  t1892 = -0.12497652119782442*t70;
  t1904 = t1888 + t1892;
  t1907 = -1.*t436*t1904;
  t2001 = -1.*t1956*t254;
  t2025 = t1907 + t2001;
  t2103 = t436*t1956;
  t2126 = -1.*t1904*t254;
  t2177 = t2103 + t2126;
  t2333 = t436*t1904;
  t2335 = t1956*t254;
  t2349 = 0. + t2333 + t2335;
  t2373 = 0. + t2103 + t2126;
  t2417 = t593*t2349;
  t2420 = -1.*t227*t2373;
  t2574 = t227*t2349;
  t2603 = t593*t2373;
  t2604 = 0. + t2574 + t2603;
  t2685 = 0.366501*t387;
  t2689 = 0.930418*t507;
  t2703 = 0. + t2685 + t2689;
  t2934 = -0.930418593350819*t436*t310;
  t2937 = -0.3665012337268502*t254*t310;
  t2957 = t2934 + t2937;
  t2985 = -0.3665012337268502*t436*t310;
  t2986 = 0.930418593350819*t254*t310;
  t2993 = t2985 + t2986;
  t3315 = -0.930418*t1925;
  t3356 = t3315 + t1892;
  t3281 = 0.366501*t1879;
  t3286 = 0.3172717261340007*t70;
  t3310 = t3281 + t3286;
  t3312 = -1.*t436*t3310;
  t3360 = -1.*t3356*t254;
  t3367 = t3312 + t3360;
  t3393 = t436*t3356;
  t3433 = -1.*t3310*t254;
  t3435 = t3393 + t3433;
  t3622 = t436*t3310;
  t3636 = t3356*t254;
  t3651 = 0. + t3622 + t3636;
  t3662 = 0. + t3393 + t3433;
  t3811 = t593*t3651;
  t3818 = -1.*t227*t3662;
  t3969 = t227*t3651;
  t3993 = t593*t3662;
  t4054 = 0. + t3969 + t3993;
  t4116 = -0.930418*t387;
  t4120 = 0.366501*t507;
  t4130 = 0. + t4116 + t4120;
  t4304 = -5.551115123125783e-17*t436*t310;
  t4307 = 1.3877787807814457e-17*t254*t310;
  t4366 = t4304 + t4307;
  t4384 = 1.3877787807814457e-17*t436*t310;
  t4388 = 5.551115123125783e-17*t254*t310;
  t4425 = t4384 + t4388;
  t188 = -1.*t111*t134;
  t792 = t202*t777;
  t797 = t188 + t792;
  t916 = t202*t111;
  t924 = t134*t777;
  t987 = t916 + t924;
  t1103 = -1.*t227*t586;
  t1118 = -1.*t593*t623;
  t1121 = t1103 + t1118;
  t1238 = -1.*t227*t1208;
  t1240 = t1238 + t631;
  t1261 = t593*t1208;
  t1288 = t227*t623;
  t1312 = t1261 + t1288;
  t1531 = -1.*t227*t1448;
  t1640 = t593*t1623;
  t1641 = t1531 + t1640;
  t1665 = t593*t1448;
  t1672 = t227*t1623;
  t1675 = t1665 + t1672;
  t1690 = t134*t1675;
  t1711 = 1.000000637725*t202*t310;
  t1763 = t1690 + t1711;
  t2090 = -1.*t227*t2025;
  t2196 = t593*t2177;
  t2203 = t2090 + t2196;
  t2280 = t593*t2025;
  t2283 = t227*t2177;
  t2292 = t2280 + t2283;
  t2372 = -1.*t227*t2349;
  t2387 = -1.*t593*t2373;
  t2404 = t2372 + t2387;
  t2437 = t2417 + t2420;
  t2549 = 0. + t2417 + t2420;
  t2641 = t134*t2604;
  t2717 = t202*t2703;
  t2727 = 0. + t2641 + t2717;
  t2839 = t202*t2604;
  t2858 = -1.*t134*t2703;
  t2900 = t2839 + t2858;
  t2963 = t593*t2957;
  t3022 = -1.*t227*t2993;
  t3040 = t2963 + t3022;
  t3120 = 1.000000637725*t202*t27;
  t3138 = t227*t2957;
  t3149 = t593*t2993;
  t3219 = t3138 + t3149;
  t3222 = t134*t3219;
  t3231 = t3120 + t3222;
  t3374 = -1.*t227*t3367;
  t3437 = t593*t3435;
  t3444 = t3374 + t3437;
  t3454 = t593*t3367;
  t3456 = t227*t3435;
  t3476 = t3454 + t3456;
  t3655 = -1.*t227*t3651;
  t3695 = -1.*t593*t3662;
  t3772 = t3655 + t3695;
  t3860 = t3811 + t3818;
  t3922 = 0. + t3811 + t3818;
  t4085 = t134*t4054;
  t4179 = t202*t4130;
  t4214 = 0. + t4085 + t4179;
  t4243 = t202*t4054;
  t4276 = -1.*t134*t4130;
  t4281 = t4243 + t4276;
  t4380 = t593*t4366;
  t4432 = -1.*t227*t4425;
  t4441 = t4380 + t4432;
  t4538 = t227*t4366;
  t4576 = t593*t4425;
  t4584 = t4538 + t4576;
  t4604 = t134*t4584;
  t4662 = 0. + t4604;
  t6118 = -3.2909349868922137e-7*var1[7];
  t6119 = -0.086806*t1925;
  t6136 = -0.010945384129716011*t70;
  t6137 = -0.366501*t310;
  t6149 = 0. + t6137;
  t6161 = -0.04501*t6149;
  t6163 = -0.045000372235*t387;
  t6166 = t6118 + t6119 + t6136 + t6161 + t6163;
  t6198 = 1.296332362046933e-7*var1[7];
  t6199 = 0.123098*t1879;
  t6201 = 0.10837745171647402*t70;
  t6206 = -0.930418*t310;
  t6207 = 0. + t6206;
  t6228 = -0.04501*t6207;
  t6235 = -0.045000372235*t507;
  t6249 = t6198 + t6199 + t6201 + t6228 + t6235;
  t6085 = -1.*t436;
  t6092 = 1. + t6085;
  t6108 = 0.091*t6092;
  t6197 = t254*t6166;
  t6260 = t436*t6249;
  t6282 = 0. + t6108 + t6197 + t6260;
  t6309 = 0.091*t254;
  t6310 = t436*t6166;
  t6333 = -1.*t254*t6249;
  t6334 = 0. + t6309 + t6310 + t6333;
  t6353 = t227*t6282;
  t6367 = t593*t6334;
  t6368 = 0. + t6353 + t6367;
  t6376 = -1.000000637725*t70;
  t6381 = 1. + t6376;
  t6382 = -0.04501*t6381;
  t6390 = -0.04500040093286238*t70;
  t6406 = 0.07877663122399998*t6207;
  t6408 = 0.031030906668*t6149;
  t6413 = -0.086806*t387;
  t6428 = 0.123098*t507;
  t6432 = 0. + t6382 + t6390 + t6406 + t6408 + t6413 + t6428;
  t6293 = t593*t6282;
  t6337 = -1.*t227*t6334;
  t6339 = 0. + t6293 + t6337;
  t6370 = t134*t6368;
  t6434 = t202*t6432;
  t6446 = 0. + t6370 + t6434;
  t6456 = t202*t6368;
  t6459 = -1.*t134*t6432;
  t6465 = 0. + t6456 + t6459;
  t6502 = 0.091*t436;
  t6503 = -1.*t254*t6166;
  t6510 = -1.*t436*t6249;
  t6511 = t6502 + t6503 + t6510;
  t6513 = t6309 + t6310 + t6333;
  t6531 = t593*t6511;
  t6538 = t227*t6513;
  t6546 = t6531 + t6538;
  t6495 = 0. + t2839 + t2858;
  t6470 = 0. + t4243 + t4276;
  t6512 = -1.*t227*t6511;
  t6514 = t593*t6513;
  t6517 = t6512 + t6514;
  t6344 = t3922*t6339;
  t6450 = t6446*t4214;
  t6477 = t6465*t6470;
  t6479 = t6344 + t6450 + t6477;
  t6493 = -1.*t2549*t6339;
  t6494 = -1.*t6446*t2727;
  t6496 = -1.*t6465*t6495;
  t6497 = t6493 + t6494 + t6496;
  t6618 = t6293 + t6337;
  t6596 = -1.*t227*t6282;
  t6599 = -1.*t593*t6334;
  t6600 = t6596 + t6599;
  t6058 = -1.*t134*t4054;
  t6066 = -1.*t202*t4130;
  t6070 = t6058 + t6066;
  t5916 = -1.*t134*t2604;
  t5932 = -1.*t202*t2703;
  t5941 = t5916 + t5932;
  t6690 = t6456 + t6459;
  t6711 = -1.*t134*t6368;
  t6712 = -1.*t202*t6432;
  t6715 = t6711 + t6712;
  t6077 = t202*t4584;
  t6080 = 0. + t6077;
  t5967 = -1.000000637725*t27*t134;
  t5979 = t202*t3219;
  t6010 = t5967 + t5979;
  t6764 = 3.5285855002654964e-6*t27;
  t6769 = 0.0007146567326687947*t310;
  t6770 = -3.2909349868922137e-7 + t6764 + t6769;
  t6778 = 8.957845855771251e-6*t27;
  t6785 = 0.0018142637752590757*t310;
  t6786 = 1.296332362046933e-7 + t6778 + t6785;
  t6777 = t254*t6770;
  t6791 = t436*t6786;
  t6792 = t6777 + t6791;
  t6796 = t436*t6770;
  t6798 = -1.*t254*t6786;
  t6801 = t6796 + t6798;
  t6808 = t227*t6792;
  t6809 = t593*t6801;
  t6810 = t6808 + t6809;
  t6814 = -0.0019499448369002942*t27;
  t6819 = 9.627771139865404e-6*t310;
  t6825 = t6814 + t6819;
  t6794 = t593*t6792;
  t6803 = -1.*t227*t6801;
  t6806 = t6794 + t6803;
  t6811 = t134*t6810;
  t6826 = t202*t6825;
  t6828 = t6811 + t6826;
  t6840 = t202*t6810;
  t6841 = -1.*t134*t6825;
  t6842 = t6840 + t6841;
  t5659 = -1.*t202*t111;
  t5710 = -1.*t134*t777;
  t5727 = t5659 + t5710;
  t6951 = t987*t6446;
  t6957 = t797*t6465;
  t6958 = t6339*t1075;
  t6959 = t6951 + t6957 + t6958;
  t6939 = -1.*t3922*t6339;
  t6941 = -1.*t6446*t4214;
  t6947 = -1.*t6465*t6470;
  t6948 = t6939 + t6941 + t6947;
  t5754 = t202*t1675;
  t5782 = -1.000000637725*t134*t310;
  t5785 = t5754 + t5782;
  t7224 = -1.*t987*t6446;
  t7225 = -1.*t797*t6465;
  t7226 = -1.*t6339*t1075;
  t7233 = t7224 + t7225 + t7226;
  t7205 = t2549*t6339;
  t7206 = t6446*t2727;
  t7209 = t6465*t6495;
  t7210 = t7205 + t7206 + t7209;
  t5735 = var2[4]*t5727;
  t5738 = var2[5]*t202*t1075;
  t5741 = var2[6]*t202*t1312;
  t5789 = var2[7]*t5785;
  t5802 = t5735 + t5738 + t5741 + t5789;
  t5830 = var2[6]*t202*t2292;
  t5912 = var2[5]*t202*t2437;
  t5946 = var2[4]*t5941;
  t6019 = var2[7]*t6010;
  t6023 = t5830 + t5912 + t5946 + t6019;
  t6028 = var2[6]*t202*t3476;
  t6056 = var2[5]*t202*t3860;
  t6072 = var2[4]*t6070;
  t6083 = var2[7]*t6080;
  t6084 = t6028 + t6056 + t6072 + t6083;
  t6518 = -1.*t2549*t6517;
  t6519 = -1.*t2203*t6339;
  t6564 = t3922*t6517;
  t6568 = t3444*t6339;
  t6601 = -1.*t2549*t6600;
  t6607 = -1.*t2404*t6339;
  t6646 = t3922*t6600;
  t6652 = t3772*t6339;
  t7427 = t4054*t6368;
  t7429 = t6432*t4130;
  t7432 = t7427 + t6344 + t7429;
  t7447 = -1.*t2604*t6368;
  t7449 = -1.*t6432*t2703;
  t7450 = t7447 + t6493 + t7449;
  t6807 = t3922*t6806;
  t6848 = t6339*t4441;
  t6860 = -1.*t2549*t6806;
  t6870 = -1.*t6339*t3040;
  t7065 = t6339*t1240;
  t7066 = t6517*t1075;
  t7040 = -1.*t3922*t6517;
  t7041 = -1.*t3444*t6339;
  t7014 = t6339*t1121;
  t7015 = t6600*t1075;
  t7534 = t6368*t777;
  t7536 = t111*t6432;
  t7538 = t7534 + t6958 + t7536;
  t7548 = -1.*t4054*t6368;
  t7549 = -1.*t6432*t4130;
  t7554 = t7548 + t6939 + t7549;
  t6980 = -1.*t3922*t6600;
  t6987 = -1.*t3772*t6339;
  t7100 = t1641*t6339;
  t7103 = t6806*t1075;
  t7139 = -1.*t3922*t6806;
  t7165 = -1.*t6339*t4441;
  t7340 = -1.*t6339*t1240;
  t7341 = -1.*t6517*t1075;
  t7316 = t2549*t6517;
  t7317 = t2203*t6339;
  t7293 = -1.*t6339*t1121;
  t7294 = -1.*t6600*t1075;
  t7646 = -1.*t6368*t777;
  t7649 = -1.*t111*t6432;
  t7651 = t7646 + t7226 + t7649;
  t7660 = t2604*t6368;
  t7661 = t6432*t2703;
  t7663 = t7660 + t7205 + t7661;
  t7263 = t2549*t6600;
  t7267 = t2404*t6339;
  t7361 = -1.*t1641*t6339;
  t7365 = -1.*t6806*t1075;
  t7384 = t2549*t6806;
  t7389 = t6339*t3040;
  t7496 = t4130*t6825;
  t7508 = -1.000000637725*t27*t6432;
  t7514 = -1.*t2703*t6825;
  t7597 = t111*t6825;
  t7598 = 1.000000637725*t6432*t310;
  t7623 = -1.*t4130*t6825;
  t7739 = -1.*t111*t6825;
  t7741 = -1.000000637725*t6432*t310;
  t7747 = 1.000000637725*t27*t6432;
  t7748 = t2703*t6825;
  t8014 = t4116 + t4120;
  t8022 = t2685 + t2689;
  t8054 = -1. + t95;
  p_output1[0]=(-1.*t1075*t17 - 1.*t884*t987)*var2[3] + t17*t797*var2[4] + (t1075*t134*t17 - 1.*t1121*t884)*var2[5] + (t1312*t134*t17 - 1.*t1240*t884)*var2[6] + (t17*t1763 - 1.*t1641*t884)*var2[7];
  p_output1[1]=(-1.*t17*t2549 - 1.*t2727*t884)*var2[3] + t17*t2900*var2[4] + (t134*t17*t2437 - 1.*t2404*t884)*var2[5] + (t134*t17*t2292 - 1.*t2203*t884)*var2[6] + (t17*t3231 - 1.*t3040*t884)*var2[7];
  p_output1[2]=(-1.*t17*t3922 - 1.*t4214*t884)*var2[3] + t17*t4281*var2[4] + (t134*t17*t3860 - 1.*t3772*t884)*var2[5] + (t134*t17*t3476 - 1.*t3444*t884)*var2[6] + (t17*t4662 - 1.*t4441*t884)*var2[7];
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=(-1.*t1075*t884 + t17*t987)*var2[3] + t797*t884*var2[4] + (t1121*t17 + t1075*t134*t884)*var2[5] + (t1240*t17 + t1312*t134*t884)*var2[6] + (t1641*t17 + t1763*t884)*var2[7];
  p_output1[7]=(t17*t2727 - 1.*t2549*t884)*var2[3] + t2900*t884*var2[4] + (t17*t2404 + t134*t2437*t884)*var2[5] + (t17*t2203 + t134*t2292*t884)*var2[6] + (t17*t3040 + t3231*t884)*var2[7];
  p_output1[8]=(t17*t4214 - 1.*t3922*t884)*var2[3] + t4281*t884*var2[4] + (t17*t3772 + t134*t3860*t884)*var2[5] + (t17*t3444 + t134*t3476*t884)*var2[6] + (t17*t4441 + t4662*t884)*var2[7];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t5802;
  p_output1[13]=t6023;
  p_output1[14]=t6084;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(t5941*t6479 + t6070*t6497 + t6495*(t4281*t6446 + t6070*t6465 + t4214*t6690 + t6470*t6715) + t6470*(-1.*t2900*t6446 - 1.*t5941*t6465 - 1.*t2727*t6690 - 1.*t6495*t6715))*var2[4] + (t202*t2437*t6479 + t202*t3860*t6497 + t6470*(-1.*t134*t2437*t6446 - 1.*t202*t2437*t6465 + t6601 + t6607 - 1.*t134*t2727*t6618 - 1.*t202*t6495*t6618) + t6495*(t134*t3860*t6446 + t202*t3860*t6465 + t134*t4214*t6618 + t202*t6470*t6618 + t6646 + t6652))*var2[5] + (t202*t2292*t6479 + t202*t3476*t6497 + t6470*(-1.*t134*t2292*t6446 - 1.*t202*t2292*t6465 + t6518 + t6519 - 1.*t134*t2727*t6546 - 1.*t202*t6495*t6546) + t6495*(t134*t3476*t6446 + t202*t3476*t6465 + t134*t4214*t6546 + t202*t6470*t6546 + t6564 + t6568))*var2[6] + (t6010*t6479 + t6080*t6497 + t6495*(t4662*t6446 + t6080*t6465 + t6807 + t4214*t6828 + t6470*t6842 + t6848) + t6470*(-1.*t3231*t6446 - 1.*t6010*t6465 - 1.*t2727*t6828 - 1.*t6495*t6842 + t6860 + t6870))*var2[7];
  p_output1[19]=(t5727*t6948 + t6070*t6959 + (-1.*t4281*t6446 - 1.*t6070*t6465 - 1.*t4214*t6690 - 1.*t6470*t6715)*t797 + t6470*(t5727*t6465 + t6446*t797 + t6715*t797 + t6690*t987))*var2[4] + (t1075*t202*t6948 + t202*t3860*t6959 + (-1.*t134*t3860*t6446 - 1.*t202*t3860*t6465 - 1.*t134*t4214*t6618 - 1.*t202*t6470*t6618 + t6980 + t6987)*t797 + t6470*(t1075*t134*t6446 + t1075*t202*t6465 + t7014 + t7015 + t202*t6618*t797 + t134*t6618*t987))*var2[5] + (t1312*t202*t6948 + t202*t3476*t6959 + (-1.*t134*t3476*t6446 - 1.*t202*t3476*t6465 - 1.*t134*t4214*t6546 - 1.*t202*t6470*t6546 + t7040 + t7041)*t797 + t6470*(t1312*t134*t6446 + t1312*t202*t6465 + t7065 + t7066 + t202*t6546*t797 + t134*t6546*t987))*var2[6] + (t5785*t6948 + t6080*t6959 + (-1.*t4662*t6446 - 1.*t6080*t6465 - 1.*t4214*t6828 - 1.*t6470*t6842 + t7139 + t7165)*t797 + t6470*(t1763*t6446 + t5785*t6465 + t7100 + t7103 + t6842*t797 + t6828*t987))*var2[7];
  p_output1[20]=(t5727*t7210 + t5941*t7233 + (t2900*t6446 + t5941*t6465 + t2727*t6690 + t6495*t6715)*t797 + t6495*(-1.*t5727*t6465 - 1.*t6446*t797 - 1.*t6715*t797 - 1.*t6690*t987))*var2[4] + (t1075*t202*t7210 + t202*t2437*t7233 + (t134*t2437*t6446 + t202*t2437*t6465 + t134*t2727*t6618 + t202*t6495*t6618 + t7263 + t7267)*t797 + t6495*(-1.*t1075*t134*t6446 - 1.*t1075*t202*t6465 + t7293 + t7294 - 1.*t202*t6618*t797 - 1.*t134*t6618*t987))*var2[5] + (t1312*t202*t7210 + t202*t2292*t7233 + (t134*t2292*t6446 + t202*t2292*t6465 + t134*t2727*t6546 + t202*t6495*t6546 + t7316 + t7317)*t797 + t6495*(-1.*t1312*t134*t6446 - 1.*t1312*t202*t6465 + t7340 + t7341 - 1.*t202*t6546*t797 - 1.*t134*t6546*t987))*var2[6] + (t5785*t7210 + t6010*t7233 + (t3231*t6446 + t6010*t6465 + t2727*t6828 + t6495*t6842 + t7384 + t7389)*t797 + t6495*(-1.*t1763*t6446 - 1.*t5785*t6465 + t7361 + t7365 - 1.*t6842*t797 - 1.*t6828*t987))*var2[7];
  p_output1[21]=t5802;
  p_output1[22]=t6023;
  p_output1[23]=t6084;
  p_output1[24]=(t3922*(-1.*t2437*t6368 + t6601 + t6607 - 1.*t2604*t6618) + t2549*(t3860*t6368 + t4054*t6618 + t6646 + t6652) + t2404*t7432 + t3772*t7450)*var2[5] + (t3922*(-1.*t2292*t6368 + t6518 + t6519 - 1.*t2604*t6546) + t2549*(t3476*t6368 + t4054*t6546 + t6564 + t6568) + t2203*t7432 + t3444*t7450)*var2[6] + (t3040*t7432 + t4441*t7450 + t2549*(0. + t4584*t6368 + t6807 + t4054*t6810 + t6848 + t7496) + t3922*(-1.*t3219*t6368 - 1.*t2604*t6810 + t6860 + t6870 + t7508 + t7514))*var2[7];
  p_output1[25]=(t1075*(-1.*t3860*t6368 - 1.*t4054*t6618 + t6980 + t6987) + t3772*t7538 + t1121*t7554 + t3922*(t1075*t6368 + t7014 + t7015 + t6618*t777))*var2[5] + (t1075*(-1.*t3476*t6368 - 1.*t4054*t6546 + t7040 + t7041) + t3444*t7538 + t1240*t7554 + t3922*(t1312*t6368 + t7065 + t7066 + t6546*t777))*var2[6] + (t4441*t7538 + t1641*t7554 + t1075*(0. - 1.*t4584*t6368 - 1.*t4054*t6810 + t7139 + t7165 + t7623) + t3922*(t1675*t6368 + t7100 + t7103 + t7597 + t7598 + t6810*t777))*var2[7];
  p_output1[26]=(t1075*(t2437*t6368 + t2604*t6618 + t7263 + t7267) + t2404*t7651 + t1121*t7663 + t2549*(-1.*t1075*t6368 + t7293 + t7294 - 1.*t6618*t777))*var2[5] + (t1075*(t2292*t6368 + t2604*t6546 + t7316 + t7317) + t2203*t7651 + t1240*t7663 + t2549*(-1.*t1312*t6368 + t7340 + t7341 - 1.*t6546*t777))*var2[6] + (t3040*t7651 + t1641*t7663 + t1075*(t3219*t6368 + t2604*t6810 + t7384 + t7389 + t7747 + t7748) + t2549*(-1.*t1675*t6368 + t7361 + t7365 + t7739 + t7741 - 1.*t6810*t777))*var2[7];
  p_output1[27]=t1121*var2[5] + t1240*var2[6] + t1641*var2[7];
  p_output1[28]=t2404*var2[5] + t2203*var2[6] + t3040*var2[7];
  p_output1[29]=t3772*var2[5] + t3444*var2[6] + t4441*var2[7];
  p_output1[30]=(t4130*(-1.*t2177*t6282 - 1.*t2025*t6334 - 1.*t2373*t6511 - 1.*t2349*t6513) + t2703*(t3435*t6282 + t3367*t6334 + t3662*t6511 + t3651*t6513))*var2[6] + (0. + 1.000000637725*t27*(t3651*t6282 + t3662*t6334 + t7429) + t2703*(0. + t4366*t6282 + t4425*t6334 + t3651*t6792 + t3662*t6801 + t7496) + t4130*(-1.*t2957*t6282 - 1.*t2993*t6334 - 1.*t2349*t6792 - 1.*t2373*t6801 + t7508 + t7514))*var2[7];
  p_output1[31]=(t111*(-1.*t3435*t6282 - 1.*t3367*t6334 - 1.*t3662*t6511 - 1.*t3651*t6513) + t4130*(t623*t6282 + t1208*t6334 + t623*t6511 + t586*t6513))*var2[6] + (0. + 1.000000637725*t310*(-1.*t3651*t6282 - 1.*t3662*t6334 + t7549) + t4130*(t1623*t6282 + t1448*t6334 + t586*t6792 + t623*t6801 + t7597 + t7598) + t111*(0. - 1.*t4366*t6282 - 1.*t4425*t6334 - 1.*t3651*t6792 - 1.*t3662*t6801 + t7623))*var2[7];
  p_output1[32]=(t111*(t2177*t6282 + t2025*t6334 + t2373*t6511 + t2349*t6513) + t2703*(-1.*t623*t6282 - 1.*t1208*t6334 - 1.*t623*t6511 - 1.*t586*t6513))*var2[6] + (1.000000637725*t27*(-1.*t586*t6282 - 1.*t623*t6334 + t7649) + 1.000000637725*t310*(t2349*t6282 + t2373*t6334 + t7661) + t2703*(-1.*t1623*t6282 - 1.*t1448*t6334 - 1.*t586*t6792 - 1.*t623*t6801 + t7739 + t7741) + t111*(t2957*t6282 + t2993*t6334 + t2349*t6792 + t2373*t6801 + t7747 + t7748))*var2[7];
  p_output1[33]=1.000000637725*t310*var2[7];
  p_output1[34]=1.000000637725*t27*var2[7];
  p_output1[35]=0.;
  p_output1[36]=(0. + 0.033351591*t27 - 1.000000637725*t27*(t3356*t6166 + t3310*t6249 + t6432*t8014) - 1.*(0. + 1.3877787807814457e-17*t310*t6166 - 5.551115123125783e-17*t310*t6249 + t3356*t6770 + t3310*t6786 + t6825*t8014)*t8022 - 1.*t8014*(0.3665012337268502*t310*t6166 + 0.930418593350819*t310*t6249 - 1.*t1956*t6770 - 1.*t1904*t6786 + t7508 - 1.*t6825*t8022))*var2[7];
  p_output1[37]=(0. - 0.03335161226914336*t310 - 1.000000637725*t310*(-1.*t3356*t6166 - 1.*t3310*t6249 - 1.*t6432*t8014) - 1.*(0. - 1.3877787807814457e-17*t310*t6166 + 5.551115123125783e-17*t310*t6249 - 1.*t3356*t6770 - 1.*t3310*t6786 - 1.*t6825*t8014)*t8054 - 1.*t8014*(0.366501*t27*t6166 + 0.930418*t27*t6249 + t387*t6770 + t507*t6786 + t7598 + t6825*t8054))*var2[7];
  p_output1[38]=(1.2628786905111155e-18*t310 - 1.000000637725*t310*(t1956*t6166 + t1904*t6249 + t6432*t8022) - 1.*(-0.3665012337268502*t310*t6166 - 0.930418593350819*t310*t6249 + t1956*t6770 + t1904*t6786 + t7747 + t6825*t8022)*t8054 - 1.000000637725*t27*(-1.*t387*t6166 - 1.*t507*t6249 - 1.*t6432*t8054) - 1.*t8022*(-0.366501*t27*t6166 - 0.930418*t27*t6249 - 1.*t387*t6770 - 1.*t507*t6786 + t7741 - 1.*t6825*t8054))*var2[7];
  p_output1[39]=-1.000000637725*t310*var2[7];
  p_output1[40]=-1.000000637725*t27*var2[7];
  p_output1[41]=0.;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void dJb_left_hip_yaw_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
