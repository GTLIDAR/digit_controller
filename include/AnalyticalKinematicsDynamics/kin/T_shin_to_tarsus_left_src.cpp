/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:34:14 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "T_shin_to_tarsus_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t400;
  double t352;
  double t405;
  double t387;
  double t407;
  double t285;
  double t323;
  double t329;
  double t332;
  double t451;
  double t454;
  double t456;
  double t390;
  double t426;
  double t432;
  double t466;
  double t260;
  double t264;
  double t281;
  double t436;
  double t467;
  double t474;
  double t491;
  double t493;
  double t496;
  double t506;
  double t507;
  double t628;
  double t630;
  double t640;
  double t647;
  double t677;
  double t681;
  double t693;
  double t696;
  double t698;
  double t734;
  double t477;
  double t478;
  double t487;
  double t502;
  double t509;
  double t516;
  double t520;
  double t523;
  double t737;
  double t557;
  double t558;
  double t570;
  double t572;
  double t573;
  double t581;
  double t585;
  double t621;
  double t242;
  double t244;
  double t248;
  double t23;
  double t535;
  double t549;
  double t550;
  double t622;
  double t741;
  double t749;
  double t771;
  double t772;
  double t798;
  double t807;
  double t810;
  double t821;
  double t826;
  double t828;
  double t836;
  double t864;
  double t870;
  double t878;
  double t886;
  double t900;
  double t902;
  double t915;
  double t929;
  double t960;
  double t968;
  double t972;
  double t976;
  double t1133;
  double t1136;
  double t1137;
  double t775;
  double t801;
  double t802;
  double t887;
  double t891;
  double t893;
  double t981;
  double t991;
  double t1011;
  double t1017;
  double t1056;
  double t1080;
  double t1085;
  double t1089;
  double t1099;
  double t1108;
  double t1156;
  double t1161;
  double t1174;
  double t1185;
  double t1186;
  double t1203;
  double t1204;
  double t1205;
  double t1206;
  double t1220;
  double t34;
  double t38;
  double t1459;
  double t1469;
  double t1483;
  double t1439;
  double t1441;
  double t1442;
  double t1451;
  double t1488;
  double t1490;
  double t1503;
  double t1505;
  double t1516;
  double t1588;
  double t1593;
  double t1594;
  double t1600;
  double t1502;
  double t1530;
  double t1535;
  double t1536;
  double t1549;
  double t1551;
  double t1558;
  double t1570;
  double t1001;
  double t1006;
  double t1547;
  double t1572;
  double t1630;
  double t1639;
  double t1653;
  double t1655;
  double t1657;
  double t1665;
  double t1669;
  double t1682;
  double t1683;
  double t1696;
  double t1144;
  double t1149;
  double t1304;
  double t1308;
  double t1651;
  double t1668;
  double t1712;
  double t1714;
  double t1723;
  double t1732;
  double t1735;
  double t1750;
  double t1321;
  double t1327;
  double t1765;
  double t1767;
  double t1774;
  double t1775;
  double t1374;
  double t1387;
  double t1417;
  double t1420;
  double t1871;
  double t1877;
  double t1880;
  double t1890;
  double t1892;
  double t1894;
  double t1977;
  double t1979;
  double t1999;
  double t2026;
  double t1883;
  double t1909;
  double t1931;
  double t1954;
  double t1962;
  double t1963;
  double t1968;
  double t1973;
  double t1959;
  double t1975;
  double t2032;
  double t2033;
  double t2049;
  double t2052;
  double t2054;
  double t2062;
  double t2075;
  double t2080;
  double t2085;
  double t2091;
  double t2043;
  double t2074;
  double t2092;
  double t2098;
  double t2119;
  double t2132;
  double t2135;
  double t2142;
  double t2147;
  double t2167;
  double t2179;
  double t2183;
  double t996;
  double t1129;
  double t1246;
  double t1267;
  double t1309;
  double t1312;
  double t1329;
  double t1344;
  double t1360;
  double t1389;
  double t1421;
  double t1430;
  double t1716;
  double t1761;
  double t1793;
  double t1799;
  double t1808;
  double t1815;
  double t1822;
  double t1832;
  double t1841;
  double t1842;
  double t1845;
  double t1847;
  double t2109;
  double t2145;
  double t2186;
  double t2188;
  double t2197;
  double t2198;
  double t2199;
  double t2201;
  double t2203;
  double t2208;
  double t2209;
  double t2221;
  double t2417;
  double t2420;
  double t2429;
  double t2431;
  double t2441;
  double t2454;
  double t2462;
  double t2471;
  double t2478;
  double t2482;
  double t2484;
  double t2487;
  double t2489;
  double t2493;
  double t2499;
  double t2500;
  double t2506;
  double t2508;
  double t2523;
  double t2526;
  double t2551;
  double t2555;
  double t2557;
  double t2562;
  double t2571;
  double t2573;
  double t2585;
  double t2588;
  double t2591;
  double t2593;
  double t2600;
  double t2607;
  double t2608;
  double t2611;
  double t2633;
  double t2638;
  double t2650;
  double t2655;
  double t2657;
  double t2658;
  double t2665;
  double t2667;
  double t2671;
  double t2672;
  double t2675;
  double t2684;
  double t2688;
  double t2692;
  double t2693;
  double t2703;
  double t2715;
  double t2716;
  double t2717;
  double t2723;
  t400 = Cos(var1[3]);
  t352 = Cos(var1[5]);
  t405 = Sin(var1[4]);
  t387 = Sin(var1[3]);
  t407 = Sin(var1[5]);
  t285 = Cos(var1[7]);
  t323 = -1.*t285;
  t329 = 1. + t323;
  t332 = Cos(var1[6]);
  t451 = t400*t352*t405;
  t454 = t387*t407;
  t456 = t451 + t454;
  t390 = -1.*t352*t387;
  t426 = t400*t405*t407;
  t432 = t390 + t426;
  t466 = Sin(var1[6]);
  t260 = Cos(var1[8]);
  t264 = -1.*t260;
  t281 = 1. + t264;
  t436 = t332*t432;
  t467 = -1.*t456*t466;
  t474 = t436 + t467;
  t491 = t332*t456;
  t493 = t432*t466;
  t496 = t491 + t493;
  t506 = Cos(var1[4]);
  t507 = Sin(var1[7]);
  t628 = -1.000000637725*t329;
  t630 = 1. + t628;
  t640 = t400*t506*t630;
  t647 = -0.930418*t507;
  t677 = 0. + t647;
  t681 = t474*t677;
  t693 = -0.366501*t507;
  t696 = 0. + t693;
  t698 = t496*t696;
  t734 = t640 + t681 + t698;
  t477 = -0.340999127418*t329*t474;
  t478 = -0.134322983001*t329;
  t487 = 1. + t478;
  t502 = t487*t496;
  t509 = 0.366501*t507;
  t516 = 0. + t509;
  t520 = t400*t506*t516;
  t523 = t477 + t502 + t520;
  t737 = Sin(var1[8]);
  t557 = -0.8656776547239999*t329;
  t558 = 1. + t557;
  t570 = t558*t474;
  t572 = -0.340999127418*t329*t496;
  t573 = 0.930418*t507;
  t581 = 0. + t573;
  t585 = t400*t506*t581;
  t621 = t570 + t572 + t585;
  t242 = Cos(var1[9]);
  t244 = -1.*t242;
  t248 = 1. + t244;
  t23 = Sin(var1[10]);
  t535 = 0.340999127418*t281*t523;
  t549 = -0.134322983001*t281;
  t550 = 1. + t549;
  t622 = t550*t621;
  t741 = -0.366501*t737;
  t749 = 0. + t741;
  t771 = t734*t749;
  t772 = t535 + t622 + t771;
  t798 = Sin(var1[9]);
  t807 = -1.000000637725*t281;
  t810 = 1. + t807;
  t821 = t810*t734;
  t826 = -0.930418*t737;
  t828 = 0. + t826;
  t836 = t523*t828;
  t864 = 0.366501*t737;
  t870 = 0. + t864;
  t878 = t621*t870;
  t886 = t821 + t836 + t878;
  t900 = -0.8656776547239999*t281;
  t902 = 1. + t900;
  t915 = t902*t523;
  t929 = 0.340999127418*t281*t621;
  t960 = 0.930418*t737;
  t968 = 0. + t960;
  t972 = t734*t968;
  t976 = t915 + t929 + t972;
  t1133 = Cos(var1[10]);
  t1136 = -1.*t1133;
  t1137 = 1. + t1136;
  t775 = 0.340999127418*t248*t772;
  t801 = -0.930418*t798;
  t802 = 0. + t801;
  t887 = t802*t886;
  t891 = -0.8656776547239999*t248;
  t893 = 1. + t891;
  t981 = t893*t976;
  t991 = t775 + t887 + t981;
  t1011 = -0.134322983001*t248;
  t1017 = 1. + t1011;
  t1056 = t1017*t772;
  t1080 = 0.366501*t798;
  t1085 = 0. + t1080;
  t1089 = t1085*t886;
  t1099 = 0.340999127418*t248*t976;
  t1108 = t1056 + t1089 + t1099;
  t1156 = -0.366501*t798;
  t1161 = 0. + t1156;
  t1174 = t1161*t772;
  t1185 = -1.000000637725*t248;
  t1186 = 1. + t1185;
  t1203 = t1186*t886;
  t1204 = 0.930418*t798;
  t1205 = 0. + t1204;
  t1206 = t1205*t976;
  t1220 = t1174 + t1203 + t1206;
  t34 = 0.930418*t23;
  t38 = 0. + t34;
  t1459 = t352*t387*t405;
  t1469 = -1.*t400*t407;
  t1483 = t1459 + t1469;
  t1439 = t400*t352;
  t1441 = t387*t405*t407;
  t1442 = t1439 + t1441;
  t1451 = t332*t1442;
  t1488 = -1.*t1483*t466;
  t1490 = t1451 + t1488;
  t1503 = t332*t1483;
  t1505 = t1442*t466;
  t1516 = t1503 + t1505;
  t1588 = t506*t630*t387;
  t1593 = t1490*t677;
  t1594 = t1516*t696;
  t1600 = t1588 + t1593 + t1594;
  t1502 = -0.340999127418*t329*t1490;
  t1530 = t487*t1516;
  t1535 = t506*t387*t516;
  t1536 = t1502 + t1530 + t1535;
  t1549 = t558*t1490;
  t1551 = -0.340999127418*t329*t1516;
  t1558 = t506*t387*t581;
  t1570 = t1549 + t1551 + t1558;
  t1001 = -0.366501*t23;
  t1006 = 0. + t1001;
  t1547 = 0.340999127418*t281*t1536;
  t1572 = t550*t1570;
  t1630 = t1600*t749;
  t1639 = t1547 + t1572 + t1630;
  t1653 = t810*t1600;
  t1655 = t1536*t828;
  t1657 = t1570*t870;
  t1665 = t1653 + t1655 + t1657;
  t1669 = t902*t1536;
  t1682 = 0.340999127418*t281*t1570;
  t1683 = t1600*t968;
  t1696 = t1669 + t1682 + t1683;
  t1144 = -1.000000637725*t1137;
  t1149 = 1. + t1144;
  t1304 = -0.8656776547239999*t1137;
  t1308 = 1. + t1304;
  t1651 = 0.340999127418*t248*t1639;
  t1668 = t802*t1665;
  t1712 = t893*t1696;
  t1714 = t1651 + t1668 + t1712;
  t1723 = t1017*t1639;
  t1732 = t1085*t1665;
  t1735 = 0.340999127418*t248*t1696;
  t1750 = t1723 + t1732 + t1735;
  t1321 = -0.930418*t23;
  t1327 = 0. + t1321;
  t1765 = t1161*t1639;
  t1767 = t1186*t1665;
  t1774 = t1205*t1696;
  t1775 = t1765 + t1767 + t1774;
  t1374 = -0.134322983001*t1137;
  t1387 = 1. + t1374;
  t1417 = 0.366501*t23;
  t1420 = 0. + t1417;
  t1871 = t506*t332*t407;
  t1877 = -1.*t506*t352*t466;
  t1880 = t1871 + t1877;
  t1890 = t506*t352*t332;
  t1892 = t506*t407*t466;
  t1894 = t1890 + t1892;
  t1977 = -1.*t630*t405;
  t1979 = t1880*t677;
  t1999 = t1894*t696;
  t2026 = t1977 + t1979 + t1999;
  t1883 = -0.340999127418*t329*t1880;
  t1909 = t487*t1894;
  t1931 = -1.*t405*t516;
  t1954 = t1883 + t1909 + t1931;
  t1962 = t558*t1880;
  t1963 = -0.340999127418*t329*t1894;
  t1968 = -1.*t405*t581;
  t1973 = t1962 + t1963 + t1968;
  t1959 = 0.340999127418*t281*t1954;
  t1975 = t550*t1973;
  t2032 = t2026*t749;
  t2033 = t1959 + t1975 + t2032;
  t2049 = t810*t2026;
  t2052 = t1954*t828;
  t2054 = t1973*t870;
  t2062 = t2049 + t2052 + t2054;
  t2075 = t902*t1954;
  t2080 = 0.340999127418*t281*t1973;
  t2085 = t2026*t968;
  t2091 = t2075 + t2080 + t2085;
  t2043 = 0.340999127418*t248*t2033;
  t2074 = t802*t2062;
  t2092 = t893*t2091;
  t2098 = t2043 + t2074 + t2092;
  t2119 = t1017*t2033;
  t2132 = t1085*t2062;
  t2135 = 0.340999127418*t248*t2091;
  t2142 = t2119 + t2132 + t2135;
  t2147 = t1161*t2033;
  t2167 = t1186*t2062;
  t2179 = t1205*t2091;
  t2183 = t2147 + t2167 + t2179;
  t996 = t38*t991;
  t1129 = t1006*t1108;
  t1246 = t1149*t1220;
  t1267 = t996 + t1129 + t1246;
  t1309 = t1308*t991;
  t1312 = 0.340999127418*t1137*t1108;
  t1329 = t1327*t1220;
  t1344 = t1309 + t1312 + t1329;
  t1360 = 0.340999127418*t1137*t991;
  t1389 = t1387*t1108;
  t1421 = t1420*t1220;
  t1430 = t1360 + t1389 + t1421;
  t1716 = t38*t1714;
  t1761 = t1006*t1750;
  t1793 = t1149*t1775;
  t1799 = t1716 + t1761 + t1793;
  t1808 = t1308*t1714;
  t1815 = 0.340999127418*t1137*t1750;
  t1822 = t1327*t1775;
  t1832 = t1808 + t1815 + t1822;
  t1841 = 0.340999127418*t1137*t1714;
  t1842 = t1387*t1750;
  t1845 = t1420*t1775;
  t1847 = t1841 + t1842 + t1845;
  t2109 = t38*t2098;
  t2145 = t1006*t2142;
  t2186 = t1149*t2183;
  t2188 = t2109 + t2145 + t2186;
  t2197 = t1308*t2098;
  t2198 = 0.340999127418*t1137*t2142;
  t2199 = t1327*t2183;
  t2201 = t2197 + t2198 + t2199;
  t2203 = 0.340999127418*t1137*t2098;
  t2208 = t1387*t2142;
  t2209 = t1420*t2183;
  t2221 = t2203 + t2208 + t2209;
  t2417 = -1.*t332;
  t2420 = 1. + t2417;
  t2429 = 0.091*t2420;
  t2431 = 0. + t2429;
  t2441 = 0.091*t466;
  t2454 = 0. + t2441;
  t2462 = -0.04500040093286238*t329;
  t2471 = 0.07877663122399998*t677;
  t2478 = 0.031030906668*t696;
  t2482 = 0. + t2462 + t2471 + t2478;
  t2484 = -3.2909349868922137e-7*var1[7];
  t2487 = 0.03103092645718495*t329;
  t2489 = -0.045000372235*t516;
  t2493 = t2484 + t2487 + t2489;
  t2499 = 1.296332362046933e-7*var1[7];
  t2500 = 0.07877668146182712*t329;
  t2506 = -0.045000372235*t581;
  t2508 = t2499 + t2500 + t2506;
  t2523 = 2.281945176511838e-8*var1[10];
  t2526 = -0.5905366811997648*t1137;
  t2551 = -0.262809976934*t1327;
  t2555 = t2523 + t2526 + t2551;
  t2557 = 5.7930615939377813e-8*var1[10];
  t2562 = 0.23261833304643187*t1137;
  t2571 = -0.262809976934*t1420;
  t2573 = t2557 + t2562 + t2571;
  t2585 = -0.26281014453449253*t1137;
  t2588 = 0.23261818470000004*t1006;
  t2591 = -0.5905363046000001*t38;
  t2593 = 0. + t2585 + t2588 + t2591;
  t2600 = 3.2909349868922137e-7*var1[8];
  t2607 = 0.055653945343889656*t281;
  t2608 = -0.045000372235*t749;
  t2611 = t2600 + t2607 + t2608;
  t2633 = -1.5981976069815686e-7*var1[9];
  t2638 = 0.08675267452931407*t248;
  t2650 = 0.039853013046*t1085;
  t2655 = t2633 + t2638 + t2650;
  t2657 = -0.04500040093286238*t281;
  t2658 = -0.141285834136*t828;
  t2665 = 0.055653909852*t870;
  t2667 = 0. + t2657 + t2658 + t2665;
  t2671 = 0.039853038461262744*t248;
  t2672 = 0.086752619205*t1161;
  t2675 = -0.22023459268999998*t1205;
  t2684 = 0. + t2671 + t2672 + t2675;
  t2688 = 1.296332362046933e-7*var1[8];
  t2692 = -0.14128592423750855*t281;
  t2693 = -0.045000372235*t968;
  t2703 = t2688 + t2692 + t2693;
  t2715 = -6.295460977284962e-8*var1[9];
  t2716 = -0.22023473313910558*t248;
  t2717 = 0.039853013046*t802;
  t2723 = t2715 + t2716 + t2717;
  p_output1[0]=0.848048*t1267 - 0.493047*t1344 + 0.194216*t1430;
  p_output1[1]=0.848048*t1799 - 0.493047*t1832 + 0.194216*t1847;
  p_output1[2]=0.848048*t2188 - 0.493047*t2201 + 0.194216*t2221;
  p_output1[3]=0.;
  p_output1[4]=0.529919*t1267 + 0.789039*t1344 - 0.310811*t1430;
  p_output1[5]=0.529919*t1799 + 0.789039*t1832 - 0.310811*t1847;
  p_output1[6]=0.529919*t2188 + 0.789039*t2201 - 0.310811*t2221;
  p_output1[7]=0.;
  p_output1[8]=-0.366501*t1344 - 0.930418*t1430;
  p_output1[9]=-0.366501*t1832 - 0.930418*t1847;
  p_output1[10]=-0.366501*t2201 - 0.930418*t2221;
  p_output1[11]=0.;
  p_output1[12]=0. - 0.26281*t1267 - 0.559688*t1344 + 0.310929*t1430 + t1108*t2573 + t1220*t2593 + t2431*t432 + t2454*t456 + t2508*t474 + t2493*t496 + t2482*t400*t506 + t2703*t523 + t2611*t621 + t2667*t734 + t2655*t772 + t2684*t886 + t2723*t976 + t2555*t991 + var1[0];
  p_output1[13]=0. - 0.26281*t1799 - 0.559688*t1832 + 0.310929*t1847 + t1442*t2431 + t1483*t2454 + t1516*t2493 + t1490*t2508 + t1714*t2555 + t1750*t2573 + t1775*t2593 + t1570*t2611 + t1639*t2655 + t1600*t2667 + t1665*t2684 + t1536*t2703 + t1696*t2723 + t2482*t387*t506 + var1[1];
  p_output1[14]=0. - 0.26281*t2188 - 0.559688*t2201 + 0.310929*t2221 + t1894*t2493 + t1880*t2508 + t2098*t2555 + t2142*t2573 + t2183*t2593 + t1973*t2611 + t2033*t2655 + t2026*t2667 + t2062*t2684 + t1954*t2703 + t2091*t2723 - 1.*t2482*t405 + t2454*t352*t506 + t2431*t407*t506 + var1[2];
  p_output1[15]=1.;
}



void T_shin_to_tarsus_left_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
