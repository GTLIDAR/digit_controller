/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:09:44 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_right_hip_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t289;
  double t1331;
  double t1846;
  double t1702;
  double t1808;
  double t1951;
  double t93;
  double t155;
  double t268;
  double t1503;
  double t1821;
  double t1981;
  double t2149;
  double t2378;
  double t2488;
  double t2880;
  double t2915;
  double t26;
  double t3689;
  double t3869;
  double t3460;
  double t3475;
  double t3552;
  double t3953;
  double t4074;
  double t4078;
  double t4126;
  double t4136;
  double t4140;
  double t4145;
  double t3150;
  double t3188;
  double t768;
  double t981;
  double t1097;
  double t1175;
  double t5140;
  double t5142;
  double t4351;
  double t4377;
  double t4468;
  double t4475;
  double t4484;
  double t4542;
  double t5043;
  double t5055;
  double t4793;
  double t4812;
  double t4842;
  double t4857;
  double t4863;
  double t4945;
  double t5226;
  double t5231;
  double t5281;
  double t5287;
  double t5402;
  double t5447;
  double t4159;
  double t4183;
  double t4650;
  double t4741;
  double t288;
  double t1001;
  double t1236;
  double t1242;
  double t1533;
  double t1681;
  double t2383;
  double t2391;
  double t2417;
  double t2471;
  double t3054;
  double t3074;
  double t3219;
  double t3454;
  double t6288;
  double t6290;
  double t6297;
  double t6346;
  double t6397;
  double t6402;
  double t3643;
  double t3658;
  double t3915;
  double t3918;
  double t4125;
  double t4143;
  double t4215;
  double t4325;
  double t6421;
  double t6437;
  double t6440;
  double t6461;
  double t6463;
  double t6472;
  double t4558;
  double t4594;
  double t4744;
  double t4759;
  double t5040;
  double t5118;
  double t5200;
  double t5223;
  double t6480;
  double t6484;
  double t6485;
  double t6487;
  double t6496;
  double t6497;
  double t6510;
  double t6516;
  double t5580;
  double t5586;
  double t6543;
  double t6550;
  double t6551;
  double t6555;
  double t6047;
  double t6050;
  double t6083;
  double t6091;
  double t6720;
  double t6733;
  double t6757;
  double t6771;
  double t6783;
  double t6785;
  double t6808;
  double t6810;
  double t6814;
  double t6820;
  double t6831;
  double t6834;
  double t6859;
  double t6872;
  double t6888;
  double t6897;
  double t6907;
  double t6908;
  double t7002;
  double t7003;
  double t7012;
  double t7016;
  double t7020;
  double t7022;
  double t7030;
  double t7042;
  double t7056;
  double t7058;
  double t7063;
  double t7071;
  double t7073;
  double t7094;
  double t7112;
  double t7122;
  double t7128;
  double t7129;
  double t7215;
  double t7216;
  double t7218;
  double t7223;
  double t7226;
  double t7248;
  double t7257;
  double t7260;
  double t7264;
  double t7265;
  double t7290;
  double t7297;
  double t7301;
  double t7311;
  double t7330;
  double t7332;
  double t7335;
  double t7338;
  double t7399;
  double t7402;
  double t7403;
  double t7411;
  double t7412;
  double t7414;
  double t7423;
  double t7429;
  double t7438;
  double t7440;
  double t7441;
  double t7445;
  double t7448;
  double t7458;
  double t7461;
  double t7472;
  double t7475;
  double t7562;
  double t7564;
  double t7574;
  double t7583;
  double t7584;
  double t7590;
  double t7595;
  double t7607;
  double t7609;
  double t7624;
  double t7628;
  double t7649;
  double t7650;
  double t7655;
  double t7668;
  double t7669;
  double t7673;
  double t7740;
  double t7743;
  double t7744;
  double t7747;
  double t7749;
  double t7755;
  double t7758;
  double t7761;
  double t7764;
  double t7766;
  double t7771;
  double t7774;
  double t7781;
  double t7782;
  double t7784;
  double t7828;
  double t7830;
  double t7831;
  double t7835;
  double t7844;
  double t7846;
  double t7847;
  double t7849;
  double t7854;
  double t7857;
  double t7859;
  double t7901;
  double t7904;
  double t7905;
  double t7909;
  double t7910;
  double t7914;
  double t7919;
  double t7920;
  double t7925;
  double t7927;
  double t7929;
  double t7930;
  double t7935;
  double t7937;
  double t7940;
  double t7943;
  double t7944;
  double t7946;
  double t7981;
  double t7982;
  double t7983;
  double t7988;
  double t7989;
  double t7990;
  double t7994;
  double t7995;
  double t7996;
  double t8003;
  double t8004;
  double t8005;
  double t8008;
  double t8011;
  double t8013;
  double t8058;
  double t8059;
  double t8060;
  double t8061;
  double t8063;
  double t8064;
  double t8065;
  double t8067;
  double t8069;
  double t8070;
  double t8075;
  double t8076;
  double t8043;
  double t8045;
  double t8046;
  double t8048;
  double t8050;
  double t8051;
  double t8053;
  double t8054;
  double t8055;
  double t8108;
  double t8109;
  double t8112;
  double t8113;
  double t8114;
  double t8115;
  double t8118;
  double t8120;
  double t8121;
  double t8122;
  double t8124;
  double t8125;
  double t8127;
  double t8128;
  double t8154;
  double t8155;
  double t8157;
  double t8159;
  double t8162;
  double t8165;
  double t8167;
  double t8168;
  double t8170;
  double t8171;
  double t8172;
  double t8174;
  double t8200;
  double t8202;
  double t8206;
  double t8208;
  double t8209;
  double t8210;
  double t8217;
  double t8218;
  double t8222;
  double t8246;
  double t8248;
  double t8249;
  double t8251;
  double t8252;
  double t8253;
  double t8254;
  double t8257;
  double t8258;
  double t8259;
  double t8260;
  double t8287;
  double t8288;
  double t8290;
  double t8292;
  double t8293;
  double t8295;
  double t8300;
  double t8301;
  double t8302;
  double t8303;
  t289 = Sin(var1[18]);
  t1331 = Sin(var1[3]);
  t1846 = Cos(var1[3]);
  t1702 = Cos(var1[5]);
  t1808 = Sin(var1[4]);
  t1951 = Sin(var1[5]);
  t93 = Cos(var1[18]);
  t155 = -1.*t93;
  t268 = 1. + t155;
  t1503 = Sin(var1[17]);
  t1821 = -1.*t1702*t1331*t1808;
  t1981 = t1846*t1951;
  t2149 = t1821 + t1981;
  t2378 = Cos(var1[17]);
  t2488 = -1.*t1846*t1702;
  t2880 = -1.*t1331*t1808*t1951;
  t2915 = t2488 + t2880;
  t26 = Cos(var1[4]);
  t3689 = -0.366501*t289;
  t3869 = 0. + t3689;
  t3460 = -1.*t1503*t2149;
  t3475 = t2378*t2915;
  t3552 = t3460 + t3475;
  t3953 = t2378*t2149;
  t4074 = t1503*t2915;
  t4078 = t3953 + t4074;
  t4126 = Cos(var1[19]);
  t4136 = -1.*t4126;
  t4140 = 1. + t4136;
  t4145 = Sin(var1[19]);
  t3150 = 0.930418*t289;
  t3188 = 0. + t3150;
  t768 = -0.930418*t289;
  t981 = 0. + t768;
  t1097 = 0.366501*t289;
  t1175 = 0. + t1097;
  t5140 = 0.930418*t4145;
  t5142 = 0. + t5140;
  t4351 = -1.*t26*t3869*t1331;
  t4377 = 0.340999127418*t268*t3552;
  t4468 = -0.134322983001*t268;
  t4475 = 1. + t4468;
  t4484 = t4475*t4078;
  t4542 = t4351 + t4377 + t4484;
  t5043 = 0.366501*t4145;
  t5055 = 0. + t5043;
  t4793 = -1.*t26*t3188*t1331;
  t4812 = -0.8656776547239999*t268;
  t4842 = 1. + t4812;
  t4857 = t4842*t3552;
  t4863 = 0.340999127418*t268*t4078;
  t4945 = t4793 + t4857 + t4863;
  t5226 = -1.000000637725*t268;
  t5231 = 1. + t5226;
  t5281 = -1.*t5231*t26*t1331;
  t5287 = t981*t3552;
  t5402 = t1175*t4078;
  t5447 = t5281 + t5287 + t5402;
  t4159 = -0.930418*t4145;
  t4183 = 0. + t4159;
  t4650 = -0.366501*t4145;
  t4741 = 0. + t4650;
  t288 = -0.04500040093286238*t268;
  t1001 = -0.07877663122399998*t981;
  t1236 = 0.031030906668*t1175;
  t1242 = 0. + t288 + t1001 + t1236;
  t1533 = -0.091*t1503;
  t1681 = 0. + t1533;
  t2383 = -1.*t2378;
  t2391 = 1. + t2383;
  t2417 = -0.091*t2391;
  t2471 = 0. + t2417;
  t3054 = 1.296332362046933e-7*var1[18];
  t3074 = -0.07877668146182712*t268;
  t3219 = -0.045000372235*t3188;
  t3454 = t3054 + t3074 + t3219;
  t6288 = t1846*t1702*t1808;
  t6290 = t1331*t1951;
  t6297 = t6288 + t6290;
  t6346 = -1.*t1702*t1331;
  t6397 = t1846*t1808*t1951;
  t6402 = t6346 + t6397;
  t3643 = 3.2909349868922137e-7*var1[18];
  t3658 = 0.03103092645718495*t268;
  t3915 = -0.045000372235*t3869;
  t3918 = t3643 + t3658 + t3915;
  t4125 = -1.296332362046933e-7*var1[19];
  t4143 = -0.14128592423750855*t4140;
  t4215 = -0.045000372235*t4183;
  t4325 = t4125 + t4143 + t4215;
  t6421 = -1.*t1503*t6297;
  t6437 = t2378*t6402;
  t6440 = t6421 + t6437;
  t6461 = t2378*t6297;
  t6463 = t1503*t6402;
  t6472 = t6461 + t6463;
  t4558 = 3.2909349868922137e-7*var1[19];
  t4594 = -0.055653945343889656*t4140;
  t4744 = -0.045000372235*t4741;
  t4759 = t4558 + t4594 + t4744;
  t5040 = -0.04500040093286238*t4140;
  t5118 = -0.055653909852*t5055;
  t5200 = -0.141285834136*t5142;
  t5223 = 0. + t5040 + t5118 + t5200;
  t6480 = t1846*t26*t3869;
  t6484 = 0.340999127418*t268*t6440;
  t6485 = t4475*t6472;
  t6487 = t6480 + t6484 + t6485;
  t6496 = t1846*t26*t3188;
  t6497 = t4842*t6440;
  t6510 = 0.340999127418*t268*t6472;
  t6516 = t6496 + t6497 + t6510;
  t5580 = -1.000000637725*t4140;
  t5586 = 1. + t5580;
  t6543 = t5231*t1846*t26;
  t6550 = t981*t6440;
  t6551 = t1175*t6472;
  t6555 = t6543 + t6550 + t6551;
  t6047 = -0.8656776547239999*t4140;
  t6050 = 1. + t6047;
  t6083 = -0.134322983001*t4140;
  t6091 = 1. + t6083;
  t6720 = -1.*t1846*t26*t1702*t1503;
  t6733 = t2378*t1846*t26*t1951;
  t6757 = t6720 + t6733;
  t6771 = t2378*t1846*t26*t1702;
  t6783 = t1846*t26*t1503*t1951;
  t6785 = t6771 + t6783;
  t6808 = -1.*t1846*t3869*t1808;
  t6810 = 0.340999127418*t268*t6757;
  t6814 = t4475*t6785;
  t6820 = t6808 + t6810 + t6814;
  t6831 = -1.*t1846*t3188*t1808;
  t6834 = t4842*t6757;
  t6859 = 0.340999127418*t268*t6785;
  t6872 = t6831 + t6834 + t6859;
  t6888 = -1.*t5231*t1846*t1808;
  t6897 = t981*t6757;
  t6907 = t1175*t6785;
  t6908 = t6888 + t6897 + t6907;
  t7002 = -1.*t26*t1702*t1503*t1331;
  t7003 = t2378*t26*t1331*t1951;
  t7012 = t7002 + t7003;
  t7016 = t2378*t26*t1702*t1331;
  t7020 = t26*t1503*t1331*t1951;
  t7022 = t7016 + t7020;
  t7030 = -1.*t3869*t1331*t1808;
  t7042 = 0.340999127418*t268*t7012;
  t7056 = t4475*t7022;
  t7058 = t7030 + t7042 + t7056;
  t7063 = -1.*t3188*t1331*t1808;
  t7071 = t4842*t7012;
  t7073 = 0.340999127418*t268*t7022;
  t7094 = t7063 + t7071 + t7073;
  t7112 = -1.*t5231*t1331*t1808;
  t7122 = t981*t7012;
  t7128 = t1175*t7022;
  t7129 = t7112 + t7122 + t7128;
  t7215 = t1702*t1503*t1808;
  t7216 = -1.*t2378*t1808*t1951;
  t7218 = t7215 + t7216;
  t7223 = -1.*t2378*t1702*t1808;
  t7226 = -1.*t1503*t1808*t1951;
  t7248 = t7223 + t7226;
  t7257 = -1.*t26*t3869;
  t7260 = 0.340999127418*t268*t7218;
  t7264 = t4475*t7248;
  t7265 = t7257 + t7260 + t7264;
  t7290 = -1.*t26*t3188;
  t7297 = t4842*t7218;
  t7301 = 0.340999127418*t268*t7248;
  t7311 = t7290 + t7297 + t7301;
  t7330 = -1.*t5231*t26;
  t7332 = t981*t7218;
  t7335 = t1175*t7248;
  t7338 = t7330 + t7332 + t7335;
  t7399 = t1702*t1331;
  t7402 = -1.*t1846*t1808*t1951;
  t7403 = t7399 + t7402;
  t7411 = t1503*t6297;
  t7412 = t2378*t7403;
  t7414 = t7411 + t7412;
  t7423 = -1.*t1503*t7403;
  t7429 = t6461 + t7423;
  t7438 = 0.340999127418*t268*t7414;
  t7440 = t4842*t7429;
  t7441 = t7438 + t7440;
  t7445 = t4475*t7414;
  t7448 = 0.340999127418*t268*t7429;
  t7458 = t7445 + t7448;
  t7461 = t1175*t7414;
  t7472 = t981*t7429;
  t7475 = t7461 + t7472;
  t7562 = t1702*t1331*t1808;
  t7564 = -1.*t1846*t1951;
  t7574 = t7562 + t7564;
  t7583 = t1503*t7574;
  t7584 = t7583 + t3475;
  t7590 = t2378*t7574;
  t7595 = -1.*t1503*t2915;
  t7607 = t7590 + t7595;
  t7609 = 0.340999127418*t268*t7584;
  t7624 = t4842*t7607;
  t7628 = t7609 + t7624;
  t7649 = t4475*t7584;
  t7650 = 0.340999127418*t268*t7607;
  t7655 = t7649 + t7650;
  t7668 = t1175*t7584;
  t7669 = t981*t7607;
  t7673 = t7668 + t7669;
  t7740 = t26*t1702*t1503;
  t7743 = -1.*t2378*t26*t1951;
  t7744 = t7740 + t7743;
  t7747 = t2378*t26*t1702;
  t7749 = t26*t1503*t1951;
  t7755 = t7747 + t7749;
  t7758 = 0.340999127418*t268*t7744;
  t7761 = t4842*t7755;
  t7764 = t7758 + t7761;
  t7766 = t4475*t7744;
  t7771 = 0.340999127418*t268*t7755;
  t7774 = t7766 + t7771;
  t7781 = t1175*t7744;
  t7782 = t981*t7755;
  t7784 = t7781 + t7782;
  t7828 = -1.*t2378*t6297;
  t7830 = -1.*t1503*t6402;
  t7831 = t7828 + t7830;
  t7835 = t4842*t7831;
  t7844 = t6484 + t7835;
  t7846 = t4475*t6440;
  t7847 = 0.340999127418*t268*t7831;
  t7849 = t7846 + t7847;
  t7854 = t1175*t6440;
  t7857 = t981*t7831;
  t7859 = t7854 + t7857;
  t7901 = t1846*t1702;
  t7904 = t1331*t1808*t1951;
  t7905 = t7901 + t7904;
  t7909 = -1.*t1503*t7574;
  t7910 = t2378*t7905;
  t7914 = t7909 + t7910;
  t7919 = -1.*t2378*t7574;
  t7920 = -1.*t1503*t7905;
  t7925 = t7919 + t7920;
  t7927 = 0.340999127418*t268*t7914;
  t7929 = t4842*t7925;
  t7930 = t7927 + t7929;
  t7935 = t4475*t7914;
  t7937 = 0.340999127418*t268*t7925;
  t7940 = t7935 + t7937;
  t7943 = t1175*t7914;
  t7944 = t981*t7925;
  t7946 = t7943 + t7944;
  t7981 = -1.*t26*t1702*t1503;
  t7982 = t2378*t26*t1951;
  t7983 = t7981 + t7982;
  t7988 = -1.*t2378*t26*t1702;
  t7989 = -1.*t26*t1503*t1951;
  t7990 = t7988 + t7989;
  t7994 = 0.340999127418*t268*t7983;
  t7995 = t4842*t7990;
  t7996 = t7994 + t7995;
  t8003 = t4475*t7983;
  t8004 = 0.340999127418*t268*t7990;
  t8005 = t8003 + t8004;
  t8008 = t1175*t7983;
  t8011 = t981*t7990;
  t8013 = t8008 + t8011;
  t8058 = -1.000000637725*t1846*t26*t289;
  t8059 = -0.930418*t93*t6440;
  t8060 = 0.366501*t93*t6472;
  t8061 = t8058 + t8059 + t8060;
  t8063 = -0.366501*t93*t1846*t26;
  t8064 = 0.340999127418*t289*t6440;
  t8065 = -0.134322983001*t289*t6472;
  t8067 = t8063 + t8064 + t8065;
  t8069 = 0.930418*t93*t1846*t26;
  t8070 = -0.8656776547239999*t289*t6440;
  t8075 = 0.340999127418*t289*t6472;
  t8076 = t8069 + t8070 + t8075;
  t8043 = 0.0846680539949003*t93;
  t8045 = -0.04500040093286238*t289;
  t8046 = t8043 + t8045;
  t8048 = -0.04186915633414423*t93;
  t8050 = -0.07877668146182712*t289;
  t8051 = 1.296332362046933e-7 + t8048 + t8050;
  t8053 = 0.016492681424499736*t93;
  t8054 = 0.03103092645718495*t289;
  t8055 = 3.2909349868922137e-7 + t8053 + t8054;
  t8108 = t1503*t7905;
  t8109 = t7590 + t8108;
  t8112 = -1.000000637725*t26*t289*t1331;
  t8113 = -0.930418*t93*t7914;
  t8114 = 0.366501*t93*t8109;
  t8115 = t8112 + t8113 + t8114;
  t8118 = -0.366501*t93*t26*t1331;
  t8120 = 0.340999127418*t289*t7914;
  t8121 = -0.134322983001*t289*t8109;
  t8122 = t8118 + t8120 + t8121;
  t8124 = 0.930418*t93*t26*t1331;
  t8125 = -0.8656776547239999*t289*t7914;
  t8127 = 0.340999127418*t289*t8109;
  t8128 = t8124 + t8125 + t8127;
  t8154 = 1.000000637725*t289*t1808;
  t8155 = -0.930418*t93*t7983;
  t8157 = 0.366501*t93*t7755;
  t8159 = t8154 + t8155 + t8157;
  t8162 = 0.366501*t93*t1808;
  t8165 = 0.340999127418*t289*t7983;
  t8167 = -0.134322983001*t289*t7755;
  t8168 = t8162 + t8165 + t8167;
  t8170 = -0.930418*t93*t1808;
  t8171 = -0.8656776547239999*t289*t7983;
  t8172 = 0.340999127418*t289*t7755;
  t8174 = t8170 + t8171 + t8172;
  t8200 = 0.04186915633414423*t4126;
  t8202 = -0.14128592423750855*t4145;
  t8206 = -1.296332362046933e-7 + t8200 + t8202;
  t8208 = 0.016492681424499736*t4126;
  t8209 = -0.055653945343889656*t4145;
  t8210 = 3.2909349868922137e-7 + t8208 + t8209;
  t8217 = -0.15185209683981668*t4126;
  t8218 = -0.04500040093286238*t4145;
  t8222 = t8217 + t8218;
  t8246 = t26*t3869*t1331;
  t8248 = t4475*t8109;
  t8249 = t8246 + t7927 + t8248;
  t8251 = t26*t3188*t1331;
  t8252 = t4842*t7914;
  t8253 = 0.340999127418*t268*t8109;
  t8254 = t8251 + t8252 + t8253;
  t8257 = t5231*t26*t1331;
  t8258 = t981*t7914;
  t8259 = t1175*t8109;
  t8260 = t8257 + t8258 + t8259;
  t8287 = -1.*t3869*t1808;
  t8288 = t4475*t7755;
  t8290 = t8287 + t7994 + t8288;
  t8292 = -1.*t3188*t1808;
  t8293 = t4842*t7983;
  t8295 = t8292 + t8293 + t7771;
  t8300 = -1.*t5231*t1808;
  t8301 = t981*t7983;
  t8302 = t1175*t7755;
  t8303 = t8300 + t8301 + t8302;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1681*t2149 - 1.*t1242*t1331*t26 + t2471*t2915 + t3454*t3552 + t3918*t4078 + t4325*t4542 + t4759*t4945 + t5223*t5447 - 0.001824*(t4945*t5055 + t4542*t5142 + t5447*t5586) - 0.134034*(-0.340999127418*t4140*t4945 + t4183*t5447 + t4542*t6050) - 0.189863*(-0.340999127418*t4140*t4542 + t4741*t5447 + t4945*t6091);
  p_output1[10]=t1242*t1846*t26 + t1681*t6297 + t2471*t6402 + t3454*t6440 + t3918*t6472 + t4325*t6487 + t4759*t6516 + t5223*t6555 - 0.134034*(t6050*t6487 - 0.340999127418*t4140*t6516 + t4183*t6555) - 0.189863*(-0.340999127418*t4140*t6487 + t6091*t6516 + t4741*t6555) - 0.001824*(t5142*t6487 + t5055*t6516 + t5586*t6555);
  p_output1[11]=0;
  p_output1[12]=-1.*t1242*t1808*t1846 + t1681*t1702*t1846*t26 + t1846*t1951*t2471*t26 + t3454*t6757 + t3918*t6785 + t4325*t6820 + t4759*t6872 + t5223*t6908 - 0.134034*(t6050*t6820 - 0.340999127418*t4140*t6872 + t4183*t6908) - 0.189863*(-0.340999127418*t4140*t6820 + t6091*t6872 + t4741*t6908) - 0.001824*(t5142*t6820 + t5055*t6872 + t5586*t6908);
  p_output1[13]=-1.*t1242*t1331*t1808 + t1331*t1681*t1702*t26 + t1331*t1951*t2471*t26 + t3454*t7012 + t3918*t7022 + t4325*t7058 + t4759*t7094 + t5223*t7129 - 0.134034*(t6050*t7058 - 0.340999127418*t4140*t7094 + t4183*t7129) - 0.189863*(-0.340999127418*t4140*t7058 + t6091*t7094 + t4741*t7129) - 0.001824*(t5142*t7058 + t5055*t7094 + t5586*t7129);
  p_output1[14]=-1.*t1681*t1702*t1808 - 1.*t1808*t1951*t2471 - 1.*t1242*t26 + t3454*t7218 + t3918*t7248 + t4325*t7265 + t4759*t7311 + t5223*t7338 - 0.134034*(t6050*t7265 - 0.340999127418*t4140*t7311 + t4183*t7338) - 0.189863*(-0.340999127418*t4140*t7265 + t6091*t7311 + t4741*t7338) - 0.001824*(t5142*t7265 + t5055*t7311 + t5586*t7338);
  p_output1[15]=t2471*t6297 + t1681*t7403 + t3918*t7414 + t3454*t7429 + t4759*t7441 + t4325*t7458 + t5223*t7475 - 0.134034*(-0.340999127418*t4140*t7441 + t6050*t7458 + t4183*t7475) - 0.189863*(t6091*t7441 - 0.340999127418*t4140*t7458 + t4741*t7475) - 0.001824*(t5055*t7441 + t5142*t7458 + t5586*t7475);
  p_output1[16]=t1681*t2915 + t2471*t7574 + t3918*t7584 + t3454*t7607 + t4759*t7628 + t4325*t7655 + t5223*t7673 - 0.134034*(-0.340999127418*t4140*t7628 + t6050*t7655 + t4183*t7673) - 0.189863*(t6091*t7628 - 0.340999127418*t4140*t7655 + t4741*t7673) - 0.001824*(t5055*t7628 + t5142*t7655 + t5586*t7673);
  p_output1[17]=-1.*t1681*t1951*t26 + t1702*t2471*t26 + t3918*t7744 + t3454*t7755 + t4759*t7764 + t4325*t7774 + t5223*t7784 - 0.134034*(-0.340999127418*t4140*t7764 + t6050*t7774 + t4183*t7784) - 0.189863*(t6091*t7764 - 0.340999127418*t4140*t7774 + t4741*t7784) - 0.001824*(t5055*t7764 + t5142*t7774 + t5586*t7784);
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=-0.091*t2378*t6297 - 0.091*t1503*t6402 + t3918*t6440 + t3454*t7831 + t4759*t7844 + t4325*t7849 + t5223*t7859 - 0.134034*(-0.340999127418*t4140*t7844 + t6050*t7849 + t4183*t7859) - 0.189863*(t6091*t7844 - 0.340999127418*t4140*t7849 + t4741*t7859) - 0.001824*(t5055*t7844 + t5142*t7849 + t5586*t7859);
  p_output1[52]=-0.091*t2378*t7574 - 0.091*t1503*t7905 + t3918*t7914 + t3454*t7925 + t4759*t7930 + t4325*t7940 + t5223*t7946 - 0.134034*(-0.340999127418*t4140*t7930 + t6050*t7940 + t4183*t7946) - 0.189863*(t6091*t7930 - 0.340999127418*t4140*t7940 + t4741*t7946) - 0.001824*(t5055*t7930 + t5142*t7940 + t5586*t7946);
  p_output1[53]=-0.091*t1503*t1951*t26 - 0.091*t1702*t2378*t26 + t3918*t7983 + t3454*t7990 + t4759*t7996 + t4325*t8005 + t5223*t8013 - 0.134034*(-0.340999127418*t4140*t7996 + t6050*t8005 + t4183*t8013) - 0.189863*(t6091*t7996 - 0.340999127418*t4140*t8005 + t4741*t8013) - 0.001824*(t5055*t7996 + t5142*t8005 + t5586*t8013);
  p_output1[54]=t1846*t26*t8046 + t6440*t8051 + t6472*t8055 + t5223*t8061 + t4325*t8067 + t4759*t8076 - 0.134034*(t4183*t8061 + t6050*t8067 - 0.340999127418*t4140*t8076) - 0.001824*(t5586*t8061 + t5142*t8067 + t5055*t8076) - 0.189863*(t4741*t8061 - 0.340999127418*t4140*t8067 + t6091*t8076);
  p_output1[55]=t1331*t26*t8046 + t7914*t8051 + t8055*t8109 + t5223*t8115 + t4325*t8122 + t4759*t8128 - 0.134034*(t4183*t8115 + t6050*t8122 - 0.340999127418*t4140*t8128) - 0.001824*(t5586*t8115 + t5142*t8122 + t5055*t8128) - 0.189863*(t4741*t8115 - 0.340999127418*t4140*t8122 + t6091*t8128);
  p_output1[56]=-1.*t1808*t8046 + t7983*t8051 + t7755*t8055 + t5223*t8159 + t4325*t8168 + t4759*t8174 - 0.134034*(t4183*t8159 + t6050*t8168 - 0.340999127418*t4140*t8174) - 0.001824*(t5586*t8159 + t5142*t8168 + t5055*t8174) - 0.189863*(t4741*t8159 - 0.340999127418*t4140*t8168 + t6091*t8174);
  p_output1[57]=-0.134034*(-0.8656776547239999*t4145*t6487 - 0.340999127418*t4145*t6516 - 0.930418*t4126*t6555) - 0.189863*(-0.340999127418*t4145*t6487 - 0.134322983001*t4145*t6516 - 0.366501*t4126*t6555) - 0.001824*(0.930418*t4126*t6487 + 0.366501*t4126*t6516 - 1.000000637725*t4145*t6555) + t6487*t8206 + t6516*t8210 + t6555*t8222;
  p_output1[58]=t8206*t8249 + t8210*t8254 + t8222*t8260 - 0.134034*(-0.8656776547239999*t4145*t8249 - 0.340999127418*t4145*t8254 - 0.930418*t4126*t8260) - 0.189863*(-0.340999127418*t4145*t8249 - 0.134322983001*t4145*t8254 - 0.366501*t4126*t8260) - 0.001824*(0.930418*t4126*t8249 + 0.366501*t4126*t8254 - 1.000000637725*t4145*t8260);
  p_output1[59]=t8206*t8290 + t8210*t8295 + t8222*t8303 - 0.134034*(-0.8656776547239999*t4145*t8290 - 0.340999127418*t4145*t8295 - 0.930418*t4126*t8303) - 0.189863*(-0.340999127418*t4145*t8290 - 0.134322983001*t4145*t8295 - 0.366501*t4126*t8303) - 0.001824*(0.930418*t4126*t8290 + 0.366501*t4126*t8295 - 1.000000637725*t4145*t8303);
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jp_right_hip_pitch_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
