/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:57:47 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "AMBody_left_tarsus_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t32;
  double t284;
  double t442;
  double t670;
  double t683;
  double t686;
  double t824;
  double t1056;
  double t1418;
  double t1771;
  double t1939;
  double t1126;
  double t1130;
  double t1133;
  double t1139;
  double t1162;
  double t2171;
  double t2157;
  double t2193;
  double t2221;
  double t2246;
  double t2255;
  double t2285;
  double t2332;
  double t2365;
  double t1947;
  double t2046;
  double t2053;
  double t2129;
  double t2164;
  double t2166;
  double t2397;
  double t2421;
  double t2814;
  double t2821;
  double t2823;
  double t2430;
  double t2452;
  double t2481;
  double t2501;
  double t2513;
  double t2542;
  double t2544;
  double t2599;
  double t2758;
  double t2790;
  double t2806;
  double t2870;
  double t2894;
  double t2903;
  double t2904;
  double t2909;
  double t2911;
  double t2912;
  double t2915;
  double t2980;
  double t2993;
  double t2995;
  double t2827;
  double t2830;
  double t2844;
  double t2855;
  double t2999;
  double t3000;
  double t3005;
  double t3007;
  double t3051;
  double t3056;
  double t3061;
  double t3068;
  double t3073;
  double t3075;
  double t3098;
  double t3100;
  double t3131;
  double t3182;
  double t3188;
  double t3204;
  double t3206;
  double t3207;
  double t3209;
  double t3216;
  double t3217;
  double t3222;
  double t3223;
  double t3239;
  double t3015;
  double t3023;
  double t3025;
  double t3109;
  double t3146;
  double t3181;
  double t3225;
  double t3227;
  double t2643;
  double t3248;
  double t3255;
  double t3259;
  double t3267;
  double t3271;
  double t3297;
  double t3302;
  double t3304;
  double t3316;
  double t3228;
  double t3309;
  double t3314;
  double t2620;
  double t3317;
  double t3318;
  double t3319;
  double t3375;
  double t3379;
  double t3381;
  double t3384;
  double t3388;
  double t3389;
  double t3380;
  double t3385;
  double t3390;
  double t3393;
  double t3478;
  double t3482;
  double t3486;
  double t3487;
  double t3490;
  double t3494;
  double t3500;
  double t3501;
  double t3503;
  double t3506;
  double t3512;
  double t3513;
  double t3519;
  double t3523;
  double t3527;
  double t3530;
  double t3531;
  double t3536;
  double t3498;
  double t3517;
  double t3559;
  double t3565;
  double t3573;
  double t3575;
  double t3578;
  double t3580;
  double t3606;
  double t3609;
  double t3622;
  double t3624;
  double t3603;
  double t3604;
  double t3625;
  double t3628;
  double t3632;
  double t3648;
  double t3651;
  double t3653;
  double t3659;
  double t3660;
  double t3666;
  double t3671;
  double t3629;
  double t3655;
  double t3674;
  double t3678;
  double t3683;
  double t3687;
  double t3705;
  double t3707;
  double t3354;
  double t3680;
  double t3708;
  double t3715;
  double t3720;
  double t3723;
  double t3733;
  double t3374;
  double t3783;
  double t3791;
  double t3794;
  double t3799;
  double t3891;
  double t3894;
  double t3895;
  double t3913;
  double t3938;
  double t3939;
  double t3942;
  double t3943;
  double t3959;
  double t3964;
  double t3992;
  double t3996;
  double t3936;
  double t3952;
  double t4008;
  double t4016;
  double t4022;
  double t4025;
  double t4026;
  double t4029;
  double t4073;
  double t4075;
  double t4078;
  double t4116;
  double t4065;
  double t4066;
  double t4117;
  double t4127;
  double t4133;
  double t4134;
  double t4138;
  double t4144;
  double t4148;
  double t4152;
  double t4153;
  double t4154;
  double t4132;
  double t4146;
  double t4165;
  double t4168;
  double t4172;
  double t4173;
  double t4176;
  double t4184;
  double t4171;
  double t4191;
  double t4197;
  double t4199;
  double t4203;
  double t4204;
  double t4238;
  double t4239;
  double t4244;
  double t4251;
  double t21;
  double t1065;
  double t1180;
  double t1195;
  double t1281;
  double t2428;
  double t2607;
  double t2609;
  double t2611;
  double t3315;
  double t3344;
  double t3348;
  double t3350;
  double t3358;
  double t3366;
  double t3371;
  double t3373;
  double t3414;
  double t3416;
  double t3422;
  double t3423;
  double t3426;
  double t3436;
  double t3439;
  double t3442;
  double t3445;
  double t3447;
  double t3452;
  double t3460;
  double t3462;
  double t3463;
  double t3465;
  double t3571;
  double t3584;
  double t3587;
  double t3588;
  double t3591;
  double t3592;
  double t3593;
  double t3599;
  double t3717;
  double t3736;
  double t3746;
  double t3762;
  double t3770;
  double t3773;
  double t3779;
  double t3781;
  double t3802;
  double t3809;
  double t3816;
  double t3828;
  double t3831;
  double t3840;
  double t3841;
  double t3843;
  double t3845;
  double t3851;
  double t3855;
  double t3862;
  double t3867;
  double t3877;
  double t3887;
  double t4019;
  double t4031;
  double t4039;
  double t4040;
  double t4041;
  double t4048;
  double t4051;
  double t4052;
  double t4198;
  double t4207;
  double t4209;
  double t4212;
  double t4213;
  double t4229;
  double t4233;
  double t4234;
  double t4256;
  double t4257;
  double t4260;
  double t4261;
  double t4263;
  double t4266;
  double t4267;
  double t4269;
  double t4271;
  double t4274;
  double t4279;
  double t4281;
  double t4282;
  double t4283;
  t32 = Cos(var1[10]);
  t284 = -1.*t32;
  t442 = 1. + t284;
  t670 = -0.8656776547239999*t442;
  t683 = 1. + t670;
  t686 = -0.366501*t683;
  t824 = -0.3172717261340007*t442;
  t1056 = t686 + t824;
  t1418 = Cos(var1[9]);
  t1771 = -1.*t1418;
  t1939 = 1. + t1771;
  t1126 = -0.134322983001*t442;
  t1130 = 1. + t1126;
  t1133 = -0.930418*t1130;
  t1139 = -0.12497652119782442*t442;
  t1162 = t1133 + t1139;
  t2171 = Sin(var1[10]);
  t2157 = Sin(var1[9]);
  t2193 = -0.930418*t2171;
  t2221 = 0. + t2193;
  t2246 = -0.366501*t2221;
  t2255 = 0.366501*t2171;
  t2285 = 0. + t2255;
  t2332 = -0.930418*t2285;
  t2365 = t2246 + t2332;
  t1947 = 0.340999127418*t1939*t1056;
  t2046 = -0.134322983001*t1939;
  t2053 = 1. + t2046;
  t2129 = t2053*t1162;
  t2164 = -0.366501*t2157;
  t2166 = 0. + t2164;
  t2397 = t2166*t2365;
  t2421 = 0. + t1947 + t2129 + t2397;
  t2814 = Cos(var1[8]);
  t2821 = -1.*t2814;
  t2823 = 1. + t2821;
  t2430 = -0.8656776547239999*t1939;
  t2452 = 1. + t2430;
  t2481 = t2452*t1056;
  t2501 = 0.340999127418*t1939*t1162;
  t2513 = 0.930418*t2157;
  t2542 = 0. + t2513;
  t2544 = t2542*t2365;
  t2599 = 0. + t2481 + t2501 + t2544;
  t2758 = Cos(var1[7]);
  t2790 = -1.*t2758;
  t2806 = 1. + t2790;
  t2870 = -0.930418*t2157;
  t2894 = 0. + t2870;
  t2903 = t1056*t2894;
  t2904 = 0.366501*t2157;
  t2909 = 0. + t2904;
  t2911 = t1162*t2909;
  t2912 = -1.000000637725*t1939;
  t2915 = 1. + t2912;
  t2980 = t2915*t2365;
  t2993 = 0. + t2903 + t2911 + t2980;
  t2995 = Sin(var1[8]);
  t2827 = 0.340999127418*t2823*t2421;
  t2830 = -0.8656776547239999*t2823;
  t2844 = 1. + t2830;
  t2855 = t2844*t2599;
  t2999 = -0.930418*t2995;
  t3000 = 0. + t2999;
  t3005 = t2993*t3000;
  t3007 = 0. + t2827 + t2855 + t3005;
  t3051 = -0.134322983001*t2823;
  t3056 = 1. + t3051;
  t3061 = t3056*t2421;
  t3068 = 0.340999127418*t2823*t2599;
  t3073 = 0.366501*t2995;
  t3075 = 0. + t3073;
  t3098 = t2993*t3075;
  t3100 = 0. + t3061 + t3068 + t3098;
  t3131 = Sin(var1[7]);
  t3182 = -1.000000637725*t2823;
  t3188 = 1. + t3182;
  t3204 = t3188*t2993;
  t3206 = -0.366501*t2995;
  t3207 = 0. + t3206;
  t3209 = t2421*t3207;
  t3216 = 0.930418*t2995;
  t3217 = 0. + t3216;
  t3222 = t2599*t3217;
  t3223 = 0. + t3204 + t3209 + t3222;
  t3239 = Cos(var1[6]);
  t3015 = -0.340999127418*t2806*t3007;
  t3023 = -0.8656776547239999*t2806;
  t3025 = 1. + t3023;
  t3109 = t3025*t3100;
  t3146 = -0.930418*t3131;
  t3181 = 0. + t3146;
  t3225 = t3181*t3223;
  t3227 = 0. + t3015 + t3109 + t3225;
  t2643 = Sin(var1[6]);
  t3248 = -0.134322983001*t2806;
  t3255 = 1. + t3248;
  t3259 = t3255*t3007;
  t3267 = -0.340999127418*t2806*t3100;
  t3271 = -0.366501*t3131;
  t3297 = 0. + t3271;
  t3302 = t3297*t3223;
  t3304 = 0. + t3259 + t3267 + t3302;
  t3316 = Cos(var1[5]);
  t3228 = -1.*t2643*t3227;
  t3309 = t3239*t3304;
  t3314 = 0. + t3228 + t3309;
  t2620 = Sin(var1[5]);
  t3317 = t3239*t3227;
  t3318 = t2643*t3304;
  t3319 = 0. + t3317 + t3318;
  t3375 = 0.366501*t3131;
  t3379 = 0. + t3375;
  t3381 = 0.930418*t3131;
  t3384 = 0. + t3381;
  t3388 = -1.000000637725*t2806;
  t3389 = 1. + t3388;
  t3380 = t3379*t3007;
  t3385 = t3384*t3100;
  t3390 = t3389*t3223;
  t3393 = 0. + t3380 + t3385 + t3390;
  t3478 = -0.310811*t1130;
  t3482 = 0.2690616104987713*t442;
  t3486 = -0.366501*t2171;
  t3487 = 0. + t3486;
  t3490 = 0.529919*t3487;
  t3494 = t3478 + t3482 + t3490;
  t3500 = -1.000000637725*t442;
  t3501 = 1. + t3500;
  t3503 = 0.529919*t3501;
  t3506 = 0.789039*t2221;
  t3512 = -0.310811*t2285;
  t3513 = t3503 + t3506 + t3512;
  t3519 = 0.789039*t683;
  t3523 = -0.105986279791916*t442;
  t3527 = 0.930418*t2171;
  t3530 = 0. + t3527;
  t3531 = 0.529919*t3530;
  t3536 = t3519 + t3523 + t3531;
  t3498 = 0.340999127418*t1939*t3494;
  t3517 = t2542*t3513;
  t3559 = t2452*t3536;
  t3565 = 0. + t3498 + t3517 + t3559;
  t3573 = t2053*t3494;
  t3575 = t2166*t3513;
  t3578 = 0.340999127418*t1939*t3536;
  t3580 = 0. + t3573 + t3575 + t3578;
  t3606 = t2909*t3494;
  t3609 = t2915*t3513;
  t3622 = t2894*t3536;
  t3624 = 0. + t3606 + t3609 + t3622;
  t3603 = t2844*t3565;
  t3604 = 0.340999127418*t2823*t3580;
  t3625 = t3624*t3000;
  t3628 = 0. + t3603 + t3604 + t3625;
  t3632 = 0.340999127418*t2823*t3565;
  t3648 = t3056*t3580;
  t3651 = t3624*t3075;
  t3653 = 0. + t3632 + t3648 + t3651;
  t3659 = t3188*t3624;
  t3660 = t3580*t3207;
  t3666 = t3565*t3217;
  t3671 = 0. + t3659 + t3660 + t3666;
  t3629 = -0.340999127418*t2806*t3628;
  t3655 = t3025*t3653;
  t3674 = t3181*t3671;
  t3678 = 0. + t3629 + t3655 + t3674;
  t3683 = t3255*t3628;
  t3687 = -0.340999127418*t2806*t3653;
  t3705 = t3297*t3671;
  t3707 = 0. + t3683 + t3687 + t3705;
  t3354 = Cos(var1[4]);
  t3680 = -1.*t2643*t3678;
  t3708 = t3239*t3707;
  t3715 = 0. + t3680 + t3708;
  t3720 = t3239*t3678;
  t3723 = t2643*t3707;
  t3733 = 0. + t3720 + t3723;
  t3374 = Sin(var1[4]);
  t3783 = t3379*t3628;
  t3791 = t3384*t3653;
  t3794 = t3389*t3671;
  t3799 = 0. + t3783 + t3791 + t3794;
  t3891 = 0.194216*t1130;
  t3894 = -0.16812859677606265*t442;
  t3895 = 0.848048*t3487;
  t3913 = t3891 + t3894 + t3895;
  t3938 = 0.848048*t3501;
  t3939 = -0.493047*t2221;
  t3942 = 0.194216*t2285;
  t3943 = t3938 + t3939 + t3942;
  t3959 = -0.493047*t683;
  t3964 = 0.06622748653061429*t442;
  t3992 = 0.848048*t3530;
  t3996 = t3959 + t3964 + t3992;
  t3936 = 0.340999127418*t1939*t3913;
  t3952 = t2542*t3943;
  t4008 = t2452*t3996;
  t4016 = 0. + t3936 + t3952 + t4008;
  t4022 = t2053*t3913;
  t4025 = t2166*t3943;
  t4026 = 0.340999127418*t1939*t3996;
  t4029 = 0. + t4022 + t4025 + t4026;
  t4073 = t2909*t3913;
  t4075 = t2915*t3943;
  t4078 = t2894*t3996;
  t4116 = 0. + t4073 + t4075 + t4078;
  t4065 = t2844*t4016;
  t4066 = 0.340999127418*t2823*t4029;
  t4117 = t4116*t3000;
  t4127 = 0. + t4065 + t4066 + t4117;
  t4133 = 0.340999127418*t2823*t4016;
  t4134 = t3056*t4029;
  t4138 = t4116*t3075;
  t4144 = 0. + t4133 + t4134 + t4138;
  t4148 = t3188*t4116;
  t4152 = t4029*t3207;
  t4153 = t4016*t3217;
  t4154 = 0. + t4148 + t4152 + t4153;
  t4132 = -0.340999127418*t2806*t4127;
  t4146 = t3025*t4144;
  t4165 = t3181*t4154;
  t4168 = 0. + t4132 + t4146 + t4165;
  t4172 = t3255*t4127;
  t4173 = -0.340999127418*t2806*t4144;
  t4176 = t3297*t4154;
  t4184 = 0. + t4172 + t4173 + t4176;
  t4171 = -1.*t2643*t4168;
  t4191 = t3239*t4184;
  t4197 = 0. + t4171 + t4191;
  t4199 = t3239*t4168;
  t4203 = t2643*t4184;
  t4204 = 0. + t4199 + t4203;
  t4238 = t3379*t4127;
  t4239 = t3384*t4144;
  t4244 = t3389*t4154;
  t4251 = 0. + t4238 + t4239 + t4244;
  t21 = 1.000000637725*var2[10];
  t1065 = -0.366501*t1056;
  t1180 = -0.930418*t1162;
  t1195 = 0. + t1065 + t1180;
  t1281 = var2[9]*t1195;
  t2428 = 0.930418*t2421;
  t2607 = 0.366501*t2599;
  t2609 = 0. + t2428 + t2607;
  t2611 = var2[8]*t2609;
  t3315 = -1.*t2620*t3314;
  t3344 = t3316*t3319;
  t3348 = 0. + t3315 + t3344;
  t3350 = var2[4]*t3348;
  t3358 = t3316*t3314;
  t3366 = t2620*t3319;
  t3371 = 0. + t3358 + t3366;
  t3373 = t3354*t3371;
  t3414 = -1.*t3374*t3393;
  t3416 = 0. + t3373 + t3414;
  t3422 = var2[3]*t3416;
  t3423 = -0.930418*t3007;
  t3426 = 0.366501*t3100;
  t3436 = 0. + t3423 + t3426;
  t3439 = var2[7]*t3436;
  t3442 = -1.*t3379*t3007;
  t3445 = -1.*t3384*t3100;
  t3447 = -1.*t3389*t3223;
  t3452 = 0. + t3442 + t3445 + t3447;
  t3460 = var2[6]*t3452;
  t3462 = var2[5]*t3393;
  t3463 = t21 + t1281 + t2611 + t3350 + t3422 + t3439 + t3460 + t3462;
  t3465 = 5.664589999843095e-7*var2[10];
  t3571 = 0.366501*t3565;
  t3584 = 0.930418*t3580;
  t3587 = 0. + t3571 + t3584;
  t3588 = var2[8]*t3587;
  t3591 = -0.930418*t3494;
  t3592 = -0.366501*t3536;
  t3593 = 0. + t3591 + t3592;
  t3599 = var2[9]*t3593;
  t3717 = -1.*t2620*t3715;
  t3736 = t3316*t3733;
  t3746 = 0. + t3717 + t3736;
  t3762 = var2[4]*t3746;
  t3770 = t3316*t3715;
  t3773 = t2620*t3733;
  t3779 = 0. + t3770 + t3773;
  t3781 = t3354*t3779;
  t3802 = -1.*t3374*t3799;
  t3809 = 0. + t3781 + t3802;
  t3816 = var2[3]*t3809;
  t3828 = -0.930418*t3628;
  t3831 = 0.366501*t3653;
  t3840 = 0. + t3828 + t3831;
  t3841 = var2[7]*t3840;
  t3843 = -1.*t3379*t3628;
  t3845 = -1.*t3384*t3653;
  t3851 = -1.*t3389*t3671;
  t3855 = 0. + t3843 + t3845 + t3851;
  t3862 = var2[6]*t3855;
  t3867 = var2[5]*t3799;
  t3877 = t3465 + t3588 + t3599 + t3762 + t3816 + t3841 + t3862 + t3867;
  t3887 = 1.5625900004478943e-7*var2[10];
  t4019 = 0.366501*t4016;
  t4031 = 0.930418*t4029;
  t4039 = 0. + t4019 + t4031;
  t4040 = var2[8]*t4039;
  t4041 = -0.930418*t3913;
  t4048 = -0.366501*t3996;
  t4051 = 0. + t4041 + t4048;
  t4052 = var2[9]*t4051;
  t4198 = -1.*t2620*t4197;
  t4207 = t3316*t4204;
  t4209 = 0. + t4198 + t4207;
  t4212 = var2[4]*t4209;
  t4213 = t3316*t4197;
  t4229 = t2620*t4204;
  t4233 = 0. + t4213 + t4229;
  t4234 = t3354*t4233;
  t4256 = -1.*t3374*t4251;
  t4257 = 0. + t4234 + t4256;
  t4260 = var2[3]*t4257;
  t4261 = -0.930418*t4127;
  t4263 = 0.366501*t4144;
  t4266 = 0. + t4261 + t4263;
  t4267 = var2[7]*t4266;
  t4269 = -1.*t3379*t4127;
  t4271 = -1.*t3384*t4144;
  t4274 = -1.*t3389*t4154;
  t4279 = 0. + t4269 + t4271 + t4274;
  t4281 = var2[6]*t4279;
  t4282 = var2[5]*t4251;
  t4283 = t3887 + t4040 + t4052 + t4212 + t4260 + t4267 + t4281 + t4282;
  p_output1[0]=0.0001*t3463 + 0.00061*t3877 + 0.00093*t4283;
  p_output1[1]=0.00001*t3463 + 0.01641*t3877 + 0.00061*t4283;
  p_output1[2]=0.0165*t3463 + 0.00001*t3877 + 0.0001*t4283;
}



void AMBody_left_tarsus_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
