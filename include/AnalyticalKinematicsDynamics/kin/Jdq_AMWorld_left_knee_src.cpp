/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:57:11 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jdq_AMWorld_left_knee_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t398;
  double t479;
  double t483;
  double t622;
  double t627;
  double t647;
  double t801;
  double t298;
  double t309;
  double t342;
  double t678;
  double t707;
  double t718;
  double t726;
  double t740;
  double t511;
  double t517;
  double t547;
  double t593;
  double t614;
  double t812;
  double t887;
  double t892;
  double t895;
  double t921;
  double t924;
  double t934;
  double t972;
  double t652;
  double t653;
  double t662;
  double t768;
  double t1038;
  double t1091;
  double t1100;
  double t1105;
  double t1209;
  double t1230;
  double t1353;
  double t1373;
  double t1407;
  double t1414;
  double t1417;
  double t1426;
  double t1455;
  double t1530;
  double t1537;
  double t1545;
  double t1548;
  double t1549;
  double t1561;
  double t1568;
  double t1575;
  double t1580;
  double t1677;
  double t1808;
  double t1137;
  double t1154;
  double t1177;
  double t1436;
  double t1499;
  double t1513;
  double t1717;
  double t1732;
  double t267;
  double t1825;
  double t1838;
  double t1881;
  double t1887;
  double t1897;
  double t1920;
  double t1931;
  double t1934;
  double t200;
  double t260;
  double t2471;
  double t2476;
  double t2478;
  double t2495;
  double t2527;
  double t2589;
  double t2689;
  double t2695;
  double t2705;
  double t2724;
  double t2729;
  double t2732;
  double t2747;
  double t2755;
  double t2757;
  double t2854;
  double t2863;
  double t2888;
  double t2593;
  double t2745;
  double t2895;
  double t2929;
  double t2974;
  double t2980;
  double t2993;
  double t3004;
  double t3055;
  double t3083;
  double t3088;
  double t3126;
  double t1958;
  double t2936;
  double t3021;
  double t3130;
  double t3133;
  double t3160;
  double t3184;
  double t3199;
  double t3200;
  double t2106;
  double t2189;
  double t2206;
  double t2225;
  double t2227;
  double t2266;
  double t2288;
  double t3547;
  double t3594;
  double t3611;
  double t3613;
  double t3647;
  double t3726;
  double t3602;
  double t3616;
  double t3770;
  double t3780;
  double t3850;
  double t3862;
  double t3886;
  double t3890;
  double t3949;
  double t3961;
  double t3993;
  double t4021;
  double t3839;
  double t3892;
  double t4027;
  double t4076;
  double t4145;
  double t4152;
  double t4154;
  double t4178;
  double t4526;
  double t4504;
  double t4541;
  double t4543;
  double t4549;
  double t4514;
  double t4528;
  double t4529;
  double t4539;
  double t4568;
  double t4569;
  double t4584;
  double t4585;
  double t4596;
  double t4686;
  double t4696;
  double t4708;
  double t4716;
  double t4583;
  double t4608;
  double t4609;
  double t4617;
  double t4623;
  double t4651;
  double t4668;
  double t4671;
  double t4622;
  double t4672;
  double t4725;
  double t4750;
  double t4812;
  double t4828;
  double t4836;
  double t4845;
  double t4878;
  double t4893;
  double t4903;
  double t4908;
  double t1800;
  double t1935;
  double t1942;
  double t1949;
  double t1960;
  double t1961;
  double t2001;
  double t2023;
  double t2046;
  double t2051;
  double t2222;
  double t2251;
  double t2295;
  double t2298;
  double t2314;
  double t2391;
  double t3148;
  double t3238;
  double t3277;
  double t3291;
  double t3309;
  double t3376;
  double t3428;
  double t3458;
  double t3461;
  double t3471;
  double t3486;
  double t3494;
  double t3498;
  double t3526;
  double t3530;
  double t3542;
  double t4140;
  double t4184;
  double t4186;
  double t4194;
  double t4219;
  double t4269;
  double t4352;
  double t4356;
  double t4372;
  double t4386;
  double t4402;
  double t4406;
  double t4458;
  double t4484;
  double t4485;
  double t4491;
  double t4803;
  double t4858;
  double t4910;
  double t4913;
  double t4941;
  double t4943;
  double t4944;
  double t4945;
  double t5042;
  double t5044;
  double t5048;
  double t5056;
  double t5061;
  double t5075;
  double t2444;
  double t3544;
  double t4497;
  double t4499;
  double t5252;
  double t5290;
  double t5296;
  double t5200;
  double t5222;
  double t5229;
  double t5231;
  double t5312;
  double t5322;
  double t5352;
  double t5373;
  double t5377;
  double t5512;
  double t5516;
  double t5527;
  double t5537;
  double t5332;
  double t5384;
  double t5400;
  double t5404;
  double t5461;
  double t5463;
  double t5468;
  double t5469;
  double t5436;
  double t5472;
  double t5538;
  double t5545;
  double t5560;
  double t5564;
  double t5568;
  double t5580;
  double t5592;
  double t5593;
  double t5622;
  double t5635;
  double t4966;
  double t4980;
  double t4982;
  double t5037;
  double t5556;
  double t5581;
  double t5641;
  double t5644;
  double t5654;
  double t5670;
  double t5677;
  double t5681;
  double t5129;
  double t5137;
  double t5141;
  double t5160;
  double t5711;
  double t5715;
  double t5717;
  double t5745;
  double t5754;
  double t5757;
  double t5820;
  double t5825;
  double t5828;
  double t5841;
  double t5846;
  double t5851;
  double t5997;
  double t6000;
  double t6004;
  double t6035;
  double t5830;
  double t5861;
  double t5878;
  double t5932;
  double t5962;
  double t5987;
  double t5988;
  double t5994;
  double t5943;
  double t5995;
  double t6040;
  double t6062;
  double t6072;
  double t6090;
  double t6098;
  double t6100;
  double t6112;
  double t6116;
  double t6117;
  double t6119;
  double t6070;
  double t6106;
  double t6134;
  double t6139;
  double t6162;
  double t6163;
  double t6164;
  double t6171;
  double t6190;
  double t6191;
  double t6192;
  double t6211;
  double t6223;
  double t6232;
  double t4930;
  double t4946;
  double t4948;
  double t6271;
  double t6272;
  double t6273;
  double t6288;
  double t6298;
  double t6302;
  double t6306;
  double t6308;
  double t6309;
  double t5089;
  double t5106;
  double t5168;
  double t5175;
  double t6285;
  double t6304;
  double t6311;
  double t6312;
  double t5653;
  double t5683;
  double t5699;
  double t6316;
  double t6318;
  double t6324;
  double t6325;
  double t5775;
  double t5776;
  double t6340;
  double t6341;
  double t6342;
  double t6346;
  double t5785;
  double t5797;
  double t6143;
  double t6177;
  double t6180;
  double t6246;
  double t6247;
  double t6255;
  double t6259;
  double t6425;
  double t6451;
  double t6452;
  double t6461;
  double t6472;
  double t6476;
  double t6486;
  double t6492;
  double t6496;
  double t6499;
  double t6510;
  double t6518;
  double t6571;
  double t6572;
  double t6577;
  double t6581;
  double t6587;
  double t6594;
  double t6595;
  double t6599;
  double t6605;
  double t6606;
  double t6607;
  double t6609;
  double t6582;
  double t6603;
  double t6620;
  double t6628;
  double t6635;
  double t6639;
  double t6656;
  double t6657;
  double t6663;
  double t6669;
  double t6672;
  double t6676;
  double t6717;
  double t6718;
  double t6721;
  double t6729;
  double t6747;
  double t6748;
  double t6756;
  double t6763;
  double t6766;
  double t6728;
  double t6749;
  double t6768;
  double t6769;
  double t6789;
  double t6824;
  double t6830;
  double t6833;
  double t6844;
  double t6846;
  double t6847;
  double t6849;
  double t6910;
  double t6911;
  double t6923;
  double t6931;
  double t6935;
  double t6940;
  double t6943;
  double t6946;
  double t6954;
  double t6924;
  double t6942;
  double t6958;
  double t6972;
  double t6979;
  double t6982;
  double t6985;
  double t6988;
  double t6993;
  double t7001;
  double t7007;
  double t7017;
  t398 = Cos(var1[9]);
  t479 = -1.*t398;
  t483 = 1. + t479;
  t622 = Cos(var1[8]);
  t627 = -1.*t622;
  t647 = 1. + t627;
  t801 = Sin(var1[9]);
  t298 = Cos(var1[7]);
  t309 = -1.*t298;
  t342 = 1. + t309;
  t678 = -0.134322983001*t483;
  t707 = 1. + t678;
  t718 = -0.930418*t707;
  t726 = -0.12497652119782442*t483;
  t740 = t718 + t726;
  t511 = -0.8656776547239999*t483;
  t517 = 1. + t511;
  t547 = -0.366501*t517;
  t593 = -0.3172717261340007*t483;
  t614 = t547 + t593;
  t812 = -0.930418*t801;
  t887 = 0. + t812;
  t892 = -0.366501*t887;
  t895 = 0.366501*t801;
  t921 = 0. + t895;
  t924 = -0.930418*t921;
  t934 = t892 + t924;
  t972 = Sin(var1[8]);
  t652 = -0.8656776547239999*t647;
  t653 = 1. + t652;
  t662 = t614*t653;
  t768 = 0.340999127418*t740*t647;
  t1038 = -0.930418*t972;
  t1091 = 0. + t1038;
  t1100 = t934*t1091;
  t1105 = 0. + t662 + t768 + t1100;
  t1209 = -0.134322983001*t647;
  t1230 = 1. + t1209;
  t1353 = t740*t1230;
  t1373 = 0.340999127418*t614*t647;
  t1407 = 0.366501*t972;
  t1414 = 0. + t1407;
  t1417 = t934*t1414;
  t1426 = 0. + t1353 + t1373 + t1417;
  t1455 = Sin(var1[7]);
  t1530 = -1.000000637725*t647;
  t1537 = 1. + t1530;
  t1545 = t1537*t934;
  t1548 = -0.366501*t972;
  t1549 = 0. + t1548;
  t1561 = t740*t1549;
  t1568 = 0.930418*t972;
  t1575 = 0. + t1568;
  t1580 = t614*t1575;
  t1677 = 0. + t1545 + t1561 + t1580;
  t1808 = Cos(var1[6]);
  t1137 = -0.340999127418*t342*t1105;
  t1154 = -0.8656776547239999*t342;
  t1177 = 1. + t1154;
  t1436 = t1177*t1426;
  t1499 = -0.930418*t1455;
  t1513 = 0. + t1499;
  t1717 = t1513*t1677;
  t1732 = 0. + t1137 + t1436 + t1717;
  t267 = Sin(var1[6]);
  t1825 = -0.134322983001*t342;
  t1838 = 1. + t1825;
  t1881 = t1838*t1105;
  t1887 = -0.340999127418*t342*t1426;
  t1897 = -0.366501*t1455;
  t1920 = 0. + t1897;
  t1931 = t1920*t1677;
  t1934 = 0. + t1881 + t1887 + t1931;
  t200 = Cos(var1[4]);
  t260 = Cos(var1[5]);
  t2471 = 0.259155*t707;
  t2476 = -0.22434503092393926*t483;
  t2478 = -0.366501*t801;
  t2495 = 0. + t2478;
  t2527 = -0.707107*t2495;
  t2589 = t2471 + t2476 + t2527;
  t2689 = -0.657905*t517;
  t2695 = 0.0883716288660118*t483;
  t2705 = 0.930418*t801;
  t2724 = 0. + t2705;
  t2729 = -0.707107*t2724;
  t2732 = t2689 + t2695 + t2729;
  t2747 = -1.000000637725*t483;
  t2755 = 1. + t2747;
  t2757 = -0.707107*t2755;
  t2854 = -0.657905*t887;
  t2863 = 0.259155*t921;
  t2888 = t2757 + t2854 + t2863;
  t2593 = 0.340999127418*t647*t2589;
  t2745 = t653*t2732;
  t2895 = t2888*t1091;
  t2929 = 0. + t2593 + t2745 + t2895;
  t2974 = t1230*t2589;
  t2980 = 0.340999127418*t647*t2732;
  t2993 = t2888*t1414;
  t3004 = 0. + t2974 + t2980 + t2993;
  t3055 = t1537*t2888;
  t3083 = t2589*t1549;
  t3088 = t2732*t1575;
  t3126 = 0. + t3055 + t3083 + t3088;
  t1958 = Sin(var1[5]);
  t2936 = -0.340999127418*t342*t2929;
  t3021 = t1177*t3004;
  t3130 = t1513*t3126;
  t3133 = 0. + t2936 + t3021 + t3130;
  t3160 = t1838*t2929;
  t3184 = -0.340999127418*t342*t3004;
  t3199 = t1920*t3126;
  t3200 = 0. + t3160 + t3184 + t3199;
  t2106 = Sin(var1[4]);
  t2189 = 0.366501*t1455;
  t2206 = 0. + t2189;
  t2225 = 0.930418*t1455;
  t2227 = 0. + t2225;
  t2266 = -1.000000637725*t342;
  t2288 = 1. + t2266;
  t3547 = 0.707107*t2495;
  t3594 = t2471 + t2476 + t3547;
  t3611 = 0.707107*t2724;
  t3613 = t2689 + t2695 + t3611;
  t3647 = 0.707107*t2755;
  t3726 = t3647 + t2854 + t2863;
  t3602 = 0.340999127418*t647*t3594;
  t3616 = t653*t3613;
  t3770 = t3726*t1091;
  t3780 = 0. + t3602 + t3616 + t3770;
  t3850 = t1230*t3594;
  t3862 = 0.340999127418*t647*t3613;
  t3886 = t3726*t1414;
  t3890 = 0. + t3850 + t3862 + t3886;
  t3949 = t1537*t3726;
  t3961 = t3594*t1549;
  t3993 = t3613*t1575;
  t4021 = 0. + t3949 + t3961 + t3993;
  t3839 = -0.340999127418*t342*t3780;
  t3892 = t1177*t3890;
  t4027 = t1513*t4021;
  t4076 = 0. + t3839 + t3892 + t4027;
  t4145 = t1838*t3780;
  t4152 = -0.340999127418*t342*t3890;
  t4154 = t1920*t4021;
  t4178 = 0. + t4145 + t4152 + t4154;
  t4526 = Cos(var1[3]);
  t4504 = Sin(var1[3]);
  t4541 = t4526*t260*t2106;
  t4543 = t4504*t1958;
  t4549 = t4541 + t4543;
  t4514 = -1.*t260*t4504;
  t4528 = t4526*t2106*t1958;
  t4529 = t4514 + t4528;
  t4539 = t1808*t4529;
  t4568 = -1.*t4549*t267;
  t4569 = t4539 + t4568;
  t4584 = t1808*t4549;
  t4585 = t4529*t267;
  t4596 = t4584 + t4585;
  t4686 = t4526*t200*t2288;
  t4696 = t4569*t1513;
  t4708 = t4596*t1920;
  t4716 = t4686 + t4696 + t4708;
  t4583 = -0.340999127418*t342*t4569;
  t4608 = t1838*t4596;
  t4609 = t4526*t200*t2206;
  t4617 = t4583 + t4608 + t4609;
  t4623 = t1177*t4569;
  t4651 = -0.340999127418*t342*t4596;
  t4668 = t4526*t200*t2227;
  t4671 = t4623 + t4651 + t4668;
  t4622 = 0.340999127418*t647*t4617;
  t4672 = t1230*t4671;
  t4725 = t4716*t1549;
  t4750 = t4622 + t4672 + t4725;
  t4812 = t1537*t4716;
  t4828 = t4617*t1091;
  t4836 = t4671*t1414;
  t4845 = t4812 + t4828 + t4836;
  t4878 = t653*t4617;
  t4893 = 0.340999127418*t647*t4671;
  t4903 = t4716*t1575;
  t4908 = t4878 + t4893 + t4903;
  t1800 = -1.*t267*t1732;
  t1935 = t1808*t1934;
  t1942 = 0. + t1800 + t1935;
  t1949 = t260*t1942;
  t1960 = t1808*t1732;
  t1961 = t267*t1934;
  t2001 = 0. + t1960 + t1961;
  t2023 = t1958*t2001;
  t2046 = 0. + t1949 + t2023;
  t2051 = t200*t2046;
  t2222 = t2206*t1105;
  t2251 = t2227*t1426;
  t2295 = t2288*t1677;
  t2298 = 0. + t2222 + t2251 + t2295;
  t2314 = -1.*t2106*t2298;
  t2391 = 0. + t2051 + t2314;
  t3148 = -1.*t267*t3133;
  t3238 = t1808*t3200;
  t3277 = 0. + t3148 + t3238;
  t3291 = t260*t3277;
  t3309 = t1808*t3133;
  t3376 = t267*t3200;
  t3428 = 0. + t3309 + t3376;
  t3458 = t1958*t3428;
  t3461 = 0. + t3291 + t3458;
  t3471 = t200*t3461;
  t3486 = t2206*t2929;
  t3494 = t2227*t3004;
  t3498 = t2288*t3126;
  t3526 = 0. + t3486 + t3494 + t3498;
  t3530 = -1.*t2106*t3526;
  t3542 = 0. + t3471 + t3530;
  t4140 = -1.*t267*t4076;
  t4184 = t1808*t4178;
  t4186 = 0. + t4140 + t4184;
  t4194 = t260*t4186;
  t4219 = t1808*t4076;
  t4269 = t267*t4178;
  t4352 = 0. + t4219 + t4269;
  t4356 = t1958*t4352;
  t4372 = 0. + t4194 + t4356;
  t4386 = t200*t4372;
  t4402 = t2206*t3780;
  t4406 = t2227*t3890;
  t4458 = t2288*t4021;
  t4484 = 0. + t4402 + t4406 + t4458;
  t4485 = -1.*t2106*t4484;
  t4491 = 0. + t4386 + t4485;
  t4803 = 0.340999127418*t483*t4750;
  t4858 = t887*t4845;
  t4910 = t517*t4908;
  t4913 = t4803 + t4858 + t4910;
  t4941 = t707*t4750;
  t4943 = t921*t4845;
  t4944 = 0.340999127418*t483*t4908;
  t4945 = t4941 + t4943 + t4944;
  t5042 = -0.657905*t4913;
  t5044 = 0.259155*t4945;
  t5048 = t2495*t4750;
  t5056 = t2755*t4845;
  t5061 = t2724*t4908;
  t5075 = t5048 + t5056 + t5061;
  t2444 = 0.038903*t2391;
  t3544 = 0.000309*t3542;
  t4497 = 0.00004*t4491;
  t4499 = t2444 + t3544 + t4497;
  t5252 = t260*t4504*t2106;
  t5290 = -1.*t4526*t1958;
  t5296 = t5252 + t5290;
  t5200 = t4526*t260;
  t5222 = t4504*t2106*t1958;
  t5229 = t5200 + t5222;
  t5231 = t1808*t5229;
  t5312 = -1.*t5296*t267;
  t5322 = t5231 + t5312;
  t5352 = t1808*t5296;
  t5373 = t5229*t267;
  t5377 = t5352 + t5373;
  t5512 = t200*t2288*t4504;
  t5516 = t5322*t1513;
  t5527 = t5377*t1920;
  t5537 = t5512 + t5516 + t5527;
  t5332 = -0.340999127418*t342*t5322;
  t5384 = t1838*t5377;
  t5400 = t200*t4504*t2206;
  t5404 = t5332 + t5384 + t5400;
  t5461 = t1177*t5322;
  t5463 = -0.340999127418*t342*t5377;
  t5468 = t200*t4504*t2227;
  t5469 = t5461 + t5463 + t5468;
  t5436 = 0.340999127418*t647*t5404;
  t5472 = t1230*t5469;
  t5538 = t5537*t1549;
  t5545 = t5436 + t5472 + t5538;
  t5560 = t1537*t5537;
  t5564 = t5404*t1091;
  t5568 = t5469*t1414;
  t5580 = t5560 + t5564 + t5568;
  t5592 = t653*t5404;
  t5593 = 0.340999127418*t647*t5469;
  t5622 = t5537*t1575;
  t5635 = t5592 + t5593 + t5622;
  t4966 = 0.000309*t2391;
  t4980 = 0.004296*t3542;
  t4982 = 0.001393*t4491;
  t5037 = t4966 + t4980 + t4982;
  t5556 = 0.340999127418*t483*t5545;
  t5581 = t887*t5580;
  t5641 = t517*t5635;
  t5644 = t5556 + t5581 + t5641;
  t5654 = t707*t5545;
  t5670 = t921*t5580;
  t5677 = 0.340999127418*t483*t5635;
  t5681 = t5654 + t5670 + t5677;
  t5129 = 0.00004*t2391;
  t5137 = 0.001393*t3542;
  t5141 = 0.036157*t4491;
  t5160 = t5129 + t5137 + t5141;
  t5711 = -0.657905*t5644;
  t5715 = 0.259155*t5681;
  t5717 = t2495*t5545;
  t5745 = t2755*t5580;
  t5754 = t2724*t5635;
  t5757 = t5717 + t5745 + t5754;
  t5820 = t200*t1808*t1958;
  t5825 = -1.*t200*t260*t267;
  t5828 = t5820 + t5825;
  t5841 = t200*t260*t1808;
  t5846 = t200*t1958*t267;
  t5851 = t5841 + t5846;
  t5997 = -1.*t2288*t2106;
  t6000 = t5828*t1513;
  t6004 = t5851*t1920;
  t6035 = t5997 + t6000 + t6004;
  t5830 = -0.340999127418*t342*t5828;
  t5861 = t1838*t5851;
  t5878 = -1.*t2106*t2206;
  t5932 = t5830 + t5861 + t5878;
  t5962 = t1177*t5828;
  t5987 = -0.340999127418*t342*t5851;
  t5988 = -1.*t2106*t2227;
  t5994 = t5962 + t5987 + t5988;
  t5943 = 0.340999127418*t647*t5932;
  t5995 = t1230*t5994;
  t6040 = t6035*t1549;
  t6062 = t5943 + t5995 + t6040;
  t6072 = t1537*t6035;
  t6090 = t5932*t1091;
  t6098 = t5994*t1414;
  t6100 = t6072 + t6090 + t6098;
  t6112 = t653*t5932;
  t6116 = 0.340999127418*t647*t5994;
  t6117 = t6035*t1575;
  t6119 = t6112 + t6116 + t6117;
  t6070 = 0.340999127418*t483*t6062;
  t6106 = t887*t6100;
  t6134 = t517*t6119;
  t6139 = t6070 + t6106 + t6134;
  t6162 = t707*t6062;
  t6163 = t921*t6100;
  t6164 = 0.340999127418*t483*t6119;
  t6171 = t6162 + t6163 + t6164;
  t6190 = -0.657905*t6139;
  t6191 = 0.259155*t6171;
  t6192 = t2495*t6062;
  t6211 = t2755*t6100;
  t6223 = t2724*t6119;
  t6232 = t6192 + t6211 + t6223;
  t4930 = -0.366501*t4913;
  t4946 = -0.930418*t4945;
  t4948 = t4930 + t4946;
  t6271 = -1.*t1958*t1942;
  t6272 = t260*t2001;
  t6273 = 0. + t6271 + t6272;
  t6288 = -1.*t1958*t3277;
  t6298 = t260*t3428;
  t6302 = 0. + t6288 + t6298;
  t6306 = -1.*t1958*t4186;
  t6308 = t260*t4352;
  t6309 = 0. + t6306 + t6308;
  t5089 = -0.707107*t5075;
  t5106 = t5042 + t5044 + t5089;
  t5168 = 0.707107*t5075;
  t5175 = t5042 + t5044 + t5168;
  t6285 = 0.038903*t6273;
  t6304 = 0.000309*t6302;
  t6311 = 0.00004*t6309;
  t6312 = t6285 + t6304 + t6311;
  t5653 = -0.366501*t5644;
  t5683 = -0.930418*t5681;
  t5699 = t5653 + t5683;
  t6316 = 0.000309*t6273;
  t6318 = 0.004296*t6302;
  t6324 = 0.001393*t6309;
  t6325 = t6316 + t6318 + t6324;
  t5775 = -0.707107*t5757;
  t5776 = t5711 + t5715 + t5775;
  t6340 = 0.00004*t6273;
  t6341 = 0.001393*t6302;
  t6342 = 0.036157*t6309;
  t6346 = t6340 + t6341 + t6342;
  t5785 = 0.707107*t5757;
  t5797 = t5711 + t5715 + t5785;
  t6143 = -0.366501*t6139;
  t6177 = -0.930418*t6171;
  t6180 = t6143 + t6177;
  t6246 = -0.707107*t6232;
  t6247 = t6190 + t6191 + t6246;
  t6255 = 0.707107*t6232;
  t6259 = t6190 + t6191 + t6255;
  t6425 = 0.038903*t2298;
  t6451 = 0.000309*t3526;
  t6452 = 0.00004*t4484;
  t6461 = t6425 + t6451 + t6452;
  t6472 = 0.000309*t2298;
  t6476 = 0.004296*t3526;
  t6486 = 0.001393*t4484;
  t6492 = t6472 + t6476 + t6486;
  t6496 = 0.00004*t2298;
  t6499 = 0.001393*t3526;
  t6510 = 0.036157*t4484;
  t6518 = t6496 + t6499 + t6510;
  t6571 = -1.*t2206*t1105;
  t6572 = -1.*t2227*t1426;
  t6577 = -1.*t2288*t1677;
  t6581 = 0. + t6571 + t6572 + t6577;
  t6587 = -1.*t2206*t2929;
  t6594 = -1.*t2227*t3004;
  t6595 = -1.*t2288*t3126;
  t6599 = 0. + t6587 + t6594 + t6595;
  t6605 = -1.*t2206*t3780;
  t6606 = -1.*t2227*t3890;
  t6607 = -1.*t2288*t4021;
  t6609 = 0. + t6605 + t6606 + t6607;
  t6582 = 0.038903*t6581;
  t6603 = 0.000309*t6599;
  t6620 = 0.00004*t6609;
  t6628 = t6582 + t6603 + t6620;
  t6635 = 0.000309*t6581;
  t6639 = 0.004296*t6599;
  t6656 = 0.001393*t6609;
  t6657 = t6635 + t6639 + t6656;
  t6663 = 0.00004*t6581;
  t6669 = 0.001393*t6599;
  t6672 = 0.036157*t6609;
  t6676 = t6663 + t6669 + t6672;
  t6717 = -0.930418*t1105;
  t6718 = 0.366501*t1426;
  t6721 = 0. + t6717 + t6718;
  t6729 = -0.930418*t2929;
  t6747 = 0.366501*t3004;
  t6748 = 0. + t6729 + t6747;
  t6756 = -0.930418*t3780;
  t6763 = 0.366501*t3890;
  t6766 = 0. + t6756 + t6763;
  t6728 = 0.038903*t6721;
  t6749 = 0.000309*t6748;
  t6768 = 0.00004*t6766;
  t6769 = t6728 + t6749 + t6768;
  t6789 = 0.000309*t6721;
  t6824 = 0.004296*t6748;
  t6830 = 0.001393*t6766;
  t6833 = t6789 + t6824 + t6830;
  t6844 = 0.00004*t6721;
  t6846 = 0.001393*t6748;
  t6847 = 0.036157*t6766;
  t6849 = t6844 + t6846 + t6847;
  t6910 = 0.366501*t614;
  t6911 = 0.930418*t740;
  t6923 = 0. + t6910 + t6911;
  t6931 = 0.930418*t2589;
  t6935 = 0.366501*t2732;
  t6940 = 0. + t6931 + t6935;
  t6943 = 0.930418*t3594;
  t6946 = 0.366501*t3613;
  t6954 = 0. + t6943 + t6946;
  t6924 = 0.038903*t6923;
  t6942 = 0.000309*t6940;
  t6958 = 0.00004*t6954;
  t6972 = t6924 + t6942 + t6958;
  t6979 = 0.000309*t6923;
  t6982 = 0.004296*t6940;
  t6985 = 0.001393*t6954;
  t6988 = t6979 + t6982 + t6985;
  t6993 = 0.00004*t6923;
  t7001 = 0.001393*t6940;
  t7007 = 0.036157*t6954;
  t7017 = t6993 + t7001 + t7007;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=t4499*t4948 + t5037*t5106 + t5160*t5175;
  p_output1[10]=t4499*t5699 + t5037*t5776 + t5160*t5797;
  p_output1[11]=t4499*t6180 + t5037*t6247 + t5160*t6259;
  p_output1[12]=t4948*t6312 + t5106*t6325 + t5175*t6346;
  p_output1[13]=t5699*t6312 + t5776*t6325 + t5797*t6346;
  p_output1[14]=t6180*t6312 + t6247*t6325 + t6259*t6346;
  p_output1[15]=t4948*t6461 + t5106*t6492 + t5175*t6518;
  p_output1[16]=t5699*t6461 + t5776*t6492 + t5797*t6518;
  p_output1[17]=t6180*t6461 + t6247*t6492 + t6259*t6518;
  p_output1[18]=t4948*t6628 + t5106*t6657 + t5175*t6676;
  p_output1[19]=t5699*t6628 + t5776*t6657 + t5797*t6676;
  p_output1[20]=t6180*t6628 + t6247*t6657 + t6259*t6676;
  p_output1[21]=t4948*t6769 + t5106*t6833 + t5175*t6849;
  p_output1[22]=t5699*t6769 + t5776*t6833 + t5797*t6849;
  p_output1[23]=t6180*t6769 + t6247*t6833 + t6259*t6849;
  p_output1[24]=t4948*t6972 + t5106*t6988 + t5175*t7017;
  p_output1[25]=t5699*t6972 + t5776*t6988 + t5797*t7017;
  p_output1[26]=t6180*t6972 + t6247*t6988 + t6259*t7017;
  p_output1[27]=0.03890302493631731*t4948 + 0.00030900226566275997*t5106 + 0.000040013679252249944*t5175;
  p_output1[28]=0.03890302493631731*t5699 + 0.00030900226566275997*t5776 + 0.000040013679252249944*t5797;
  p_output1[29]=0.03890302493631731*t6180 + 0.00030900226566275997*t6247 + 0.000040013679252249944*t6259;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jdq_AMWorld_left_knee_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
