/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:10:16 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jq_AMBody_right_knee_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t575;
  double t627;
  double t648;
  double t447;
  double t916;
  double t2003;
  double t2004;
  double t2025;
  double t759;
  double t799;
  double t819;
  double t889;
  double t937;
  double t1128;
  double t1218;
  double t1231;
  double t1563;
  double t1603;
  double t1673;
  double t1821;
  double t1836;
  double t1842;
  double t1934;
  double t1959;
  double t2054;
  double t2061;
  double t2085;
  double t2087;
  double t2118;
  double t2119;
  double t2130;
  double t2149;
  double t2170;
  double t2174;
  double t2305;
  double t546;
  double t573;
  double t1343;
  double t1397;
  double t1444;
  double t1995;
  double t2028;
  double t2029;
  double t2177;
  double t2216;
  double t131;
  double t255;
  double t301;
  double t2670;
  double t2671;
  double t2677;
  double t2759;
  double t2769;
  double t2879;
  double t2882;
  double t2890;
  double t2940;
  double t2959;
  double t3010;
  double t3036;
  double t3039;
  double t3141;
  double t3142;
  double t3148;
  double t3489;
  double t3319;
  double t3351;
  double t3369;
  double t3373;
  double t3413;
  double t3415;
  double t3418;
  double t3455;
  double t3309;
  double t3499;
  double t3502;
  double t3560;
  double t3567;
  double t3570;
  double t3596;
  double t3599;
  double t3614;
  double t17;
  double t387;
  double t397;
  double t2384;
  double t2651;
  double t3820;
  double t3826;
  double t3841;
  double t3849;
  double t3866;
  double t3873;
  double t3878;
  double t3879;
  double t3881;
  double t2933;
  double t2934;
  double t3249;
  double t3290;
  double t3846;
  double t3876;
  double t3894;
  double t3898;
  double t3902;
  double t3916;
  double t3923;
  double t3927;
  double t3930;
  double t3931;
  double t3932;
  double t3933;
  double t3952;
  double t3953;
  double t3979;
  double t3980;
  double t3988;
  double t3992;
  double t4011;
  double t4012;
  double t3732;
  double t4157;
  double t4187;
  double t4195;
  double t4203;
  double t4211;
  double t4215;
  double t4228;
  double t4231;
  double t4232;
  double t4197;
  double t4225;
  double t4235;
  double t4238;
  double t4247;
  double t4254;
  double t4257;
  double t4264;
  double t4284;
  double t4292;
  double t4332;
  double t4337;
  double t4355;
  double t4360;
  double t4363;
  double t4364;
  double t4404;
  double t4412;
  double t4414;
  double t4417;
  double t2281;
  double t2931;
  double t3161;
  double t3170;
  double t3225;
  double t3482;
  double t3643;
  double t3666;
  double t3700;
  double t3709;
  double t3723;
  double t3729;
  double t3768;
  double t3800;
  double t3803;
  double t3814;
  double t3899;
  double t3928;
  double t3935;
  double t3944;
  double t3948;
  double t3987;
  double t4013;
  double t4020;
  double t4022;
  double t4027;
  double t4029;
  double t4043;
  double t4048;
  double t4060;
  double t4070;
  double t4075;
  double t4240;
  double t4265;
  double t4344;
  double t4347;
  double t4350;
  double t4372;
  double t4438;
  double t4451;
  double t4494;
  double t4496;
  double t4513;
  double t4515;
  double t4519;
  double t4527;
  double t4538;
  double t4539;
  double t4619;
  double t4629;
  double t4633;
  double t4636;
  double t4638;
  double t4645;
  double t4647;
  double t4651;
  double t4653;
  double t4663;
  double t4664;
  double t4669;
  double t4672;
  double t4678;
  double t4684;
  double t4690;
  double t4696;
  double t4709;
  double t4732;
  double t4734;
  double t4735;
  double t4736;
  double t4738;
  double t4742;
  double t4743;
  double t4746;
  double t4755;
  double t4830;
  double t4834;
  double t4835;
  double t4824;
  double t4881;
  double t4884;
  double t4888;
  double t4874;
  double t4967;
  double t4969;
  double t4973;
  double t4958;
  double t4825;
  double t4836;
  double t4837;
  double t4840;
  double t4841;
  double t4843;
  double t4862;
  double t4863;
  double t4867;
  double t4876;
  double t4889;
  double t4914;
  double t4916;
  double t4918;
  double t4932;
  double t4938;
  double t4942;
  double t4948;
  double t4963;
  double t4981;
  double t4982;
  double t4983;
  double t4990;
  double t4995;
  double t5012;
  double t5026;
  double t5030;
  double t5142;
  double t5150;
  double t5152;
  double t5157;
  double t5167;
  double t5171;
  double t5176;
  double t5186;
  double t5079;
  double t5085;
  double t5086;
  double t5102;
  double t5202;
  double t5205;
  double t5215;
  double t5165;
  double t5187;
  double t5194;
  double t5367;
  double t5368;
  double t5375;
  double t5377;
  double t5382;
  double t5383;
  double t5386;
  double t5388;
  double t5303;
  double t5320;
  double t5321;
  double t5329;
  double t5410;
  double t5414;
  double t5415;
  double t5379;
  double t5396;
  double t5401;
  double t5532;
  double t5533;
  double t5535;
  double t5544;
  double t5551;
  double t5555;
  double t5559;
  double t5568;
  double t5491;
  double t5493;
  double t5495;
  double t5497;
  double t5580;
  double t5581;
  double t5582;
  double t5550;
  double t5569;
  double t5570;
  double t5111;
  double t5115;
  double t5117;
  double t5126;
  double t5129;
  double t5141;
  double t5200;
  double t5226;
  double t5239;
  double t5253;
  double t5256;
  double t5264;
  double t5265;
  double t5266;
  double t5268;
  double t5281;
  double t5295;
  double t5299;
  double t5330;
  double t5336;
  double t5340;
  double t5348;
  double t5349;
  double t5358;
  double t5402;
  double t5417;
  double t5419;
  double t5420;
  double t5421;
  double t5430;
  double t5432;
  double t5436;
  double t5439;
  double t5441;
  double t5447;
  double t5456;
  double t5501;
  double t5504;
  double t5505;
  double t5511;
  double t5513;
  double t5526;
  double t5576;
  double t5584;
  double t5591;
  double t5603;
  double t5605;
  double t5615;
  double t5628;
  double t5634;
  double t5635;
  double t5636;
  double t5642;
  double t5645;
  double t5706;
  double t5707;
  double t5709;
  double t5710;
  double t5712;
  double t5713;
  double t5716;
  double t5724;
  double t5739;
  double t5743;
  double t5745;
  double t5746;
  double t5789;
  double t5791;
  double t5792;
  double t5817;
  double t5822;
  double t5833;
  double t5837;
  double t5838;
  double t5757;
  double t5758;
  double t5761;
  double t5771;
  double t5851;
  double t5853;
  double t5854;
  double t5821;
  double t5846;
  double t5847;
  double t5933;
  double t5940;
  double t5945;
  double t5955;
  double t5979;
  double t5980;
  double t5982;
  double t5990;
  double t6015;
  double t6018;
  double t6019;
  double t6021;
  double t6065;
  double t6067;
  double t6068;
  double t6072;
  double t6077;
  double t6079;
  double t6087;
  double t6088;
  double t6045;
  double t6047;
  double t6051;
  double t6058;
  double t6105;
  double t6107;
  double t6110;
  double t6076;
  double t6092;
  double t6100;
  double t6185;
  double t6192;
  double t6201;
  double t6204;
  double t6207;
  double t6209;
  double t6210;
  double t6215;
  double t6241;
  double t6244;
  double t6247;
  double t6249;
  double t6303;
  double t6305;
  double t6310;
  double t6313;
  double t6320;
  double t6323;
  double t6328;
  double t6354;
  double t6262;
  double t6266;
  double t6277;
  double t6295;
  double t6374;
  double t6376;
  double t6377;
  double t6315;
  double t6361;
  double t6363;
  double t5711;
  double t5725;
  double t5727;
  double t5733;
  double t5737;
  double t5738;
  double t5747;
  double t5750;
  double t5752;
  double t5780;
  double t5850;
  double t5862;
  double t5868;
  double t5872;
  double t5880;
  double t5885;
  double t5892;
  double t5898;
  double t5902;
  double t5907;
  double t5917;
  double t5921;
  double t5960;
  double t5991;
  double t5995;
  double t5999;
  double t6000;
  double t6001;
  double t6024;
  double t6028;
  double t6030;
  double t6063;
  double t6102;
  double t6111;
  double t6122;
  double t6143;
  double t6147;
  double t6150;
  double t6152;
  double t6153;
  double t6157;
  double t6164;
  double t6165;
  double t6171;
  double t6205;
  double t6220;
  double t6222;
  double t6236;
  double t6237;
  double t6240;
  double t6253;
  double t6254;
  double t6256;
  double t6302;
  double t6365;
  double t6379;
  double t6384;
  double t6386;
  double t6387;
  double t6390;
  double t6392;
  double t6397;
  double t6399;
  double t6403;
  double t6407;
  double t6408;
  double t6451;
  double t6454;
  double t6455;
  double t6457;
  double t6460;
  double t6461;
  double t6466;
  double t6469;
  double t6475;
  double t6456;
  double t6462;
  double t6481;
  double t6482;
  double t6487;
  double t6490;
  double t6498;
  double t6502;
  double t6518;
  double t6519;
  double t6527;
  double t6528;
  double t6619;
  double t6622;
  double t6625;
  double t6630;
  double t6640;
  double t6641;
  double t6643;
  double t6662;
  double t6571;
  double t6585;
  double t6586;
  double t6588;
  double t6681;
  double t6682;
  double t6684;
  double t6639;
  double t6663;
  double t6670;
  double t6733;
  double t6743;
  double t6766;
  double t6779;
  double t6791;
  double t6792;
  double t6765;
  double t6784;
  double t6801;
  double t6804;
  double t6815;
  double t6816;
  double t6827;
  double t6831;
  double t6843;
  double t6849;
  double t6851;
  double t6857;
  double t6929;
  double t6930;
  double t6932;
  double t6933;
  double t6936;
  double t6938;
  double t6943;
  double t6944;
  double t6878;
  double t6896;
  double t6900;
  double t6905;
  double t6954;
  double t6958;
  double t6960;
  double t6935;
  double t6946;
  double t6948;
  double t7006;
  double t7008;
  double t7011;
  double t7016;
  double t7018;
  double t7023;
  double t7046;
  double t7047;
  double t7048;
  double t7089;
  double t7090;
  double t7093;
  double t7094;
  double t7098;
  double t7102;
  double t7104;
  double t7107;
  double t7061;
  double t7063;
  double t7071;
  double t7079;
  double t7115;
  double t7117;
  double t7118;
  double t7097;
  double t7109;
  double t7111;
  double t6485;
  double t6513;
  double t6515;
  double t6517;
  double t6547;
  double t6556;
  double t6562;
  double t6565;
  double t6566;
  double t6597;
  double t6604;
  double t6608;
  double t6611;
  double t6616;
  double t6679;
  double t6685;
  double t6689;
  double t6692;
  double t6695;
  double t6696;
  double t6701;
  double t6703;
  double t6705;
  double t6720;
  double t6721;
  double t6722;
  double t6809;
  double t6833;
  double t6835;
  double t6838;
  double t6864;
  double t6866;
  double t6871;
  double t6872;
  double t6873;
  double t6912;
  double t6922;
  double t6923;
  double t6925;
  double t6928;
  double t6953;
  double t6962;
  double t6963;
  double t6965;
  double t6971;
  double t6979;
  double t6980;
  double t6982;
  double t6984;
  double t6988;
  double t6996;
  double t6997;
  double t7004;
  double t7013;
  double t7028;
  double t7030;
  double t7033;
  double t7042;
  double t7044;
  double t7051;
  double t7052;
  double t7053;
  double t7084;
  double t7112;
  double t7120;
  double t7121;
  double t7123;
  double t7137;
  double t7146;
  double t7147;
  double t7154;
  double t7156;
  double t7157;
  double t7162;
  double t7163;
  t575 = Cos(var1[20]);
  t627 = -1.*t575;
  t648 = 1. + t627;
  t447 = Sin(var1[19]);
  t916 = Sin(var1[20]);
  t2003 = Cos(var1[19]);
  t2004 = -1.*t2003;
  t2025 = 1. + t2004;
  t759 = -0.8656776547239999*t648;
  t799 = 1. + t759;
  t819 = -0.657905*t799;
  t889 = 0.0883716288660118*t648;
  t937 = -0.930418*t916;
  t1128 = 0. + t937;
  t1218 = -0.707107*t1128;
  t1231 = t819 + t889 + t1218;
  t1563 = -0.134322983001*t648;
  t1603 = 1. + t1563;
  t1673 = -0.259155*t1603;
  t1821 = 0.22434503092393926*t648;
  t1836 = -0.366501*t916;
  t1842 = 0. + t1836;
  t1934 = -0.707107*t1842;
  t1959 = t1673 + t1821 + t1934;
  t2054 = -1.000000637725*t648;
  t2061 = 1. + t2054;
  t2085 = -0.707107*t2061;
  t2087 = 0.366501*t916;
  t2118 = 0. + t2087;
  t2119 = -0.259155*t2118;
  t2130 = 0.930418*t916;
  t2149 = 0. + t2130;
  t2170 = -0.657905*t2149;
  t2174 = t2085 + t2119 + t2170;
  t2305 = Sin(var1[18]);
  t546 = -0.930418*t447;
  t573 = 0. + t546;
  t1343 = t573*t1231;
  t1397 = -0.366501*t447;
  t1444 = 0. + t1397;
  t1995 = t1444*t1959;
  t2028 = -1.000000637725*t2025;
  t2029 = 1. + t2028;
  t2177 = t2029*t2174;
  t2216 = 0. + t1343 + t1995 + t2177;
  t131 = Cos(var1[18]);
  t255 = -1.*t131;
  t301 = 1. + t255;
  t2670 = -0.340999127418*t2025*t1231;
  t2671 = -0.134322983001*t2025;
  t2677 = 1. + t2671;
  t2759 = t2677*t1959;
  t2769 = 0.366501*t447;
  t2879 = 0. + t2769;
  t2882 = t2879*t2174;
  t2890 = 0. + t2670 + t2759 + t2882;
  t2940 = -0.8656776547239999*t2025;
  t2959 = 1. + t2940;
  t3010 = t2959*t1231;
  t3036 = -0.340999127418*t2025*t1959;
  t3039 = 0.930418*t447;
  t3141 = 0. + t3039;
  t3142 = t3141*t2174;
  t3148 = 0. + t3010 + t3036 + t3142;
  t3489 = Sin(var1[17]);
  t3319 = 0.366501*t2305;
  t3351 = 0. + t3319;
  t3369 = t3351*t2216;
  t3373 = 0.340999127418*t301*t2890;
  t3413 = -0.134322983001*t301;
  t3415 = 1. + t3413;
  t3418 = t3415*t3148;
  t3455 = 0. + t3369 + t3373 + t3418;
  t3309 = Cos(var1[17]);
  t3499 = -0.930418*t2305;
  t3502 = 0. + t3499;
  t3560 = t3502*t2216;
  t3567 = -0.8656776547239999*t301;
  t3570 = 1. + t3567;
  t3596 = t3570*t2890;
  t3599 = 0.340999127418*t301*t3148;
  t3614 = 0. + t3560 + t3596 + t3599;
  t17 = Cos(var1[4]);
  t387 = -1.000000637725*t301;
  t397 = 1. + t387;
  t2384 = 0.930418*t2305;
  t2651 = 0. + t2384;
  t3820 = -0.366501*t799;
  t3826 = -0.3172717261340007*t648;
  t3841 = t3820 + t3826;
  t3849 = 0.930418*t1603;
  t3866 = 0.12497652119782442*t648;
  t3873 = t3849 + t3866;
  t3878 = 0.930418*t2118;
  t3879 = -0.366501*t2149;
  t3881 = t3878 + t3879;
  t2933 = -0.366501*t2305;
  t2934 = 0. + t2933;
  t3249 = Sin(var1[4]);
  t3290 = Cos(var1[5]);
  t3846 = t3841*t573;
  t3876 = t3873*t1444;
  t3894 = t2029*t3881;
  t3898 = 0. + t3846 + t3876 + t3894;
  t3902 = -0.340999127418*t2025*t3841;
  t3916 = t2677*t3873;
  t3923 = t2879*t3881;
  t3927 = 0. + t3902 + t3916 + t3923;
  t3930 = t2959*t3841;
  t3931 = -0.340999127418*t2025*t3873;
  t3932 = t3141*t3881;
  t3933 = 0. + t3930 + t3931 + t3932;
  t3952 = t3351*t3898;
  t3953 = 0.340999127418*t301*t3927;
  t3979 = t3415*t3933;
  t3980 = 0. + t3952 + t3953 + t3979;
  t3988 = t3502*t3898;
  t3992 = t3570*t3927;
  t4011 = 0.340999127418*t301*t3933;
  t4012 = 0. + t3988 + t3992 + t4011;
  t3732 = Sin(var1[5]);
  t4157 = 0.657905*t799;
  t4187 = -0.0883716288660118*t648;
  t4195 = t4157 + t4187 + t1218;
  t4203 = 0.259155*t1603;
  t4211 = -0.22434503092393926*t648;
  t4215 = t4203 + t4211 + t1934;
  t4228 = 0.259155*t2118;
  t4231 = 0.657905*t2149;
  t4232 = t2085 + t4228 + t4231;
  t4197 = t573*t4195;
  t4225 = t1444*t4215;
  t4235 = t2029*t4232;
  t4238 = 0. + t4197 + t4225 + t4235;
  t4247 = -0.340999127418*t2025*t4195;
  t4254 = t2677*t4215;
  t4257 = t2879*t4232;
  t4264 = 0. + t4247 + t4254 + t4257;
  t4284 = t2959*t4195;
  t4292 = -0.340999127418*t2025*t4215;
  t4332 = t3141*t4232;
  t4337 = 0. + t4284 + t4292 + t4332;
  t4355 = t3351*t4238;
  t4360 = 0.340999127418*t301*t4264;
  t4363 = t3415*t4337;
  t4364 = 0. + t4355 + t4360 + t4363;
  t4404 = t3502*t4238;
  t4412 = t3570*t4264;
  t4414 = 0.340999127418*t301*t4337;
  t4417 = 0. + t4404 + t4412 + t4414;
  t2281 = t397*t2216;
  t2931 = t2651*t2890;
  t3161 = t2934*t3148;
  t3170 = 0. + t2281 + t2931 + t3161;
  t3225 = -1.*t17*t3170;
  t3482 = t3309*t3455;
  t3643 = -1.*t3489*t3614;
  t3666 = 0. + t3482 + t3643;
  t3700 = t3290*t3666;
  t3709 = t3489*t3455;
  t3723 = t3309*t3614;
  t3729 = 0. + t3709 + t3723;
  t3768 = t3729*t3732;
  t3800 = 0. + t3700 + t3768;
  t3803 = -1.*t3249*t3800;
  t3814 = t3225 + t3803;
  t3899 = t397*t3898;
  t3928 = t2651*t3927;
  t3935 = t2934*t3933;
  t3944 = 0. + t3899 + t3928 + t3935;
  t3948 = -1.*t17*t3944;
  t3987 = t3309*t3980;
  t4013 = -1.*t3489*t4012;
  t4020 = 0. + t3987 + t4013;
  t4022 = t3290*t4020;
  t4027 = t3489*t3980;
  t4029 = t3309*t4012;
  t4043 = 0. + t4027 + t4029;
  t4048 = t4043*t3732;
  t4060 = 0. + t4022 + t4048;
  t4070 = -1.*t3249*t4060;
  t4075 = t3948 + t4070;
  t4240 = t397*t4238;
  t4265 = t2651*t4264;
  t4344 = t2934*t4337;
  t4347 = 0. + t4240 + t4265 + t4344;
  t4350 = -1.*t17*t4347;
  t4372 = t3309*t4364;
  t4438 = -1.*t3489*t4417;
  t4451 = 0. + t4372 + t4438;
  t4494 = t3290*t4451;
  t4496 = t3489*t4364;
  t4513 = t3309*t4417;
  t4515 = 0. + t4496 + t4513;
  t4519 = t4515*t3732;
  t4527 = 0. + t4494 + t4519;
  t4538 = -1.*t3249*t4527;
  t4539 = t4350 + t4538;
  t4619 = -1.*t3290*t3666;
  t4629 = -1.*t3729*t3732;
  t4633 = t4619 + t4629;
  t4636 = var2[4]*t4633;
  t4638 = t3290*t3729;
  t4645 = -1.*t3666*t3732;
  t4647 = t4638 + t4645;
  t4651 = var2[3]*t17*t4647;
  t4653 = t4636 + t4651;
  t4663 = -1.*t3290*t4020;
  t4664 = -1.*t4043*t3732;
  t4669 = t4663 + t4664;
  t4672 = var2[4]*t4669;
  t4678 = t3290*t4043;
  t4684 = -1.*t4020*t3732;
  t4690 = t4678 + t4684;
  t4696 = var2[3]*t17*t4690;
  t4709 = t4672 + t4696;
  t4732 = -1.*t3290*t4451;
  t4734 = -1.*t4515*t3732;
  t4735 = t4732 + t4734;
  t4736 = var2[4]*t4735;
  t4738 = t3290*t4515;
  t4742 = -1.*t4451*t3732;
  t4743 = t4738 + t4742;
  t4746 = var2[3]*t17*t4743;
  t4755 = t4736 + t4746;
  t4830 = -1.*t3489*t3455;
  t4834 = -1.*t3309*t3614;
  t4835 = t4830 + t4834;
  t4824 = t3482 + t3643;
  t4881 = -1.*t3489*t3980;
  t4884 = -1.*t3309*t4012;
  t4888 = t4881 + t4884;
  t4874 = t3987 + t4013;
  t4967 = -1.*t3489*t4364;
  t4969 = -1.*t3309*t4417;
  t4973 = t4967 + t4969;
  t4958 = t4372 + t4438;
  t4825 = t3290*t4824;
  t4836 = -1.*t4835*t3732;
  t4837 = t4825 + t4836;
  t4840 = var2[4]*t4837;
  t4841 = t3290*t4835;
  t4843 = t4824*t3732;
  t4862 = t4841 + t4843;
  t4863 = var2[3]*t17*t4862;
  t4867 = t4840 + t4863;
  t4876 = t3290*t4874;
  t4889 = -1.*t4888*t3732;
  t4914 = t4876 + t4889;
  t4916 = var2[4]*t4914;
  t4918 = t3290*t4888;
  t4932 = t4874*t3732;
  t4938 = t4918 + t4932;
  t4942 = var2[3]*t17*t4938;
  t4948 = t4916 + t4942;
  t4963 = t3290*t4958;
  t4981 = -1.*t4973*t3732;
  t4982 = t4963 + t4981;
  t4983 = var2[4]*t4982;
  t4990 = t3290*t4973;
  t4995 = t4958*t3732;
  t5012 = t4990 + t4995;
  t5026 = var2[3]*t17*t5012;
  t5030 = t4983 + t5026;
  t5142 = 0.366501*t131*t2216;
  t5150 = 0.340999127418*t2305*t2890;
  t5152 = -0.134322983001*t2305*t3148;
  t5157 = t5142 + t5150 + t5152;
  t5167 = -0.930418*t131*t2216;
  t5171 = -0.8656776547239999*t2305*t2890;
  t5176 = 0.340999127418*t2305*t3148;
  t5186 = t5167 + t5171 + t5176;
  t5079 = -1.000000637725*t2305*t2216;
  t5085 = 0.930418*t131*t2890;
  t5086 = -0.366501*t131*t3148;
  t5102 = t5079 + t5085 + t5086;
  t5202 = t3309*t5157;
  t5205 = -1.*t3489*t5186;
  t5215 = t5202 + t5205;
  t5165 = t3489*t5157;
  t5187 = t3309*t5186;
  t5194 = t5165 + t5187;
  t5367 = 0.366501*t131*t3898;
  t5368 = 0.340999127418*t2305*t3927;
  t5375 = -0.134322983001*t2305*t3933;
  t5377 = t5367 + t5368 + t5375;
  t5382 = -0.930418*t131*t3898;
  t5383 = -0.8656776547239999*t2305*t3927;
  t5386 = 0.340999127418*t2305*t3933;
  t5388 = t5382 + t5383 + t5386;
  t5303 = -1.000000637725*t2305*t3898;
  t5320 = 0.930418*t131*t3927;
  t5321 = -0.366501*t131*t3933;
  t5329 = t5303 + t5320 + t5321;
  t5410 = t3309*t5377;
  t5414 = -1.*t3489*t5388;
  t5415 = t5410 + t5414;
  t5379 = t3489*t5377;
  t5396 = t3309*t5388;
  t5401 = t5379 + t5396;
  t5532 = 0.366501*t131*t4238;
  t5533 = 0.340999127418*t2305*t4264;
  t5535 = -0.134322983001*t2305*t4337;
  t5544 = t5532 + t5533 + t5535;
  t5551 = -0.930418*t131*t4238;
  t5555 = -0.8656776547239999*t2305*t4264;
  t5559 = 0.340999127418*t2305*t4337;
  t5568 = t5551 + t5555 + t5559;
  t5491 = -1.000000637725*t2305*t4238;
  t5493 = 0.930418*t131*t4264;
  t5495 = -0.366501*t131*t4337;
  t5497 = t5491 + t5493 + t5495;
  t5580 = t3309*t5544;
  t5581 = -1.*t3489*t5568;
  t5582 = t5580 + t5581;
  t5550 = t3489*t5544;
  t5569 = t3309*t5568;
  t5570 = t5550 + t5569;
  t5111 = var2[5]*t5102;
  t5115 = 1.000000637725*t2305*t2216;
  t5117 = -0.930418*t131*t2890;
  t5126 = 0.366501*t131*t3148;
  t5129 = t5115 + t5117 + t5126;
  t5141 = var2[17]*t5129;
  t5200 = t3290*t5194;
  t5226 = -1.*t5215*t3732;
  t5239 = t5200 + t5226;
  t5253 = var2[4]*t5239;
  t5256 = -1.*t5102*t3249;
  t5264 = t3290*t5215;
  t5265 = t5194*t3732;
  t5266 = t5264 + t5265;
  t5268 = t17*t5266;
  t5281 = t5256 + t5268;
  t5295 = var2[3]*t5281;
  t5299 = t5111 + t5141 + t5253 + t5295;
  t5330 = var2[5]*t5329;
  t5336 = 1.000000637725*t2305*t3898;
  t5340 = -0.930418*t131*t3927;
  t5348 = 0.366501*t131*t3933;
  t5349 = t5336 + t5340 + t5348;
  t5358 = var2[17]*t5349;
  t5402 = t3290*t5401;
  t5417 = -1.*t5415*t3732;
  t5419 = t5402 + t5417;
  t5420 = var2[4]*t5419;
  t5421 = -1.*t5329*t3249;
  t5430 = t3290*t5415;
  t5432 = t5401*t3732;
  t5436 = t5430 + t5432;
  t5439 = t17*t5436;
  t5441 = t5421 + t5439;
  t5447 = var2[3]*t5441;
  t5456 = t5330 + t5358 + t5420 + t5447;
  t5501 = var2[5]*t5497;
  t5504 = 1.000000637725*t2305*t4238;
  t5505 = -0.930418*t131*t4264;
  t5511 = 0.366501*t131*t4337;
  t5513 = t5504 + t5505 + t5511;
  t5526 = var2[17]*t5513;
  t5576 = t3290*t5570;
  t5584 = -1.*t5582*t3732;
  t5591 = t5576 + t5584;
  t5603 = var2[4]*t5591;
  t5605 = -1.*t5497*t3249;
  t5615 = t3290*t5582;
  t5628 = t5570*t3732;
  t5634 = t5615 + t5628;
  t5635 = t17*t5634;
  t5636 = t5605 + t5635;
  t5642 = var2[3]*t5636;
  t5645 = t5501 + t5526 + t5603 + t5642;
  t5706 = -0.340999127418*t447*t1231;
  t5707 = -0.134322983001*t447*t1959;
  t5709 = 0.366501*t2003*t2174;
  t5710 = t5706 + t5707 + t5709;
  t5712 = -0.8656776547239999*t447*t1231;
  t5713 = -0.340999127418*t447*t1959;
  t5716 = 0.930418*t2003*t2174;
  t5724 = t5712 + t5713 + t5716;
  t5739 = -0.930418*t2003*t1231;
  t5743 = -0.366501*t2003*t1959;
  t5745 = -1.000000637725*t447*t2174;
  t5746 = t5739 + t5743 + t5745;
  t5789 = t3570*t5710;
  t5791 = 0.340999127418*t301*t5724;
  t5792 = t3502*t5746;
  t5817 = t5789 + t5791 + t5792;
  t5822 = 0.340999127418*t301*t5710;
  t5833 = t3415*t5724;
  t5837 = t3351*t5746;
  t5838 = t5822 + t5833 + t5837;
  t5757 = t2651*t5710;
  t5758 = t2934*t5724;
  t5761 = t397*t5746;
  t5771 = t5757 + t5758 + t5761;
  t5851 = -1.*t3489*t5817;
  t5853 = t3309*t5838;
  t5854 = t5851 + t5853;
  t5821 = t3309*t5817;
  t5846 = t3489*t5838;
  t5847 = t5821 + t5846;
  t5933 = -0.340999127418*t3841*t447;
  t5940 = -0.134322983001*t3873*t447;
  t5945 = 0.366501*t2003*t3881;
  t5955 = t5933 + t5940 + t5945;
  t5979 = -0.8656776547239999*t3841*t447;
  t5980 = -0.340999127418*t3873*t447;
  t5982 = 0.930418*t2003*t3881;
  t5990 = t5979 + t5980 + t5982;
  t6015 = -0.930418*t2003*t3841;
  t6018 = -0.366501*t2003*t3873;
  t6019 = -1.000000637725*t447*t3881;
  t6021 = t6015 + t6018 + t6019;
  t6065 = t3570*t5955;
  t6067 = 0.340999127418*t301*t5990;
  t6068 = t3502*t6021;
  t6072 = t6065 + t6067 + t6068;
  t6077 = 0.340999127418*t301*t5955;
  t6079 = t3415*t5990;
  t6087 = t3351*t6021;
  t6088 = t6077 + t6079 + t6087;
  t6045 = t2651*t5955;
  t6047 = t2934*t5990;
  t6051 = t397*t6021;
  t6058 = t6045 + t6047 + t6051;
  t6105 = -1.*t3489*t6072;
  t6107 = t3309*t6088;
  t6110 = t6105 + t6107;
  t6076 = t3309*t6072;
  t6092 = t3489*t6088;
  t6100 = t6076 + t6092;
  t6185 = -0.340999127418*t447*t4195;
  t6192 = -0.134322983001*t447*t4215;
  t6201 = 0.366501*t2003*t4232;
  t6204 = t6185 + t6192 + t6201;
  t6207 = -0.8656776547239999*t447*t4195;
  t6209 = -0.340999127418*t447*t4215;
  t6210 = 0.930418*t2003*t4232;
  t6215 = t6207 + t6209 + t6210;
  t6241 = -0.930418*t2003*t4195;
  t6244 = -0.366501*t2003*t4215;
  t6247 = -1.000000637725*t447*t4232;
  t6249 = t6241 + t6244 + t6247;
  t6303 = t3570*t6204;
  t6305 = 0.340999127418*t301*t6215;
  t6310 = t3502*t6249;
  t6313 = t6303 + t6305 + t6310;
  t6320 = 0.340999127418*t301*t6204;
  t6323 = t3415*t6215;
  t6328 = t3351*t6249;
  t6354 = t6320 + t6323 + t6328;
  t6262 = t2651*t6204;
  t6266 = t2934*t6215;
  t6277 = t397*t6249;
  t6295 = t6262 + t6266 + t6277;
  t6374 = -1.*t3489*t6313;
  t6376 = t3309*t6354;
  t6377 = t6374 + t6376;
  t6315 = t3309*t6313;
  t6361 = t3489*t6354;
  t6363 = t6315 + t6361;
  t5711 = -0.366501*t5710;
  t5725 = -0.930418*t5724;
  t5727 = t5711 + t5725;
  t5733 = var2[18]*t5727;
  t5737 = -1.*t2651*t5710;
  t5738 = -1.*t2934*t5724;
  t5747 = -1.*t397*t5746;
  t5750 = t5737 + t5738 + t5747;
  t5752 = var2[17]*t5750;
  t5780 = var2[5]*t5771;
  t5850 = t3290*t5847;
  t5862 = -1.*t5854*t3732;
  t5868 = t5850 + t5862;
  t5872 = var2[4]*t5868;
  t5880 = -1.*t5771*t3249;
  t5885 = t3290*t5854;
  t5892 = t5847*t3732;
  t5898 = t5885 + t5892;
  t5902 = t17*t5898;
  t5907 = t5880 + t5902;
  t5917 = var2[3]*t5907;
  t5921 = t5733 + t5752 + t5780 + t5872 + t5917;
  t5960 = -0.366501*t5955;
  t5991 = -0.930418*t5990;
  t5995 = t5960 + t5991;
  t5999 = var2[18]*t5995;
  t6000 = -1.*t2651*t5955;
  t6001 = -1.*t2934*t5990;
  t6024 = -1.*t397*t6021;
  t6028 = t6000 + t6001 + t6024;
  t6030 = var2[17]*t6028;
  t6063 = var2[5]*t6058;
  t6102 = t3290*t6100;
  t6111 = -1.*t6110*t3732;
  t6122 = t6102 + t6111;
  t6143 = var2[4]*t6122;
  t6147 = -1.*t6058*t3249;
  t6150 = t3290*t6110;
  t6152 = t6100*t3732;
  t6153 = t6150 + t6152;
  t6157 = t17*t6153;
  t6164 = t6147 + t6157;
  t6165 = var2[3]*t6164;
  t6171 = t5999 + t6030 + t6063 + t6143 + t6165;
  t6205 = -0.366501*t6204;
  t6220 = -0.930418*t6215;
  t6222 = t6205 + t6220;
  t6236 = var2[18]*t6222;
  t6237 = -1.*t2651*t6204;
  t6240 = -1.*t2934*t6215;
  t6253 = -1.*t397*t6249;
  t6254 = t6237 + t6240 + t6253;
  t6256 = var2[17]*t6254;
  t6302 = var2[5]*t6295;
  t6365 = t3290*t6363;
  t6379 = -1.*t6377*t3732;
  t6384 = t6365 + t6379;
  t6386 = var2[4]*t6384;
  t6387 = -1.*t6295*t3249;
  t6390 = t3290*t6377;
  t6392 = t6363*t3732;
  t6397 = t6390 + t6392;
  t6399 = t17*t6397;
  t6403 = t6387 + t6399;
  t6407 = var2[3]*t6403;
  t6408 = t6236 + t6256 + t6302 + t6386 + t6407;
  t6451 = 0.25915542260700003*t575;
  t6454 = 0.25915550358356343*t916;
  t6455 = t6451 + t6454;
  t6457 = 0.6579050807260001*t575;
  t6460 = 0.6579052862972049*t916;
  t6461 = t6457 + t6460;
  t6466 = -0.7071072209449999*t575;
  t6469 = 0.7071074509398115*t916;
  t6475 = t6466 + t6469;
  t6456 = t2677*t6455;
  t6462 = -0.340999127418*t2025*t6461;
  t6481 = t2879*t6475;
  t6482 = t6456 + t6462 + t6481;
  t6487 = -0.340999127418*t2025*t6455;
  t6490 = t2959*t6461;
  t6498 = t3141*t6475;
  t6502 = t6487 + t6490 + t6498;
  t6518 = t1444*t6455;
  t6519 = t573*t6461;
  t6527 = t2029*t6475;
  t6528 = t6518 + t6519 + t6527;
  t6619 = t3351*t6528;
  t6622 = 0.340999127418*t301*t6482;
  t6625 = t3415*t6502;
  t6630 = t6619 + t6622 + t6625;
  t6640 = t3502*t6528;
  t6641 = t3570*t6482;
  t6643 = 0.340999127418*t301*t6502;
  t6662 = t6640 + t6641 + t6643;
  t6571 = t397*t6528;
  t6585 = t2651*t6482;
  t6586 = t2934*t6502;
  t6588 = t6571 + t6585 + t6586;
  t6681 = t3309*t6630;
  t6682 = -1.*t3489*t6662;
  t6684 = t6681 + t6682;
  t6639 = t3489*t6630;
  t6663 = t3309*t6662;
  t6670 = t6639 + t6663;
  t6733 = -0.6579052862972049*t916;
  t6743 = t6457 + t6733;
  t6766 = -0.25915550358356343*t916;
  t6779 = t6451 + t6766;
  t6791 = 0.7071072209449999*t575;
  t6792 = t6791 + t6469;
  t6765 = -0.340999127418*t2025*t6743;
  t6784 = t2677*t6779;
  t6801 = t2879*t6792;
  t6804 = t6765 + t6784 + t6801;
  t6815 = t2959*t6743;
  t6816 = -0.340999127418*t2025*t6779;
  t6827 = t3141*t6792;
  t6831 = t6815 + t6816 + t6827;
  t6843 = t573*t6743;
  t6849 = t1444*t6779;
  t6851 = t2029*t6792;
  t6857 = t6843 + t6849 + t6851;
  t6929 = t3351*t6857;
  t6930 = 0.340999127418*t301*t6804;
  t6932 = t3415*t6831;
  t6933 = t6929 + t6930 + t6932;
  t6936 = t3502*t6857;
  t6938 = t3570*t6804;
  t6943 = 0.340999127418*t301*t6831;
  t6944 = t6936 + t6938 + t6943;
  t6878 = t397*t6857;
  t6896 = t2651*t6804;
  t6900 = t2934*t6831;
  t6905 = t6878 + t6896 + t6900;
  t6954 = t3309*t6933;
  t6958 = -1.*t3489*t6944;
  t6960 = t6954 + t6958;
  t6935 = t3489*t6933;
  t6946 = t3309*t6944;
  t6948 = t6935 + t6946;
  t7006 = -1.3877787807814457e-17*t2677*t916;
  t7008 = -1.8929254131827554e-17*t2025*t916;
  t7011 = 0. + t7006 + t7008;
  t7016 = 5.551115123125783e-17*t2959*t916;
  t7018 = 4.7323135329568886e-18*t2025*t916;
  t7023 = 0. + t7016 + t7018;
  t7046 = 5.551115123125783e-17*t573*t916;
  t7047 = -1.3877787807814457e-17*t1444*t916;
  t7048 = 0. + t7046 + t7047;
  t7089 = t3570*t7011;
  t7090 = 0.340999127418*t301*t7023;
  t7093 = t3502*t7048;
  t7094 = t7089 + t7090 + t7093;
  t7098 = 0.340999127418*t301*t7011;
  t7102 = t3415*t7023;
  t7104 = t3351*t7048;
  t7107 = t7098 + t7102 + t7104;
  t7061 = t2651*t7011;
  t7063 = t2934*t7023;
  t7071 = t397*t7048;
  t7079 = t7061 + t7063 + t7071;
  t7115 = -1.*t3489*t7094;
  t7117 = t3309*t7107;
  t7118 = t7115 + t7117;
  t7097 = t3309*t7094;
  t7109 = t3489*t7107;
  t7111 = t7097 + t7109;
  t6485 = -0.366501*t6482;
  t6513 = -0.930418*t6502;
  t6515 = t6485 + t6513;
  t6517 = var2[18]*t6515;
  t6547 = -1.*t397*t6528;
  t6556 = -1.*t2651*t6482;
  t6562 = -1.*t2934*t6502;
  t6565 = t6547 + t6556 + t6562;
  t6566 = var2[17]*t6565;
  t6597 = var2[5]*t6588;
  t6604 = -0.930418*t6455;
  t6608 = 0.366501*t6461;
  t6611 = t6604 + t6608;
  t6616 = var2[19]*t6611;
  t6679 = t3290*t6670;
  t6685 = -1.*t6684*t3732;
  t6689 = t6679 + t6685;
  t6692 = var2[4]*t6689;
  t6695 = -1.*t6588*t3249;
  t6696 = t3290*t6684;
  t6701 = t6670*t3732;
  t6703 = t6696 + t6701;
  t6705 = t17*t6703;
  t6720 = t6695 + t6705;
  t6721 = var2[3]*t6720;
  t6722 = t6517 + t6566 + t6597 + t6616 + t6692 + t6721;
  t6809 = -0.366501*t6804;
  t6833 = -0.930418*t6831;
  t6835 = t6809 + t6833;
  t6838 = var2[18]*t6835;
  t6864 = -1.*t397*t6857;
  t6866 = -1.*t2651*t6804;
  t6871 = -1.*t2934*t6831;
  t6872 = t6864 + t6866 + t6871;
  t6873 = var2[17]*t6872;
  t6912 = var2[5]*t6905;
  t6922 = 0.366501*t6743;
  t6923 = -0.930418*t6779;
  t6925 = t6922 + t6923;
  t6928 = var2[19]*t6925;
  t6953 = t3290*t6948;
  t6962 = -1.*t6960*t3732;
  t6963 = t6953 + t6962;
  t6965 = var2[4]*t6963;
  t6971 = -1.*t6905*t3249;
  t6979 = t3290*t6960;
  t6980 = t6948*t3732;
  t6982 = t6979 + t6980;
  t6984 = t17*t6982;
  t6988 = t6971 + t6984;
  t6996 = var2[3]*t6988;
  t6997 = t6838 + t6873 + t6912 + t6928 + t6965 + t6996;
  t7004 = 3.325703601397834e-17*var2[19]*t916;
  t7013 = -0.366501*t7011;
  t7028 = -0.930418*t7023;
  t7030 = t7013 + t7028;
  t7033 = var2[18]*t7030;
  t7042 = -1.*t2651*t7011;
  t7044 = -1.*t2934*t7023;
  t7051 = -1.*t397*t7048;
  t7052 = t7042 + t7044 + t7051;
  t7053 = var2[17]*t7052;
  t7084 = var2[5]*t7079;
  t7112 = t3290*t7111;
  t7120 = -1.*t7118*t3732;
  t7121 = t7112 + t7120;
  t7123 = var2[4]*t7121;
  t7137 = -1.*t7079*t3249;
  t7146 = t3290*t7118;
  t7147 = t7111*t3732;
  t7154 = t7146 + t7147;
  t7156 = t17*t7154;
  t7157 = t7137 + t7156;
  t7162 = var2[3]*t7157;
  t7163 = t7004 + t7033 + t7053 + t7084 + t7123 + t7162;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0.004296*t3814*var2[3] + 0.000309*t4075*var2[3] - 0.001393*t4539*var2[3];
  p_output1[13]=-0.001393*t3814*var2[3] - 0.00004*t4075*var2[3] + 0.036157*t4539*var2[3];
  p_output1[14]=0.000309*t3814*var2[3] + 0.038903*t4075*var2[3] - 0.00004*t4539*var2[3];
  p_output1[15]=0.004296*t4653 + 0.000309*t4709 - 0.001393*t4755;
  p_output1[16]=-0.001393*t4653 - 0.00004*t4709 + 0.036157*t4755;
  p_output1[17]=0.000309*t4653 + 0.038903*t4709 - 0.00004*t4755;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0.004296*t4867 + 0.000309*t4948 - 0.001393*t5030;
  p_output1[52]=-0.001393*t4867 - 0.00004*t4948 + 0.036157*t5030;
  p_output1[53]=0.000309*t4867 + 0.038903*t4948 - 0.00004*t5030;
  p_output1[54]=0.004296*t5299 + 0.000309*t5456 - 0.001393*t5645;
  p_output1[55]=-0.001393*t5299 - 0.00004*t5456 + 0.036157*t5645;
  p_output1[56]=0.000309*t5299 + 0.038903*t5456 - 0.00004*t5645;
  p_output1[57]=0.004296*t5921 + 0.000309*t6171 - 0.001393*t6408;
  p_output1[58]=-0.001393*t5921 - 0.00004*t6171 + 0.036157*t6408;
  p_output1[59]=0.000309*t5921 + 0.038903*t6171 - 0.00004*t6408;
  p_output1[60]=0.004296*t6722 - 0.001393*t6997 + 0.000309*t7163;
  p_output1[61]=-0.001393*t6722 + 0.036157*t6997 - 0.00004*t7163;
  p_output1[62]=0.000309*t6722 - 0.00004*t6997 + 0.038903*t7163;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jq_AMBody_right_knee_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
