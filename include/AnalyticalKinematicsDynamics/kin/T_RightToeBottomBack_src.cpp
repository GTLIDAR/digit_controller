/*
 * Automatically Generated from Mathematica.
 * Thu 10 Nov 2022 14:43:14 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "T_RightToeBottomBack_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t152;
  double t204;
  double t207;
  double t205;
  double t208;
  double t184;
  double t195;
  double t198;
  double t222;
  double t206;
  double t212;
  double t213;
  double t199;
  double t230;
  double t238;
  double t240;
  double t120;
  double t164;
  double t174;
  double t214;
  double t241;
  double t242;
  double t286;
  double t305;
  double t308;
  double t464;
  double t483;
  double t486;
  double t176;
  double t178;
  double t182;
  double t265;
  double t266;
  double t275;
  double t313;
  double t314;
  double t352;
  double t355;
  double t416;
  double t418;
  double t429;
  double t441;
  double t449;
  double t451;
  double t516;
  double t521;
  double t523;
  double t535;
  double t543;
  double t552;
  double t558;
  double t559;
  double t560;
  double t565;
  double t622;
  double t625;
  double t638;
  double t101;
  double t106;
  double t121;
  double t123;
  double t337;
  double t338;
  double t340;
  double t455;
  double t487;
  double t492;
  double t571;
  double t574;
  double t644;
  double t645;
  double t648;
  double t649;
  double t652;
  double t659;
  double t683;
  double t685;
  double t723;
  double t727;
  double t730;
  double t735;
  double t758;
  double t775;
  double t776;
  double t799;
  double t949;
  double t954;
  double t965;
  double t107;
  double t110;
  double t576;
  double t705;
  double t708;
  double t720;
  double t803;
  double t805;
  double t858;
  double t864;
  double t867;
  double t878;
  double t880;
  double t914;
  double t920;
  double t934;
  double t1014;
  double t1015;
  double t1023;
  double t1024;
  double t1030;
  double t1032;
  double t1035;
  double t1038;
  double t1043;
  double t1049;
  double t1085;
  double t1086;
  double t1100;
  double t67;
  double t70;
  double t71;
  double t86;
  double t97;
  double t102;
  double t104;
  double t816;
  double t833;
  double t850;
  double t948;
  double t988;
  double t997;
  double t1080;
  double t1081;
  double t1108;
  double t1132;
  double t1133;
  double t1135;
  double t1136;
  double t1158;
  double t1163;
  double t1164;
  double t1207;
  double t1210;
  double t1213;
  double t1216;
  double t1217;
  double t1222;
  double t1240;
  double t1247;
  double t99;
  double t100;
  double t1083;
  double t1177;
  double t1178;
  double t1198;
  double t1254;
  double t1258;
  double t1268;
  double t1269;
  double t1279;
  double t1286;
  double t1309;
  double t1311;
  double t1312;
  double t1314;
  double t1260;
  double t1332;
  double t1337;
  double t1342;
  double t1343;
  double t1346;
  double t1348;
  double t1362;
  double t1370;
  double t1372;
  double t1379;
  double t1399;
  double t82;
  double t87;
  double t92;
  double t1513;
  double t1519;
  double t1521;
  double t1526;
  double t1527;
  double t1533;
  double t1524;
  double t1539;
  double t1542;
  double t1550;
  double t1554;
  double t1573;
  double t1510;
  double t1544;
  double t1580;
  double t1581;
  double t1588;
  double t1598;
  double t1599;
  double t1601;
  double t1614;
  double t1615;
  double t1622;
  double t1632;
  double t1585;
  double t1602;
  double t1634;
  double t1636;
  double t1652;
  double t1655;
  double t1661;
  double t1665;
  double t1693;
  double t1697;
  double t1710;
  double t1714;
  double t1639;
  double t1687;
  double t1724;
  double t1726;
  double t1732;
  double t1739;
  double t1755;
  double t1758;
  double t1765;
  double t1770;
  double t1771;
  double t1773;
  double t1266;
  double t1267;
  double t1730;
  double t1759;
  double t1781;
  double t1790;
  double t1793;
  double t1796;
  double t1799;
  double t1800;
  double t1802;
  double t1804;
  double t1805;
  double t1810;
  double t1320;
  double t1331;
  double t1400;
  double t1405;
  double t1791;
  double t1801;
  double t1812;
  double t1813;
  double t1412;
  double t1413;
  double t1832;
  double t1834;
  double t1836;
  double t1837;
  double t1421;
  double t1422;
  double t1854;
  double t1859;
  double t1861;
  double t1863;
  double t1443;
  double t1444;
  double t1452;
  double t1455;
  double t1459;
  double t1481;
  double t1904;
  double t1921;
  double t1928;
  double t1931;
  double t1933;
  double t1934;
  double t1898;
  double t1930;
  double t1936;
  double t1938;
  double t1948;
  double t1956;
  double t1959;
  double t1960;
  double t1968;
  double t1972;
  double t1974;
  double t1975;
  double t1939;
  double t1965;
  double t1978;
  double t1979;
  double t1983;
  double t1985;
  double t1986;
  double t1987;
  double t1994;
  double t1995;
  double t1998;
  double t1999;
  double t1981;
  double t1991;
  double t2015;
  double t2019;
  double t2024;
  double t2025;
  double t2031;
  double t2032;
  double t2041;
  double t2045;
  double t2047;
  double t2050;
  double t2021;
  double t2034;
  double t2053;
  double t2054;
  double t2062;
  double t2066;
  double t2073;
  double t2074;
  double t2079;
  double t2083;
  double t2085;
  double t2087;
  double t2059;
  double t2075;
  double t2096;
  double t2099;
  double t2108;
  double t2110;
  double t2125;
  double t2131;
  double t2144;
  double t2153;
  double t2154;
  double t2157;
  double t1409;
  double t1416;
  double t1436;
  double t1439;
  double t1451;
  double t1458;
  double t1483;
  double t1487;
  double t1877;
  double t1879;
  double t1880;
  double t1882;
  double t1886;
  double t1889;
  double t1891;
  double t1892;
  double t2165;
  double t2166;
  double t2170;
  double t2172;
  double t2176;
  double t2177;
  double t2181;
  double t2182;
  double t1259;
  double t1315;
  double t1392;
  double t1396;
  double t1815;
  double t1839;
  double t1864;
  double t1870;
  double t2102;
  double t2134;
  double t2158;
  double t2159;
  double t2525;
  double t2536;
  double t2556;
  double t2249;
  double t2251;
  double t2256;
  double t2262;
  double t2278;
  double t2281;
  double t2289;
  double t2290;
  double t2291;
  double t2293;
  double t2297;
  double t2299;
  double t2303;
  double t2311;
  double t2322;
  double t2332;
  double t2336;
  double t2339;
  double t2346;
  double t2347;
  double t2348;
  double t2350;
  double t2353;
  double t2354;
  double t2360;
  double t2363;
  double t2369;
  double t2370;
  double t2372;
  double t2373;
  double t2379;
  double t2381;
  double t2387;
  double t2389;
  double t2391;
  double t2393;
  double t2394;
  double t2396;
  double t2409;
  double t2414;
  double t2415;
  double t2418;
  double t2430;
  double t2436;
  double t2446;
  double t2448;
  double t2452;
  double t2453;
  double t2454;
  double t2457;
  double t2460;
  double t2465;
  double t2470;
  double t2471;
  double t2473;
  double t2474;
  double t2475;
  double t2478;
  double t2493;
  double t2496;
  double t2497;
  double t2498;
  double t2500;
  double t2506;
  double t2507;
  double t2512;
  double t2520;
  double t2521;
  double t2530;
  double t2531;
  double t2537;
  double t2541;
  double t2544;
  double t2548;
  double t2554;
  double t2557;
  double t2558;
  double t2559;
  double t2561;
  double t2563;
  double t2565;
  double t2567;
  double t2570;
  double t2572;
  double t2576;
  double t2578;
  double t2582;
  t152 = Cos(var1[3]);
  t204 = Cos(var1[5]);
  t207 = Sin(var1[3]);
  t205 = Sin(var1[4]);
  t208 = Sin(var1[5]);
  t184 = Cos(var1[14]);
  t195 = -1.*t184;
  t198 = 1. + t195;
  t222 = Cos(var1[13]);
  t206 = t152*t204*t205;
  t212 = t207*t208;
  t213 = t206 + t212;
  t199 = Sin(var1[13]);
  t230 = -1.*t204*t207;
  t238 = t152*t205*t208;
  t240 = t230 + t238;
  t120 = Sin(var1[15]);
  t164 = Cos(var1[4]);
  t174 = Sin(var1[14]);
  t214 = -1.*t199*t213;
  t241 = t222*t240;
  t242 = t214 + t241;
  t286 = t222*t213;
  t305 = t199*t240;
  t308 = t286 + t305;
  t464 = Cos(var1[15]);
  t483 = -1.*t464;
  t486 = 1. + t483;
  t176 = -0.366501*t174;
  t178 = 0. + t176;
  t182 = t152*t164*t178;
  t265 = 0.340999127418*t198*t242;
  t266 = -0.134322983001*t198;
  t275 = 1. + t266;
  t313 = t275*t308;
  t314 = t182 + t265 + t313;
  t352 = 0.930418*t174;
  t355 = 0. + t352;
  t416 = t152*t164*t355;
  t418 = -0.8656776547239999*t198;
  t429 = 1. + t418;
  t441 = t429*t242;
  t449 = 0.340999127418*t198*t308;
  t451 = t416 + t441 + t449;
  t516 = -1.000000637725*t198;
  t521 = 1. + t516;
  t523 = t521*t152*t164;
  t535 = -0.930418*t174;
  t543 = 0. + t535;
  t552 = t543*t242;
  t558 = 0.366501*t174;
  t559 = 0. + t558;
  t560 = t559*t308;
  t565 = t523 + t552 + t560;
  t622 = Cos(var1[16]);
  t625 = -1.*t622;
  t638 = 1. + t625;
  t101 = Sin(var1[17]);
  t106 = Sin(var1[16]);
  t121 = 0.930418*t120;
  t123 = 0. + t121;
  t337 = t123*t314;
  t338 = 0.366501*t120;
  t340 = 0. + t338;
  t455 = t340*t451;
  t487 = -1.000000637725*t486;
  t492 = 1. + t487;
  t571 = t492*t565;
  t574 = t337 + t455 + t571;
  t644 = -0.8656776547239999*t486;
  t645 = 1. + t644;
  t648 = t645*t314;
  t649 = -0.340999127418*t486*t451;
  t652 = -0.930418*t120;
  t659 = 0. + t652;
  t683 = t659*t565;
  t685 = t648 + t649 + t683;
  t723 = -0.340999127418*t486*t314;
  t727 = -0.134322983001*t486;
  t730 = 1. + t727;
  t735 = t730*t451;
  t758 = -0.366501*t120;
  t775 = 0. + t758;
  t776 = t775*t565;
  t799 = t723 + t735 + t776;
  t949 = Cos(var1[17]);
  t954 = -1.*t949;
  t965 = 1. + t954;
  t107 = 0.366501*t106;
  t110 = 0. + t107;
  t576 = t110*t574;
  t705 = -0.340999127418*t638*t685;
  t708 = -0.134322983001*t638;
  t720 = 1. + t708;
  t803 = t720*t799;
  t805 = t576 + t705 + t803;
  t858 = 0.930418*t106;
  t864 = 0. + t858;
  t867 = t864*t574;
  t878 = -0.8656776547239999*t638;
  t880 = 1. + t878;
  t914 = t880*t685;
  t920 = -0.340999127418*t638*t799;
  t934 = t867 + t914 + t920;
  t1014 = -1.000000637725*t638;
  t1015 = 1. + t1014;
  t1023 = t1015*t574;
  t1024 = -0.930418*t106;
  t1030 = 0. + t1024;
  t1032 = t1030*t685;
  t1035 = -0.366501*t106;
  t1038 = 0. + t1035;
  t1043 = t1038*t799;
  t1049 = t1023 + t1032 + t1043;
  t1085 = Cos(var1[18]);
  t1086 = -1.*t1085;
  t1100 = 1. + t1086;
  t67 = Cos(var1[19]);
  t70 = -1.*t67;
  t71 = 1. + t70;
  t86 = Sin(var1[19]);
  t97 = Sin(var1[18]);
  t102 = -0.366501*t101;
  t104 = 0. + t102;
  t816 = t104*t805;
  t833 = -0.930418*t101;
  t850 = 0. + t833;
  t948 = t850*t934;
  t988 = -1.000000637725*t965;
  t997 = 1. + t988;
  t1080 = t997*t1049;
  t1081 = t816 + t948 + t1080;
  t1108 = -0.134322983001*t965;
  t1132 = 1. + t1108;
  t1133 = t1132*t805;
  t1135 = -0.340999127418*t965*t934;
  t1136 = 0.366501*t101;
  t1158 = 0. + t1136;
  t1163 = t1158*t1049;
  t1164 = t1133 + t1135 + t1163;
  t1207 = -0.340999127418*t965*t805;
  t1210 = -0.8656776547239999*t965;
  t1213 = 1. + t1210;
  t1216 = t1213*t934;
  t1217 = 0.930418*t101;
  t1222 = 0. + t1217;
  t1240 = t1222*t1049;
  t1247 = t1207 + t1216 + t1240;
  t99 = 0.930418*t97;
  t100 = 0. + t99;
  t1083 = t100*t1081;
  t1177 = -0.340999127418*t1100*t1164;
  t1178 = -0.8656776547239999*t1100;
  t1198 = 1. + t1178;
  t1254 = t1198*t1247;
  t1258 = t1083 + t1177 + t1254;
  t1268 = 0.366501*t97;
  t1269 = 0. + t1268;
  t1279 = t1269*t1081;
  t1286 = -0.134322983001*t1100;
  t1309 = 1. + t1286;
  t1311 = t1309*t1164;
  t1312 = -0.340999127418*t1100*t1247;
  t1314 = t1279 + t1311 + t1312;
  t1260 = 0.175248972904*t71;
  t1332 = -1.000000637725*t1100;
  t1337 = 1. + t1332;
  t1342 = t1337*t1081;
  t1343 = -0.366501*t97;
  t1346 = 0. + t1343;
  t1348 = t1346*t1164;
  t1362 = -0.930418*t97;
  t1370 = 0. + t1362;
  t1372 = t1370*t1247;
  t1379 = t1342 + t1348 + t1372;
  t1399 = 0.120666640478*t71;
  t82 = 0.444895486988*t71;
  t87 = -0.218018*t86;
  t92 = t82 + t87;
  t1513 = t204*t207*t205;
  t1519 = -1.*t152*t208;
  t1521 = t1513 + t1519;
  t1526 = t152*t204;
  t1527 = t207*t205*t208;
  t1533 = t1526 + t1527;
  t1524 = -1.*t199*t1521;
  t1539 = t222*t1533;
  t1542 = t1524 + t1539;
  t1550 = t222*t1521;
  t1554 = t199*t1533;
  t1573 = t1550 + t1554;
  t1510 = t164*t178*t207;
  t1544 = 0.340999127418*t198*t1542;
  t1580 = t275*t1573;
  t1581 = t1510 + t1544 + t1580;
  t1588 = t164*t355*t207;
  t1598 = t429*t1542;
  t1599 = 0.340999127418*t198*t1573;
  t1601 = t1588 + t1598 + t1599;
  t1614 = t521*t164*t207;
  t1615 = t543*t1542;
  t1622 = t559*t1573;
  t1632 = t1614 + t1615 + t1622;
  t1585 = t123*t1581;
  t1602 = t340*t1601;
  t1634 = t492*t1632;
  t1636 = t1585 + t1602 + t1634;
  t1652 = t645*t1581;
  t1655 = -0.340999127418*t486*t1601;
  t1661 = t659*t1632;
  t1665 = t1652 + t1655 + t1661;
  t1693 = -0.340999127418*t486*t1581;
  t1697 = t730*t1601;
  t1710 = t775*t1632;
  t1714 = t1693 + t1697 + t1710;
  t1639 = t110*t1636;
  t1687 = -0.340999127418*t638*t1665;
  t1724 = t720*t1714;
  t1726 = t1639 + t1687 + t1724;
  t1732 = t864*t1636;
  t1739 = t880*t1665;
  t1755 = -0.340999127418*t638*t1714;
  t1758 = t1732 + t1739 + t1755;
  t1765 = t1015*t1636;
  t1770 = t1030*t1665;
  t1771 = t1038*t1714;
  t1773 = t1765 + t1770 + t1771;
  t1266 = 0.553471*t86;
  t1267 = t1260 + t1266;
  t1730 = t104*t1726;
  t1759 = t850*t1758;
  t1781 = t997*t1773;
  t1790 = t1730 + t1759 + t1781;
  t1793 = t1132*t1726;
  t1796 = -0.340999127418*t965*t1758;
  t1799 = t1158*t1773;
  t1800 = t1793 + t1796 + t1799;
  t1802 = -0.340999127418*t965*t1726;
  t1804 = t1213*t1758;
  t1805 = t1222*t1773;
  t1810 = t1802 + t1804 + t1805;
  t1320 = -0.353861996165*t71;
  t1331 = 1. + t1320;
  t1400 = 0.803828*t86;
  t1405 = t1399 + t1400;
  t1791 = t100*t1790;
  t1801 = -0.340999127418*t1100*t1800;
  t1812 = t1198*t1810;
  t1813 = t1791 + t1801 + t1812;
  t1412 = -0.952469601425*t71;
  t1413 = 1. + t1412;
  t1832 = t1269*t1790;
  t1834 = t1309*t1800;
  t1836 = -0.340999127418*t1100*t1810;
  t1837 = t1832 + t1834 + t1836;
  t1421 = -0.553471*t86;
  t1422 = t1260 + t1421;
  t1854 = t1337*t1790;
  t1859 = t1346*t1800;
  t1861 = t1370*t1810;
  t1863 = t1854 + t1859 + t1861;
  t1443 = -0.693671301908*t71;
  t1444 = 1. + t1443;
  t1452 = -0.803828*t86;
  t1455 = t1399 + t1452;
  t1459 = 0.218018*t86;
  t1481 = t82 + t1459;
  t1904 = -1.*t164*t204*t199;
  t1921 = t222*t164*t208;
  t1928 = t1904 + t1921;
  t1931 = t222*t164*t204;
  t1933 = t164*t199*t208;
  t1934 = t1931 + t1933;
  t1898 = -1.*t178*t205;
  t1930 = 0.340999127418*t198*t1928;
  t1936 = t275*t1934;
  t1938 = t1898 + t1930 + t1936;
  t1948 = -1.*t355*t205;
  t1956 = t429*t1928;
  t1959 = 0.340999127418*t198*t1934;
  t1960 = t1948 + t1956 + t1959;
  t1968 = -1.*t521*t205;
  t1972 = t543*t1928;
  t1974 = t559*t1934;
  t1975 = t1968 + t1972 + t1974;
  t1939 = t123*t1938;
  t1965 = t340*t1960;
  t1978 = t492*t1975;
  t1979 = t1939 + t1965 + t1978;
  t1983 = t645*t1938;
  t1985 = -0.340999127418*t486*t1960;
  t1986 = t659*t1975;
  t1987 = t1983 + t1985 + t1986;
  t1994 = -0.340999127418*t486*t1938;
  t1995 = t730*t1960;
  t1998 = t775*t1975;
  t1999 = t1994 + t1995 + t1998;
  t1981 = t110*t1979;
  t1991 = -0.340999127418*t638*t1987;
  t2015 = t720*t1999;
  t2019 = t1981 + t1991 + t2015;
  t2024 = t864*t1979;
  t2025 = t880*t1987;
  t2031 = -0.340999127418*t638*t1999;
  t2032 = t2024 + t2025 + t2031;
  t2041 = t1015*t1979;
  t2045 = t1030*t1987;
  t2047 = t1038*t1999;
  t2050 = t2041 + t2045 + t2047;
  t2021 = t104*t2019;
  t2034 = t850*t2032;
  t2053 = t997*t2050;
  t2054 = t2021 + t2034 + t2053;
  t2062 = t1132*t2019;
  t2066 = -0.340999127418*t965*t2032;
  t2073 = t1158*t2050;
  t2074 = t2062 + t2066 + t2073;
  t2079 = -0.340999127418*t965*t2019;
  t2083 = t1213*t2032;
  t2085 = t1222*t2050;
  t2087 = t2079 + t2083 + t2085;
  t2059 = t100*t2054;
  t2075 = -0.340999127418*t1100*t2074;
  t2096 = t1198*t2087;
  t2099 = t2059 + t2075 + t2096;
  t2108 = t1269*t2054;
  t2110 = t1309*t2074;
  t2125 = -0.340999127418*t1100*t2087;
  t2131 = t2108 + t2110 + t2125;
  t2144 = t1337*t2054;
  t2153 = t1346*t2074;
  t2154 = t1370*t2087;
  t2157 = t2144 + t2153 + t2154;
  t1409 = t1405*t1258;
  t1416 = t1413*t1314;
  t1436 = t1422*t1379;
  t1439 = t1409 + t1416 + t1436;
  t1451 = t1444*t1258;
  t1458 = t1455*t1314;
  t1483 = t1481*t1379;
  t1487 = t1451 + t1458 + t1483;
  t1877 = t1405*t1813;
  t1879 = t1413*t1837;
  t1880 = t1422*t1863;
  t1882 = t1877 + t1879 + t1880;
  t1886 = t1444*t1813;
  t1889 = t1455*t1837;
  t1891 = t1481*t1863;
  t1892 = t1886 + t1889 + t1891;
  t2165 = t1405*t2099;
  t2166 = t1413*t2131;
  t2170 = t1422*t2157;
  t2172 = t2165 + t2166 + t2170;
  t2176 = t1444*t2099;
  t2177 = t1455*t2131;
  t2181 = t1481*t2157;
  t2182 = t2176 + t2177 + t2181;
  t1259 = t92*t1258;
  t1315 = t1267*t1314;
  t1392 = t1331*t1379;
  t1396 = t1259 + t1315 + t1392;
  t1815 = t92*t1813;
  t1839 = t1267*t1837;
  t1864 = t1331*t1863;
  t1870 = t1815 + t1839 + t1864;
  t2102 = t92*t2099;
  t2134 = t1267*t2131;
  t2158 = t1331*t2157;
  t2159 = t2102 + t2134 + t2158;
  t2525 = -0.120666640478*t71;
  t2536 = -0.444895486988*t71;
  t2556 = -0.175248972904*t71;
  t2249 = -0.04500040093286238*t198;
  t2251 = -0.07877663122399998*t543;
  t2256 = 0.031030906668*t559;
  t2262 = 0. + t2249 + t2251 + t2256;
  t2278 = -0.091*t199;
  t2281 = 0. + t2278;
  t2289 = -1.*t222;
  t2290 = 1. + t2289;
  t2291 = -0.091*t2290;
  t2293 = 0. + t2291;
  t2297 = 1.296332362046933e-7*var1[14];
  t2299 = -0.07877668146182712*t198;
  t2303 = -0.045000372235*t355;
  t2311 = t2297 + t2299 + t2303;
  t2322 = 3.2909349868922137e-7*var1[14];
  t2332 = 0.03103092645718495*t198;
  t2336 = -0.045000372235*t178;
  t2339 = t2322 + t2332 + t2336;
  t2346 = -1.296332362046933e-7*var1[15];
  t2347 = -0.14128592423750855*t486;
  t2348 = -0.045000372235*t659;
  t2350 = t2346 + t2347 + t2348;
  t2353 = 3.2909349868922137e-7*var1[15];
  t2354 = -0.055653945343889656*t486;
  t2360 = -0.045000372235*t775;
  t2363 = t2353 + t2354 + t2360;
  t2369 = -0.04500040093286238*t486;
  t2370 = -0.055653909852*t340;
  t2372 = -0.141285834136*t123;
  t2373 = 0. + t2369 + t2370 + t2372;
  t2379 = 0.039853038461262744*t638;
  t2381 = -0.22023459268999998*t1030;
  t2387 = -0.086752619205*t1038;
  t2389 = 0. + t2379 + t2381 + t2387;
  t2391 = 6.295460977284962e-8*var1[16];
  t2393 = -0.22023473313910558*t638;
  t2394 = 0.039853013046*t864;
  t2396 = t2391 + t2393 + t2394;
  t2409 = -1.5981976069815686e-7*var1[16];
  t2414 = -0.08675267452931407*t638;
  t2415 = 0.039853013046*t110;
  t2418 = t2409 + t2414 + t2415;
  t2430 = 5.7930615939377813e-8*var1[17];
  t2436 = -0.23261833304643187*t965;
  t2446 = -0.262809976934*t1158;
  t2448 = t2430 + t2436 + t2446;
  t2452 = -2.281945176511838e-8*var1[17];
  t2453 = -0.5905366811997648*t965;
  t2454 = -0.262809976934*t1222;
  t2457 = t2452 + t2453 + t2454;
  t2460 = -0.26281014453449253*t965;
  t2465 = -0.5905363046000001*t850;
  t2470 = -0.23261818470000004*t104;
  t2471 = 0. + t2460 + t2465 + t2470;
  t2473 = 0.06199697675299678*t1100;
  t2474 = -0.823260828522*t1370;
  t2475 = -0.324290713329*t1346;
  t2478 = 0. + t2473 + t2474 + t2475;
  t2493 = 7.500378623168247e-8*var1[18];
  t2496 = -0.32429092013729516*t1100;
  t2497 = 0.061996937216*t1269;
  t2498 = t2493 + t2496 + t2497;
  t2500 = -2.95447451120871e-8*var1[18];
  t2506 = -0.8232613535360118*t1100;
  t2507 = 0.061996937216*t100;
  t2512 = t2500 + t2506 + t2507;
  t2520 = 7.20503013377005e-8*var1[19];
  t2521 = -0.3667270384178674*t71;
  t2530 = t2525 + t1452;
  t2531 = -0.29871295412*t2530;
  t2537 = t2536 + t1459;
  t2541 = 0.44503472296900004*t2537;
  t2544 = t2520 + t2521 + t2531 + t2541;
  t2548 = 2.838136523330542e-8*var1[19];
  t2554 = -0.2845150083511607*t71;
  t2557 = t2556 + t1421;
  t2558 = 0.44503472296900004*t2557;
  t2559 = t2525 + t1400;
  t2561 = -0.5286755231320001*t2559;
  t2563 = t2548 + t2554 + t2558 + t2561;
  t2565 = 1.0464152525368286e-7*var1[19];
  t2567 = 0.15748087543254813*t71;
  t2570 = t2536 + t87;
  t2572 = -0.5286755231320001*t2570;
  t2576 = t2556 + t1266;
  t2578 = -0.29871295412*t2576;
  t2582 = t2565 + t2567 + t2572 + t2578;
  p_output1[0]=0.993567*t1396 + 0.041508*t1439 + 0.105375*t1487;
  p_output1[1]=0.993567*t1870 + 0.041508*t1882 + 0.105375*t1892;
  p_output1[2]=0.993567*t2159 + 0.041508*t2172 + 0.105375*t2182;
  p_output1[3]=0.;
  p_output1[4]=0.930418*t1439 - 0.366501*t1487;
  p_output1[5]=0.930418*t1882 - 0.366501*t1892;
  p_output1[6]=0.930418*t2172 - 0.366501*t2182;
  p_output1[7]=0.;
  p_output1[8]=-0.113255*t1396 + 0.364143*t1439 + 0.924432*t1487;
  p_output1[9]=-0.113255*t1870 + 0.364143*t1882 + 0.924432*t1892;
  p_output1[10]=-0.113255*t2159 + 0.364143*t2172 + 0.924432*t2182;
  p_output1[11]=0.;
  p_output1[12]=0. - 0.018436*t1396 - 0.423185*t1439 - 0.858308*t1487 + t152*t164*t2262 + t213*t2281 + t2293*t240 + t2311*t242 + t1049*t2471 + t1081*t2478 + t1164*t2498 + t1247*t2512 + t1258*t2544 + t1314*t2563 + t1379*t2582 + t2339*t308 + t2350*t314 + t2363*t451 + t2373*t565 + t2389*t574 + t2396*t685 + t2418*t799 + t2448*t805 + t2457*t934 + var1[0];
  p_output1[13]=0. - 0.018436*t1870 - 0.423185*t1882 - 0.858308*t1892 + t164*t207*t2262 + t1521*t2281 + t1533*t2293 + t1542*t2311 + t1573*t2339 + t1581*t2350 + t1601*t2363 + t1632*t2373 + t1636*t2389 + t1665*t2396 + t1714*t2418 + t1726*t2448 + t1758*t2457 + t1773*t2471 + t1790*t2478 + t1800*t2498 + t1810*t2512 + t1813*t2544 + t1837*t2563 + t1863*t2582 + var1[1];
  p_output1[14]=0. - 0.018436*t2159 - 0.423185*t2172 - 0.858308*t2182 - 1.*t205*t2262 + t164*t204*t2281 + t164*t208*t2293 + t1928*t2311 + t1934*t2339 + t1938*t2350 + t1960*t2363 + t1975*t2373 + t1979*t2389 + t1987*t2396 + t1999*t2418 + t2019*t2448 + t2032*t2457 + t2050*t2471 + t2054*t2478 + t2074*t2498 + t2087*t2512 + t2099*t2544 + t2131*t2563 + t2157*t2582 + var1[2];
  p_output1[15]=1.;
}



void T_RightToeBottomBack_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
