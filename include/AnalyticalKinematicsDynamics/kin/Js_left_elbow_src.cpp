/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:09:01 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Js_left_elbow_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t36;
  double t51;
  double t121;
  double t147;
  double t287;
  double t294;
  double t288;
  double t305;
  double t306;
  double t337;
  double t340;
  double t352;
  double t559;
  double t544;
  double t647;
  double t665;
  double t387;
  double t390;
  double t402;
  double t409;
  double t414;
  double t430;
  double t670;
  double t676;
  double t698;
  double t706;
  double t712;
  double t717;
  double t836;
  double t839;
  double t843;
  double t645;
  double t702;
  double t726;
  double t732;
  double t739;
  double t750;
  double t760;
  double t902;
  double t908;
  double t909;
  double t557;
  double t578;
  double t610;
  double t814;
  double t820;
  double t835;
  double t34;
  double t880;
  double t887;
  double t888;
  double t995;
  double t997;
  double t1002;
  double t985;
  double t986;
  double t987;
  double t613;
  double t629;
  double t637;
  double t1155;
  double t1162;
  double t1173;
  double t1182;
  double t1108;
  double t1114;
  double t1129;
  double t1368;
  double t1370;
  double t1371;
  double t1314;
  double t1519;
  double t1525;
  double t1497;
  double t1499;
  double t1437;
  double t1440;
  double t1343;
  double t1351;
  double t1394;
  double t1404;
  double t1554;
  double t1562;
  double t1563;
  double t1568;
  double t1576;
  double t1585;
  double t1590;
  double t1602;
  double t1621;
  double t1626;
  double t1647;
  double t1667;
  double t1575;
  double t1609;
  double t1680;
  double t1697;
  double t1448;
  double t1450;
  double t1762;
  double t1766;
  double t1772;
  double t1773;
  double t1484;
  double t1490;
  double t1719;
  double t1720;
  double t1722;
  double t1724;
  double t1791;
  double t1803;
  double t1813;
  double t1817;
  double t1898;
  double t1899;
  double t1907;
  double t1908;
  double t1355;
  double t1386;
  double t1417;
  double t1427;
  double t1726;
  double t1735;
  double t1755;
  double t1761;
  double t1942;
  double t1950;
  double t1964;
  double t1966;
  double t1444;
  double t1459;
  double t1461;
  double t1477;
  double t1833;
  double t1834;
  double t1836;
  double t1841;
  double t1993;
  double t2008;
  double t2014;
  double t2022;
  double t1864;
  double t1865;
  double t1878;
  double t1887;
  double t1495;
  double t1509;
  double t1545;
  double t1547;
  double t2121;
  double t2133;
  double t2137;
  double t2145;
  double t2160;
  double t2165;
  double t2168;
  double t2171;
  double t2307;
  double t2311;
  double t2315;
  double t2320;
  double t2316;
  double t2411;
  double t2346;
  double t2383;
  double t2391;
  double t2413;
  double t2414;
  double t2417;
  double t2423;
  double t2492;
  double t2553;
  double t2438;
  double t2619;
  double t2348;
  double t2568;
  double t2330;
  double t2548;
  double t2550;
  double t2554;
  double t2556;
  double t2570;
  double t2591;
  double t2606;
  double t2616;
  double t2618;
  double t2622;
  double t2630;
  double t2634;
  double t2650;
  double t2654;
  double t2682;
  double t2688;
  double t2718;
  double t2720;
  double t2725;
  double t2738;
  double t2741;
  double t2440;
  double t2452;
  double t2460;
  double t2512;
  double t2614;
  double t2663;
  double t2757;
  double t2758;
  double t2764;
  double t2766;
  double t2792;
  double t2797;
  double t2333;
  double t2357;
  double t2364;
  double t2365;
  double t2807;
  double t2812;
  double t2816;
  double t2823;
  double t2919;
  double t2937;
  double t2938;
  double t2945;
  double t2537;
  double t2540;
  double t2541;
  double t2547;
  double t2403;
  double t2415;
  double t2429;
  double t2432;
  double t2851;
  double t2894;
  double t2899;
  double t2911;
  double t3005;
  double t3007;
  double t3015;
  double t3016;
  double t3030;
  double t3035;
  double t3064;
  double t3067;
  double t2441;
  double t2485;
  double t2518;
  double t2520;
  double t3171;
  double t3172;
  double t3183;
  double t3188;
  double t3202;
  double t3203;
  double t3223;
  double t3224;
  t36 = Cos(var1[3]);
  t51 = Sin(var1[3]);
  t121 = Cos(var1[4]);
  t147 = Sin(var1[4]);
  t287 = Cos(var1[5]);
  t294 = Sin(var1[5]);
  t288 = t36*t287*t147;
  t305 = t51*t294;
  t306 = t288 + t305;
  t337 = -1.*t287*t51;
  t340 = t36*t147*t294;
  t352 = t337 + t340;
  t559 = Cos(var1[13]);
  t544 = Sin(var1[13]);
  t647 = -1.*t559;
  t665 = 1. + t647;
  t387 = t287*t51*t147;
  t390 = -1.*t36*t294;
  t402 = t387 + t390;
  t409 = t36*t287;
  t414 = t51*t147*t294;
  t430 = t409 + t414;
  t670 = 0.4*t665;
  t676 = 0.12*t544;
  t698 = 0. + t670 + t676;
  t706 = 0.12*t665;
  t712 = -0.4*t544;
  t717 = 0. + t706 + t712;
  t836 = t698*t402;
  t839 = t717*t430;
  t843 = 0. + var1[1] + t836 + t839;
  t645 = -1.*var1[2];
  t702 = -1.*t121*t287*t698;
  t726 = -1.*t121*t717*t294;
  t732 = 0. + t645 + t702 + t726;
  t739 = -1.*t544*t402;
  t750 = t559*t430;
  t760 = t739 + t750;
  t902 = t559*t402;
  t908 = t544*t430;
  t909 = t902 + t908;
  t557 = -1.*t544*t306;
  t578 = t559*t352;
  t610 = t557 + t578;
  t814 = -1.*t121*t287*t544;
  t820 = t559*t121*t294;
  t835 = t814 + t820;
  t34 = -1.*var1[0];
  t880 = t559*t121*t287;
  t887 = t121*t544*t294;
  t888 = t880 + t887;
  t995 = -1.*t698*t306;
  t997 = -1.*t717*t352;
  t1002 = 0. + t34 + t995 + t997;
  t985 = t121*t287*t698;
  t986 = t121*t717*t294;
  t987 = 0. + var1[2] + t985 + t986;
  t613 = t559*t306;
  t629 = t544*t352;
  t637 = t613 + t629;
  t1155 = -1.*var1[1];
  t1162 = -1.*t698*t402;
  t1173 = -1.*t717*t430;
  t1182 = 0. + t1155 + t1162 + t1173;
  t1108 = t698*t306;
  t1114 = t717*t352;
  t1129 = 0. + var1[0] + t1108 + t1114;
  t1368 = Cos(var1[14]);
  t1370 = -1.*t1368;
  t1371 = 1. + t1370;
  t1314 = Sin(var1[14]);
  t1519 = -0.994522*t1314;
  t1525 = 0. + t1519;
  t1497 = 0.104528*t1314;
  t1499 = 0. + t1497;
  t1437 = -0.104528*t1314;
  t1440 = 0. + t1437;
  t1343 = 0.994522*t1314;
  t1351 = 0. + t1343;
  t1394 = -0.9890740084840001*t1371;
  t1404 = 1. + t1394;
  t1554 = -0.056500534356700764*t1371;
  t1562 = 0.38315650737400003*t1525;
  t1563 = -0.040271188976*t1499;
  t1568 = 0. + t1554 + t1562 + t1563;
  t1576 = 1.1345904784751044e-7*var1[14];
  t1585 = -0.04027119345689465*t1371;
  t1590 = -0.05650052807*t1440;
  t1602 = t1576 + t1585 + t1590;
  t1621 = 1.1924972351948546e-8*var1[14];
  t1626 = 0.38315655000705834*t1371;
  t1647 = -0.05650052807*t1351;
  t1667 = t1621 + t1626 + t1647;
  t1575 = t1568*t147;
  t1609 = -1.*t1602*t835;
  t1680 = -1.*t1667*t888;
  t1697 = 0. + t645 + t702 + t1575 + t726 + t1609 + t1680;
  t1448 = -0.010926102783999999*t1371;
  t1450 = 1. + t1448;
  t1762 = t121*t1568*t51;
  t1766 = t1602*t760;
  t1772 = t1667*t909;
  t1773 = 0. + var1[1] + t1762 + t836 + t839 + t1766 + t1772;
  t1484 = -1.0000001112680001*t1371;
  t1490 = 1. + t1484;
  t1719 = t121*t1351*t51;
  t1720 = 0.103955395616*t1371*t760;
  t1722 = t1404*t909;
  t1724 = t1719 + t1720 + t1722;
  t1791 = t121*t1440*t51;
  t1803 = t1450*t760;
  t1813 = 0.103955395616*t1371*t909;
  t1817 = t1791 + t1803 + t1813;
  t1898 = t1490*t121*t51;
  t1899 = t1499*t760;
  t1907 = t1525*t909;
  t1908 = t1898 + t1899 + t1907;
  t1355 = t36*t121*t1351;
  t1386 = 0.103955395616*t1371*t610;
  t1417 = t1404*t637;
  t1427 = t1355 + t1386 + t1417;
  t1726 = -1.*t1351*t147;
  t1735 = 0.103955395616*t1371*t835;
  t1755 = t1404*t888;
  t1761 = t1726 + t1735 + t1755;
  t1942 = -1.*t1568*t147;
  t1950 = t1602*t835;
  t1964 = t1667*t888;
  t1966 = 0. + var1[2] + t985 + t1942 + t986 + t1950 + t1964;
  t1444 = t36*t121*t1440;
  t1459 = t1450*t610;
  t1461 = 0.103955395616*t1371*t637;
  t1477 = t1444 + t1459 + t1461;
  t1833 = -1.*t1440*t147;
  t1834 = t1450*t835;
  t1836 = 0.103955395616*t1371*t888;
  t1841 = t1833 + t1834 + t1836;
  t1993 = -1.*t36*t121*t1568;
  t2008 = -1.*t1602*t610;
  t2014 = -1.*t1667*t637;
  t2022 = 0. + t34 + t1993 + t995 + t997 + t2008 + t2014;
  t1864 = -1.*t1490*t147;
  t1865 = t1499*t835;
  t1878 = t1525*t888;
  t1887 = t1864 + t1865 + t1878;
  t1495 = t1490*t36*t121;
  t1509 = t1499*t610;
  t1545 = t1525*t637;
  t1547 = t1495 + t1509 + t1545;
  t2121 = t36*t121*t1568;
  t2133 = t1602*t610;
  t2137 = t1667*t637;
  t2145 = 0. + var1[0] + t2121 + t1108 + t1114 + t2133 + t2137;
  t2160 = -1.*t121*t1568*t51;
  t2165 = -1.*t1602*t760;
  t2168 = -1.*t1667*t909;
  t2171 = 0. + t1155 + t2160 + t1162 + t1173 + t2165 + t2168;
  t2307 = Cos(var1[15]);
  t2311 = -1.*t2307;
  t2315 = 1. + t2311;
  t2320 = Sin(var1[15]);
  t2316 = -0.49726168403800003*t2315;
  t2411 = -0.051978134642000004*t2315;
  t2346 = 0.05226439969100001*t2315;
  t2383 = -0.5054634410180001*t2315;
  t2391 = 1. + t2383;
  t2413 = -0.707107*t2320;
  t2414 = t2411 + t2413;
  t2417 = 0.073913*t2320;
  t2423 = t2316 + t2417;
  t2492 = 0.703234*t2320;
  t2553 = 0.051978134642000004*t2315;
  t2438 = 0.707107*t2320;
  t2619 = -0.05226439969100001*t2315;
  t2348 = -0.703234*t2320;
  t2568 = 0.49726168403800003*t2315;
  t2330 = -0.073913*t2320;
  t2548 = -1.5601527583902087e-7*var1[15];
  t2550 = 0.09582494577057615*t2315;
  t2554 = t2553 + t2413;
  t2556 = 0.231098203479*t2554;
  t2570 = t2568 + t2417;
  t2591 = 0.164383620275*t2570;
  t2606 = t2548 + t2550 + t2556 + t2591;
  t2616 = 1.639789470231751e-8*var1[15];
  t2618 = 0.22983603018311177*t2315;
  t2622 = t2619 + t2492;
  t2630 = 0.164383620275*t2622;
  t2634 = t2553 + t2438;
  t2650 = 0.18957839082800002*t2634;
  t2654 = t2616 + t2618 + t2630 + t2650;
  t2682 = 1.568745163810375e-7*var1[15];
  t2688 = 0.08219200580743281*t2315;
  t2718 = t2619 + t2348;
  t2720 = 0.231098203479*t2718;
  t2725 = t2568 + t2330;
  t2738 = 0.18957839082800002*t2725;
  t2741 = t2682 + t2688 + t2720 + t2738;
  t2440 = t2411 + t2438;
  t2452 = -0.9945383682050002*t2315;
  t2460 = 1. + t2452;
  t2512 = t2346 + t2492;
  t2614 = t2606*t1724;
  t2663 = t2654*t1817;
  t2757 = t2741*t1908;
  t2758 = 0. + var1[1] + t1762 + t836 + t839 + t1766 + t1772 + t2614 + t2663 + t2757;
  t2764 = -1.*t2606*t1761;
  t2766 = -1.*t2654*t1841;
  t2792 = -1.*t2741*t1887;
  t2797 = 0. + t645 + t702 + t1575 + t726 + t1609 + t1680 + t2764 + t2766 + t2792;
  t2333 = t2316 + t2330;
  t2357 = t2346 + t2348;
  t2364 = -0.500001190325*t2315;
  t2365 = 1. + t2364;
  t2807 = t2391*t1724;
  t2812 = t2414*t1817;
  t2816 = t2423*t1908;
  t2823 = t2807 + t2812 + t2816;
  t2919 = t2440*t1724;
  t2937 = t2460*t1817;
  t2938 = t2512*t1908;
  t2945 = t2919 + t2937 + t2938;
  t2537 = t2391*t1761;
  t2540 = t2414*t1841;
  t2541 = t2423*t1887;
  t2547 = t2537 + t2540 + t2541;
  t2403 = t2391*t1427;
  t2415 = t2414*t1477;
  t2429 = t2423*t1547;
  t2432 = t2403 + t2415 + t2429;
  t2851 = t2440*t1761;
  t2894 = t2460*t1841;
  t2899 = t2512*t1887;
  t2911 = t2851 + t2894 + t2899;
  t3005 = -1.*t2606*t1427;
  t3007 = -1.*t2654*t1477;
  t3015 = -1.*t2741*t1547;
  t3016 = 0. + t34 + t1993 + t995 + t997 + t2008 + t2014 + t3005 + t3007 + t3015;
  t3030 = t2606*t1761;
  t3035 = t2654*t1841;
  t3064 = t2741*t1887;
  t3067 = 0. + var1[2] + t985 + t1942 + t986 + t1950 + t1964 + t3030 + t3035 + t3064;
  t2441 = t2440*t1427;
  t2485 = t2460*t1477;
  t2518 = t2512*t1547;
  t2520 = t2441 + t2485 + t2518;
  t3171 = -1.*t2606*t1724;
  t3172 = -1.*t2654*t1817;
  t3183 = -1.*t2741*t1908;
  t3188 = 0. + t1155 + t2160 + t1162 + t1173 + t2165 + t2168 + t3171 + t3172 + t3183;
  t3202 = t2606*t1427;
  t3203 = t2654*t1477;
  t3223 = t2741*t1547;
  t3224 = 0. + var1[0] + t2121 + t1108 + t1114 + t2133 + t2137 + t3202 + t3203 + t3223;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=1.;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=1.;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=var1[1];
  p_output1[19]=t34;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=1.;
  p_output1[24]=-1.*t36*var1[2];
  p_output1[25]=-1.*t51*var1[2];
  p_output1[26]=t36*var1[0] + t51*var1[1];
  p_output1[27]=-1.*t51;
  p_output1[28]=t36;
  p_output1[29]=0;
  p_output1[30]=-1.*t147*var1[1] - 1.*t121*t51*var1[2];
  p_output1[31]=t147*var1[0] + t121*t36*var1[2];
  p_output1[32]=t121*t51*var1[0] - 1.*t121*t36*var1[1];
  p_output1[33]=t121*t36;
  p_output1[34]=t121*t51;
  p_output1[35]=-1.*t147;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0.12*t306 - 0.4*t352 + t147*var1[1] + t121*t51*var1[2];
  p_output1[79]=0.12*t402 - 0.4*t430 - 1.*t147*var1[0] - 1.*t121*t36*var1[2];
  p_output1[80]=0.12*t121*t287 - 0.4*t121*t294 - 1.*t121*t51*var1[0] + t121*t36*var1[1];
  p_output1[81]=0. - 1.*t121*t36;
  p_output1[82]=0. - 1.*t121*t51;
  p_output1[83]=0. + t147;
  p_output1[84]=-0.385267*t121*t36 + 0.005906*t610 - 0.056191*t637 + 0.994522*(t732*t760 + t835*t843) + 0.104528*(t843*t888 + t732*t909);
  p_output1[85]=-0.385267*t121*t51 + 0.005906*t760 - 0.056191*t909 + 0.994522*(t1002*t835 + t610*t987) + 0.104528*(t1002*t888 + t637*t987);
  p_output1[86]=0.385267*t147 + 0.994522*(t1182*t610 + t1129*t760) + 0.005906*t835 - 0.056191*t888 + 0.104528*(t1182*t637 + t1129*t909);
  p_output1[87]=0. + 0.994522*t610 + 0.104528*t637;
  p_output1[88]=0. + 0.994522*t760 + 0.104528*t909;
  p_output1[89]=0. + 0.994522*t835 + 0.104528*t888;
  p_output1[90]=-0.151261*t1427 + 0.249652*t1477 - 0.176528*t1547 - 0.703234*(t1697*t1724 + t1761*t1773) + 0.073913*(t1697*t1817 + t1773*t1841) + 0.707107*(t1773*t1887 + t1697*t1908);
  p_output1[91]=-0.151261*t1724 + 0.249652*t1817 - 0.176528*t1908 - 0.703234*(t1427*t1966 + t1761*t2022) + 0.073913*(t1477*t1966 + t1841*t2022) + 0.707107*(t1547*t1966 + t1887*t2022);
  p_output1[92]=-0.151261*t1761 + 0.249652*t1841 - 0.176528*t1887 - 0.703234*(t1724*t2145 + t1427*t2171) + 0.073913*(t1817*t2145 + t1477*t2171) + 0.707107*(t1908*t2145 + t1547*t2171);
  p_output1[93]=0. - 0.703234*t1427 + 0.073913*t1477 + 0.707107*t1547;
  p_output1[94]=0. - 0.703234*t1724 + 0.073913*t1817 + 0.707107*t1908;
  p_output1[95]=0. - 0.703234*t1761 + 0.073913*t1841 + 0.707107*t1887;
  p_output1[96]=-0.137779*(t1427*t2333 + t1477*t2357 + t1547*t2365) + 0.189941*t2432 - 0.019964*t2520 + 0.104528*(t2547*t2758 + t2797*t2823) + 0.994522*(t2758*t2911 + t2797*t2945);
  p_output1[97]=-0.137779*(t1724*t2333 + t1817*t2357 + t1908*t2365) + 0.189941*t2823 - 0.019964*t2945 + 0.104528*(t2547*t3016 + t2432*t3067) + 0.994522*(t2911*t3016 + t2520*t3067);
  p_output1[98]=-0.137779*(t1761*t2333 + t1841*t2357 + t1887*t2365) + 0.189941*t2547 - 0.019964*t2911 + 0.104528*(t2432*t3188 + t2823*t3224) + 0.994522*(t2520*t3188 + t2945*t3224);
  p_output1[99]=0. + 0.104528*t2432 + 0.994522*t2520;
  p_output1[100]=0. + 0.104528*t2823 + 0.994522*t2945;
  p_output1[101]=0. + 0.104528*t2547 + 0.994522*t2911;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void Js_left_elbow_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
