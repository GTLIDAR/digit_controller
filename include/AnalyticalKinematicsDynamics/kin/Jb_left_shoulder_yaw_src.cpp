/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:08:37 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jb_left_shoulder_yaw_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t487;
  double t503;
  double t512;
  double t801;
  double t1025;
  double t281;
  double t317;
  double t377;
  double t1406;
  double t793;
  double t569;
  double t704;
  double t731;
  double t814;
  double t926;
  double t1024;
  double t1047;
  double t1057;
  double t1087;
  double t1142;
  double t1237;
  double t1324;
  double t1363;
  double t1367;
  double t1413;
  double t1508;
  double t1510;
  double t1516;
  double t1536;
  double t1559;
  double t1561;
  double t1695;
  double t1793;
  double t1860;
  double t1904;
  double t1957;
  double t1960;
  double t1962;
  double t1983;
  double t2028;
  double t2048;
  double t2324;
  double t1154;
  double t1299;
  double t1316;
  double t1562;
  double t1569;
  double t1642;
  double t2055;
  double t2156;
  double t136;
  double t2374;
  double t2433;
  double t2474;
  double t2502;
  double t2508;
  double t2515;
  double t2534;
  double t2555;
  double t84;
  double t2704;
  double t2737;
  double t2739;
  double t2318;
  double t2556;
  double t2569;
  double t2742;
  double t49;
  double t3181;
  double t3204;
  double t3223;
  double t3239;
  double t3254;
  double t3268;
  double t3287;
  double t3336;
  double t3348;
  double t3230;
  double t3269;
  double t3370;
  double t3400;
  double t3463;
  double t3502;
  double t3524;
  double t3528;
  double t2854;
  double t2855;
  double t2863;
  double t2865;
  double t2894;
  double t2914;
  double t2927;
  double t2975;
  double t3043;
  double t3632;
  double t3654;
  double t3661;
  double t3448;
  double t3531;
  double t3561;
  double t3882;
  double t3889;
  double t3937;
  double t3965;
  double t3984;
  double t3999;
  double t4017;
  double t4032;
  double t4055;
  double t3959;
  double t4014;
  double t4058;
  double t4066;
  double t4086;
  double t4088;
  double t4090;
  double t4099;
  double t4259;
  double t4305;
  double t4322;
  double t4075;
  double t4101;
  double t4127;
  double t2623;
  double t2744;
  double t2772;
  double t2881;
  double t2924;
  double t2997;
  double t3002;
  double t3037;
  double t3084;
  double t3112;
  double t3117;
  double t3127;
  double t3131;
  double t3613;
  double t3666;
  double t3671;
  double t3684;
  double t3685;
  double t3723;
  double t3725;
  double t3735;
  double t3742;
  double t3750;
  double t3754;
  double t3813;
  double t3827;
  double t4251;
  double t4336;
  double t4344;
  double t4379;
  double t4383;
  double t4387;
  double t4394;
  double t4407;
  double t4424;
  double t4441;
  double t4458;
  double t4512;
  double t4539;
  double t4840;
  double t4855;
  double t4877;
  double t4965;
  double t4936;
  double t5160;
  double t4928;
  double t4929;
  double t4935;
  double t4950;
  double t4955;
  double t4985;
  double t4992;
  double t5002;
  double t5023;
  double t5123;
  double t5141;
  double t5151;
  double t5156;
  double t5259;
  double t5299;
  double t5305;
  double t5318;
  double t5331;
  double t5341;
  double t5350;
  double t5381;
  double t5439;
  double t5478;
  double t5481;
  double t5484;
  double t5493;
  double t5506;
  double t5513;
  double t5523;
  double t5537;
  double t4884;
  double t4887;
  double t4909;
  double t4912;
  double t4918;
  double t5135;
  double t5380;
  double t5602;
  double t5612;
  double t5650;
  double t5658;
  double t5687;
  double t5714;
  double t5847;
  double t5872;
  double t5900;
  double t4808;
  double t4815;
  double t4817;
  double t5947;
  double t6008;
  double t6032;
  double t6042;
  double t6069;
  double t4893;
  double t4905;
  double t5613;
  double t5910;
  double t5935;
  double t6099;
  double t6211;
  double t6236;
  double t6243;
  double t6244;
  double t6257;
  double t6263;
  double t6286;
  double t6311;
  double t6345;
  double t5936;
  double t6078;
  double t6079;
  double t6264;
  double t6354;
  double t6379;
  double t6382;
  double t6389;
  double t6405;
  double t4792;
  double t4799;
  double t4801;
  double t6091;
  double t6468;
  double t6508;
  double t6552;
  double t6589;
  double t6636;
  double t6698;
  double t6690;
  double t6768;
  double t6720;
  double t6799;
  double t6790;
  double t7152;
  double t7158;
  double t7159;
  double t7162;
  double t7185;
  double t7186;
  double t7187;
  double t7188;
  double t7234;
  double t7235;
  double t7236;
  double t7237;
  double t7223;
  double t7224;
  double t7226;
  double t7231;
  double t7271;
  double t7273;
  double t7274;
  double t7275;
  double t7278;
  double t7281;
  double t7283;
  double t7286;
  t487 = Cos(var1[15]);
  t503 = -1.*t487;
  t512 = 1. + t503;
  t801 = Sin(var1[15]);
  t1025 = 0.05226439969100001*t512;
  t281 = Cos(var1[14]);
  t317 = -1.*t281;
  t377 = 1. + t317;
  t1406 = -0.49726168403800003*t512;
  t793 = -0.051978134642000004*t512;
  t569 = -0.9945383682050002*t512;
  t704 = 1. + t569;
  t731 = -0.073913*t704;
  t814 = -0.707107*t801;
  t926 = t793 + t814;
  t1024 = 0.703234*t926;
  t1047 = -0.703234*t801;
  t1057 = t1025 + t1047;
  t1087 = 0.707107*t1057;
  t1142 = t731 + t1024 + t1087;
  t1237 = Sin(var1[14]);
  t1324 = -0.500001190325*t512;
  t1363 = 1. + t1324;
  t1367 = 0.707107*t1363;
  t1413 = 0.073913*t801;
  t1508 = t1406 + t1413;
  t1510 = 0.703234*t1508;
  t1516 = 0.703234*t801;
  t1536 = t1025 + t1516;
  t1559 = -0.073913*t1536;
  t1561 = t1367 + t1510 + t1559;
  t1695 = -0.5054634410180001*t512;
  t1793 = 1. + t1695;
  t1860 = 0.703234*t1793;
  t1904 = -0.073913*t801;
  t1957 = t1406 + t1904;
  t1960 = 0.707107*t1957;
  t1962 = 0.707107*t801;
  t1983 = t793 + t1962;
  t2028 = -0.073913*t1983;
  t2048 = t1860 + t1960 + t2028;
  t2324 = Cos(var1[13]);
  t1154 = 0.103955395616*t377*t1142;
  t1299 = -0.994522*t1237;
  t1316 = 0. + t1299;
  t1562 = t1316*t1561;
  t1569 = -0.9890740084840001*t377;
  t1642 = 1. + t1569;
  t2055 = t1642*t2048;
  t2156 = 0. + t1154 + t1562 + t2055;
  t136 = Sin(var1[13]);
  t2374 = -0.010926102783999999*t377;
  t2433 = 1. + t2374;
  t2474 = t2433*t1142;
  t2502 = 0.104528*t1237;
  t2508 = 0. + t2502;
  t2515 = t2508*t1561;
  t2534 = 0.103955395616*t377*t2048;
  t2555 = 0. + t2474 + t2515 + t2534;
  t84 = Cos(var1[5]);
  t2704 = t2324*t2156;
  t2737 = -1.*t136*t2555;
  t2739 = 0. + t2704 + t2737;
  t2318 = t136*t2156;
  t2556 = t2324*t2555;
  t2569 = 0. + t2318 + t2556;
  t2742 = Sin(var1[5]);
  t49 = Sin(var1[3]);
  t3181 = -0.994522*t704;
  t3204 = -0.104528*t926;
  t3223 = t3181 + t3204;
  t3239 = -0.104528*t1508;
  t3254 = -0.994522*t1536;
  t3268 = t3239 + t3254;
  t3287 = -0.104528*t1793;
  t3336 = -0.994522*t1983;
  t3348 = t3287 + t3336;
  t3230 = 0.103955395616*t377*t3223;
  t3269 = t1316*t3268;
  t3370 = t1642*t3348;
  t3400 = 0. + t3230 + t3269 + t3370;
  t3463 = t2433*t3223;
  t3502 = t2508*t3268;
  t3524 = 0.103955395616*t377*t3348;
  t3528 = 0. + t3463 + t3502 + t3524;
  t2854 = Cos(var1[3]);
  t2855 = Cos(var1[4]);
  t2863 = -0.104528*t1237;
  t2865 = 0. + t2863;
  t2894 = -1.0000001112680001*t377;
  t2914 = 1. + t2894;
  t2927 = 0.994522*t1237;
  t2975 = 0. + t2927;
  t3043 = Sin(var1[4]);
  t3632 = t2324*t3400;
  t3654 = -1.*t136*t3528;
  t3661 = 0. + t3632 + t3654;
  t3448 = t136*t3400;
  t3531 = t2324*t3528;
  t3561 = 0. + t3448 + t3531;
  t3882 = 0.073913*t704;
  t3889 = -0.703234*t926;
  t3937 = t3882 + t3889 + t1087;
  t3965 = -0.703234*t1508;
  t3984 = 0.073913*t1536;
  t3999 = t1367 + t3965 + t3984;
  t4017 = -0.703234*t1793;
  t4032 = 0.073913*t1983;
  t4055 = t4017 + t1960 + t4032;
  t3959 = 0.103955395616*t377*t3937;
  t4014 = t1316*t3999;
  t4058 = t1642*t4055;
  t4066 = 0. + t3959 + t4014 + t4058;
  t4086 = t2433*t3937;
  t4088 = t2508*t3999;
  t4090 = 0.103955395616*t377*t4055;
  t4099 = 0. + t4086 + t4088 + t4090;
  t4259 = t2324*t4066;
  t4305 = -1.*t136*t4099;
  t4322 = 0. + t4259 + t4305;
  t4075 = t136*t4066;
  t4101 = t2324*t4099;
  t4127 = 0. + t4075 + t4101;
  t2623 = t84*t2569;
  t2744 = -1.*t2739*t2742;
  t2772 = 0. + t2623 + t2744;
  t2881 = t2865*t1142;
  t2924 = t2914*t1561;
  t2997 = t2975*t2048;
  t3002 = 0. + t2881 + t2924 + t2997;
  t3037 = t2855*t3002;
  t3084 = t84*t2739;
  t3112 = t2569*t2742;
  t3117 = 0. + t3084 + t3112;
  t3127 = t3043*t3117;
  t3131 = 0. + t3037 + t3127;
  t3613 = t84*t3561;
  t3666 = -1.*t3661*t2742;
  t3671 = 0. + t3613 + t3666;
  t3684 = t2865*t3223;
  t3685 = t2914*t3268;
  t3723 = t2975*t3348;
  t3725 = 0. + t3684 + t3685 + t3723;
  t3735 = t2855*t3725;
  t3742 = t84*t3661;
  t3750 = t3561*t2742;
  t3754 = 0. + t3742 + t3750;
  t3813 = t3043*t3754;
  t3827 = 0. + t3735 + t3813;
  t4251 = t84*t4127;
  t4336 = -1.*t4322*t2742;
  t4344 = 0. + t4251 + t4336;
  t4379 = t2865*t3937;
  t4383 = t2914*t3999;
  t4387 = t2975*t4055;
  t4394 = 0. + t4379 + t4383 + t4387;
  t4407 = t2855*t4394;
  t4424 = t84*t4322;
  t4441 = t4127*t2742;
  t4458 = 0. + t4424 + t4441;
  t4512 = t3043*t4458;
  t4539 = 0. + t4407 + t4512;
  t4840 = -1.*t4394*t3043;
  t4855 = t2855*t4458;
  t4877 = 0. + t4840 + t4855;
  t4965 = 0.49726168403800003*t512;
  t4936 = -0.05226439969100001*t512;
  t5160 = 0.051978134642000004*t512;
  t4928 = 1.568745163810375e-7*var1[15];
  t4929 = 0.140811*t1363;
  t4935 = 0.08219200580743281*t512;
  t4950 = t4936 + t1047;
  t4955 = 0.231098203479*t4950;
  t4985 = t4965 + t1904;
  t4992 = 0.18957839082800002*t4985;
  t5002 = 0.213182*t1508;
  t5023 = 0.230568*t1536;
  t5123 = t4928 + t4929 + t4935 + t4955 + t4992 + t5002 + t5023;
  t5141 = -1.5601527583902087e-7*var1[15];
  t5151 = 0.213182*t1793;
  t5156 = 0.09582494577057615*t512;
  t5259 = t5160 + t814;
  t5299 = 0.231098203479*t5259;
  t5305 = 0.140811*t1957;
  t5318 = t4965 + t1413;
  t5331 = 0.164383620275*t5318;
  t5341 = 0.230568*t1983;
  t5350 = t5141 + t5151 + t5156 + t5299 + t5305 + t5331 + t5341;
  t5381 = 1.639789470231751e-8*var1[15];
  t5439 = 0.230568*t704;
  t5478 = 0.22983603018311177*t512;
  t5481 = 0.213182*t926;
  t5484 = 0.140811*t1057;
  t5493 = t4936 + t1516;
  t5506 = 0.164383620275*t5493;
  t5513 = t5160 + t1962;
  t5523 = 0.18957839082800002*t5513;
  t5537 = t5381 + t5439 + t5478 + t5481 + t5484 + t5506 + t5523;
  t4884 = -1.*t2324;
  t4887 = 1. + t4884;
  t4909 = 1.1345904784751044e-7*var1[14];
  t4912 = -0.04027119345689465*t377;
  t4918 = -0.05650052807*t2865;
  t5135 = t2508*t5123;
  t5380 = 0.103955395616*t377*t5350;
  t5602 = t2433*t5537;
  t5612 = t4909 + t4912 + t4918 + t5135 + t5380 + t5602;
  t5650 = 1.1924972351948546e-8*var1[14];
  t5658 = 0.38315655000705834*t377;
  t5687 = -0.05650052807*t2975;
  t5714 = t1316*t5123;
  t5847 = t1642*t5350;
  t5872 = 0.103955395616*t377*t5537;
  t5900 = t5650 + t5658 + t5687 + t5714 + t5847 + t5872;
  t4808 = -1.*t3725*t3043;
  t4815 = t2855*t3754;
  t4817 = 0. + t4808 + t4815;
  t5947 = 0.4*t4887;
  t6008 = 0.12*t136;
  t6032 = -1.*t136*t5612;
  t6042 = t2324*t5900;
  t6069 = 0. + t5947 + t6008 + t6032 + t6042;
  t4893 = 0.12*t4887;
  t4905 = -0.4*t136;
  t5613 = t2324*t5612;
  t5910 = t136*t5900;
  t5935 = 0. + t4893 + t4905 + t5613 + t5910;
  t6099 = -0.056500534356700764*t377;
  t6211 = 0.38315650737400003*t1316;
  t6236 = -0.040271188976*t2508;
  t6243 = t2914*t5123;
  t6244 = t2975*t5350;
  t6257 = t2865*t5537;
  t6263 = 0. + t6099 + t6211 + t6236 + t6243 + t6244 + t6257;
  t6286 = t84*t6069;
  t6311 = t5935*t2742;
  t6345 = 0. + t6286 + t6311;
  t5936 = t84*t5935;
  t6078 = -1.*t6069*t2742;
  t6079 = 0. + t5936 + t6078;
  t6264 = -1.*t6263*t3043;
  t6354 = t2855*t6345;
  t6379 = 0. + t6264 + t6354;
  t6382 = t2855*t6263;
  t6389 = t3043*t6345;
  t6405 = 0. + t6382 + t6389;
  t4792 = -1.*t3002*t3043;
  t4799 = t2855*t3117;
  t4801 = 0. + t4792 + t4799;
  t6091 = -1.*t3671*t6079;
  t6468 = t4344*t6079;
  t6508 = t2772*t6079;
  t6552 = -1.*t4344*t6079;
  t6589 = t3671*t6079;
  t6636 = -1.*t2772*t6079;
  t6698 = t4394*t6263;
  t6690 = -1.*t3725*t6263;
  t6768 = -1.*t4394*t6263;
  t6720 = t3002*t6263;
  t6799 = -1.*t3002*t6263;
  t6790 = t3725*t6263;
  t7152 = t3999*t5123;
  t7158 = t4055*t5350;
  t7159 = t3937*t5537;
  t7162 = t7152 + t7158 + t7159;
  t7185 = -1.*t3268*t5123;
  t7186 = -1.*t3348*t5350;
  t7187 = -1.*t3223*t5537;
  t7188 = t7185 + t7186 + t7187;
  t7234 = -1.*t3999*t5123;
  t7235 = -1.*t4055*t5350;
  t7236 = -1.*t3937*t5537;
  t7237 = t7234 + t7235 + t7236;
  t7223 = t1561*t5123;
  t7224 = t2048*t5350;
  t7226 = t1142*t5537;
  t7231 = t7223 + t7224 + t7226;
  t7271 = -1.*t1561*t5123;
  t7273 = -1.*t2048*t5350;
  t7274 = -1.*t1142*t5537;
  t7275 = t7271 + t7273 + t7274;
  t7278 = t3268*t5123;
  t7281 = t3348*t5350;
  t7283 = t3223*t5537;
  t7286 = t7278 + t7281 + t7283;
  p_output1[0]=0. + t2854*t3131 - 1.*t2772*t49;
  p_output1[1]=0. + t2854*t3827 - 1.*t3671*t49;
  p_output1[2]=0. + t2854*t4539 - 1.*t4344*t49;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0. + t2772*t2854 + t3131*t49;
  p_output1[7]=0. + t2854*t3671 + t3827*t49;
  p_output1[8]=0. + t2854*t4344 + t4539*t49;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t4801;
  p_output1[13]=t4817;
  p_output1[14]=t4877;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=t4877*(t6091 - 1.*t4817*t6379 - 1.*t3827*t6405) + t4817*(t4877*t6379 + t4539*t6405 + t6468);
  p_output1[19]=t4877*(t4801*t6379 + t3131*t6405 + t6508) + t4801*(-1.*t4877*t6379 - 1.*t4539*t6405 + t6552);
  p_output1[20]=t4801*(t4817*t6379 + t3827*t6405 + t6589) + t4817*(-1.*t4801*t6379 - 1.*t3131*t6405 + t6636);
  p_output1[21]=t4801;
  p_output1[22]=t4817;
  p_output1[23]=t4877;
  p_output1[24]=t4344*(t6091 - 1.*t3754*t6345 + t6690) + t3671*(t4458*t6345 + t6468 + t6698);
  p_output1[25]=t4344*(t3117*t6345 + t6508 + t6720) + t2772*(-1.*t4458*t6345 + t6552 + t6768);
  p_output1[26]=t2772*(t3754*t6345 + t6589 + t6790) + t3671*(-1.*t3117*t6345 + t6636 + t6799);
  p_output1[27]=t2772;
  p_output1[28]=t3671;
  p_output1[29]=t4344;
  p_output1[30]=t4394*(-1.*t3561*t5935 - 1.*t3661*t6069 + t6690) + t3725*(t4127*t5935 + t4322*t6069 + t6698);
  p_output1[31]=t4394*(t2569*t5935 + t2739*t6069 + t6720) + t3002*(-1.*t4127*t5935 - 1.*t4322*t6069 + t6768);
  p_output1[32]=t3002*(t3561*t5935 + t3661*t6069 + t6790) + t3725*(-1.*t2569*t5935 - 1.*t2739*t6069 + t6799);
  p_output1[33]=t3002;
  p_output1[34]=t3725;
  p_output1[35]=t4394;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0.12*t2156 - 0.4*t2555 - 1.*t4394*(-1.*t3528*t5612 - 1.*t3400*t5900 + t6690) - 1.*t3725*(t4099*t5612 + t4066*t5900 + t6698);
  p_output1[79]=0.12*t3400 - 0.4*t3528 - 1.*t4394*(t2555*t5612 + t2156*t5900 + t6720) - 1.*t3002*(-1.*t4099*t5612 - 1.*t4066*t5900 + t6768);
  p_output1[80]=0.12*t4066 - 0.4*t4099 - 1.*t3002*(t3528*t5612 + t3400*t5900 + t6790) - 1.*t3725*(-1.*t2555*t5612 - 1.*t2156*t5900 + t6799);
  p_output1[81]=0. - 1.*t1142*t2865 - 1.*t1561*t2914 - 1.*t2048*t2975;
  p_output1[82]=0. - 1.*t2865*t3223 - 1.*t2914*t3268 - 1.*t2975*t3348;
  p_output1[83]=0. - 1.*t2865*t3937 - 1.*t2914*t3999 - 1.*t2975*t4055;
  p_output1[84]=0.005906*t1142 - 0.385267*t1561 - 0.056191*t2048 + 0.994522*(t3223*t7162 + t3937*t7188) + 0.104528*(t3348*t7162 + t4055*t7188);
  p_output1[85]=0.005906*t3223 - 0.385267*t3268 - 0.056191*t3348 + 0.994522*(t3937*t7231 + t1142*t7237) + 0.104528*(t4055*t7231 + t2048*t7237);
  p_output1[86]=0.005906*t3937 - 0.385267*t3999 - 0.056191*t4055 + 0.994522*(t3223*t7275 + t1142*t7286) + 0.104528*(t3348*t7275 + t2048*t7286);
  p_output1[87]=0. + 0.994522*t1142 + 0.104528*t2048;
  p_output1[88]=0. + 0.994522*t3223 + 0.104528*t3348;
  p_output1[89]=0. + 0.994522*t3937 + 0.104528*t4055;
  p_output1[90]=0.001940238427185298;
  p_output1[91]=-0.000029775481400470816;
  p_output1[92]=5.506364808560704e-7;
  p_output1[93]=-8.80875999975661e-7;
  p_output1[94]=-4.610340000044122e-7;
  p_output1[95]=1.000001499774;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void Jb_left_shoulder_yaw_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
