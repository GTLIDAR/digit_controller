/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:44:09 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_elbow_joint_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t462;
  double t1687;
  double t1732;
  double t1737;
  double t1743;
  double t1765;
  double t2209;
  double t2071;
  double t2075;
  double t2228;
  double t269;
  double t289;
  double t293;
  double t2177;
  double t2383;
  double t2542;
  double t2755;
  double t2927;
  double t2996;
  double t3572;
  double t3586;
  double t3593;
  double t3673;
  double t177;
  double t3383;
  double t3402;
  double t3292;
  double t3336;
  double t3337;
  double t3501;
  double t3528;
  double t3531;
  double t3635;
  double t3169;
  double t3170;
  double t3890;
  double t3713;
  double t1538;
  double t1591;
  double t1281;
  double t1446;
  double t4302;
  double t4158;
  double t3803;
  double t3818;
  double t3855;
  double t3856;
  double t3868;
  double t3883;
  double t4142;
  double t3995;
  double t4013;
  double t4054;
  double t4092;
  double t4106;
  double t4130;
  double t4202;
  double t4204;
  double t4234;
  double t4240;
  double t4245;
  double t4254;
  double t4264;
  double t4266;
  double t4280;
  double t3694;
  double t4391;
  double t3721;
  double t4561;
  double t3934;
  double t4403;
  double t3903;
  double t4637;
  double t4644;
  double t4393;
  double t4402;
  double t4404;
  double t4412;
  double t4419;
  double t4428;
  double t4431;
  double t4432;
  double t4530;
  double t4534;
  double t4538;
  double t4575;
  double t4578;
  double t4592;
  double t4594;
  double t4599;
  double t4657;
  double t4658;
  double t4660;
  double t4663;
  double t4675;
  double t4676;
  double t4689;
  double t4698;
  double t4449;
  double t4485;
  double t4303;
  double t4308;
  double t4354;
  double t4355;
  double t439;
  double t1470;
  double t1626;
  double t1636;
  double t1758;
  double t1825;
  double t2062;
  double t2615;
  double t2709;
  double t2714;
  double t3031;
  double t3091;
  double t3266;
  double t3276;
  double t5010;
  double t5011;
  double t5021;
  double t5051;
  double t5080;
  double t5100;
  double t3360;
  double t3373;
  double t3443;
  double t3486;
  double t3546;
  double t3625;
  double t3698;
  double t3702;
  double t3726;
  double t3787;
  double t3788;
  double t5132;
  double t5135;
  double t5144;
  double t5209;
  double t5223;
  double t5225;
  double t3885;
  double t3889;
  double t3909;
  double t3919;
  double t3935;
  double t3953;
  double t3959;
  double t4135;
  double t4138;
  double t4145;
  double t4149;
  double t4168;
  double t4189;
  double t4199;
  double t4296;
  double t4322;
  double t4365;
  double t4366;
  double t5251;
  double t5267;
  double t5273;
  double t5276;
  double t5291;
  double t5296;
  double t5300;
  double t5305;
  double t5315;
  double t5317;
  double t5318;
  double t5320;
  double t4444;
  double t4445;
  double t4486;
  double t4517;
  double t4629;
  double t4631;
  double t4648;
  double t4652;
  double t5330;
  double t5338;
  double t5339;
  double t5341;
  double t5351;
  double t5354;
  double t5360;
  double t5363;
  double t4741;
  double t4742;
  double t5380;
  double t5382;
  double t5383;
  double t5399;
  double t4799;
  double t4806;
  double t4887;
  double t4904;
  double t5550;
  double t5551;
  double t5553;
  double t5559;
  double t5560;
  double t5562;
  double t5569;
  double t5584;
  double t5585;
  double t5590;
  double t5604;
  double t5607;
  double t5609;
  double t5610;
  double t5620;
  double t5622;
  double t5625;
  double t5639;
  double t5667;
  double t5671;
  double t5674;
  double t5677;
  double t5683;
  double t5688;
  double t5689;
  double t5693;
  double t5701;
  double t5709;
  double t5710;
  double t5712;
  double t5853;
  double t5859;
  double t5865;
  double t5869;
  double t5883;
  double t5895;
  double t5901;
  double t5922;
  double t5923;
  double t5924;
  double t5954;
  double t5955;
  double t5964;
  double t5967;
  double t5976;
  double t5978;
  double t5983;
  double t5990;
  double t6003;
  double t6013;
  double t6023;
  double t6031;
  double t6049;
  double t6055;
  double t6057;
  double t6059;
  double t6072;
  double t6073;
  double t6077;
  double t6080;
  double t6185;
  double t6188;
  double t6189;
  double t6215;
  double t6217;
  double t6218;
  double t6233;
  double t6238;
  double t6248;
  double t6253;
  double t6272;
  double t6275;
  double t6276;
  double t6278;
  double t6283;
  double t6286;
  double t6293;
  double t6296;
  double t6300;
  double t6303;
  double t6314;
  double t6320;
  double t6339;
  double t6343;
  double t6352;
  double t6353;
  double t6357;
  double t6359;
  double t6360;
  double t6366;
  double t6455;
  double t6456;
  double t6459;
  double t6473;
  double t6489;
  double t6492;
  double t6525;
  double t6527;
  double t6539;
  double t6543;
  double t6546;
  double t6569;
  double t6577;
  double t6601;
  double t6606;
  double t6607;
  double t6620;
  double t6631;
  double t6638;
  double t6639;
  double t6650;
  double t6665;
  double t6680;
  double t6686;
  double t6690;
  double t6703;
  double t6708;
  double t6709;
  double t6712;
  double t6807;
  double t6810;
  double t6814;
  double t6826;
  double t6833;
  double t6835;
  double t6839;
  double t6842;
  double t6848;
  double t6853;
  double t6854;
  double t6859;
  double t6863;
  double t6866;
  double t6882;
  double t6889;
  double t6895;
  double t6899;
  double t6901;
  double t6902;
  double t6903;
  double t6909;
  double t6912;
  double t6913;
  double t6914;
  double t6916;
  double t6919;
  double t6920;
  double t6923;
  double t6987;
  double t6989;
  double t6991;
  double t7004;
  double t7007;
  double t7008;
  double t7016;
  double t7022;
  double t7023;
  double t7034;
  double t7036;
  double t7037;
  double t7045;
  double t7046;
  double t7057;
  double t7060;
  double t7062;
  double t7064;
  double t7065;
  double t7069;
  double t7070;
  double t7072;
  double t7082;
  double t7084;
  double t7085;
  double t7088;
  double t7098;
  double t7189;
  double t7190;
  double t7191;
  double t7202;
  double t7204;
  double t7209;
  double t7211;
  double t7212;
  double t7214;
  double t7222;
  double t7223;
  double t7234;
  double t7235;
  double t7243;
  double t7245;
  double t7247;
  double t7252;
  double t7253;
  double t7255;
  double t7260;
  double t7261;
  double t7262;
  double t7266;
  double t7175;
  double t7176;
  double t7177;
  double t7179;
  double t7180;
  double t7351;
  double t7352;
  double t7355;
  double t7357;
  double t7358;
  double t7366;
  double t7369;
  double t7371;
  double t7376;
  double t7384;
  double t7385;
  double t7387;
  double t7390;
  double t7393;
  double t7394;
  double t7396;
  double t7407;
  double t7408;
  double t7419;
  double t7421;
  double t7422;
  double t7423;
  double t7432;
  double t7433;
  double t7435;
  double t7438;
  double t7442;
  double t7444;
  double t7447;
  double t7449;
  double t7510;
  double t7514;
  double t7515;
  double t7522;
  double t7523;
  double t7524;
  double t7526;
  double t7537;
  double t7543;
  double t7545;
  double t7546;
  double t7547;
  double t7554;
  double t7556;
  double t7557;
  double t7561;
  double t7562;
  double t7567;
  double t7568;
  double t7571;
  double t7573;
  double t7575;
  double t7581;
  double t7597;
  double t7605;
  double t7606;
  double t7607;
  double t7672;
  double t7673;
  double t7680;
  double t7681;
  double t7685;
  double t7690;
  double t7691;
  double t7692;
  double t7695;
  double t7699;
  double t7700;
  double t7703;
  double t7711;
  double t7712;
  double t7714;
  double t7716;
  double t7721;
  double t7722;
  double t7723;
  double t7724;
  double t7727;
  double t7728;
  double t7729;
  double t7730;
  double t7646;
  double t7649;
  double t7650;
  double t7654;
  double t7655;
  double t7658;
  double t7662;
  double t7663;
  double t7669;
  double t7786;
  double t7788;
  double t7791;
  double t7792;
  double t7793;
  double t7797;
  double t7799;
  double t7800;
  double t7802;
  double t7803;
  double t7808;
  double t7809;
  double t7810;
  double t7811;
  double t7814;
  double t7815;
  double t7816;
  double t7817;
  double t7819;
  double t7820;
  double t7821;
  double t7822;
  double t7824;
  double t7825;
  double t7826;
  double t7829;
  double t7866;
  double t7867;
  double t7869;
  double t7872;
  double t7874;
  double t7875;
  double t7876;
  double t7877;
  double t7879;
  double t7880;
  double t7882;
  double t7883;
  double t7885;
  double t7886;
  double t7887;
  double t7889;
  double t7892;
  double t7893;
  double t7894;
  double t7895;
  double t7898;
  double t7899;
  double t7900;
  double t7902;
  double t7933;
  double t7952;
  double t7938;
  double t7932;
  double t7937;
  double t7955;
  double t7976;
  double t7950;
  double t7967;
  double t7981;
  double t7964;
  double t7995;
  double t7974;
  double t7979;
  double t7980;
  double t7982;
  double t7983;
  double t7985;
  double t7990;
  double t7993;
  double t7994;
  double t7996;
  double t7998;
  double t7999;
  double t8001;
  double t8003;
  double t8004;
  double t8005;
  double t8006;
  double t8008;
  double t7934;
  double t7935;
  double t7941;
  double t7942;
  double t7946;
  double t7947;
  double t7953;
  double t7954;
  double t7956;
  double t7958;
  double t7960;
  double t7962;
  double t7965;
  double t7966;
  double t7968;
  double t7969;
  double t7970;
  double t7971;
  double t8035;
  double t8036;
  double t8037;
  double t8040;
  double t8041;
  double t8042;
  double t8044;
  double t8046;
  double t8047;
  double t8048;
  double t8049;
  double t8051;
  double t8052;
  double t8056;
  double t8060;
  double t8062;
  double t8063;
  double t8064;
  double t8067;
  double t8075;
  double t8078;
  double t8079;
  double t8080;
  double t8103;
  double t8104;
  double t8105;
  double t8108;
  double t8109;
  double t8110;
  double t8112;
  double t8113;
  double t8114;
  double t8116;
  double t8119;
  double t8120;
  double t8121;
  double t8127;
  double t8130;
  double t8131;
  double t8132;
  double t8136;
  double t8138;
  double t8139;
  double t8141;
  double t8142;
  double t8167;
  double t8168;
  double t8169;
  double t8171;
  double t8173;
  double t8174;
  double t8176;
  double t8178;
  double t8179;
  double t8202;
  double t8206;
  double t8207;
  double t8208;
  double t8210;
  double t8211;
  double t8212;
  double t8214;
  double t8216;
  double t8217;
  double t8218;
  double t8219;
  double t8242;
  double t8243;
  double t8246;
  double t8252;
  double t8264;
  double t8267;
  double t8268;
  double t8271;
  double t8273;
  double t8274;
  double t8276;
  double t8280;
  t462 = Sin(var1[14]);
  t1687 = Sin(var1[3]);
  t1732 = Cos(var1[13]);
  t1737 = -1.*t1732;
  t1743 = 1. + t1737;
  t1765 = Sin(var1[13]);
  t2209 = Cos(var1[3]);
  t2071 = Cos(var1[5]);
  t2075 = Sin(var1[4]);
  t2228 = Sin(var1[5]);
  t269 = Cos(var1[14]);
  t289 = -1.*t269;
  t293 = 1. + t289;
  t2177 = -1.*t2071*t1687*t2075;
  t2383 = t2209*t2228;
  t2542 = t2177 + t2383;
  t2755 = -1.*t2209*t2071;
  t2927 = -1.*t1687*t2075*t2228;
  t2996 = t2755 + t2927;
  t3572 = Cos(var1[15]);
  t3586 = -1.*t3572;
  t3593 = 1. + t3586;
  t3673 = Sin(var1[15]);
  t177 = Cos(var1[4]);
  t3383 = 0.994522*t462;
  t3402 = 0. + t3383;
  t3292 = -1.*t1765*t2542;
  t3336 = t1732*t2996;
  t3337 = t3292 + t3336;
  t3501 = t1732*t2542;
  t3528 = t1765*t2996;
  t3531 = t3501 + t3528;
  t3635 = 0.051978134642000004*t3593;
  t3169 = -0.104528*t462;
  t3170 = 0. + t3169;
  t3890 = -0.05226439969100001*t3593;
  t3713 = 0.49726168403800003*t3593;
  t1538 = 0.104528*t462;
  t1591 = 0. + t1538;
  t1281 = -0.994522*t462;
  t1446 = 0. + t1281;
  t4302 = Sin(var1[16]);
  t4158 = -0.073913*t3673;
  t3803 = -1.*t177*t3402*t1687;
  t3818 = 0.103955395616*t293*t3337;
  t3855 = -0.9890740084840001*t293;
  t3856 = 1. + t3855;
  t3868 = t3856*t3531;
  t3883 = t3803 + t3818 + t3868;
  t4142 = -0.703234*t3673;
  t3995 = -1.*t177*t3170*t1687;
  t4013 = -0.010926102783999999*t293;
  t4054 = 1. + t4013;
  t4092 = t4054*t3337;
  t4106 = 0.103955395616*t293*t3531;
  t4130 = t3995 + t4092 + t4106;
  t4202 = -1.0000001112680001*t293;
  t4204 = 1. + t4202;
  t4234 = -1.*t4204*t177*t1687;
  t4240 = t1591*t3337;
  t4245 = t1446*t3531;
  t4254 = t4234 + t4240 + t4245;
  t4264 = Cos(var1[16]);
  t4266 = -1.*t4264;
  t4280 = 1. + t4266;
  t3694 = -0.707107*t3673;
  t4391 = -0.49726168403800003*t3593;
  t3721 = 0.073913*t3673;
  t4561 = -0.051978134642000004*t3593;
  t3934 = 0.707107*t3673;
  t4403 = 0.05226439969100001*t3593;
  t3903 = 0.703234*t3673;
  t4637 = -0.104528*t4302;
  t4644 = 0. + t4637;
  t4393 = t4391 + t4158;
  t4402 = t4393*t3883;
  t4404 = t4403 + t4142;
  t4412 = t4404*t4130;
  t4419 = -0.500001190325*t3593;
  t4428 = 1. + t4419;
  t4431 = t4428*t4254;
  t4432 = t4402 + t4412 + t4431;
  t4530 = -0.5054634410180001*t3593;
  t4534 = 1. + t4530;
  t4538 = t4534*t3883;
  t4575 = t4561 + t3694;
  t4578 = t4575*t4130;
  t4592 = t4391 + t3721;
  t4594 = t4592*t4254;
  t4599 = t4538 + t4578 + t4594;
  t4657 = t4561 + t3934;
  t4658 = t4657*t3883;
  t4660 = -0.9945383682050002*t3593;
  t4663 = 1. + t4660;
  t4675 = t4663*t4130;
  t4676 = t4403 + t3903;
  t4689 = t4676*t4254;
  t4698 = t4658 + t4675 + t4689;
  t4449 = 0.994522*t4302;
  t4485 = 0. + t4449;
  t4303 = -0.994522*t4302;
  t4308 = 0. + t4303;
  t4354 = 0.104528*t4302;
  t4355 = 0. + t4354;
  t439 = -0.056500534356700764*t293;
  t1470 = 0.38315650737400003*t1446;
  t1626 = -0.040271188976*t1591;
  t1636 = 0. + t439 + t1470 + t1626;
  t1758 = 0.4*t1743;
  t1825 = 0.12*t1765;
  t2062 = 0. + t1758 + t1825;
  t2615 = 0.12*t1743;
  t2709 = -0.4*t1765;
  t2714 = 0. + t2615 + t2709;
  t3031 = 1.1345904784751044e-7*var1[14];
  t3091 = -0.04027119345689465*t293;
  t3266 = -0.05650052807*t3170;
  t3276 = t3031 + t3091 + t3266;
  t5010 = t2209*t2071*t2075;
  t5011 = t1687*t2228;
  t5021 = t5010 + t5011;
  t5051 = -1.*t2071*t1687;
  t5080 = t2209*t2075*t2228;
  t5100 = t5051 + t5080;
  t3360 = 1.1924972351948546e-8*var1[14];
  t3373 = 0.38315655000705834*t293;
  t3443 = -0.05650052807*t3402;
  t3486 = t3360 + t3373 + t3443;
  t3546 = -1.5601527583902087e-7*var1[15];
  t3625 = 0.09582494577057615*t3593;
  t3698 = t3635 + t3694;
  t3702 = 0.231098203479*t3698;
  t3726 = t3713 + t3721;
  t3787 = 0.164383620275*t3726;
  t3788 = t3546 + t3625 + t3702 + t3787;
  t5132 = -1.*t1765*t5021;
  t5135 = t1732*t5100;
  t5144 = t5132 + t5135;
  t5209 = t1732*t5021;
  t5223 = t1765*t5100;
  t5225 = t5209 + t5223;
  t3885 = 1.639789470231751e-8*var1[15];
  t3889 = 0.22983603018311177*t3593;
  t3909 = t3890 + t3903;
  t3919 = 0.164383620275*t3909;
  t3935 = t3635 + t3934;
  t3953 = 0.18957839082800002*t3935;
  t3959 = t3885 + t3889 + t3919 + t3953;
  t4135 = 1.568745163810375e-7*var1[15];
  t4138 = 0.08219200580743281*t3593;
  t4145 = t3890 + t4142;
  t4149 = 0.231098203479*t4145;
  t4168 = t3713 + t4158;
  t4189 = 0.18957839082800002*t4168;
  t4199 = t4135 + t4138 + t4149 + t4189;
  t4296 = 0.19098732144477495*t4280;
  t4322 = 0.137024246638*t4308;
  t4365 = -0.014401763312*t4355;
  t4366 = 0. + t4296 + t4322 + t4365;
  t5251 = t2209*t177*t3402;
  t5267 = 0.103955395616*t293*t5144;
  t5273 = t3856*t5225;
  t5276 = t5251 + t5267 + t5273;
  t5291 = t2209*t177*t3170;
  t5296 = t4054*t5144;
  t5300 = 0.103955395616*t293*t5225;
  t5305 = t5291 + t5296 + t5300;
  t5315 = t4204*t2209*t177;
  t5317 = t1591*t5144;
  t5318 = t1446*t5225;
  t5320 = t5315 + t5317 + t5318;
  t4444 = -5.06291820800569e-8*var1[16];
  t4445 = 0.13702426188441388*t4280;
  t4486 = 0.190987300194*t4485;
  t4517 = t4444 + t4445 + t4486;
  t4629 = -4.817066759205414e-7*var1[16];
  t4631 = -0.0144017649144554*t4280;
  t4648 = 0.190987300194*t4644;
  t4652 = t4629 + t4631 + t4648;
  t5330 = t4393*t5276;
  t5338 = t4404*t5305;
  t5339 = t4428*t5320;
  t5341 = t5330 + t5338 + t5339;
  t5351 = t4534*t5276;
  t5354 = t4575*t5305;
  t5360 = t4592*t5320;
  t5363 = t5351 + t5354 + t5360;
  t4741 = -0.010926102783999999*t4280;
  t4742 = 1. + t4741;
  t5380 = t4657*t5276;
  t5382 = t4663*t5305;
  t5383 = t4676*t5320;
  t5399 = t5380 + t5382 + t5383;
  t4799 = -0.9890740084840001*t4280;
  t4806 = 1. + t4799;
  t4887 = -1.0000001112680001*t4280;
  t4904 = 1. + t4887;
  t5550 = -1.*t2209*t177*t2071*t1765;
  t5551 = t1732*t2209*t177*t2228;
  t5553 = t5550 + t5551;
  t5559 = t1732*t2209*t177*t2071;
  t5560 = t2209*t177*t1765*t2228;
  t5562 = t5559 + t5560;
  t5569 = -1.*t2209*t3402*t2075;
  t5584 = 0.103955395616*t293*t5553;
  t5585 = t3856*t5562;
  t5590 = t5569 + t5584 + t5585;
  t5604 = -1.*t2209*t3170*t2075;
  t5607 = t4054*t5553;
  t5609 = 0.103955395616*t293*t5562;
  t5610 = t5604 + t5607 + t5609;
  t5620 = -1.*t4204*t2209*t2075;
  t5622 = t1591*t5553;
  t5625 = t1446*t5562;
  t5639 = t5620 + t5622 + t5625;
  t5667 = t4393*t5590;
  t5671 = t4404*t5610;
  t5674 = t4428*t5639;
  t5677 = t5667 + t5671 + t5674;
  t5683 = t4534*t5590;
  t5688 = t4575*t5610;
  t5689 = t4592*t5639;
  t5693 = t5683 + t5688 + t5689;
  t5701 = t4657*t5590;
  t5709 = t4663*t5610;
  t5710 = t4676*t5639;
  t5712 = t5701 + t5709 + t5710;
  t5853 = -1.*t177*t2071*t1765*t1687;
  t5859 = t1732*t177*t1687*t2228;
  t5865 = t5853 + t5859;
  t5869 = t1732*t177*t2071*t1687;
  t5883 = t177*t1765*t1687*t2228;
  t5895 = t5869 + t5883;
  t5901 = -1.*t3402*t1687*t2075;
  t5922 = 0.103955395616*t293*t5865;
  t5923 = t3856*t5895;
  t5924 = t5901 + t5922 + t5923;
  t5954 = -1.*t3170*t1687*t2075;
  t5955 = t4054*t5865;
  t5964 = 0.103955395616*t293*t5895;
  t5967 = t5954 + t5955 + t5964;
  t5976 = -1.*t4204*t1687*t2075;
  t5978 = t1591*t5865;
  t5983 = t1446*t5895;
  t5990 = t5976 + t5978 + t5983;
  t6003 = t4393*t5924;
  t6013 = t4404*t5967;
  t6023 = t4428*t5990;
  t6031 = t6003 + t6013 + t6023;
  t6049 = t4534*t5924;
  t6055 = t4575*t5967;
  t6057 = t4592*t5990;
  t6059 = t6049 + t6055 + t6057;
  t6072 = t4657*t5924;
  t6073 = t4663*t5967;
  t6077 = t4676*t5990;
  t6080 = t6072 + t6073 + t6077;
  t6185 = t2071*t1765*t2075;
  t6188 = -1.*t1732*t2075*t2228;
  t6189 = t6185 + t6188;
  t6215 = -1.*t1732*t2071*t2075;
  t6217 = -1.*t1765*t2075*t2228;
  t6218 = t6215 + t6217;
  t6233 = -1.*t177*t3402;
  t6238 = 0.103955395616*t293*t6189;
  t6248 = t3856*t6218;
  t6253 = t6233 + t6238 + t6248;
  t6272 = -1.*t177*t3170;
  t6275 = t4054*t6189;
  t6276 = 0.103955395616*t293*t6218;
  t6278 = t6272 + t6275 + t6276;
  t6283 = -1.*t4204*t177;
  t6286 = t1591*t6189;
  t6293 = t1446*t6218;
  t6296 = t6283 + t6286 + t6293;
  t6300 = t4393*t6253;
  t6303 = t4404*t6278;
  t6314 = t4428*t6296;
  t6320 = t6300 + t6303 + t6314;
  t6339 = t4534*t6253;
  t6343 = t4575*t6278;
  t6352 = t4592*t6296;
  t6353 = t6339 + t6343 + t6352;
  t6357 = t4657*t6253;
  t6359 = t4663*t6278;
  t6360 = t4676*t6296;
  t6366 = t6357 + t6359 + t6360;
  t6455 = t2071*t1687;
  t6456 = -1.*t2209*t2075*t2228;
  t6459 = t6455 + t6456;
  t6473 = t1765*t5021;
  t6489 = t1732*t6459;
  t6492 = t6473 + t6489;
  t6525 = -1.*t1765*t6459;
  t6527 = t5209 + t6525;
  t6539 = 0.103955395616*t293*t6492;
  t6543 = t4054*t6527;
  t6546 = t6539 + t6543;
  t6569 = t3856*t6492;
  t6577 = 0.103955395616*t293*t6527;
  t6601 = t6569 + t6577;
  t6606 = t1446*t6492;
  t6607 = t1591*t6527;
  t6620 = t6606 + t6607;
  t6631 = t4404*t6546;
  t6638 = t4393*t6601;
  t6639 = t4428*t6620;
  t6650 = t6631 + t6638 + t6639;
  t6665 = t4575*t6546;
  t6680 = t4534*t6601;
  t6686 = t4592*t6620;
  t6690 = t6665 + t6680 + t6686;
  t6703 = t4663*t6546;
  t6708 = t4657*t6601;
  t6709 = t4676*t6620;
  t6712 = t6703 + t6708 + t6709;
  t6807 = t2071*t1687*t2075;
  t6810 = -1.*t2209*t2228;
  t6814 = t6807 + t6810;
  t6826 = t1765*t6814;
  t6833 = t6826 + t3336;
  t6835 = t1732*t6814;
  t6839 = -1.*t1765*t2996;
  t6842 = t6835 + t6839;
  t6848 = 0.103955395616*t293*t6833;
  t6853 = t4054*t6842;
  t6854 = t6848 + t6853;
  t6859 = t3856*t6833;
  t6863 = 0.103955395616*t293*t6842;
  t6866 = t6859 + t6863;
  t6882 = t1446*t6833;
  t6889 = t1591*t6842;
  t6895 = t6882 + t6889;
  t6899 = t4404*t6854;
  t6901 = t4393*t6866;
  t6902 = t4428*t6895;
  t6903 = t6899 + t6901 + t6902;
  t6909 = t4575*t6854;
  t6912 = t4534*t6866;
  t6913 = t4592*t6895;
  t6914 = t6909 + t6912 + t6913;
  t6916 = t4663*t6854;
  t6919 = t4657*t6866;
  t6920 = t4676*t6895;
  t6923 = t6916 + t6919 + t6920;
  t6987 = t177*t2071*t1765;
  t6989 = -1.*t1732*t177*t2228;
  t6991 = t6987 + t6989;
  t7004 = t1732*t177*t2071;
  t7007 = t177*t1765*t2228;
  t7008 = t7004 + t7007;
  t7016 = 0.103955395616*t293*t6991;
  t7022 = t4054*t7008;
  t7023 = t7016 + t7022;
  t7034 = t3856*t6991;
  t7036 = 0.103955395616*t293*t7008;
  t7037 = t7034 + t7036;
  t7045 = t1446*t6991;
  t7046 = t1591*t7008;
  t7057 = t7045 + t7046;
  t7060 = t4404*t7023;
  t7062 = t4393*t7037;
  t7064 = t4428*t7057;
  t7065 = t7060 + t7062 + t7064;
  t7069 = t4575*t7023;
  t7070 = t4534*t7037;
  t7072 = t4592*t7057;
  t7082 = t7069 + t7070 + t7072;
  t7084 = t4663*t7023;
  t7085 = t4657*t7037;
  t7088 = t4676*t7057;
  t7098 = t7084 + t7085 + t7088;
  t7189 = -1.*t1732*t5021;
  t7190 = -1.*t1765*t5100;
  t7191 = t7189 + t7190;
  t7202 = t4054*t7191;
  t7204 = t5267 + t7202;
  t7209 = t3856*t5144;
  t7211 = 0.103955395616*t293*t7191;
  t7212 = t7209 + t7211;
  t7214 = t1446*t5144;
  t7222 = t1591*t7191;
  t7223 = t7214 + t7222;
  t7234 = t4404*t7204;
  t7235 = t4393*t7212;
  t7243 = t4428*t7223;
  t7245 = t7234 + t7235 + t7243;
  t7247 = t4575*t7204;
  t7252 = t4534*t7212;
  t7253 = t4592*t7223;
  t7255 = t7247 + t7252 + t7253;
  t7260 = t4663*t7204;
  t7261 = t4657*t7212;
  t7262 = t4676*t7223;
  t7266 = t7260 + t7261 + t7262;
  t7175 = 0.12*t1732;
  t7176 = 0.4*t1765;
  t7177 = t7175 + t7176;
  t7179 = -0.4*t1732;
  t7180 = t7179 + t1825;
  t7351 = t2209*t2071;
  t7352 = t1687*t2075*t2228;
  t7355 = t7351 + t7352;
  t7357 = -1.*t1765*t6814;
  t7358 = t1732*t7355;
  t7366 = t7357 + t7358;
  t7369 = -1.*t1732*t6814;
  t7371 = -1.*t1765*t7355;
  t7376 = t7369 + t7371;
  t7384 = 0.103955395616*t293*t7366;
  t7385 = t4054*t7376;
  t7387 = t7384 + t7385;
  t7390 = t3856*t7366;
  t7393 = 0.103955395616*t293*t7376;
  t7394 = t7390 + t7393;
  t7396 = t1446*t7366;
  t7407 = t1591*t7376;
  t7408 = t7396 + t7407;
  t7419 = t4404*t7387;
  t7421 = t4393*t7394;
  t7422 = t4428*t7408;
  t7423 = t7419 + t7421 + t7422;
  t7432 = t4575*t7387;
  t7433 = t4534*t7394;
  t7435 = t4592*t7408;
  t7438 = t7432 + t7433 + t7435;
  t7442 = t4663*t7387;
  t7444 = t4657*t7394;
  t7447 = t4676*t7408;
  t7449 = t7442 + t7444 + t7447;
  t7510 = -1.*t177*t2071*t1765;
  t7514 = t1732*t177*t2228;
  t7515 = t7510 + t7514;
  t7522 = -1.*t1732*t177*t2071;
  t7523 = -1.*t177*t1765*t2228;
  t7524 = t7522 + t7523;
  t7526 = 0.103955395616*t293*t7515;
  t7537 = t4054*t7524;
  t7543 = t7526 + t7537;
  t7545 = t3856*t7515;
  t7546 = 0.103955395616*t293*t7524;
  t7547 = t7545 + t7546;
  t7554 = t1446*t7515;
  t7556 = t1591*t7524;
  t7557 = t7554 + t7556;
  t7561 = t4404*t7543;
  t7562 = t4393*t7547;
  t7567 = t4428*t7557;
  t7568 = t7561 + t7562 + t7567;
  t7571 = t4575*t7543;
  t7573 = t4534*t7547;
  t7575 = t4592*t7557;
  t7581 = t7571 + t7573 + t7575;
  t7597 = t4663*t7543;
  t7605 = t4657*t7547;
  t7606 = t4676*t7557;
  t7607 = t7597 + t7605 + t7606;
  t7672 = -1.0000001112680001*t2209*t177*t462;
  t7673 = 0.104528*t269*t5144;
  t7680 = -0.994522*t269*t5225;
  t7681 = t7672 + t7673 + t7680;
  t7685 = 0.994522*t269*t2209*t177;
  t7690 = 0.103955395616*t462*t5144;
  t7691 = -0.9890740084840001*t462*t5225;
  t7692 = t7685 + t7690 + t7691;
  t7695 = -0.104528*t269*t2209*t177;
  t7699 = -0.010926102783999999*t462*t5144;
  t7700 = 0.103955395616*t462*t5225;
  t7703 = t7695 + t7699 + t7700;
  t7711 = t4676*t7681;
  t7712 = t4657*t7692;
  t7714 = t4663*t7703;
  t7716 = t7711 + t7712 + t7714;
  t7721 = t4592*t7681;
  t7722 = t4534*t7692;
  t7723 = t4575*t7703;
  t7724 = t7721 + t7722 + t7723;
  t7727 = t4428*t7681;
  t7728 = t4393*t7692;
  t7729 = t4404*t7703;
  t7730 = t7727 + t7728 + t7729;
  t7646 = -0.3852670428678886*t269;
  t7649 = -0.056500534356700764*t462;
  t7650 = t7646 + t7649;
  t7654 = 0.0059058871981009595*t269;
  t7655 = -0.04027119345689465*t462;
  t7658 = 1.1345904784751044e-7 + t7654 + t7655;
  t7662 = -0.05619101817723254*t269;
  t7663 = 0.38315655000705834*t462;
  t7669 = 1.1924972351948546e-8 + t7662 + t7663;
  t7786 = t1765*t7355;
  t7788 = t6835 + t7786;
  t7791 = -1.0000001112680001*t177*t462*t1687;
  t7792 = 0.104528*t269*t7366;
  t7793 = -0.994522*t269*t7788;
  t7797 = t7791 + t7792 + t7793;
  t7799 = 0.994522*t269*t177*t1687;
  t7800 = 0.103955395616*t462*t7366;
  t7802 = -0.9890740084840001*t462*t7788;
  t7803 = t7799 + t7800 + t7802;
  t7808 = -0.104528*t269*t177*t1687;
  t7809 = -0.010926102783999999*t462*t7366;
  t7810 = 0.103955395616*t462*t7788;
  t7811 = t7808 + t7809 + t7810;
  t7814 = t4676*t7797;
  t7815 = t4657*t7803;
  t7816 = t4663*t7811;
  t7817 = t7814 + t7815 + t7816;
  t7819 = t4592*t7797;
  t7820 = t4534*t7803;
  t7821 = t4575*t7811;
  t7822 = t7819 + t7820 + t7821;
  t7824 = t4428*t7797;
  t7825 = t4393*t7803;
  t7826 = t4404*t7811;
  t7829 = t7824 + t7825 + t7826;
  t7866 = 1.0000001112680001*t462*t2075;
  t7867 = 0.104528*t269*t7515;
  t7869 = -0.994522*t269*t7008;
  t7872 = t7866 + t7867 + t7869;
  t7874 = -0.994522*t269*t2075;
  t7875 = 0.103955395616*t462*t7515;
  t7876 = -0.9890740084840001*t462*t7008;
  t7877 = t7874 + t7875 + t7876;
  t7879 = 0.104528*t269*t2075;
  t7880 = -0.010926102783999999*t462*t7515;
  t7882 = 0.103955395616*t462*t7008;
  t7883 = t7879 + t7880 + t7882;
  t7885 = t4676*t7872;
  t7886 = t4657*t7877;
  t7887 = t4663*t7883;
  t7889 = t7885 + t7886 + t7887;
  t7892 = t4592*t7872;
  t7893 = t4534*t7877;
  t7894 = t4575*t7883;
  t7895 = t7892 + t7893 + t7894;
  t7898 = t4428*t7872;
  t7899 = t4393*t7877;
  t7900 = t4404*t7883;
  t7902 = t7898 + t7899 + t7900;
  t7933 = 0.051978134642000004*t3673;
  t7952 = -0.05226439969100001*t3673;
  t7938 = 0.49726168403800003*t3673;
  t7932 = -0.707107*t3572;
  t7937 = 0.073913*t3572;
  t7955 = 0.707107*t3572;
  t7976 = -0.051978134642000004*t3673;
  t7950 = 0.703234*t3572;
  t7967 = -0.073913*t3572;
  t7981 = -0.49726168403800003*t3673;
  t7964 = -0.703234*t3572;
  t7995 = 0.05226439969100001*t3673;
  t7974 = -0.5054634410180001*t3673*t5276;
  t7979 = t7932 + t7976;
  t7980 = t7979*t5305;
  t7982 = t7937 + t7981;
  t7983 = t7982*t5320;
  t7985 = t7974 + t7980 + t7983;
  t7990 = t7955 + t7976;
  t7993 = t7990*t5276;
  t7994 = -0.9945383682050002*t3673*t5305;
  t7996 = t7950 + t7995;
  t7998 = t7996*t5320;
  t7999 = t7993 + t7994 + t7998;
  t8001 = t7967 + t7981;
  t8003 = t8001*t5276;
  t8004 = t7964 + t7995;
  t8005 = t8004*t5305;
  t8006 = -0.500001190325*t3673*t5320;
  t8008 = t8003 + t8005 + t8006;
  t7934 = t7932 + t7933;
  t7935 = 0.231098203479*t7934;
  t7941 = t7937 + t7938;
  t7942 = 0.164383620275*t7941;
  t7946 = 0.09582494577057615*t3673;
  t7947 = -1.5601527583902087e-7 + t7935 + t7942 + t7946;
  t7953 = t7950 + t7952;
  t7954 = 0.164383620275*t7953;
  t7956 = t7955 + t7933;
  t7958 = 0.18957839082800002*t7956;
  t7960 = 0.22983603018311177*t3673;
  t7962 = 1.639789470231751e-8 + t7954 + t7958 + t7960;
  t7965 = t7964 + t7952;
  t7966 = 0.231098203479*t7965;
  t7968 = t7967 + t7938;
  t7969 = 0.18957839082800002*t7968;
  t7970 = 0.08219200580743281*t3673;
  t7971 = 1.568745163810375e-7 + t7966 + t7969 + t7970;
  t8035 = t177*t3402*t1687;
  t8036 = t3856*t7788;
  t8037 = t8035 + t7384 + t8036;
  t8040 = t177*t3170*t1687;
  t8041 = t4054*t7366;
  t8042 = 0.103955395616*t293*t7788;
  t8044 = t8040 + t8041 + t8042;
  t8046 = t4204*t177*t1687;
  t8047 = t1591*t7366;
  t8048 = t1446*t7788;
  t8049 = t8046 + t8047 + t8048;
  t8051 = -0.5054634410180001*t3673*t8037;
  t8052 = t7979*t8044;
  t8056 = t7982*t8049;
  t8060 = t8051 + t8052 + t8056;
  t8062 = t7990*t8037;
  t8063 = -0.9945383682050002*t3673*t8044;
  t8064 = t7996*t8049;
  t8067 = t8062 + t8063 + t8064;
  t8075 = t8001*t8037;
  t8078 = t8004*t8044;
  t8079 = -0.500001190325*t3673*t8049;
  t8080 = t8075 + t8078 + t8079;
  t8103 = -1.*t3402*t2075;
  t8104 = t3856*t7008;
  t8105 = t8103 + t7526 + t8104;
  t8108 = -1.*t3170*t2075;
  t8109 = t4054*t7515;
  t8110 = t8108 + t8109 + t7036;
  t8112 = -1.*t4204*t2075;
  t8113 = t1591*t7515;
  t8114 = t1446*t7008;
  t8116 = t8112 + t8113 + t8114;
  t8119 = -0.5054634410180001*t3673*t8105;
  t8120 = t7979*t8110;
  t8121 = t7982*t8116;
  t8127 = t8119 + t8120 + t8121;
  t8130 = t7990*t8105;
  t8131 = -0.9945383682050002*t3673*t8110;
  t8132 = t7996*t8116;
  t8136 = t8130 + t8131 + t8132;
  t8138 = t8001*t8105;
  t8139 = t8004*t8110;
  t8141 = -0.500001190325*t3673*t8116;
  t8142 = t8138 + t8139 + t8141;
  t8167 = -0.13777901533039377*t4264;
  t8168 = 0.19098732144477495*t4302;
  t8169 = t8167 + t8168;
  t8171 = 0.18994107176353728*t4264;
  t8173 = 0.13702426188441388*t4302;
  t8174 = -5.06291820800569e-8 + t8171 + t8173;
  t8176 = -0.019963520514678434*t4264;
  t8178 = -0.0144017649144554*t4302;
  t8179 = -4.817066759205414e-7 + t8176 + t8178;
  t8202 = t4393*t8037;
  t8206 = t4404*t8044;
  t8207 = t4428*t8049;
  t8208 = t8202 + t8206 + t8207;
  t8210 = t4534*t8037;
  t8211 = t4575*t8044;
  t8212 = t4592*t8049;
  t8214 = t8210 + t8211 + t8212;
  t8216 = t4657*t8037;
  t8217 = t4663*t8044;
  t8218 = t4676*t8049;
  t8219 = t8216 + t8217 + t8218;
  t8242 = t4393*t8105;
  t8243 = t4404*t8110;
  t8246 = t4428*t8116;
  t8252 = t8242 + t8243 + t8246;
  t8264 = t4534*t8105;
  t8267 = t4575*t8110;
  t8268 = t4592*t8116;
  t8271 = t8264 + t8267 + t8268;
  t8273 = t4657*t8105;
  t8274 = t4663*t8110;
  t8276 = t4676*t8116;
  t8280 = t8273 + t8274 + t8276;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=-1.*t1636*t1687*t177 + t2062*t2542 + t2714*t2996 + t3276*t3337 + t3486*t3531 + t3788*t3883 + t3959*t4130 + t4199*t4254 + t4366*t4432 + t4517*t4599 + t4652*t4698 + 0.272168*(0.103955395616*t4280*t4599 + t4432*t4644 + t4698*t4742) + 0.167144*(t4432*t4485 + 0.103955395616*t4280*t4698 + t4599*t4806) + 0.190987*(t4308*t4599 + t4355*t4698 + t4432*t4904);
  p_output1[10]=t1636*t177*t2209 + t2062*t5021 + t2714*t5100 + t3276*t5144 + t3486*t5225 + t3788*t5276 + t3959*t5305 + t4199*t5320 + t4366*t5341 + t4517*t5363 + t4652*t5399 + 0.167144*(t4485*t5341 + t4806*t5363 + 0.103955395616*t4280*t5399) + 0.190987*(t4904*t5341 + t4308*t5363 + t4355*t5399) + 0.272168*(t4644*t5341 + 0.103955395616*t4280*t5363 + t4742*t5399);
  p_output1[11]=0;
  p_output1[12]=t177*t2062*t2071*t2209 - 1.*t1636*t2075*t2209 + t177*t2209*t2228*t2714 + t3276*t5553 + t3486*t5562 + t3788*t5590 + t3959*t5610 + t4199*t5639 + t4366*t5677 + t4517*t5693 + t4652*t5712 + 0.167144*(t4485*t5677 + t4806*t5693 + 0.103955395616*t4280*t5712) + 0.190987*(t4904*t5677 + t4308*t5693 + t4355*t5712) + 0.272168*(t4644*t5677 + 0.103955395616*t4280*t5693 + t4742*t5712);
  p_output1[13]=t1687*t177*t2062*t2071 - 1.*t1636*t1687*t2075 + t1687*t177*t2228*t2714 + t3276*t5865 + t3486*t5895 + t3788*t5924 + t3959*t5967 + t4199*t5990 + t4366*t6031 + t4517*t6059 + t4652*t6080 + 0.167144*(t4485*t6031 + t4806*t6059 + 0.103955395616*t4280*t6080) + 0.190987*(t4904*t6031 + t4308*t6059 + t4355*t6080) + 0.272168*(t4644*t6031 + 0.103955395616*t4280*t6059 + t4742*t6080);
  p_output1[14]=-1.*t1636*t177 - 1.*t2062*t2071*t2075 - 1.*t2075*t2228*t2714 + t3276*t6189 + t3486*t6218 + t3788*t6253 + t3959*t6278 + t4199*t6296 + t4366*t6320 + t4517*t6353 + t4652*t6366 + 0.167144*(t4485*t6320 + t4806*t6353 + 0.103955395616*t4280*t6366) + 0.190987*(t4904*t6320 + t4308*t6353 + t4355*t6366) + 0.272168*(t4644*t6320 + 0.103955395616*t4280*t6353 + t4742*t6366);
  p_output1[15]=t2714*t5021 + t2062*t6459 + t3486*t6492 + t3276*t6527 + t3959*t6546 + t3788*t6601 + t4199*t6620 + t4366*t6650 + t4517*t6690 + t4652*t6712 + 0.167144*(t4485*t6650 + t4806*t6690 + 0.103955395616*t4280*t6712) + 0.190987*(t4904*t6650 + t4308*t6690 + t4355*t6712) + 0.272168*(t4644*t6650 + 0.103955395616*t4280*t6690 + t4742*t6712);
  p_output1[16]=t2062*t2996 + t2714*t6814 + t3486*t6833 + t3276*t6842 + t3959*t6854 + t3788*t6866 + t4199*t6895 + t4366*t6903 + t4517*t6914 + t4652*t6923 + 0.167144*(t4485*t6903 + t4806*t6914 + 0.103955395616*t4280*t6923) + 0.190987*(t4904*t6903 + t4308*t6914 + t4355*t6923) + 0.272168*(t4644*t6903 + 0.103955395616*t4280*t6914 + t4742*t6923);
  p_output1[17]=-1.*t177*t2062*t2228 + t177*t2071*t2714 + t3486*t6991 + t3276*t7008 + t3959*t7023 + t3788*t7037 + t4199*t7057 + t4366*t7065 + t4517*t7082 + t4652*t7098 + 0.167144*(t4485*t7065 + t4806*t7082 + 0.103955395616*t4280*t7098) + 0.190987*(t4904*t7065 + t4308*t7082 + t4355*t7098) + 0.272168*(t4644*t7065 + 0.103955395616*t4280*t7082 + t4742*t7098);
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t3486*t5144 + t5021*t7177 + t5100*t7180 + t3276*t7191 + t3959*t7204 + t3788*t7212 + t4199*t7223 + t4366*t7245 + t4517*t7255 + t4652*t7266 + 0.167144*(t4485*t7245 + t4806*t7255 + 0.103955395616*t4280*t7266) + 0.190987*(t4904*t7245 + t4308*t7255 + t4355*t7266) + 0.272168*(t4644*t7245 + 0.103955395616*t4280*t7255 + t4742*t7266);
  p_output1[40]=t6814*t7177 + t7180*t7355 + t3486*t7366 + t3276*t7376 + t3959*t7387 + t3788*t7394 + t4199*t7408 + t4366*t7423 + t4517*t7438 + t4652*t7449 + 0.167144*(t4485*t7423 + t4806*t7438 + 0.103955395616*t4280*t7449) + 0.190987*(t4904*t7423 + t4308*t7438 + t4355*t7449) + 0.272168*(t4644*t7423 + 0.103955395616*t4280*t7438 + t4742*t7449);
  p_output1[41]=t177*t2071*t7177 + t177*t2228*t7180 + t3486*t7515 + t3276*t7524 + t3959*t7543 + t3788*t7547 + t4199*t7557 + t4366*t7568 + t4517*t7581 + t4652*t7607 + 0.167144*(t4485*t7568 + t4806*t7581 + 0.103955395616*t4280*t7607) + 0.190987*(t4904*t7568 + t4308*t7581 + t4355*t7607) + 0.272168*(t4644*t7568 + 0.103955395616*t4280*t7581 + t4742*t7607);
  p_output1[42]=t177*t2209*t7650 + t5144*t7658 + t5225*t7669 + t4199*t7681 + t3788*t7692 + t3959*t7703 + t4652*t7716 + t4517*t7724 + t4366*t7730 + 0.167144*(0.103955395616*t4280*t7716 + t4806*t7724 + t4485*t7730) + 0.272168*(t4742*t7716 + 0.103955395616*t4280*t7724 + t4644*t7730) + 0.190987*(t4355*t7716 + t4308*t7724 + t4904*t7730);
  p_output1[43]=t1687*t177*t7650 + t7366*t7658 + t7669*t7788 + t4199*t7797 + t3788*t7803 + t3959*t7811 + t4652*t7817 + t4517*t7822 + t4366*t7829 + 0.167144*(0.103955395616*t4280*t7817 + t4806*t7822 + t4485*t7829) + 0.272168*(t4742*t7817 + 0.103955395616*t4280*t7822 + t4644*t7829) + 0.190987*(t4355*t7817 + t4308*t7822 + t4904*t7829);
  p_output1[44]=-1.*t2075*t7650 + t7515*t7658 + t7008*t7669 + t4199*t7872 + t3788*t7877 + t3959*t7883 + t4652*t7889 + t4517*t7895 + t4366*t7902 + 0.167144*(0.103955395616*t4280*t7889 + t4806*t7895 + t4485*t7902) + 0.272168*(t4742*t7889 + 0.103955395616*t4280*t7895 + t4644*t7902) + 0.190987*(t4355*t7889 + t4308*t7895 + t4904*t7902);
  p_output1[45]=t5276*t7947 + t5305*t7962 + t5320*t7971 + t4517*t7985 + t4652*t7999 + t4366*t8008 + 0.167144*(t4806*t7985 + 0.103955395616*t4280*t7999 + t4485*t8008) + 0.272168*(0.103955395616*t4280*t7985 + t4742*t7999 + t4644*t8008) + 0.190987*(t4308*t7985 + t4355*t7999 + t4904*t8008);
  p_output1[46]=t7947*t8037 + t7962*t8044 + t7971*t8049 + t4517*t8060 + t4652*t8067 + t4366*t8080 + 0.167144*(t4806*t8060 + 0.103955395616*t4280*t8067 + t4485*t8080) + 0.272168*(0.103955395616*t4280*t8060 + t4742*t8067 + t4644*t8080) + 0.190987*(t4308*t8060 + t4355*t8067 + t4904*t8080);
  p_output1[47]=t7947*t8105 + t7962*t8110 + t7971*t8116 + t4517*t8127 + t4652*t8136 + t4366*t8142 + 0.167144*(t4806*t8127 + 0.103955395616*t4280*t8136 + t4485*t8142) + 0.272168*(0.103955395616*t4280*t8127 + t4742*t8136 + t4644*t8142) + 0.190987*(t4308*t8127 + t4355*t8136 + t4904*t8142);
  p_output1[48]=0.190987*(-1.0000001112680001*t4302*t5341 - 0.994522*t4264*t5363 + 0.104528*t4264*t5399) + 0.272168*(-0.104528*t4264*t5341 + 0.103955395616*t4302*t5363 - 0.010926102783999999*t4302*t5399) + 0.167144*(0.994522*t4264*t5341 - 0.9890740084840001*t4302*t5363 + 0.103955395616*t4302*t5399) + t5341*t8169 + t5363*t8174 + t5399*t8179;
  p_output1[49]=t8169*t8208 + t8174*t8214 + t8179*t8219 + 0.190987*(-1.0000001112680001*t4302*t8208 - 0.994522*t4264*t8214 + 0.104528*t4264*t8219) + 0.272168*(-0.104528*t4264*t8208 + 0.103955395616*t4302*t8214 - 0.010926102783999999*t4302*t8219) + 0.167144*(0.994522*t4264*t8208 - 0.9890740084840001*t4302*t8214 + 0.103955395616*t4302*t8219);
  p_output1[50]=t8169*t8252 + t8174*t8271 + t8179*t8280 + 0.190987*(-1.0000001112680001*t4302*t8252 - 0.994522*t4264*t8271 + 0.104528*t4264*t8280) + 0.272168*(-0.104528*t4264*t8252 + 0.103955395616*t4302*t8271 - 0.010926102783999999*t4302*t8280) + 0.167144*(0.994522*t4264*t8252 - 0.9890740084840001*t4302*t8271 + 0.103955395616*t4302*t8280);
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jp_elbow_joint_left_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
