/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:22:00 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dR_right_shoulder_yaw_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t764;
  double t1594;
  double t1427;
  double t1506;
  double t1579;
  double t2046;
  double t1803;
  double t1836;
  double t2143;
  double t18;
  double t374;
  double t404;
  double t425;
  double t960;
  double t1248;
  double t1884;
  double t2171;
  double t2231;
  double t2428;
  double t2429;
  double t2519;
  double t981;
  double t1183;
  double t1305;
  double t2261;
  double t2377;
  double t2400;
  double t2553;
  double t2554;
  double t2624;
  double t2629;
  double t2642;
  double t2720;
  double t2721;
  double t2778;
  double t2838;
  double t2851;
  double t422;
  double t2938;
  double t2940;
  double t2964;
  double t2987;
  double t2996;
  double t3018;
  double t3021;
  double t3023;
  double t3055;
  double t3061;
  double t3142;
  double t2566;
  double t2578;
  double t2620;
  double t3316;
  double t3307;
  double t3320;
  double t3337;
  double t3356;
  double t3357;
  double t3358;
  double t594;
  double t609;
  double t3340;
  double t3359;
  double t3366;
  double t3375;
  double t3379;
  double t3382;
  double t2895;
  double t2907;
  double t3143;
  double t3149;
  double t3371;
  double t3386;
  double t3390;
  double t3121;
  double t3122;
  double t3427;
  double t3437;
  double t3444;
  double t3170;
  double t3184;
  double t3457;
  double t3461;
  double t3462;
  double t3254;
  double t3255;
  double t3215;
  double t3247;
  double t3260;
  double t3261;
  double t3654;
  double t3659;
  double t3690;
  double t3646;
  double t3696;
  double t3711;
  double t3724;
  double t3725;
  double t3737;
  double t3712;
  double t3743;
  double t3788;
  double t3806;
  double t3833;
  double t3846;
  double t3850;
  double t3852;
  double t3858;
  double t3954;
  double t3958;
  double t3986;
  double t3946;
  double t3972;
  double t3981;
  double t3991;
  double t3999;
  double t4001;
  double t4006;
  double t4035;
  double t4036;
  double t4037;
  double t4038;
  double t4024;
  double t4092;
  double t4209;
  double t4211;
  double t4213;
  double t4214;
  double t4217;
  double t4219;
  double t4238;
  double t4249;
  double t4254;
  double t4256;
  double t4260;
  double t4264;
  double t4396;
  double t4410;
  double t4415;
  double t4427;
  double t4431;
  double t4446;
  double t4425;
  double t4495;
  double t4496;
  double t4505;
  double t4520;
  double t4530;
  double t4393;
  double t4497;
  double t4533;
  double t4549;
  double t4563;
  double t4566;
  double t4568;
  double t4569;
  double t4572;
  double t4579;
  double t4580;
  double t4597;
  double t4649;
  double t4657;
  double t4659;
  double t4665;
  double t4666;
  double t4668;
  double t4648;
  double t4661;
  double t4669;
  double t4671;
  double t4682;
  double t4683;
  double t4685;
  double t4689;
  double t4695;
  double t4696;
  double t4699;
  double t4707;
  double t4829;
  double t4833;
  double t4838;
  double t4841;
  double t4849;
  double t4863;
  double t4873;
  double t4875;
  double t4855;
  double t4886;
  double t4898;
  double t4904;
  double t4906;
  double t4907;
  double t4911;
  double t4914;
  double t4917;
  double t4974;
  double t4975;
  double t4978;
  double t4973;
  double t4990;
  double t4999;
  double t5003;
  double t5004;
  double t5005;
  double t5000;
  double t5008;
  double t5023;
  double t5038;
  double t5040;
  double t5052;
  double t5064;
  double t5087;
  double t5094;
  double t3983;
  double t3987;
  double t5217;
  double t5226;
  double t4021;
  double t4034;
  double t4078;
  double t4084;
  double t5215;
  double t5234;
  double t5239;
  double t5260;
  double t5269;
  double t5277;
  double t5284;
  double t4088;
  double t4108;
  double t5306;
  double t5318;
  double t5328;
  double t5351;
  double t4153;
  double t4157;
  double t4184;
  double t4185;
  double t5446;
  double t5449;
  double t5450;
  double t5452;
  double t5459;
  double t5464;
  double t5467;
  double t5468;
  double t5485;
  double t5488;
  double t5490;
  double t5501;
  double t5609;
  double t5615;
  double t5617;
  double t5627;
  double t5631;
  double t5634;
  double t5626;
  double t5637;
  double t5638;
  double t5646;
  double t5649;
  double t5650;
  double t5656;
  double t5668;
  double t5670;
  double t5740;
  double t5743;
  double t5746;
  double t5749;
  double t5752;
  double t5753;
  double t5748;
  double t5755;
  double t5759;
  double t5766;
  double t5777;
  double t5784;
  double t5787;
  double t5788;
  double t5792;
  double t5861;
  double t5869;
  double t5881;
  double t5890;
  double t5897;
  double t5898;
  double t5903;
  double t5906;
  double t5908;
  double t5910;
  double t5969;
  double t5972;
  double t5975;
  double t5976;
  double t5982;
  double t5984;
  double t5986;
  double t5988;
  double t5991;
  double t5994;
  double t5996;
  double t6000;
  double t6055;
  double t6059;
  double t6066;
  double t6071;
  double t6072;
  double t6075;
  double t6052;
  double t6068;
  double t6079;
  double t6081;
  double t6122;
  double t6124;
  double t6128;
  double t6152;
  double t6157;
  double t6164;
  double t6165;
  double t6171;
  double t3140;
  double t3169;
  double t3202;
  double t3211;
  double t3250;
  double t3259;
  double t3263;
  double t3272;
  double t3502;
  double t3507;
  double t3543;
  double t3547;
  double t3551;
  double t3558;
  double t3565;
  double t3575;
  double t3893;
  double t3895;
  double t3896;
  double t3901;
  double t3918;
  double t3920;
  double t3931;
  double t3932;
  double t3982;
  double t4012;
  double t4041;
  double t4062;
  double t4085;
  double t4087;
  double t4113;
  double t4130;
  double t4215;
  double t4251;
  double t4272;
  double t4275;
  double t4278;
  double t4279;
  double t4289;
  double t4290;
  double t4610;
  double t4611;
  double t4618;
  double t4619;
  double t4622;
  double t4624;
  double t4630;
  double t4631;
  double t4721;
  double t4726;
  double t4739;
  double t4740;
  double t4752;
  double t4754;
  double t4755;
  double t4757;
  double t4777;
  double t4784;
  double t4785;
  double t4789;
  double t4793;
  double t4809;
  double t4813;
  double t4819;
  double t4931;
  double t4933;
  double t4939;
  double t4952;
  double t4954;
  double t4956;
  double t4957;
  double t4961;
  double t5116;
  double t5124;
  double t5125;
  double t5127;
  double t5143;
  double t5152;
  double t5161;
  double t5174;
  double t5253;
  double t5300;
  double t5353;
  double t5355;
  double t5378;
  double t5379;
  double t5385;
  double t5394;
  double t5456;
  double t5470;
  double t5504;
  double t5509;
  double t5528;
  double t5533;
  double t5534;
  double t5535;
  double t5690;
  double t5695;
  double t5697;
  double t5702;
  double t5708;
  double t5714;
  double t5719;
  double t5724;
  double t5813;
  double t5816;
  double t5817;
  double t5822;
  double t5829;
  double t5837;
  double t5840;
  double t5841;
  double t5885;
  double t5901;
  double t5916;
  double t5918;
  double t5924;
  double t5928;
  double t5932;
  double t5933;
  double t5981;
  double t5989;
  double t6001;
  double t6004;
  double t6012;
  double t6016;
  double t6017;
  double t6018;
  double t6189;
  double t6197;
  double t6200;
  double t6201;
  double t6206;
  double t6212;
  double t6214;
  double t6216;
  double t2564;
  double t2871;
  double t3062;
  double t3067;
  double t3094;
  double t3395;
  double t3451;
  double t3464;
  double t3469;
  double t3472;
  double t3794;
  double t3847;
  double t3880;
  double t3885;
  double t3888;
  double t4165;
  double t4197;
  double t4198;
  double t4200;
  double t4201;
  double t4308;
  double t4316;
  double t4318;
  double t4335;
  double t4353;
  double t4562;
  double t4570;
  double t4598;
  double t4600;
  double t4607;
  double t4675;
  double t4693;
  double t4708;
  double t4709;
  double t4710;
  double t4763;
  double t4769;
  double t4770;
  double t4772;
  double t4776;
  double t4899;
  double t4909;
  double t4918;
  double t4924;
  double t4925;
  double t5029;
  double t5060;
  double t5098;
  double t5109;
  double t5115;
  double t5400;
  double t5405;
  double t5413;
  double t5416;
  double t5427;
  double t5559;
  double t5565;
  double t5567;
  double t5570;
  double t5574;
  double t5644;
  double t5655;
  double t5677;
  double t5683;
  double t5685;
  double t5764;
  double t5785;
  double t5798;
  double t5802;
  double t5809;
  double t5935;
  double t5937;
  double t5944;
  double t5948;
  double t5951;
  double t6025;
  double t6026;
  double t6030;
  double t6034;
  double t6037;
  double t6086;
  double t6155;
  double t6173;
  double t6176;
  double t6182;
  t764 = Cos(var1[3]);
  t1594 = Cos(var1[4]);
  t1427 = Cos(var1[25]);
  t1506 = -1.*t1427;
  t1579 = 1. + t1506;
  t2046 = Cos(var1[24]);
  t1803 = Cos(var1[5]);
  t1836 = Sin(var1[24]);
  t2143 = Sin(var1[5]);
  t18 = Cos(var1[26]);
  t374 = -1.*t18;
  t404 = 1. + t374;
  t425 = Sin(var1[26]);
  t960 = Sin(var1[25]);
  t1248 = Sin(var1[4]);
  t1884 = -1.*t764*t1594*t1803*t1836;
  t2171 = t2046*t764*t1594*t2143;
  t2231 = t1884 + t2171;
  t2428 = t2046*t764*t1594*t1803;
  t2429 = t764*t1594*t1836*t2143;
  t2519 = t2428 + t2429;
  t981 = -0.994522*t960;
  t1183 = 0. + t981;
  t1305 = -1.*t764*t1183*t1248;
  t2261 = -0.103955395616*t1579*t2231;
  t2377 = -0.9890740084840001*t1579;
  t2400 = 1. + t2377;
  t2553 = t2400*t2519;
  t2554 = t1305 + t2261 + t2553;
  t2624 = -0.104528*t960;
  t2629 = 0. + t2624;
  t2642 = -1.*t764*t2629*t1248;
  t2720 = -0.010926102783999999*t1579;
  t2721 = 1. + t2720;
  t2778 = t2721*t2231;
  t2838 = -0.103955395616*t1579*t2519;
  t2851 = t2642 + t2778 + t2838;
  t422 = -0.49726168403800003*t404;
  t2938 = -1.0000001112680001*t1579;
  t2940 = 1. + t2938;
  t2964 = -1.*t2940*t764*t1248;
  t2987 = 0.104528*t960;
  t2996 = 0. + t2987;
  t3018 = t2996*t2231;
  t3021 = 0.994522*t960;
  t3023 = 0. + t3021;
  t3055 = t3023*t2519;
  t3061 = t2964 + t3018 + t3055;
  t3142 = 0.051978134642000004*t404;
  t2566 = -0.05226439969100001*t404;
  t2578 = -0.703234*t425;
  t2620 = t2566 + t2578;
  t3316 = Sin(var1[3]);
  t3307 = t764*t1803*t1248;
  t3320 = t3316*t2143;
  t3337 = t3307 + t3320;
  t3356 = t1803*t3316;
  t3357 = -1.*t764*t1248*t2143;
  t3358 = t3356 + t3357;
  t594 = 0.073913*t425;
  t609 = t422 + t594;
  t3340 = t1836*t3337;
  t3359 = t2046*t3358;
  t3366 = t3340 + t3359;
  t3375 = t2046*t3337;
  t3379 = -1.*t1836*t3358;
  t3382 = t3375 + t3379;
  t2895 = -0.500001190325*t404;
  t2907 = 1. + t2895;
  t3143 = -0.707107*t425;
  t3149 = t3142 + t3143;
  t3371 = -0.103955395616*t1579*t3366;
  t3386 = t2721*t3382;
  t3390 = t3371 + t3386;
  t3121 = -0.5054634410180001*t404;
  t3122 = 1. + t3121;
  t3427 = t2400*t3366;
  t3437 = -0.103955395616*t1579*t3382;
  t3444 = t3427 + t3437;
  t3170 = -0.073913*t425;
  t3184 = t422 + t3170;
  t3457 = t3023*t3366;
  t3461 = t2996*t3382;
  t3462 = t3457 + t3461;
  t3254 = -0.9945383682050002*t404;
  t3255 = 1. + t3254;
  t3215 = 0.707107*t425;
  t3247 = t3142 + t3215;
  t3260 = 0.703234*t425;
  t3261 = t2566 + t3260;
  t3654 = -1.*t1803*t3316;
  t3659 = t764*t1248*t2143;
  t3690 = t3654 + t3659;
  t3646 = -1.*t1836*t3337;
  t3696 = t2046*t3690;
  t3711 = t3646 + t3696;
  t3724 = -1.*t2046*t3337;
  t3725 = -1.*t1836*t3690;
  t3737 = t3724 + t3725;
  t3712 = -0.103955395616*t1579*t3711;
  t3743 = t2721*t3737;
  t3788 = t3712 + t3743;
  t3806 = t2400*t3711;
  t3833 = -0.103955395616*t1579*t3737;
  t3846 = t3806 + t3833;
  t3850 = t3023*t3711;
  t3852 = t2996*t3737;
  t3858 = t3850 + t3852;
  t3954 = t1836*t3690;
  t3958 = t3375 + t3954;
  t3986 = 0.051978134642000004*t425;
  t3946 = t764*t1594*t1183;
  t3972 = t2400*t3958;
  t3981 = t3946 + t3712 + t3972;
  t3991 = t764*t1594*t2629;
  t3999 = t2721*t3711;
  t4001 = -0.103955395616*t1579*t3958;
  t4006 = t3991 + t3999 + t4001;
  t4035 = t2940*t764*t1594;
  t4036 = t2996*t3711;
  t4037 = t3023*t3958;
  t4038 = t4035 + t4036 + t4037;
  t4024 = -0.49726168403800003*t425;
  t4092 = -0.05226439969100001*t425;
  t4209 = -1.0000001112680001*t764*t1594*t960;
  t4211 = 0.104528*t1427*t3711;
  t4213 = 0.994522*t1427*t3958;
  t4214 = t4209 + t4211 + t4213;
  t4217 = -0.994522*t1427*t764*t1594;
  t4219 = -0.103955395616*t960*t3711;
  t4238 = -0.9890740084840001*t960*t3958;
  t4249 = t4217 + t4219 + t4238;
  t4254 = -0.104528*t1427*t764*t1594;
  t4256 = -0.010926102783999999*t960*t3711;
  t4260 = -0.103955395616*t960*t3958;
  t4264 = t4254 + t4256 + t4260;
  t4396 = -1.*t1803*t3316*t1248;
  t4410 = t764*t2143;
  t4415 = t4396 + t4410;
  t4427 = -1.*t764*t1803;
  t4431 = -1.*t3316*t1248*t2143;
  t4446 = t4427 + t4431;
  t4425 = -1.*t1836*t4415;
  t4495 = t2046*t4446;
  t4496 = t4425 + t4495;
  t4505 = t2046*t4415;
  t4520 = t1836*t4446;
  t4530 = t4505 + t4520;
  t4393 = -1.*t1594*t1183*t3316;
  t4497 = -0.103955395616*t1579*t4496;
  t4533 = t2400*t4530;
  t4549 = t4393 + t4497 + t4533;
  t4563 = -1.*t1594*t2629*t3316;
  t4566 = t2721*t4496;
  t4568 = -0.103955395616*t1579*t4530;
  t4569 = t4563 + t4566 + t4568;
  t4572 = -1.*t2940*t1594*t3316;
  t4579 = t2996*t4496;
  t4580 = t3023*t4530;
  t4597 = t4572 + t4579 + t4580;
  t4649 = -1.*t1594*t1803*t1836*t3316;
  t4657 = t2046*t1594*t3316*t2143;
  t4659 = t4649 + t4657;
  t4665 = t2046*t1594*t1803*t3316;
  t4666 = t1594*t1836*t3316*t2143;
  t4668 = t4665 + t4666;
  t4648 = -1.*t1183*t3316*t1248;
  t4661 = -0.103955395616*t1579*t4659;
  t4669 = t2400*t4668;
  t4671 = t4648 + t4661 + t4669;
  t4682 = -1.*t2629*t3316*t1248;
  t4683 = t2721*t4659;
  t4685 = -0.103955395616*t1579*t4668;
  t4689 = t4682 + t4683 + t4685;
  t4695 = -1.*t2940*t3316*t1248;
  t4696 = t2996*t4659;
  t4699 = t3023*t4668;
  t4707 = t4695 + t4696 + t4699;
  t4829 = t1803*t3316*t1248;
  t4833 = -1.*t764*t2143;
  t4838 = t4829 + t4833;
  t4841 = t1836*t4838;
  t4849 = t4841 + t4495;
  t4863 = t2046*t4838;
  t4873 = -1.*t1836*t4446;
  t4875 = t4863 + t4873;
  t4855 = -0.103955395616*t1579*t4849;
  t4886 = t2721*t4875;
  t4898 = t4855 + t4886;
  t4904 = t2400*t4849;
  t4906 = -0.103955395616*t1579*t4875;
  t4907 = t4904 + t4906;
  t4911 = t3023*t4849;
  t4914 = t2996*t4875;
  t4917 = t4911 + t4914;
  t4974 = t764*t1803;
  t4975 = t3316*t1248*t2143;
  t4978 = t4974 + t4975;
  t4973 = -1.*t1836*t4838;
  t4990 = t2046*t4978;
  t4999 = t4973 + t4990;
  t5003 = -1.*t2046*t4838;
  t5004 = -1.*t1836*t4978;
  t5005 = t5003 + t5004;
  t5000 = -0.103955395616*t1579*t4999;
  t5008 = t2721*t5005;
  t5023 = t5000 + t5008;
  t5038 = t2400*t4999;
  t5040 = -0.103955395616*t1579*t5005;
  t5052 = t5038 + t5040;
  t5064 = t3023*t4999;
  t5087 = t2996*t5005;
  t5094 = t5064 + t5087;
  t3983 = -0.707107*t18;
  t3987 = t3983 + t3986;
  t5217 = t1836*t4978;
  t5226 = t4863 + t5217;
  t4021 = -0.073913*t18;
  t4034 = t4021 + t4024;
  t4078 = 0.707107*t18;
  t4084 = t4078 + t3986;
  t5215 = t1594*t1183*t3316;
  t5234 = t2400*t5226;
  t5239 = t5215 + t5000 + t5234;
  t5260 = t1594*t2629*t3316;
  t5269 = t2721*t4999;
  t5277 = -0.103955395616*t1579*t5226;
  t5284 = t5260 + t5269 + t5277;
  t4088 = 0.703234*t18;
  t4108 = t4088 + t4092;
  t5306 = t2940*t1594*t3316;
  t5318 = t2996*t4999;
  t5328 = t3023*t5226;
  t5351 = t5306 + t5318 + t5328;
  t4153 = 0.073913*t18;
  t4157 = t4153 + t4024;
  t4184 = -0.703234*t18;
  t4185 = t4184 + t4092;
  t5446 = -1.0000001112680001*t1594*t960*t3316;
  t5449 = 0.104528*t1427*t4999;
  t5450 = 0.994522*t1427*t5226;
  t5452 = t5446 + t5449 + t5450;
  t5459 = -0.994522*t1427*t1594*t3316;
  t5464 = -0.103955395616*t960*t4999;
  t5467 = -0.9890740084840001*t960*t5226;
  t5468 = t5459 + t5464 + t5467;
  t5485 = -0.104528*t1427*t1594*t3316;
  t5488 = -0.010926102783999999*t960*t4999;
  t5490 = -0.103955395616*t960*t5226;
  t5501 = t5485 + t5488 + t5490;
  t5609 = -1.*t1594*t1803*t1836;
  t5615 = t2046*t1594*t2143;
  t5617 = t5609 + t5615;
  t5627 = -1.*t2046*t1594*t1803;
  t5631 = -1.*t1594*t1836*t2143;
  t5634 = t5627 + t5631;
  t5626 = -0.103955395616*t1579*t5617;
  t5637 = t2721*t5634;
  t5638 = t5626 + t5637;
  t5646 = t2400*t5617;
  t5649 = -0.103955395616*t1579*t5634;
  t5650 = t5646 + t5649;
  t5656 = t3023*t5617;
  t5668 = t2996*t5634;
  t5670 = t5656 + t5668;
  t5740 = t1594*t1803*t1836;
  t5743 = -1.*t2046*t1594*t2143;
  t5746 = t5740 + t5743;
  t5749 = t2046*t1594*t1803;
  t5752 = t1594*t1836*t2143;
  t5753 = t5749 + t5752;
  t5748 = -0.103955395616*t1579*t5746;
  t5755 = t2721*t5753;
  t5759 = t5748 + t5755;
  t5766 = t2400*t5746;
  t5777 = -0.103955395616*t1579*t5753;
  t5784 = t5766 + t5777;
  t5787 = t3023*t5746;
  t5788 = t2996*t5753;
  t5792 = t5787 + t5788;
  t5861 = -1.*t1183*t1248;
  t5869 = t2400*t5753;
  t5881 = t5861 + t5626 + t5869;
  t5890 = -1.*t2629*t1248;
  t5897 = t2721*t5617;
  t5898 = t5890 + t5897 + t5777;
  t5903 = -1.*t2940*t1248;
  t5906 = t2996*t5617;
  t5908 = t3023*t5753;
  t5910 = t5903 + t5906 + t5908;
  t5969 = 1.0000001112680001*t960*t1248;
  t5972 = 0.104528*t1427*t5617;
  t5975 = 0.994522*t1427*t5753;
  t5976 = t5969 + t5972 + t5975;
  t5982 = 0.994522*t1427*t1248;
  t5984 = -0.103955395616*t960*t5617;
  t5986 = -0.9890740084840001*t960*t5753;
  t5988 = t5982 + t5984 + t5986;
  t5991 = 0.104528*t1427*t1248;
  t5994 = -0.010926102783999999*t960*t5617;
  t5996 = -0.103955395616*t960*t5753;
  t6000 = t5991 + t5994 + t5996;
  t6055 = t1803*t1836*t1248;
  t6059 = -1.*t2046*t1248*t2143;
  t6066 = t6055 + t6059;
  t6071 = -1.*t2046*t1803*t1248;
  t6072 = -1.*t1836*t1248*t2143;
  t6075 = t6071 + t6072;
  t6052 = -1.*t1594*t1183;
  t6068 = -0.103955395616*t1579*t6066;
  t6079 = t2400*t6075;
  t6081 = t6052 + t6068 + t6079;
  t6122 = -1.*t1594*t2629;
  t6124 = t2721*t6066;
  t6128 = -0.103955395616*t1579*t6075;
  t6152 = t6122 + t6124 + t6128;
  t6157 = -1.*t2940*t1594;
  t6164 = t2996*t6066;
  t6165 = t3023*t6075;
  t6171 = t6157 + t6164 + t6165;
  t3140 = t3122*t2554;
  t3169 = t3149*t2851;
  t3202 = t3184*t3061;
  t3211 = t3140 + t3169 + t3202;
  t3250 = t3247*t2554;
  t3259 = t3255*t2851;
  t3263 = t3261*t3061;
  t3272 = t3250 + t3259 + t3263;
  t3502 = t3149*t3390;
  t3507 = t3122*t3444;
  t3543 = t3184*t3462;
  t3547 = t3502 + t3507 + t3543;
  t3551 = t3255*t3390;
  t3558 = t3247*t3444;
  t3565 = t3261*t3462;
  t3575 = t3551 + t3558 + t3565;
  t3893 = t3149*t3788;
  t3895 = t3122*t3846;
  t3896 = t3184*t3858;
  t3901 = t3893 + t3895 + t3896;
  t3918 = t3255*t3788;
  t3920 = t3247*t3846;
  t3931 = t3261*t3858;
  t3932 = t3918 + t3920 + t3931;
  t3982 = -0.5054634410180001*t425*t3981;
  t4012 = t3987*t4006;
  t4041 = t4034*t4038;
  t4062 = t3982 + t4012 + t4041;
  t4085 = t4084*t3981;
  t4087 = -0.9945383682050002*t425*t4006;
  t4113 = t4108*t4038;
  t4130 = t4085 + t4087 + t4113;
  t4215 = t3261*t4214;
  t4251 = t3247*t4249;
  t4272 = t3255*t4264;
  t4275 = t4215 + t4251 + t4272;
  t4278 = t3184*t4214;
  t4279 = t3122*t4249;
  t4289 = t3149*t4264;
  t4290 = t4278 + t4279 + t4289;
  t4610 = t3122*t4549;
  t4611 = t3149*t4569;
  t4618 = t3184*t4597;
  t4619 = t4610 + t4611 + t4618;
  t4622 = t3247*t4549;
  t4624 = t3255*t4569;
  t4630 = t3261*t4597;
  t4631 = t4622 + t4624 + t4630;
  t4721 = t3122*t4671;
  t4726 = t3149*t4689;
  t4739 = t3184*t4707;
  t4740 = t4721 + t4726 + t4739;
  t4752 = t3247*t4671;
  t4754 = t3255*t4689;
  t4755 = t3261*t4707;
  t4757 = t4752 + t4754 + t4755;
  t4777 = t3122*t3981;
  t4784 = t3149*t4006;
  t4785 = t3184*t4038;
  t4789 = t4777 + t4784 + t4785;
  t4793 = t3247*t3981;
  t4809 = t3255*t4006;
  t4813 = t3261*t4038;
  t4819 = t4793 + t4809 + t4813;
  t4931 = t3149*t4898;
  t4933 = t3122*t4907;
  t4939 = t3184*t4917;
  t4952 = t4931 + t4933 + t4939;
  t4954 = t3255*t4898;
  t4956 = t3247*t4907;
  t4957 = t3261*t4917;
  t4961 = t4954 + t4956 + t4957;
  t5116 = t3149*t5023;
  t5124 = t3122*t5052;
  t5125 = t3184*t5094;
  t5127 = t5116 + t5124 + t5125;
  t5143 = t3255*t5023;
  t5152 = t3247*t5052;
  t5161 = t3261*t5094;
  t5174 = t5143 + t5152 + t5161;
  t5253 = -0.5054634410180001*t425*t5239;
  t5300 = t3987*t5284;
  t5353 = t4034*t5351;
  t5355 = t5253 + t5300 + t5353;
  t5378 = t4084*t5239;
  t5379 = -0.9945383682050002*t425*t5284;
  t5385 = t4108*t5351;
  t5394 = t5378 + t5379 + t5385;
  t5456 = t3261*t5452;
  t5470 = t3247*t5468;
  t5504 = t3255*t5501;
  t5509 = t5456 + t5470 + t5504;
  t5528 = t3184*t5452;
  t5533 = t3122*t5468;
  t5534 = t3149*t5501;
  t5535 = t5528 + t5533 + t5534;
  t5690 = t3149*t5638;
  t5695 = t3122*t5650;
  t5697 = t3184*t5670;
  t5702 = t5690 + t5695 + t5697;
  t5708 = t3255*t5638;
  t5714 = t3247*t5650;
  t5719 = t3261*t5670;
  t5724 = t5708 + t5714 + t5719;
  t5813 = t3149*t5759;
  t5816 = t3122*t5784;
  t5817 = t3184*t5792;
  t5822 = t5813 + t5816 + t5817;
  t5829 = t3255*t5759;
  t5837 = t3247*t5784;
  t5840 = t3261*t5792;
  t5841 = t5829 + t5837 + t5840;
  t5885 = -0.5054634410180001*t425*t5881;
  t5901 = t3987*t5898;
  t5916 = t4034*t5910;
  t5918 = t5885 + t5901 + t5916;
  t5924 = t4084*t5881;
  t5928 = -0.9945383682050002*t425*t5898;
  t5932 = t4108*t5910;
  t5933 = t5924 + t5928 + t5932;
  t5981 = t3261*t5976;
  t5989 = t3247*t5988;
  t6001 = t3255*t6000;
  t6004 = t5981 + t5989 + t6001;
  t6012 = t3184*t5976;
  t6016 = t3122*t5988;
  t6017 = t3149*t6000;
  t6018 = t6012 + t6016 + t6017;
  t6189 = t3122*t6081;
  t6197 = t3149*t6152;
  t6200 = t3184*t6171;
  t6201 = t6189 + t6197 + t6200;
  t6206 = t3247*t6081;
  t6212 = t3255*t6152;
  t6214 = t3261*t6171;
  t6216 = t6206 + t6212 + t6214;
  t2564 = t609*t2554;
  t2871 = t2620*t2851;
  t3062 = t2907*t3061;
  t3067 = t2564 + t2871 + t3062;
  t3094 = 0.707107*t3067;
  t3395 = t2620*t3390;
  t3451 = t609*t3444;
  t3464 = t2907*t3462;
  t3469 = t3395 + t3451 + t3464;
  t3472 = 0.707107*t3469;
  t3794 = t2620*t3788;
  t3847 = t609*t3846;
  t3880 = t2907*t3858;
  t3885 = t3794 + t3847 + t3880;
  t3888 = 0.707107*t3885;
  t4165 = t4157*t3981;
  t4197 = t4185*t4006;
  t4198 = -0.500001190325*t425*t4038;
  t4200 = t4165 + t4197 + t4198;
  t4201 = 0.707107*t4200;
  t4308 = t2907*t4214;
  t4316 = t609*t4249;
  t4318 = t2620*t4264;
  t4335 = t4308 + t4316 + t4318;
  t4353 = 0.707107*t4335;
  t4562 = t609*t4549;
  t4570 = t2620*t4569;
  t4598 = t2907*t4597;
  t4600 = t4562 + t4570 + t4598;
  t4607 = 0.707107*t4600;
  t4675 = t609*t4671;
  t4693 = t2620*t4689;
  t4708 = t2907*t4707;
  t4709 = t4675 + t4693 + t4708;
  t4710 = 0.707107*t4709;
  t4763 = t609*t3981;
  t4769 = t2620*t4006;
  t4770 = t2907*t4038;
  t4772 = t4763 + t4769 + t4770;
  t4776 = 0.707107*t4772;
  t4899 = t2620*t4898;
  t4909 = t609*t4907;
  t4918 = t2907*t4917;
  t4924 = t4899 + t4909 + t4918;
  t4925 = 0.707107*t4924;
  t5029 = t2620*t5023;
  t5060 = t609*t5052;
  t5098 = t2907*t5094;
  t5109 = t5029 + t5060 + t5098;
  t5115 = 0.707107*t5109;
  t5400 = t4157*t5239;
  t5405 = t4185*t5284;
  t5413 = -0.500001190325*t425*t5351;
  t5416 = t5400 + t5405 + t5413;
  t5427 = 0.707107*t5416;
  t5559 = t2907*t5452;
  t5565 = t609*t5468;
  t5567 = t2620*t5501;
  t5570 = t5559 + t5565 + t5567;
  t5574 = 0.707107*t5570;
  t5644 = t2620*t5638;
  t5655 = t609*t5650;
  t5677 = t2907*t5670;
  t5683 = t5644 + t5655 + t5677;
  t5685 = 0.707107*t5683;
  t5764 = t2620*t5759;
  t5785 = t609*t5784;
  t5798 = t2907*t5792;
  t5802 = t5764 + t5785 + t5798;
  t5809 = 0.707107*t5802;
  t5935 = t4157*t5881;
  t5937 = t4185*t5898;
  t5944 = -0.500001190325*t425*t5910;
  t5948 = t5935 + t5937 + t5944;
  t5951 = 0.707107*t5948;
  t6025 = t2907*t5976;
  t6026 = t609*t5988;
  t6030 = t2620*t6000;
  t6034 = t6025 + t6026 + t6030;
  t6037 = 0.707107*t6034;
  t6086 = t609*t6081;
  t6155 = t2620*t6152;
  t6173 = t2907*t6171;
  t6176 = t6086 + t6155 + t6173;
  t6182 = 0.707107*t6176;
  p_output1[0]=(t4607 + 0.703234*t4619 + 0.073913*t4631)*var2[3] + (t3094 + 0.703234*t3211 + 0.073913*t3272)*var2[4] + (t3472 + 0.703234*t3547 + 0.073913*t3575)*var2[5] + (t3888 + 0.703234*t3901 + 0.073913*t3932)*var2[24] + (0.073913*t4275 + 0.703234*t4290 + t4353)*var2[25] + (0.703234*t4062 + 0.073913*t4130 + t4201)*var2[26];
  p_output1[1]=(t4776 + 0.703234*t4789 + 0.073913*t4819)*var2[3] + (t4710 + 0.703234*t4740 + 0.073913*t4757)*var2[4] + (t4925 + 0.703234*t4952 + 0.073913*t4961)*var2[5] + (t5115 + 0.703234*t5127 + 0.073913*t5174)*var2[24] + (0.073913*t5509 + 0.703234*t5535 + t5574)*var2[25] + (0.703234*t5355 + 0.073913*t5394 + t5427)*var2[26];
  p_output1[2]=(t6182 + 0.703234*t6201 + 0.073913*t6216)*var2[4] + (t5809 + 0.703234*t5822 + 0.073913*t5841)*var2[5] + (t5685 + 0.703234*t5702 + 0.073913*t5724)*var2[24] + (0.073913*t6004 + 0.703234*t6018 + t6037)*var2[25] + (0.703234*t5918 + 0.073913*t5933 + t5951)*var2[26];
  p_output1[3]=(0.104528*t4619 - 0.994522*t4631)*var2[3] + (0.104528*t3211 - 0.994522*t3272)*var2[4] + (0.104528*t3547 - 0.994522*t3575)*var2[5] + (0.104528*t3901 - 0.994522*t3932)*var2[24] + (-0.994522*t4275 + 0.104528*t4290)*var2[25] + (0.104528*t4062 - 0.994522*t4130)*var2[26];
  p_output1[4]=(0.104528*t4789 - 0.994522*t4819)*var2[3] + (0.104528*t4740 - 0.994522*t4757)*var2[4] + (0.104528*t4952 - 0.994522*t4961)*var2[5] + (0.104528*t5127 - 0.994522*t5174)*var2[24] + (-0.994522*t5509 + 0.104528*t5535)*var2[25] + (0.104528*t5355 - 0.994522*t5394)*var2[26];
  p_output1[5]=(0.104528*t6201 - 0.994522*t6216)*var2[4] + (0.104528*t5822 - 0.994522*t5841)*var2[5] + (0.104528*t5702 - 0.994522*t5724)*var2[24] + (-0.994522*t6004 + 0.104528*t6018)*var2[25] + (0.104528*t5918 - 0.994522*t5933)*var2[26];
  p_output1[6]=(t4607 - 0.703234*t4619 - 0.073913*t4631)*var2[3] + (t3094 - 0.703234*t3211 - 0.073913*t3272)*var2[4] + (t3472 - 0.703234*t3547 - 0.073913*t3575)*var2[5] + (t3888 - 0.703234*t3901 - 0.073913*t3932)*var2[24] + (-0.073913*t4275 - 0.703234*t4290 + t4353)*var2[25] + (-0.703234*t4062 - 0.073913*t4130 + t4201)*var2[26];
  p_output1[7]=(t4776 - 0.703234*t4789 - 0.073913*t4819)*var2[3] + (t4710 - 0.703234*t4740 - 0.073913*t4757)*var2[4] + (t4925 - 0.703234*t4952 - 0.073913*t4961)*var2[5] + (t5115 - 0.703234*t5127 - 0.073913*t5174)*var2[24] + (-0.073913*t5509 - 0.703234*t5535 + t5574)*var2[25] + (-0.703234*t5355 - 0.073913*t5394 + t5427)*var2[26];
  p_output1[8]=(t6182 - 0.703234*t6201 - 0.073913*t6216)*var2[4] + (t5809 - 0.703234*t5822 - 0.073913*t5841)*var2[5] + (t5685 - 0.703234*t5702 - 0.073913*t5724)*var2[24] + (-0.073913*t6004 - 0.703234*t6018 + t6037)*var2[25] + (-0.703234*t5918 - 0.073913*t5933 + t5951)*var2[26];
}



void dR_right_shoulder_yaw_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
