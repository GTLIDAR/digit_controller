/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:44:59 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Js_knee_joint_right_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t86;
  double t101;
  double t152;
  double t170;
  double t284;
  double t338;
  double t300;
  double t340;
  double t343;
  double t593;
  double t571;
  double t595;
  double t604;
  double t642;
  double t360;
  double t373;
  double t389;
  double t734;
  double t740;
  double t755;
  double t762;
  double t795;
  double t798;
  double t804;
  double t805;
  double t818;
  double t747;
  double t829;
  double t831;
  double t848;
  double t849;
  double t859;
  double t861;
  double t864;
  double t867;
  double t873;
  double t929;
  double t930;
  double t935;
  double t711;
  double t715;
  double t728;
  double t49;
  double t579;
  double t661;
  double t678;
  double t902;
  double t922;
  double t925;
  double t991;
  double t999;
  double t1011;
  double t1026;
  double t1031;
  double t1041;
  double t697;
  double t698;
  double t702;
  double t1239;
  double t1240;
  double t1260;
  double t1282;
  double t1297;
  double t1302;
  double t1316;
  double t1492;
  double t1493;
  double t1516;
  double t1458;
  double t1675;
  double t1689;
  double t1719;
  double t1726;
  double t1560;
  double t1563;
  double t1463;
  double t1465;
  double t1522;
  double t1530;
  double t1764;
  double t1777;
  double t1785;
  double t1790;
  double t1808;
  double t1810;
  double t1813;
  double t1816;
  double t1839;
  double t1854;
  double t1856;
  double t1867;
  double t1803;
  double t1821;
  double t1875;
  double t1880;
  double t1598;
  double t1603;
  double t1945;
  double t1956;
  double t1960;
  double t1962;
  double t1883;
  double t1888;
  double t1894;
  double t1895;
  double t1985;
  double t1994;
  double t1999;
  double t2001;
  double t1661;
  double t1670;
  double t1490;
  double t1520;
  double t1539;
  double t1547;
  double t1925;
  double t1929;
  double t1932;
  double t1940;
  double t2165;
  double t2191;
  double t2197;
  double t2199;
  double t1582;
  double t1622;
  double t1634;
  double t1645;
  double t2011;
  double t2018;
  double t2028;
  double t2031;
  double t2209;
  double t2219;
  double t2239;
  double t2245;
  double t2357;
  double t2360;
  double t2368;
  double t2378;
  double t2413;
  double t2418;
  double t2430;
  double t2447;
  double t2580;
  double t1674;
  double t1714;
  double t1728;
  double t1733;
  double t2619;
  double t2635;
  double t2647;
  double t2711;
  double t2718;
  double t2747;
  double t2751;
  double t2312;
  double t2319;
  double t2322;
  double t2340;
  double t2785;
  double t2828;
  double t2606;
  double t2614;
  double t2585;
  double t2589;
  double t2108;
  double t2140;
  double t2141;
  double t2160;
  double t2882;
  double t2897;
  double t2898;
  double t2902;
  double t2909;
  double t2924;
  double t2926;
  double t2929;
  double t2945;
  double t2947;
  double t2952;
  double t2960;
  double t2764;
  double t2773;
  double t2903;
  double t2935;
  double t2968;
  double t2982;
  double t3003;
  double t3017;
  double t3020;
  double t3021;
  double t2659;
  double t2678;
  double t3029;
  double t3034;
  double t3040;
  double t3044;
  double t3078;
  double t3131;
  double t3137;
  double t3144;
  double t2859;
  double t2866;
  double t2869;
  double t2875;
  double t2719;
  double t2737;
  double t2752;
  double t2754;
  double t3065;
  double t3066;
  double t3070;
  double t3073;
  double t3192;
  double t3195;
  double t3199;
  double t3227;
  double t3240;
  double t3247;
  double t3254;
  double t3256;
  double t2763;
  double t2779;
  double t2832;
  double t2836;
  double t3355;
  double t3360;
  double t3363;
  double t3372;
  double t3402;
  double t3416;
  double t3421;
  double t3428;
  t86 = Cos(var1[3]);
  t101 = Sin(var1[3]);
  t152 = Cos(var1[4]);
  t170 = Sin(var1[4]);
  t284 = Cos(var1[5]);
  t338 = Sin(var1[5]);
  t300 = t86*t284*t170;
  t340 = t101*t338;
  t343 = t300 + t340;
  t593 = Cos(var1[17]);
  t571 = Sin(var1[17]);
  t595 = -1.*t284*t101;
  t604 = t86*t170*t338;
  t642 = t595 + t604;
  t360 = t284*t101*t170;
  t373 = -1.*t86*t338;
  t389 = t360 + t373;
  t734 = -0.091*t571;
  t740 = 0. + t734;
  t755 = -1.*t593;
  t762 = 1. + t755;
  t795 = -0.091*t762;
  t798 = 0. + t795;
  t804 = t86*t284;
  t805 = t101*t170*t338;
  t818 = t804 + t805;
  t747 = t740*t389;
  t829 = t798*t818;
  t831 = 0. + var1[1] + t747 + t829;
  t848 = -1.*var1[2];
  t849 = -1.*t152*t284*t740;
  t859 = -1.*t798*t152*t338;
  t861 = 0. + t848 + t849 + t859;
  t864 = -1.*t571*t389;
  t867 = t593*t818;
  t873 = t864 + t867;
  t929 = t593*t389;
  t930 = t571*t818;
  t935 = t929 + t930;
  t711 = -1.*t152*t284*t571;
  t715 = t593*t152*t338;
  t728 = t711 + t715;
  t49 = -1.*var1[0];
  t579 = -1.*t571*t343;
  t661 = t593*t642;
  t678 = t579 + t661;
  t902 = t593*t152*t284;
  t922 = t152*t571*t338;
  t925 = t902 + t922;
  t991 = -1.*t740*t343;
  t999 = -1.*t798*t642;
  t1011 = 0. + t49 + t991 + t999;
  t1026 = t152*t284*t740;
  t1031 = t798*t152*t338;
  t1041 = 0. + var1[2] + t1026 + t1031;
  t697 = t593*t343;
  t698 = t571*t642;
  t702 = t697 + t698;
  t1239 = -1.*var1[1];
  t1240 = -1.*t740*t389;
  t1260 = -1.*t798*t818;
  t1282 = 0. + t1239 + t1240 + t1260;
  t1297 = t740*t343;
  t1302 = t798*t642;
  t1316 = 0. + var1[0] + t1297 + t1302;
  t1492 = Cos(var1[18]);
  t1493 = -1.*t1492;
  t1516 = 1. + t1493;
  t1458 = Sin(var1[18]);
  t1675 = -0.930418*t1458;
  t1689 = 0. + t1675;
  t1719 = 0.366501*t1458;
  t1726 = 0. + t1719;
  t1560 = 0.930418*t1458;
  t1563 = 0. + t1560;
  t1463 = -0.366501*t1458;
  t1465 = 0. + t1463;
  t1522 = -0.134322983001*t1516;
  t1530 = 1. + t1522;
  t1764 = -0.04500040093286238*t1516;
  t1777 = -0.07877663122399998*t1689;
  t1785 = 0.031030906668*t1726;
  t1790 = 0. + t1764 + t1777 + t1785;
  t1808 = 1.296332362046933e-7*var1[18];
  t1810 = -0.07877668146182712*t1516;
  t1813 = -0.045000372235*t1563;
  t1816 = t1808 + t1810 + t1813;
  t1839 = 3.2909349868922137e-7*var1[18];
  t1854 = 0.03103092645718495*t1516;
  t1856 = -0.045000372235*t1465;
  t1867 = t1839 + t1854 + t1856;
  t1803 = t1790*t170;
  t1821 = -1.*t1816*t728;
  t1875 = -1.*t1867*t925;
  t1880 = 0. + t848 + t849 + t1803 + t859 + t1821 + t1875;
  t1598 = -0.8656776547239999*t1516;
  t1603 = 1. + t1598;
  t1945 = t152*t1790*t101;
  t1956 = t1816*t873;
  t1960 = t1867*t935;
  t1962 = 0. + var1[1] + t1945 + t747 + t829 + t1956 + t1960;
  t1883 = t152*t1465*t101;
  t1888 = 0.340999127418*t1516*t873;
  t1894 = t1530*t935;
  t1895 = t1883 + t1888 + t1894;
  t1985 = t152*t1563*t101;
  t1994 = t1603*t873;
  t1999 = 0.340999127418*t1516*t935;
  t2001 = t1985 + t1994 + t1999;
  t1661 = -1.000000637725*t1516;
  t1670 = 1. + t1661;
  t1490 = t86*t152*t1465;
  t1520 = 0.340999127418*t1516*t678;
  t1539 = t1530*t702;
  t1547 = t1490 + t1520 + t1539;
  t1925 = -1.*t1465*t170;
  t1929 = 0.340999127418*t1516*t728;
  t1932 = t1530*t925;
  t1940 = t1925 + t1929 + t1932;
  t2165 = -1.*t1790*t170;
  t2191 = t1816*t728;
  t2197 = t1867*t925;
  t2199 = 0. + var1[2] + t1026 + t2165 + t1031 + t2191 + t2197;
  t1582 = t86*t152*t1563;
  t1622 = t1603*t678;
  t1634 = 0.340999127418*t1516*t702;
  t1645 = t1582 + t1622 + t1634;
  t2011 = -1.*t1563*t170;
  t2018 = t1603*t728;
  t2028 = 0.340999127418*t1516*t925;
  t2031 = t2011 + t2018 + t2028;
  t2209 = -1.*t86*t152*t1790;
  t2219 = -1.*t1816*t678;
  t2239 = -1.*t1867*t702;
  t2245 = 0. + t49 + t2209 + t991 + t999 + t2219 + t2239;
  t2357 = t86*t152*t1790;
  t2360 = t1816*t678;
  t2368 = t1867*t702;
  t2378 = 0. + var1[0] + t2357 + t1297 + t1302 + t2360 + t2368;
  t2413 = -1.*t152*t1790*t101;
  t2418 = -1.*t1816*t873;
  t2430 = -1.*t1867*t935;
  t2447 = 0. + t1239 + t2413 + t1240 + t1260 + t2418 + t2430;
  t2580 = Sin(var1[19]);
  t1674 = t1670*t86*t152;
  t1714 = t1689*t678;
  t1728 = t1726*t702;
  t1733 = t1674 + t1714 + t1728;
  t2619 = Cos(var1[19]);
  t2635 = -1.*t2619;
  t2647 = 1. + t2635;
  t2711 = -0.8656776547239999*t2647;
  t2718 = 1. + t2711;
  t2747 = -0.930418*t2580;
  t2751 = 0. + t2747;
  t2312 = -1.*t1670*t170;
  t2319 = t1689*t728;
  t2322 = t1726*t925;
  t2340 = t2312 + t2319 + t2322;
  t2785 = -0.366501*t2580;
  t2828 = 0. + t2785;
  t2606 = 0.366501*t2580;
  t2614 = 0. + t2606;
  t2585 = 0.930418*t2580;
  t2589 = 0. + t2585;
  t2108 = t1670*t152*t101;
  t2140 = t1689*t873;
  t2141 = t1726*t935;
  t2160 = t2108 + t2140 + t2141;
  t2882 = -1.296332362046933e-7*var1[19];
  t2897 = -0.14128592423750855*t2647;
  t2898 = -0.045000372235*t2751;
  t2902 = t2882 + t2897 + t2898;
  t2909 = 3.2909349868922137e-7*var1[19];
  t2924 = -0.055653945343889656*t2647;
  t2926 = -0.045000372235*t2828;
  t2929 = t2909 + t2924 + t2926;
  t2945 = -0.04500040093286238*t2647;
  t2947 = -0.055653909852*t2614;
  t2952 = -0.141285834136*t2589;
  t2960 = 0. + t2945 + t2947 + t2952;
  t2764 = -0.134322983001*t2647;
  t2773 = 1. + t2764;
  t2903 = t2902*t1895;
  t2935 = t2929*t2001;
  t2968 = t2960*t2160;
  t2982 = 0. + var1[1] + t1945 + t747 + t829 + t1956 + t1960 + t2903 + t2935 + t2968;
  t3003 = -1.*t2902*t1940;
  t3017 = -1.*t2929*t2031;
  t3020 = -1.*t2960*t2340;
  t3021 = 0. + t848 + t849 + t1803 + t859 + t1821 + t1875 + t3003 + t3017 + t3020;
  t2659 = -1.000000637725*t2647;
  t2678 = 1. + t2659;
  t3029 = t2718*t1895;
  t3034 = -0.340999127418*t2647*t2001;
  t3040 = t2751*t2160;
  t3044 = t3029 + t3034 + t3040;
  t3078 = -0.340999127418*t2647*t1895;
  t3131 = t2773*t2001;
  t3137 = t2828*t2160;
  t3144 = t3078 + t3131 + t3137;
  t2859 = t2718*t1940;
  t2866 = -0.340999127418*t2647*t2031;
  t2869 = t2751*t2340;
  t2875 = t2859 + t2866 + t2869;
  t2719 = t2718*t1547;
  t2737 = -0.340999127418*t2647*t1645;
  t2752 = t2751*t1733;
  t2754 = t2719 + t2737 + t2752;
  t3065 = -0.340999127418*t2647*t1940;
  t3066 = t2773*t2031;
  t3070 = t2828*t2340;
  t3073 = t3065 + t3066 + t3070;
  t3192 = -1.*t2902*t1547;
  t3195 = -1.*t2929*t1645;
  t3199 = -1.*t2960*t1733;
  t3227 = 0. + t49 + t2209 + t991 + t999 + t2219 + t2239 + t3192 + t3195 + t3199;
  t3240 = t2902*t1940;
  t3247 = t2929*t2031;
  t3254 = t2960*t2340;
  t3256 = 0. + var1[2] + t1026 + t2165 + t1031 + t2191 + t2197 + t3240 + t3247 + t3254;
  t2763 = -0.340999127418*t2647*t1547;
  t2779 = t2773*t1645;
  t2832 = t2828*t1733;
  t2836 = t2763 + t2779 + t2832;
  t3355 = -1.*t2902*t1895;
  t3360 = -1.*t2929*t2001;
  t3363 = -1.*t2960*t2160;
  t3372 = 0. + t1239 + t2413 + t1240 + t1260 + t2418 + t2430 + t3355 + t3360 + t3363;
  t3402 = t2902*t1547;
  t3416 = t2929*t1645;
  t3421 = t2960*t1733;
  t3428 = 0. + var1[0] + t2357 + t1297 + t1302 + t2360 + t2368 + t3402 + t3416 + t3421;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=1.;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=1.;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=var1[1];
  p_output1[19]=t49;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=1.;
  p_output1[24]=-1.*t86*var1[2];
  p_output1[25]=-1.*t101*var1[2];
  p_output1[26]=t86*var1[0] + t101*var1[1];
  p_output1[27]=-1.*t101;
  p_output1[28]=t86;
  p_output1[29]=0;
  p_output1[30]=-1.*t170*var1[1] - 1.*t101*t152*var1[2];
  p_output1[31]=t170*var1[0] + t152*t86*var1[2];
  p_output1[32]=t101*t152*var1[0] - 1.*t152*t86*var1[1];
  p_output1[33]=t152*t86;
  p_output1[34]=t101*t152;
  p_output1[35]=-1.*t170;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=-0.091*t343 + t170*var1[1] + t101*t152*var1[2];
  p_output1[103]=-0.091*t389 - 1.*t170*var1[0] - 1.*t152*t86*var1[2];
  p_output1[104]=-0.091*t152*t284 - 1.*t101*t152*var1[0] + t152*t86*var1[1];
  p_output1[105]=0. - 1.*t152*t86;
  p_output1[106]=0. - 1.*t101*t152;
  p_output1[107]=0. + t170;
  p_output1[108]=-0.041869*t678 + 0.016493*t702 + 0.084668*t152*t86 - 0.366501*(t728*t831 + t861*t873) - 0.930418*(t831*t925 + t861*t935);
  p_output1[109]=0.084668*t101*t152 - 0.366501*(t1041*t678 + t1011*t728) - 0.041869*t873 - 0.930418*(t1041*t702 + t1011*t925) + 0.016493*t935;
  p_output1[110]=-0.084668*t170 - 0.041869*t728 - 0.366501*(t1282*t678 + t1316*t873) + 0.016493*t925 - 0.930418*(t1282*t702 + t1316*t935);
  p_output1[111]=0. - 0.366501*t678 - 0.930418*t702;
  p_output1[112]=0. - 0.366501*t873 - 0.930418*t935;
  p_output1[113]=0. - 0.366501*t728 - 0.930418*t925;
  p_output1[114]=0.041869*t1547 + 0.016493*t1645 - 0.151852*t1733 + 0.366501*(t1880*t1895 + t1940*t1962) - 0.930418*(t1880*t2001 + t1962*t2031);
  p_output1[115]=0.041869*t1895 + 0.016493*t2001 - 0.151852*t2160 + 0.366501*(t1547*t2199 + t1940*t2245) - 0.930418*(t1645*t2199 + t2031*t2245);
  p_output1[116]=0.041869*t1940 + 0.016493*t2031 - 0.151852*t2340 + 0.366501*(t1895*t2378 + t1547*t2447) - 0.930418*(t2001*t2378 + t1645*t2447);
  p_output1[117]=0. + 0.366501*t1547 - 0.930418*t1645;
  p_output1[118]=0. + 0.366501*t1895 - 0.930418*t2001;
  p_output1[119]=0. + 0.366501*t1940 - 0.930418*t2031;
  p_output1[120]=0.236705*(t1547*t2589 + t1645*t2614 + t1733*t2678) + 0.03708*t2754 + 0.014606*t2836 - 0.366501*(t2875*t2982 + t3021*t3044) + 0.930418*(t2982*t3073 + t3021*t3144);
  p_output1[121]=0.236705*(t1895*t2589 + t2001*t2614 + t2160*t2678) + 0.03708*t3044 + 0.014606*t3144 - 0.366501*(t2875*t3227 + t2754*t3256) + 0.930418*(t3073*t3227 + t2836*t3256);
  p_output1[122]=0.236705*(t1940*t2589 + t2031*t2614 + t2340*t2678) + 0.03708*t2875 + 0.014606*t3073 - 0.366501*(t2754*t3372 + t3044*t3428) + 0.930418*(t2836*t3372 + t3144*t3428);
  p_output1[123]=0. - 0.366501*t2754 + 0.930418*t2836;
  p_output1[124]=0. - 0.366501*t3044 + 0.930418*t3144;
  p_output1[125]=0. - 0.366501*t2875 + 0.930418*t3073;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void Js_knee_joint_right_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
