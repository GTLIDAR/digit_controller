/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:10:14 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dR_right_knee_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t65;
  double t701;
  double t396;
  double t505;
  double t538;
  double t1099;
  double t936;
  double t1055;
  double t1538;
  double t51;
  double t142;
  double t375;
  double t1085;
  double t1629;
  double t1702;
  double t2003;
  double t2028;
  double t2051;
  double t2378;
  double t2547;
  double t2558;
  double t286;
  double t373;
  double t390;
  double t1923;
  double t1927;
  double t1933;
  double t2096;
  double t2118;
  double t2180;
  double t2188;
  double t2212;
  double t2222;
  double t2247;
  double t2280;
  double t2303;
  double t2326;
  double t2617;
  double t2627;
  double t2787;
  double t2795;
  double t2816;
  double t2825;
  double t2835;
  double t2841;
  double t2860;
  double t2889;
  double t2953;
  double t2962;
  double t2963;
  double t25;
  double t63;
  double t64;
  double t2119;
  double t2130;
  double t2174;
  double t2365;
  double t2564;
  double t2605;
  double t2929;
  double t2931;
  double t2966;
  double t2968;
  double t2971;
  double t2981;
  double t3022;
  double t3036;
  double t3057;
  double t3100;
  double t3104;
  double t3105;
  double t3108;
  double t3114;
  double t3120;
  double t3123;
  double t3138;
  double t3163;
  double t32;
  double t48;
  double t3283;
  double t3277;
  double t3290;
  double t3291;
  double t3309;
  double t3310;
  double t3311;
  double t3293;
  double t3317;
  double t3318;
  double t3322;
  double t3328;
  double t3331;
  double t3319;
  double t3340;
  double t3348;
  double t3351;
  double t3353;
  double t3354;
  double t3369;
  double t3374;
  double t3375;
  double t3102;
  double t3103;
  double t3191;
  double t3194;
  double t3349;
  double t3357;
  double t3376;
  double t3380;
  double t3201;
  double t3213;
  double t3386;
  double t3391;
  double t3400;
  double t3412;
  double t3419;
  double t3434;
  double t3436;
  double t3437;
  double t3231;
  double t3234;
  double t3242;
  double t3245;
  double t3260;
  double t3263;
  double t3559;
  double t3560;
  double t3562;
  double t3557;
  double t3567;
  double t3570;
  double t3575;
  double t3578;
  double t3583;
  double t3571;
  double t3584;
  double t3589;
  double t3592;
  double t3595;
  double t3596;
  double t3601;
  double t3602;
  double t3604;
  double t3591;
  double t3599;
  double t3607;
  double t3610;
  double t3614;
  double t3629;
  double t3631;
  double t3652;
  double t3656;
  double t3666;
  double t3671;
  double t3673;
  double t3763;
  double t3766;
  double t3747;
  double t3767;
  double t3768;
  double t3790;
  double t3791;
  double t3796;
  double t3798;
  double t3802;
  double t3807;
  double t3809;
  double t3813;
  double t3775;
  double t3800;
  double t3814;
  double t3818;
  double t3826;
  double t3828;
  double t3829;
  double t3831;
  double t3843;
  double t3845;
  double t3851;
  double t3856;
  double t3923;
  double t3927;
  double t3928;
  double t3931;
  double t3939;
  double t3944;
  double t3945;
  double t3948;
  double t3952;
  double t3953;
  double t3954;
  double t3966;
  double t4011;
  double t4012;
  double t4017;
  double t4018;
  double t4022;
  double t4024;
  double t4027;
  double t4033;
  double t4036;
  double t4037;
  double t4041;
  double t4043;
  double t4020;
  double t4035;
  double t4050;
  double t4063;
  double t4077;
  double t4085;
  double t4107;
  double t4119;
  double t4138;
  double t4145;
  double t4150;
  double t4162;
  double t4263;
  double t4264;
  double t4288;
  double t4327;
  double t4330;
  double t4349;
  double t4295;
  double t4354;
  double t4355;
  double t4363;
  double t4369;
  double t4371;
  double t4260;
  double t4361;
  double t4372;
  double t4387;
  double t4400;
  double t4403;
  double t4404;
  double t4412;
  double t4427;
  double t4433;
  double t4434;
  double t4436;
  double t4388;
  double t4415;
  double t4442;
  double t4446;
  double t4451;
  double t4455;
  double t4457;
  double t4489;
  double t4494;
  double t4499;
  double t4503;
  double t4504;
  double t4608;
  double t4609;
  double t4615;
  double t4620;
  double t4621;
  double t4623;
  double t4606;
  double t4619;
  double t4629;
  double t4633;
  double t4639;
  double t4643;
  double t4645;
  double t4651;
  double t4654;
  double t4656;
  double t4658;
  double t4662;
  double t4638;
  double t4653;
  double t4664;
  double t4665;
  double t4672;
  double t4678;
  double t4684;
  double t4688;
  double t4690;
  double t4696;
  double t4703;
  double t4709;
  double t4852;
  double t4853;
  double t4857;
  double t4860;
  double t4862;
  double t4874;
  double t4875;
  double t4876;
  double t4863;
  double t4881;
  double t4884;
  double t4889;
  double t4893;
  double t4895;
  double t4910;
  double t4914;
  double t4916;
  double t4888;
  double t4902;
  double t4918;
  double t4932;
  double t4942;
  double t4948;
  double t4952;
  double t4958;
  double t4969;
  double t4973;
  double t4981;
  double t4982;
  double t5066;
  double t5068;
  double t5074;
  double t5055;
  double t5077;
  double t5079;
  double t5088;
  double t5090;
  double t5095;
  double t5086;
  double t5102;
  double t5111;
  double t5117;
  double t5118;
  double t5122;
  double t5126;
  double t5129;
  double t5132;
  double t5115;
  double t5123;
  double t5141;
  double t5150;
  double t5157;
  double t5167;
  double t5171;
  double t5176;
  double t5192;
  double t5194;
  double t5200;
  double t5202;
  double t5304;
  double t5312;
  double t5303;
  double t5319;
  double t5320;
  double t5327;
  double t5329;
  double t5330;
  double t5336;
  double t5348;
  double t5349;
  double t5358;
  double t5368;
  double t5321;
  double t5340;
  double t5375;
  double t5377;
  double t5379;
  double t5382;
  double t5383;
  double t5386;
  double t5396;
  double t5401;
  double t5410;
  double t5414;
  double t5493;
  double t5501;
  double t5504;
  double t5505;
  double t5513;
  double t5526;
  double t5532;
  double t5533;
  double t5544;
  double t5550;
  double t5551;
  double t5555;
  double t5611;
  double t5628;
  double t5635;
  double t5636;
  double t5655;
  double t5664;
  double t5671;
  double t5674;
  double t5681;
  double t5694;
  double t5700;
  double t5704;
  double t5652;
  double t5676;
  double t5706;
  double t5707;
  double t5710;
  double t5711;
  double t5712;
  double t5713;
  double t5716;
  double t5719;
  double t5720;
  double t5724;
  double t5776;
  double t5780;
  double t5785;
  double t5798;
  double t5802;
  double t5809;
  double t5792;
  double t5832;
  double t5833;
  double t5838;
  double t5841;
  double t5843;
  double t5850;
  double t5851;
  double t5853;
  double t5837;
  double t5847;
  double t5854;
  double t5861;
  double t5872;
  double t5880;
  double t5882;
  double t5885;
  double t5898;
  double t5902;
  double t5907;
  double t5917;
  double t6001;
  double t6003;
  double t6013;
  double t6019;
  double t6021;
  double t6023;
  double t6015;
  double t6024;
  double t6028;
  double t6043;
  double t6045;
  double t6047;
  double t6053;
  double t6057;
  double t6058;
  double t6038;
  double t6051;
  double t6063;
  double t6065;
  double t6068;
  double t6071;
  double t6072;
  double t6076;
  double t6079;
  double t6080;
  double t6087;
  double t6088;
  double t6160;
  double t6164;
  double t6165;
  double t6181;
  double t6183;
  double t6185;
  double t6200;
  double t6201;
  double t6204;
  double t6207;
  double t6171;
  double t6192;
  double t6209;
  double t6210;
  double t6222;
  double t6236;
  double t6237;
  double t6240;
  double t6249;
  double t6253;
  double t6254;
  double t6256;
  double t6353;
  double t6354;
  double t6355;
  double t6361;
  double t6365;
  double t6374;
  double t6375;
  double t6376;
  double t6379;
  double t6384;
  double t6386;
  double t6390;
  double t6433;
  double t6443;
  double t6448;
  double t6449;
  double t6454;
  double t6455;
  double t6456;
  double t6457;
  double t6461;
  double t6462;
  double t6466;
  double t6469;
  double t6451;
  double t6460;
  double t6475;
  double t6481;
  double t6485;
  double t6487;
  double t6490;
  double t6498;
  double t6502;
  double t6513;
  double t6515;
  double t6517;
  double t6616;
  double t6626;
  double t6630;
  double t6635;
  double t6638;
  double t6640;
  double t6612;
  double t6634;
  double t6641;
  double t6643;
  double t6646;
  double t6657;
  double t6660;
  double t6662;
  double t6664;
  double t6668;
  double t6679;
  double t6684;
  double t6644;
  double t6663;
  double t6689;
  double t6692;
  double t6696;
  double t6701;
  double t6703;
  double t6705;
  double t6720;
  double t6721;
  double t6722;
  double t6729;
  double t2934;
  double t3101;
  double t3167;
  double t3168;
  double t3197;
  double t3215;
  double t3220;
  double t3221;
  double t3236;
  double t3249;
  double t3269;
  double t3271;
  double t3273;
  double t3384;
  double t3414;
  double t3445;
  double t3451;
  double t3481;
  double t3499;
  double t3502;
  double t3505;
  double t3525;
  double t3527;
  double t3535;
  double t3537;
  double t3543;
  double t3611;
  double t3654;
  double t3698;
  double t3699;
  double t3701;
  double t3704;
  double t3709;
  double t3710;
  double t3715;
  double t3716;
  double t3723;
  double t3727;
  double t3729;
  double t3821;
  double t3841;
  double t3859;
  double t3860;
  double t3861;
  double t3866;
  double t3878;
  double t3879;
  double t3881;
  double t3887;
  double t3891;
  double t3894;
  double t3899;
  double t3938;
  double t3951;
  double t3972;
  double t3975;
  double t3976;
  double t3978;
  double t3979;
  double t3980;
  double t3982;
  double t3988;
  double t3993;
  double t3996;
  double t4002;
  double t4075;
  double t4132;
  double t4164;
  double t4187;
  double t4195;
  double t4197;
  double t4203;
  double t4205;
  double t4211;
  double t4225;
  double t4228;
  double t4235;
  double t4238;
  double t4450;
  double t4493;
  double t4508;
  double t4515;
  double t4526;
  double t4530;
  double t4531;
  double t4532;
  double t4540;
  double t4555;
  double t4557;
  double t4570;
  double t4578;
  double t4669;
  double t4689;
  double t4717;
  double t4725;
  double t4734;
  double t4735;
  double t4736;
  double t4743;
  double t4754;
  double t4755;
  double t4757;
  double t4772;
  double t4782;
  double t4795;
  double t4802;
  double t4806;
  double t4808;
  double t4821;
  double t4824;
  double t4825;
  double t4830;
  double t4836;
  double t4837;
  double t4840;
  double t4841;
  double t4843;
  double t4938;
  double t4963;
  double t4983;
  double t4990;
  double t4999;
  double t5012;
  double t5026;
  double t5028;
  double t5032;
  double t5033;
  double t5035;
  double t5041;
  double t5045;
  double t5152;
  double t5187;
  double t5205;
  double t5215;
  double t5227;
  double t5239;
  double t5256;
  double t5263;
  double t5268;
  double t5269;
  double t5277;
  double t5281;
  double t5290;
  double t5378;
  double t5388;
  double t5415;
  double t5419;
  double t5420;
  double t5432;
  double t5435;
  double t5436;
  double t5439;
  double t5456;
  double t5457;
  double t5458;
  double t5485;
  double t5511;
  double t5535;
  double t5559;
  double t5568;
  double t5569;
  double t5570;
  double t5576;
  double t5578;
  double t5580;
  double t5582;
  double t5584;
  double t5585;
  double t5591;
  double t5709;
  double t5714;
  double t5725;
  double t5726;
  double t5727;
  double t5733;
  double t5737;
  double t5738;
  double t5739;
  double t5745;
  double t5746;
  double t5747;
  double t5750;
  double t5868;
  double t5892;
  double t5921;
  double t5927;
  double t5934;
  double t5940;
  double t5955;
  double t5960;
  double t5973;
  double t5980;
  double t5982;
  double t5990;
  double t5995;
  double t6067;
  double t6077;
  double t6100;
  double t6102;
  double t6110;
  double t6111;
  double t6114;
  double t6120;
  double t6123;
  double t6140;
  double t6143;
  double t6147;
  double t6149;
  double t6215;
  double t6247;
  double t6266;
  double t6277;
  double t6279;
  double t6295;
  double t6305;
  double t6307;
  double t6310;
  double t6315;
  double t6318;
  double t6320;
  double t6323;
  double t6363;
  double t6377;
  double t6392;
  double t6397;
  double t6399;
  double t6403;
  double t6407;
  double t6408;
  double t6413;
  double t6415;
  double t6417;
  double t6418;
  double t6420;
  double t6484;
  double t6500;
  double t6519;
  double t6524;
  double t6532;
  double t6534;
  double t6556;
  double t6562;
  double t6566;
  double t6571;
  double t6585;
  double t6586;
  double t6588;
  double t6695;
  double t6708;
  double t6731;
  double t6733;
  double t6748;
  double t6757;
  double t6761;
  double t6765;
  double t6767;
  double t6782;
  double t6783;
  double t6784;
  double t6792;
  t65 = Cos(var1[3]);
  t701 = Cos(var1[4]);
  t396 = Cos(var1[18]);
  t505 = -1.*t396;
  t538 = 1. + t505;
  t1099 = Cos(var1[17]);
  t936 = Cos(var1[5]);
  t1055 = Sin(var1[17]);
  t1538 = Sin(var1[5]);
  t51 = Sin(var1[19]);
  t142 = Sin(var1[18]);
  t375 = Sin(var1[4]);
  t1085 = -1.*t65*t701*t936*t1055;
  t1629 = t1099*t65*t701*t1538;
  t1702 = t1085 + t1629;
  t2003 = t1099*t65*t701*t936;
  t2028 = t65*t701*t1055*t1538;
  t2051 = t2003 + t2028;
  t2378 = Cos(var1[19]);
  t2547 = -1.*t2378;
  t2558 = 1. + t2547;
  t286 = -0.366501*t142;
  t373 = 0. + t286;
  t390 = -1.*t65*t373*t375;
  t1923 = 0.340999127418*t538*t1702;
  t1927 = -0.134322983001*t538;
  t1933 = 1. + t1927;
  t2096 = t1933*t2051;
  t2118 = t390 + t1923 + t2096;
  t2180 = 0.930418*t142;
  t2188 = 0. + t2180;
  t2212 = -1.*t65*t2188*t375;
  t2222 = -0.8656776547239999*t538;
  t2247 = 1. + t2222;
  t2280 = t2247*t1702;
  t2303 = 0.340999127418*t538*t2051;
  t2326 = t2212 + t2280 + t2303;
  t2617 = -1.000000637725*t538;
  t2627 = 1. + t2617;
  t2787 = -1.*t2627*t65*t375;
  t2795 = -0.930418*t142;
  t2816 = 0. + t2795;
  t2825 = t2816*t1702;
  t2835 = 0.366501*t142;
  t2841 = 0. + t2835;
  t2860 = t2841*t2051;
  t2889 = t2787 + t2825 + t2860;
  t2953 = Cos(var1[20]);
  t2962 = -1.*t2953;
  t2963 = 1. + t2962;
  t25 = Sin(var1[20]);
  t63 = 0.930418*t51;
  t64 = 0. + t63;
  t2119 = t64*t2118;
  t2130 = 0.366501*t51;
  t2174 = 0. + t2130;
  t2365 = t2174*t2326;
  t2564 = -1.000000637725*t2558;
  t2605 = 1. + t2564;
  t2929 = t2605*t2889;
  t2931 = t2119 + t2365 + t2929;
  t2966 = -0.8656776547239999*t2558;
  t2968 = 1. + t2966;
  t2971 = t2968*t2118;
  t2981 = -0.340999127418*t2558*t2326;
  t3022 = -0.930418*t51;
  t3036 = 0. + t3022;
  t3057 = t3036*t2889;
  t3100 = t2971 + t2981 + t3057;
  t3104 = -0.340999127418*t2558*t2118;
  t3105 = -0.134322983001*t2558;
  t3108 = 1. + t3105;
  t3114 = t3108*t2326;
  t3120 = -0.366501*t51;
  t3123 = 0. + t3120;
  t3138 = t3123*t2889;
  t3163 = t3104 + t3114 + t3138;
  t32 = 0.366501*t25;
  t48 = 0. + t32;
  t3283 = Sin(var1[3]);
  t3277 = t65*t936*t375;
  t3290 = t3283*t1538;
  t3291 = t3277 + t3290;
  t3309 = t936*t3283;
  t3310 = -1.*t65*t375*t1538;
  t3311 = t3309 + t3310;
  t3293 = t1055*t3291;
  t3317 = t1099*t3311;
  t3318 = t3293 + t3317;
  t3322 = t1099*t3291;
  t3328 = -1.*t1055*t3311;
  t3331 = t3322 + t3328;
  t3319 = 0.340999127418*t538*t3318;
  t3340 = t2247*t3331;
  t3348 = t3319 + t3340;
  t3351 = t1933*t3318;
  t3353 = 0.340999127418*t538*t3331;
  t3354 = t3351 + t3353;
  t3369 = t2841*t3318;
  t3374 = t2816*t3331;
  t3375 = t3369 + t3374;
  t3102 = -0.134322983001*t2963;
  t3103 = 1. + t3102;
  t3191 = 0.930418*t25;
  t3194 = 0. + t3191;
  t3349 = t2174*t3348;
  t3357 = t64*t3354;
  t3376 = t2605*t3375;
  t3380 = t3349 + t3357 + t3376;
  t3201 = -0.8656776547239999*t2963;
  t3213 = 1. + t3201;
  t3386 = -0.340999127418*t2558*t3348;
  t3391 = t2968*t3354;
  t3400 = t3036*t3375;
  t3412 = t3386 + t3391 + t3400;
  t3419 = t3108*t3348;
  t3434 = -0.340999127418*t2558*t3354;
  t3436 = t3123*t3375;
  t3437 = t3419 + t3434 + t3436;
  t3231 = -1.000000637725*t2963;
  t3234 = 1. + t3231;
  t3242 = -0.930418*t25;
  t3245 = 0. + t3242;
  t3260 = -0.366501*t25;
  t3263 = 0. + t3260;
  t3559 = -1.*t936*t3283;
  t3560 = t65*t375*t1538;
  t3562 = t3559 + t3560;
  t3557 = -1.*t1055*t3291;
  t3567 = t1099*t3562;
  t3570 = t3557 + t3567;
  t3575 = -1.*t1099*t3291;
  t3578 = -1.*t1055*t3562;
  t3583 = t3575 + t3578;
  t3571 = 0.340999127418*t538*t3570;
  t3584 = t2247*t3583;
  t3589 = t3571 + t3584;
  t3592 = t1933*t3570;
  t3595 = 0.340999127418*t538*t3583;
  t3596 = t3592 + t3595;
  t3601 = t2841*t3570;
  t3602 = t2816*t3583;
  t3604 = t3601 + t3602;
  t3591 = t2174*t3589;
  t3599 = t64*t3596;
  t3607 = t2605*t3604;
  t3610 = t3591 + t3599 + t3607;
  t3614 = -0.340999127418*t2558*t3589;
  t3629 = t2968*t3596;
  t3631 = t3036*t3604;
  t3652 = t3614 + t3629 + t3631;
  t3656 = t3108*t3589;
  t3666 = -0.340999127418*t2558*t3596;
  t3671 = t3123*t3604;
  t3673 = t3656 + t3666 + t3671;
  t3763 = t1055*t3562;
  t3766 = t3322 + t3763;
  t3747 = t65*t701*t373;
  t3767 = t1933*t3766;
  t3768 = t3747 + t3571 + t3767;
  t3790 = t65*t701*t2188;
  t3791 = t2247*t3570;
  t3796 = 0.340999127418*t538*t3766;
  t3798 = t3790 + t3791 + t3796;
  t3802 = t2627*t65*t701;
  t3807 = t2816*t3570;
  t3809 = t2841*t3766;
  t3813 = t3802 + t3807 + t3809;
  t3775 = t64*t3768;
  t3800 = t2174*t3798;
  t3814 = t2605*t3813;
  t3818 = t3775 + t3800 + t3814;
  t3826 = t2968*t3768;
  t3828 = -0.340999127418*t2558*t3798;
  t3829 = t3036*t3813;
  t3831 = t3826 + t3828 + t3829;
  t3843 = -0.340999127418*t2558*t3768;
  t3845 = t3108*t3798;
  t3851 = t3123*t3813;
  t3856 = t3843 + t3845 + t3851;
  t3923 = -0.8656776547239999*t51*t3768;
  t3927 = -0.340999127418*t51*t3798;
  t3928 = -0.930418*t2378*t3813;
  t3931 = t3923 + t3927 + t3928;
  t3939 = -0.340999127418*t51*t3768;
  t3944 = -0.134322983001*t51*t3798;
  t3945 = -0.366501*t2378*t3813;
  t3948 = t3939 + t3944 + t3945;
  t3952 = 0.930418*t2378*t3768;
  t3953 = 0.366501*t2378*t3798;
  t3954 = -1.000000637725*t51*t3813;
  t3966 = t3952 + t3953 + t3954;
  t4011 = -1.000000637725*t65*t701*t142;
  t4012 = -0.930418*t396*t3570;
  t4017 = 0.366501*t396*t3766;
  t4018 = t4011 + t4012 + t4017;
  t4022 = -0.366501*t396*t65*t701;
  t4024 = 0.340999127418*t142*t3570;
  t4027 = -0.134322983001*t142*t3766;
  t4033 = t4022 + t4024 + t4027;
  t4036 = 0.930418*t396*t65*t701;
  t4037 = -0.8656776547239999*t142*t3570;
  t4041 = 0.340999127418*t142*t3766;
  t4043 = t4036 + t4037 + t4041;
  t4020 = t3123*t4018;
  t4035 = -0.340999127418*t2558*t4033;
  t4050 = t3108*t4043;
  t4063 = t4020 + t4035 + t4050;
  t4077 = t3036*t4018;
  t4085 = t2968*t4033;
  t4107 = -0.340999127418*t2558*t4043;
  t4119 = t4077 + t4085 + t4107;
  t4138 = t2605*t4018;
  t4145 = t64*t4033;
  t4150 = t2174*t4043;
  t4162 = t4138 + t4145 + t4150;
  t4263 = -1.*t936*t3283*t375;
  t4264 = t65*t1538;
  t4288 = t4263 + t4264;
  t4327 = -1.*t65*t936;
  t4330 = -1.*t3283*t375*t1538;
  t4349 = t4327 + t4330;
  t4295 = -1.*t1055*t4288;
  t4354 = t1099*t4349;
  t4355 = t4295 + t4354;
  t4363 = t1099*t4288;
  t4369 = t1055*t4349;
  t4371 = t4363 + t4369;
  t4260 = -1.*t701*t373*t3283;
  t4361 = 0.340999127418*t538*t4355;
  t4372 = t1933*t4371;
  t4387 = t4260 + t4361 + t4372;
  t4400 = -1.*t701*t2188*t3283;
  t4403 = t2247*t4355;
  t4404 = 0.340999127418*t538*t4371;
  t4412 = t4400 + t4403 + t4404;
  t4427 = -1.*t2627*t701*t3283;
  t4433 = t2816*t4355;
  t4434 = t2841*t4371;
  t4436 = t4427 + t4433 + t4434;
  t4388 = t64*t4387;
  t4415 = t2174*t4412;
  t4442 = t2605*t4436;
  t4446 = t4388 + t4415 + t4442;
  t4451 = t2968*t4387;
  t4455 = -0.340999127418*t2558*t4412;
  t4457 = t3036*t4436;
  t4489 = t4451 + t4455 + t4457;
  t4494 = -0.340999127418*t2558*t4387;
  t4499 = t3108*t4412;
  t4503 = t3123*t4436;
  t4504 = t4494 + t4499 + t4503;
  t4608 = -1.*t701*t936*t1055*t3283;
  t4609 = t1099*t701*t3283*t1538;
  t4615 = t4608 + t4609;
  t4620 = t1099*t701*t936*t3283;
  t4621 = t701*t1055*t3283*t1538;
  t4623 = t4620 + t4621;
  t4606 = -1.*t373*t3283*t375;
  t4619 = 0.340999127418*t538*t4615;
  t4629 = t1933*t4623;
  t4633 = t4606 + t4619 + t4629;
  t4639 = -1.*t2188*t3283*t375;
  t4643 = t2247*t4615;
  t4645 = 0.340999127418*t538*t4623;
  t4651 = t4639 + t4643 + t4645;
  t4654 = -1.*t2627*t3283*t375;
  t4656 = t2816*t4615;
  t4658 = t2841*t4623;
  t4662 = t4654 + t4656 + t4658;
  t4638 = t64*t4633;
  t4653 = t2174*t4651;
  t4664 = t2605*t4662;
  t4665 = t4638 + t4653 + t4664;
  t4672 = t2968*t4633;
  t4678 = -0.340999127418*t2558*t4651;
  t4684 = t3036*t4662;
  t4688 = t4672 + t4678 + t4684;
  t4690 = -0.340999127418*t2558*t4633;
  t4696 = t3108*t4651;
  t4703 = t3123*t4662;
  t4709 = t4690 + t4696 + t4703;
  t4852 = t936*t3283*t375;
  t4853 = -1.*t65*t1538;
  t4857 = t4852 + t4853;
  t4860 = t1055*t4857;
  t4862 = t4860 + t4354;
  t4874 = t1099*t4857;
  t4875 = -1.*t1055*t4349;
  t4876 = t4874 + t4875;
  t4863 = 0.340999127418*t538*t4862;
  t4881 = t2247*t4876;
  t4884 = t4863 + t4881;
  t4889 = t1933*t4862;
  t4893 = 0.340999127418*t538*t4876;
  t4895 = t4889 + t4893;
  t4910 = t2841*t4862;
  t4914 = t2816*t4876;
  t4916 = t4910 + t4914;
  t4888 = t2174*t4884;
  t4902 = t64*t4895;
  t4918 = t2605*t4916;
  t4932 = t4888 + t4902 + t4918;
  t4942 = -0.340999127418*t2558*t4884;
  t4948 = t2968*t4895;
  t4952 = t3036*t4916;
  t4958 = t4942 + t4948 + t4952;
  t4969 = t3108*t4884;
  t4973 = -0.340999127418*t2558*t4895;
  t4981 = t3123*t4916;
  t4982 = t4969 + t4973 + t4981;
  t5066 = t65*t936;
  t5068 = t3283*t375*t1538;
  t5074 = t5066 + t5068;
  t5055 = -1.*t1055*t4857;
  t5077 = t1099*t5074;
  t5079 = t5055 + t5077;
  t5088 = -1.*t1099*t4857;
  t5090 = -1.*t1055*t5074;
  t5095 = t5088 + t5090;
  t5086 = 0.340999127418*t538*t5079;
  t5102 = t2247*t5095;
  t5111 = t5086 + t5102;
  t5117 = t1933*t5079;
  t5118 = 0.340999127418*t538*t5095;
  t5122 = t5117 + t5118;
  t5126 = t2841*t5079;
  t5129 = t2816*t5095;
  t5132 = t5126 + t5129;
  t5115 = t2174*t5111;
  t5123 = t64*t5122;
  t5141 = t2605*t5132;
  t5150 = t5115 + t5123 + t5141;
  t5157 = -0.340999127418*t2558*t5111;
  t5167 = t2968*t5122;
  t5171 = t3036*t5132;
  t5176 = t5157 + t5167 + t5171;
  t5192 = t3108*t5111;
  t5194 = -0.340999127418*t2558*t5122;
  t5200 = t3123*t5132;
  t5202 = t5192 + t5194 + t5200;
  t5304 = t1055*t5074;
  t5312 = t4874 + t5304;
  t5303 = t701*t373*t3283;
  t5319 = t1933*t5312;
  t5320 = t5303 + t5086 + t5319;
  t5327 = t701*t2188*t3283;
  t5329 = t2247*t5079;
  t5330 = 0.340999127418*t538*t5312;
  t5336 = t5327 + t5329 + t5330;
  t5348 = t2627*t701*t3283;
  t5349 = t2816*t5079;
  t5358 = t2841*t5312;
  t5368 = t5348 + t5349 + t5358;
  t5321 = t64*t5320;
  t5340 = t2174*t5336;
  t5375 = t2605*t5368;
  t5377 = t5321 + t5340 + t5375;
  t5379 = t2968*t5320;
  t5382 = -0.340999127418*t2558*t5336;
  t5383 = t3036*t5368;
  t5386 = t5379 + t5382 + t5383;
  t5396 = -0.340999127418*t2558*t5320;
  t5401 = t3108*t5336;
  t5410 = t3123*t5368;
  t5414 = t5396 + t5401 + t5410;
  t5493 = -0.8656776547239999*t51*t5320;
  t5501 = -0.340999127418*t51*t5336;
  t5504 = -0.930418*t2378*t5368;
  t5505 = t5493 + t5501 + t5504;
  t5513 = -0.340999127418*t51*t5320;
  t5526 = -0.134322983001*t51*t5336;
  t5532 = -0.366501*t2378*t5368;
  t5533 = t5513 + t5526 + t5532;
  t5544 = 0.930418*t2378*t5320;
  t5550 = 0.366501*t2378*t5336;
  t5551 = -1.000000637725*t51*t5368;
  t5555 = t5544 + t5550 + t5551;
  t5611 = -1.000000637725*t701*t142*t3283;
  t5628 = -0.930418*t396*t5079;
  t5635 = 0.366501*t396*t5312;
  t5636 = t5611 + t5628 + t5635;
  t5655 = -0.366501*t396*t701*t3283;
  t5664 = 0.340999127418*t142*t5079;
  t5671 = -0.134322983001*t142*t5312;
  t5674 = t5655 + t5664 + t5671;
  t5681 = 0.930418*t396*t701*t3283;
  t5694 = -0.8656776547239999*t142*t5079;
  t5700 = 0.340999127418*t142*t5312;
  t5704 = t5681 + t5694 + t5700;
  t5652 = t3123*t5636;
  t5676 = -0.340999127418*t2558*t5674;
  t5706 = t3108*t5704;
  t5707 = t5652 + t5676 + t5706;
  t5710 = t3036*t5636;
  t5711 = t2968*t5674;
  t5712 = -0.340999127418*t2558*t5704;
  t5713 = t5710 + t5711 + t5712;
  t5716 = t2605*t5636;
  t5719 = t64*t5674;
  t5720 = t2174*t5704;
  t5724 = t5716 + t5719 + t5720;
  t5776 = -1.*t701*t936*t1055;
  t5780 = t1099*t701*t1538;
  t5785 = t5776 + t5780;
  t5798 = -1.*t1099*t701*t936;
  t5802 = -1.*t701*t1055*t1538;
  t5809 = t5798 + t5802;
  t5792 = 0.340999127418*t538*t5785;
  t5832 = t2247*t5809;
  t5833 = t5792 + t5832;
  t5838 = t1933*t5785;
  t5841 = 0.340999127418*t538*t5809;
  t5843 = t5838 + t5841;
  t5850 = t2841*t5785;
  t5851 = t2816*t5809;
  t5853 = t5850 + t5851;
  t5837 = t2174*t5833;
  t5847 = t64*t5843;
  t5854 = t2605*t5853;
  t5861 = t5837 + t5847 + t5854;
  t5872 = -0.340999127418*t2558*t5833;
  t5880 = t2968*t5843;
  t5882 = t3036*t5853;
  t5885 = t5872 + t5880 + t5882;
  t5898 = t3108*t5833;
  t5902 = -0.340999127418*t2558*t5843;
  t5907 = t3123*t5853;
  t5917 = t5898 + t5902 + t5907;
  t6001 = t701*t936*t1055;
  t6003 = -1.*t1099*t701*t1538;
  t6013 = t6001 + t6003;
  t6019 = t1099*t701*t936;
  t6021 = t701*t1055*t1538;
  t6023 = t6019 + t6021;
  t6015 = 0.340999127418*t538*t6013;
  t6024 = t2247*t6023;
  t6028 = t6015 + t6024;
  t6043 = t1933*t6013;
  t6045 = 0.340999127418*t538*t6023;
  t6047 = t6043 + t6045;
  t6053 = t2841*t6013;
  t6057 = t2816*t6023;
  t6058 = t6053 + t6057;
  t6038 = t2174*t6028;
  t6051 = t64*t6047;
  t6063 = t2605*t6058;
  t6065 = t6038 + t6051 + t6063;
  t6068 = -0.340999127418*t2558*t6028;
  t6071 = t2968*t6047;
  t6072 = t3036*t6058;
  t6076 = t6068 + t6071 + t6072;
  t6079 = t3108*t6028;
  t6080 = -0.340999127418*t2558*t6047;
  t6087 = t3123*t6058;
  t6088 = t6079 + t6080 + t6087;
  t6160 = -1.*t373*t375;
  t6164 = t1933*t6023;
  t6165 = t6160 + t5792 + t6164;
  t6181 = -1.*t2188*t375;
  t6183 = t2247*t5785;
  t6185 = t6181 + t6183 + t6045;
  t6200 = -1.*t2627*t375;
  t6201 = t2816*t5785;
  t6204 = t2841*t6023;
  t6207 = t6200 + t6201 + t6204;
  t6171 = t64*t6165;
  t6192 = t2174*t6185;
  t6209 = t2605*t6207;
  t6210 = t6171 + t6192 + t6209;
  t6222 = t2968*t6165;
  t6236 = -0.340999127418*t2558*t6185;
  t6237 = t3036*t6207;
  t6240 = t6222 + t6236 + t6237;
  t6249 = -0.340999127418*t2558*t6165;
  t6253 = t3108*t6185;
  t6254 = t3123*t6207;
  t6256 = t6249 + t6253 + t6254;
  t6353 = -0.8656776547239999*t51*t6165;
  t6354 = -0.340999127418*t51*t6185;
  t6355 = -0.930418*t2378*t6207;
  t6361 = t6353 + t6354 + t6355;
  t6365 = -0.340999127418*t51*t6165;
  t6374 = -0.134322983001*t51*t6185;
  t6375 = -0.366501*t2378*t6207;
  t6376 = t6365 + t6374 + t6375;
  t6379 = 0.930418*t2378*t6165;
  t6384 = 0.366501*t2378*t6185;
  t6386 = -1.000000637725*t51*t6207;
  t6390 = t6379 + t6384 + t6386;
  t6433 = 1.000000637725*t142*t375;
  t6443 = -0.930418*t396*t5785;
  t6448 = 0.366501*t396*t6023;
  t6449 = t6433 + t6443 + t6448;
  t6454 = 0.366501*t396*t375;
  t6455 = 0.340999127418*t142*t5785;
  t6456 = -0.134322983001*t142*t6023;
  t6457 = t6454 + t6455 + t6456;
  t6461 = -0.930418*t396*t375;
  t6462 = -0.8656776547239999*t142*t5785;
  t6466 = 0.340999127418*t142*t6023;
  t6469 = t6461 + t6462 + t6466;
  t6451 = t3123*t6449;
  t6460 = -0.340999127418*t2558*t6457;
  t6475 = t3108*t6469;
  t6481 = t6451 + t6460 + t6475;
  t6485 = t3036*t6449;
  t6487 = t2968*t6457;
  t6490 = -0.340999127418*t2558*t6469;
  t6498 = t6485 + t6487 + t6490;
  t6502 = t2605*t6449;
  t6513 = t64*t6457;
  t6515 = t2174*t6469;
  t6517 = t6502 + t6513 + t6515;
  t6616 = t936*t1055*t375;
  t6626 = -1.*t1099*t375*t1538;
  t6630 = t6616 + t6626;
  t6635 = -1.*t1099*t936*t375;
  t6638 = -1.*t1055*t375*t1538;
  t6640 = t6635 + t6638;
  t6612 = -1.*t701*t373;
  t6634 = 0.340999127418*t538*t6630;
  t6641 = t1933*t6640;
  t6643 = t6612 + t6634 + t6641;
  t6646 = -1.*t701*t2188;
  t6657 = t2247*t6630;
  t6660 = 0.340999127418*t538*t6640;
  t6662 = t6646 + t6657 + t6660;
  t6664 = -1.*t2627*t701;
  t6668 = t2816*t6630;
  t6679 = t2841*t6640;
  t6684 = t6664 + t6668 + t6679;
  t6644 = t64*t6643;
  t6663 = t2174*t6662;
  t6689 = t2605*t6684;
  t6692 = t6644 + t6663 + t6689;
  t6696 = t2968*t6643;
  t6701 = -0.340999127418*t2558*t6662;
  t6703 = t3036*t6684;
  t6705 = t6696 + t6701 + t6703;
  t6720 = -0.340999127418*t2558*t6643;
  t6721 = t3108*t6662;
  t6722 = t3123*t6684;
  t6729 = t6720 + t6721 + t6722;
  t2934 = t48*t2931;
  t3101 = -0.340999127418*t2963*t3100;
  t3167 = t3103*t3163;
  t3168 = t2934 + t3101 + t3167;
  t3197 = t3194*t2931;
  t3215 = t3213*t3100;
  t3220 = -0.340999127418*t2963*t3163;
  t3221 = t3197 + t3215 + t3220;
  t3236 = t3234*t2931;
  t3249 = t3245*t3100;
  t3269 = t3263*t3163;
  t3271 = t3236 + t3249 + t3269;
  t3273 = -0.707107*t3271;
  t3384 = t48*t3380;
  t3414 = -0.340999127418*t2963*t3412;
  t3445 = t3103*t3437;
  t3451 = t3384 + t3414 + t3445;
  t3481 = t3194*t3380;
  t3499 = t3213*t3412;
  t3502 = -0.340999127418*t2963*t3437;
  t3505 = t3481 + t3499 + t3502;
  t3525 = t3234*t3380;
  t3527 = t3245*t3412;
  t3535 = t3263*t3437;
  t3537 = t3525 + t3527 + t3535;
  t3543 = -0.707107*t3537;
  t3611 = t48*t3610;
  t3654 = -0.340999127418*t2963*t3652;
  t3698 = t3103*t3673;
  t3699 = t3611 + t3654 + t3698;
  t3701 = t3194*t3610;
  t3704 = t3213*t3652;
  t3709 = -0.340999127418*t2963*t3673;
  t3710 = t3701 + t3704 + t3709;
  t3715 = t3234*t3610;
  t3716 = t3245*t3652;
  t3723 = t3263*t3673;
  t3727 = t3715 + t3716 + t3723;
  t3729 = -0.707107*t3727;
  t3821 = -1.000000637725*t25*t3818;
  t3841 = -0.930418*t2953*t3831;
  t3859 = -0.366501*t2953*t3856;
  t3860 = t3821 + t3841 + t3859;
  t3861 = -0.707107*t3860;
  t3866 = 0.930418*t2953*t3818;
  t3878 = -0.8656776547239999*t25*t3831;
  t3879 = -0.340999127418*t25*t3856;
  t3881 = t3866 + t3878 + t3879;
  t3887 = 0.366501*t2953*t3818;
  t3891 = -0.340999127418*t25*t3831;
  t3894 = -0.134322983001*t25*t3856;
  t3899 = t3887 + t3891 + t3894;
  t3938 = t3245*t3931;
  t3951 = t3263*t3948;
  t3972 = t3234*t3966;
  t3975 = t3938 + t3951 + t3972;
  t3976 = -0.707107*t3975;
  t3978 = -0.340999127418*t2963*t3931;
  t3979 = t3103*t3948;
  t3980 = t48*t3966;
  t3982 = t3978 + t3979 + t3980;
  t3988 = t3213*t3931;
  t3993 = -0.340999127418*t2963*t3948;
  t3996 = t3194*t3966;
  t4002 = t3988 + t3993 + t3996;
  t4075 = t3263*t4063;
  t4132 = t3245*t4119;
  t4164 = t3234*t4162;
  t4187 = t4075 + t4132 + t4164;
  t4195 = -0.707107*t4187;
  t4197 = t3103*t4063;
  t4203 = -0.340999127418*t2963*t4119;
  t4205 = t48*t4162;
  t4211 = t4197 + t4203 + t4205;
  t4225 = -0.340999127418*t2963*t4063;
  t4228 = t3213*t4119;
  t4235 = t3194*t4162;
  t4238 = t4225 + t4228 + t4235;
  t4450 = t48*t4446;
  t4493 = -0.340999127418*t2963*t4489;
  t4508 = t3103*t4504;
  t4515 = t4450 + t4493 + t4508;
  t4526 = t3194*t4446;
  t4530 = t3213*t4489;
  t4531 = -0.340999127418*t2963*t4504;
  t4532 = t4526 + t4530 + t4531;
  t4540 = t3234*t4446;
  t4555 = t3245*t4489;
  t4557 = t3263*t4504;
  t4570 = t4540 + t4555 + t4557;
  t4578 = -0.707107*t4570;
  t4669 = t48*t4665;
  t4689 = -0.340999127418*t2963*t4688;
  t4717 = t3103*t4709;
  t4725 = t4669 + t4689 + t4717;
  t4734 = t3194*t4665;
  t4735 = t3213*t4688;
  t4736 = -0.340999127418*t2963*t4709;
  t4743 = t4734 + t4735 + t4736;
  t4754 = t3234*t4665;
  t4755 = t3245*t4688;
  t4757 = t3263*t4709;
  t4772 = t4754 + t4755 + t4757;
  t4782 = -0.707107*t4772;
  t4795 = t48*t3818;
  t4802 = -0.340999127418*t2963*t3831;
  t4806 = t3103*t3856;
  t4808 = t4795 + t4802 + t4806;
  t4821 = t3194*t3818;
  t4824 = t3213*t3831;
  t4825 = -0.340999127418*t2963*t3856;
  t4830 = t4821 + t4824 + t4825;
  t4836 = t3234*t3818;
  t4837 = t3245*t3831;
  t4840 = t3263*t3856;
  t4841 = t4836 + t4837 + t4840;
  t4843 = -0.707107*t4841;
  t4938 = t48*t4932;
  t4963 = -0.340999127418*t2963*t4958;
  t4983 = t3103*t4982;
  t4990 = t4938 + t4963 + t4983;
  t4999 = t3194*t4932;
  t5012 = t3213*t4958;
  t5026 = -0.340999127418*t2963*t4982;
  t5028 = t4999 + t5012 + t5026;
  t5032 = t3234*t4932;
  t5033 = t3245*t4958;
  t5035 = t3263*t4982;
  t5041 = t5032 + t5033 + t5035;
  t5045 = -0.707107*t5041;
  t5152 = t48*t5150;
  t5187 = -0.340999127418*t2963*t5176;
  t5205 = t3103*t5202;
  t5215 = t5152 + t5187 + t5205;
  t5227 = t3194*t5150;
  t5239 = t3213*t5176;
  t5256 = -0.340999127418*t2963*t5202;
  t5263 = t5227 + t5239 + t5256;
  t5268 = t3234*t5150;
  t5269 = t3245*t5176;
  t5277 = t3263*t5202;
  t5281 = t5268 + t5269 + t5277;
  t5290 = -0.707107*t5281;
  t5378 = -1.000000637725*t25*t5377;
  t5388 = -0.930418*t2953*t5386;
  t5415 = -0.366501*t2953*t5414;
  t5419 = t5378 + t5388 + t5415;
  t5420 = -0.707107*t5419;
  t5432 = 0.930418*t2953*t5377;
  t5435 = -0.8656776547239999*t25*t5386;
  t5436 = -0.340999127418*t25*t5414;
  t5439 = t5432 + t5435 + t5436;
  t5456 = 0.366501*t2953*t5377;
  t5457 = -0.340999127418*t25*t5386;
  t5458 = -0.134322983001*t25*t5414;
  t5485 = t5456 + t5457 + t5458;
  t5511 = t3245*t5505;
  t5535 = t3263*t5533;
  t5559 = t3234*t5555;
  t5568 = t5511 + t5535 + t5559;
  t5569 = -0.707107*t5568;
  t5570 = -0.340999127418*t2963*t5505;
  t5576 = t3103*t5533;
  t5578 = t48*t5555;
  t5580 = t5570 + t5576 + t5578;
  t5582 = t3213*t5505;
  t5584 = -0.340999127418*t2963*t5533;
  t5585 = t3194*t5555;
  t5591 = t5582 + t5584 + t5585;
  t5709 = t3263*t5707;
  t5714 = t3245*t5713;
  t5725 = t3234*t5724;
  t5726 = t5709 + t5714 + t5725;
  t5727 = -0.707107*t5726;
  t5733 = t3103*t5707;
  t5737 = -0.340999127418*t2963*t5713;
  t5738 = t48*t5724;
  t5739 = t5733 + t5737 + t5738;
  t5745 = -0.340999127418*t2963*t5707;
  t5746 = t3213*t5713;
  t5747 = t3194*t5724;
  t5750 = t5745 + t5746 + t5747;
  t5868 = t48*t5861;
  t5892 = -0.340999127418*t2963*t5885;
  t5921 = t3103*t5917;
  t5927 = t5868 + t5892 + t5921;
  t5934 = t3194*t5861;
  t5940 = t3213*t5885;
  t5955 = -0.340999127418*t2963*t5917;
  t5960 = t5934 + t5940 + t5955;
  t5973 = t3234*t5861;
  t5980 = t3245*t5885;
  t5982 = t3263*t5917;
  t5990 = t5973 + t5980 + t5982;
  t5995 = -0.707107*t5990;
  t6067 = t48*t6065;
  t6077 = -0.340999127418*t2963*t6076;
  t6100 = t3103*t6088;
  t6102 = t6067 + t6077 + t6100;
  t6110 = t3194*t6065;
  t6111 = t3213*t6076;
  t6114 = -0.340999127418*t2963*t6088;
  t6120 = t6110 + t6111 + t6114;
  t6123 = t3234*t6065;
  t6140 = t3245*t6076;
  t6143 = t3263*t6088;
  t6147 = t6123 + t6140 + t6143;
  t6149 = -0.707107*t6147;
  t6215 = -1.000000637725*t25*t6210;
  t6247 = -0.930418*t2953*t6240;
  t6266 = -0.366501*t2953*t6256;
  t6277 = t6215 + t6247 + t6266;
  t6279 = -0.707107*t6277;
  t6295 = 0.930418*t2953*t6210;
  t6305 = -0.8656776547239999*t25*t6240;
  t6307 = -0.340999127418*t25*t6256;
  t6310 = t6295 + t6305 + t6307;
  t6315 = 0.366501*t2953*t6210;
  t6318 = -0.340999127418*t25*t6240;
  t6320 = -0.134322983001*t25*t6256;
  t6323 = t6315 + t6318 + t6320;
  t6363 = t3245*t6361;
  t6377 = t3263*t6376;
  t6392 = t3234*t6390;
  t6397 = t6363 + t6377 + t6392;
  t6399 = -0.707107*t6397;
  t6403 = -0.340999127418*t2963*t6361;
  t6407 = t3103*t6376;
  t6408 = t48*t6390;
  t6413 = t6403 + t6407 + t6408;
  t6415 = t3213*t6361;
  t6417 = -0.340999127418*t2963*t6376;
  t6418 = t3194*t6390;
  t6420 = t6415 + t6417 + t6418;
  t6484 = t3263*t6481;
  t6500 = t3245*t6498;
  t6519 = t3234*t6517;
  t6524 = t6484 + t6500 + t6519;
  t6532 = -0.707107*t6524;
  t6534 = t3103*t6481;
  t6556 = -0.340999127418*t2963*t6498;
  t6562 = t48*t6517;
  t6566 = t6534 + t6556 + t6562;
  t6571 = -0.340999127418*t2963*t6481;
  t6585 = t3213*t6498;
  t6586 = t3194*t6517;
  t6588 = t6571 + t6585 + t6586;
  t6695 = t48*t6692;
  t6708 = -0.340999127418*t2963*t6705;
  t6731 = t3103*t6729;
  t6733 = t6695 + t6708 + t6731;
  t6748 = t3194*t6692;
  t6757 = t3213*t6705;
  t6761 = -0.340999127418*t2963*t6729;
  t6765 = t6748 + t6757 + t6761;
  t6767 = t3234*t6692;
  t6782 = t3245*t6705;
  t6783 = t3263*t6729;
  t6784 = t6767 + t6782 + t6783;
  t6792 = -0.707107*t6784;
  p_output1[0]=(-0.259155*t4515 - 0.657905*t4532 + t4578)*var2[3] + (-0.259155*t3168 - 0.657905*t3221 + t3273)*var2[4] + (-0.259155*t3451 - 0.657905*t3505 + t3543)*var2[5] + (-0.259155*t3699 - 0.657905*t3710 + t3729)*var2[17] + (t4195 - 0.259155*t4211 - 0.657905*t4238)*var2[18] + (t3976 - 0.259155*t3982 - 0.657905*t4002)*var2[19] + (t3861 - 0.657905*t3881 - 0.259155*t3899)*var2[20];
  p_output1[1]=(-0.259155*t4808 - 0.657905*t4830 + t4843)*var2[3] + (-0.259155*t4725 - 0.657905*t4743 + t4782)*var2[4] + (-0.259155*t4990 - 0.657905*t5028 + t5045)*var2[5] + (-0.259155*t5215 - 0.657905*t5263 + t5290)*var2[17] + (t5727 - 0.259155*t5739 - 0.657905*t5750)*var2[18] + (t5569 - 0.259155*t5580 - 0.657905*t5591)*var2[19] + (t5420 - 0.657905*t5439 - 0.259155*t5485)*var2[20];
  p_output1[2]=(-0.259155*t6733 - 0.657905*t6765 + t6792)*var2[4] + (-0.259155*t6102 - 0.657905*t6120 + t6149)*var2[5] + (-0.259155*t5927 - 0.657905*t5960 + t5995)*var2[17] + (t6532 - 0.259155*t6566 - 0.657905*t6588)*var2[18] + (t6399 - 0.259155*t6413 - 0.657905*t6420)*var2[19] + (t6279 - 0.657905*t6310 - 0.259155*t6323)*var2[20];
  p_output1[3]=(0.259155*t4515 + 0.657905*t4532 + t4578)*var2[3] + (0.259155*t3168 + 0.657905*t3221 + t3273)*var2[4] + (0.259155*t3451 + 0.657905*t3505 + t3543)*var2[5] + (0.259155*t3699 + 0.657905*t3710 + t3729)*var2[17] + (t4195 + 0.259155*t4211 + 0.657905*t4238)*var2[18] + (t3976 + 0.259155*t3982 + 0.657905*t4002)*var2[19] + (t3861 + 0.657905*t3881 + 0.259155*t3899)*var2[20];
  p_output1[4]=(0.259155*t4808 + 0.657905*t4830 + t4843)*var2[3] + (0.259155*t4725 + 0.657905*t4743 + t4782)*var2[4] + (0.259155*t4990 + 0.657905*t5028 + t5045)*var2[5] + (0.259155*t5215 + 0.657905*t5263 + t5290)*var2[17] + (t5727 + 0.259155*t5739 + 0.657905*t5750)*var2[18] + (t5569 + 0.259155*t5580 + 0.657905*t5591)*var2[19] + (t5420 + 0.657905*t5439 + 0.259155*t5485)*var2[20];
  p_output1[5]=(0.259155*t6733 + 0.657905*t6765 + t6792)*var2[4] + (0.259155*t6102 + 0.657905*t6120 + t6149)*var2[5] + (0.259155*t5927 + 0.657905*t5960 + t5995)*var2[17] + (t6532 + 0.259155*t6566 + 0.657905*t6588)*var2[18] + (t6399 + 0.259155*t6413 + 0.657905*t6420)*var2[19] + (t6279 + 0.657905*t6310 + 0.259155*t6323)*var2[20];
  p_output1[6]=(0.930418*t4515 - 0.366501*t4532)*var2[3] + (0.930418*t3168 - 0.366501*t3221)*var2[4] + (0.930418*t3451 - 0.366501*t3505)*var2[5] + (0.930418*t3699 - 0.366501*t3710)*var2[17] + (0.930418*t4211 - 0.366501*t4238)*var2[18] + (0.930418*t3982 - 0.366501*t4002)*var2[19] + (-0.366501*t3881 + 0.930418*t3899)*var2[20];
  p_output1[7]=(0.930418*t4808 - 0.366501*t4830)*var2[3] + (0.930418*t4725 - 0.366501*t4743)*var2[4] + (0.930418*t4990 - 0.366501*t5028)*var2[5] + (0.930418*t5215 - 0.366501*t5263)*var2[17] + (0.930418*t5739 - 0.366501*t5750)*var2[18] + (0.930418*t5580 - 0.366501*t5591)*var2[19] + (-0.366501*t5439 + 0.930418*t5485)*var2[20];
  p_output1[8]=(0.930418*t6733 - 0.366501*t6765)*var2[4] + (0.930418*t6102 - 0.366501*t6120)*var2[5] + (0.930418*t5927 - 0.366501*t5960)*var2[17] + (0.930418*t6566 - 0.366501*t6588)*var2[18] + (0.930418*t6413 - 0.366501*t6420)*var2[19] + (-0.366501*t6310 + 0.930418*t6323)*var2[20];
}



void dR_right_knee_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
