/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:10:52 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "T_right_tarsus_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t132;
  double t247;
  double t258;
  double t254;
  double t266;
  double t223;
  double t230;
  double t233;
  double t277;
  double t257;
  double t268;
  double t272;
  double t239;
  double t285;
  double t290;
  double t292;
  double t105;
  double t134;
  double t143;
  double t274;
  double t296;
  double t302;
  double t330;
  double t332;
  double t336;
  double t468;
  double t476;
  double t484;
  double t159;
  double t168;
  double t221;
  double t320;
  double t323;
  double t324;
  double t338;
  double t340;
  double t377;
  double t380;
  double t390;
  double t408;
  double t413;
  double t429;
  double t430;
  double t448;
  double t497;
  double t505;
  double t513;
  double t519;
  double t522;
  double t528;
  double t533;
  double t552;
  double t561;
  double t564;
  double t622;
  double t624;
  double t626;
  double t27;
  double t46;
  double t112;
  double t125;
  double t343;
  double t345;
  double t348;
  double t460;
  double t485;
  double t489;
  double t565;
  double t568;
  double t627;
  double t631;
  double t634;
  double t635;
  double t647;
  double t649;
  double t653;
  double t668;
  double t710;
  double t713;
  double t717;
  double t718;
  double t751;
  double t754;
  double t756;
  double t760;
  double t876;
  double t882;
  double t889;
  double t69;
  double t100;
  double t616;
  double t669;
  double t684;
  double t687;
  double t761;
  double t768;
  double t805;
  double t821;
  double t827;
  double t834;
  double t841;
  double t843;
  double t849;
  double t861;
  double t924;
  double t926;
  double t935;
  double t943;
  double t946;
  double t961;
  double t962;
  double t969;
  double t972;
  double t974;
  double t29;
  double t39;
  double t1153;
  double t1157;
  double t1170;
  double t1186;
  double t1192;
  double t1195;
  double t1185;
  double t1198;
  double t1200;
  double t1219;
  double t1220;
  double t1226;
  double t1149;
  double t1217;
  double t1229;
  double t1234;
  double t1251;
  double t1252;
  double t1255;
  double t1275;
  double t1286;
  double t1297;
  double t1310;
  double t1322;
  double t775;
  double t780;
  double t1239;
  double t1281;
  double t1332;
  double t1339;
  double t1358;
  double t1359;
  double t1376;
  double t1378;
  double t1394;
  double t1415;
  double t1420;
  double t1423;
  double t897;
  double t899;
  double t1007;
  double t1012;
  double t1347;
  double t1386;
  double t1427;
  double t1431;
  double t1443;
  double t1448;
  double t1451;
  double t1461;
  double t1022;
  double t1034;
  double t1471;
  double t1479;
  double t1489;
  double t1491;
  double t1074;
  double t1079;
  double t1083;
  double t1093;
  double t1644;
  double t1647;
  double t1654;
  double t1661;
  double t1666;
  double t1673;
  double t1643;
  double t1659;
  double t1674;
  double t1680;
  double t1717;
  double t1734;
  double t1737;
  double t1746;
  double t1760;
  double t1763;
  double t1765;
  double t1779;
  double t1713;
  double t1758;
  double t1782;
  double t1783;
  double t1806;
  double t1809;
  double t1810;
  double t1817;
  double t1832;
  double t1834;
  double t1842;
  double t1854;
  double t1798;
  double t1820;
  double t1856;
  double t1861;
  double t1874;
  double t1880;
  double t1881;
  double t1889;
  double t1897;
  double t1901;
  double t1902;
  double t1909;
  double t773;
  double t862;
  double t975;
  double t982;
  double t1020;
  double t1021;
  double t1049;
  double t1052;
  double t1066;
  double t1081;
  double t1095;
  double t1115;
  double t1436;
  double t1470;
  double t1504;
  double t1512;
  double t1516;
  double t1521;
  double t1531;
  double t1539;
  double t1567;
  double t1586;
  double t1589;
  double t1598;
  double t1867;
  double t1896;
  double t1919;
  double t1924;
  double t1950;
  double t1951;
  double t1952;
  double t1959;
  double t1968;
  double t1969;
  double t1975;
  double t1977;
  double t2154;
  double t2156;
  double t2163;
  double t2169;
  double t2174;
  double t2175;
  double t2196;
  double t2197;
  double t2200;
  double t2208;
  double t2219;
  double t2225;
  double t2229;
  double t2231;
  double t2240;
  double t2241;
  double t2245;
  double t2261;
  double t2279;
  double t2322;
  double t2329;
  double t2337;
  double t2342;
  double t2344;
  double t2346;
  double t2351;
  double t2354;
  double t2355;
  double t2356;
  double t2358;
  double t2369;
  double t2371;
  double t2373;
  double t2376;
  double t2385;
  double t2386;
  double t2388;
  double t2391;
  double t2395;
  double t2401;
  double t2404;
  double t2408;
  double t2422;
  double t2429;
  double t2430;
  double t2431;
  double t2446;
  double t2449;
  double t2457;
  double t2459;
  double t2489;
  double t2490;
  double t2494;
  double t2504;
  t132 = Cos(var1[3]);
  t247 = Cos(var1[5]);
  t258 = Sin(var1[3]);
  t254 = Sin(var1[4]);
  t266 = Sin(var1[5]);
  t223 = Cos(var1[18]);
  t230 = -1.*t223;
  t233 = 1. + t230;
  t277 = Cos(var1[17]);
  t257 = t132*t247*t254;
  t268 = t258*t266;
  t272 = t257 + t268;
  t239 = Sin(var1[17]);
  t285 = -1.*t247*t258;
  t290 = t132*t254*t266;
  t292 = t285 + t290;
  t105 = Sin(var1[19]);
  t134 = Cos(var1[4]);
  t143 = Sin(var1[18]);
  t274 = -1.*t239*t272;
  t296 = t277*t292;
  t302 = t274 + t296;
  t330 = t277*t272;
  t332 = t239*t292;
  t336 = t330 + t332;
  t468 = Cos(var1[19]);
  t476 = -1.*t468;
  t484 = 1. + t476;
  t159 = -0.366501*t143;
  t168 = 0. + t159;
  t221 = t132*t134*t168;
  t320 = 0.340999127418*t233*t302;
  t323 = -0.134322983001*t233;
  t324 = 1. + t323;
  t338 = t324*t336;
  t340 = t221 + t320 + t338;
  t377 = 0.930418*t143;
  t380 = 0. + t377;
  t390 = t132*t134*t380;
  t408 = -0.8656776547239999*t233;
  t413 = 1. + t408;
  t429 = t413*t302;
  t430 = 0.340999127418*t233*t336;
  t448 = t390 + t429 + t430;
  t497 = -1.000000637725*t233;
  t505 = 1. + t497;
  t513 = t505*t132*t134;
  t519 = -0.930418*t143;
  t522 = 0. + t519;
  t528 = t522*t302;
  t533 = 0.366501*t143;
  t552 = 0. + t533;
  t561 = t552*t336;
  t564 = t513 + t528 + t561;
  t622 = Cos(var1[20]);
  t624 = -1.*t622;
  t626 = 1. + t624;
  t27 = Sin(var1[21]);
  t46 = Sin(var1[20]);
  t112 = 0.930418*t105;
  t125 = 0. + t112;
  t343 = t125*t340;
  t345 = 0.366501*t105;
  t348 = 0. + t345;
  t460 = t348*t448;
  t485 = -1.000000637725*t484;
  t489 = 1. + t485;
  t565 = t489*t564;
  t568 = t343 + t460 + t565;
  t627 = -0.8656776547239999*t484;
  t631 = 1. + t627;
  t634 = t631*t340;
  t635 = -0.340999127418*t484*t448;
  t647 = -0.930418*t105;
  t649 = 0. + t647;
  t653 = t649*t564;
  t668 = t634 + t635 + t653;
  t710 = -0.340999127418*t484*t340;
  t713 = -0.134322983001*t484;
  t717 = 1. + t713;
  t718 = t717*t448;
  t751 = -0.366501*t105;
  t754 = 0. + t751;
  t756 = t754*t564;
  t760 = t710 + t718 + t756;
  t876 = Cos(var1[21]);
  t882 = -1.*t876;
  t889 = 1. + t882;
  t69 = 0.366501*t46;
  t100 = 0. + t69;
  t616 = t100*t568;
  t669 = -0.340999127418*t626*t668;
  t684 = -0.134322983001*t626;
  t687 = 1. + t684;
  t761 = t687*t760;
  t768 = t616 + t669 + t761;
  t805 = 0.930418*t46;
  t821 = 0. + t805;
  t827 = t821*t568;
  t834 = -0.8656776547239999*t626;
  t841 = 1. + t834;
  t843 = t841*t668;
  t849 = -0.340999127418*t626*t760;
  t861 = t827 + t843 + t849;
  t924 = -1.000000637725*t626;
  t926 = 1. + t924;
  t935 = t926*t568;
  t943 = -0.930418*t46;
  t946 = 0. + t943;
  t961 = t946*t668;
  t962 = -0.366501*t46;
  t969 = 0. + t962;
  t972 = t969*t760;
  t974 = t935 + t961 + t972;
  t29 = -0.366501*t27;
  t39 = 0. + t29;
  t1153 = t247*t258*t254;
  t1157 = -1.*t132*t266;
  t1170 = t1153 + t1157;
  t1186 = t132*t247;
  t1192 = t258*t254*t266;
  t1195 = t1186 + t1192;
  t1185 = -1.*t239*t1170;
  t1198 = t277*t1195;
  t1200 = t1185 + t1198;
  t1219 = t277*t1170;
  t1220 = t239*t1195;
  t1226 = t1219 + t1220;
  t1149 = t134*t168*t258;
  t1217 = 0.340999127418*t233*t1200;
  t1229 = t324*t1226;
  t1234 = t1149 + t1217 + t1229;
  t1251 = t134*t380*t258;
  t1252 = t413*t1200;
  t1255 = 0.340999127418*t233*t1226;
  t1275 = t1251 + t1252 + t1255;
  t1286 = t505*t134*t258;
  t1297 = t522*t1200;
  t1310 = t552*t1226;
  t1322 = t1286 + t1297 + t1310;
  t775 = -0.930418*t27;
  t780 = 0. + t775;
  t1239 = t125*t1234;
  t1281 = t348*t1275;
  t1332 = t489*t1322;
  t1339 = t1239 + t1281 + t1332;
  t1358 = t631*t1234;
  t1359 = -0.340999127418*t484*t1275;
  t1376 = t649*t1322;
  t1378 = t1358 + t1359 + t1376;
  t1394 = -0.340999127418*t484*t1234;
  t1415 = t717*t1275;
  t1420 = t754*t1322;
  t1423 = t1394 + t1415 + t1420;
  t897 = -1.000000637725*t889;
  t899 = 1. + t897;
  t1007 = -0.134322983001*t889;
  t1012 = 1. + t1007;
  t1347 = t100*t1339;
  t1386 = -0.340999127418*t626*t1378;
  t1427 = t687*t1423;
  t1431 = t1347 + t1386 + t1427;
  t1443 = t821*t1339;
  t1448 = t841*t1378;
  t1451 = -0.340999127418*t626*t1423;
  t1461 = t1443 + t1448 + t1451;
  t1022 = 0.366501*t27;
  t1034 = 0. + t1022;
  t1471 = t926*t1339;
  t1479 = t946*t1378;
  t1489 = t969*t1423;
  t1491 = t1471 + t1479 + t1489;
  t1074 = -0.8656776547239999*t889;
  t1079 = 1. + t1074;
  t1083 = 0.930418*t27;
  t1093 = 0. + t1083;
  t1644 = -1.*t134*t247*t239;
  t1647 = t277*t134*t266;
  t1654 = t1644 + t1647;
  t1661 = t277*t134*t247;
  t1666 = t134*t239*t266;
  t1673 = t1661 + t1666;
  t1643 = -1.*t168*t254;
  t1659 = 0.340999127418*t233*t1654;
  t1674 = t324*t1673;
  t1680 = t1643 + t1659 + t1674;
  t1717 = -1.*t380*t254;
  t1734 = t413*t1654;
  t1737 = 0.340999127418*t233*t1673;
  t1746 = t1717 + t1734 + t1737;
  t1760 = -1.*t505*t254;
  t1763 = t522*t1654;
  t1765 = t552*t1673;
  t1779 = t1760 + t1763 + t1765;
  t1713 = t125*t1680;
  t1758 = t348*t1746;
  t1782 = t489*t1779;
  t1783 = t1713 + t1758 + t1782;
  t1806 = t631*t1680;
  t1809 = -0.340999127418*t484*t1746;
  t1810 = t649*t1779;
  t1817 = t1806 + t1809 + t1810;
  t1832 = -0.340999127418*t484*t1680;
  t1834 = t717*t1746;
  t1842 = t754*t1779;
  t1854 = t1832 + t1834 + t1842;
  t1798 = t100*t1783;
  t1820 = -0.340999127418*t626*t1817;
  t1856 = t687*t1854;
  t1861 = t1798 + t1820 + t1856;
  t1874 = t821*t1783;
  t1880 = t841*t1817;
  t1881 = -0.340999127418*t626*t1854;
  t1889 = t1874 + t1880 + t1881;
  t1897 = t926*t1783;
  t1901 = t946*t1817;
  t1902 = t969*t1854;
  t1909 = t1897 + t1901 + t1902;
  t773 = t39*t768;
  t862 = t780*t861;
  t975 = t899*t974;
  t982 = t773 + t862 + t975;
  t1020 = t1012*t768;
  t1021 = -0.340999127418*t889*t861;
  t1049 = t1034*t974;
  t1052 = t1020 + t1021 + t1049;
  t1066 = -0.340999127418*t889*t768;
  t1081 = t1079*t861;
  t1095 = t1093*t974;
  t1115 = t1066 + t1081 + t1095;
  t1436 = t39*t1431;
  t1470 = t780*t1461;
  t1504 = t899*t1491;
  t1512 = t1436 + t1470 + t1504;
  t1516 = t1012*t1431;
  t1521 = -0.340999127418*t889*t1461;
  t1531 = t1034*t1491;
  t1539 = t1516 + t1521 + t1531;
  t1567 = -0.340999127418*t889*t1431;
  t1586 = t1079*t1461;
  t1589 = t1093*t1491;
  t1598 = t1567 + t1586 + t1589;
  t1867 = t39*t1861;
  t1896 = t780*t1889;
  t1919 = t899*t1909;
  t1924 = t1867 + t1896 + t1919;
  t1950 = t1012*t1861;
  t1951 = -0.340999127418*t889*t1889;
  t1952 = t1034*t1909;
  t1959 = t1950 + t1951 + t1952;
  t1968 = -0.340999127418*t889*t1861;
  t1969 = t1079*t1889;
  t1975 = t1093*t1909;
  t1977 = t1968 + t1969 + t1975;
  t2154 = -0.04500040093286238*t233;
  t2156 = -0.07877663122399998*t522;
  t2163 = 0.031030906668*t552;
  t2169 = 0. + t2154 + t2156 + t2163;
  t2174 = -0.091*t239;
  t2175 = 0. + t2174;
  t2196 = -1.*t277;
  t2197 = 1. + t2196;
  t2200 = -0.091*t2197;
  t2208 = 0. + t2200;
  t2219 = 1.296332362046933e-7*var1[18];
  t2225 = -0.07877668146182712*t233;
  t2229 = -0.045000372235*t380;
  t2231 = t2219 + t2225 + t2229;
  t2240 = 3.2909349868922137e-7*var1[18];
  t2241 = 0.03103092645718495*t233;
  t2245 = -0.045000372235*t168;
  t2261 = t2240 + t2241 + t2245;
  t2279 = -1.296332362046933e-7*var1[19];
  t2322 = -0.14128592423750855*t484;
  t2329 = -0.045000372235*t649;
  t2337 = t2279 + t2322 + t2329;
  t2342 = 3.2909349868922137e-7*var1[19];
  t2344 = -0.055653945343889656*t484;
  t2346 = -0.045000372235*t754;
  t2351 = t2342 + t2344 + t2346;
  t2354 = -0.04500040093286238*t484;
  t2355 = -0.055653909852*t348;
  t2356 = -0.141285834136*t125;
  t2358 = 0. + t2354 + t2355 + t2356;
  t2369 = 0.039853038461262744*t626;
  t2371 = -0.22023459268999998*t946;
  t2373 = -0.086752619205*t969;
  t2376 = 0. + t2369 + t2371 + t2373;
  t2385 = 6.295460977284962e-8*var1[20];
  t2386 = -0.22023473313910558*t626;
  t2388 = 0.039853013046*t821;
  t2391 = t2385 + t2386 + t2388;
  t2395 = -1.5981976069815686e-7*var1[20];
  t2401 = -0.08675267452931407*t626;
  t2404 = 0.039853013046*t100;
  t2408 = t2395 + t2401 + t2404;
  t2422 = 5.7930615939377813e-8*var1[21];
  t2429 = -0.23261833304643187*t889;
  t2430 = -0.262809976934*t1034;
  t2431 = t2422 + t2429 + t2430;
  t2446 = -2.281945176511838e-8*var1[21];
  t2449 = -0.5905366811997648*t889;
  t2457 = -0.262809976934*t1093;
  t2459 = t2446 + t2449 + t2457;
  t2489 = -0.26281014453449253*t889;
  t2490 = -0.5905363046000001*t780;
  t2494 = -0.23261818470000004*t39;
  t2504 = 0. + t2489 + t2490 + t2494;
  p_output1[0]=-0.194216*t1052 - 0.493047*t1115 + 0.848048*t982;
  p_output1[1]=0.848048*t1512 - 0.194216*t1539 - 0.493047*t1598;
  p_output1[2]=0.848048*t1924 - 0.194216*t1959 - 0.493047*t1977;
  p_output1[3]=0.;
  p_output1[4]=-0.310811*t1052 - 0.789039*t1115 - 0.529919*t982;
  p_output1[5]=-0.529919*t1512 - 0.310811*t1539 - 0.789039*t1598;
  p_output1[6]=-0.529919*t1924 - 0.310811*t1959 - 0.789039*t1977;
  p_output1[7]=0.;
  p_output1[8]=0.930418*t1052 - 0.366501*t1115;
  p_output1[9]=0.930418*t1539 - 0.366501*t1598;
  p_output1[10]=0.930418*t1959 - 0.366501*t1977;
  p_output1[11]=0.;
  p_output1[12]=0. - 0.319547*t1052 - 0.58342*t1115 + t132*t134*t2169 + t2175*t272 + t2208*t292 + t2231*t302 + t2261*t336 + t2337*t340 + t2351*t448 + t2358*t564 + t2376*t568 + t2391*t668 + t2408*t760 + t2431*t768 + t2459*t861 + t2504*t974 - 0.277485*t982 + var1[0];
  p_output1[13]=0. - 0.277485*t1512 - 0.319547*t1539 - 0.58342*t1598 + t1170*t2175 + t1195*t2208 + t1200*t2231 + t1226*t2261 + t1234*t2337 + t1275*t2351 + t1322*t2358 + t1339*t2376 + t1378*t2391 + t1423*t2408 + t1431*t2431 + t1461*t2459 + t1491*t2504 + t134*t2169*t258 + var1[1];
  p_output1[14]=0. - 0.277485*t1924 - 0.319547*t1959 - 0.58342*t1977 + t1654*t2231 + t1673*t2261 + t1680*t2337 + t1746*t2351 + t1779*t2358 + t1783*t2376 + t1817*t2391 + t1854*t2408 + t1861*t2431 + t1889*t2459 + t134*t2175*t247 + t1909*t2504 - 1.*t2169*t254 + t134*t2208*t266 + var1[2];
  p_output1[15]=1.;
}



void T_right_tarsus_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
