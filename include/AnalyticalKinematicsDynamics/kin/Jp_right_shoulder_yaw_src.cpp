/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:21:52 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_right_shoulder_yaw_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t637;
  double t1121;
  double t1139;
  double t1164;
  double t1228;
  double t1263;
  double t1706;
  double t1419;
  double t1572;
  double t1730;
  double t343;
  double t360;
  double t508;
  double t1677;
  double t1820;
  double t1823;
  double t2213;
  double t2236;
  double t2508;
  double t3857;
  double t3883;
  double t3953;
  double t4056;
  double t48;
  double t3519;
  double t3573;
  double t3162;
  double t3312;
  double t3427;
  double t3614;
  double t3644;
  double t3745;
  double t4051;
  double t2692;
  double t2839;
  double t4508;
  double t4150;
  double t669;
  double t702;
  double t857;
  double t985;
  double t4947;
  double t4288;
  double t4336;
  double t4366;
  double t4411;
  double t4428;
  double t4430;
  double t4900;
  double t4636;
  double t4714;
  double t4729;
  double t4743;
  double t4773;
  double t4827;
  double t4984;
  double t4987;
  double t5041;
  double t5056;
  double t5068;
  double t5076;
  double t4106;
  double t5100;
  double t4180;
  double t5448;
  double t4556;
  double t5182;
  double t4514;
  double t590;
  double t706;
  double t1012;
  double t1098;
  double t1252;
  double t1351;
  double t1354;
  double t2061;
  double t2100;
  double t2184;
  double t2686;
  double t2691;
  double t2883;
  double t2903;
  double t6035;
  double t6082;
  double t6085;
  double t6098;
  double t6134;
  double t6149;
  double t3450;
  double t3516;
  double t3586;
  double t3600;
  double t3794;
  double t4026;
  double t4117;
  double t4131;
  double t4245;
  double t4257;
  double t4273;
  double t6266;
  double t6298;
  double t6300;
  double t6330;
  double t6339;
  double t6354;
  double t4470;
  double t4505;
  double t4526;
  double t4551;
  double t4585;
  double t4592;
  double t4610;
  double t4872;
  double t4875;
  double t4901;
  double t4935;
  double t4951;
  double t4955;
  double t4977;
  double t5153;
  double t6380;
  double t6386;
  double t6402;
  double t6405;
  double t5197;
  double t6413;
  double t6448;
  double t6451;
  double t6460;
  double t5286;
  double t5287;
  double t6462;
  double t6465;
  double t6469;
  double t6477;
  double t5368;
  double t5383;
  double t5468;
  double t5627;
  double t5712;
  double t5746;
  double t5748;
  double t5780;
  double t6631;
  double t6635;
  double t6645;
  double t6653;
  double t6654;
  double t6657;
  double t6668;
  double t6674;
  double t6678;
  double t6679;
  double t6704;
  double t6705;
  double t6710;
  double t6718;
  double t6730;
  double t6735;
  double t6763;
  double t6766;
  double t6872;
  double t6874;
  double t6877;
  double t6894;
  double t6897;
  double t6899;
  double t6904;
  double t6906;
  double t6907;
  double t6913;
  double t6923;
  double t6924;
  double t6928;
  double t6933;
  double t6939;
  double t6942;
  double t6944;
  double t6947;
  double t7005;
  double t7006;
  double t7010;
  double t7014;
  double t7018;
  double t7019;
  double t7023;
  double t7024;
  double t7030;
  double t7031;
  double t7037;
  double t7039;
  double t7041;
  double t7044;
  double t7048;
  double t7056;
  double t7057;
  double t7059;
  double t7143;
  double t7144;
  double t7146;
  double t7148;
  double t7152;
  double t7153;
  double t7157;
  double t7158;
  double t7165;
  double t7166;
  double t7174;
  double t7181;
  double t7182;
  double t7183;
  double t7189;
  double t7191;
  double t7193;
  double t7230;
  double t7235;
  double t7237;
  double t7245;
  double t7246;
  double t7248;
  double t7250;
  double t7253;
  double t7259;
  double t7263;
  double t7264;
  double t7270;
  double t7271;
  double t7272;
  double t7277;
  double t7278;
  double t7279;
  double t7332;
  double t7333;
  double t7336;
  double t7342;
  double t7346;
  double t7347;
  double t7352;
  double t7354;
  double t7355;
  double t7366;
  double t7367;
  double t7371;
  double t7375;
  double t7376;
  double t7377;
  double t7419;
  double t7424;
  double t7426;
  double t7428;
  double t7429;
  double t7431;
  double t7432;
  double t7435;
  double t7437;
  double t7443;
  double t7444;
  double t7407;
  double t7409;
  double t7410;
  double t7413;
  double t7414;
  double t7501;
  double t7502;
  double t7503;
  double t7505;
  double t7506;
  double t7512;
  double t7517;
  double t7518;
  double t7520;
  double t7522;
  double t7523;
  double t7524;
  double t7527;
  double t7528;
  double t7531;
  double t7540;
  double t7541;
  double t7546;
  double t7580;
  double t7581;
  double t7583;
  double t7585;
  double t7587;
  double t7588;
  double t7590;
  double t7593;
  double t7596;
  double t7600;
  double t7602;
  double t7603;
  double t7611;
  double t7612;
  double t7613;
  double t7670;
  double t7675;
  double t7676;
  double t7677;
  double t7681;
  double t7683;
  double t7684;
  double t7685;
  double t7688;
  double t7690;
  double t7692;
  double t7696;
  double t7642;
  double t7645;
  double t7647;
  double t7652;
  double t7653;
  double t7656;
  double t7662;
  double t7665;
  double t7666;
  double t7734;
  double t7735;
  double t7737;
  double t7741;
  double t7742;
  double t7744;
  double t7747;
  double t7748;
  double t7749;
  double t7750;
  double t7752;
  double t7753;
  double t7755;
  double t7756;
  double t7787;
  double t7788;
  double t7789;
  double t7791;
  double t7794;
  double t7795;
  double t7796;
  double t7797;
  double t7800;
  double t7801;
  double t7802;
  double t7803;
  double t7822;
  double t7838;
  double t7826;
  double t7821;
  double t7825;
  double t7833;
  double t7854;
  double t7837;
  double t7847;
  double t7857;
  double t7844;
  double t7866;
  double t7823;
  double t7824;
  double t7828;
  double t7829;
  double t7830;
  double t7831;
  double t7834;
  double t7836;
  double t7839;
  double t7840;
  double t7841;
  double t7842;
  double t7845;
  double t7846;
  double t7848;
  double t7849;
  double t7850;
  double t7851;
  double t7883;
  double t7885;
  double t7886;
  double t7855;
  double t7888;
  double t7889;
  double t7891;
  double t7892;
  double t7858;
  double t7895;
  double t7897;
  double t7898;
  double t7899;
  double t7862;
  double t7867;
  double t7872;
  double t7875;
  double t7921;
  double t7922;
  double t7924;
  double t7926;
  double t7927;
  double t7928;
  double t7930;
  double t7931;
  double t7933;
  double t7934;
  t637 = Sin(var1[25]);
  t1121 = Sin(var1[3]);
  t1139 = Cos(var1[24]);
  t1164 = -1.*t1139;
  t1228 = 1. + t1164;
  t1263 = Sin(var1[24]);
  t1706 = Cos(var1[3]);
  t1419 = Cos(var1[5]);
  t1572 = Sin(var1[4]);
  t1730 = Sin(var1[5]);
  t343 = Cos(var1[25]);
  t360 = -1.*t343;
  t508 = 1. + t360;
  t1677 = -1.*t1419*t1121*t1572;
  t1820 = t1706*t1730;
  t1823 = t1677 + t1820;
  t2213 = -1.*t1706*t1419;
  t2236 = -1.*t1121*t1572*t1730;
  t2508 = t2213 + t2236;
  t3857 = Cos(var1[26]);
  t3883 = -1.*t3857;
  t3953 = 1. + t3883;
  t4056 = Sin(var1[26]);
  t48 = Cos(var1[4]);
  t3519 = -0.994522*t637;
  t3573 = 0. + t3519;
  t3162 = -1.*t1263*t1823;
  t3312 = t1139*t2508;
  t3427 = t3162 + t3312;
  t3614 = t1139*t1823;
  t3644 = t1263*t2508;
  t3745 = t3614 + t3644;
  t4051 = -0.051978134642000004*t3953;
  t2692 = -0.104528*t637;
  t2839 = 0. + t2692;
  t4508 = 0.05226439969100001*t3953;
  t4150 = 0.49726168403800003*t3953;
  t669 = 0.104528*t637;
  t702 = 0. + t669;
  t857 = 0.994522*t637;
  t985 = 0. + t857;
  t4947 = 0.073913*t4056;
  t4288 = -1.*t48*t3573*t1121;
  t4336 = -0.103955395616*t508*t3427;
  t4366 = -0.9890740084840001*t508;
  t4411 = 1. + t4366;
  t4428 = t4411*t3745;
  t4430 = t4288 + t4336 + t4428;
  t4900 = -0.703234*t4056;
  t4636 = -1.*t48*t2839*t1121;
  t4714 = -0.010926102783999999*t508;
  t4729 = 1. + t4714;
  t4743 = t4729*t3427;
  t4773 = -0.103955395616*t508*t3745;
  t4827 = t4636 + t4743 + t4773;
  t4984 = -1.0000001112680001*t508;
  t4987 = 1. + t4984;
  t5041 = -1.*t4987*t48*t1121;
  t5056 = t702*t3427;
  t5068 = t985*t3745;
  t5076 = t5041 + t5056 + t5068;
  t4106 = -0.707107*t4056;
  t5100 = -0.49726168403800003*t3953;
  t4180 = -0.073913*t4056;
  t5448 = 0.051978134642000004*t3953;
  t4556 = 0.707107*t4056;
  t5182 = -0.05226439969100001*t3953;
  t4514 = 0.703234*t4056;
  t590 = -0.056500534356700764*t508;
  t706 = 0.040271188976*t702;
  t1012 = 0.38315650737400003*t985;
  t1098 = 0. + t590 + t706 + t1012;
  t1252 = 0.4*t1228;
  t1351 = -0.12*t1263;
  t1354 = 0. + t1252 + t1351;
  t2061 = -0.12*t1228;
  t2100 = -0.4*t1263;
  t2184 = 0. + t2061 + t2100;
  t2686 = 1.1345904784751044e-7*var1[25];
  t2691 = 0.04027119345689465*t508;
  t2883 = -0.05650052807*t2839;
  t2903 = t2686 + t2691 + t2883;
  t6035 = t1706*t1419*t1572;
  t6082 = t1121*t1730;
  t6085 = t6035 + t6082;
  t6098 = -1.*t1419*t1121;
  t6134 = t1706*t1572*t1730;
  t6149 = t6098 + t6134;
  t3450 = -1.1924972351948546e-8*var1[25];
  t3516 = 0.38315655000705834*t508;
  t3586 = -0.05650052807*t3573;
  t3600 = t3450 + t3516 + t3586;
  t3794 = 1.5601527583902087e-7*var1[26];
  t4026 = 0.09582494577057615*t3953;
  t4117 = t4051 + t4106;
  t4131 = -0.231098203479*t4117;
  t4245 = t4150 + t4180;
  t4257 = 0.164383620275*t4245;
  t4273 = t3794 + t4026 + t4131 + t4257;
  t6266 = -1.*t1263*t6085;
  t6298 = t1139*t6149;
  t6300 = t6266 + t6298;
  t6330 = t1139*t6085;
  t6339 = t1263*t6149;
  t6354 = t6330 + t6339;
  t4470 = 1.639789470231751e-8*var1[26];
  t4505 = -0.22983603018311177*t3953;
  t4526 = t4508 + t4514;
  t4551 = 0.164383620275*t4526;
  t4585 = t4051 + t4556;
  t4592 = 0.18957839082800002*t4585;
  t4610 = t4470 + t4505 + t4551 + t4592;
  t4872 = -1.568745163810375e-7*var1[26];
  t4875 = 0.08219200580743281*t3953;
  t4901 = t4508 + t4900;
  t4935 = -0.231098203479*t4901;
  t4951 = t4150 + t4947;
  t4955 = 0.18957839082800002*t4951;
  t4977 = t4872 + t4875 + t4935 + t4955;
  t5153 = t5100 + t4947;
  t6380 = t1706*t48*t3573;
  t6386 = -0.103955395616*t508*t6300;
  t6402 = t4411*t6354;
  t6405 = t6380 + t6386 + t6402;
  t5197 = t5182 + t4900;
  t6413 = t1706*t48*t2839;
  t6448 = t4729*t6300;
  t6451 = -0.103955395616*t508*t6354;
  t6460 = t6413 + t6448 + t6451;
  t5286 = -0.500001190325*t3953;
  t5287 = 1. + t5286;
  t6462 = t4987*t1706*t48;
  t6465 = t702*t6300;
  t6469 = t985*t6354;
  t6477 = t6462 + t6465 + t6469;
  t5368 = -0.5054634410180001*t3953;
  t5383 = 1. + t5368;
  t5468 = t5448 + t4106;
  t5627 = t5100 + t4180;
  t5712 = t5448 + t4556;
  t5746 = -0.9945383682050002*t3953;
  t5748 = 1. + t5746;
  t5780 = t5182 + t4514;
  t6631 = -1.*t1706*t48*t1419*t1263;
  t6635 = t1139*t1706*t48*t1730;
  t6645 = t6631 + t6635;
  t6653 = t1139*t1706*t48*t1419;
  t6654 = t1706*t48*t1263*t1730;
  t6657 = t6653 + t6654;
  t6668 = -1.*t1706*t3573*t1572;
  t6674 = -0.103955395616*t508*t6645;
  t6678 = t4411*t6657;
  t6679 = t6668 + t6674 + t6678;
  t6704 = -1.*t1706*t2839*t1572;
  t6705 = t4729*t6645;
  t6710 = -0.103955395616*t508*t6657;
  t6718 = t6704 + t6705 + t6710;
  t6730 = -1.*t4987*t1706*t1572;
  t6735 = t702*t6645;
  t6763 = t985*t6657;
  t6766 = t6730 + t6735 + t6763;
  t6872 = -1.*t48*t1419*t1263*t1121;
  t6874 = t1139*t48*t1121*t1730;
  t6877 = t6872 + t6874;
  t6894 = t1139*t48*t1419*t1121;
  t6897 = t48*t1263*t1121*t1730;
  t6899 = t6894 + t6897;
  t6904 = -1.*t3573*t1121*t1572;
  t6906 = -0.103955395616*t508*t6877;
  t6907 = t4411*t6899;
  t6913 = t6904 + t6906 + t6907;
  t6923 = -1.*t2839*t1121*t1572;
  t6924 = t4729*t6877;
  t6928 = -0.103955395616*t508*t6899;
  t6933 = t6923 + t6924 + t6928;
  t6939 = -1.*t4987*t1121*t1572;
  t6942 = t702*t6877;
  t6944 = t985*t6899;
  t6947 = t6939 + t6942 + t6944;
  t7005 = t1419*t1263*t1572;
  t7006 = -1.*t1139*t1572*t1730;
  t7010 = t7005 + t7006;
  t7014 = -1.*t1139*t1419*t1572;
  t7018 = -1.*t1263*t1572*t1730;
  t7019 = t7014 + t7018;
  t7023 = -1.*t48*t3573;
  t7024 = -0.103955395616*t508*t7010;
  t7030 = t4411*t7019;
  t7031 = t7023 + t7024 + t7030;
  t7037 = -1.*t48*t2839;
  t7039 = t4729*t7010;
  t7041 = -0.103955395616*t508*t7019;
  t7044 = t7037 + t7039 + t7041;
  t7048 = -1.*t4987*t48;
  t7056 = t702*t7010;
  t7057 = t985*t7019;
  t7059 = t7048 + t7056 + t7057;
  t7143 = t1419*t1121;
  t7144 = -1.*t1706*t1572*t1730;
  t7146 = t7143 + t7144;
  t7148 = t1263*t6085;
  t7152 = t1139*t7146;
  t7153 = t7148 + t7152;
  t7157 = -1.*t1263*t7146;
  t7158 = t6330 + t7157;
  t7165 = -0.103955395616*t508*t7153;
  t7166 = t4729*t7158;
  t7174 = t7165 + t7166;
  t7181 = t4411*t7153;
  t7182 = -0.103955395616*t508*t7158;
  t7183 = t7181 + t7182;
  t7189 = t985*t7153;
  t7191 = t702*t7158;
  t7193 = t7189 + t7191;
  t7230 = t1419*t1121*t1572;
  t7235 = -1.*t1706*t1730;
  t7237 = t7230 + t7235;
  t7245 = t1263*t7237;
  t7246 = t7245 + t3312;
  t7248 = t1139*t7237;
  t7250 = -1.*t1263*t2508;
  t7253 = t7248 + t7250;
  t7259 = -0.103955395616*t508*t7246;
  t7263 = t4729*t7253;
  t7264 = t7259 + t7263;
  t7270 = t4411*t7246;
  t7271 = -0.103955395616*t508*t7253;
  t7272 = t7270 + t7271;
  t7277 = t985*t7246;
  t7278 = t702*t7253;
  t7279 = t7277 + t7278;
  t7332 = t48*t1419*t1263;
  t7333 = -1.*t1139*t48*t1730;
  t7336 = t7332 + t7333;
  t7342 = t1139*t48*t1419;
  t7346 = t48*t1263*t1730;
  t7347 = t7342 + t7346;
  t7352 = -0.103955395616*t508*t7336;
  t7354 = t4729*t7347;
  t7355 = t7352 + t7354;
  t7366 = t4411*t7336;
  t7367 = -0.103955395616*t508*t7347;
  t7371 = t7366 + t7367;
  t7375 = t985*t7336;
  t7376 = t702*t7347;
  t7377 = t7375 + t7376;
  t7419 = -1.*t1139*t6085;
  t7424 = -1.*t1263*t6149;
  t7426 = t7419 + t7424;
  t7428 = t4729*t7426;
  t7429 = t6386 + t7428;
  t7431 = t4411*t6300;
  t7432 = -0.103955395616*t508*t7426;
  t7435 = t7431 + t7432;
  t7437 = t985*t6300;
  t7443 = t702*t7426;
  t7444 = t7437 + t7443;
  t7407 = -0.12*t1139;
  t7409 = 0.4*t1263;
  t7410 = t7407 + t7409;
  t7413 = -0.4*t1139;
  t7414 = t7413 + t1351;
  t7501 = t1706*t1419;
  t7502 = t1121*t1572*t1730;
  t7503 = t7501 + t7502;
  t7505 = -1.*t1263*t7237;
  t7506 = t1139*t7503;
  t7512 = t7505 + t7506;
  t7517 = -1.*t1139*t7237;
  t7518 = -1.*t1263*t7503;
  t7520 = t7517 + t7518;
  t7522 = -0.103955395616*t508*t7512;
  t7523 = t4729*t7520;
  t7524 = t7522 + t7523;
  t7527 = t4411*t7512;
  t7528 = -0.103955395616*t508*t7520;
  t7531 = t7527 + t7528;
  t7540 = t985*t7512;
  t7541 = t702*t7520;
  t7546 = t7540 + t7541;
  t7580 = -1.*t48*t1419*t1263;
  t7581 = t1139*t48*t1730;
  t7583 = t7580 + t7581;
  t7585 = -1.*t1139*t48*t1419;
  t7587 = -1.*t48*t1263*t1730;
  t7588 = t7585 + t7587;
  t7590 = -0.103955395616*t508*t7583;
  t7593 = t4729*t7588;
  t7596 = t7590 + t7593;
  t7600 = t4411*t7583;
  t7602 = -0.103955395616*t508*t7588;
  t7603 = t7600 + t7602;
  t7611 = t985*t7583;
  t7612 = t702*t7588;
  t7613 = t7611 + t7612;
  t7670 = -1.0000001112680001*t1706*t48*t637;
  t7675 = 0.104528*t343*t6300;
  t7676 = 0.994522*t343*t6354;
  t7677 = t7670 + t7675 + t7676;
  t7681 = -0.994522*t343*t1706*t48;
  t7683 = -0.103955395616*t637*t6300;
  t7684 = -0.9890740084840001*t637*t6354;
  t7685 = t7681 + t7683 + t7684;
  t7688 = -0.104528*t343*t1706*t48;
  t7690 = -0.010926102783999999*t637*t6300;
  t7692 = -0.103955395616*t637*t6354;
  t7696 = t7688 + t7690 + t7692;
  t7642 = 0.3852670428678886*t343;
  t7645 = -0.056500534356700764*t637;
  t7647 = t7642 + t7645;
  t7652 = 0.0059058871981009595*t343;
  t7653 = 0.04027119345689465*t637;
  t7656 = 1.1345904784751044e-7 + t7652 + t7653;
  t7662 = 0.05619101817723254*t343;
  t7665 = 0.38315655000705834*t637;
  t7666 = -1.1924972351948546e-8 + t7662 + t7665;
  t7734 = t1263*t7503;
  t7735 = t7248 + t7734;
  t7737 = -1.0000001112680001*t48*t637*t1121;
  t7741 = 0.104528*t343*t7512;
  t7742 = 0.994522*t343*t7735;
  t7744 = t7737 + t7741 + t7742;
  t7747 = -0.994522*t343*t48*t1121;
  t7748 = -0.103955395616*t637*t7512;
  t7749 = -0.9890740084840001*t637*t7735;
  t7750 = t7747 + t7748 + t7749;
  t7752 = -0.104528*t343*t48*t1121;
  t7753 = -0.010926102783999999*t637*t7512;
  t7755 = -0.103955395616*t637*t7735;
  t7756 = t7752 + t7753 + t7755;
  t7787 = 1.0000001112680001*t637*t1572;
  t7788 = 0.104528*t343*t7583;
  t7789 = 0.994522*t343*t7347;
  t7791 = t7787 + t7788 + t7789;
  t7794 = 0.994522*t343*t1572;
  t7795 = -0.103955395616*t637*t7583;
  t7796 = -0.9890740084840001*t637*t7347;
  t7797 = t7794 + t7795 + t7796;
  t7800 = 0.104528*t343*t1572;
  t7801 = -0.010926102783999999*t637*t7583;
  t7802 = -0.103955395616*t637*t7347;
  t7803 = t7800 + t7801 + t7802;
  t7822 = -0.051978134642000004*t4056;
  t7838 = 0.05226439969100001*t4056;
  t7826 = 0.49726168403800003*t4056;
  t7821 = -0.707107*t3857;
  t7825 = -0.073913*t3857;
  t7833 = 0.707107*t3857;
  t7854 = 0.051978134642000004*t4056;
  t7837 = 0.703234*t3857;
  t7847 = 0.073913*t3857;
  t7857 = -0.49726168403800003*t4056;
  t7844 = -0.703234*t3857;
  t7866 = -0.05226439969100001*t4056;
  t7823 = t7821 + t7822;
  t7824 = -0.231098203479*t7823;
  t7828 = t7825 + t7826;
  t7829 = 0.164383620275*t7828;
  t7830 = 0.09582494577057615*t4056;
  t7831 = 1.5601527583902087e-7 + t7824 + t7829 + t7830;
  t7834 = t7833 + t7822;
  t7836 = 0.18957839082800002*t7834;
  t7839 = t7837 + t7838;
  t7840 = 0.164383620275*t7839;
  t7841 = -0.22983603018311177*t4056;
  t7842 = 1.639789470231751e-8 + t7836 + t7840 + t7841;
  t7845 = t7844 + t7838;
  t7846 = -0.231098203479*t7845;
  t7848 = t7847 + t7826;
  t7849 = 0.18957839082800002*t7848;
  t7850 = 0.08219200580743281*t4056;
  t7851 = -1.568745163810375e-7 + t7846 + t7849 + t7850;
  t7883 = t48*t3573*t1121;
  t7885 = t4411*t7735;
  t7886 = t7883 + t7522 + t7885;
  t7855 = t7821 + t7854;
  t7888 = t48*t2839*t1121;
  t7889 = t4729*t7512;
  t7891 = -0.103955395616*t508*t7735;
  t7892 = t7888 + t7889 + t7891;
  t7858 = t7825 + t7857;
  t7895 = t4987*t48*t1121;
  t7897 = t702*t7512;
  t7898 = t985*t7735;
  t7899 = t7895 + t7897 + t7898;
  t7862 = t7833 + t7854;
  t7867 = t7837 + t7866;
  t7872 = t7847 + t7857;
  t7875 = t7844 + t7866;
  t7921 = -1.*t3573*t1572;
  t7922 = t4411*t7347;
  t7924 = t7921 + t7590 + t7922;
  t7926 = -1.*t2839*t1572;
  t7927 = t4729*t7583;
  t7928 = t7926 + t7927 + t7367;
  t7930 = -1.*t4987*t1572;
  t7931 = t702*t7583;
  t7933 = t985*t7347;
  t7934 = t7930 + t7931 + t7933;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1354*t1823 + t2184*t2508 + t2903*t3427 + t3600*t3745 + t4273*t4430 - 1.*t1098*t1121*t48 + t4610*t4827 + t4977*t5076 + 0.140811*(t4430*t5153 + t4827*t5197 + t5076*t5287) + 0.213182*(t4430*t5383 + t4827*t5468 + t5076*t5627) - 0.230568*(t4430*t5712 + t4827*t5748 + t5076*t5780);
  p_output1[10]=t1098*t1706*t48 + t1354*t6085 + t2184*t6149 + t2903*t6300 + t3600*t6354 + t4273*t6405 + t4610*t6460 + t4977*t6477 + 0.140811*(t5153*t6405 + t5197*t6460 + t5287*t6477) + 0.213182*(t5383*t6405 + t5468*t6460 + t5627*t6477) - 0.230568*(t5712*t6405 + t5748*t6460 + t5780*t6477);
  p_output1[11]=0;
  p_output1[12]=-1.*t1098*t1572*t1706 + t1354*t1419*t1706*t48 + t1706*t1730*t2184*t48 + t2903*t6645 + t3600*t6657 + t4273*t6679 + t4610*t6718 + t4977*t6766 + 0.140811*(t5153*t6679 + t5197*t6718 + t5287*t6766) + 0.213182*(t5383*t6679 + t5468*t6718 + t5627*t6766) - 0.230568*(t5712*t6679 + t5748*t6718 + t5780*t6766);
  p_output1[13]=-1.*t1098*t1121*t1572 + t1121*t1354*t1419*t48 + t1121*t1730*t2184*t48 + t2903*t6877 + t3600*t6899 + t4273*t6913 + t4610*t6933 + t4977*t6947 + 0.140811*(t5153*t6913 + t5197*t6933 + t5287*t6947) + 0.213182*(t5383*t6913 + t5468*t6933 + t5627*t6947) - 0.230568*(t5712*t6913 + t5748*t6933 + t5780*t6947);
  p_output1[14]=-1.*t1354*t1419*t1572 - 1.*t1572*t1730*t2184 - 1.*t1098*t48 + t2903*t7010 + t3600*t7019 + t4273*t7031 + t4610*t7044 + t4977*t7059 + 0.140811*(t5153*t7031 + t5197*t7044 + t5287*t7059) + 0.213182*(t5383*t7031 + t5468*t7044 + t5627*t7059) - 0.230568*(t5712*t7031 + t5748*t7044 + t5780*t7059);
  p_output1[15]=t2184*t6085 + t1354*t7146 + t3600*t7153 + t2903*t7158 + t4610*t7174 + t4273*t7183 + t4977*t7193 + 0.140811*(t5197*t7174 + t5153*t7183 + t5287*t7193) + 0.213182*(t5468*t7174 + t5383*t7183 + t5627*t7193) - 0.230568*(t5748*t7174 + t5712*t7183 + t5780*t7193);
  p_output1[16]=t1354*t2508 + t2184*t7237 + t3600*t7246 + t2903*t7253 + t4610*t7264 + t4273*t7272 + t4977*t7279 + 0.140811*(t5197*t7264 + t5153*t7272 + t5287*t7279) + 0.213182*(t5468*t7264 + t5383*t7272 + t5627*t7279) - 0.230568*(t5748*t7264 + t5712*t7272 + t5780*t7279);
  p_output1[17]=-1.*t1354*t1730*t48 + t1419*t2184*t48 + t3600*t7336 + t2903*t7347 + t4610*t7355 + t4273*t7371 + t4977*t7377 + 0.140811*(t5197*t7355 + t5153*t7371 + t5287*t7377) + 0.213182*(t5468*t7355 + t5383*t7371 + t5627*t7377) - 0.230568*(t5748*t7355 + t5712*t7371 + t5780*t7377);
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=t3600*t6300 + t6085*t7410 + t6149*t7414 + t2903*t7426 + t4610*t7429 + t4273*t7435 + t4977*t7444 + 0.140811*(t5197*t7429 + t5153*t7435 + t5287*t7444) + 0.213182*(t5468*t7429 + t5383*t7435 + t5627*t7444) - 0.230568*(t5748*t7429 + t5712*t7435 + t5780*t7444);
  p_output1[73]=t7237*t7410 + t7414*t7503 + t3600*t7512 + t2903*t7520 + t4610*t7524 + t4273*t7531 + t4977*t7546 + 0.140811*(t5197*t7524 + t5153*t7531 + t5287*t7546) + 0.213182*(t5468*t7524 + t5383*t7531 + t5627*t7546) - 0.230568*(t5748*t7524 + t5712*t7531 + t5780*t7546);
  p_output1[74]=t1419*t48*t7410 + t1730*t48*t7414 + t3600*t7583 + t2903*t7588 + t4610*t7596 + t4273*t7603 + t4977*t7613 + 0.140811*(t5197*t7596 + t5153*t7603 + t5287*t7613) + 0.213182*(t5468*t7596 + t5383*t7603 + t5627*t7613) - 0.230568*(t5748*t7596 + t5712*t7603 + t5780*t7613);
  p_output1[75]=t1706*t48*t7647 + t6300*t7656 + t6354*t7666 + t4977*t7677 + t4273*t7685 + t4610*t7696 + 0.140811*(t5287*t7677 + t5153*t7685 + t5197*t7696) + 0.213182*(t5627*t7677 + t5383*t7685 + t5468*t7696) - 0.230568*(t5780*t7677 + t5712*t7685 + t5748*t7696);
  p_output1[76]=t1121*t48*t7647 + t7512*t7656 + t7666*t7735 + t4977*t7744 + t4273*t7750 + t4610*t7756 + 0.140811*(t5287*t7744 + t5153*t7750 + t5197*t7756) + 0.213182*(t5627*t7744 + t5383*t7750 + t5468*t7756) - 0.230568*(t5780*t7744 + t5712*t7750 + t5748*t7756);
  p_output1[77]=-1.*t1572*t7647 + t7583*t7656 + t7347*t7666 + t4977*t7791 + t4273*t7797 + t4610*t7803 + 0.140811*(t5287*t7791 + t5153*t7797 + t5197*t7803) + 0.213182*(t5627*t7791 + t5383*t7797 + t5468*t7803) - 0.230568*(t5780*t7791 + t5712*t7797 + t5748*t7803);
  p_output1[78]=t6405*t7831 + t6460*t7842 + t6477*t7851 + 0.213182*(-0.5054634410180001*t4056*t6405 + t6460*t7855 + t6477*t7858) - 0.230568*(-0.9945383682050002*t4056*t6460 + t6405*t7862 + t6477*t7867) + 0.140811*(-0.500001190325*t4056*t6477 + t6405*t7872 + t6460*t7875);
  p_output1[79]=t7831*t7886 + t7842*t7892 + t7851*t7899 + 0.140811*(t7872*t7886 + t7875*t7892 - 0.500001190325*t4056*t7899) + 0.213182*(-0.5054634410180001*t4056*t7886 + t7855*t7892 + t7858*t7899) - 0.230568*(t7862*t7886 - 0.9945383682050002*t4056*t7892 + t7867*t7899);
  p_output1[80]=t7831*t7924 + t7842*t7928 + t7851*t7934 + 0.140811*(t7872*t7924 + t7875*t7928 - 0.500001190325*t4056*t7934) + 0.213182*(-0.5054634410180001*t4056*t7924 + t7855*t7928 + t7858*t7934) - 0.230568*(t7862*t7924 - 0.9945383682050002*t4056*t7928 + t7867*t7934);
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jp_right_shoulder_yaw_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
