/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:33:44 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dR_knee_joint_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t744;
  double t751;
  double t709;
  double t713;
  double t728;
  double t1299;
  double t896;
  double t1178;
  double t1410;
  double t636;
  double t651;
  double t665;
  double t1204;
  double t1689;
  double t1707;
  double t2314;
  double t2354;
  double t2376;
  double t2525;
  double t2641;
  double t3047;
  double t3062;
  double t3064;
  double t3089;
  double t3096;
  double t3142;
  double t3148;
  double t3152;
  double t3165;
  double t3166;
  double t1729;
  double t1819;
  double t2261;
  double t2518;
  double t2644;
  double t2691;
  double t2721;
  double t2725;
  double t3185;
  double t2924;
  double t2937;
  double t2951;
  double t3011;
  double t3016;
  double t3029;
  double t3034;
  double t3036;
  double t506;
  double t570;
  double t576;
  double t2762;
  double t2884;
  double t2896;
  double t3043;
  double t3189;
  double t3212;
  double t3213;
  double t3222;
  double t3234;
  double t3242;
  double t3247;
  double t3281;
  double t3288;
  double t3290;
  double t3295;
  double t3297;
  double t3312;
  double t3332;
  double t3334;
  double t3379;
  double t3381;
  double t3382;
  double t3386;
  double t3398;
  double t3417;
  double t3422;
  double t3425;
  double t3632;
  double t3663;
  double t3664;
  double t3667;
  double t3639;
  double t3646;
  double t3651;
  double t3657;
  double t3673;
  double t3677;
  double t3688;
  double t3696;
  double t3698;
  double t3238;
  double t3239;
  double t3731;
  double t3738;
  double t3740;
  double t3719;
  double t3720;
  double t3724;
  double t3683;
  double t3702;
  double t3705;
  double t3345;
  double t3370;
  double t3472;
  double t3490;
  double t3708;
  double t3728;
  double t3742;
  double t3743;
  double t3503;
  double t3508;
  double t3749;
  double t3751;
  double t3753;
  double t3755;
  double t3758;
  double t3759;
  double t3767;
  double t3768;
  double t3567;
  double t3569;
  double t3584;
  double t3590;
  double t3608;
  double t3617;
  double t3822;
  double t3825;
  double t3828;
  double t3829;
  double t3833;
  double t3834;
  double t3838;
  double t3852;
  double t3855;
  double t3883;
  double t3886;
  double t3890;
  double t3862;
  double t3863;
  double t3865;
  double t3837;
  double t3857;
  double t3858;
  double t3861;
  double t3874;
  double t3891;
  double t3892;
  double t3897;
  double t3898;
  double t3907;
  double t3919;
  double t3925;
  double t3926;
  double t3927;
  double t3928;
  double t3996;
  double t3998;
  double t4040;
  double t4044;
  double t4050;
  double t4051;
  double t4003;
  double t4007;
  double t4009;
  double t4024;
  double t4026;
  double t4028;
  double t4033;
  double t4017;
  double t4034;
  double t4054;
  double t4060;
  double t4070;
  double t4071;
  double t4086;
  double t4087;
  double t4110;
  double t4122;
  double t4134;
  double t4142;
  double t4232;
  double t4234;
  double t4235;
  double t4227;
  double t4228;
  double t4229;
  double t4230;
  double t4243;
  double t4246;
  double t4249;
  double t4251;
  double t4259;
  double t4312;
  double t4318;
  double t4320;
  double t4326;
  double t4248;
  double t4261;
  double t4263;
  double t4270;
  double t4274;
  double t4283;
  double t4289;
  double t4290;
  double t4273;
  double t4297;
  double t4327;
  double t4335;
  double t4346;
  double t4347;
  double t4351;
  double t4373;
  double t4390;
  double t4407;
  double t4409;
  double t4411;
  double t4540;
  double t4542;
  double t4544;
  double t4555;
  double t4522;
  double t4524;
  double t4527;
  double t4528;
  double t4484;
  double t4493;
  double t4497;
  double t4505;
  double t4511;
  double t4532;
  double t4569;
  double t4580;
  double t4596;
  double t4603;
  double t4608;
  double t4610;
  double t4618;
  double t4621;
  double t4626;
  double t4654;
  double t4768;
  double t4783;
  double t4785;
  double t4787;
  double t4806;
  double t4815;
  double t4833;
  double t4835;
  double t4856;
  double t4874;
  double t4875;
  double t4876;
  double t4950;
  double t4960;
  double t4966;
  double t4969;
  double t4971;
  double t4977;
  double t5035;
  double t5042;
  double t5044;
  double t5048;
  double t4967;
  double t4978;
  double t4982;
  double t4990;
  double t5011;
  double t5017;
  double t5021;
  double t5022;
  double t4996;
  double t5034;
  double t5052;
  double t5069;
  double t5082;
  double t5117;
  double t5125;
  double t5132;
  double t5147;
  double t5161;
  double t5162;
  double t5166;
  double t5264;
  double t5270;
  double t5271;
  double t5251;
  double t5252;
  double t5254;
  double t5262;
  double t5273;
  double t5276;
  double t5282;
  double t5288;
  double t5290;
  double t5313;
  double t5324;
  double t5332;
  double t5297;
  double t5302;
  double t5306;
  double t5279;
  double t5294;
  double t5295;
  double t5296;
  double t5307;
  double t5333;
  double t5341;
  double t5358;
  double t5364;
  double t5370;
  double t5371;
  double t5380;
  double t5389;
  double t5390;
  double t5391;
  double t5471;
  double t5481;
  double t5488;
  double t5492;
  double t5511;
  double t5544;
  double t5578;
  double t5580;
  double t5521;
  double t5533;
  double t5536;
  double t5487;
  double t5517;
  double t5518;
  double t5520;
  double t5539;
  double t5581;
  double t5583;
  double t5599;
  double t5603;
  double t5608;
  double t5611;
  double t5628;
  double t5632;
  double t5637;
  double t5639;
  double t5924;
  double t5927;
  double t6004;
  double t6005;
  double t6007;
  double t6008;
  double t5932;
  double t5933;
  double t5946;
  double t5961;
  double t5963;
  double t5984;
  double t5995;
  double t5947;
  double t5998;
  double t6014;
  double t6019;
  double t6023;
  double t6024;
  double t6054;
  double t6063;
  double t6076;
  double t6081;
  double t6083;
  double t6087;
  double t6260;
  double t6263;
  double t6332;
  double t6334;
  double t6212;
  double t6219;
  double t6220;
  double t6251;
  double t6164;
  double t6169;
  double t6173;
  double t6198;
  double t6211;
  double t6253;
  double t6348;
  double t6359;
  double t6375;
  double t6377;
  double t6387;
  double t6403;
  double t6413;
  double t6423;
  double t6428;
  double t6430;
  double t6504;
  double t6509;
  double t6513;
  double t6514;
  double t6528;
  double t6538;
  double t6539;
  double t6540;
  double t6568;
  double t6580;
  double t6605;
  double t6606;
  double t6789;
  double t6792;
  double t6815;
  double t6833;
  double t6843;
  double t6844;
  double t6883;
  double t6884;
  double t6895;
  double t6868;
  double t6870;
  double t6875;
  double t6828;
  double t6857;
  double t6861;
  double t6864;
  double t6879;
  double t6906;
  double t6922;
  double t6929;
  double t6938;
  double t6941;
  double t6944;
  double t6958;
  double t6960;
  double t6973;
  double t6976;
  double t7052;
  double t7053;
  double t7055;
  double t7076;
  double t7077;
  double t7079;
  double t7143;
  double t7146;
  double t7168;
  double t7101;
  double t7109;
  double t7128;
  double t7064;
  double t7083;
  double t7093;
  double t7099;
  double t7139;
  double t7176;
  double t7179;
  double t7201;
  double t7205;
  double t7213;
  double t7217;
  double t7225;
  double t7231;
  double t7245;
  double t7262;
  double t7413;
  double t7419;
  double t7420;
  double t7434;
  double t7368;
  double t7375;
  double t7377;
  double t7380;
  double t7382;
  double t7402;
  double t7379;
  double t7405;
  double t7438;
  double t7442;
  double t7461;
  double t7463;
  double t7464;
  double t7466;
  double t7470;
  double t7483;
  double t7484;
  double t7486;
  double t7580;
  double t7581;
  double t7586;
  double t7590;
  double t7594;
  double t7597;
  double t7658;
  double t7662;
  double t7666;
  double t7669;
  double t7589;
  double t7599;
  double t7609;
  double t7614;
  double t7633;
  double t7637;
  double t7648;
  double t7653;
  double t7632;
  double t7657;
  double t7673;
  double t7689;
  double t7694;
  double t7699;
  double t7705;
  double t7707;
  double t7719;
  double t7727;
  double t7737;
  double t7740;
  double t7841;
  double t7842;
  double t7845;
  double t7853;
  double t7827;
  double t7831;
  double t7832;
  double t7836;
  double t7793;
  double t7794;
  double t7810;
  double t7813;
  double t7825;
  double t7837;
  double t7855;
  double t7858;
  double t7861;
  double t7864;
  double t7866;
  double t7871;
  double t7876;
  double t7880;
  double t7893;
  double t7897;
  double t7950;
  double t7951;
  double t7965;
  double t7967;
  double t7987;
  double t7989;
  double t7991;
  double t7996;
  double t8009;
  double t8014;
  double t8016;
  double t8020;
  double t3233;
  double t3336;
  double t3428;
  double t3441;
  double t3465;
  double t3496;
  double t3510;
  double t3512;
  double t3546;
  double t3560;
  double t3575;
  double t3593;
  double t3619;
  double t3620;
  double t3745;
  double t3756;
  double t3773;
  double t3777;
  double t3780;
  double t3788;
  double t3793;
  double t3794;
  double t3795;
  double t3797;
  double t3798;
  double t3801;
  double t3805;
  double t3814;
  double t3894;
  double t3924;
  double t3934;
  double t3948;
  double t3955;
  double t3956;
  double t3957;
  double t3961;
  double t3962;
  double t3963;
  double t3971;
  double t3973;
  double t3982;
  double t3987;
  double t4062;
  double t4100;
  double t4143;
  double t4157;
  double t4162;
  double t4172;
  double t4174;
  double t4180;
  double t4190;
  double t4198;
  double t4203;
  double t4220;
  double t4221;
  double t4222;
  double t4336;
  double t4384;
  double t4417;
  double t4419;
  double t4424;
  double t4430;
  double t4431;
  double t4433;
  double t4447;
  double t4449;
  double t4455;
  double t4458;
  double t4461;
  double t4466;
  double t4583;
  double t4611;
  double t4664;
  double t4674;
  double t4680;
  double t4712;
  double t4715;
  double t4718;
  double t4719;
  double t4724;
  double t4726;
  double t4745;
  double t4758;
  double t4759;
  double t4795;
  double t4837;
  double t4882;
  double t4889;
  double t4893;
  double t4894;
  double t4902;
  double t4909;
  double t4913;
  double t4914;
  double t4926;
  double t4928;
  double t4935;
  double t4936;
  double t5080;
  double t5144;
  double t5168;
  double t5184;
  double t5187;
  double t5189;
  double t5203;
  double t5208;
  double t5210;
  double t5211;
  double t5215;
  double t5221;
  double t5227;
  double t5229;
  double t5348;
  double t5374;
  double t5400;
  double t5402;
  double t5405;
  double t5409;
  double t5418;
  double t5419;
  double t5431;
  double t5433;
  double t5453;
  double t5458;
  double t5464;
  double t5466;
  double t5596;
  double t5617;
  double t5649;
  double t5652;
  double t5654;
  double t5657;
  double t5674;
  double t5677;
  double t5683;
  double t5689;
  double t5693;
  double t5699;
  double t5704;
  double t5715;
  double t5737;
  double t5744;
  double t5745;
  double t5748;
  double t5762;
  double t5768;
  double t5769;
  double t5780;
  double t5781;
  double t5794;
  double t5810;
  double t5842;
  double t5843;
  double t5853;
  double t6020;
  double t6064;
  double t6090;
  double t6099;
  double t6103;
  double t6110;
  double t6114;
  double t6116;
  double t6119;
  double t6124;
  double t6141;
  double t6144;
  double t6150;
  double t6157;
  double t6364;
  double t6412;
  double t6436;
  double t6440;
  double t6450;
  double t6455;
  double t6456;
  double t6458;
  double t6460;
  double t6465;
  double t6476;
  double t6480;
  double t6481;
  double t6487;
  double t6516;
  double t6541;
  double t6622;
  double t6629;
  double t6643;
  double t6667;
  double t6677;
  double t6687;
  double t6690;
  double t6700;
  double t6712;
  double t6717;
  double t6728;
  double t6746;
  double t6924;
  double t6954;
  double t6979;
  double t6995;
  double t6996;
  double t7008;
  double t7022;
  double t7026;
  double t7030;
  double t7033;
  double t7034;
  double t7035;
  double t7037;
  double t7038;
  double t7198;
  double t7222;
  double t7263;
  double t7276;
  double t7281;
  double t7284;
  double t7296;
  double t7297;
  double t7306;
  double t7329;
  double t7334;
  double t7343;
  double t7352;
  double t7355;
  double t7458;
  double t7469;
  double t7489;
  double t7494;
  double t7510;
  double t7512;
  double t7517;
  double t7524;
  double t7525;
  double t7532;
  double t7533;
  double t7540;
  double t7542;
  double t7545;
  double t7692;
  double t7717;
  double t7741;
  double t7743;
  double t7744;
  double t7754;
  double t7756;
  double t7757;
  double t7758;
  double t7762;
  double t7772;
  double t7773;
  double t7774;
  double t7776;
  double t7860;
  double t7873;
  double t7898;
  double t7899;
  double t7901;
  double t7903;
  double t7907;
  double t7910;
  double t7914;
  double t7915;
  double t7917;
  double t7918;
  double t7919;
  double t7921;
  double t7969;
  double t8007;
  double t8024;
  double t8026;
  double t8032;
  double t8044;
  double t8048;
  double t8051;
  double t8054;
  double t8062;
  double t8065;
  double t8068;
  double t8071;
  double t8074;
  t744 = Cos(var1[3]);
  t751 = Cos(var1[4]);
  t709 = Cos(var1[7]);
  t713 = -1.*t709;
  t728 = 1. + t713;
  t1299 = Cos(var1[5]);
  t896 = Cos(var1[6]);
  t1178 = Sin(var1[5]);
  t1410 = Sin(var1[6]);
  t636 = Cos(var1[8]);
  t651 = -1.*t636;
  t665 = 1. + t651;
  t1204 = t744*t751*t896*t1178;
  t1689 = -1.*t744*t751*t1299*t1410;
  t1707 = t1204 + t1689;
  t2314 = t744*t751*t1299*t896;
  t2354 = t744*t751*t1178*t1410;
  t2376 = t2314 + t2354;
  t2525 = Sin(var1[4]);
  t2641 = Sin(var1[7]);
  t3047 = -1.000000637725*t728;
  t3062 = 1. + t3047;
  t3064 = -1.*t744*t3062*t2525;
  t3089 = -0.930418*t2641;
  t3096 = 0. + t3089;
  t3142 = t1707*t3096;
  t3148 = -0.366501*t2641;
  t3152 = 0. + t3148;
  t3165 = t2376*t3152;
  t3166 = t3064 + t3142 + t3165;
  t1729 = -0.340999127418*t728*t1707;
  t1819 = -0.134322983001*t728;
  t2261 = 1. + t1819;
  t2518 = t2261*t2376;
  t2644 = 0.366501*t2641;
  t2691 = 0. + t2644;
  t2721 = -1.*t744*t2525*t2691;
  t2725 = t1729 + t2518 + t2721;
  t3185 = Sin(var1[8]);
  t2924 = -0.8656776547239999*t728;
  t2937 = 1. + t2924;
  t2951 = t2937*t1707;
  t3011 = -0.340999127418*t728*t2376;
  t3016 = 0.930418*t2641;
  t3029 = 0. + t3016;
  t3034 = -1.*t744*t2525*t3029;
  t3036 = t2951 + t3011 + t3034;
  t506 = Cos(var1[9]);
  t570 = -1.*t506;
  t576 = 1. + t570;
  t2762 = 0.340999127418*t665*t2725;
  t2884 = -0.134322983001*t665;
  t2896 = 1. + t2884;
  t3043 = t2896*t3036;
  t3189 = -0.366501*t3185;
  t3212 = 0. + t3189;
  t3213 = t3166*t3212;
  t3222 = t2762 + t3043 + t3213;
  t3234 = Sin(var1[9]);
  t3242 = -1.000000637725*t665;
  t3247 = 1. + t3242;
  t3281 = t3247*t3166;
  t3288 = -0.930418*t3185;
  t3290 = 0. + t3288;
  t3295 = t2725*t3290;
  t3297 = 0.366501*t3185;
  t3312 = 0. + t3297;
  t3332 = t3036*t3312;
  t3334 = t3281 + t3295 + t3332;
  t3379 = -0.8656776547239999*t665;
  t3381 = 1. + t3379;
  t3382 = t3381*t2725;
  t3386 = 0.340999127418*t665*t3036;
  t3398 = 0.930418*t3185;
  t3417 = 0. + t3398;
  t3422 = t3166*t3417;
  t3425 = t3382 + t3386 + t3422;
  t3632 = Sin(var1[3]);
  t3663 = t744*t1299*t2525;
  t3664 = t3632*t1178;
  t3667 = t3663 + t3664;
  t3639 = -1.*t1299*t3632;
  t3646 = t744*t2525*t1178;
  t3651 = t3639 + t3646;
  t3657 = t896*t3651;
  t3673 = -1.*t3667*t1410;
  t3677 = t3657 + t3673;
  t3688 = -1.*t896*t3667;
  t3696 = -1.*t3651*t1410;
  t3698 = t3688 + t3696;
  t3238 = -0.930418*t3234;
  t3239 = 0. + t3238;
  t3731 = t3698*t3096;
  t3738 = t3677*t3152;
  t3740 = t3731 + t3738;
  t3719 = t2261*t3677;
  t3720 = -0.340999127418*t728*t3698;
  t3724 = t3719 + t3720;
  t3683 = -0.340999127418*t728*t3677;
  t3702 = t2937*t3698;
  t3705 = t3683 + t3702;
  t3345 = -0.8656776547239999*t576;
  t3370 = 1. + t3345;
  t3472 = -0.134322983001*t576;
  t3490 = 1. + t3472;
  t3708 = t2896*t3705;
  t3728 = 0.340999127418*t665*t3724;
  t3742 = t3740*t3212;
  t3743 = t3708 + t3728 + t3742;
  t3503 = 0.366501*t3234;
  t3508 = 0. + t3503;
  t3749 = t3247*t3740;
  t3751 = t3724*t3290;
  t3753 = t3705*t3312;
  t3755 = t3749 + t3751 + t3753;
  t3758 = 0.340999127418*t665*t3705;
  t3759 = t3381*t3724;
  t3767 = t3740*t3417;
  t3768 = t3758 + t3759 + t3767;
  t3567 = -0.366501*t3234;
  t3569 = 0. + t3567;
  t3584 = -1.000000637725*t576;
  t3590 = 1. + t3584;
  t3608 = 0.930418*t3234;
  t3617 = 0. + t3608;
  t3822 = t1299*t3632;
  t3825 = -1.*t744*t2525*t1178;
  t3828 = t3822 + t3825;
  t3829 = t896*t3828;
  t3833 = t3667*t1410;
  t3834 = t3829 + t3833;
  t3838 = t896*t3667;
  t3852 = -1.*t3828*t1410;
  t3855 = t3838 + t3852;
  t3883 = t3855*t3096;
  t3886 = t3834*t3152;
  t3890 = t3883 + t3886;
  t3862 = t2261*t3834;
  t3863 = -0.340999127418*t728*t3855;
  t3865 = t3862 + t3863;
  t3837 = -0.340999127418*t728*t3834;
  t3857 = t2937*t3855;
  t3858 = t3837 + t3857;
  t3861 = t2896*t3858;
  t3874 = 0.340999127418*t665*t3865;
  t3891 = t3890*t3212;
  t3892 = t3861 + t3874 + t3891;
  t3897 = t3247*t3890;
  t3898 = t3865*t3290;
  t3907 = t3858*t3312;
  t3919 = t3897 + t3898 + t3907;
  t3925 = 0.340999127418*t665*t3858;
  t3926 = t3381*t3865;
  t3927 = t3890*t3417;
  t3928 = t3925 + t3926 + t3927;
  t3996 = t3651*t1410;
  t3998 = t3838 + t3996;
  t4040 = t744*t751*t3062;
  t4044 = t3677*t3096;
  t4050 = t3998*t3152;
  t4051 = t4040 + t4044 + t4050;
  t4003 = t2261*t3998;
  t4007 = t744*t751*t2691;
  t4009 = t3683 + t4003 + t4007;
  t4024 = t2937*t3677;
  t4026 = -0.340999127418*t728*t3998;
  t4028 = t744*t751*t3029;
  t4033 = t4024 + t4026 + t4028;
  t4017 = 0.340999127418*t665*t4009;
  t4034 = t2896*t4033;
  t4054 = t4051*t3212;
  t4060 = t4017 + t4034 + t4054;
  t4070 = t3247*t4051;
  t4071 = t4009*t3290;
  t4086 = t4033*t3312;
  t4087 = t4070 + t4071 + t4086;
  t4110 = t3381*t4009;
  t4122 = 0.340999127418*t665*t4033;
  t4134 = t4051*t3417;
  t4142 = t4110 + t4122 + t4134;
  t4232 = -1.*t1299*t3632*t2525;
  t4234 = t744*t1178;
  t4235 = t4232 + t4234;
  t4227 = -1.*t744*t1299;
  t4228 = -1.*t3632*t2525*t1178;
  t4229 = t4227 + t4228;
  t4230 = t896*t4229;
  t4243 = -1.*t4235*t1410;
  t4246 = t4230 + t4243;
  t4249 = t896*t4235;
  t4251 = t4229*t1410;
  t4259 = t4249 + t4251;
  t4312 = -1.*t751*t3062*t3632;
  t4318 = t4246*t3096;
  t4320 = t4259*t3152;
  t4326 = t4312 + t4318 + t4320;
  t4248 = -0.340999127418*t728*t4246;
  t4261 = t2261*t4259;
  t4263 = -1.*t751*t3632*t2691;
  t4270 = t4248 + t4261 + t4263;
  t4274 = t2937*t4246;
  t4283 = -0.340999127418*t728*t4259;
  t4289 = -1.*t751*t3632*t3029;
  t4290 = t4274 + t4283 + t4289;
  t4273 = 0.340999127418*t665*t4270;
  t4297 = t2896*t4290;
  t4327 = t4326*t3212;
  t4335 = t4273 + t4297 + t4327;
  t4346 = t3247*t4326;
  t4347 = t4270*t3290;
  t4351 = t4290*t3312;
  t4373 = t4346 + t4347 + t4351;
  t4390 = t3381*t4270;
  t4407 = 0.340999127418*t665*t4290;
  t4409 = t4326*t3417;
  t4411 = t4390 + t4407 + t4409;
  t4540 = -0.930418*t709*t3677;
  t4542 = -0.366501*t709*t3998;
  t4544 = -1.000000637725*t744*t751*t2641;
  t4555 = t4540 + t4542 + t4544;
  t4522 = 0.366501*t744*t751*t709;
  t4524 = -0.340999127418*t3677*t2641;
  t4527 = -0.134322983001*t3998*t2641;
  t4528 = t4522 + t4524 + t4527;
  t4484 = 0.930418*t744*t751*t709;
  t4493 = -0.8656776547239999*t3677*t2641;
  t4497 = -0.340999127418*t3998*t2641;
  t4505 = t4484 + t4493 + t4497;
  t4511 = t2896*t4505;
  t4532 = 0.340999127418*t665*t4528;
  t4569 = t4555*t3212;
  t4580 = t4511 + t4532 + t4569;
  t4596 = t3247*t4555;
  t4603 = t4528*t3290;
  t4608 = t4505*t3312;
  t4610 = t4596 + t4603 + t4608;
  t4618 = 0.340999127418*t665*t4505;
  t4621 = t3381*t4528;
  t4626 = t4555*t3417;
  t4654 = t4618 + t4621 + t4626;
  t4768 = -0.930418*t636*t4009;
  t4783 = 0.366501*t636*t4033;
  t4785 = -1.000000637725*t4051*t3185;
  t4787 = t4768 + t4783 + t4785;
  t4806 = -0.366501*t636*t4051;
  t4815 = 0.340999127418*t4009*t3185;
  t4833 = -0.134322983001*t4033*t3185;
  t4835 = t4806 + t4815 + t4833;
  t4856 = 0.930418*t636*t4051;
  t4874 = -0.8656776547239999*t4009*t3185;
  t4875 = 0.340999127418*t4033*t3185;
  t4876 = t4856 + t4874 + t4875;
  t4950 = t751*t896*t3632*t1178;
  t4960 = -1.*t751*t1299*t3632*t1410;
  t4966 = t4950 + t4960;
  t4969 = t751*t1299*t896*t3632;
  t4971 = t751*t3632*t1178*t1410;
  t4977 = t4969 + t4971;
  t5035 = -1.*t3062*t3632*t2525;
  t5042 = t4966*t3096;
  t5044 = t4977*t3152;
  t5048 = t5035 + t5042 + t5044;
  t4967 = -0.340999127418*t728*t4966;
  t4978 = t2261*t4977;
  t4982 = -1.*t3632*t2525*t2691;
  t4990 = t4967 + t4978 + t4982;
  t5011 = t2937*t4966;
  t5017 = -0.340999127418*t728*t4977;
  t5021 = -1.*t3632*t2525*t3029;
  t5022 = t5011 + t5017 + t5021;
  t4996 = 0.340999127418*t665*t4990;
  t5034 = t2896*t5022;
  t5052 = t5048*t3212;
  t5069 = t4996 + t5034 + t5052;
  t5082 = t3247*t5048;
  t5117 = t4990*t3290;
  t5125 = t5022*t3312;
  t5132 = t5082 + t5117 + t5125;
  t5147 = t3381*t4990;
  t5161 = 0.340999127418*t665*t5022;
  t5162 = t5048*t3417;
  t5166 = t5147 + t5161 + t5162;
  t5264 = t1299*t3632*t2525;
  t5270 = -1.*t744*t1178;
  t5271 = t5264 + t5270;
  t5251 = t744*t1299;
  t5252 = t3632*t2525*t1178;
  t5254 = t5251 + t5252;
  t5262 = t896*t5254;
  t5273 = -1.*t5271*t1410;
  t5276 = t5262 + t5273;
  t5282 = -1.*t896*t5271;
  t5288 = -1.*t5254*t1410;
  t5290 = t5282 + t5288;
  t5313 = t5290*t3096;
  t5324 = t5276*t3152;
  t5332 = t5313 + t5324;
  t5297 = t2261*t5276;
  t5302 = -0.340999127418*t728*t5290;
  t5306 = t5297 + t5302;
  t5279 = -0.340999127418*t728*t5276;
  t5294 = t2937*t5290;
  t5295 = t5279 + t5294;
  t5296 = t2896*t5295;
  t5307 = 0.340999127418*t665*t5306;
  t5333 = t5332*t3212;
  t5341 = t5296 + t5307 + t5333;
  t5358 = t3247*t5332;
  t5364 = t5306*t3290;
  t5370 = t5295*t3312;
  t5371 = t5358 + t5364 + t5370;
  t5380 = 0.340999127418*t665*t5295;
  t5389 = t3381*t5306;
  t5390 = t5332*t3417;
  t5391 = t5380 + t5389 + t5390;
  t5471 = t5271*t1410;
  t5481 = t4230 + t5471;
  t5488 = t896*t5271;
  t5492 = -1.*t4229*t1410;
  t5511 = t5488 + t5492;
  t5544 = t5511*t3096;
  t5578 = t5481*t3152;
  t5580 = t5544 + t5578;
  t5521 = t2261*t5481;
  t5533 = -0.340999127418*t728*t5511;
  t5536 = t5521 + t5533;
  t5487 = -0.340999127418*t728*t5481;
  t5517 = t2937*t5511;
  t5518 = t5487 + t5517;
  t5520 = t2896*t5518;
  t5539 = 0.340999127418*t665*t5536;
  t5581 = t5580*t3212;
  t5583 = t5520 + t5539 + t5581;
  t5599 = t3247*t5580;
  t5603 = t5536*t3290;
  t5608 = t5518*t3312;
  t5611 = t5599 + t5603 + t5608;
  t5628 = 0.340999127418*t665*t5518;
  t5632 = t3381*t5536;
  t5637 = t5580*t3417;
  t5639 = t5628 + t5632 + t5637;
  t5924 = t5254*t1410;
  t5927 = t5488 + t5924;
  t6004 = t751*t3062*t3632;
  t6005 = t5276*t3096;
  t6007 = t5927*t3152;
  t6008 = t6004 + t6005 + t6007;
  t5932 = t2261*t5927;
  t5933 = t751*t3632*t2691;
  t5946 = t5279 + t5932 + t5933;
  t5961 = t2937*t5276;
  t5963 = -0.340999127418*t728*t5927;
  t5984 = t751*t3632*t3029;
  t5995 = t5961 + t5963 + t5984;
  t5947 = 0.340999127418*t665*t5946;
  t5998 = t2896*t5995;
  t6014 = t6008*t3212;
  t6019 = t5947 + t5998 + t6014;
  t6023 = t3247*t6008;
  t6024 = t5946*t3290;
  t6054 = t5995*t3312;
  t6063 = t6023 + t6024 + t6054;
  t6076 = t3381*t5946;
  t6081 = 0.340999127418*t665*t5995;
  t6083 = t6008*t3417;
  t6087 = t6076 + t6081 + t6083;
  t6260 = -0.930418*t709*t5276;
  t6263 = -0.366501*t709*t5927;
  t6332 = -1.000000637725*t751*t3632*t2641;
  t6334 = t6260 + t6263 + t6332;
  t6212 = 0.366501*t751*t709*t3632;
  t6219 = -0.340999127418*t5276*t2641;
  t6220 = -0.134322983001*t5927*t2641;
  t6251 = t6212 + t6219 + t6220;
  t6164 = 0.930418*t751*t709*t3632;
  t6169 = -0.8656776547239999*t5276*t2641;
  t6173 = -0.340999127418*t5927*t2641;
  t6198 = t6164 + t6169 + t6173;
  t6211 = t2896*t6198;
  t6253 = 0.340999127418*t665*t6251;
  t6348 = t6334*t3212;
  t6359 = t6211 + t6253 + t6348;
  t6375 = t3247*t6334;
  t6377 = t6251*t3290;
  t6387 = t6198*t3312;
  t6403 = t6375 + t6377 + t6387;
  t6413 = 0.340999127418*t665*t6198;
  t6423 = t3381*t6251;
  t6428 = t6334*t3417;
  t6430 = t6413 + t6423 + t6428;
  t6504 = -0.930418*t636*t5946;
  t6509 = 0.366501*t636*t5995;
  t6513 = -1.000000637725*t6008*t3185;
  t6514 = t6504 + t6509 + t6513;
  t6528 = -0.366501*t636*t6008;
  t6538 = 0.340999127418*t5946*t3185;
  t6539 = -0.134322983001*t5995*t3185;
  t6540 = t6528 + t6538 + t6539;
  t6568 = 0.930418*t636*t6008;
  t6580 = -0.8656776547239999*t5946*t3185;
  t6605 = 0.340999127418*t5995*t3185;
  t6606 = t6568 + t6580 + t6605;
  t6789 = t751*t896*t1178;
  t6792 = -1.*t751*t1299*t1410;
  t6815 = t6789 + t6792;
  t6833 = -1.*t751*t1299*t896;
  t6843 = -1.*t751*t1178*t1410;
  t6844 = t6833 + t6843;
  t6883 = t6844*t3096;
  t6884 = t6815*t3152;
  t6895 = t6883 + t6884;
  t6868 = t2261*t6815;
  t6870 = -0.340999127418*t728*t6844;
  t6875 = t6868 + t6870;
  t6828 = -0.340999127418*t728*t6815;
  t6857 = t2937*t6844;
  t6861 = t6828 + t6857;
  t6864 = t2896*t6861;
  t6879 = 0.340999127418*t665*t6875;
  t6906 = t6895*t3212;
  t6922 = t6864 + t6879 + t6906;
  t6929 = t3247*t6895;
  t6938 = t6875*t3290;
  t6941 = t6861*t3312;
  t6944 = t6929 + t6938 + t6941;
  t6958 = 0.340999127418*t665*t6861;
  t6960 = t3381*t6875;
  t6973 = t6895*t3417;
  t6976 = t6958 + t6960 + t6973;
  t7052 = -1.*t751*t896*t1178;
  t7053 = t751*t1299*t1410;
  t7055 = t7052 + t7053;
  t7076 = t751*t1299*t896;
  t7077 = t751*t1178*t1410;
  t7079 = t7076 + t7077;
  t7143 = t7079*t3096;
  t7146 = t7055*t3152;
  t7168 = t7143 + t7146;
  t7101 = t2261*t7055;
  t7109 = -0.340999127418*t728*t7079;
  t7128 = t7101 + t7109;
  t7064 = -0.340999127418*t728*t7055;
  t7083 = t2937*t7079;
  t7093 = t7064 + t7083;
  t7099 = t2896*t7093;
  t7139 = 0.340999127418*t665*t7128;
  t7176 = t7168*t3212;
  t7179 = t7099 + t7139 + t7176;
  t7201 = t3247*t7168;
  t7205 = t7128*t3290;
  t7213 = t7093*t3312;
  t7217 = t7201 + t7205 + t7213;
  t7225 = 0.340999127418*t665*t7093;
  t7231 = t3381*t7128;
  t7245 = t7168*t3417;
  t7262 = t7225 + t7231 + t7245;
  t7413 = -1.*t3062*t2525;
  t7419 = t6815*t3096;
  t7420 = t7079*t3152;
  t7434 = t7413 + t7419 + t7420;
  t7368 = t2261*t7079;
  t7375 = -1.*t2525*t2691;
  t7377 = t6828 + t7368 + t7375;
  t7380 = t2937*t6815;
  t7382 = -1.*t2525*t3029;
  t7402 = t7380 + t7109 + t7382;
  t7379 = 0.340999127418*t665*t7377;
  t7405 = t2896*t7402;
  t7438 = t7434*t3212;
  t7442 = t7379 + t7405 + t7438;
  t7461 = t3247*t7434;
  t7463 = t7377*t3290;
  t7464 = t7402*t3312;
  t7466 = t7461 + t7463 + t7464;
  t7470 = t3381*t7377;
  t7483 = 0.340999127418*t665*t7402;
  t7484 = t7434*t3417;
  t7486 = t7470 + t7483 + t7484;
  t7580 = -1.*t896*t2525*t1178;
  t7581 = t1299*t2525*t1410;
  t7586 = t7580 + t7581;
  t7590 = -1.*t1299*t896*t2525;
  t7594 = -1.*t2525*t1178*t1410;
  t7597 = t7590 + t7594;
  t7658 = -1.*t751*t3062;
  t7662 = t7586*t3096;
  t7666 = t7597*t3152;
  t7669 = t7658 + t7662 + t7666;
  t7589 = -0.340999127418*t728*t7586;
  t7599 = t2261*t7597;
  t7609 = -1.*t751*t2691;
  t7614 = t7589 + t7599 + t7609;
  t7633 = t2937*t7586;
  t7637 = -0.340999127418*t728*t7597;
  t7648 = -1.*t751*t3029;
  t7653 = t7633 + t7637 + t7648;
  t7632 = 0.340999127418*t665*t7614;
  t7657 = t2896*t7653;
  t7673 = t7669*t3212;
  t7689 = t7632 + t7657 + t7673;
  t7694 = t3247*t7669;
  t7699 = t7614*t3290;
  t7705 = t7653*t3312;
  t7707 = t7694 + t7699 + t7705;
  t7719 = t3381*t7614;
  t7727 = 0.340999127418*t665*t7653;
  t7737 = t7669*t3417;
  t7740 = t7719 + t7727 + t7737;
  t7841 = -0.930418*t709*t6815;
  t7842 = -0.366501*t709*t7079;
  t7845 = 1.000000637725*t2525*t2641;
  t7853 = t7841 + t7842 + t7845;
  t7827 = -0.366501*t709*t2525;
  t7831 = -0.340999127418*t6815*t2641;
  t7832 = -0.134322983001*t7079*t2641;
  t7836 = t7827 + t7831 + t7832;
  t7793 = -0.930418*t709*t2525;
  t7794 = -0.8656776547239999*t6815*t2641;
  t7810 = -0.340999127418*t7079*t2641;
  t7813 = t7793 + t7794 + t7810;
  t7825 = t2896*t7813;
  t7837 = 0.340999127418*t665*t7836;
  t7855 = t7853*t3212;
  t7858 = t7825 + t7837 + t7855;
  t7861 = t3247*t7853;
  t7864 = t7836*t3290;
  t7866 = t7813*t3312;
  t7871 = t7861 + t7864 + t7866;
  t7876 = 0.340999127418*t665*t7813;
  t7880 = t3381*t7836;
  t7893 = t7853*t3417;
  t7897 = t7876 + t7880 + t7893;
  t7950 = -0.930418*t636*t7377;
  t7951 = 0.366501*t636*t7402;
  t7965 = -1.000000637725*t7434*t3185;
  t7967 = t7950 + t7951 + t7965;
  t7987 = -0.366501*t636*t7434;
  t7989 = 0.340999127418*t7377*t3185;
  t7991 = -0.134322983001*t7402*t3185;
  t7996 = t7987 + t7989 + t7991;
  t8009 = 0.930418*t636*t7434;
  t8014 = -0.8656776547239999*t7377*t3185;
  t8016 = 0.340999127418*t7402*t3185;
  t8020 = t8009 + t8014 + t8016;
  t3233 = 0.340999127418*t576*t3222;
  t3336 = t3239*t3334;
  t3428 = t3370*t3425;
  t3441 = t3233 + t3336 + t3428;
  t3465 = -0.657905*t3441;
  t3496 = t3490*t3222;
  t3510 = t3508*t3334;
  t3512 = 0.340999127418*t576*t3425;
  t3546 = t3496 + t3510 + t3512;
  t3560 = 0.259155*t3546;
  t3575 = t3569*t3222;
  t3593 = t3590*t3334;
  t3619 = t3617*t3425;
  t3620 = t3575 + t3593 + t3619;
  t3745 = 0.340999127418*t576*t3743;
  t3756 = t3239*t3755;
  t3773 = t3370*t3768;
  t3777 = t3745 + t3756 + t3773;
  t3780 = -0.657905*t3777;
  t3788 = t3490*t3743;
  t3793 = t3508*t3755;
  t3794 = 0.340999127418*t576*t3768;
  t3795 = t3788 + t3793 + t3794;
  t3797 = 0.259155*t3795;
  t3798 = t3569*t3743;
  t3801 = t3590*t3755;
  t3805 = t3617*t3768;
  t3814 = t3798 + t3801 + t3805;
  t3894 = 0.340999127418*t576*t3892;
  t3924 = t3239*t3919;
  t3934 = t3370*t3928;
  t3948 = t3894 + t3924 + t3934;
  t3955 = -0.657905*t3948;
  t3956 = t3490*t3892;
  t3957 = t3508*t3919;
  t3961 = 0.340999127418*t576*t3928;
  t3962 = t3956 + t3957 + t3961;
  t3963 = 0.259155*t3962;
  t3971 = t3569*t3892;
  t3973 = t3590*t3919;
  t3982 = t3617*t3928;
  t3987 = t3971 + t3973 + t3982;
  t4062 = -0.366501*t506*t4060;
  t4100 = -1.000000637725*t3234*t4087;
  t4143 = 0.930418*t506*t4142;
  t4157 = t4062 + t4100 + t4143;
  t4162 = 0.340999127418*t3234*t4060;
  t4172 = -0.930418*t506*t4087;
  t4174 = -0.8656776547239999*t3234*t4142;
  t4180 = t4162 + t4172 + t4174;
  t4190 = -0.657905*t4180;
  t4198 = -0.134322983001*t3234*t4060;
  t4203 = 0.366501*t506*t4087;
  t4220 = 0.340999127418*t3234*t4142;
  t4221 = t4198 + t4203 + t4220;
  t4222 = 0.259155*t4221;
  t4336 = 0.340999127418*t576*t4335;
  t4384 = t3239*t4373;
  t4417 = t3370*t4411;
  t4419 = t4336 + t4384 + t4417;
  t4424 = -0.657905*t4419;
  t4430 = t3490*t4335;
  t4431 = t3508*t4373;
  t4433 = 0.340999127418*t576*t4411;
  t4447 = t4430 + t4431 + t4433;
  t4449 = 0.259155*t4447;
  t4455 = t3569*t4335;
  t4458 = t3590*t4373;
  t4461 = t3617*t4411;
  t4466 = t4455 + t4458 + t4461;
  t4583 = 0.340999127418*t576*t4580;
  t4611 = t3239*t4610;
  t4664 = t3370*t4654;
  t4674 = t4583 + t4611 + t4664;
  t4680 = -0.657905*t4674;
  t4712 = t3490*t4580;
  t4715 = t3508*t4610;
  t4718 = 0.340999127418*t576*t4654;
  t4719 = t4712 + t4715 + t4718;
  t4724 = 0.259155*t4719;
  t4726 = t3569*t4580;
  t4745 = t3590*t4610;
  t4758 = t3617*t4654;
  t4759 = t4726 + t4745 + t4758;
  t4795 = t3239*t4787;
  t4837 = 0.340999127418*t576*t4835;
  t4882 = t3370*t4876;
  t4889 = t4795 + t4837 + t4882;
  t4893 = -0.657905*t4889;
  t4894 = t3508*t4787;
  t4902 = t3490*t4835;
  t4909 = 0.340999127418*t576*t4876;
  t4913 = t4894 + t4902 + t4909;
  t4914 = 0.259155*t4913;
  t4926 = t3590*t4787;
  t4928 = t3569*t4835;
  t4935 = t3617*t4876;
  t4936 = t4926 + t4928 + t4935;
  t5080 = 0.340999127418*t576*t5069;
  t5144 = t3239*t5132;
  t5168 = t3370*t5166;
  t5184 = t5080 + t5144 + t5168;
  t5187 = -0.657905*t5184;
  t5189 = t3490*t5069;
  t5203 = t3508*t5132;
  t5208 = 0.340999127418*t576*t5166;
  t5210 = t5189 + t5203 + t5208;
  t5211 = 0.259155*t5210;
  t5215 = t3569*t5069;
  t5221 = t3590*t5132;
  t5227 = t3617*t5166;
  t5229 = t5215 + t5221 + t5227;
  t5348 = 0.340999127418*t576*t5341;
  t5374 = t3239*t5371;
  t5400 = t3370*t5391;
  t5402 = t5348 + t5374 + t5400;
  t5405 = -0.657905*t5402;
  t5409 = t3490*t5341;
  t5418 = t3508*t5371;
  t5419 = 0.340999127418*t576*t5391;
  t5431 = t5409 + t5418 + t5419;
  t5433 = 0.259155*t5431;
  t5453 = t3569*t5341;
  t5458 = t3590*t5371;
  t5464 = t3617*t5391;
  t5466 = t5453 + t5458 + t5464;
  t5596 = 0.340999127418*t576*t5583;
  t5617 = t3239*t5611;
  t5649 = t3370*t5639;
  t5652 = t5596 + t5617 + t5649;
  t5654 = -0.657905*t5652;
  t5657 = t3490*t5583;
  t5674 = t3508*t5611;
  t5677 = 0.340999127418*t576*t5639;
  t5683 = t5657 + t5674 + t5677;
  t5689 = 0.259155*t5683;
  t5693 = t3569*t5583;
  t5699 = t3590*t5611;
  t5704 = t3617*t5639;
  t5715 = t5693 + t5699 + t5704;
  t5737 = 0.340999127418*t576*t4060;
  t5744 = t3239*t4087;
  t5745 = t3370*t4142;
  t5748 = t5737 + t5744 + t5745;
  t5762 = -0.657905*t5748;
  t5768 = t3490*t4060;
  t5769 = t3508*t4087;
  t5780 = 0.340999127418*t576*t4142;
  t5781 = t5768 + t5769 + t5780;
  t5794 = 0.259155*t5781;
  t5810 = t3569*t4060;
  t5842 = t3590*t4087;
  t5843 = t3617*t4142;
  t5853 = t5810 + t5842 + t5843;
  t6020 = -0.366501*t506*t6019;
  t6064 = -1.000000637725*t3234*t6063;
  t6090 = 0.930418*t506*t6087;
  t6099 = t6020 + t6064 + t6090;
  t6103 = 0.340999127418*t3234*t6019;
  t6110 = -0.930418*t506*t6063;
  t6114 = -0.8656776547239999*t3234*t6087;
  t6116 = t6103 + t6110 + t6114;
  t6119 = -0.657905*t6116;
  t6124 = -0.134322983001*t3234*t6019;
  t6141 = 0.366501*t506*t6063;
  t6144 = 0.340999127418*t3234*t6087;
  t6150 = t6124 + t6141 + t6144;
  t6157 = 0.259155*t6150;
  t6364 = 0.340999127418*t576*t6359;
  t6412 = t3239*t6403;
  t6436 = t3370*t6430;
  t6440 = t6364 + t6412 + t6436;
  t6450 = -0.657905*t6440;
  t6455 = t3490*t6359;
  t6456 = t3508*t6403;
  t6458 = 0.340999127418*t576*t6430;
  t6460 = t6455 + t6456 + t6458;
  t6465 = 0.259155*t6460;
  t6476 = t3569*t6359;
  t6480 = t3590*t6403;
  t6481 = t3617*t6430;
  t6487 = t6476 + t6480 + t6481;
  t6516 = t3239*t6514;
  t6541 = 0.340999127418*t576*t6540;
  t6622 = t3370*t6606;
  t6629 = t6516 + t6541 + t6622;
  t6643 = -0.657905*t6629;
  t6667 = t3508*t6514;
  t6677 = t3490*t6540;
  t6687 = 0.340999127418*t576*t6606;
  t6690 = t6667 + t6677 + t6687;
  t6700 = 0.259155*t6690;
  t6712 = t3590*t6514;
  t6717 = t3569*t6540;
  t6728 = t3617*t6606;
  t6746 = t6712 + t6717 + t6728;
  t6924 = 0.340999127418*t576*t6922;
  t6954 = t3239*t6944;
  t6979 = t3370*t6976;
  t6995 = t6924 + t6954 + t6979;
  t6996 = -0.657905*t6995;
  t7008 = t3490*t6922;
  t7022 = t3508*t6944;
  t7026 = 0.340999127418*t576*t6976;
  t7030 = t7008 + t7022 + t7026;
  t7033 = 0.259155*t7030;
  t7034 = t3569*t6922;
  t7035 = t3590*t6944;
  t7037 = t3617*t6976;
  t7038 = t7034 + t7035 + t7037;
  t7198 = 0.340999127418*t576*t7179;
  t7222 = t3239*t7217;
  t7263 = t3370*t7262;
  t7276 = t7198 + t7222 + t7263;
  t7281 = -0.657905*t7276;
  t7284 = t3490*t7179;
  t7296 = t3508*t7217;
  t7297 = 0.340999127418*t576*t7262;
  t7306 = t7284 + t7296 + t7297;
  t7329 = 0.259155*t7306;
  t7334 = t3569*t7179;
  t7343 = t3590*t7217;
  t7352 = t3617*t7262;
  t7355 = t7334 + t7343 + t7352;
  t7458 = -0.366501*t506*t7442;
  t7469 = -1.000000637725*t3234*t7466;
  t7489 = 0.930418*t506*t7486;
  t7494 = t7458 + t7469 + t7489;
  t7510 = 0.340999127418*t3234*t7442;
  t7512 = -0.930418*t506*t7466;
  t7517 = -0.8656776547239999*t3234*t7486;
  t7524 = t7510 + t7512 + t7517;
  t7525 = -0.657905*t7524;
  t7532 = -0.134322983001*t3234*t7442;
  t7533 = 0.366501*t506*t7466;
  t7540 = 0.340999127418*t3234*t7486;
  t7542 = t7532 + t7533 + t7540;
  t7545 = 0.259155*t7542;
  t7692 = 0.340999127418*t576*t7689;
  t7717 = t3239*t7707;
  t7741 = t3370*t7740;
  t7743 = t7692 + t7717 + t7741;
  t7744 = -0.657905*t7743;
  t7754 = t3490*t7689;
  t7756 = t3508*t7707;
  t7757 = 0.340999127418*t576*t7740;
  t7758 = t7754 + t7756 + t7757;
  t7762 = 0.259155*t7758;
  t7772 = t3569*t7689;
  t7773 = t3590*t7707;
  t7774 = t3617*t7740;
  t7776 = t7772 + t7773 + t7774;
  t7860 = 0.340999127418*t576*t7858;
  t7873 = t3239*t7871;
  t7898 = t3370*t7897;
  t7899 = t7860 + t7873 + t7898;
  t7901 = -0.657905*t7899;
  t7903 = t3490*t7858;
  t7907 = t3508*t7871;
  t7910 = 0.340999127418*t576*t7897;
  t7914 = t7903 + t7907 + t7910;
  t7915 = 0.259155*t7914;
  t7917 = t3569*t7858;
  t7918 = t3590*t7871;
  t7919 = t3617*t7897;
  t7921 = t7917 + t7918 + t7919;
  t7969 = t3239*t7967;
  t8007 = 0.340999127418*t576*t7996;
  t8024 = t3370*t8020;
  t8026 = t7969 + t8007 + t8024;
  t8032 = -0.657905*t8026;
  t8044 = t3508*t7967;
  t8048 = t3490*t7996;
  t8051 = 0.340999127418*t576*t8020;
  t8054 = t8044 + t8048 + t8051;
  t8062 = 0.259155*t8054;
  t8065 = t3590*t7967;
  t8068 = t3569*t7996;
  t8071 = t3617*t8020;
  t8074 = t8065 + t8068 + t8071;
  p_output1[0]=(t4424 + t4449 - 0.707107*t4466)*var2[3] + (t3465 + t3560 - 0.707107*t3620)*var2[4] + (t3955 + t3963 - 0.707107*t3987)*var2[5] + (t3780 + t3797 - 0.707107*t3814)*var2[6] + (t4680 + t4724 - 0.707107*t4759)*var2[7] + (t4893 + t4914 - 0.707107*t4936)*var2[8] + (-0.707107*t4157 + t4190 + t4222)*var2[9];
  p_output1[1]=(t5762 + t5794 - 0.707107*t5853)*var2[3] + (t5187 + t5211 - 0.707107*t5229)*var2[4] + (t5654 + t5689 - 0.707107*t5715)*var2[5] + (t5405 + t5433 - 0.707107*t5466)*var2[6] + (t6450 + t6465 - 0.707107*t6487)*var2[7] + (t6643 + t6700 - 0.707107*t6746)*var2[8] + (-0.707107*t6099 + t6119 + t6157)*var2[9];
  p_output1[2]=(t7744 + t7762 - 0.707107*t7776)*var2[4] + (t7281 + t7329 - 0.707107*t7355)*var2[5] + (t6996 + t7033 - 0.707107*t7038)*var2[6] + (t7901 + t7915 - 0.707107*t7921)*var2[7] + (t8032 + t8062 - 0.707107*t8074)*var2[8] + (-0.707107*t7494 + t7525 + t7545)*var2[9];
  p_output1[3]=(t4424 + t4449 + 0.707107*t4466)*var2[3] + (t3465 + t3560 + 0.707107*t3620)*var2[4] + (t3955 + t3963 + 0.707107*t3987)*var2[5] + (t3780 + t3797 + 0.707107*t3814)*var2[6] + (t4680 + t4724 + 0.707107*t4759)*var2[7] + (t4893 + t4914 + 0.707107*t4936)*var2[8] + (0.707107*t4157 + t4190 + t4222)*var2[9];
  p_output1[4]=(t5762 + t5794 + 0.707107*t5853)*var2[3] + (t5187 + t5211 + 0.707107*t5229)*var2[4] + (t5654 + t5689 + 0.707107*t5715)*var2[5] + (t5405 + t5433 + 0.707107*t5466)*var2[6] + (t6450 + t6465 + 0.707107*t6487)*var2[7] + (t6643 + t6700 + 0.707107*t6746)*var2[8] + (0.707107*t6099 + t6119 + t6157)*var2[9];
  p_output1[5]=(t7744 + t7762 + 0.707107*t7776)*var2[4] + (t7281 + t7329 + 0.707107*t7355)*var2[5] + (t6996 + t7033 + 0.707107*t7038)*var2[6] + (t7901 + t7915 + 0.707107*t7921)*var2[7] + (t8032 + t8062 + 0.707107*t8074)*var2[8] + (0.707107*t7494 + t7525 + t7545)*var2[9];
  p_output1[6]=(-0.366501*t4419 - 0.930418*t4447)*var2[3] + (-0.366501*t3441 - 0.930418*t3546)*var2[4] + (-0.366501*t3948 - 0.930418*t3962)*var2[5] + (-0.366501*t3777 - 0.930418*t3795)*var2[6] + (-0.366501*t4674 - 0.930418*t4719)*var2[7] + (-0.366501*t4889 - 0.930418*t4913)*var2[8] + (-0.366501*t4180 - 0.930418*t4221)*var2[9];
  p_output1[7]=(-0.366501*t5748 - 0.930418*t5781)*var2[3] + (-0.366501*t5184 - 0.930418*t5210)*var2[4] + (-0.366501*t5652 - 0.930418*t5683)*var2[5] + (-0.366501*t5402 - 0.930418*t5431)*var2[6] + (-0.366501*t6440 - 0.930418*t6460)*var2[7] + (-0.366501*t6629 - 0.930418*t6690)*var2[8] + (-0.366501*t6116 - 0.930418*t6150)*var2[9];
  p_output1[8]=(-0.366501*t7743 - 0.930418*t7758)*var2[4] + (-0.366501*t7276 - 0.930418*t7306)*var2[5] + (-0.366501*t6995 - 0.930418*t7030)*var2[6] + (-0.366501*t7899 - 0.930418*t7914)*var2[7] + (-0.366501*t8026 - 0.930418*t8054)*var2[8] + (-0.366501*t7524 - 0.930418*t7542)*var2[9];
}



void dR_knee_joint_left_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
