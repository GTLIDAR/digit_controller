/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:35:24 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "p_toe_pitch_joint_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t646;
  double t553;
  double t654;
  double t610;
  double t673;
  double t1061;
  double t34;
  double t794;
  double t817;
  double t825;
  double t633;
  double t758;
  double t759;
  double t839;
  double t1027;
  double t1035;
  double t1045;
  double t2416;
  double t2439;
  double t2440;
  double t1994;
  double t2010;
  double t2034;
  double t994;
  double t2122;
  double t2152;
  double t2795;
  double t2828;
  double t2853;
  double t2695;
  double t2705;
  double t1165;
  double t1388;
  double t1552;
  double t1729;
  double t3044;
  double t3048;
  double t3076;
  double t3077;
  double t3087;
  double t3106;
  double t2868;
  double t2893;
  double t2903;
  double t2906;
  double t2920;
  double t2921;
  double t3109;
  double t2976;
  double t2977;
  double t2984;
  double t3025;
  double t3026;
  double t3035;
  double t2771;
  double t2788;
  double t2789;
  double t2764;
  double t2955;
  double t2966;
  double t2971;
  double t3042;
  double t3111;
  double t3116;
  double t3124;
  double t3128;
  double t3154;
  double t3174;
  double t3177;
  double t3185;
  double t3187;
  double t3223;
  double t3227;
  double t3232;
  double t3235;
  double t3239;
  double t3241;
  double t3261;
  double t3273;
  double t3283;
  double t3291;
  double t3306;
  double t3309;
  double t3349;
  double t3350;
  double t3449;
  double t3454;
  double t3468;
  double t3133;
  double t3157;
  double t3158;
  double t3242;
  double t3246;
  double t3247;
  double t3354;
  double t3362;
  double t3400;
  double t3402;
  double t3405;
  double t3428;
  double t3430;
  double t3432;
  double t3435;
  double t3437;
  double t3471;
  double t3479;
  double t3480;
  double t3481;
  double t3485;
  double t3494;
  double t3495;
  double t3506;
  double t3507;
  double t3518;
  double t3532;
  double t3537;
  double t3539;
  double t2753;
  double t2765;
  double t2770;
  double t3367;
  double t3372;
  double t3377;
  double t3448;
  double t3469;
  double t3470;
  double t3519;
  double t3521;
  double t3556;
  double t3557;
  double t3562;
  double t3563;
  double t3576;
  double t3581;
  double t3582;
  double t3583;
  double t3604;
  double t3609;
  double t3611;
  double t3623;
  double t3624;
  double t3628;
  double t3636;
  double t3637;
  double t3704;
  double t3713;
  double t3697;
  double t3699;
  double t3647;
  double t3648;
  double t2759;
  double t2761;
  double t84;
  double t357;
  double t401;
  double t411;
  double t854;
  double t950;
  double t1050;
  double t1481;
  double t1748;
  double t1823;
  double t4016;
  double t4020;
  double t4022;
  double t4006;
  double t4007;
  double t4009;
  double t2046;
  double t2083;
  double t2165;
  double t2187;
  double t2511;
  double t2527;
  double t2717;
  double t2721;
  double t4074;
  double t4075;
  double t4083;
  double t4033;
  double t4034;
  double t4060;
  double t4152;
  double t4156;
  double t4157;
  double t4159;
  double t4088;
  double t4091;
  double t4092;
  double t4095;
  double t4117;
  double t4126;
  double t4134;
  double t4146;
  double t4105;
  double t4150;
  double t4161;
  double t4177;
  double t4187;
  double t4202;
  double t4204;
  double t4205;
  double t4230;
  double t4236;
  double t4243;
  double t4269;
  double t4183;
  double t4210;
  double t4274;
  double t4276;
  double t4283;
  double t4289;
  double t4293;
  double t4306;
  double t4308;
  double t4319;
  double t4320;
  double t4326;
  double t3594;
  double t3599;
  double t4278;
  double t4307;
  double t4342;
  double t4347;
  double t3657;
  double t3660;
  double t4352;
  double t4356;
  double t4357;
  double t4360;
  double t4365;
  double t4366;
  double t4367;
  double t4369;
  double t3676;
  double t3682;
  double t3733;
  double t3737;
  double t3739;
  double t3740;
  double t3744;
  double t3745;
  double t3746;
  double t3752;
  double t3755;
  double t3761;
  double t3762;
  double t3766;
  double t3782;
  double t3785;
  double t3788;
  double t3789;
  double t3798;
  double t3809;
  double t3812;
  double t3822;
  double t3832;
  double t3834;
  double t3837;
  double t3838;
  double t3841;
  double t3842;
  double t3843;
  double t3846;
  double t3854;
  double t3855;
  double t3857;
  double t3860;
  double t3882;
  double t3887;
  double t3896;
  double t3900;
  double t3913;
  double t3917;
  double t3932;
  double t3933;
  double t3939;
  double t3943;
  double t3956;
  double t3963;
  double t3983;
  double t3990;
  double t3993;
  double t3996;
  double t4498;
  double t4499;
  double t4502;
  double t4484;
  double t4485;
  double t4486;
  double t4536;
  double t4546;
  double t4547;
  double t4550;
  double t4506;
  double t4510;
  double t4514;
  double t4515;
  double t4521;
  double t4523;
  double t4525;
  double t4529;
  double t4520;
  double t4534;
  double t4551;
  double t4558;
  double t4565;
  double t4567;
  double t4571;
  double t4572;
  double t4581;
  double t4583;
  double t4588;
  double t4589;
  double t4564;
  double t4577;
  double t4591;
  double t4593;
  double t4607;
  double t4608;
  double t4609;
  double t4614;
  double t4625;
  double t4641;
  double t4644;
  double t4645;
  double t4599;
  double t4620;
  double t4647;
  double t4648;
  double t4656;
  double t4663;
  double t4669;
  double t4671;
  double t4678;
  double t4679;
  double t4681;
  double t4697;
  t646 = Cos(var1[3]);
  t553 = Cos(var1[5]);
  t654 = Sin(var1[4]);
  t610 = Sin(var1[3]);
  t673 = Sin(var1[5]);
  t1061 = Sin(var1[7]);
  t34 = Cos(var1[6]);
  t794 = t646*t553*t654;
  t817 = t610*t673;
  t825 = t794 + t817;
  t633 = -1.*t553*t610;
  t758 = t646*t654*t673;
  t759 = t633 + t758;
  t839 = Sin(var1[6]);
  t1027 = Cos(var1[7]);
  t1035 = -1.*t1027;
  t1045 = 1. + t1035;
  t2416 = t34*t759;
  t2439 = -1.*t825*t839;
  t2440 = t2416 + t2439;
  t1994 = t34*t825;
  t2010 = t759*t839;
  t2034 = t1994 + t2010;
  t994 = Cos(var1[4]);
  t2122 = 0.366501*t1061;
  t2152 = 0. + t2122;
  t2795 = Cos(var1[8]);
  t2828 = -1.*t2795;
  t2853 = 1. + t2828;
  t2695 = 0.930418*t1061;
  t2705 = 0. + t2695;
  t1165 = -0.930418*t1061;
  t1388 = 0. + t1165;
  t1552 = -0.366501*t1061;
  t1729 = 0. + t1552;
  t3044 = -1.000000637725*t1045;
  t3048 = 1. + t3044;
  t3076 = t646*t994*t3048;
  t3077 = t2440*t1388;
  t3087 = t2034*t1729;
  t3106 = t3076 + t3077 + t3087;
  t2868 = -0.340999127418*t1045*t2440;
  t2893 = -0.134322983001*t1045;
  t2903 = 1. + t2893;
  t2906 = t2903*t2034;
  t2920 = t646*t994*t2152;
  t2921 = t2868 + t2906 + t2920;
  t3109 = Sin(var1[8]);
  t2976 = -0.8656776547239999*t1045;
  t2977 = 1. + t2976;
  t2984 = t2977*t2440;
  t3025 = -0.340999127418*t1045*t2034;
  t3026 = t646*t994*t2705;
  t3035 = t2984 + t3025 + t3026;
  t2771 = Cos(var1[9]);
  t2788 = -1.*t2771;
  t2789 = 1. + t2788;
  t2764 = Sin(var1[10]);
  t2955 = 0.340999127418*t2853*t2921;
  t2966 = -0.134322983001*t2853;
  t2971 = 1. + t2966;
  t3042 = t2971*t3035;
  t3111 = -0.366501*t3109;
  t3116 = 0. + t3111;
  t3124 = t3106*t3116;
  t3128 = t2955 + t3042 + t3124;
  t3154 = Sin(var1[9]);
  t3174 = -1.000000637725*t2853;
  t3177 = 1. + t3174;
  t3185 = t3177*t3106;
  t3187 = -0.930418*t3109;
  t3223 = 0. + t3187;
  t3227 = t2921*t3223;
  t3232 = 0.366501*t3109;
  t3235 = 0. + t3232;
  t3239 = t3035*t3235;
  t3241 = t3185 + t3227 + t3239;
  t3261 = -0.8656776547239999*t2853;
  t3273 = 1. + t3261;
  t3283 = t3273*t2921;
  t3291 = 0.340999127418*t2853*t3035;
  t3306 = 0.930418*t3109;
  t3309 = 0. + t3306;
  t3349 = t3106*t3309;
  t3350 = t3283 + t3291 + t3349;
  t3449 = Cos(var1[10]);
  t3454 = -1.*t3449;
  t3468 = 1. + t3454;
  t3133 = 0.340999127418*t2789*t3128;
  t3157 = -0.930418*t3154;
  t3158 = 0. + t3157;
  t3242 = t3158*t3241;
  t3246 = -0.8656776547239999*t2789;
  t3247 = 1. + t3246;
  t3354 = t3247*t3350;
  t3362 = t3133 + t3242 + t3354;
  t3400 = -0.134322983001*t2789;
  t3402 = 1. + t3400;
  t3405 = t3402*t3128;
  t3428 = 0.366501*t3154;
  t3430 = 0. + t3428;
  t3432 = t3430*t3241;
  t3435 = 0.340999127418*t2789*t3350;
  t3437 = t3405 + t3432 + t3435;
  t3471 = -0.366501*t3154;
  t3479 = 0. + t3471;
  t3480 = t3479*t3128;
  t3481 = -1.000000637725*t2789;
  t3485 = 1. + t3481;
  t3494 = t3485*t3241;
  t3495 = 0.930418*t3154;
  t3506 = 0. + t3495;
  t3507 = t3506*t3350;
  t3518 = t3480 + t3494 + t3507;
  t3532 = Cos(var1[11]);
  t3537 = -1.*t3532;
  t3539 = 1. + t3537;
  t2753 = Sin(var1[11]);
  t2765 = 0.930418*t2764;
  t2770 = 0. + t2765;
  t3367 = t2770*t3362;
  t3372 = -0.366501*t2764;
  t3377 = 0. + t3372;
  t3448 = t3377*t3437;
  t3469 = -1.000000637725*t3468;
  t3470 = 1. + t3469;
  t3519 = t3470*t3518;
  t3521 = t3367 + t3448 + t3519;
  t3556 = -0.8656776547239999*t3468;
  t3557 = 1. + t3556;
  t3562 = t3557*t3362;
  t3563 = 0.340999127418*t3468*t3437;
  t3576 = -0.930418*t2764;
  t3581 = 0. + t3576;
  t3582 = t3581*t3518;
  t3583 = t3562 + t3563 + t3582;
  t3604 = 0.340999127418*t3468*t3362;
  t3609 = -0.134322983001*t3468;
  t3611 = 1. + t3609;
  t3623 = t3611*t3437;
  t3624 = 0.366501*t2764;
  t3628 = 0. + t3624;
  t3636 = t3628*t3518;
  t3637 = t3604 + t3623 + t3636;
  t3704 = -0.366501*t2753;
  t3713 = 0. + t3704;
  t3697 = 0.930418*t2753;
  t3699 = 0. + t3697;
  t3647 = -0.930418*t2753;
  t3648 = 0. + t3647;
  t2759 = 0.366501*t2753;
  t2761 = 0. + t2759;
  t84 = -1.*t34;
  t357 = 1. + t84;
  t401 = 0.091*t357;
  t411 = 0. + t401;
  t854 = 0.091*t839;
  t950 = 0. + t854;
  t1050 = -0.04500040093286238*t1045;
  t1481 = 0.07877663122399998*t1388;
  t1748 = 0.031030906668*t1729;
  t1823 = 0. + t1050 + t1481 + t1748;
  t4016 = t553*t610*t654;
  t4020 = -1.*t646*t673;
  t4022 = t4016 + t4020;
  t4006 = t646*t553;
  t4007 = t610*t654*t673;
  t4009 = t4006 + t4007;
  t2046 = -3.2909349868922137e-7*var1[7];
  t2083 = 0.03103092645718495*t1045;
  t2165 = -0.045000372235*t2152;
  t2187 = t2046 + t2083 + t2165;
  t2511 = 1.296332362046933e-7*var1[7];
  t2527 = 0.07877668146182712*t1045;
  t2717 = -0.045000372235*t2705;
  t2721 = t2511 + t2527 + t2717;
  t4074 = t34*t4009;
  t4075 = -1.*t4022*t839;
  t4083 = t4074 + t4075;
  t4033 = t34*t4022;
  t4034 = t4009*t839;
  t4060 = t4033 + t4034;
  t4152 = t994*t3048*t610;
  t4156 = t4083*t1388;
  t4157 = t4060*t1729;
  t4159 = t4152 + t4156 + t4157;
  t4088 = -0.340999127418*t1045*t4083;
  t4091 = t2903*t4060;
  t4092 = t994*t610*t2152;
  t4095 = t4088 + t4091 + t4092;
  t4117 = t2977*t4083;
  t4126 = -0.340999127418*t1045*t4060;
  t4134 = t994*t610*t2705;
  t4146 = t4117 + t4126 + t4134;
  t4105 = 0.340999127418*t2853*t4095;
  t4150 = t2971*t4146;
  t4161 = t4159*t3116;
  t4177 = t4105 + t4150 + t4161;
  t4187 = t3177*t4159;
  t4202 = t4095*t3223;
  t4204 = t4146*t3235;
  t4205 = t4187 + t4202 + t4204;
  t4230 = t3273*t4095;
  t4236 = 0.340999127418*t2853*t4146;
  t4243 = t4159*t3309;
  t4269 = t4230 + t4236 + t4243;
  t4183 = 0.340999127418*t2789*t4177;
  t4210 = t3158*t4205;
  t4274 = t3247*t4269;
  t4276 = t4183 + t4210 + t4274;
  t4283 = t3402*t4177;
  t4289 = t3430*t4205;
  t4293 = 0.340999127418*t2789*t4269;
  t4306 = t4283 + t4289 + t4293;
  t4308 = t3479*t4177;
  t4319 = t3485*t4205;
  t4320 = t3506*t4269;
  t4326 = t4308 + t4319 + t4320;
  t3594 = -0.134322983001*t3539;
  t3599 = 1. + t3594;
  t4278 = t2770*t4276;
  t4307 = t3377*t4306;
  t4342 = t3470*t4326;
  t4347 = t4278 + t4307 + t4342;
  t3657 = -0.8656776547239999*t3539;
  t3660 = 1. + t3657;
  t4352 = t3557*t4276;
  t4356 = 0.340999127418*t3468*t4306;
  t4357 = t3581*t4326;
  t4360 = t4352 + t4356 + t4357;
  t4365 = 0.340999127418*t3468*t4276;
  t4366 = t3611*t4306;
  t4367 = t3628*t4326;
  t4369 = t4365 + t4366 + t4367;
  t3676 = -1.000000637725*t3539;
  t3682 = 1. + t3676;
  t3733 = 0.06199697675299678*t3539;
  t3737 = 0.324290713329*t3713;
  t3739 = -0.823260828522*t3699;
  t3740 = 0. + t3733 + t3737 + t3739;
  t3744 = 2.95447451120871e-8*var1[11];
  t3745 = -0.8232613535360118*t3539;
  t3746 = 0.061996937216*t3648;
  t3752 = t3744 + t3745 + t3746;
  t3755 = 7.500378623168247e-8*var1[11];
  t3761 = 0.32429092013729516*t3539;
  t3762 = 0.061996937216*t2761;
  t3766 = t3755 + t3761 + t3762;
  t3782 = 2.281945176511838e-8*var1[10];
  t3785 = -0.5905366811997648*t3468;
  t3788 = -0.262809976934*t3581;
  t3789 = t3782 + t3785 + t3788;
  t3798 = 5.7930615939377813e-8*var1[10];
  t3809 = 0.23261833304643187*t3468;
  t3812 = -0.262809976934*t3628;
  t3822 = t3798 + t3809 + t3812;
  t3832 = -0.26281014453449253*t3468;
  t3834 = 0.23261818470000004*t3377;
  t3837 = -0.5905363046000001*t2770;
  t3838 = 0. + t3832 + t3834 + t3837;
  t3841 = 3.2909349868922137e-7*var1[8];
  t3842 = 0.055653945343889656*t2853;
  t3843 = -0.045000372235*t3116;
  t3846 = t3841 + t3842 + t3843;
  t3854 = -1.5981976069815686e-7*var1[9];
  t3855 = 0.08675267452931407*t2789;
  t3857 = 0.039853013046*t3430;
  t3860 = t3854 + t3855 + t3857;
  t3882 = -0.04500040093286238*t2853;
  t3887 = -0.141285834136*t3223;
  t3896 = 0.055653909852*t3235;
  t3900 = 0. + t3882 + t3887 + t3896;
  t3913 = 0.039853038461262744*t2789;
  t3917 = 0.086752619205*t3479;
  t3932 = -0.22023459268999998*t3506;
  t3933 = 0. + t3913 + t3917 + t3932;
  t3939 = 1.296332362046933e-7*var1[8];
  t3943 = -0.14128592423750855*t2853;
  t3956 = -0.045000372235*t3309;
  t3963 = t3939 + t3943 + t3956;
  t3983 = -6.295460977284962e-8*var1[9];
  t3990 = -0.22023473313910558*t2789;
  t3993 = 0.039853013046*t3158;
  t3996 = t3983 + t3990 + t3993;
  t4498 = t994*t34*t673;
  t4499 = -1.*t994*t553*t839;
  t4502 = t4498 + t4499;
  t4484 = t994*t553*t34;
  t4485 = t994*t673*t839;
  t4486 = t4484 + t4485;
  t4536 = -1.*t3048*t654;
  t4546 = t4502*t1388;
  t4547 = t4486*t1729;
  t4550 = t4536 + t4546 + t4547;
  t4506 = -0.340999127418*t1045*t4502;
  t4510 = t2903*t4486;
  t4514 = -1.*t654*t2152;
  t4515 = t4506 + t4510 + t4514;
  t4521 = t2977*t4502;
  t4523 = -0.340999127418*t1045*t4486;
  t4525 = -1.*t654*t2705;
  t4529 = t4521 + t4523 + t4525;
  t4520 = 0.340999127418*t2853*t4515;
  t4534 = t2971*t4529;
  t4551 = t4550*t3116;
  t4558 = t4520 + t4534 + t4551;
  t4565 = t3177*t4550;
  t4567 = t4515*t3223;
  t4571 = t4529*t3235;
  t4572 = t4565 + t4567 + t4571;
  t4581 = t3273*t4515;
  t4583 = 0.340999127418*t2853*t4529;
  t4588 = t4550*t3309;
  t4589 = t4581 + t4583 + t4588;
  t4564 = 0.340999127418*t2789*t4558;
  t4577 = t3158*t4572;
  t4591 = t3247*t4589;
  t4593 = t4564 + t4577 + t4591;
  t4607 = t3402*t4558;
  t4608 = t3430*t4572;
  t4609 = 0.340999127418*t2789*t4589;
  t4614 = t4607 + t4608 + t4609;
  t4625 = t3479*t4558;
  t4641 = t3485*t4572;
  t4644 = t3506*t4589;
  t4645 = t4625 + t4641 + t4644;
  t4599 = t2770*t4593;
  t4620 = t3377*t4614;
  t4647 = t3470*t4645;
  t4648 = t4599 + t4620 + t4647;
  t4656 = t3557*t4593;
  t4663 = 0.340999127418*t3468*t4614;
  t4669 = t3581*t4645;
  t4671 = t4656 + t4663 + t4669;
  t4678 = 0.340999127418*t3468*t4593;
  t4679 = t3611*t4614;
  t4681 = t3628*t4645;
  t4697 = t4678 + t4679 + t4681;
  p_output1[0]=0. + t2034*t2187 + t2440*t2721 + 0.402602*(t2761*t3521 + 0.340999127418*t3539*t3583 + t3599*t3637) - 0.792413*(0.340999127418*t3539*t3637 + t3521*t3648 + t3583*t3660) + 0.061997*(t3521*t3682 + t3583*t3699 + t3637*t3713) + t3521*t3740 + t3583*t3752 + t3637*t3766 + t3362*t3789 + t3437*t3822 + t3518*t3838 + t3035*t3846 + t3128*t3860 + t3106*t3900 + t3241*t3933 + t2921*t3963 + t3350*t3996 + t411*t759 + t825*t950 + t1823*t646*t994 + var1[0];
  p_output1[1]=0. + t2187*t4060 + t2721*t4083 + t3963*t4095 + t4009*t411 + t3846*t4146 + t3900*t4159 + t3860*t4177 + t3933*t4205 + t3996*t4269 + t3789*t4276 + t3822*t4306 + t3838*t4326 + t3740*t4347 + t3752*t4360 + t3766*t4369 - 0.792413*(t3648*t4347 + t3660*t4360 + 0.340999127418*t3539*t4369) + 0.402602*(t2761*t4347 + 0.340999127418*t3539*t4360 + t3599*t4369) + 0.061997*(t3682*t4347 + t3699*t4360 + t3713*t4369) + t4022*t950 + t1823*t610*t994 + var1[1];
  p_output1[2]=0. + t2187*t4486 + t2721*t4502 + t3963*t4515 + t3846*t4529 + t3900*t4550 + t3860*t4558 + t3933*t4572 + t3996*t4589 + t3789*t4593 + t3822*t4614 + t3838*t4645 + t3740*t4648 + t3752*t4671 + t3766*t4697 - 0.792413*(t3648*t4648 + t3660*t4671 + 0.340999127418*t3539*t4697) + 0.402602*(t2761*t4648 + 0.340999127418*t3539*t4671 + t3599*t4697) + 0.061997*(t3682*t4648 + t3699*t4671 + t3713*t4697) - 1.*t1823*t654 + t411*t673*t994 + t553*t950*t994 + var1[2];
}



void p_toe_pitch_joint_left_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
