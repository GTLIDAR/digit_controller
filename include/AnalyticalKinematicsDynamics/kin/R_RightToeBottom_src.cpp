/*
 * Automatically Generated from Mathematica.
 * Thu 10 Nov 2022 14:25:49 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "R_RightToeBottom_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t528;
  double t1279;
  double t1454;
  double t1337;
  double t1460;
  double t1048;
  double t1051;
  double t1092;
  double t1537;
  double t1394;
  double t1495;
  double t1518;
  double t1172;
  double t1541;
  double t1546;
  double t1561;
  double t371;
  double t688;
  double t691;
  double t1527;
  double t1577;
  double t1592;
  double t1661;
  double t1670;
  double t1733;
  double t1927;
  double t1929;
  double t1930;
  double t812;
  double t945;
  double t962;
  double t1641;
  double t1650;
  double t1651;
  double t1735;
  double t1739;
  double t1829;
  double t1833;
  double t1834;
  double t1836;
  double t1838;
  double t1843;
  double t1916;
  double t1922;
  double t2002;
  double t2003;
  double t2006;
  double t2009;
  double t2023;
  double t2031;
  double t2036;
  double t2037;
  double t2047;
  double t2053;
  double t2077;
  double t2114;
  double t2116;
  double t131;
  double t154;
  double t372;
  double t439;
  double t1740;
  double t1775;
  double t1812;
  double t1925;
  double t1962;
  double t1981;
  double t2055;
  double t2069;
  double t2117;
  double t2118;
  double t2149;
  double t2151;
  double t2152;
  double t2153;
  double t2166;
  double t2170;
  double t2189;
  double t2194;
  double t2195;
  double t2202;
  double t2203;
  double t2222;
  double t2223;
  double t2229;
  double t2282;
  double t2283;
  double t2284;
  double t166;
  double t228;
  double t2071;
  double t2172;
  double t2180;
  double t2182;
  double t2231;
  double t2237;
  double t2263;
  double t2264;
  double t2265;
  double t2267;
  double t2270;
  double t2271;
  double t2277;
  double t2279;
  double t2301;
  double t2307;
  double t2313;
  double t2315;
  double t2330;
  double t2339;
  double t2344;
  double t2347;
  double t2349;
  double t2353;
  double t2368;
  double t2369;
  double t2370;
  double t106;
  double t108;
  double t109;
  double t111;
  double t125;
  double t143;
  double t148;
  double t2241;
  double t2245;
  double t2259;
  double t2281;
  double t2289;
  double t2293;
  double t2354;
  double t2359;
  double t2380;
  double t2382;
  double t2384;
  double t2385;
  double t2386;
  double t2400;
  double t2403;
  double t2405;
  double t2417;
  double t2418;
  double t2419;
  double t2420;
  double t2426;
  double t2428;
  double t2429;
  double t2431;
  double t127;
  double t130;
  double t2366;
  double t2409;
  double t2413;
  double t2414;
  double t2433;
  double t2438;
  double t2468;
  double t2477;
  double t2482;
  double t2483;
  double t2484;
  double t2491;
  double t2498;
  double t2500;
  double t2441;
  double t2526;
  double t2527;
  double t2528;
  double t2529;
  double t2530;
  double t2532;
  double t2534;
  double t2540;
  double t2542;
  double t2547;
  double t2552;
  double t110;
  double t117;
  double t124;
  double t2622;
  double t2624;
  double t2626;
  double t2641;
  double t2642;
  double t2646;
  double t2627;
  double t2648;
  double t2649;
  double t2657;
  double t2660;
  double t2663;
  double t2619;
  double t2652;
  double t2665;
  double t2666;
  double t2673;
  double t2675;
  double t2676;
  double t2679;
  double t2681;
  double t2692;
  double t2693;
  double t2696;
  double t2672;
  double t2680;
  double t2698;
  double t2703;
  double t2716;
  double t2718;
  double t2720;
  double t2724;
  double t2734;
  double t2735;
  double t2743;
  double t2745;
  double t2712;
  double t2733;
  double t2748;
  double t2750;
  double t2757;
  double t2761;
  double t2763;
  double t2767;
  double t2769;
  double t2772;
  double t2776;
  double t2781;
  double t2456;
  double t2460;
  double t2756;
  double t2768;
  double t2782;
  double t2783;
  double t2787;
  double t2789;
  double t2790;
  double t2791;
  double t2796;
  double t2797;
  double t2798;
  double t2799;
  double t2512;
  double t2517;
  double t2554;
  double t2556;
  double t2786;
  double t2792;
  double t2803;
  double t2804;
  double t2560;
  double t2563;
  double t2806;
  double t2807;
  double t2808;
  double t2812;
  double t2565;
  double t2568;
  double t2815;
  double t2817;
  double t2824;
  double t2826;
  double t2573;
  double t2575;
  double t2578;
  double t2580;
  double t2589;
  double t2599;
  double t2866;
  double t2874;
  double t2876;
  double t2879;
  double t2883;
  double t2889;
  double t2862;
  double t2877;
  double t2890;
  double t2892;
  double t2895;
  double t2896;
  double t2901;
  double t2902;
  double t2907;
  double t2911;
  double t2913;
  double t2914;
  double t2894;
  double t2906;
  double t2915;
  double t2917;
  double t2924;
  double t2927;
  double t2931;
  double t2946;
  double t2965;
  double t2970;
  double t2972;
  double t2973;
  double t2921;
  double t2955;
  double t2977;
  double t2978;
  double t2982;
  double t2992;
  double t2994;
  double t2995;
  double t2999;
  double t3003;
  double t3005;
  double t3006;
  double t2980;
  double t2998;
  double t3007;
  double t3011;
  double t3017;
  double t3018;
  double t3024;
  double t3026;
  double t3031;
  double t3038;
  double t3039;
  double t3040;
  double t3012;
  double t3029;
  double t3042;
  double t3044;
  double t3048;
  double t3053;
  double t3054;
  double t3055;
  double t3062;
  double t3064;
  double t3066;
  double t3069;
  double t2559;
  double t2564;
  double t2569;
  double t2570;
  double t2576;
  double t2588;
  double t2602;
  double t2604;
  double t2830;
  double t2832;
  double t2834;
  double t2836;
  double t2841;
  double t2844;
  double t2845;
  double t2846;
  double t3084;
  double t3087;
  double t3094;
  double t3096;
  double t3100;
  double t3103;
  double t3108;
  double t3111;
  double t2440;
  double t2503;
  double t2549;
  double t2550;
  double t2805;
  double t2813;
  double t2827;
  double t2828;
  double t3047;
  double t3058;
  double t3078;
  double t3082;
  t528 = Cos(var1[3]);
  t1279 = Cos(var1[5]);
  t1454 = Sin(var1[3]);
  t1337 = Sin(var1[4]);
  t1460 = Sin(var1[5]);
  t1048 = Cos(var1[14]);
  t1051 = -1.*t1048;
  t1092 = 1. + t1051;
  t1537 = Cos(var1[13]);
  t1394 = t528*t1279*t1337;
  t1495 = t1454*t1460;
  t1518 = t1394 + t1495;
  t1172 = Sin(var1[13]);
  t1541 = -1.*t1279*t1454;
  t1546 = t528*t1337*t1460;
  t1561 = t1541 + t1546;
  t371 = Sin(var1[15]);
  t688 = Cos(var1[4]);
  t691 = Sin(var1[14]);
  t1527 = -1.*t1172*t1518;
  t1577 = t1537*t1561;
  t1592 = t1527 + t1577;
  t1661 = t1537*t1518;
  t1670 = t1172*t1561;
  t1733 = t1661 + t1670;
  t1927 = Cos(var1[15]);
  t1929 = -1.*t1927;
  t1930 = 1. + t1929;
  t812 = -0.366501*t691;
  t945 = 0. + t812;
  t962 = t528*t688*t945;
  t1641 = 0.340999127418*t1092*t1592;
  t1650 = -0.134322983001*t1092;
  t1651 = 1. + t1650;
  t1735 = t1651*t1733;
  t1739 = t962 + t1641 + t1735;
  t1829 = 0.930418*t691;
  t1833 = 0. + t1829;
  t1834 = t528*t688*t1833;
  t1836 = -0.8656776547239999*t1092;
  t1838 = 1. + t1836;
  t1843 = t1838*t1592;
  t1916 = 0.340999127418*t1092*t1733;
  t1922 = t1834 + t1843 + t1916;
  t2002 = -1.000000637725*t1092;
  t2003 = 1. + t2002;
  t2006 = t2003*t528*t688;
  t2009 = -0.930418*t691;
  t2023 = 0. + t2009;
  t2031 = t2023*t1592;
  t2036 = 0.366501*t691;
  t2037 = 0. + t2036;
  t2047 = t2037*t1733;
  t2053 = t2006 + t2031 + t2047;
  t2077 = Cos(var1[16]);
  t2114 = -1.*t2077;
  t2116 = 1. + t2114;
  t131 = Sin(var1[17]);
  t154 = Sin(var1[16]);
  t372 = 0.930418*t371;
  t439 = 0. + t372;
  t1740 = t439*t1739;
  t1775 = 0.366501*t371;
  t1812 = 0. + t1775;
  t1925 = t1812*t1922;
  t1962 = -1.000000637725*t1930;
  t1981 = 1. + t1962;
  t2055 = t1981*t2053;
  t2069 = t1740 + t1925 + t2055;
  t2117 = -0.8656776547239999*t1930;
  t2118 = 1. + t2117;
  t2149 = t2118*t1739;
  t2151 = -0.340999127418*t1930*t1922;
  t2152 = -0.930418*t371;
  t2153 = 0. + t2152;
  t2166 = t2153*t2053;
  t2170 = t2149 + t2151 + t2166;
  t2189 = -0.340999127418*t1930*t1739;
  t2194 = -0.134322983001*t1930;
  t2195 = 1. + t2194;
  t2202 = t2195*t1922;
  t2203 = -0.366501*t371;
  t2222 = 0. + t2203;
  t2223 = t2222*t2053;
  t2229 = t2189 + t2202 + t2223;
  t2282 = Cos(var1[17]);
  t2283 = -1.*t2282;
  t2284 = 1. + t2283;
  t166 = 0.366501*t154;
  t228 = 0. + t166;
  t2071 = t228*t2069;
  t2172 = -0.340999127418*t2116*t2170;
  t2180 = -0.134322983001*t2116;
  t2182 = 1. + t2180;
  t2231 = t2182*t2229;
  t2237 = t2071 + t2172 + t2231;
  t2263 = 0.930418*t154;
  t2264 = 0. + t2263;
  t2265 = t2264*t2069;
  t2267 = -0.8656776547239999*t2116;
  t2270 = 1. + t2267;
  t2271 = t2270*t2170;
  t2277 = -0.340999127418*t2116*t2229;
  t2279 = t2265 + t2271 + t2277;
  t2301 = -1.000000637725*t2116;
  t2307 = 1. + t2301;
  t2313 = t2307*t2069;
  t2315 = -0.930418*t154;
  t2330 = 0. + t2315;
  t2339 = t2330*t2170;
  t2344 = -0.366501*t154;
  t2347 = 0. + t2344;
  t2349 = t2347*t2229;
  t2353 = t2313 + t2339 + t2349;
  t2368 = Cos(var1[18]);
  t2369 = -1.*t2368;
  t2370 = 1. + t2369;
  t106 = Cos(var1[19]);
  t108 = -1.*t106;
  t109 = 1. + t108;
  t111 = Sin(var1[19]);
  t125 = Sin(var1[18]);
  t143 = -0.366501*t131;
  t148 = 0. + t143;
  t2241 = t148*t2237;
  t2245 = -0.930418*t131;
  t2259 = 0. + t2245;
  t2281 = t2259*t2279;
  t2289 = -1.000000637725*t2284;
  t2293 = 1. + t2289;
  t2354 = t2293*t2353;
  t2359 = t2241 + t2281 + t2354;
  t2380 = -0.134322983001*t2284;
  t2382 = 1. + t2380;
  t2384 = t2382*t2237;
  t2385 = -0.340999127418*t2284*t2279;
  t2386 = 0.366501*t131;
  t2400 = 0. + t2386;
  t2403 = t2400*t2353;
  t2405 = t2384 + t2385 + t2403;
  t2417 = -0.340999127418*t2284*t2237;
  t2418 = -0.8656776547239999*t2284;
  t2419 = 1. + t2418;
  t2420 = t2419*t2279;
  t2426 = 0.930418*t131;
  t2428 = 0. + t2426;
  t2429 = t2428*t2353;
  t2431 = t2417 + t2420 + t2429;
  t127 = 0.930418*t125;
  t130 = 0. + t127;
  t2366 = t130*t2359;
  t2409 = -0.340999127418*t2370*t2405;
  t2413 = -0.8656776547239999*t2370;
  t2414 = 1. + t2413;
  t2433 = t2414*t2431;
  t2438 = t2366 + t2409 + t2433;
  t2468 = 0.366501*t125;
  t2477 = 0. + t2468;
  t2482 = t2477*t2359;
  t2483 = -0.134322983001*t2370;
  t2484 = 1. + t2483;
  t2491 = t2484*t2405;
  t2498 = -0.340999127418*t2370*t2431;
  t2500 = t2482 + t2491 + t2498;
  t2441 = 0.175248972904*t109;
  t2526 = -1.000000637725*t2370;
  t2527 = 1. + t2526;
  t2528 = t2527*t2359;
  t2529 = -0.366501*t125;
  t2530 = 0. + t2529;
  t2532 = t2530*t2405;
  t2534 = -0.930418*t125;
  t2540 = 0. + t2534;
  t2542 = t2540*t2431;
  t2547 = t2528 + t2532 + t2542;
  t2552 = 0.120666640478*t109;
  t110 = 0.444895486988*t109;
  t117 = -0.218018*t111;
  t124 = t110 + t117;
  t2622 = t1279*t1454*t1337;
  t2624 = -1.*t528*t1460;
  t2626 = t2622 + t2624;
  t2641 = t528*t1279;
  t2642 = t1454*t1337*t1460;
  t2646 = t2641 + t2642;
  t2627 = -1.*t1172*t2626;
  t2648 = t1537*t2646;
  t2649 = t2627 + t2648;
  t2657 = t1537*t2626;
  t2660 = t1172*t2646;
  t2663 = t2657 + t2660;
  t2619 = t688*t945*t1454;
  t2652 = 0.340999127418*t1092*t2649;
  t2665 = t1651*t2663;
  t2666 = t2619 + t2652 + t2665;
  t2673 = t688*t1833*t1454;
  t2675 = t1838*t2649;
  t2676 = 0.340999127418*t1092*t2663;
  t2679 = t2673 + t2675 + t2676;
  t2681 = t2003*t688*t1454;
  t2692 = t2023*t2649;
  t2693 = t2037*t2663;
  t2696 = t2681 + t2692 + t2693;
  t2672 = t439*t2666;
  t2680 = t1812*t2679;
  t2698 = t1981*t2696;
  t2703 = t2672 + t2680 + t2698;
  t2716 = t2118*t2666;
  t2718 = -0.340999127418*t1930*t2679;
  t2720 = t2153*t2696;
  t2724 = t2716 + t2718 + t2720;
  t2734 = -0.340999127418*t1930*t2666;
  t2735 = t2195*t2679;
  t2743 = t2222*t2696;
  t2745 = t2734 + t2735 + t2743;
  t2712 = t228*t2703;
  t2733 = -0.340999127418*t2116*t2724;
  t2748 = t2182*t2745;
  t2750 = t2712 + t2733 + t2748;
  t2757 = t2264*t2703;
  t2761 = t2270*t2724;
  t2763 = -0.340999127418*t2116*t2745;
  t2767 = t2757 + t2761 + t2763;
  t2769 = t2307*t2703;
  t2772 = t2330*t2724;
  t2776 = t2347*t2745;
  t2781 = t2769 + t2772 + t2776;
  t2456 = 0.553471*t111;
  t2460 = t2441 + t2456;
  t2756 = t148*t2750;
  t2768 = t2259*t2767;
  t2782 = t2293*t2781;
  t2783 = t2756 + t2768 + t2782;
  t2787 = t2382*t2750;
  t2789 = -0.340999127418*t2284*t2767;
  t2790 = t2400*t2781;
  t2791 = t2787 + t2789 + t2790;
  t2796 = -0.340999127418*t2284*t2750;
  t2797 = t2419*t2767;
  t2798 = t2428*t2781;
  t2799 = t2796 + t2797 + t2798;
  t2512 = -0.353861996165*t109;
  t2517 = 1. + t2512;
  t2554 = 0.803828*t111;
  t2556 = t2552 + t2554;
  t2786 = t130*t2783;
  t2792 = -0.340999127418*t2370*t2791;
  t2803 = t2414*t2799;
  t2804 = t2786 + t2792 + t2803;
  t2560 = -0.952469601425*t109;
  t2563 = 1. + t2560;
  t2806 = t2477*t2783;
  t2807 = t2484*t2791;
  t2808 = -0.340999127418*t2370*t2799;
  t2812 = t2806 + t2807 + t2808;
  t2565 = -0.553471*t111;
  t2568 = t2441 + t2565;
  t2815 = t2527*t2783;
  t2817 = t2530*t2791;
  t2824 = t2540*t2799;
  t2826 = t2815 + t2817 + t2824;
  t2573 = -0.693671301908*t109;
  t2575 = 1. + t2573;
  t2578 = -0.803828*t111;
  t2580 = t2552 + t2578;
  t2589 = 0.218018*t111;
  t2599 = t110 + t2589;
  t2866 = -1.*t688*t1279*t1172;
  t2874 = t1537*t688*t1460;
  t2876 = t2866 + t2874;
  t2879 = t1537*t688*t1279;
  t2883 = t688*t1172*t1460;
  t2889 = t2879 + t2883;
  t2862 = -1.*t945*t1337;
  t2877 = 0.340999127418*t1092*t2876;
  t2890 = t1651*t2889;
  t2892 = t2862 + t2877 + t2890;
  t2895 = -1.*t1833*t1337;
  t2896 = t1838*t2876;
  t2901 = 0.340999127418*t1092*t2889;
  t2902 = t2895 + t2896 + t2901;
  t2907 = -1.*t2003*t1337;
  t2911 = t2023*t2876;
  t2913 = t2037*t2889;
  t2914 = t2907 + t2911 + t2913;
  t2894 = t439*t2892;
  t2906 = t1812*t2902;
  t2915 = t1981*t2914;
  t2917 = t2894 + t2906 + t2915;
  t2924 = t2118*t2892;
  t2927 = -0.340999127418*t1930*t2902;
  t2931 = t2153*t2914;
  t2946 = t2924 + t2927 + t2931;
  t2965 = -0.340999127418*t1930*t2892;
  t2970 = t2195*t2902;
  t2972 = t2222*t2914;
  t2973 = t2965 + t2970 + t2972;
  t2921 = t228*t2917;
  t2955 = -0.340999127418*t2116*t2946;
  t2977 = t2182*t2973;
  t2978 = t2921 + t2955 + t2977;
  t2982 = t2264*t2917;
  t2992 = t2270*t2946;
  t2994 = -0.340999127418*t2116*t2973;
  t2995 = t2982 + t2992 + t2994;
  t2999 = t2307*t2917;
  t3003 = t2330*t2946;
  t3005 = t2347*t2973;
  t3006 = t2999 + t3003 + t3005;
  t2980 = t148*t2978;
  t2998 = t2259*t2995;
  t3007 = t2293*t3006;
  t3011 = t2980 + t2998 + t3007;
  t3017 = t2382*t2978;
  t3018 = -0.340999127418*t2284*t2995;
  t3024 = t2400*t3006;
  t3026 = t3017 + t3018 + t3024;
  t3031 = -0.340999127418*t2284*t2978;
  t3038 = t2419*t2995;
  t3039 = t2428*t3006;
  t3040 = t3031 + t3038 + t3039;
  t3012 = t130*t3011;
  t3029 = -0.340999127418*t2370*t3026;
  t3042 = t2414*t3040;
  t3044 = t3012 + t3029 + t3042;
  t3048 = t2477*t3011;
  t3053 = t2484*t3026;
  t3054 = -0.340999127418*t2370*t3040;
  t3055 = t3048 + t3053 + t3054;
  t3062 = t2527*t3011;
  t3064 = t2530*t3026;
  t3066 = t2540*t3040;
  t3069 = t3062 + t3064 + t3066;
  t2559 = t2556*t2438;
  t2564 = t2563*t2500;
  t2569 = t2568*t2547;
  t2570 = t2559 + t2564 + t2569;
  t2576 = t2575*t2438;
  t2588 = t2580*t2500;
  t2602 = t2599*t2547;
  t2604 = t2576 + t2588 + t2602;
  t2830 = t2556*t2804;
  t2832 = t2563*t2812;
  t2834 = t2568*t2826;
  t2836 = t2830 + t2832 + t2834;
  t2841 = t2575*t2804;
  t2844 = t2580*t2812;
  t2845 = t2599*t2826;
  t2846 = t2841 + t2844 + t2845;
  t3084 = t2556*t3044;
  t3087 = t2563*t3055;
  t3094 = t2568*t3069;
  t3096 = t3084 + t3087 + t3094;
  t3100 = t2575*t3044;
  t3103 = t2580*t3055;
  t3108 = t2599*t3069;
  t3111 = t3100 + t3103 + t3108;
  t2440 = t124*t2438;
  t2503 = t2460*t2500;
  t2549 = t2517*t2547;
  t2550 = t2440 + t2503 + t2549;
  t2805 = t124*t2804;
  t2813 = t2460*t2812;
  t2827 = t2517*t2826;
  t2828 = t2805 + t2813 + t2827;
  t3047 = t124*t3044;
  t3058 = t2460*t3055;
  t3078 = t2517*t3069;
  t3082 = t3047 + t3058 + t3078;
  p_output1[0]=0.993567*t2550 + 0.041508*t2570 + 0.105375*t2604;
  p_output1[1]=0.993567*t2828 + 0.041508*t2836 + 0.105375*t2846;
  p_output1[2]=0.993567*t3082 + 0.041508*t3096 + 0.105375*t3111;
  p_output1[3]=0.930418*t2570 - 0.366501*t2604;
  p_output1[4]=0.930418*t2836 - 0.366501*t2846;
  p_output1[5]=0.930418*t3096 - 0.366501*t3111;
  p_output1[6]=-0.113255*t2550 + 0.364143*t2570 + 0.924432*t2604;
  p_output1[7]=-0.113255*t2828 + 0.364143*t2836 + 0.924432*t2846;
  p_output1[8]=-0.113255*t3082 + 0.364143*t3096 + 0.924432*t3111;
}



void R_RightToeBottom_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
