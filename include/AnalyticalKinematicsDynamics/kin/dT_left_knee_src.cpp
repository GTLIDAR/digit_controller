/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:57:03 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dT_left_knee_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1050;
  double t1066;
  double t883;
  double t941;
  double t1003;
  double t1152;
  double t1069;
  double t1072;
  double t1192;
  double t415;
  double t509;
  double t783;
  double t1144;
  double t1196;
  double t1197;
  double t1275;
  double t1284;
  double t1363;
  double t1376;
  double t1395;
  double t1830;
  double t1831;
  double t1834;
  double t1835;
  double t1842;
  double t1848;
  double t1856;
  double t1883;
  double t1884;
  double t1894;
  double t1257;
  double t1261;
  double t1262;
  double t1368;
  double t1397;
  double t1408;
  double t1457;
  double t1464;
  double t1906;
  double t1605;
  double t1610;
  double t1627;
  double t1632;
  double t1648;
  double t1653;
  double t1672;
  double t1703;
  double t72;
  double t335;
  double t409;
  double t1544;
  double t1547;
  double t1590;
  double t1795;
  double t1964;
  double t1966;
  double t1992;
  double t2019;
  double t2028;
  double t2057;
  double t2112;
  double t2113;
  double t2118;
  double t2120;
  double t2126;
  double t2135;
  double t2147;
  double t2152;
  double t2154;
  double t2192;
  double t2204;
  double t2249;
  double t2261;
  double t2265;
  double t2268;
  double t2270;
  double t2300;
  double t2596;
  double t2638;
  double t2659;
  double t2664;
  double t2605;
  double t2608;
  double t2625;
  double t2634;
  double t2684;
  double t2727;
  double t2739;
  double t2751;
  double t2752;
  double t2029;
  double t2035;
  double t2821;
  double t2823;
  double t2847;
  double t2777;
  double t2810;
  double t2815;
  double t2735;
  double t2764;
  double t2770;
  double t2174;
  double t2188;
  double t2383;
  double t2389;
  double t2774;
  double t2820;
  double t2865;
  double t2899;
  double t2435;
  double t2442;
  double t2903;
  double t2905;
  double t2918;
  double t2934;
  double t2940;
  double t2943;
  double t2946;
  double t2947;
  double t2470;
  double t2477;
  double t2483;
  double t2486;
  double t2497;
  double t2554;
  double t3013;
  double t3031;
  double t3033;
  double t3074;
  double t3091;
  double t3093;
  double t3107;
  double t3112;
  double t3122;
  double t3167;
  double t3171;
  double t3173;
  double t3150;
  double t3157;
  double t3161;
  double t3101;
  double t3128;
  double t3138;
  double t3146;
  double t3165;
  double t3175;
  double t3181;
  double t3186;
  double t3192;
  double t3203;
  double t3204;
  double t3221;
  double t3222;
  double t3235;
  double t3236;
  double t3307;
  double t3308;
  double t3372;
  double t3386;
  double t3395;
  double t3402;
  double t3316;
  double t3320;
  double t3337;
  double t3340;
  double t3348;
  double t3357;
  double t3361;
  double t3339;
  double t3364;
  double t3408;
  double t3422;
  double t3427;
  double t3437;
  double t3438;
  double t3443;
  double t3449;
  double t3455;
  double t3457;
  double t3462;
  double t3533;
  double t3535;
  double t3539;
  double t3523;
  double t3524;
  double t3525;
  double t3529;
  double t3542;
  double t3546;
  double t3558;
  double t3559;
  double t3565;
  double t3586;
  double t3589;
  double t3592;
  double t3596;
  double t3557;
  double t3567;
  double t3569;
  double t3570;
  double t3576;
  double t3577;
  double t3578;
  double t3581;
  double t3573;
  double t3583;
  double t3598;
  double t3599;
  double t3605;
  double t3606;
  double t3608;
  double t3612;
  double t3627;
  double t3629;
  double t3639;
  double t3641;
  double t3723;
  double t3725;
  double t3729;
  double t3741;
  double t3716;
  double t3717;
  double t3719;
  double t3720;
  double t3696;
  double t3704;
  double t3706;
  double t3713;
  double t3715;
  double t3721;
  double t3742;
  double t3743;
  double t3751;
  double t3756;
  double t3758;
  double t3762;
  double t3783;
  double t3784;
  double t3786;
  double t3788;
  double t3903;
  double t3905;
  double t3906;
  double t3927;
  double t3931;
  double t3942;
  double t3951;
  double t3953;
  double t3955;
  double t3957;
  double t3962;
  double t3967;
  double t4038;
  double t4039;
  double t4040;
  double t4046;
  double t4047;
  double t4048;
  double t4084;
  double t4085;
  double t4087;
  double t4094;
  double t4043;
  double t4053;
  double t4057;
  double t4062;
  double t4066;
  double t4070;
  double t4074;
  double t4077;
  double t4064;
  double t4080;
  double t4096;
  double t4107;
  double t4109;
  double t4111;
  double t4116;
  double t4124;
  double t4132;
  double t4134;
  double t4137;
  double t4142;
  double t4204;
  double t4205;
  double t4206;
  double t4194;
  double t4197;
  double t4201;
  double t4203;
  double t4211;
  double t4212;
  double t4216;
  double t4220;
  double t4222;
  double t4271;
  double t4273;
  double t4281;
  double t4239;
  double t4245;
  double t4252;
  double t4214;
  double t4224;
  double t4225;
  double t4237;
  double t4266;
  double t4283;
  double t4285;
  double t4295;
  double t4306;
  double t4308;
  double t4310;
  double t4318;
  double t4325;
  double t4329;
  double t4330;
  double t4399;
  double t4405;
  double t4410;
  double t4414;
  double t4415;
  double t4470;
  double t4475;
  double t4477;
  double t4451;
  double t4456;
  double t4459;
  double t4406;
  double t4419;
  double t4424;
  double t4431;
  double t4467;
  double t4478;
  double t4482;
  double t4497;
  double t4498;
  double t4501;
  double t4513;
  double t4524;
  double t4530;
  double t4532;
  double t4544;
  double t4688;
  double t4690;
  double t4730;
  double t4733;
  double t4738;
  double t4739;
  double t4692;
  double t4698;
  double t4707;
  double t4719;
  double t4720;
  double t4724;
  double t4727;
  double t4710;
  double t4728;
  double t4743;
  double t4754;
  double t4767;
  double t4781;
  double t4785;
  double t4790;
  double t4801;
  double t4809;
  double t4821;
  double t4822;
  double t4955;
  double t4956;
  double t4969;
  double t4974;
  double t4939;
  double t4949;
  double t4950;
  double t4951;
  double t4916;
  double t4920;
  double t4921;
  double t4925;
  double t4926;
  double t4952;
  double t4979;
  double t4984;
  double t4993;
  double t5000;
  double t5015;
  double t5018;
  double t5026;
  double t5032;
  double t5051;
  double t5052;
  double t5127;
  double t5131;
  double t5135;
  double t5142;
  double t5164;
  double t5166;
  double t5173;
  double t5177;
  double t5179;
  double t5186;
  double t5187;
  double t5198;
  double t5262;
  double t5274;
  double t5284;
  double t5294;
  double t5301;
  double t5309;
  double t5334;
  double t5343;
  double t5346;
  double t5319;
  double t5320;
  double t5327;
  double t5290;
  double t5310;
  double t5314;
  double t5315;
  double t5332;
  double t5353;
  double t5354;
  double t5362;
  double t5367;
  double t5376;
  double t5378;
  double t5385;
  double t5392;
  double t5393;
  double t5400;
  double t5477;
  double t5481;
  double t5483;
  double t5493;
  double t5494;
  double t5500;
  double t5545;
  double t5556;
  double t5561;
  double t5526;
  double t5533;
  double t5536;
  double t5485;
  double t5501;
  double t5507;
  double t5525;
  double t5544;
  double t5562;
  double t5565;
  double t5576;
  double t5588;
  double t5589;
  double t5597;
  double t5599;
  double t5607;
  double t5609;
  double t5611;
  double t5734;
  double t5740;
  double t5741;
  double t5746;
  double t5693;
  double t5694;
  double t5699;
  double t5707;
  double t5711;
  double t5731;
  double t5706;
  double t5732;
  double t5762;
  double t5764;
  double t5772;
  double t5775;
  double t5777;
  double t5780;
  double t5784;
  double t5790;
  double t5804;
  double t5811;
  double t5886;
  double t5892;
  double t5895;
  double t5898;
  double t5904;
  double t5919;
  double t5971;
  double t5973;
  double t5983;
  double t5987;
  double t5896;
  double t5926;
  double t5931;
  double t5938;
  double t5951;
  double t5956;
  double t5958;
  double t5960;
  double t5943;
  double t5961;
  double t5997;
  double t5998;
  double t6004;
  double t6007;
  double t6009;
  double t6013;
  double t6020;
  double t6021;
  double t6025;
  double t6026;
  double t6145;
  double t6146;
  double t6148;
  double t6152;
  double t6122;
  double t6128;
  double t6130;
  double t6131;
  double t6111;
  double t6112;
  double t6113;
  double t6116;
  double t6121;
  double t6143;
  double t6159;
  double t6160;
  double t6162;
  double t6164;
  double t6170;
  double t6172;
  double t6177;
  double t6178;
  double t6179;
  double t6180;
  double t6247;
  double t6251;
  double t6267;
  double t6268;
  double t6271;
  double t6279;
  double t6281;
  double t6284;
  double t6291;
  double t6296;
  double t6301;
  double t6302;
  double t2022;
  double t2155;
  double t2358;
  double t2361;
  double t2366;
  double t2432;
  double t2452;
  double t2454;
  double t2455;
  double t2469;
  double t2482;
  double t2488;
  double t2560;
  double t2566;
  double t2902;
  double t2935;
  double t2958;
  double t2962;
  double t2963;
  double t2972;
  double t2973;
  double t2976;
  double t2978;
  double t2979;
  double t2981;
  double t2985;
  double t2989;
  double t2990;
  double t3182;
  double t3215;
  double t3243;
  double t3249;
  double t3252;
  double t3253;
  double t3257;
  double t3260;
  double t3262;
  double t3267;
  double t3270;
  double t3276;
  double t3281;
  double t3284;
  double t3423;
  double t3444;
  double t3465;
  double t3479;
  double t3489;
  double t3490;
  double t3498;
  double t3504;
  double t3507;
  double t3509;
  double t3511;
  double t3516;
  double t3518;
  double t3519;
  double t3601;
  double t3622;
  double t3642;
  double t3649;
  double t3650;
  double t3657;
  double t3661;
  double t3665;
  double t3667;
  double t3677;
  double t3680;
  double t3681;
  double t3682;
  double t3684;
  double t3749;
  double t3765;
  double t3800;
  double t3807;
  double t3808;
  double t3811;
  double t3815;
  double t3819;
  double t3825;
  double t3841;
  double t3852;
  double t3859;
  double t3861;
  double t3875;
  double t3928;
  double t3954;
  double t3968;
  double t3978;
  double t3980;
  double t3981;
  double t3983;
  double t3986;
  double t3987;
  double t3991;
  double t3999;
  double t4001;
  double t4004;
  double t4009;
  double t4108;
  double t4126;
  double t4144;
  double t4145;
  double t4149;
  double t4153;
  double t4157;
  double t4158;
  double t4161;
  double t4166;
  double t4175;
  double t4177;
  double t4179;
  double t4181;
  double t4293;
  double t4311;
  double t4334;
  double t4340;
  double t4345;
  double t4353;
  double t4354;
  double t4358;
  double t4359;
  double t4363;
  double t4374;
  double t4376;
  double t4377;
  double t4381;
  double t4486;
  double t4520;
  double t4546;
  double t4548;
  double t4549;
  double t4559;
  double t4564;
  double t4570;
  double t4572;
  double t4579;
  double t4584;
  double t4588;
  double t4594;
  double t4601;
  double t4629;
  double t4638;
  double t4645;
  double t4646;
  double t4647;
  double t4648;
  double t4653;
  double t4654;
  double t4656;
  double t4660;
  double t4663;
  double t4666;
  double t4669;
  double t4673;
  double t4762;
  double t4794;
  double t4827;
  double t4832;
  double t4844;
  double t4852;
  double t4863;
  double t4868;
  double t4873;
  double t4876;
  double t4886;
  double t4887;
  double t4894;
  double t4897;
  double t4987;
  double t5022;
  double t5053;
  double t5058;
  double t5061;
  double t5063;
  double t5068;
  double t5086;
  double t5091;
  double t5092;
  double t5094;
  double t5103;
  double t5110;
  double t5113;
  double t5149;
  double t5178;
  double t5199;
  double t5200;
  double t5203;
  double t5205;
  double t5209;
  double t5212;
  double t5213;
  double t5220;
  double t5221;
  double t5222;
  double t5224;
  double t5225;
  double t5357;
  double t5384;
  double t5403;
  double t5409;
  double t5410;
  double t5425;
  double t5426;
  double t5428;
  double t5429;
  double t5438;
  double t5442;
  double t5449;
  double t5456;
  double t5465;
  double t5572;
  double t5598;
  double t5616;
  double t5621;
  double t5625;
  double t5640;
  double t5641;
  double t5644;
  double t5647;
  double t5656;
  double t5663;
  double t5667;
  double t5670;
  double t5675;
  double t5765;
  double t5782;
  double t5819;
  double t5828;
  double t5842;
  double t5843;
  double t5861;
  double t5867;
  double t5870;
  double t5872;
  double t5877;
  double t5878;
  double t5879;
  double t5880;
  double t6000;
  double t6016;
  double t6030;
  double t6033;
  double t6035;
  double t6044;
  double t6046;
  double t6048;
  double t6052;
  double t6053;
  double t6077;
  double t6079;
  double t6093;
  double t6098;
  double t6161;
  double t6174;
  double t6186;
  double t6190;
  double t6191;
  double t6192;
  double t6193;
  double t6203;
  double t6207;
  double t6212;
  double t6213;
  double t6215;
  double t6220;
  double t6221;
  double t6269;
  double t6288;
  double t6304;
  double t6308;
  double t6310;
  double t6317;
  double t6319;
  double t6338;
  double t6340;
  double t6341;
  double t6342;
  double t6346;
  double t6348;
  double t6353;
  double t6993;
  double t6994;
  double t6997;
  double t7002;
  double t7009;
  double t7010;
  double t7016;
  double t7018;
  double t7051;
  double t7052;
  double t7058;
  double t7062;
  double t7077;
  double t7081;
  double t7083;
  double t7085;
  double t7088;
  double t7091;
  double t7092;
  double t7094;
  double t7103;
  double t7104;
  double t7105;
  double t7108;
  double t7121;
  double t7124;
  double t7128;
  double t7129;
  double t7139;
  double t7141;
  double t7148;
  double t7150;
  double t6945;
  double t6950;
  double t6952;
  double t6955;
  double t6958;
  double t6961;
  double t6975;
  double t6982;
  double t6985;
  double t6989;
  double t7268;
  double t7270;
  double t7271;
  double t7276;
  double t7279;
  double t7284;
  double t7286;
  double t7295;
  double t7301;
  double t7380;
  double t7381;
  double t7386;
  double t7395;
  double t7396;
  double t7402;
  double t7405;
  double t7407;
  double t7410;
  double t7449;
  double t7469;
  double t7489;
  double t7508;
  double t7509;
  double t7512;
  double t7527;
  double t7548;
  double t7551;
  t1050 = Cos(var1[3]);
  t1066 = Cos(var1[4]);
  t883 = Cos(var1[7]);
  t941 = -1.*t883;
  t1003 = 1. + t941;
  t1152 = Cos(var1[5]);
  t1069 = Cos(var1[6]);
  t1072 = Sin(var1[5]);
  t1192 = Sin(var1[6]);
  t415 = Cos(var1[8]);
  t509 = -1.*t415;
  t783 = 1. + t509;
  t1144 = t1050*t1066*t1069*t1072;
  t1196 = -1.*t1050*t1066*t1152*t1192;
  t1197 = t1144 + t1196;
  t1275 = t1050*t1066*t1152*t1069;
  t1284 = t1050*t1066*t1072*t1192;
  t1363 = t1275 + t1284;
  t1376 = Sin(var1[4]);
  t1395 = Sin(var1[7]);
  t1830 = -1.000000637725*t1003;
  t1831 = 1. + t1830;
  t1834 = -1.*t1050*t1831*t1376;
  t1835 = -0.930418*t1395;
  t1842 = 0. + t1835;
  t1848 = t1197*t1842;
  t1856 = -0.366501*t1395;
  t1883 = 0. + t1856;
  t1884 = t1363*t1883;
  t1894 = t1834 + t1848 + t1884;
  t1257 = -0.340999127418*t1003*t1197;
  t1261 = -0.134322983001*t1003;
  t1262 = 1. + t1261;
  t1368 = t1262*t1363;
  t1397 = 0.366501*t1395;
  t1408 = 0. + t1397;
  t1457 = -1.*t1050*t1376*t1408;
  t1464 = t1257 + t1368 + t1457;
  t1906 = Sin(var1[8]);
  t1605 = -0.8656776547239999*t1003;
  t1610 = 1. + t1605;
  t1627 = t1610*t1197;
  t1632 = -0.340999127418*t1003*t1363;
  t1648 = 0.930418*t1395;
  t1653 = 0. + t1648;
  t1672 = -1.*t1050*t1376*t1653;
  t1703 = t1627 + t1632 + t1672;
  t72 = Cos(var1[9]);
  t335 = -1.*t72;
  t409 = 1. + t335;
  t1544 = 0.340999127418*t783*t1464;
  t1547 = -0.134322983001*t783;
  t1590 = 1. + t1547;
  t1795 = t1590*t1703;
  t1964 = -0.366501*t1906;
  t1966 = 0. + t1964;
  t1992 = t1894*t1966;
  t2019 = t1544 + t1795 + t1992;
  t2028 = Sin(var1[9]);
  t2057 = -1.000000637725*t783;
  t2112 = 1. + t2057;
  t2113 = t2112*t1894;
  t2118 = -0.930418*t1906;
  t2120 = 0. + t2118;
  t2126 = t1464*t2120;
  t2135 = 0.366501*t1906;
  t2147 = 0. + t2135;
  t2152 = t1703*t2147;
  t2154 = t2113 + t2126 + t2152;
  t2192 = -0.8656776547239999*t783;
  t2204 = 1. + t2192;
  t2249 = t2204*t1464;
  t2261 = 0.340999127418*t783*t1703;
  t2265 = 0.930418*t1906;
  t2268 = 0. + t2265;
  t2270 = t1894*t2268;
  t2300 = t2249 + t2261 + t2270;
  t2596 = Sin(var1[3]);
  t2638 = t1050*t1152*t1376;
  t2659 = t2596*t1072;
  t2664 = t2638 + t2659;
  t2605 = -1.*t1152*t2596;
  t2608 = t1050*t1376*t1072;
  t2625 = t2605 + t2608;
  t2634 = t1069*t2625;
  t2684 = -1.*t2664*t1192;
  t2727 = t2634 + t2684;
  t2739 = -1.*t1069*t2664;
  t2751 = -1.*t2625*t1192;
  t2752 = t2739 + t2751;
  t2029 = -0.930418*t2028;
  t2035 = 0. + t2029;
  t2821 = t2752*t1842;
  t2823 = t2727*t1883;
  t2847 = t2821 + t2823;
  t2777 = t1262*t2727;
  t2810 = -0.340999127418*t1003*t2752;
  t2815 = t2777 + t2810;
  t2735 = -0.340999127418*t1003*t2727;
  t2764 = t1610*t2752;
  t2770 = t2735 + t2764;
  t2174 = -0.8656776547239999*t409;
  t2188 = 1. + t2174;
  t2383 = -0.134322983001*t409;
  t2389 = 1. + t2383;
  t2774 = t1590*t2770;
  t2820 = 0.340999127418*t783*t2815;
  t2865 = t2847*t1966;
  t2899 = t2774 + t2820 + t2865;
  t2435 = 0.366501*t2028;
  t2442 = 0. + t2435;
  t2903 = t2112*t2847;
  t2905 = t2815*t2120;
  t2918 = t2770*t2147;
  t2934 = t2903 + t2905 + t2918;
  t2940 = 0.340999127418*t783*t2770;
  t2943 = t2204*t2815;
  t2946 = t2847*t2268;
  t2947 = t2940 + t2943 + t2946;
  t2470 = -0.366501*t2028;
  t2477 = 0. + t2470;
  t2483 = -1.000000637725*t409;
  t2486 = 1. + t2483;
  t2497 = 0.930418*t2028;
  t2554 = 0. + t2497;
  t3013 = t1152*t2596;
  t3031 = -1.*t1050*t1376*t1072;
  t3033 = t3013 + t3031;
  t3074 = t1069*t3033;
  t3091 = t2664*t1192;
  t3093 = t3074 + t3091;
  t3107 = t1069*t2664;
  t3112 = -1.*t3033*t1192;
  t3122 = t3107 + t3112;
  t3167 = t3122*t1842;
  t3171 = t3093*t1883;
  t3173 = t3167 + t3171;
  t3150 = t1262*t3093;
  t3157 = -0.340999127418*t1003*t3122;
  t3161 = t3150 + t3157;
  t3101 = -0.340999127418*t1003*t3093;
  t3128 = t1610*t3122;
  t3138 = t3101 + t3128;
  t3146 = t1590*t3138;
  t3165 = 0.340999127418*t783*t3161;
  t3175 = t3173*t1966;
  t3181 = t3146 + t3165 + t3175;
  t3186 = t2112*t3173;
  t3192 = t3161*t2120;
  t3203 = t3138*t2147;
  t3204 = t3186 + t3192 + t3203;
  t3221 = 0.340999127418*t783*t3138;
  t3222 = t2204*t3161;
  t3235 = t3173*t2268;
  t3236 = t3221 + t3222 + t3235;
  t3307 = t2625*t1192;
  t3308 = t3107 + t3307;
  t3372 = t1050*t1066*t1831;
  t3386 = t2727*t1842;
  t3395 = t3308*t1883;
  t3402 = t3372 + t3386 + t3395;
  t3316 = t1262*t3308;
  t3320 = t1050*t1066*t1408;
  t3337 = t2735 + t3316 + t3320;
  t3340 = t1610*t2727;
  t3348 = -0.340999127418*t1003*t3308;
  t3357 = t1050*t1066*t1653;
  t3361 = t3340 + t3348 + t3357;
  t3339 = 0.340999127418*t783*t3337;
  t3364 = t1590*t3361;
  t3408 = t3402*t1966;
  t3422 = t3339 + t3364 + t3408;
  t3427 = t2112*t3402;
  t3437 = t3337*t2120;
  t3438 = t3361*t2147;
  t3443 = t3427 + t3437 + t3438;
  t3449 = t2204*t3337;
  t3455 = 0.340999127418*t783*t3361;
  t3457 = t3402*t2268;
  t3462 = t3449 + t3455 + t3457;
  t3533 = -1.*t1152*t2596*t1376;
  t3535 = t1050*t1072;
  t3539 = t3533 + t3535;
  t3523 = -1.*t1050*t1152;
  t3524 = -1.*t2596*t1376*t1072;
  t3525 = t3523 + t3524;
  t3529 = t1069*t3525;
  t3542 = -1.*t3539*t1192;
  t3546 = t3529 + t3542;
  t3558 = t1069*t3539;
  t3559 = t3525*t1192;
  t3565 = t3558 + t3559;
  t3586 = -1.*t1066*t1831*t2596;
  t3589 = t3546*t1842;
  t3592 = t3565*t1883;
  t3596 = t3586 + t3589 + t3592;
  t3557 = -0.340999127418*t1003*t3546;
  t3567 = t1262*t3565;
  t3569 = -1.*t1066*t2596*t1408;
  t3570 = t3557 + t3567 + t3569;
  t3576 = t1610*t3546;
  t3577 = -0.340999127418*t1003*t3565;
  t3578 = -1.*t1066*t2596*t1653;
  t3581 = t3576 + t3577 + t3578;
  t3573 = 0.340999127418*t783*t3570;
  t3583 = t1590*t3581;
  t3598 = t3596*t1966;
  t3599 = t3573 + t3583 + t3598;
  t3605 = t2112*t3596;
  t3606 = t3570*t2120;
  t3608 = t3581*t2147;
  t3612 = t3605 + t3606 + t3608;
  t3627 = t2204*t3570;
  t3629 = 0.340999127418*t783*t3581;
  t3639 = t3596*t2268;
  t3641 = t3627 + t3629 + t3639;
  t3723 = -0.930418*t883*t2727;
  t3725 = -0.366501*t883*t3308;
  t3729 = -1.000000637725*t1050*t1066*t1395;
  t3741 = t3723 + t3725 + t3729;
  t3716 = 0.366501*t1050*t1066*t883;
  t3717 = -0.340999127418*t2727*t1395;
  t3719 = -0.134322983001*t3308*t1395;
  t3720 = t3716 + t3717 + t3719;
  t3696 = 0.930418*t1050*t1066*t883;
  t3704 = -0.8656776547239999*t2727*t1395;
  t3706 = -0.340999127418*t3308*t1395;
  t3713 = t3696 + t3704 + t3706;
  t3715 = t1590*t3713;
  t3721 = 0.340999127418*t783*t3720;
  t3742 = t3741*t1966;
  t3743 = t3715 + t3721 + t3742;
  t3751 = t2112*t3741;
  t3756 = t3720*t2120;
  t3758 = t3713*t2147;
  t3762 = t3751 + t3756 + t3758;
  t3783 = 0.340999127418*t783*t3713;
  t3784 = t2204*t3720;
  t3786 = t3741*t2268;
  t3788 = t3783 + t3784 + t3786;
  t3903 = -0.930418*t415*t3337;
  t3905 = 0.366501*t415*t3361;
  t3906 = -1.000000637725*t3402*t1906;
  t3927 = t3903 + t3905 + t3906;
  t3931 = -0.366501*t415*t3402;
  t3942 = 0.340999127418*t3337*t1906;
  t3951 = -0.134322983001*t3361*t1906;
  t3953 = t3931 + t3942 + t3951;
  t3955 = 0.930418*t415*t3402;
  t3957 = -0.8656776547239999*t3337*t1906;
  t3962 = 0.340999127418*t3361*t1906;
  t3967 = t3955 + t3957 + t3962;
  t4038 = t1066*t1069*t2596*t1072;
  t4039 = -1.*t1066*t1152*t2596*t1192;
  t4040 = t4038 + t4039;
  t4046 = t1066*t1152*t1069*t2596;
  t4047 = t1066*t2596*t1072*t1192;
  t4048 = t4046 + t4047;
  t4084 = -1.*t1831*t2596*t1376;
  t4085 = t4040*t1842;
  t4087 = t4048*t1883;
  t4094 = t4084 + t4085 + t4087;
  t4043 = -0.340999127418*t1003*t4040;
  t4053 = t1262*t4048;
  t4057 = -1.*t2596*t1376*t1408;
  t4062 = t4043 + t4053 + t4057;
  t4066 = t1610*t4040;
  t4070 = -0.340999127418*t1003*t4048;
  t4074 = -1.*t2596*t1376*t1653;
  t4077 = t4066 + t4070 + t4074;
  t4064 = 0.340999127418*t783*t4062;
  t4080 = t1590*t4077;
  t4096 = t4094*t1966;
  t4107 = t4064 + t4080 + t4096;
  t4109 = t2112*t4094;
  t4111 = t4062*t2120;
  t4116 = t4077*t2147;
  t4124 = t4109 + t4111 + t4116;
  t4132 = t2204*t4062;
  t4134 = 0.340999127418*t783*t4077;
  t4137 = t4094*t2268;
  t4142 = t4132 + t4134 + t4137;
  t4204 = t1152*t2596*t1376;
  t4205 = -1.*t1050*t1072;
  t4206 = t4204 + t4205;
  t4194 = t1050*t1152;
  t4197 = t2596*t1376*t1072;
  t4201 = t4194 + t4197;
  t4203 = t1069*t4201;
  t4211 = -1.*t4206*t1192;
  t4212 = t4203 + t4211;
  t4216 = -1.*t1069*t4206;
  t4220 = -1.*t4201*t1192;
  t4222 = t4216 + t4220;
  t4271 = t4222*t1842;
  t4273 = t4212*t1883;
  t4281 = t4271 + t4273;
  t4239 = t1262*t4212;
  t4245 = -0.340999127418*t1003*t4222;
  t4252 = t4239 + t4245;
  t4214 = -0.340999127418*t1003*t4212;
  t4224 = t1610*t4222;
  t4225 = t4214 + t4224;
  t4237 = t1590*t4225;
  t4266 = 0.340999127418*t783*t4252;
  t4283 = t4281*t1966;
  t4285 = t4237 + t4266 + t4283;
  t4295 = t2112*t4281;
  t4306 = t4252*t2120;
  t4308 = t4225*t2147;
  t4310 = t4295 + t4306 + t4308;
  t4318 = 0.340999127418*t783*t4225;
  t4325 = t2204*t4252;
  t4329 = t4281*t2268;
  t4330 = t4318 + t4325 + t4329;
  t4399 = t4206*t1192;
  t4405 = t3529 + t4399;
  t4410 = t1069*t4206;
  t4414 = -1.*t3525*t1192;
  t4415 = t4410 + t4414;
  t4470 = t4415*t1842;
  t4475 = t4405*t1883;
  t4477 = t4470 + t4475;
  t4451 = t1262*t4405;
  t4456 = -0.340999127418*t1003*t4415;
  t4459 = t4451 + t4456;
  t4406 = -0.340999127418*t1003*t4405;
  t4419 = t1610*t4415;
  t4424 = t4406 + t4419;
  t4431 = t1590*t4424;
  t4467 = 0.340999127418*t783*t4459;
  t4478 = t4477*t1966;
  t4482 = t4431 + t4467 + t4478;
  t4497 = t2112*t4477;
  t4498 = t4459*t2120;
  t4501 = t4424*t2147;
  t4513 = t4497 + t4498 + t4501;
  t4524 = 0.340999127418*t783*t4424;
  t4530 = t2204*t4459;
  t4532 = t4477*t2268;
  t4544 = t4524 + t4530 + t4532;
  t4688 = t4201*t1192;
  t4690 = t4410 + t4688;
  t4730 = t1066*t1831*t2596;
  t4733 = t4212*t1842;
  t4738 = t4690*t1883;
  t4739 = t4730 + t4733 + t4738;
  t4692 = t1262*t4690;
  t4698 = t1066*t2596*t1408;
  t4707 = t4214 + t4692 + t4698;
  t4719 = t1610*t4212;
  t4720 = -0.340999127418*t1003*t4690;
  t4724 = t1066*t2596*t1653;
  t4727 = t4719 + t4720 + t4724;
  t4710 = 0.340999127418*t783*t4707;
  t4728 = t1590*t4727;
  t4743 = t4739*t1966;
  t4754 = t4710 + t4728 + t4743;
  t4767 = t2112*t4739;
  t4781 = t4707*t2120;
  t4785 = t4727*t2147;
  t4790 = t4767 + t4781 + t4785;
  t4801 = t2204*t4707;
  t4809 = 0.340999127418*t783*t4727;
  t4821 = t4739*t2268;
  t4822 = t4801 + t4809 + t4821;
  t4955 = -0.930418*t883*t4212;
  t4956 = -0.366501*t883*t4690;
  t4969 = -1.000000637725*t1066*t2596*t1395;
  t4974 = t4955 + t4956 + t4969;
  t4939 = 0.366501*t1066*t883*t2596;
  t4949 = -0.340999127418*t4212*t1395;
  t4950 = -0.134322983001*t4690*t1395;
  t4951 = t4939 + t4949 + t4950;
  t4916 = 0.930418*t1066*t883*t2596;
  t4920 = -0.8656776547239999*t4212*t1395;
  t4921 = -0.340999127418*t4690*t1395;
  t4925 = t4916 + t4920 + t4921;
  t4926 = t1590*t4925;
  t4952 = 0.340999127418*t783*t4951;
  t4979 = t4974*t1966;
  t4984 = t4926 + t4952 + t4979;
  t4993 = t2112*t4974;
  t5000 = t4951*t2120;
  t5015 = t4925*t2147;
  t5018 = t4993 + t5000 + t5015;
  t5026 = 0.340999127418*t783*t4925;
  t5032 = t2204*t4951;
  t5051 = t4974*t2268;
  t5052 = t5026 + t5032 + t5051;
  t5127 = -0.930418*t415*t4707;
  t5131 = 0.366501*t415*t4727;
  t5135 = -1.000000637725*t4739*t1906;
  t5142 = t5127 + t5131 + t5135;
  t5164 = -0.366501*t415*t4739;
  t5166 = 0.340999127418*t4707*t1906;
  t5173 = -0.134322983001*t4727*t1906;
  t5177 = t5164 + t5166 + t5173;
  t5179 = 0.930418*t415*t4739;
  t5186 = -0.8656776547239999*t4707*t1906;
  t5187 = 0.340999127418*t4727*t1906;
  t5198 = t5179 + t5186 + t5187;
  t5262 = t1066*t1069*t1072;
  t5274 = -1.*t1066*t1152*t1192;
  t5284 = t5262 + t5274;
  t5294 = -1.*t1066*t1152*t1069;
  t5301 = -1.*t1066*t1072*t1192;
  t5309 = t5294 + t5301;
  t5334 = t5309*t1842;
  t5343 = t5284*t1883;
  t5346 = t5334 + t5343;
  t5319 = t1262*t5284;
  t5320 = -0.340999127418*t1003*t5309;
  t5327 = t5319 + t5320;
  t5290 = -0.340999127418*t1003*t5284;
  t5310 = t1610*t5309;
  t5314 = t5290 + t5310;
  t5315 = t1590*t5314;
  t5332 = 0.340999127418*t783*t5327;
  t5353 = t5346*t1966;
  t5354 = t5315 + t5332 + t5353;
  t5362 = t2112*t5346;
  t5367 = t5327*t2120;
  t5376 = t5314*t2147;
  t5378 = t5362 + t5367 + t5376;
  t5385 = 0.340999127418*t783*t5314;
  t5392 = t2204*t5327;
  t5393 = t5346*t2268;
  t5400 = t5385 + t5392 + t5393;
  t5477 = -1.*t1066*t1069*t1072;
  t5481 = t1066*t1152*t1192;
  t5483 = t5477 + t5481;
  t5493 = t1066*t1152*t1069;
  t5494 = t1066*t1072*t1192;
  t5500 = t5493 + t5494;
  t5545 = t5500*t1842;
  t5556 = t5483*t1883;
  t5561 = t5545 + t5556;
  t5526 = t1262*t5483;
  t5533 = -0.340999127418*t1003*t5500;
  t5536 = t5526 + t5533;
  t5485 = -0.340999127418*t1003*t5483;
  t5501 = t1610*t5500;
  t5507 = t5485 + t5501;
  t5525 = t1590*t5507;
  t5544 = 0.340999127418*t783*t5536;
  t5562 = t5561*t1966;
  t5565 = t5525 + t5544 + t5562;
  t5576 = t2112*t5561;
  t5588 = t5536*t2120;
  t5589 = t5507*t2147;
  t5597 = t5576 + t5588 + t5589;
  t5599 = 0.340999127418*t783*t5507;
  t5607 = t2204*t5536;
  t5609 = t5561*t2268;
  t5611 = t5599 + t5607 + t5609;
  t5734 = -1.*t1831*t1376;
  t5740 = t5284*t1842;
  t5741 = t5500*t1883;
  t5746 = t5734 + t5740 + t5741;
  t5693 = t1262*t5500;
  t5694 = -1.*t1376*t1408;
  t5699 = t5290 + t5693 + t5694;
  t5707 = t1610*t5284;
  t5711 = -1.*t1376*t1653;
  t5731 = t5707 + t5533 + t5711;
  t5706 = 0.340999127418*t783*t5699;
  t5732 = t1590*t5731;
  t5762 = t5746*t1966;
  t5764 = t5706 + t5732 + t5762;
  t5772 = t2112*t5746;
  t5775 = t5699*t2120;
  t5777 = t5731*t2147;
  t5780 = t5772 + t5775 + t5777;
  t5784 = t2204*t5699;
  t5790 = 0.340999127418*t783*t5731;
  t5804 = t5746*t2268;
  t5811 = t5784 + t5790 + t5804;
  t5886 = -1.*t1069*t1376*t1072;
  t5892 = t1152*t1376*t1192;
  t5895 = t5886 + t5892;
  t5898 = -1.*t1152*t1069*t1376;
  t5904 = -1.*t1376*t1072*t1192;
  t5919 = t5898 + t5904;
  t5971 = -1.*t1066*t1831;
  t5973 = t5895*t1842;
  t5983 = t5919*t1883;
  t5987 = t5971 + t5973 + t5983;
  t5896 = -0.340999127418*t1003*t5895;
  t5926 = t1262*t5919;
  t5931 = -1.*t1066*t1408;
  t5938 = t5896 + t5926 + t5931;
  t5951 = t1610*t5895;
  t5956 = -0.340999127418*t1003*t5919;
  t5958 = -1.*t1066*t1653;
  t5960 = t5951 + t5956 + t5958;
  t5943 = 0.340999127418*t783*t5938;
  t5961 = t1590*t5960;
  t5997 = t5987*t1966;
  t5998 = t5943 + t5961 + t5997;
  t6004 = t2112*t5987;
  t6007 = t5938*t2120;
  t6009 = t5960*t2147;
  t6013 = t6004 + t6007 + t6009;
  t6020 = t2204*t5938;
  t6021 = 0.340999127418*t783*t5960;
  t6025 = t5987*t2268;
  t6026 = t6020 + t6021 + t6025;
  t6145 = -0.930418*t883*t5284;
  t6146 = -0.366501*t883*t5500;
  t6148 = 1.000000637725*t1376*t1395;
  t6152 = t6145 + t6146 + t6148;
  t6122 = -0.366501*t883*t1376;
  t6128 = -0.340999127418*t5284*t1395;
  t6130 = -0.134322983001*t5500*t1395;
  t6131 = t6122 + t6128 + t6130;
  t6111 = -0.930418*t883*t1376;
  t6112 = -0.8656776547239999*t5284*t1395;
  t6113 = -0.340999127418*t5500*t1395;
  t6116 = t6111 + t6112 + t6113;
  t6121 = t1590*t6116;
  t6143 = 0.340999127418*t783*t6131;
  t6159 = t6152*t1966;
  t6160 = t6121 + t6143 + t6159;
  t6162 = t2112*t6152;
  t6164 = t6131*t2120;
  t6170 = t6116*t2147;
  t6172 = t6162 + t6164 + t6170;
  t6177 = 0.340999127418*t783*t6116;
  t6178 = t2204*t6131;
  t6179 = t6152*t2268;
  t6180 = t6177 + t6178 + t6179;
  t6247 = -0.930418*t415*t5699;
  t6251 = 0.366501*t415*t5731;
  t6267 = -1.000000637725*t5746*t1906;
  t6268 = t6247 + t6251 + t6267;
  t6271 = -0.366501*t415*t5746;
  t6279 = 0.340999127418*t5699*t1906;
  t6281 = -0.134322983001*t5731*t1906;
  t6284 = t6271 + t6279 + t6281;
  t6291 = 0.930418*t415*t5746;
  t6296 = -0.8656776547239999*t5699*t1906;
  t6301 = 0.340999127418*t5731*t1906;
  t6302 = t6291 + t6296 + t6301;
  t2022 = 0.340999127418*t409*t2019;
  t2155 = t2035*t2154;
  t2358 = t2188*t2300;
  t2361 = t2022 + t2155 + t2358;
  t2366 = -0.657905*t2361;
  t2432 = t2389*t2019;
  t2452 = t2442*t2154;
  t2454 = 0.340999127418*t409*t2300;
  t2455 = t2432 + t2452 + t2454;
  t2469 = 0.259155*t2455;
  t2482 = t2477*t2019;
  t2488 = t2486*t2154;
  t2560 = t2554*t2300;
  t2566 = t2482 + t2488 + t2560;
  t2902 = 0.340999127418*t409*t2899;
  t2935 = t2035*t2934;
  t2958 = t2188*t2947;
  t2962 = t2902 + t2935 + t2958;
  t2963 = -0.657905*t2962;
  t2972 = t2389*t2899;
  t2973 = t2442*t2934;
  t2976 = 0.340999127418*t409*t2947;
  t2978 = t2972 + t2973 + t2976;
  t2979 = 0.259155*t2978;
  t2981 = t2477*t2899;
  t2985 = t2486*t2934;
  t2989 = t2554*t2947;
  t2990 = t2981 + t2985 + t2989;
  t3182 = 0.340999127418*t409*t3181;
  t3215 = t2035*t3204;
  t3243 = t2188*t3236;
  t3249 = t3182 + t3215 + t3243;
  t3252 = -0.657905*t3249;
  t3253 = t2389*t3181;
  t3257 = t2442*t3204;
  t3260 = 0.340999127418*t409*t3236;
  t3262 = t3253 + t3257 + t3260;
  t3267 = 0.259155*t3262;
  t3270 = t2477*t3181;
  t3276 = t2486*t3204;
  t3281 = t2554*t3236;
  t3284 = t3270 + t3276 + t3281;
  t3423 = -0.366501*t72*t3422;
  t3444 = -1.000000637725*t2028*t3443;
  t3465 = 0.930418*t72*t3462;
  t3479 = t3423 + t3444 + t3465;
  t3489 = 0.340999127418*t2028*t3422;
  t3490 = -0.930418*t72*t3443;
  t3498 = -0.8656776547239999*t2028*t3462;
  t3504 = t3489 + t3490 + t3498;
  t3507 = -0.657905*t3504;
  t3509 = -0.134322983001*t2028*t3422;
  t3511 = 0.366501*t72*t3443;
  t3516 = 0.340999127418*t2028*t3462;
  t3518 = t3509 + t3511 + t3516;
  t3519 = 0.259155*t3518;
  t3601 = 0.340999127418*t409*t3599;
  t3622 = t2035*t3612;
  t3642 = t2188*t3641;
  t3649 = t3601 + t3622 + t3642;
  t3650 = -0.657905*t3649;
  t3657 = t2389*t3599;
  t3661 = t2442*t3612;
  t3665 = 0.340999127418*t409*t3641;
  t3667 = t3657 + t3661 + t3665;
  t3677 = 0.259155*t3667;
  t3680 = t2477*t3599;
  t3681 = t2486*t3612;
  t3682 = t2554*t3641;
  t3684 = t3680 + t3681 + t3682;
  t3749 = 0.340999127418*t409*t3743;
  t3765 = t2035*t3762;
  t3800 = t2188*t3788;
  t3807 = t3749 + t3765 + t3800;
  t3808 = -0.657905*t3807;
  t3811 = t2389*t3743;
  t3815 = t2442*t3762;
  t3819 = 0.340999127418*t409*t3788;
  t3825 = t3811 + t3815 + t3819;
  t3841 = 0.259155*t3825;
  t3852 = t2477*t3743;
  t3859 = t2486*t3762;
  t3861 = t2554*t3788;
  t3875 = t3852 + t3859 + t3861;
  t3928 = t2035*t3927;
  t3954 = 0.340999127418*t409*t3953;
  t3968 = t2188*t3967;
  t3978 = t3928 + t3954 + t3968;
  t3980 = -0.657905*t3978;
  t3981 = t2442*t3927;
  t3983 = t2389*t3953;
  t3986 = 0.340999127418*t409*t3967;
  t3987 = t3981 + t3983 + t3986;
  t3991 = 0.259155*t3987;
  t3999 = t2486*t3927;
  t4001 = t2477*t3953;
  t4004 = t2554*t3967;
  t4009 = t3999 + t4001 + t4004;
  t4108 = 0.340999127418*t409*t4107;
  t4126 = t2035*t4124;
  t4144 = t2188*t4142;
  t4145 = t4108 + t4126 + t4144;
  t4149 = -0.657905*t4145;
  t4153 = t2389*t4107;
  t4157 = t2442*t4124;
  t4158 = 0.340999127418*t409*t4142;
  t4161 = t4153 + t4157 + t4158;
  t4166 = 0.259155*t4161;
  t4175 = t2477*t4107;
  t4177 = t2486*t4124;
  t4179 = t2554*t4142;
  t4181 = t4175 + t4177 + t4179;
  t4293 = 0.340999127418*t409*t4285;
  t4311 = t2035*t4310;
  t4334 = t2188*t4330;
  t4340 = t4293 + t4311 + t4334;
  t4345 = -0.657905*t4340;
  t4353 = t2389*t4285;
  t4354 = t2442*t4310;
  t4358 = 0.340999127418*t409*t4330;
  t4359 = t4353 + t4354 + t4358;
  t4363 = 0.259155*t4359;
  t4374 = t2477*t4285;
  t4376 = t2486*t4310;
  t4377 = t2554*t4330;
  t4381 = t4374 + t4376 + t4377;
  t4486 = 0.340999127418*t409*t4482;
  t4520 = t2035*t4513;
  t4546 = t2188*t4544;
  t4548 = t4486 + t4520 + t4546;
  t4549 = -0.657905*t4548;
  t4559 = t2389*t4482;
  t4564 = t2442*t4513;
  t4570 = 0.340999127418*t409*t4544;
  t4572 = t4559 + t4564 + t4570;
  t4579 = 0.259155*t4572;
  t4584 = t2477*t4482;
  t4588 = t2486*t4513;
  t4594 = t2554*t4544;
  t4601 = t4584 + t4588 + t4594;
  t4629 = 0.340999127418*t409*t3422;
  t4638 = t2035*t3443;
  t4645 = t2188*t3462;
  t4646 = t4629 + t4638 + t4645;
  t4647 = -0.657905*t4646;
  t4648 = t2389*t3422;
  t4653 = t2442*t3443;
  t4654 = 0.340999127418*t409*t3462;
  t4656 = t4648 + t4653 + t4654;
  t4660 = 0.259155*t4656;
  t4663 = t2477*t3422;
  t4666 = t2486*t3443;
  t4669 = t2554*t3462;
  t4673 = t4663 + t4666 + t4669;
  t4762 = -0.366501*t72*t4754;
  t4794 = -1.000000637725*t2028*t4790;
  t4827 = 0.930418*t72*t4822;
  t4832 = t4762 + t4794 + t4827;
  t4844 = 0.340999127418*t2028*t4754;
  t4852 = -0.930418*t72*t4790;
  t4863 = -0.8656776547239999*t2028*t4822;
  t4868 = t4844 + t4852 + t4863;
  t4873 = -0.657905*t4868;
  t4876 = -0.134322983001*t2028*t4754;
  t4886 = 0.366501*t72*t4790;
  t4887 = 0.340999127418*t2028*t4822;
  t4894 = t4876 + t4886 + t4887;
  t4897 = 0.259155*t4894;
  t4987 = 0.340999127418*t409*t4984;
  t5022 = t2035*t5018;
  t5053 = t2188*t5052;
  t5058 = t4987 + t5022 + t5053;
  t5061 = -0.657905*t5058;
  t5063 = t2389*t4984;
  t5068 = t2442*t5018;
  t5086 = 0.340999127418*t409*t5052;
  t5091 = t5063 + t5068 + t5086;
  t5092 = 0.259155*t5091;
  t5094 = t2477*t4984;
  t5103 = t2486*t5018;
  t5110 = t2554*t5052;
  t5113 = t5094 + t5103 + t5110;
  t5149 = t2035*t5142;
  t5178 = 0.340999127418*t409*t5177;
  t5199 = t2188*t5198;
  t5200 = t5149 + t5178 + t5199;
  t5203 = -0.657905*t5200;
  t5205 = t2442*t5142;
  t5209 = t2389*t5177;
  t5212 = 0.340999127418*t409*t5198;
  t5213 = t5205 + t5209 + t5212;
  t5220 = 0.259155*t5213;
  t5221 = t2486*t5142;
  t5222 = t2477*t5177;
  t5224 = t2554*t5198;
  t5225 = t5221 + t5222 + t5224;
  t5357 = 0.340999127418*t409*t5354;
  t5384 = t2035*t5378;
  t5403 = t2188*t5400;
  t5409 = t5357 + t5384 + t5403;
  t5410 = -0.657905*t5409;
  t5425 = t2389*t5354;
  t5426 = t2442*t5378;
  t5428 = 0.340999127418*t409*t5400;
  t5429 = t5425 + t5426 + t5428;
  t5438 = 0.259155*t5429;
  t5442 = t2477*t5354;
  t5449 = t2486*t5378;
  t5456 = t2554*t5400;
  t5465 = t5442 + t5449 + t5456;
  t5572 = 0.340999127418*t409*t5565;
  t5598 = t2035*t5597;
  t5616 = t2188*t5611;
  t5621 = t5572 + t5598 + t5616;
  t5625 = -0.657905*t5621;
  t5640 = t2389*t5565;
  t5641 = t2442*t5597;
  t5644 = 0.340999127418*t409*t5611;
  t5647 = t5640 + t5641 + t5644;
  t5656 = 0.259155*t5647;
  t5663 = t2477*t5565;
  t5667 = t2486*t5597;
  t5670 = t2554*t5611;
  t5675 = t5663 + t5667 + t5670;
  t5765 = -0.366501*t72*t5764;
  t5782 = -1.000000637725*t2028*t5780;
  t5819 = 0.930418*t72*t5811;
  t5828 = t5765 + t5782 + t5819;
  t5842 = 0.340999127418*t2028*t5764;
  t5843 = -0.930418*t72*t5780;
  t5861 = -0.8656776547239999*t2028*t5811;
  t5867 = t5842 + t5843 + t5861;
  t5870 = -0.657905*t5867;
  t5872 = -0.134322983001*t2028*t5764;
  t5877 = 0.366501*t72*t5780;
  t5878 = 0.340999127418*t2028*t5811;
  t5879 = t5872 + t5877 + t5878;
  t5880 = 0.259155*t5879;
  t6000 = 0.340999127418*t409*t5998;
  t6016 = t2035*t6013;
  t6030 = t2188*t6026;
  t6033 = t6000 + t6016 + t6030;
  t6035 = -0.657905*t6033;
  t6044 = t2389*t5998;
  t6046 = t2442*t6013;
  t6048 = 0.340999127418*t409*t6026;
  t6052 = t6044 + t6046 + t6048;
  t6053 = 0.259155*t6052;
  t6077 = t2477*t5998;
  t6079 = t2486*t6013;
  t6093 = t2554*t6026;
  t6098 = t6077 + t6079 + t6093;
  t6161 = 0.340999127418*t409*t6160;
  t6174 = t2035*t6172;
  t6186 = t2188*t6180;
  t6190 = t6161 + t6174 + t6186;
  t6191 = -0.657905*t6190;
  t6192 = t2389*t6160;
  t6193 = t2442*t6172;
  t6203 = 0.340999127418*t409*t6180;
  t6207 = t6192 + t6193 + t6203;
  t6212 = 0.259155*t6207;
  t6213 = t2477*t6160;
  t6215 = t2486*t6172;
  t6220 = t2554*t6180;
  t6221 = t6213 + t6215 + t6220;
  t6269 = t2035*t6268;
  t6288 = 0.340999127418*t409*t6284;
  t6304 = t2188*t6302;
  t6308 = t6269 + t6288 + t6304;
  t6310 = -0.657905*t6308;
  t6317 = t2442*t6268;
  t6319 = t2389*t6284;
  t6338 = 0.340999127418*t409*t6302;
  t6340 = t6317 + t6319 + t6338;
  t6341 = 0.259155*t6340;
  t6342 = t2486*t6268;
  t6346 = t2477*t6284;
  t6348 = t2554*t6302;
  t6353 = t6342 + t6346 + t6348;
  t6993 = -3.2909349868922137e-7*var1[7];
  t6994 = 0.03103092645718495*t1003;
  t6997 = -0.045000372235*t1408;
  t7002 = t6993 + t6994 + t6997;
  t7009 = 1.296332362046933e-7*var1[7];
  t7010 = 0.07877668146182712*t1003;
  t7016 = -0.045000372235*t1653;
  t7018 = t7009 + t7010 + t7016;
  t7051 = 3.2909349868922137e-7*var1[8];
  t7052 = 0.055653945343889656*t783;
  t7058 = -0.045000372235*t1966;
  t7062 = t7051 + t7052 + t7058;
  t7077 = -1.5981976069815686e-7*var1[9];
  t7081 = 0.08675267452931407*t409;
  t7083 = 0.039853013046*t2442;
  t7085 = t7077 + t7081 + t7083;
  t7088 = -0.04500040093286238*t783;
  t7091 = -0.141285834136*t2120;
  t7092 = 0.055653909852*t2147;
  t7094 = 0. + t7088 + t7091 + t7092;
  t7103 = 0.039853038461262744*t409;
  t7104 = 0.086752619205*t2477;
  t7105 = -0.22023459268999998*t2554;
  t7108 = 0. + t7103 + t7104 + t7105;
  t7121 = 1.296332362046933e-7*var1[8];
  t7124 = -0.14128592423750855*t783;
  t7128 = -0.045000372235*t2268;
  t7129 = t7121 + t7124 + t7128;
  t7139 = -6.295460977284962e-8*var1[9];
  t7141 = -0.22023473313910558*t409;
  t7148 = 0.039853013046*t2035;
  t7150 = t7139 + t7141 + t7148;
  t6945 = -1.*t1069;
  t6950 = 1. + t6945;
  t6952 = 0.091*t6950;
  t6955 = 0. + t6952;
  t6958 = 0.091*t1192;
  t6961 = 0. + t6958;
  t6975 = -0.04500040093286238*t1003;
  t6982 = 0.07877663122399998*t1842;
  t6985 = 0.031030906668*t1883;
  t6989 = 0. + t6975 + t6982 + t6985;
  t7268 = 0.014606169134372047*t72;
  t7270 = 0.08675267452931407*t2028;
  t7271 = -1.5981976069815686e-7 + t7268 + t7270;
  t7276 = -0.23670515095269612*t72;
  t7279 = 0.039853038461262744*t2028;
  t7284 = t7276 + t7279;
  t7286 = -0.03707996069223323*t72;
  t7295 = -0.22023473313910558*t2028;
  t7301 = -6.295460977284962e-8 + t7286 + t7295;
  t7380 = -0.0846680539949003*t883;
  t7381 = -0.04500040093286238*t1395;
  t7386 = t7380 + t7381;
  t7395 = -0.016492681424499736*t883;
  t7396 = 0.03103092645718495*t1395;
  t7402 = -3.2909349868922137e-7 + t7395 + t7396;
  t7405 = -0.04186915633414423*t883;
  t7407 = 0.07877668146182712*t1395;
  t7410 = 1.296332362046933e-7 + t7405 + t7407;
  t7449 = -0.04186915633414423*t415;
  t7469 = -0.14128592423750855*t1906;
  t7489 = 1.296332362046933e-7 + t7449 + t7469;
  t7508 = 0.15185209683981668*t415;
  t7509 = -0.04500040093286238*t1906;
  t7512 = t7508 + t7509;
  t7527 = 0.016492681424499736*t415;
  t7548 = 0.055653945343889656*t1906;
  t7551 = 3.2909349868922137e-7 + t7527 + t7548;
  p_output1[0]=(t3650 + t3677 - 0.707107*t3684)*var2[3] + (t2366 + t2469 - 0.707107*t2566)*var2[4] + (t3252 + t3267 - 0.707107*t3284)*var2[5] + (t2963 + t2979 - 0.707107*t2990)*var2[6] + (t3808 + t3841 - 0.707107*t3875)*var2[7] + (t3980 + t3991 - 0.707107*t4009)*var2[8] + (-0.707107*t3479 + t3507 + t3519)*var2[9];
  p_output1[1]=(t4647 + t4660 - 0.707107*t4673)*var2[3] + (t4149 + t4166 - 0.707107*t4181)*var2[4] + (t4549 + t4579 - 0.707107*t4601)*var2[5] + (t4345 + t4363 - 0.707107*t4381)*var2[6] + (t5061 + t5092 - 0.707107*t5113)*var2[7] + (t5203 + t5220 - 0.707107*t5225)*var2[8] + (-0.707107*t4832 + t4873 + t4897)*var2[9];
  p_output1[2]=(t6035 + t6053 - 0.707107*t6098)*var2[4] + (t5625 + t5656 - 0.707107*t5675)*var2[5] + (t5410 + t5438 - 0.707107*t5465)*var2[6] + (t6191 + t6212 - 0.707107*t6221)*var2[7] + (t6310 + t6341 - 0.707107*t6353)*var2[8] + (-0.707107*t5828 + t5870 + t5880)*var2[9];
  p_output1[3]=0;
  p_output1[4]=(t3650 + t3677 + 0.707107*t3684)*var2[3] + (t2366 + t2469 + 0.707107*t2566)*var2[4] + (t3252 + t3267 + 0.707107*t3284)*var2[5] + (t2963 + t2979 + 0.707107*t2990)*var2[6] + (t3808 + t3841 + 0.707107*t3875)*var2[7] + (t3980 + t3991 + 0.707107*t4009)*var2[8] + (0.707107*t3479 + t3507 + t3519)*var2[9];
  p_output1[5]=(t4647 + t4660 + 0.707107*t4673)*var2[3] + (t4149 + t4166 + 0.707107*t4181)*var2[4] + (t4549 + t4579 + 0.707107*t4601)*var2[5] + (t4345 + t4363 + 0.707107*t4381)*var2[6] + (t5061 + t5092 + 0.707107*t5113)*var2[7] + (t5203 + t5220 + 0.707107*t5225)*var2[8] + (0.707107*t4832 + t4873 + t4897)*var2[9];
  p_output1[6]=(t6035 + t6053 + 0.707107*t6098)*var2[4] + (t5625 + t5656 + 0.707107*t5675)*var2[5] + (t5410 + t5438 + 0.707107*t5465)*var2[6] + (t6191 + t6212 + 0.707107*t6221)*var2[7] + (t6310 + t6341 + 0.707107*t6353)*var2[8] + (0.707107*t5828 + t5870 + t5880)*var2[9];
  p_output1[7]=0;
  p_output1[8]=(-0.366501*t3649 - 0.930418*t3667)*var2[3] + (-0.366501*t2361 - 0.930418*t2455)*var2[4] + (-0.366501*t3249 - 0.930418*t3262)*var2[5] + (-0.366501*t2962 - 0.930418*t2978)*var2[6] + (-0.366501*t3807 - 0.930418*t3825)*var2[7] + (-0.366501*t3978 - 0.930418*t3987)*var2[8] + (-0.366501*t3504 - 0.930418*t3518)*var2[9];
  p_output1[9]=(-0.366501*t4646 - 0.930418*t4656)*var2[3] + (-0.366501*t4145 - 0.930418*t4161)*var2[4] + (-0.366501*t4548 - 0.930418*t4572)*var2[5] + (-0.366501*t4340 - 0.930418*t4359)*var2[6] + (-0.366501*t5058 - 0.930418*t5091)*var2[7] + (-0.366501*t5200 - 0.930418*t5213)*var2[8] + (-0.366501*t4868 - 0.930418*t4894)*var2[9];
  p_output1[10]=(-0.366501*t6033 - 0.930418*t6052)*var2[4] + (-0.366501*t5621 - 0.930418*t5647)*var2[5] + (-0.366501*t5409 - 0.930418*t5429)*var2[6] + (-0.366501*t6190 - 0.930418*t6207)*var2[7] + (-0.366501*t6308 - 0.930418*t6340)*var2[8] + (-0.366501*t5867 - 0.930418*t5879)*var2[9];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (-0.274521*t3649 + 0.197083*t3667 - 0.010507*t3684 + t3525*t6955 + t3539*t6961 - 1.*t1066*t2596*t6989 + t3565*t7002 + t3546*t7018 + t3581*t7062 + t3599*t7085 + t3596*t7094 + t3612*t7108 + t3570*t7129 + t3641*t7150)*var2[3] + (-0.274521*t2361 + 0.197083*t2455 - 0.010507*t2566 + t1050*t1066*t1072*t6955 + t1050*t1066*t1152*t6961 - 1.*t1050*t1376*t6989 + t1363*t7002 + t1197*t7018 + t1703*t7062 + t2019*t7085 + t1894*t7094 + t2154*t7108 + t1464*t7129 + t2300*t7150)*var2[4] + (-0.274521*t3249 + 0.197083*t3262 - 0.010507*t3284 + t2664*t6955 + t3033*t6961 + t3093*t7002 + t3122*t7018 + t3138*t7062 + t3181*t7085 + t3173*t7094 + t3204*t7108 + t3161*t7129 + t3236*t7150)*var2[5] + (0.091*t1192*t2625 + 0.091*t1069*t2664 - 0.274521*t2962 + 0.197083*t2978 - 0.010507*t2990 + t2727*t7002 + t2752*t7018 + t2770*t7062 + t2899*t7085 + t2847*t7094 + t2934*t7108 + t2815*t7129 + t2947*t7150)*var2[6] + (-0.274521*t3807 + 0.197083*t3825 - 0.010507*t3875 + t3713*t7062 + t3743*t7085 + t3741*t7094 + t3762*t7108 + t3720*t7129 + t3788*t7150 + t1050*t1066*t7386 + t3308*t7402 + t2727*t7410)*var2[7] + (-0.274521*t3978 + 0.197083*t3987 - 0.010507*t4009 + t3953*t7085 + t3927*t7108 + t3967*t7150 + t3337*t7489 + t3402*t7512 + t3361*t7551)*var2[8] + (-0.010507*t3479 - 0.274521*t3504 + 0.197083*t3518 + t3422*t7271 + t3443*t7284 + t3462*t7301)*var2[9];
  p_output1[13]=var2[1] + (-0.274521*t4646 + 0.197083*t4656 - 0.010507*t4673 + t2625*t6955 + t2664*t6961 + t1050*t1066*t6989 + t3308*t7002 + t2727*t7018 + t3361*t7062 + t3422*t7085 + t3402*t7094 + t3443*t7108 + t3337*t7129 + t3462*t7150)*var2[3] + (-0.274521*t4145 + 0.197083*t4161 - 0.010507*t4181 + t1066*t1072*t2596*t6955 + t1066*t1152*t2596*t6961 - 1.*t1376*t2596*t6989 + t4048*t7002 + t4040*t7018 + t4077*t7062 + t4107*t7085 + t4094*t7094 + t4124*t7108 + t4062*t7129 + t4142*t7150)*var2[4] + (-0.274521*t4548 + 0.197083*t4572 - 0.010507*t4601 + t4206*t6955 + t3525*t6961 + t4405*t7002 + t4415*t7018 + t4424*t7062 + t4482*t7085 + t4477*t7094 + t4513*t7108 + t4459*t7129 + t4544*t7150)*var2[5] + (0.091*t1192*t4201 + 0.091*t1069*t4206 - 0.274521*t4340 + 0.197083*t4359 - 0.010507*t4381 + t4212*t7002 + t4222*t7018 + t4225*t7062 + t4285*t7085 + t4281*t7094 + t4310*t7108 + t4252*t7129 + t4330*t7150)*var2[6] + (-0.274521*t5058 + 0.197083*t5091 - 0.010507*t5113 + t4925*t7062 + t4984*t7085 + t4974*t7094 + t5018*t7108 + t4951*t7129 + t5052*t7150 + t1066*t2596*t7386 + t4690*t7402 + t4212*t7410)*var2[7] + (-0.274521*t5200 + 0.197083*t5213 - 0.010507*t5225 + t5177*t7085 + t5142*t7108 + t5198*t7150 + t4707*t7489 + t4739*t7512 + t4727*t7551)*var2[8] + (-0.010507*t4832 - 0.274521*t4868 + 0.197083*t4894 + t4754*t7271 + t4790*t7284 + t4822*t7301)*var2[9];
  p_output1[14]=var2[2] + (-0.274521*t6033 + 0.197083*t6052 - 0.010507*t6098 - 1.*t1072*t1376*t6955 - 1.*t1152*t1376*t6961 - 1.*t1066*t6989 + t5919*t7002 + t5895*t7018 + t5960*t7062 + t5998*t7085 + t5987*t7094 + t6013*t7108 + t5938*t7129 + t6026*t7150)*var2[4] + (-0.274521*t5621 + 0.197083*t5647 - 0.010507*t5675 + t1066*t1152*t6955 - 1.*t1066*t1072*t6961 + t5483*t7002 + t5500*t7018 + t5507*t7062 + t5565*t7085 + t5561*t7094 + t5597*t7108 + t5536*t7129 + t5611*t7150)*var2[5] + (0.091*t1066*t1069*t1152 + 0.091*t1066*t1072*t1192 - 0.274521*t5409 + 0.197083*t5429 - 0.010507*t5465 + t5284*t7002 + t5309*t7018 + t5314*t7062 + t5354*t7085 + t5346*t7094 + t5378*t7108 + t5327*t7129 + t5400*t7150)*var2[6] + (-0.274521*t6190 + 0.197083*t6207 - 0.010507*t6221 + t6116*t7062 + t6160*t7085 + t6152*t7094 + t6172*t7108 + t6131*t7129 + t6180*t7150 - 1.*t1376*t7386 + t5500*t7402 + t5284*t7410)*var2[7] + (-0.274521*t6308 + 0.197083*t6340 - 0.010507*t6353 + t6284*t7085 + t6268*t7108 + t6302*t7150 + t5699*t7489 + t5746*t7512 + t5731*t7551)*var2[8] + (-0.010507*t5828 - 0.274521*t5867 + 0.197083*t5879 + t5764*t7271 + t5780*t7284 + t5811*t7301)*var2[9];
  p_output1[15]=0;
}



void dT_left_knee_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
