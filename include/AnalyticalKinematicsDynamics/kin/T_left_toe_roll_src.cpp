/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:07:23 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "T_left_toe_roll_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t201;
  double t186;
  double t205;
  double t196;
  double t210;
  double t174;
  double t176;
  double t181;
  double t184;
  double t231;
  double t237;
  double t241;
  double t197;
  double t214;
  double t224;
  double t243;
  double t160;
  double t161;
  double t170;
  double t229;
  double t259;
  double t260;
  double t278;
  double t282;
  double t296;
  double t304;
  double t311;
  double t425;
  double t426;
  double t428;
  double t430;
  double t443;
  double t445;
  double t446;
  double t447;
  double t448;
  double t449;
  double t262;
  double t263;
  double t269;
  double t300;
  double t321;
  double t322;
  double t325;
  double t335;
  double t451;
  double t346;
  double t351;
  double t391;
  double t397;
  double t398;
  double t403;
  double t409;
  double t414;
  double t144;
  double t145;
  double t159;
  double t131;
  double t336;
  double t339;
  double t343;
  double t418;
  double t484;
  double t490;
  double t499;
  double t506;
  double t516;
  double t539;
  double t544;
  double t545;
  double t559;
  double t596;
  double t605;
  double t609;
  double t611;
  double t613;
  double t617;
  double t651;
  double t657;
  double t662;
  double t677;
  double t680;
  double t683;
  double t689;
  double t690;
  double t813;
  double t816;
  double t822;
  double t513;
  double t529;
  double t536;
  double t619;
  double t643;
  double t650;
  double t709;
  double t716;
  double t732;
  double t738;
  double t745;
  double t747;
  double t757;
  double t759;
  double t775;
  double t782;
  double t832;
  double t838;
  double t846;
  double t848;
  double t857;
  double t858;
  double t861;
  double t864;
  double t873;
  double t888;
  double t912;
  double t917;
  double t923;
  double t41;
  double t43;
  double t47;
  double t62;
  double t132;
  double t133;
  double t722;
  double t723;
  double t730;
  double t787;
  double t823;
  double t831;
  double t903;
  double t907;
  double t929;
  double t931;
  double t935;
  double t948;
  double t949;
  double t981;
  double t998;
  double t999;
  double t1023;
  double t1024;
  double t1025;
  double t1028;
  double t1031;
  double t1032;
  double t1044;
  double t1046;
  double t1064;
  double t1063;
  double t128;
  double t129;
  double t911;
  double t1003;
  double t1010;
  double t1011;
  double t1047;
  double t1048;
  double t1074;
  double t1085;
  double t1092;
  double t1123;
  double t1125;
  double t1130;
  double t1133;
  double t1142;
  double t1185;
  double t1196;
  double t1201;
  double t1202;
  double t1214;
  double t1219;
  double t1226;
  double t1228;
  double t1230;
  double t1232;
  double t51;
  double t57;
  double t1345;
  double t1349;
  double t1354;
  double t1330;
  double t1333;
  double t1340;
  double t1344;
  double t1357;
  double t1363;
  double t1380;
  double t1397;
  double t1398;
  double t1471;
  double t1480;
  double t1485;
  double t1488;
  double t1367;
  double t1399;
  double t1400;
  double t1402;
  double t1413;
  double t1432;
  double t1443;
  double t1448;
  double t1406;
  double t1464;
  double t1491;
  double t1497;
  double t1501;
  double t1505;
  double t1508;
  double t1509;
  double t1540;
  double t1545;
  double t1547;
  double t1557;
  double t1498;
  double t1528;
  double t1561;
  double t1562;
  double t1570;
  double t1575;
  double t1576;
  double t1579;
  double t1588;
  double t1593;
  double t1599;
  double t1605;
  double t1071;
  double t1073;
  double t1564;
  double t1583;
  double t1608;
  double t1609;
  double t1612;
  double t1624;
  double t1633;
  double t1637;
  double t1644;
  double t1645;
  double t1647;
  double t1650;
  double t1171;
  double t1175;
  double t1176;
  double t1269;
  double t1270;
  double t1611;
  double t1639;
  double t1655;
  double t1659;
  double t1280;
  double t1285;
  double t1680;
  double t1683;
  double t1687;
  double t1689;
  double t1296;
  double t1300;
  double t1301;
  double t1695;
  double t1707;
  double t1710;
  double t1713;
  double t1764;
  double t1773;
  double t1774;
  double t1784;
  double t1788;
  double t1790;
  double t1849;
  double t1852;
  double t1857;
  double t1860;
  double t1778;
  double t1796;
  double t1804;
  double t1807;
  double t1821;
  double t1834;
  double t1838;
  double t1839;
  double t1820;
  double t1846;
  double t1864;
  double t1871;
  double t1874;
  double t1875;
  double t1876;
  double t1878;
  double t1885;
  double t1886;
  double t1888;
  double t1892;
  double t1873;
  double t1880;
  double t1907;
  double t1908;
  double t1913;
  double t1918;
  double t1922;
  double t1923;
  double t1934;
  double t1937;
  double t1939;
  double t1941;
  double t1910;
  double t1926;
  double t1949;
  double t1951;
  double t1964;
  double t1966;
  double t1967;
  double t1969;
  double t1982;
  double t1990;
  double t1993;
  double t2007;
  double t1963;
  double t1972;
  double t2009;
  double t2010;
  double t2014;
  double t2020;
  double t2021;
  double t2023;
  double t2036;
  double t2039;
  double t2040;
  double t2041;
  double t1058;
  double t1151;
  double t1249;
  double t1255;
  double t1271;
  double t1291;
  double t1304;
  double t1315;
  double t2116;
  double t2120;
  double t2125;
  double t2128;
  double t2133;
  double t2134;
  double t1661;
  double t1691;
  double t1715;
  double t1720;
  double t1723;
  double t1730;
  double t1731;
  double t1732;
  double t2011;
  double t2026;
  double t2053;
  double t2056;
  double t2061;
  double t2062;
  double t2067;
  double t2068;
  double t2121;
  double t2132;
  double t2137;
  double t2138;
  double t2155;
  double t2156;
  double t2158;
  double t2161;
  double t2177;
  double t2178;
  double t2179;
  double t2182;
  double t2329;
  double t2347;
  double t2316;
  double t2231;
  double t2232;
  double t2234;
  double t2235;
  double t2241;
  double t2249;
  double t2251;
  double t2257;
  double t2264;
  double t2274;
  double t2281;
  double t2285;
  double t2286;
  double t2288;
  double t2294;
  double t2298;
  double t2300;
  double t2303;
  double t2312;
  double t2315;
  double t2319;
  double t2328;
  double t2331;
  double t2333;
  double t2334;
  double t2338;
  double t2340;
  double t2341;
  double t2342;
  double t2348;
  double t2351;
  double t2352;
  double t2358;
  double t2363;
  double t2366;
  double t2367;
  double t2369;
  double t2371;
  double t2373;
  double t2378;
  double t2383;
  double t2385;
  double t2396;
  double t2405;
  double t2409;
  double t2412;
  double t2413;
  double t2415;
  double t2421;
  double t2424;
  double t2427;
  double t2430;
  double t2431;
  double t2432;
  double t2440;
  double t2446;
  double t2448;
  double t2450;
  double t2451;
  double t2454;
  double t2459;
  double t2462;
  double t2469;
  double t2474;
  double t2479;
  double t2481;
  double t2483;
  double t2489;
  double t2492;
  double t2493;
  double t2496;
  double t2499;
  double t2505;
  double t2507;
  double t2508;
  double t2511;
  double t2519;
  double t2522;
  double t2525;
  double t2528;
  double t2532;
  double t2534;
  double t2536;
  double t2540;
  double t2543;
  double t2556;
  double t2568;
  t201 = Cos(var1[3]);
  t186 = Cos(var1[5]);
  t205 = Sin(var1[4]);
  t196 = Sin(var1[3]);
  t210 = Sin(var1[5]);
  t174 = Cos(var1[7]);
  t176 = -1.*t174;
  t181 = 1. + t176;
  t184 = Cos(var1[6]);
  t231 = t201*t186*t205;
  t237 = t196*t210;
  t241 = t231 + t237;
  t197 = -1.*t186*t196;
  t214 = t201*t205*t210;
  t224 = t197 + t214;
  t243 = Sin(var1[6]);
  t160 = Cos(var1[8]);
  t161 = -1.*t160;
  t170 = 1. + t161;
  t229 = t184*t224;
  t259 = -1.*t241*t243;
  t260 = t229 + t259;
  t278 = t184*t241;
  t282 = t224*t243;
  t296 = t278 + t282;
  t304 = Cos(var1[4]);
  t311 = Sin(var1[7]);
  t425 = -1.000000637725*t181;
  t426 = 1. + t425;
  t428 = t201*t304*t426;
  t430 = -0.930418*t311;
  t443 = 0. + t430;
  t445 = t260*t443;
  t446 = -0.366501*t311;
  t447 = 0. + t446;
  t448 = t296*t447;
  t449 = t428 + t445 + t448;
  t262 = -0.340999127418*t181*t260;
  t263 = -0.134322983001*t181;
  t269 = 1. + t263;
  t300 = t269*t296;
  t321 = 0.366501*t311;
  t322 = 0. + t321;
  t325 = t201*t304*t322;
  t335 = t262 + t300 + t325;
  t451 = Sin(var1[8]);
  t346 = -0.8656776547239999*t181;
  t351 = 1. + t346;
  t391 = t351*t260;
  t397 = -0.340999127418*t181*t296;
  t398 = 0.930418*t311;
  t403 = 0. + t398;
  t409 = t201*t304*t403;
  t414 = t391 + t397 + t409;
  t144 = Cos(var1[9]);
  t145 = -1.*t144;
  t159 = 1. + t145;
  t131 = Sin(var1[10]);
  t336 = 0.340999127418*t170*t335;
  t339 = -0.134322983001*t170;
  t343 = 1. + t339;
  t418 = t343*t414;
  t484 = -0.366501*t451;
  t490 = 0. + t484;
  t499 = t449*t490;
  t506 = t336 + t418 + t499;
  t516 = Sin(var1[9]);
  t539 = -1.000000637725*t170;
  t544 = 1. + t539;
  t545 = t544*t449;
  t559 = -0.930418*t451;
  t596 = 0. + t559;
  t605 = t335*t596;
  t609 = 0.366501*t451;
  t611 = 0. + t609;
  t613 = t414*t611;
  t617 = t545 + t605 + t613;
  t651 = -0.8656776547239999*t170;
  t657 = 1. + t651;
  t662 = t657*t335;
  t677 = 0.340999127418*t170*t414;
  t680 = 0.930418*t451;
  t683 = 0. + t680;
  t689 = t449*t683;
  t690 = t662 + t677 + t689;
  t813 = Cos(var1[10]);
  t816 = -1.*t813;
  t822 = 1. + t816;
  t513 = 0.340999127418*t159*t506;
  t529 = -0.930418*t516;
  t536 = 0. + t529;
  t619 = t536*t617;
  t643 = -0.8656776547239999*t159;
  t650 = 1. + t643;
  t709 = t650*t690;
  t716 = t513 + t619 + t709;
  t732 = -0.134322983001*t159;
  t738 = 1. + t732;
  t745 = t738*t506;
  t747 = 0.366501*t516;
  t757 = 0. + t747;
  t759 = t757*t617;
  t775 = 0.340999127418*t159*t690;
  t782 = t745 + t759 + t775;
  t832 = -0.366501*t516;
  t838 = 0. + t832;
  t846 = t838*t506;
  t848 = -1.000000637725*t159;
  t857 = 1. + t848;
  t858 = t857*t617;
  t861 = 0.930418*t516;
  t864 = 0. + t861;
  t873 = t864*t690;
  t888 = t846 + t858 + t873;
  t912 = Cos(var1[11]);
  t917 = -1.*t912;
  t923 = 1. + t917;
  t41 = Cos(var1[12]);
  t43 = -1.*t41;
  t47 = 1. + t43;
  t62 = Sin(var1[11]);
  t132 = 0.930418*t131;
  t133 = 0. + t132;
  t722 = t133*t716;
  t723 = -0.366501*t131;
  t730 = 0. + t723;
  t787 = t730*t782;
  t823 = -1.000000637725*t822;
  t831 = 1. + t823;
  t903 = t831*t888;
  t907 = t722 + t787 + t903;
  t929 = -0.8656776547239999*t822;
  t931 = 1. + t929;
  t935 = t931*t716;
  t948 = 0.340999127418*t822*t782;
  t949 = -0.930418*t131;
  t981 = 0. + t949;
  t998 = t981*t888;
  t999 = t935 + t948 + t998;
  t1023 = 0.340999127418*t822*t716;
  t1024 = -0.134322983001*t822;
  t1025 = 1. + t1024;
  t1028 = t1025*t782;
  t1031 = 0.366501*t131;
  t1032 = 0. + t1031;
  t1044 = t1032*t888;
  t1046 = t1023 + t1028 + t1044;
  t1064 = Sin(var1[12]);
  t1063 = -0.120666640478*t47;
  t128 = 0.366501*t62;
  t129 = 0. + t128;
  t911 = t129*t907;
  t1003 = 0.340999127418*t923*t999;
  t1010 = -0.134322983001*t923;
  t1011 = 1. + t1010;
  t1047 = t1011*t1046;
  t1048 = t911 + t1003 + t1047;
  t1074 = -0.930418*t62;
  t1085 = 0. + t1074;
  t1092 = t1085*t907;
  t1123 = -0.8656776547239999*t923;
  t1125 = 1. + t1123;
  t1130 = t1125*t999;
  t1133 = 0.340999127418*t923*t1046;
  t1142 = t1092 + t1130 + t1133;
  t1185 = -1.000000637725*t923;
  t1196 = 1. + t1185;
  t1201 = t1196*t907;
  t1202 = 0.930418*t62;
  t1214 = 0. + t1202;
  t1219 = t1214*t999;
  t1226 = -0.366501*t62;
  t1228 = 0. + t1226;
  t1230 = t1228*t1046;
  t1232 = t1201 + t1219 + t1230;
  t51 = -0.952469601425*t47;
  t57 = 1. + t51;
  t1345 = t186*t196*t205;
  t1349 = -1.*t201*t210;
  t1354 = t1345 + t1349;
  t1330 = t201*t186;
  t1333 = t196*t205*t210;
  t1340 = t1330 + t1333;
  t1344 = t184*t1340;
  t1357 = -1.*t1354*t243;
  t1363 = t1344 + t1357;
  t1380 = t184*t1354;
  t1397 = t1340*t243;
  t1398 = t1380 + t1397;
  t1471 = t304*t426*t196;
  t1480 = t1363*t443;
  t1485 = t1398*t447;
  t1488 = t1471 + t1480 + t1485;
  t1367 = -0.340999127418*t181*t1363;
  t1399 = t269*t1398;
  t1400 = t304*t196*t322;
  t1402 = t1367 + t1399 + t1400;
  t1413 = t351*t1363;
  t1432 = -0.340999127418*t181*t1398;
  t1443 = t304*t196*t403;
  t1448 = t1413 + t1432 + t1443;
  t1406 = 0.340999127418*t170*t1402;
  t1464 = t343*t1448;
  t1491 = t1488*t490;
  t1497 = t1406 + t1464 + t1491;
  t1501 = t544*t1488;
  t1505 = t1402*t596;
  t1508 = t1448*t611;
  t1509 = t1501 + t1505 + t1508;
  t1540 = t657*t1402;
  t1545 = 0.340999127418*t170*t1448;
  t1547 = t1488*t683;
  t1557 = t1540 + t1545 + t1547;
  t1498 = 0.340999127418*t159*t1497;
  t1528 = t536*t1509;
  t1561 = t650*t1557;
  t1562 = t1498 + t1528 + t1561;
  t1570 = t738*t1497;
  t1575 = t757*t1509;
  t1576 = 0.340999127418*t159*t1557;
  t1579 = t1570 + t1575 + t1576;
  t1588 = t838*t1497;
  t1593 = t857*t1509;
  t1599 = t864*t1557;
  t1605 = t1588 + t1593 + t1599;
  t1071 = 0.803828*t1064;
  t1073 = t1063 + t1071;
  t1564 = t133*t1562;
  t1583 = t730*t1579;
  t1608 = t831*t1605;
  t1609 = t1564 + t1583 + t1608;
  t1612 = t931*t1562;
  t1624 = 0.340999127418*t822*t1579;
  t1633 = t981*t1605;
  t1637 = t1612 + t1624 + t1633;
  t1644 = 0.340999127418*t822*t1562;
  t1645 = t1025*t1579;
  t1647 = t1032*t1605;
  t1650 = t1644 + t1645 + t1647;
  t1171 = -0.175248972904*t47;
  t1175 = -0.553471*t1064;
  t1176 = t1171 + t1175;
  t1269 = -0.803828*t1064;
  t1270 = t1063 + t1269;
  t1611 = t129*t1609;
  t1639 = 0.340999127418*t923*t1637;
  t1655 = t1011*t1650;
  t1659 = t1611 + t1639 + t1655;
  t1280 = -0.693671301908*t47;
  t1285 = 1. + t1280;
  t1680 = t1085*t1609;
  t1683 = t1125*t1637;
  t1687 = 0.340999127418*t923*t1650;
  t1689 = t1680 + t1683 + t1687;
  t1296 = 0.444895486988*t47;
  t1300 = -0.218018*t1064;
  t1301 = t1296 + t1300;
  t1695 = t1196*t1609;
  t1707 = t1214*t1637;
  t1710 = t1228*t1650;
  t1713 = t1695 + t1707 + t1710;
  t1764 = t304*t184*t210;
  t1773 = -1.*t304*t186*t243;
  t1774 = t1764 + t1773;
  t1784 = t304*t186*t184;
  t1788 = t304*t210*t243;
  t1790 = t1784 + t1788;
  t1849 = -1.*t426*t205;
  t1852 = t1774*t443;
  t1857 = t1790*t447;
  t1860 = t1849 + t1852 + t1857;
  t1778 = -0.340999127418*t181*t1774;
  t1796 = t269*t1790;
  t1804 = -1.*t205*t322;
  t1807 = t1778 + t1796 + t1804;
  t1821 = t351*t1774;
  t1834 = -0.340999127418*t181*t1790;
  t1838 = -1.*t205*t403;
  t1839 = t1821 + t1834 + t1838;
  t1820 = 0.340999127418*t170*t1807;
  t1846 = t343*t1839;
  t1864 = t1860*t490;
  t1871 = t1820 + t1846 + t1864;
  t1874 = t544*t1860;
  t1875 = t1807*t596;
  t1876 = t1839*t611;
  t1878 = t1874 + t1875 + t1876;
  t1885 = t657*t1807;
  t1886 = 0.340999127418*t170*t1839;
  t1888 = t1860*t683;
  t1892 = t1885 + t1886 + t1888;
  t1873 = 0.340999127418*t159*t1871;
  t1880 = t536*t1878;
  t1907 = t650*t1892;
  t1908 = t1873 + t1880 + t1907;
  t1913 = t738*t1871;
  t1918 = t757*t1878;
  t1922 = 0.340999127418*t159*t1892;
  t1923 = t1913 + t1918 + t1922;
  t1934 = t838*t1871;
  t1937 = t857*t1878;
  t1939 = t864*t1892;
  t1941 = t1934 + t1937 + t1939;
  t1910 = t133*t1908;
  t1926 = t730*t1923;
  t1949 = t831*t1941;
  t1951 = t1910 + t1926 + t1949;
  t1964 = t931*t1908;
  t1966 = 0.340999127418*t822*t1923;
  t1967 = t981*t1941;
  t1969 = t1964 + t1966 + t1967;
  t1982 = 0.340999127418*t822*t1908;
  t1990 = t1025*t1923;
  t1993 = t1032*t1941;
  t2007 = t1982 + t1990 + t1993;
  t1963 = t129*t1951;
  t1972 = 0.340999127418*t923*t1969;
  t2009 = t1011*t2007;
  t2010 = t1963 + t1972 + t2009;
  t2014 = t1085*t1951;
  t2020 = t1125*t1969;
  t2021 = 0.340999127418*t923*t2007;
  t2023 = t2014 + t2020 + t2021;
  t2036 = t1196*t1951;
  t2039 = t1214*t1969;
  t2040 = t1228*t2007;
  t2041 = t2036 + t2039 + t2040;
  t1058 = t57*t1048;
  t1151 = t1073*t1142;
  t1249 = t1176*t1232;
  t1255 = t1058 + t1151 + t1249;
  t1271 = t1270*t1048;
  t1291 = t1285*t1142;
  t1304 = t1301*t1232;
  t1315 = t1271 + t1291 + t1304;
  t2116 = 0.553471*t1064;
  t2120 = t1171 + t2116;
  t2125 = 0.218018*t1064;
  t2128 = t1296 + t2125;
  t2133 = -0.353861996165*t47;
  t2134 = 1. + t2133;
  t1661 = t57*t1659;
  t1691 = t1073*t1689;
  t1715 = t1176*t1713;
  t1720 = t1661 + t1691 + t1715;
  t1723 = t1270*t1659;
  t1730 = t1285*t1689;
  t1731 = t1301*t1713;
  t1732 = t1723 + t1730 + t1731;
  t2011 = t57*t2010;
  t2026 = t1073*t2023;
  t2053 = t1176*t2041;
  t2056 = t2011 + t2026 + t2053;
  t2061 = t1270*t2010;
  t2062 = t1285*t2023;
  t2067 = t1301*t2041;
  t2068 = t2061 + t2062 + t2067;
  t2121 = t2120*t1048;
  t2132 = t2128*t1142;
  t2137 = t2134*t1232;
  t2138 = t2121 + t2132 + t2137;
  t2155 = t2120*t1659;
  t2156 = t2128*t1689;
  t2158 = t2134*t1713;
  t2161 = t2155 + t2156 + t2158;
  t2177 = t2120*t2010;
  t2178 = t2128*t2023;
  t2179 = t2134*t2041;
  t2182 = t2177 + t2178 + t2179;
  t2329 = 0.120666640478*t47;
  t2347 = -0.444895486988*t47;
  t2316 = 0.175248972904*t47;
  t2231 = -1.*t184;
  t2232 = 1. + t2231;
  t2234 = 0.091*t2232;
  t2235 = 0. + t2234;
  t2241 = 0.091*t243;
  t2249 = 0. + t2241;
  t2251 = -0.04500040093286238*t181;
  t2257 = 0.07877663122399998*t443;
  t2264 = 0.031030906668*t447;
  t2274 = 0. + t2251 + t2257 + t2264;
  t2281 = -3.2909349868922137e-7*var1[7];
  t2285 = 0.03103092645718495*t181;
  t2286 = -0.045000372235*t322;
  t2288 = t2281 + t2285 + t2286;
  t2294 = 1.296332362046933e-7*var1[7];
  t2298 = 0.07877668146182712*t181;
  t2300 = -0.045000372235*t403;
  t2303 = t2294 + t2298 + t2300;
  t2312 = 2.838136523330542e-8*var1[12];
  t2315 = 0.2845150083511607*t47;
  t2319 = t2316 + t1175;
  t2328 = 0.44503472296900004*t2319;
  t2331 = t2329 + t1071;
  t2333 = -0.5286755231320001*t2331;
  t2334 = t2312 + t2315 + t2328 + t2333;
  t2338 = -7.20503013377005e-8*var1[12];
  t2340 = -0.3667270384178674*t47;
  t2341 = t2329 + t1269;
  t2342 = 0.29871295412*t2341;
  t2348 = t2347 + t1300;
  t2351 = 0.44503472296900004*t2348;
  t2352 = t2338 + t2340 + t2342 + t2351;
  t2358 = -1.0464152525368286e-7*var1[12];
  t2363 = 0.15748087543254813*t47;
  t2366 = t2347 + t2125;
  t2367 = -0.5286755231320001*t2366;
  t2369 = t2316 + t2116;
  t2371 = 0.29871295412*t2369;
  t2373 = t2358 + t2363 + t2367 + t2371;
  t2378 = 0.06199697675299678*t923;
  t2383 = 0.324290713329*t1228;
  t2385 = -0.823260828522*t1214;
  t2396 = 0. + t2378 + t2383 + t2385;
  t2405 = 2.95447451120871e-8*var1[11];
  t2409 = -0.8232613535360118*t923;
  t2412 = 0.061996937216*t1085;
  t2413 = t2405 + t2409 + t2412;
  t2415 = 7.500378623168247e-8*var1[11];
  t2421 = 0.32429092013729516*t923;
  t2424 = 0.061996937216*t129;
  t2427 = t2415 + t2421 + t2424;
  t2430 = 2.281945176511838e-8*var1[10];
  t2431 = -0.5905366811997648*t822;
  t2432 = -0.262809976934*t981;
  t2440 = t2430 + t2431 + t2432;
  t2446 = 5.7930615939377813e-8*var1[10];
  t2448 = 0.23261833304643187*t822;
  t2450 = -0.262809976934*t1032;
  t2451 = t2446 + t2448 + t2450;
  t2454 = -0.26281014453449253*t822;
  t2459 = 0.23261818470000004*t730;
  t2462 = -0.5905363046000001*t133;
  t2469 = 0. + t2454 + t2459 + t2462;
  t2474 = 3.2909349868922137e-7*var1[8];
  t2479 = 0.055653945343889656*t170;
  t2481 = -0.045000372235*t490;
  t2483 = t2474 + t2479 + t2481;
  t2489 = -1.5981976069815686e-7*var1[9];
  t2492 = 0.08675267452931407*t159;
  t2493 = 0.039853013046*t757;
  t2496 = t2489 + t2492 + t2493;
  t2499 = -0.04500040093286238*t170;
  t2505 = -0.141285834136*t596;
  t2507 = 0.055653909852*t611;
  t2508 = 0. + t2499 + t2505 + t2507;
  t2511 = 0.039853038461262744*t159;
  t2519 = 0.086752619205*t838;
  t2522 = -0.22023459268999998*t864;
  t2525 = 0. + t2511 + t2519 + t2522;
  t2528 = 1.296332362046933e-7*var1[8];
  t2532 = -0.14128592423750855*t170;
  t2534 = -0.045000372235*t683;
  t2536 = t2528 + t2532 + t2534;
  t2540 = -6.295460977284962e-8*var1[9];
  t2543 = -0.22023473313910558*t159;
  t2556 = 0.039853013046*t536;
  t2568 = t2540 + t2543 + t2556;
  p_output1[0]=0.930418*t1255 + 0.366501*t1315;
  p_output1[1]=0.930418*t1720 + 0.366501*t1732;
  p_output1[2]=0.930418*t2056 + 0.366501*t2068;
  p_output1[3]=0.;
  p_output1[4]=-0.294604*t1255 + 0.747896*t1315 - 0.594863*t2138;
  p_output1[5]=-0.294604*t1720 + 0.747896*t1732 - 0.594863*t2161;
  p_output1[6]=-0.294604*t2056 + 0.747896*t2068 - 0.594863*t2182;
  p_output1[7]=0.;
  p_output1[8]=-0.218018*t1255 + 0.553471*t1315 + 0.803828*t2138;
  p_output1[9]=-0.218018*t1720 + 0.553471*t1732 + 0.803828*t2161;
  p_output1[10]=-0.218018*t2056 + 0.553471*t2068 + 0.803828*t2182;
  p_output1[11]=0.;
  p_output1[12]=0. + 0.415942*t1255 - 0.826251*t1315 + 0.060052*t2138 + t2235*t224 + t1048*t2334 + t1142*t2352 + t1232*t2373 + t2249*t241 + t1046*t2427 + t2303*t260 + t2288*t296 + t201*t2274*t304 + t2536*t335 + t2483*t414 + t2508*t449 + t2496*t506 + t2525*t617 + t2568*t690 + t2440*t716 + t2451*t782 + t2469*t888 + t2396*t907 + t2413*t999 + var1[0];
  p_output1[13]=0. + 0.415942*t1720 - 0.826251*t1732 + 0.060052*t2161 + t1340*t2235 + t1354*t2249 + t1398*t2288 + t1363*t2303 + t1659*t2334 + t1689*t2352 + t1713*t2373 + t1609*t2396 + t1637*t2413 + t1650*t2427 + t1562*t2440 + t1579*t2451 + t1605*t2469 + t1448*t2483 + t1497*t2496 + t1488*t2508 + t1509*t2525 + t1402*t2536 + t1557*t2568 + t196*t2274*t304 + var1[1];
  p_output1[14]=0. + 0.415942*t2056 - 0.826251*t2068 + 0.060052*t2182 - 1.*t205*t2274 + t1790*t2288 + t1774*t2303 + t2010*t2334 + t2023*t2352 + t2041*t2373 + t1951*t2396 + t1969*t2413 + t2007*t2427 + t1908*t2440 + t1923*t2451 + t1941*t2469 + t1839*t2483 + t1871*t2496 + t1860*t2508 + t1878*t2525 + t1807*t2536 + t1892*t2568 + t210*t2235*t304 + t186*t2249*t304 + var1[2];
  p_output1[15]=1.;
}



void T_left_toe_roll_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
