/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:10:59 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jdq_AMBody_right_tarsus_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t235;
  double t295;
  double t310;
  double t116;
  double t347;
  double t747;
  double t823;
  double t828;
  double t321;
  double t327;
  double t335;
  double t337;
  double t356;
  double t371;
  double t391;
  double t453;
  double t486;
  double t572;
  double t577;
  double t608;
  double t632;
  double t698;
  double t699;
  double t700;
  double t844;
  double t866;
  double t950;
  double t1001;
  double t1053;
  double t1091;
  double t1102;
  double t1182;
  double t1221;
  double t1256;
  double t1356;
  double t1365;
  double t1366;
  double t36;
  double t99;
  double t118;
  double t151;
  double t455;
  double t467;
  double t483;
  double t709;
  double t829;
  double t838;
  double t1328;
  double t1336;
  double t1381;
  double t1389;
  double t1392;
  double t1455;
  double t1462;
  double t1482;
  double t1485;
  double t1498;
  double t1720;
  double t1741;
  double t1948;
  double t1956;
  double t1967;
  double t2012;
  double t2047;
  double t2065;
  double t2558;
  double t2630;
  double t2653;
  double t109;
  double t113;
  double t1338;
  double t1556;
  double t1583;
  double t1653;
  double t2068;
  double t2082;
  double t2258;
  double t2263;
  double t2277;
  double t2287;
  double t2387;
  double t2497;
  double t2514;
  double t2521;
  double t2713;
  double t2717;
  double t2732;
  double t2738;
  double t2780;
  double t2781;
  double t2789;
  double t2793;
  double t2870;
  double t2913;
  double t3212;
  double t3118;
  double t3119;
  double t3136;
  double t3139;
  double t3145;
  double t3171;
  double t3179;
  double t3187;
  double t3093;
  double t3221;
  double t3235;
  double t3248;
  double t3252;
  double t3255;
  double t3262;
  double t3270;
  double t3282;
  double t39;
  double t71;
  double t3363;
  double t3397;
  double t3423;
  double t3430;
  double t3435;
  double t3440;
  double t3449;
  double t3450;
  double t3498;
  double t3513;
  double t3528;
  double t3532;
  double t2118;
  double t2254;
  double t3433;
  double t3453;
  double t3545;
  double t3550;
  double t3560;
  double t3612;
  double t3620;
  double t3655;
  double t3674;
  double t3675;
  double t3676;
  double t3678;
  double t2683;
  double t2686;
  double t3019;
  double t3064;
  double t3087;
  double t3555;
  double t3673;
  double t3680;
  double t3682;
  double t3691;
  double t3692;
  double t3693;
  double t3694;
  double t3702;
  double t3703;
  double t3704;
  double t3706;
  double t3728;
  double t3735;
  double t3740;
  double t3744;
  double t3769;
  double t3771;
  double t3783;
  double t3795;
  double t3335;
  double t3926;
  double t3959;
  double t3988;
  double t3881;
  double t3883;
  double t3894;
  double t3995;
  double t3996;
  double t4013;
  double t3910;
  double t3993;
  double t4020;
  double t4028;
  double t4036;
  double t4039;
  double t4047;
  double t4050;
  double t4055;
  double t4058;
  double t4059;
  double t4071;
  double t4034;
  double t4054;
  double t4078;
  double t4100;
  double t4115;
  double t4129;
  double t4132;
  double t4142;
  double t4155;
  double t4159;
  double t4188;
  double t4193;
  double t4279;
  double t4285;
  double t4291;
  double t4298;
  double t4309;
  double t4315;
  double t4319;
  double t4320;
  double t2087;
  double t2547;
  double t2979;
  double t2999;
  double t3052;
  double t3199;
  double t3288;
  double t3291;
  double t3299;
  double t3310;
  double t3318;
  double t3333;
  double t3336;
  double t3344;
  double t3346;
  double t3351;
  double t3685;
  double t3696;
  double t3717;
  double t3719;
  double t3720;
  double t3746;
  double t3814;
  double t3815;
  double t3816;
  double t3819;
  double t3829;
  double t3836;
  double t3845;
  double t3846;
  double t3853;
  double t3863;
  double t4107;
  double t4152;
  double t4217;
  double t4250;
  double t4271;
  double t4303;
  double t4321;
  double t4322;
  double t4327;
  double t4329;
  double t4336;
  double t4338;
  double t4339;
  double t4340;
  double t4343;
  double t4352;
  double t4542;
  double t4547;
  double t4550;
  double t4554;
  double t4558;
  double t4583;
  double t4590;
  double t4594;
  double t4596;
  double t4682;
  double t4684;
  double t4685;
  double t4690;
  double t4701;
  double t4702;
  double t4710;
  double t4713;
  double t4715;
  double t4717;
  double t4718;
  double t4719;
  double t4775;
  double t4777;
  double t4789;
  double t4795;
  double t4804;
  double t4806;
  double t4816;
  double t4818;
  double t4824;
  double t4862;
  double t4869;
  double t4873;
  double t4883;
  double t4892;
  double t4907;
  double t4926;
  double t4930;
  double t4933;
  double t4973;
  double t4977;
  double t4979;
  double t4982;
  double t4988;
  double t4990;
  double t4995;
  double t4998;
  double t4999;
  t235 = Cos(var1[21]);
  t295 = -1.*t235;
  t310 = 1. + t295;
  t116 = Sin(var1[20]);
  t347 = Sin(var1[21]);
  t747 = Cos(var1[20]);
  t823 = -1.*t747;
  t828 = 1. + t823;
  t321 = -0.8656776547239999*t310;
  t327 = 1. + t321;
  t335 = -0.789039*t327;
  t337 = 0.105986279791916*t310;
  t356 = -0.930418*t347;
  t371 = 0. + t356;
  t391 = -0.529919*t371;
  t453 = t335 + t337 + t391;
  t486 = -0.134322983001*t310;
  t572 = 1. + t486;
  t577 = -0.310811*t572;
  t608 = 0.2690616104987713*t310;
  t632 = -0.366501*t347;
  t698 = 0. + t632;
  t699 = -0.529919*t698;
  t700 = t577 + t608 + t699;
  t844 = -1.000000637725*t310;
  t866 = 1. + t844;
  t950 = -0.529919*t866;
  t1001 = 0.366501*t347;
  t1053 = 0. + t1001;
  t1091 = -0.310811*t1053;
  t1102 = 0.930418*t347;
  t1182 = 0. + t1102;
  t1221 = -0.789039*t1182;
  t1256 = t950 + t1091 + t1221;
  t1356 = Cos(var1[19]);
  t1365 = -1.*t1356;
  t1366 = 1. + t1365;
  t36 = Sin(var1[18]);
  t99 = Sin(var1[19]);
  t118 = 0.930418*t116;
  t151 = 0. + t118;
  t455 = t151*t453;
  t467 = 0.366501*t116;
  t483 = 0. + t467;
  t709 = t483*t700;
  t829 = -1.000000637725*t828;
  t838 = 1. + t829;
  t1328 = t838*t1256;
  t1336 = 0. + t455 + t709 + t1328;
  t1381 = -0.8656776547239999*t828;
  t1389 = 1. + t1381;
  t1392 = t1389*t453;
  t1455 = -0.340999127418*t828*t700;
  t1462 = -0.930418*t116;
  t1482 = 0. + t1462;
  t1485 = t1482*t1256;
  t1498 = 0. + t1392 + t1455 + t1485;
  t1720 = -0.340999127418*t828*t453;
  t1741 = -0.134322983001*t828;
  t1948 = 1. + t1741;
  t1956 = t1948*t700;
  t1967 = -0.366501*t116;
  t2012 = 0. + t1967;
  t2047 = t2012*t1256;
  t2065 = 0. + t1720 + t1956 + t2047;
  t2558 = Cos(var1[18]);
  t2630 = -1.*t2558;
  t2653 = 1. + t2630;
  t109 = 0.366501*t99;
  t113 = 0. + t109;
  t1338 = t113*t1336;
  t1556 = -0.340999127418*t1366*t1498;
  t1583 = -0.134322983001*t1366;
  t1653 = 1. + t1583;
  t2068 = t1653*t2065;
  t2082 = 0. + t1338 + t1556 + t2068;
  t2258 = 0.930418*t99;
  t2263 = 0. + t2258;
  t2277 = t2263*t1336;
  t2287 = -0.8656776547239999*t1366;
  t2387 = 1. + t2287;
  t2497 = t2387*t1498;
  t2514 = -0.340999127418*t1366*t2065;
  t2521 = 0. + t2277 + t2497 + t2514;
  t2713 = -1.000000637725*t1366;
  t2717 = 1. + t2713;
  t2732 = t2717*t1336;
  t2738 = -0.930418*t99;
  t2780 = 0. + t2738;
  t2781 = t2780*t1498;
  t2789 = -0.366501*t99;
  t2793 = 0. + t2789;
  t2870 = t2793*t2065;
  t2913 = 0. + t2732 + t2781 + t2870;
  t3212 = Cos(var1[17]);
  t3118 = -0.8656776547239999*t2653;
  t3119 = 1. + t3118;
  t3136 = t3119*t2082;
  t3139 = 0.340999127418*t2653*t2521;
  t3145 = -0.930418*t36;
  t3171 = 0. + t3145;
  t3179 = t3171*t2913;
  t3187 = 0. + t3136 + t3139 + t3179;
  t3093 = Sin(var1[17]);
  t3221 = 0.340999127418*t2653*t2082;
  t3235 = -0.134322983001*t2653;
  t3248 = 1. + t3235;
  t3252 = t3248*t2521;
  t3255 = 0.366501*t36;
  t3262 = 0. + t3255;
  t3270 = t3262*t2913;
  t3282 = 0. + t3221 + t3252 + t3270;
  t39 = 0.930418*t36;
  t71 = 0. + t39;
  t3363 = -0.493047*t327;
  t3397 = 0.06622748653061429*t310;
  t3423 = 0.848048*t371;
  t3430 = t3363 + t3397 + t3423;
  t3435 = -0.194216*t572;
  t3440 = 0.16812859677606265*t310;
  t3449 = 0.848048*t698;
  t3450 = t3435 + t3440 + t3449;
  t3498 = 0.848048*t866;
  t3513 = -0.194216*t1053;
  t3528 = -0.493047*t1182;
  t3532 = t3498 + t3513 + t3528;
  t2118 = -0.366501*t36;
  t2254 = 0. + t2118;
  t3433 = t151*t3430;
  t3453 = t483*t3450;
  t3545 = t838*t3532;
  t3550 = 0. + t3433 + t3453 + t3545;
  t3560 = t1389*t3430;
  t3612 = -0.340999127418*t828*t3450;
  t3620 = t1482*t3532;
  t3655 = 0. + t3560 + t3612 + t3620;
  t3674 = -0.340999127418*t828*t3430;
  t3675 = t1948*t3450;
  t3676 = t2012*t3532;
  t3678 = 0. + t3674 + t3675 + t3676;
  t2683 = -1.000000637725*t2653;
  t2686 = 1. + t2683;
  t3019 = Sin(var1[4]);
  t3064 = Cos(var1[4]);
  t3087 = Cos(var1[5]);
  t3555 = t113*t3550;
  t3673 = -0.340999127418*t1366*t3655;
  t3680 = t1653*t3678;
  t3682 = 0. + t3555 + t3673 + t3680;
  t3691 = t2263*t3550;
  t3692 = t2387*t3655;
  t3693 = -0.340999127418*t1366*t3678;
  t3694 = 0. + t3691 + t3692 + t3693;
  t3702 = t2717*t3550;
  t3703 = t2780*t3655;
  t3704 = t2793*t3678;
  t3706 = 0. + t3702 + t3703 + t3704;
  t3728 = t3119*t3682;
  t3735 = 0.340999127418*t2653*t3694;
  t3740 = t3171*t3706;
  t3744 = 0. + t3728 + t3735 + t3740;
  t3769 = 0.340999127418*t2653*t3682;
  t3771 = t3248*t3694;
  t3783 = t3262*t3706;
  t3795 = 0. + t3769 + t3771 + t3783;
  t3335 = Sin(var1[5]);
  t3926 = -0.366501*t327;
  t3959 = -0.3172717261340007*t310;
  t3988 = t3926 + t3959;
  t3881 = 0.930418*t572;
  t3883 = 0.12497652119782442*t310;
  t3894 = t3881 + t3883;
  t3995 = 0.930418*t1053;
  t3996 = -0.366501*t1182;
  t4013 = t3995 + t3996;
  t3910 = t3894*t483;
  t3993 = t3988*t151;
  t4020 = t838*t4013;
  t4028 = 0. + t3910 + t3993 + t4020;
  t4036 = t1389*t3988;
  t4039 = -0.340999127418*t828*t3894;
  t4047 = t1482*t4013;
  t4050 = 0. + t4036 + t4039 + t4047;
  t4055 = -0.340999127418*t828*t3988;
  t4058 = t1948*t3894;
  t4059 = t2012*t4013;
  t4071 = 0. + t4055 + t4058 + t4059;
  t4034 = t113*t4028;
  t4054 = -0.340999127418*t1366*t4050;
  t4078 = t1653*t4071;
  t4100 = 0. + t4034 + t4054 + t4078;
  t4115 = t2263*t4028;
  t4129 = t2387*t4050;
  t4132 = -0.340999127418*t1366*t4071;
  t4142 = 0. + t4115 + t4129 + t4132;
  t4155 = t2717*t4028;
  t4159 = t2780*t4050;
  t4188 = t2793*t4071;
  t4193 = 0. + t4155 + t4159 + t4188;
  t4279 = t3119*t4100;
  t4285 = 0.340999127418*t2653*t4142;
  t4291 = t3171*t4193;
  t4298 = 0. + t4279 + t4285 + t4291;
  t4309 = 0.340999127418*t2653*t4100;
  t4315 = t3248*t4142;
  t4319 = t3262*t4193;
  t4320 = 0. + t4309 + t4315 + t4319;
  t2087 = t71*t2082;
  t2547 = t2254*t2521;
  t2979 = t2686*t2913;
  t2999 = 0. + t2087 + t2547 + t2979;
  t3052 = -1.*t2999*t3019;
  t3199 = -1.*t3093*t3187;
  t3288 = t3212*t3282;
  t3291 = 0. + t3199 + t3288;
  t3299 = t3087*t3291;
  t3310 = t3212*t3187;
  t3318 = t3093*t3282;
  t3333 = 0. + t3310 + t3318;
  t3336 = t3333*t3335;
  t3344 = 0. + t3299 + t3336;
  t3346 = t3064*t3344;
  t3351 = 0. + t3052 + t3346;
  t3685 = t71*t3682;
  t3696 = t2254*t3694;
  t3717 = t2686*t3706;
  t3719 = 0. + t3685 + t3696 + t3717;
  t3720 = -1.*t3719*t3019;
  t3746 = -1.*t3093*t3744;
  t3814 = t3212*t3795;
  t3815 = 0. + t3746 + t3814;
  t3816 = t3087*t3815;
  t3819 = t3212*t3744;
  t3829 = t3093*t3795;
  t3836 = 0. + t3819 + t3829;
  t3845 = t3836*t3335;
  t3846 = 0. + t3816 + t3845;
  t3853 = t3064*t3846;
  t3863 = 0. + t3720 + t3853;
  t4107 = t71*t4100;
  t4152 = t2254*t4142;
  t4217 = t2686*t4193;
  t4250 = 0. + t4107 + t4152 + t4217;
  t4271 = -1.*t4250*t3019;
  t4303 = -1.*t3093*t4298;
  t4321 = t3212*t4320;
  t4322 = 0. + t4303 + t4321;
  t4327 = t3087*t4322;
  t4329 = t3212*t4298;
  t4336 = t3093*t4320;
  t4338 = 0. + t4329 + t4336;
  t4339 = t4338*t3335;
  t4340 = 0. + t4327 + t4339;
  t4343 = t3064*t4340;
  t4352 = 0. + t4271 + t4343;
  t4542 = t3087*t3333;
  t4547 = -1.*t3291*t3335;
  t4550 = 0. + t4542 + t4547;
  t4554 = t3087*t3836;
  t4558 = -1.*t3815*t3335;
  t4583 = 0. + t4554 + t4558;
  t4590 = t3087*t4338;
  t4594 = -1.*t4322*t3335;
  t4596 = 0. + t4590 + t4594;
  t4682 = -1.*t71*t2082;
  t4684 = -1.*t2254*t2521;
  t4685 = -1.*t2686*t2913;
  t4690 = 0. + t4682 + t4684 + t4685;
  t4701 = -1.*t71*t3682;
  t4702 = -1.*t2254*t3694;
  t4710 = -1.*t2686*t3706;
  t4713 = 0. + t4701 + t4702 + t4710;
  t4715 = -1.*t71*t4100;
  t4717 = -1.*t2254*t4142;
  t4718 = -1.*t2686*t4193;
  t4719 = 0. + t4715 + t4717 + t4718;
  t4775 = -0.366501*t2082;
  t4777 = -0.930418*t2521;
  t4789 = 0. + t4775 + t4777;
  t4795 = -0.366501*t3682;
  t4804 = -0.930418*t3694;
  t4806 = 0. + t4795 + t4804;
  t4816 = -0.366501*t4100;
  t4818 = -0.930418*t4142;
  t4824 = 0. + t4816 + t4818;
  t4862 = 0.366501*t1498;
  t4869 = -0.930418*t2065;
  t4873 = 0. + t4862 + t4869;
  t4883 = 0.366501*t3655;
  t4892 = -0.930418*t3678;
  t4907 = 0. + t4883 + t4892;
  t4926 = 0.366501*t4050;
  t4930 = -0.930418*t4071;
  t4933 = 0. + t4926 + t4930;
  t4973 = -0.366501*t3988;
  t4977 = 0.930418*t3894;
  t4979 = 0. + t4973 + t4977;
  t4982 = -0.366501*t453;
  t4988 = 0.930418*t700;
  t4990 = 0. + t4982 + t4988;
  t4995 = -0.366501*t3430;
  t4998 = 0.930418*t3450;
  t4999 = 0. + t4995 + t4998;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=-0.00061*t3351 + 0.00093*t3863 + 0.0001*t4352;
  p_output1[10]=0.01641*t3351 - 0.00061*t3863 - 0.00001*t4352;
  p_output1[11]=-0.00001*t3351 + 0.0001*t3863 + 0.0165*t4352;
  p_output1[12]=-0.00061*t4550 + 0.00093*t4583 + 0.0001*t4596;
  p_output1[13]=0.01641*t4550 - 0.00061*t4583 - 0.00001*t4596;
  p_output1[14]=-0.00001*t4550 + 0.0001*t4583 + 0.0165*t4596;
  p_output1[15]=-0.00061*t2999 + 0.00093*t3719 + 0.0001*t4250;
  p_output1[16]=0.01641*t2999 - 0.00061*t3719 - 0.00001*t4250;
  p_output1[17]=-0.00001*t2999 + 0.0001*t3719 + 0.0165*t4250;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=-0.00061*t4690 + 0.00093*t4713 + 0.0001*t4719;
  p_output1[52]=0.01641*t4690 - 0.00061*t4713 - 0.00001*t4719;
  p_output1[53]=-0.00001*t4690 + 0.0001*t4713 + 0.0165*t4719;
  p_output1[54]=-0.00061*t4789 + 0.00093*t4806 + 0.0001*t4824;
  p_output1[55]=0.01641*t4789 - 0.00061*t4806 - 0.00001*t4824;
  p_output1[56]=-0.00001*t4789 + 0.0001*t4806 + 0.0165*t4824;
  p_output1[57]=-0.00061*t4873 + 0.00093*t4907 + 0.0001*t4933;
  p_output1[58]=0.01641*t4873 - 0.00061*t4907 - 0.00001*t4933;
  p_output1[59]=-0.00001*t4873 + 0.0001*t4907 + 0.0165*t4933;
  p_output1[60]=0.0001*t4979 - 0.00061*t4990 + 0.00093*t4999;
  p_output1[61]=-0.00001*t4979 + 0.01641*t4990 - 0.00061*t4999;
  p_output1[62]=0.0165*t4979 - 0.00001*t4990 + 0.0001*t4999;
  p_output1[63]=0.00010000055463336002;
  p_output1[64]=-0.00001000939728742977;
  p_output1[65]=0.01650001054375299;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jdq_AMBody_right_tarsus_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
