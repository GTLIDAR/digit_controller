/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:33:27 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dT_hip_flexion_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t215;
  double t232;
  double t119;
  double t122;
  double t126;
  double t623;
  double t234;
  double t589;
  double t635;
  double t49;
  double t50;
  double t51;
  double t613;
  double t783;
  double t1057;
  double t1162;
  double t1235;
  double t1260;
  double t1375;
  double t1381;
  double t2035;
  double t2078;
  double t2080;
  double t2091;
  double t2110;
  double t2143;
  double t2199;
  double t2220;
  double t2231;
  double t2314;
  double t1058;
  double t1129;
  double t1152;
  double t1271;
  double t1382;
  double t1411;
  double t1444;
  double t1455;
  double t2315;
  double t1547;
  double t1600;
  double t1603;
  double t1694;
  double t1702;
  double t1719;
  double t1748;
  double t1873;
  double t1539;
  double t1542;
  double t3175;
  double t3415;
  double t3497;
  double t3518;
  double t3229;
  double t3334;
  double t3388;
  double t3413;
  double t3620;
  double t3761;
  double t3882;
  double t3900;
  double t3980;
  double t2322;
  double t2340;
  double t2517;
  double t2588;
  double t4264;
  double t4286;
  double t4288;
  double t4175;
  double t4219;
  double t4250;
  double t2593;
  double t2607;
  double t3812;
  double t4005;
  double t4008;
  double t2641;
  double t2699;
  double t2801;
  double t2804;
  double t2922;
  double t2941;
  double t5086;
  double t5099;
  double t5178;
  double t5180;
  double t5193;
  double t5198;
  double t5213;
  double t5222;
  double t5251;
  double t5336;
  double t5349;
  double t5351;
  double t5303;
  double t5316;
  double t5317;
  double t5205;
  double t5272;
  double t5281;
  double t5546;
  double t5548;
  double t5550;
  double t5537;
  double t5542;
  double t5543;
  double t5544;
  double t5558;
  double t5561;
  double t5573;
  double t5574;
  double t5578;
  double t5653;
  double t5662;
  double t5665;
  double t5668;
  double t5562;
  double t5583;
  double t5584;
  double t5587;
  double t5601;
  double t5602;
  double t5617;
  double t5638;
  double t5749;
  double t5750;
  double t5775;
  double t5776;
  double t5786;
  double t5787;
  double t5763;
  double t5766;
  double t5767;
  double t5770;
  double t5747;
  double t5748;
  double t5751;
  double t5757;
  double t5888;
  double t5889;
  double t5890;
  double t5891;
  double t5859;
  double t5868;
  double t5871;
  double t5875;
  double t5881;
  double t5885;
  double t5886;
  double t5958;
  double t5959;
  double t5963;
  double t5968;
  double t5972;
  double t5973;
  double t6013;
  double t6019;
  double t6024;
  double t6030;
  double t5964;
  double t5974;
  double t5975;
  double t5976;
  double t5991;
  double t5992;
  double t6002;
  double t6007;
  double t6072;
  double t6076;
  double t6080;
  double t6062;
  double t6063;
  double t6068;
  double t6071;
  double t6081;
  double t6083;
  double t6087;
  double t6088;
  double t6090;
  double t6110;
  double t6113;
  double t6114;
  double t6102;
  double t6103;
  double t6104;
  double t6084;
  double t6092;
  double t6099;
  double t6143;
  double t6148;
  double t6150;
  double t6153;
  double t6155;
  double t6182;
  double t6185;
  double t6186;
  double t6161;
  double t6175;
  double t6178;
  double t6149;
  double t6156;
  double t6158;
  double t6298;
  double t6299;
  double t6329;
  double t6330;
  double t6331;
  double t6333;
  double t6303;
  double t6319;
  double t6322;
  double t6325;
  double t6287;
  double t6292;
  double t6300;
  double t6301;
  double t6397;
  double t6400;
  double t6401;
  double t6404;
  double t6371;
  double t6372;
  double t6374;
  double t6385;
  double t6388;
  double t6390;
  double t6394;
  double t6438;
  double t6439;
  double t6443;
  double t6445;
  double t6446;
  double t6447;
  double t6469;
  double t6470;
  double t6471;
  double t6460;
  double t6461;
  double t6467;
  double t6444;
  double t6448;
  double t6458;
  double t6507;
  double t6513;
  double t6514;
  double t6519;
  double t6520;
  double t6522;
  double t6537;
  double t6542;
  double t6546;
  double t6529;
  double t6530;
  double t6535;
  double t6515;
  double t6523;
  double t6524;
  double t6574;
  double t6578;
  double t6582;
  double t6586;
  double t6587;
  double t6588;
  double t6608;
  double t6609;
  double t6610;
  double t6615;
  double t6585;
  double t6590;
  double t6594;
  double t6595;
  double t6599;
  double t6600;
  double t6601;
  double t6602;
  double t6668;
  double t6669;
  double t6671;
  double t6672;
  double t6659;
  double t6661;
  double t6662;
  double t6663;
  double t6644;
  double t6647;
  double t6648;
  double t6653;
  double t6714;
  double t6715;
  double t6720;
  double t6721;
  double t6699;
  double t6700;
  double t6701;
  double t6706;
  double t6707;
  double t6711;
  double t1490;
  double t1903;
  double t2374;
  double t2401;
  double t2592;
  double t2615;
  double t2730;
  double t2750;
  double t2781;
  double t2808;
  double t2832;
  double t2942;
  double t2943;
  double t4022;
  double t4258;
  double t4316;
  double t4500;
  double t4634;
  double t4715;
  double t4728;
  double t4732;
  double t4739;
  double t4767;
  double t4771;
  double t4880;
  double t4927;
  double t5299;
  double t5333;
  double t5372;
  double t5379;
  double t5398;
  double t5402;
  double t5412;
  double t5430;
  double t5432;
  double t5498;
  double t5507;
  double t5514;
  double t5524;
  double t5588;
  double t5652;
  double t5673;
  double t5678;
  double t5686;
  double t5687;
  double t5695;
  double t5700;
  double t5713;
  double t5722;
  double t5729;
  double t5734;
  double t5735;
  double t5761;
  double t5772;
  double t5792;
  double t5793;
  double t5798;
  double t5799;
  double t5802;
  double t5818;
  double t5827;
  double t5828;
  double t5831;
  double t5841;
  double t5849;
  double t5874;
  double t5887;
  double t5892;
  double t5911;
  double t5912;
  double t5913;
  double t5916;
  double t5926;
  double t5927;
  double t5937;
  double t5942;
  double t5943;
  double t5949;
  double t5979;
  double t6012;
  double t6037;
  double t6040;
  double t6042;
  double t6043;
  double t6044;
  double t6045;
  double t6047;
  double t6048;
  double t6049;
  double t6051;
  double t6055;
  double t6100;
  double t6109;
  double t6115;
  double t6116;
  double t6119;
  double t6120;
  double t6122;
  double t6126;
  double t6128;
  double t6130;
  double t6135;
  double t6138;
  double t6139;
  double t6159;
  double t6181;
  double t6187;
  double t6188;
  double t6190;
  double t6192;
  double t6196;
  double t6197;
  double t6203;
  double t6207;
  double t6208;
  double t6215;
  double t6222;
  double t6236;
  double t6237;
  double t6238;
  double t6243;
  double t6245;
  double t6247;
  double t6250;
  double t6256;
  double t6262;
  double t6264;
  double t6265;
  double t6267;
  double t6269;
  double t6302;
  double t6326;
  double t6334;
  double t6335;
  double t6337;
  double t6338;
  double t6339;
  double t6341;
  double t6342;
  double t6346;
  double t6348;
  double t6351;
  double t6352;
  double t6384;
  double t6396;
  double t6405;
  double t6406;
  double t6407;
  double t6408;
  double t6409;
  double t6410;
  double t6411;
  double t6420;
  double t6427;
  double t6431;
  double t6432;
  double t6459;
  double t6468;
  double t6472;
  double t6473;
  double t6477;
  double t6479;
  double t6482;
  double t6483;
  double t6486;
  double t6490;
  double t6491;
  double t6493;
  double t6494;
  double t6527;
  double t6536;
  double t6547;
  double t6548;
  double t6555;
  double t6557;
  double t6558;
  double t6559;
  double t6560;
  double t6561;
  double t6562;
  double t6564;
  double t6565;
  double t6598;
  double t6607;
  double t6616;
  double t6617;
  double t6621;
  double t6623;
  double t6624;
  double t6625;
  double t6626;
  double t6628;
  double t6629;
  double t6630;
  double t6635;
  double t6658;
  double t6664;
  double t6673;
  double t6674;
  double t6676;
  double t6679;
  double t6682;
  double t6683;
  double t6684;
  double t6685;
  double t6686;
  double t6688;
  double t6689;
  double t6702;
  double t6713;
  double t6722;
  double t6723;
  double t6724;
  double t6725;
  double t6731;
  double t6732;
  double t6733;
  double t6735;
  double t6739;
  double t6740;
  double t6741;
  double t6991;
  double t6992;
  double t6993;
  double t7001;
  double t7005;
  double t7007;
  double t7012;
  double t7014;
  double t7016;
  double t7017;
  double t7018;
  double t7019;
  double t7022;
  double t7023;
  double t7024;
  double t7025;
  double t7028;
  double t7029;
  double t7031;
  double t7032;
  double t6978;
  double t6979;
  double t6980;
  double t6981;
  double t6983;
  double t6984;
  double t6986;
  double t6987;
  double t6988;
  double t6989;
  double t7097;
  double t7098;
  double t7099;
  double t7103;
  double t7104;
  double t7105;
  double t7107;
  double t7108;
  double t7109;
  double t7119;
  double t7120;
  double t7121;
  double t7125;
  double t7126;
  double t7128;
  double t7130;
  double t7131;
  double t7132;
  t215 = Cos(var1[3]);
  t232 = Cos(var1[4]);
  t119 = Cos(var1[7]);
  t122 = -1.*t119;
  t126 = 1. + t122;
  t623 = Cos(var1[5]);
  t234 = Cos(var1[6]);
  t589 = Sin(var1[5]);
  t635 = Sin(var1[6]);
  t49 = Cos(var1[8]);
  t50 = -1.*t49;
  t51 = 1. + t50;
  t613 = t215*t232*t234*t589;
  t783 = -1.*t215*t232*t623*t635;
  t1057 = t613 + t783;
  t1162 = t215*t232*t623*t234;
  t1235 = t215*t232*t589*t635;
  t1260 = t1162 + t1235;
  t1375 = Sin(var1[4]);
  t1381 = Sin(var1[7]);
  t2035 = -1.000000637725*t126;
  t2078 = 1. + t2035;
  t2080 = -1.*t215*t2078*t1375;
  t2091 = -0.930418*t1381;
  t2110 = 0. + t2091;
  t2143 = t1057*t2110;
  t2199 = -0.366501*t1381;
  t2220 = 0. + t2199;
  t2231 = t1260*t2220;
  t2314 = t2080 + t2143 + t2231;
  t1058 = -0.340999127418*t126*t1057;
  t1129 = -0.134322983001*t126;
  t1152 = 1. + t1129;
  t1271 = t1152*t1260;
  t1382 = 0.366501*t1381;
  t1411 = 0. + t1382;
  t1444 = -1.*t215*t1375*t1411;
  t1455 = t1058 + t1271 + t1444;
  t2315 = Sin(var1[8]);
  t1547 = -0.8656776547239999*t126;
  t1600 = 1. + t1547;
  t1603 = t1600*t1057;
  t1694 = -0.340999127418*t126*t1260;
  t1702 = 0.930418*t1381;
  t1719 = 0. + t1702;
  t1748 = -1.*t215*t1375*t1719;
  t1873 = t1603 + t1694 + t1748;
  t1539 = -0.134322983001*t51;
  t1542 = 1. + t1539;
  t3175 = Sin(var1[3]);
  t3415 = t215*t623*t1375;
  t3497 = t3175*t589;
  t3518 = t3415 + t3497;
  t3229 = -1.*t623*t3175;
  t3334 = t215*t1375*t589;
  t3388 = t3229 + t3334;
  t3413 = t234*t3388;
  t3620 = -1.*t3518*t635;
  t3761 = t3413 + t3620;
  t3882 = -1.*t234*t3518;
  t3900 = -1.*t3388*t635;
  t3980 = t3882 + t3900;
  t2322 = -0.366501*t2315;
  t2340 = 0. + t2322;
  t2517 = -1.000000637725*t51;
  t2588 = 1. + t2517;
  t4264 = t3980*t2110;
  t4286 = t3761*t2220;
  t4288 = t4264 + t4286;
  t4175 = t1152*t3761;
  t4219 = -0.340999127418*t126*t3980;
  t4250 = t4175 + t4219;
  t2593 = -0.930418*t2315;
  t2607 = 0. + t2593;
  t3812 = -0.340999127418*t126*t3761;
  t4005 = t1600*t3980;
  t4008 = t3812 + t4005;
  t2641 = 0.366501*t2315;
  t2699 = 0. + t2641;
  t2801 = -0.8656776547239999*t51;
  t2804 = 1. + t2801;
  t2922 = 0.930418*t2315;
  t2941 = 0. + t2922;
  t5086 = t623*t3175;
  t5099 = -1.*t215*t1375*t589;
  t5178 = t5086 + t5099;
  t5180 = t234*t5178;
  t5193 = t3518*t635;
  t5198 = t5180 + t5193;
  t5213 = t234*t3518;
  t5222 = -1.*t5178*t635;
  t5251 = t5213 + t5222;
  t5336 = t5251*t2110;
  t5349 = t5198*t2220;
  t5351 = t5336 + t5349;
  t5303 = t1152*t5198;
  t5316 = -0.340999127418*t126*t5251;
  t5317 = t5303 + t5316;
  t5205 = -0.340999127418*t126*t5198;
  t5272 = t1600*t5251;
  t5281 = t5205 + t5272;
  t5546 = -1.*t623*t3175*t1375;
  t5548 = t215*t589;
  t5550 = t5546 + t5548;
  t5537 = -1.*t215*t623;
  t5542 = -1.*t3175*t1375*t589;
  t5543 = t5537 + t5542;
  t5544 = t234*t5543;
  t5558 = -1.*t5550*t635;
  t5561 = t5544 + t5558;
  t5573 = t234*t5550;
  t5574 = t5543*t635;
  t5578 = t5573 + t5574;
  t5653 = -1.*t232*t2078*t3175;
  t5662 = t5561*t2110;
  t5665 = t5578*t2220;
  t5668 = t5653 + t5662 + t5665;
  t5562 = -0.340999127418*t126*t5561;
  t5583 = t1152*t5578;
  t5584 = -1.*t232*t3175*t1411;
  t5587 = t5562 + t5583 + t5584;
  t5601 = t1600*t5561;
  t5602 = -0.340999127418*t126*t5578;
  t5617 = -1.*t232*t3175*t1719;
  t5638 = t5601 + t5602 + t5617;
  t5749 = t3388*t635;
  t5750 = t5213 + t5749;
  t5775 = -0.930418*t119*t3761;
  t5776 = -0.366501*t119*t5750;
  t5786 = -1.000000637725*t215*t232*t1381;
  t5787 = t5775 + t5776 + t5786;
  t5763 = 0.366501*t215*t232*t119;
  t5766 = -0.340999127418*t3761*t1381;
  t5767 = -0.134322983001*t5750*t1381;
  t5770 = t5763 + t5766 + t5767;
  t5747 = 0.930418*t215*t232*t119;
  t5748 = -0.8656776547239999*t3761*t1381;
  t5751 = -0.340999127418*t5750*t1381;
  t5757 = t5747 + t5748 + t5751;
  t5888 = t215*t232*t2078;
  t5889 = t3761*t2110;
  t5890 = t5750*t2220;
  t5891 = t5888 + t5889 + t5890;
  t5859 = t1152*t5750;
  t5868 = t215*t232*t1411;
  t5871 = t3812 + t5859 + t5868;
  t5875 = t1600*t3761;
  t5881 = -0.340999127418*t126*t5750;
  t5885 = t215*t232*t1719;
  t5886 = t5875 + t5881 + t5885;
  t5958 = t232*t234*t3175*t589;
  t5959 = -1.*t232*t623*t3175*t635;
  t5963 = t5958 + t5959;
  t5968 = t232*t623*t234*t3175;
  t5972 = t232*t3175*t589*t635;
  t5973 = t5968 + t5972;
  t6013 = -1.*t2078*t3175*t1375;
  t6019 = t5963*t2110;
  t6024 = t5973*t2220;
  t6030 = t6013 + t6019 + t6024;
  t5964 = -0.340999127418*t126*t5963;
  t5974 = t1152*t5973;
  t5975 = -1.*t3175*t1375*t1411;
  t5976 = t5964 + t5974 + t5975;
  t5991 = t1600*t5963;
  t5992 = -0.340999127418*t126*t5973;
  t6002 = -1.*t3175*t1375*t1719;
  t6007 = t5991 + t5992 + t6002;
  t6072 = t623*t3175*t1375;
  t6076 = -1.*t215*t589;
  t6080 = t6072 + t6076;
  t6062 = t215*t623;
  t6063 = t3175*t1375*t589;
  t6068 = t6062 + t6063;
  t6071 = t234*t6068;
  t6081 = -1.*t6080*t635;
  t6083 = t6071 + t6081;
  t6087 = -1.*t234*t6080;
  t6088 = -1.*t6068*t635;
  t6090 = t6087 + t6088;
  t6110 = t6090*t2110;
  t6113 = t6083*t2220;
  t6114 = t6110 + t6113;
  t6102 = t1152*t6083;
  t6103 = -0.340999127418*t126*t6090;
  t6104 = t6102 + t6103;
  t6084 = -0.340999127418*t126*t6083;
  t6092 = t1600*t6090;
  t6099 = t6084 + t6092;
  t6143 = t6080*t635;
  t6148 = t5544 + t6143;
  t6150 = t234*t6080;
  t6153 = -1.*t5543*t635;
  t6155 = t6150 + t6153;
  t6182 = t6155*t2110;
  t6185 = t6148*t2220;
  t6186 = t6182 + t6185;
  t6161 = t1152*t6148;
  t6175 = -0.340999127418*t126*t6155;
  t6178 = t6161 + t6175;
  t6149 = -0.340999127418*t126*t6148;
  t6156 = t1600*t6155;
  t6158 = t6149 + t6156;
  t6298 = t6068*t635;
  t6299 = t6150 + t6298;
  t6329 = -0.930418*t119*t6083;
  t6330 = -0.366501*t119*t6299;
  t6331 = -1.000000637725*t232*t3175*t1381;
  t6333 = t6329 + t6330 + t6331;
  t6303 = 0.366501*t232*t119*t3175;
  t6319 = -0.340999127418*t6083*t1381;
  t6322 = -0.134322983001*t6299*t1381;
  t6325 = t6303 + t6319 + t6322;
  t6287 = 0.930418*t232*t119*t3175;
  t6292 = -0.8656776547239999*t6083*t1381;
  t6300 = -0.340999127418*t6299*t1381;
  t6301 = t6287 + t6292 + t6300;
  t6397 = t232*t2078*t3175;
  t6400 = t6083*t2110;
  t6401 = t6299*t2220;
  t6404 = t6397 + t6400 + t6401;
  t6371 = t1152*t6299;
  t6372 = t232*t3175*t1411;
  t6374 = t6084 + t6371 + t6372;
  t6385 = t1600*t6083;
  t6388 = -0.340999127418*t126*t6299;
  t6390 = t232*t3175*t1719;
  t6394 = t6385 + t6388 + t6390;
  t6438 = t232*t234*t589;
  t6439 = -1.*t232*t623*t635;
  t6443 = t6438 + t6439;
  t6445 = -1.*t232*t623*t234;
  t6446 = -1.*t232*t589*t635;
  t6447 = t6445 + t6446;
  t6469 = t6447*t2110;
  t6470 = t6443*t2220;
  t6471 = t6469 + t6470;
  t6460 = t1152*t6443;
  t6461 = -0.340999127418*t126*t6447;
  t6467 = t6460 + t6461;
  t6444 = -0.340999127418*t126*t6443;
  t6448 = t1600*t6447;
  t6458 = t6444 + t6448;
  t6507 = -1.*t232*t234*t589;
  t6513 = t232*t623*t635;
  t6514 = t6507 + t6513;
  t6519 = t232*t623*t234;
  t6520 = t232*t589*t635;
  t6522 = t6519 + t6520;
  t6537 = t6522*t2110;
  t6542 = t6514*t2220;
  t6546 = t6537 + t6542;
  t6529 = t1152*t6514;
  t6530 = -0.340999127418*t126*t6522;
  t6535 = t6529 + t6530;
  t6515 = -0.340999127418*t126*t6514;
  t6523 = t1600*t6522;
  t6524 = t6515 + t6523;
  t6574 = -1.*t234*t1375*t589;
  t6578 = t623*t1375*t635;
  t6582 = t6574 + t6578;
  t6586 = -1.*t623*t234*t1375;
  t6587 = -1.*t1375*t589*t635;
  t6588 = t6586 + t6587;
  t6608 = -1.*t232*t2078;
  t6609 = t6582*t2110;
  t6610 = t6588*t2220;
  t6615 = t6608 + t6609 + t6610;
  t6585 = -0.340999127418*t126*t6582;
  t6590 = t1152*t6588;
  t6594 = -1.*t232*t1411;
  t6595 = t6585 + t6590 + t6594;
  t6599 = t1600*t6582;
  t6600 = -0.340999127418*t126*t6588;
  t6601 = -1.*t232*t1719;
  t6602 = t6599 + t6600 + t6601;
  t6668 = -0.930418*t119*t6443;
  t6669 = -0.366501*t119*t6522;
  t6671 = 1.000000637725*t1375*t1381;
  t6672 = t6668 + t6669 + t6671;
  t6659 = -0.366501*t119*t1375;
  t6661 = -0.340999127418*t6443*t1381;
  t6662 = -0.134322983001*t6522*t1381;
  t6663 = t6659 + t6661 + t6662;
  t6644 = -0.930418*t119*t1375;
  t6647 = -0.8656776547239999*t6443*t1381;
  t6648 = -0.340999127418*t6522*t1381;
  t6653 = t6644 + t6647 + t6648;
  t6714 = -1.*t2078*t1375;
  t6715 = t6443*t2110;
  t6720 = t6522*t2220;
  t6721 = t6714 + t6715 + t6720;
  t6699 = t1152*t6522;
  t6700 = -1.*t1375*t1411;
  t6701 = t6444 + t6699 + t6700;
  t6706 = t1600*t6443;
  t6707 = -1.*t1375*t1719;
  t6711 = t6706 + t6530 + t6707;
  t1490 = 0.340999127418*t51*t1455;
  t1903 = t1542*t1873;
  t2374 = t2314*t2340;
  t2401 = t1490 + t1903 + t2374;
  t2592 = t2588*t2314;
  t2615 = t1455*t2607;
  t2730 = t1873*t2699;
  t2750 = t2592 + t2615 + t2730;
  t2781 = 0.707107*t2750;
  t2808 = t2804*t1455;
  t2832 = 0.340999127418*t51*t1873;
  t2942 = t2314*t2941;
  t2943 = t2808 + t2832 + t2942;
  t4022 = t1542*t4008;
  t4258 = 0.340999127418*t51*t4250;
  t4316 = t4288*t2340;
  t4500 = t4022 + t4258 + t4316;
  t4634 = t2588*t4288;
  t4715 = t4250*t2607;
  t4728 = t4008*t2699;
  t4732 = t4634 + t4715 + t4728;
  t4739 = 0.707107*t4732;
  t4767 = 0.340999127418*t51*t4008;
  t4771 = t2804*t4250;
  t4880 = t4288*t2941;
  t4927 = t4767 + t4771 + t4880;
  t5299 = t1542*t5281;
  t5333 = 0.340999127418*t51*t5317;
  t5372 = t5351*t2340;
  t5379 = t5299 + t5333 + t5372;
  t5398 = t2588*t5351;
  t5402 = t5317*t2607;
  t5412 = t5281*t2699;
  t5430 = t5398 + t5402 + t5412;
  t5432 = 0.707107*t5430;
  t5498 = 0.340999127418*t51*t5281;
  t5507 = t2804*t5317;
  t5514 = t5351*t2941;
  t5524 = t5498 + t5507 + t5514;
  t5588 = 0.340999127418*t51*t5587;
  t5652 = t1542*t5638;
  t5673 = t5668*t2340;
  t5678 = t5588 + t5652 + t5673;
  t5686 = t2588*t5668;
  t5687 = t5587*t2607;
  t5695 = t5638*t2699;
  t5700 = t5686 + t5687 + t5695;
  t5713 = 0.707107*t5700;
  t5722 = t2804*t5587;
  t5729 = 0.340999127418*t51*t5638;
  t5734 = t5668*t2941;
  t5735 = t5722 + t5729 + t5734;
  t5761 = t1542*t5757;
  t5772 = 0.340999127418*t51*t5770;
  t5792 = t5787*t2340;
  t5793 = t5761 + t5772 + t5792;
  t5798 = t2588*t5787;
  t5799 = t5770*t2607;
  t5802 = t5757*t2699;
  t5818 = t5798 + t5799 + t5802;
  t5827 = 0.707107*t5818;
  t5828 = 0.340999127418*t51*t5757;
  t5831 = t2804*t5770;
  t5841 = t5787*t2941;
  t5849 = t5828 + t5831 + t5841;
  t5874 = -0.930418*t49*t5871;
  t5887 = 0.366501*t49*t5886;
  t5892 = -1.000000637725*t5891*t2315;
  t5911 = t5874 + t5887 + t5892;
  t5912 = 0.707107*t5911;
  t5913 = -0.366501*t49*t5891;
  t5916 = 0.340999127418*t5871*t2315;
  t5926 = -0.134322983001*t5886*t2315;
  t5927 = t5913 + t5916 + t5926;
  t5937 = 0.930418*t49*t5891;
  t5942 = -0.8656776547239999*t5871*t2315;
  t5943 = 0.340999127418*t5886*t2315;
  t5949 = t5937 + t5942 + t5943;
  t5979 = 0.340999127418*t51*t5976;
  t6012 = t1542*t6007;
  t6037 = t6030*t2340;
  t6040 = t5979 + t6012 + t6037;
  t6042 = t2588*t6030;
  t6043 = t5976*t2607;
  t6044 = t6007*t2699;
  t6045 = t6042 + t6043 + t6044;
  t6047 = 0.707107*t6045;
  t6048 = t2804*t5976;
  t6049 = 0.340999127418*t51*t6007;
  t6051 = t6030*t2941;
  t6055 = t6048 + t6049 + t6051;
  t6100 = t1542*t6099;
  t6109 = 0.340999127418*t51*t6104;
  t6115 = t6114*t2340;
  t6116 = t6100 + t6109 + t6115;
  t6119 = t2588*t6114;
  t6120 = t6104*t2607;
  t6122 = t6099*t2699;
  t6126 = t6119 + t6120 + t6122;
  t6128 = 0.707107*t6126;
  t6130 = 0.340999127418*t51*t6099;
  t6135 = t2804*t6104;
  t6138 = t6114*t2941;
  t6139 = t6130 + t6135 + t6138;
  t6159 = t1542*t6158;
  t6181 = 0.340999127418*t51*t6178;
  t6187 = t6186*t2340;
  t6188 = t6159 + t6181 + t6187;
  t6190 = t2588*t6186;
  t6192 = t6178*t2607;
  t6196 = t6158*t2699;
  t6197 = t6190 + t6192 + t6196;
  t6203 = 0.707107*t6197;
  t6207 = 0.340999127418*t51*t6158;
  t6208 = t2804*t6178;
  t6215 = t6186*t2941;
  t6222 = t6207 + t6208 + t6215;
  t6236 = 0.340999127418*t51*t5871;
  t6237 = t1542*t5886;
  t6238 = t5891*t2340;
  t6243 = t6236 + t6237 + t6238;
  t6245 = t2588*t5891;
  t6247 = t5871*t2607;
  t6250 = t5886*t2699;
  t6256 = t6245 + t6247 + t6250;
  t6262 = 0.707107*t6256;
  t6264 = t2804*t5871;
  t6265 = 0.340999127418*t51*t5886;
  t6267 = t5891*t2941;
  t6269 = t6264 + t6265 + t6267;
  t6302 = t1542*t6301;
  t6326 = 0.340999127418*t51*t6325;
  t6334 = t6333*t2340;
  t6335 = t6302 + t6326 + t6334;
  t6337 = t2588*t6333;
  t6338 = t6325*t2607;
  t6339 = t6301*t2699;
  t6341 = t6337 + t6338 + t6339;
  t6342 = 0.707107*t6341;
  t6346 = 0.340999127418*t51*t6301;
  t6348 = t2804*t6325;
  t6351 = t6333*t2941;
  t6352 = t6346 + t6348 + t6351;
  t6384 = -0.930418*t49*t6374;
  t6396 = 0.366501*t49*t6394;
  t6405 = -1.000000637725*t6404*t2315;
  t6406 = t6384 + t6396 + t6405;
  t6407 = 0.707107*t6406;
  t6408 = -0.366501*t49*t6404;
  t6409 = 0.340999127418*t6374*t2315;
  t6410 = -0.134322983001*t6394*t2315;
  t6411 = t6408 + t6409 + t6410;
  t6420 = 0.930418*t49*t6404;
  t6427 = -0.8656776547239999*t6374*t2315;
  t6431 = 0.340999127418*t6394*t2315;
  t6432 = t6420 + t6427 + t6431;
  t6459 = t1542*t6458;
  t6468 = 0.340999127418*t51*t6467;
  t6472 = t6471*t2340;
  t6473 = t6459 + t6468 + t6472;
  t6477 = t2588*t6471;
  t6479 = t6467*t2607;
  t6482 = t6458*t2699;
  t6483 = t6477 + t6479 + t6482;
  t6486 = 0.707107*t6483;
  t6490 = 0.340999127418*t51*t6458;
  t6491 = t2804*t6467;
  t6493 = t6471*t2941;
  t6494 = t6490 + t6491 + t6493;
  t6527 = t1542*t6524;
  t6536 = 0.340999127418*t51*t6535;
  t6547 = t6546*t2340;
  t6548 = t6527 + t6536 + t6547;
  t6555 = t2588*t6546;
  t6557 = t6535*t2607;
  t6558 = t6524*t2699;
  t6559 = t6555 + t6557 + t6558;
  t6560 = 0.707107*t6559;
  t6561 = 0.340999127418*t51*t6524;
  t6562 = t2804*t6535;
  t6564 = t6546*t2941;
  t6565 = t6561 + t6562 + t6564;
  t6598 = 0.340999127418*t51*t6595;
  t6607 = t1542*t6602;
  t6616 = t6615*t2340;
  t6617 = t6598 + t6607 + t6616;
  t6621 = t2588*t6615;
  t6623 = t6595*t2607;
  t6624 = t6602*t2699;
  t6625 = t6621 + t6623 + t6624;
  t6626 = 0.707107*t6625;
  t6628 = t2804*t6595;
  t6629 = 0.340999127418*t51*t6602;
  t6630 = t6615*t2941;
  t6635 = t6628 + t6629 + t6630;
  t6658 = t1542*t6653;
  t6664 = 0.340999127418*t51*t6663;
  t6673 = t6672*t2340;
  t6674 = t6658 + t6664 + t6673;
  t6676 = t2588*t6672;
  t6679 = t6663*t2607;
  t6682 = t6653*t2699;
  t6683 = t6676 + t6679 + t6682;
  t6684 = 0.707107*t6683;
  t6685 = 0.340999127418*t51*t6653;
  t6686 = t2804*t6663;
  t6688 = t6672*t2941;
  t6689 = t6685 + t6686 + t6688;
  t6702 = -0.930418*t49*t6701;
  t6713 = 0.366501*t49*t6711;
  t6722 = -1.000000637725*t6721*t2315;
  t6723 = t6702 + t6713 + t6722;
  t6724 = 0.707107*t6723;
  t6725 = -0.366501*t49*t6721;
  t6731 = 0.340999127418*t6701*t2315;
  t6732 = -0.134322983001*t6711*t2315;
  t6733 = t6725 + t6731 + t6732;
  t6735 = 0.930418*t49*t6721;
  t6739 = -0.8656776547239999*t6701*t2315;
  t6740 = 0.340999127418*t6711*t2315;
  t6741 = t6735 + t6739 + t6740;
  t6991 = -3.2909349868922137e-7*var1[7];
  t6992 = 0.03103092645718495*t126;
  t6993 = -0.045000372235*t1411;
  t7001 = t6991 + t6992 + t6993;
  t7005 = 1.296332362046933e-7*var1[7];
  t7007 = 0.07877668146182712*t126;
  t7012 = -0.045000372235*t1719;
  t7014 = t7005 + t7007 + t7012;
  t7016 = 3.2909349868922137e-7*var1[8];
  t7017 = 0.055653945343889656*t51;
  t7018 = -0.045000372235*t2340;
  t7019 = t7016 + t7017 + t7018;
  t7022 = -0.04500040093286238*t51;
  t7023 = -0.141285834136*t2607;
  t7024 = 0.055653909852*t2699;
  t7025 = 0. + t7022 + t7023 + t7024;
  t7028 = 1.296332362046933e-7*var1[8];
  t7029 = -0.14128592423750855*t51;
  t7031 = -0.045000372235*t2941;
  t7032 = t7028 + t7029 + t7031;
  t6978 = -1.*t234;
  t6979 = 1. + t6978;
  t6980 = 0.091*t6979;
  t6981 = 0. + t6980;
  t6983 = 0.091*t635;
  t6984 = 0. + t6983;
  t6986 = -0.04500040093286238*t126;
  t6987 = 0.07877663122399998*t2110;
  t6988 = 0.031030906668*t2220;
  t6989 = 0. + t6986 + t6987 + t6988;
  t7097 = -0.0846680539949003*t119;
  t7098 = -0.04500040093286238*t1381;
  t7099 = t7097 + t7098;
  t7103 = -0.016492681424499736*t119;
  t7104 = 0.03103092645718495*t1381;
  t7105 = -3.2909349868922137e-7 + t7103 + t7104;
  t7107 = -0.04186915633414423*t119;
  t7108 = 0.07877668146182712*t1381;
  t7109 = 1.296332362046933e-7 + t7107 + t7108;
  t7119 = -0.04186915633414423*t49;
  t7120 = -0.14128592423750855*t2315;
  t7121 = 1.296332362046933e-7 + t7119 + t7120;
  t7125 = 0.15185209683981668*t49;
  t7126 = -0.04500040093286238*t2315;
  t7128 = t7125 + t7126;
  t7130 = 0.016492681424499736*t49;
  t7131 = 0.055653945343889656*t2315;
  t7132 = 3.2909349868922137e-7 + t7130 + t7131;
  p_output1[0]=(0.259155*t5678 + t5713 - 0.657905*t5735)*var2[3] + (0.259155*t2401 + t2781 - 0.657905*t2943)*var2[4] + (0.259155*t5379 + t5432 - 0.657905*t5524)*var2[5] + (0.259155*t4500 + t4739 - 0.657905*t4927)*var2[6] + (0.259155*t5793 + t5827 - 0.657905*t5849)*var2[7] + (t5912 + 0.259155*t5927 - 0.657905*t5949)*var2[8];
  p_output1[1]=(0.259155*t6243 + t6262 - 0.657905*t6269)*var2[3] + (0.259155*t6040 + t6047 - 0.657905*t6055)*var2[4] + (0.259155*t6188 + t6203 - 0.657905*t6222)*var2[5] + (0.259155*t6116 + t6128 - 0.657905*t6139)*var2[6] + (0.259155*t6335 + t6342 - 0.657905*t6352)*var2[7] + (t6407 + 0.259155*t6411 - 0.657905*t6432)*var2[8];
  p_output1[2]=(0.259155*t6617 + t6626 - 0.657905*t6635)*var2[4] + (0.259155*t6548 + t6560 - 0.657905*t6565)*var2[5] + (0.259155*t6473 + t6486 - 0.657905*t6494)*var2[6] + (0.259155*t6674 + t6684 - 0.657905*t6689)*var2[7] + (t6724 + 0.259155*t6733 - 0.657905*t6741)*var2[8];
  p_output1[3]=0;
  p_output1[4]=(-0.259155*t5678 + t5713 + 0.657905*t5735)*var2[3] + (-0.259155*t2401 + t2781 + 0.657905*t2943)*var2[4] + (-0.259155*t5379 + t5432 + 0.657905*t5524)*var2[5] + (-0.259155*t4500 + t4739 + 0.657905*t4927)*var2[6] + (-0.259155*t5793 + t5827 + 0.657905*t5849)*var2[7] + (t5912 - 0.259155*t5927 + 0.657905*t5949)*var2[8];
  p_output1[5]=(-0.259155*t6243 + t6262 + 0.657905*t6269)*var2[3] + (-0.259155*t6040 + t6047 + 0.657905*t6055)*var2[4] + (-0.259155*t6188 + t6203 + 0.657905*t6222)*var2[5] + (-0.259155*t6116 + t6128 + 0.657905*t6139)*var2[6] + (-0.259155*t6335 + t6342 + 0.657905*t6352)*var2[7] + (t6407 - 0.259155*t6411 + 0.657905*t6432)*var2[8];
  p_output1[6]=(-0.259155*t6617 + t6626 + 0.657905*t6635)*var2[4] + (-0.259155*t6548 + t6560 + 0.657905*t6565)*var2[5] + (-0.259155*t6473 + t6486 + 0.657905*t6494)*var2[6] + (-0.259155*t6674 + t6684 + 0.657905*t6689)*var2[7] + (t6724 - 0.259155*t6733 + 0.657905*t6741)*var2[8];
  p_output1[7]=0;
  p_output1[8]=(-0.930418*t5678 - 0.366501*t5735)*var2[3] + (-0.930418*t2401 - 0.366501*t2943)*var2[4] + (-0.930418*t5379 - 0.366501*t5524)*var2[5] + (-0.930418*t4500 - 0.366501*t4927)*var2[6] + (-0.930418*t5793 - 0.366501*t5849)*var2[7] + (-0.930418*t5927 - 0.366501*t5949)*var2[8];
  p_output1[9]=(-0.930418*t6243 - 0.366501*t6269)*var2[3] + (-0.930418*t6040 - 0.366501*t6055)*var2[4] + (-0.930418*t6188 - 0.366501*t6222)*var2[5] + (-0.930418*t6116 - 0.366501*t6139)*var2[6] + (-0.930418*t6335 - 0.366501*t6352)*var2[7] + (-0.930418*t6411 - 0.366501*t6432)*var2[8];
  p_output1[10]=(-0.930418*t6617 - 0.366501*t6635)*var2[4] + (-0.930418*t6548 - 0.366501*t6565)*var2[5] + (-0.930418*t6473 - 0.366501*t6494)*var2[6] + (-0.930418*t6674 - 0.366501*t6689)*var2[7] + (-0.930418*t6733 - 0.366501*t6741)*var2[8];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (0.138152*t5678 - 0.045*t5700 - 0.108789*t5735 + t5543*t6981 + t5550*t6984 - 1.*t232*t3175*t6989 + t5578*t7001 + t5561*t7014 + t5638*t7019 + t5668*t7025 + t5587*t7032)*var2[3] + (0.138152*t2401 - 0.045*t2750 - 0.108789*t2943 + t215*t232*t589*t6981 + t215*t232*t623*t6984 - 1.*t1375*t215*t6989 + t1260*t7001 + t1057*t7014 + t1873*t7019 + t2314*t7025 + t1455*t7032)*var2[4] + (0.138152*t5379 - 0.045*t5430 - 0.108789*t5524 + t3518*t6981 + t5178*t6984 + t5198*t7001 + t5251*t7014 + t5281*t7019 + t5351*t7025 + t5317*t7032)*var2[5] + (0.091*t234*t3518 + 0.138152*t4500 - 0.045*t4732 - 0.108789*t4927 + 0.091*t3388*t635 + t3761*t7001 + t3980*t7014 + t4008*t7019 + t4288*t7025 + t4250*t7032)*var2[6] + (0.138152*t5793 - 0.045*t5818 - 0.108789*t5849 + t5757*t7019 + t5787*t7025 + t5770*t7032 + t215*t232*t7099 + t5750*t7105 + t3761*t7109)*var2[7] + (-0.045*t5911 + 0.138152*t5927 - 0.108789*t5949 + t5871*t7121 + t5891*t7128 + t5886*t7132)*var2[8];
  p_output1[13]=var2[1] + (0.138152*t6243 - 0.045*t6256 - 0.108789*t6269 + t3388*t6981 + t3518*t6984 + t215*t232*t6989 + t5750*t7001 + t3761*t7014 + t5886*t7019 + t5891*t7025 + t5871*t7032)*var2[3] + (0.138152*t6040 - 0.045*t6045 - 0.108789*t6055 + t232*t3175*t589*t6981 + t232*t3175*t623*t6984 - 1.*t1375*t3175*t6989 + t5973*t7001 + t5963*t7014 + t6007*t7019 + t6030*t7025 + t5976*t7032)*var2[4] + (0.138152*t6188 - 0.045*t6197 - 0.108789*t6222 + t6080*t6981 + t5543*t6984 + t6148*t7001 + t6155*t7014 + t6158*t7019 + t6186*t7025 + t6178*t7032)*var2[5] + (0.091*t234*t6080 + 0.138152*t6116 - 0.045*t6126 - 0.108789*t6139 + 0.091*t6068*t635 + t6083*t7001 + t6090*t7014 + t6099*t7019 + t6114*t7025 + t6104*t7032)*var2[6] + (0.138152*t6335 - 0.045*t6341 - 0.108789*t6352 + t6301*t7019 + t6333*t7025 + t6325*t7032 + t232*t3175*t7099 + t6299*t7105 + t6083*t7109)*var2[7] + (-0.045*t6406 + 0.138152*t6411 - 0.108789*t6432 + t6374*t7121 + t6404*t7128 + t6394*t7132)*var2[8];
  p_output1[14]=var2[2] + (0.138152*t6617 - 0.045*t6625 - 0.108789*t6635 - 1.*t1375*t589*t6981 - 1.*t1375*t623*t6984 - 1.*t232*t6989 + t6588*t7001 + t6582*t7014 + t6602*t7019 + t6615*t7025 + t6595*t7032)*var2[4] + (0.138152*t6548 - 0.045*t6559 - 0.108789*t6565 + t232*t623*t6981 - 1.*t232*t589*t6984 + t6514*t7001 + t6522*t7014 + t6524*t7019 + t6546*t7025 + t6535*t7032)*var2[5] + (0.091*t232*t234*t623 + 0.091*t232*t589*t635 + 0.138152*t6473 - 0.045*t6483 - 0.108789*t6494 + t6443*t7001 + t6447*t7014 + t6458*t7019 + t6471*t7025 + t6467*t7032)*var2[6] + (0.138152*t6674 - 0.045*t6683 - 0.108789*t6689 + t6653*t7019 + t6672*t7025 + t6663*t7032 - 1.*t1375*t7099 + t6522*t7105 + t6443*t7109)*var2[7] + (-0.045*t6723 + 0.138152*t6733 - 0.108789*t6741 + t6701*t7121 + t6721*t7128 + t6711*t7132)*var2[8];
  p_output1[15]=0;
}



void dT_hip_flexion_left_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
