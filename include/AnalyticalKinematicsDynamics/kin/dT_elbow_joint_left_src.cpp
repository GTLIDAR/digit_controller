/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:44:17 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dT_elbow_joint_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t265;
  double t522;
  double t428;
  double t440;
  double t466;
  double t789;
  double t533;
  double t583;
  double t822;
  double t59;
  double t92;
  double t98;
  double t184;
  double t287;
  double t318;
  double t775;
  double t906;
  double t911;
  double t935;
  double t975;
  double t983;
  double t296;
  double t309;
  double t331;
  double t915;
  double t921;
  double t923;
  double t993;
  double t1009;
  double t1053;
  double t1098;
  double t1105;
  double t1109;
  double t1137;
  double t1167;
  double t1222;
  double t1235;
  double t163;
  double t1273;
  double t1284;
  double t1306;
  double t1317;
  double t1327;
  double t1332;
  double t1336;
  double t1356;
  double t1380;
  double t1388;
  double t1441;
  double t1448;
  double t1474;
  double t1527;
  double t1038;
  double t7;
  double t199;
  double t235;
  double t1028;
  double t1040;
  double t1051;
  double t1253;
  double t1256;
  double t1266;
  double t1392;
  double t1397;
  double t1476;
  double t1502;
  double t1525;
  double t1549;
  double t1552;
  double t1565;
  double t1606;
  double t1610;
  double t1611;
  double t1614;
  double t1680;
  double t1683;
  double t1684;
  double t1697;
  double t1754;
  double t1756;
  double t1776;
  double t1783;
  double t1800;
  double t1848;
  double t52;
  double t55;
  double t2126;
  double t2120;
  double t2128;
  double t2143;
  double t2149;
  double t2158;
  double t2159;
  double t2146;
  double t2160;
  double t2205;
  double t2222;
  double t2227;
  double t2243;
  double t2206;
  double t2276;
  double t2278;
  double t2285;
  double t2289;
  double t2294;
  double t2310;
  double t2320;
  double t2324;
  double t1652;
  double t1673;
  double t1875;
  double t1882;
  double t2279;
  double t2296;
  double t2330;
  double t2337;
  double t1915;
  double t1919;
  double t2340;
  double t2342;
  double t2385;
  double t2419;
  double t2433;
  double t2436;
  double t2474;
  double t2505;
  double t1982;
  double t1986;
  double t2009;
  double t2016;
  double t2065;
  double t2079;
  double t2672;
  double t2674;
  double t2686;
  double t2665;
  double t2690;
  double t2697;
  double t2706;
  double t2712;
  double t2718;
  double t2702;
  double t2719;
  double t2725;
  double t2733;
  double t2743;
  double t2773;
  double t2788;
  double t2811;
  double t2812;
  double t2726;
  double t2786;
  double t2824;
  double t2827;
  double t2838;
  double t2849;
  double t2851;
  double t2896;
  double t2900;
  double t2916;
  double t2919;
  double t2924;
  double t2999;
  double t3001;
  double t2995;
  double t3004;
  double t3013;
  double t3019;
  double t3021;
  double t3029;
  double t3036;
  double t3046;
  double t3048;
  double t3065;
  double t3068;
  double t3017;
  double t3039;
  double t3071;
  double t3079;
  double t3081;
  double t3089;
  double t3100;
  double t3108;
  double t3124;
  double t3150;
  double t3167;
  double t3169;
  double t3261;
  double t3297;
  double t3338;
  double t3246;
  double t3248;
  double t3289;
  double t3292;
  double t3295;
  double t3305;
  double t3306;
  double t3314;
  double t3319;
  double t3321;
  double t3322;
  double t3323;
  double t3326;
  double t3345;
  double t3350;
  double t3353;
  double t3367;
  double t3375;
  double t3376;
  double t3379;
  double t3381;
  double t3382;
  double t3390;
  double t3394;
  double t3457;
  double t3462;
  double t3465;
  double t3472;
  double t3477;
  double t3479;
  double t3480;
  double t3482;
  double t3487;
  double t3488;
  double t3501;
  double t3502;
  double t3474;
  double t3485;
  double t3509;
  double t3510;
  double t3514;
  double t3519;
  double t3522;
  double t3525;
  double t3535;
  double t3536;
  double t3537;
  double t3541;
  double t3665;
  double t3679;
  double t3682;
  double t3685;
  double t3690;
  double t3693;
  double t3683;
  double t3695;
  double t3699;
  double t3712;
  double t3716;
  double t3717;
  double t3650;
  double t3704;
  double t3718;
  double t3720;
  double t3746;
  double t3751;
  double t3752;
  double t3753;
  double t3758;
  double t3765;
  double t3770;
  double t3775;
  double t3724;
  double t3757;
  double t3776;
  double t3777;
  double t3781;
  double t3791;
  double t3795;
  double t3797;
  double t3800;
  double t3807;
  double t3809;
  double t3810;
  double t3879;
  double t3881;
  double t3882;
  double t3890;
  double t3891;
  double t3892;
  double t3876;
  double t3889;
  double t3907;
  double t3910;
  double t3913;
  double t3915;
  double t3936;
  double t3941;
  double t3947;
  double t3950;
  double t3951;
  double t3957;
  double t3912;
  double t3944;
  double t3960;
  double t3964;
  double t3969;
  double t3973;
  double t3980;
  double t3981;
  double t3984;
  double t3990;
  double t3994;
  double t4000;
  double t4116;
  double t4118;
  double t4122;
  double t4124;
  double t4130;
  double t4132;
  double t4133;
  double t4143;
  double t4131;
  double t4144;
  double t4154;
  double t4157;
  double t4162;
  double t4167;
  double t4172;
  double t4176;
  double t4183;
  double t4155;
  double t4170;
  double t4188;
  double t4195;
  double t4207;
  double t4209;
  double t4215;
  double t4229;
  double t4231;
  double t4250;
  double t4251;
  double t4272;
  double t4410;
  double t4416;
  double t4426;
  double t4406;
  double t4427;
  double t4433;
  double t4437;
  double t4440;
  double t4466;
  double t4436;
  double t4471;
  double t4472;
  double t4499;
  double t4508;
  double t4523;
  double t4531;
  double t4539;
  double t4544;
  double t4475;
  double t4527;
  double t4545;
  double t4547;
  double t4559;
  double t4571;
  double t4572;
  double t4575;
  double t4595;
  double t4603;
  double t4622;
  double t4628;
  double t4731;
  double t4733;
  double t4730;
  double t4735;
  double t4736;
  double t4752;
  double t4755;
  double t4767;
  double t4770;
  double t4787;
  double t4796;
  double t4808;
  double t4809;
  double t4745;
  double t4778;
  double t4814;
  double t4815;
  double t4822;
  double t4824;
  double t4833;
  double t4834;
  double t4851;
  double t4852;
  double t4858;
  double t4859;
  double t4936;
  double t4938;
  double t4939;
  double t4943;
  double t4947;
  double t4957;
  double t4960;
  double t4963;
  double t4983;
  double t4987;
  double t4989;
  double t4991;
  double t5063;
  double t5064;
  double t5068;
  double t5070;
  double t5088;
  double t5093;
  double t5106;
  double t5109;
  double t5119;
  double t5122;
  double t5123;
  double t5125;
  double t5073;
  double t5115;
  double t5127;
  double t5133;
  double t5139;
  double t5151;
  double t5155;
  double t5156;
  double t5158;
  double t5176;
  double t5177;
  double t5181;
  double t5262;
  double t5263;
  double t5265;
  double t5285;
  double t5290;
  double t5294;
  double t5270;
  double t5308;
  double t5312;
  double t5319;
  double t5322;
  double t5325;
  double t5333;
  double t5342;
  double t5343;
  double t5316;
  double t5327;
  double t5347;
  double t5357;
  double t5373;
  double t5379;
  double t5381;
  double t5382;
  double t5395;
  double t5397;
  double t5400;
  double t5403;
  double t5512;
  double t5514;
  double t5518;
  double t5496;
  double t5521;
  double t5522;
  double t5526;
  double t5528;
  double t5529;
  double t5535;
  double t5543;
  double t5544;
  double t5548;
  double t5551;
  double t5523;
  double t5537;
  double t5565;
  double t5569;
  double t5577;
  double t5592;
  double t5600;
  double t5606;
  double t5618;
  double t5634;
  double t5638;
  double t5639;
  double t5759;
  double t5760;
  double t5775;
  double t5783;
  double t5791;
  double t5797;
  double t5801;
  double t5805;
  double t5818;
  double t5826;
  double t5830;
  double t5832;
  double t5949;
  double t5952;
  double t5953;
  double t5962;
  double t5973;
  double t5974;
  double t5980;
  double t5985;
  double t5998;
  double t6000;
  double t6007;
  double t5977;
  double t5990;
  double t6011;
  double t6018;
  double t6028;
  double t6031;
  double t6044;
  double t6045;
  double t6065;
  double t6066;
  double t6083;
  double t6086;
  double t6167;
  double t6169;
  double t6173;
  double t6182;
  double t6186;
  double t6198;
  double t6200;
  double t6203;
  double t6206;
  double t6208;
  double t6222;
  double t6230;
  double t6184;
  double t6205;
  double t6236;
  double t6240;
  double t6243;
  double t6252;
  double t6257;
  double t6259;
  double t6267;
  double t6268;
  double t6269;
  double t6274;
  double t6351;
  double t6360;
  double t6368;
  double t6372;
  double t6373;
  double t6384;
  double t6349;
  double t6371;
  double t6387;
  double t6405;
  double t6414;
  double t6415;
  double t6418;
  double t6421;
  double t6428;
  double t6431;
  double t6435;
  double t6439;
  double t6409;
  double t6425;
  double t6441;
  double t6444;
  double t6446;
  double t6448;
  double t6457;
  double t6459;
  double t6463;
  double t6471;
  double t6482;
  double t6486;
  double t1401;
  double t1623;
  double t1858;
  double t1868;
  double t1905;
  double t1933;
  double t1945;
  double t1961;
  double t2000;
  double t2044;
  double t2080;
  double t2090;
  double t2339;
  double t2429;
  double t2506;
  double t2510;
  double t2569;
  double t2573;
  double t2587;
  double t2597;
  double t2603;
  double t2620;
  double t2625;
  double t2630;
  double t2828;
  double t2899;
  double t2932;
  double t2936;
  double t2946;
  double t2947;
  double t2948;
  double t2954;
  double t2957;
  double t2962;
  double t2972;
  double t2981;
  double t3080;
  double t3123;
  double t3175;
  double t3177;
  double t3184;
  double t3185;
  double t3188;
  double t3189;
  double t3198;
  double t3225;
  double t3232;
  double t3236;
  double t3315;
  double t3365;
  double t3399;
  double t3401;
  double t3409;
  double t3410;
  double t3413;
  double t3419;
  double t3434;
  double t3437;
  double t3439;
  double t3440;
  double t3512;
  double t3533;
  double t3562;
  double t3566;
  double t3595;
  double t3602;
  double t3613;
  double t3614;
  double t3623;
  double t3629;
  double t3636;
  double t3637;
  double t3778;
  double t3799;
  double t3812;
  double t3813;
  double t3825;
  double t3835;
  double t3841;
  double t3842;
  double t3848;
  double t3849;
  double t3854;
  double t3855;
  double t3965;
  double t3983;
  double t4002;
  double t4004;
  double t4013;
  double t4016;
  double t4017;
  double t4019;
  double t4037;
  double t4039;
  double t4040;
  double t4041;
  double t4061;
  double t4070;
  double t4073;
  double t4076;
  double t4085;
  double t4086;
  double t4089;
  double t4091;
  double t4099;
  double t4101;
  double t4102;
  double t4105;
  double t4197;
  double t4230;
  double t4280;
  double t4300;
  double t4351;
  double t4352;
  double t4359;
  double t4369;
  double t4378;
  double t4380;
  double t4387;
  double t4395;
  double t4554;
  double t4577;
  double t4632;
  double t4640;
  double t4660;
  double t4664;
  double t4665;
  double t4666;
  double t4670;
  double t4680;
  double t4688;
  double t4701;
  double t4820;
  double t4846;
  double t4860;
  double t4862;
  double t4871;
  double t4884;
  double t4888;
  double t4890;
  double t4897;
  double t4902;
  double t4910;
  double t4912;
  double t4946;
  double t4964;
  double t4994;
  double t5003;
  double t5010;
  double t5014;
  double t5018;
  double t5026;
  double t5033;
  double t5036;
  double t5041;
  double t5045;
  double t5137;
  double t5157;
  double t5188;
  double t5189;
  double t5204;
  double t5215;
  double t5219;
  double t5221;
  double t5237;
  double t5238;
  double t5239;
  double t5251;
  double t5359;
  double t5384;
  double t5405;
  double t5409;
  double t5416;
  double t5424;
  double t5433;
  double t5434;
  double t5463;
  double t5464;
  double t5467;
  double t5473;
  double t5573;
  double t5613;
  double t5644;
  double t5655;
  double t5665;
  double t5679;
  double t5680;
  double t5681;
  double t5723;
  double t5725;
  double t5745;
  double t5746;
  double t5787;
  double t5815;
  double t5836;
  double t5845;
  double t5857;
  double t5874;
  double t5882;
  double t5888;
  double t5905;
  double t5914;
  double t5926;
  double t5927;
  double t6022;
  double t6064;
  double t6091;
  double t6103;
  double t6107;
  double t6108;
  double t6109;
  double t6124;
  double t6135;
  double t6136;
  double t6139;
  double t6145;
  double t6242;
  double t6260;
  double t6276;
  double t6278;
  double t6284;
  double t6289;
  double t6290;
  double t6291;
  double t6304;
  double t6308;
  double t6314;
  double t6321;
  double t6445;
  double t6460;
  double t6502;
  double t6503;
  double t6505;
  double t6508;
  double t6509;
  double t6515;
  double t6525;
  double t6531;
  double t6532;
  double t6535;
  double t7420;
  double t7428;
  double t7519;
  double t7547;
  double t7525;
  double t7468;
  double t7471;
  double t7472;
  double t7434;
  double t7436;
  double t7437;
  double t7497;
  double t7500;
  double t7501;
  double t7506;
  double t7476;
  double t7477;
  double t7478;
  double t7491;
  double t7540;
  double t7541;
  double t7550;
  double t7551;
  double t7552;
  double t7557;
  double t7566;
  double t7512;
  double t7518;
  double t7520;
  double t7522;
  double t7529;
  double t7530;
  double t7534;
  double t7570;
  double t7571;
  double t7574;
  double t7575;
  double t7576;
  double t7583;
  double t7584;
  double t7591;
  double t7595;
  double t7596;
  double t7597;
  double t7611;
  double t7618;
  double t7621;
  double t7634;
  double t7646;
  double t7654;
  double t7661;
  double t7662;
  double t7875;
  double t7909;
  double t7885;
  double t7445;
  double t7446;
  double t7451;
  double t7454;
  double t7763;
  double t7765;
  double t7767;
  double t7771;
  double t7774;
  double t7804;
  double t7814;
  double t7818;
  double t7820;
  double t7821;
  double t7829;
  double t7832;
  double t7844;
  double t7845;
  double t7881;
  double t7882;
  double t7886;
  double t7888;
  double t7901;
  double t7903;
  double t7910;
  double t7917;
  double t7919;
  double t7920;
  double t7934;
  double t7942;
  double t7947;
  double t7948;
  double t7949;
  double t7951;
  double t7952;
  double t7955;
  double t7985;
  double t7986;
  double t7987;
  double t7989;
  double t7992;
  double t8001;
  double t8007;
  double t8009;
  double t8010;
  t265 = Cos(var1[3]);
  t522 = Cos(var1[4]);
  t428 = Cos(var1[14]);
  t440 = -1.*t428;
  t466 = 1. + t440;
  t789 = Cos(var1[13]);
  t533 = Cos(var1[5]);
  t583 = Sin(var1[13]);
  t822 = Sin(var1[5]);
  t59 = Cos(var1[15]);
  t92 = -1.*t59;
  t98 = 1. + t92;
  t184 = Sin(var1[15]);
  t287 = Sin(var1[14]);
  t318 = Sin(var1[4]);
  t775 = -1.*t265*t522*t533*t583;
  t906 = t789*t265*t522*t822;
  t911 = t775 + t906;
  t935 = t789*t265*t522*t533;
  t975 = t265*t522*t583*t822;
  t983 = t935 + t975;
  t296 = 0.994522*t287;
  t309 = 0. + t296;
  t331 = -1.*t265*t309*t318;
  t915 = 0.103955395616*t466*t911;
  t921 = -0.9890740084840001*t466;
  t923 = 1. + t921;
  t993 = t923*t983;
  t1009 = t331 + t915 + t993;
  t1053 = -0.104528*t287;
  t1098 = 0. + t1053;
  t1105 = -1.*t265*t1098*t318;
  t1109 = -0.010926102783999999*t466;
  t1137 = 1. + t1109;
  t1167 = t1137*t911;
  t1222 = 0.103955395616*t466*t983;
  t1235 = t1105 + t1167 + t1222;
  t163 = -0.49726168403800003*t98;
  t1273 = -1.0000001112680001*t466;
  t1284 = 1. + t1273;
  t1306 = -1.*t1284*t265*t318;
  t1317 = 0.104528*t287;
  t1327 = 0. + t1317;
  t1332 = t1327*t911;
  t1336 = -0.994522*t287;
  t1356 = 0. + t1336;
  t1380 = t1356*t983;
  t1388 = t1306 + t1332 + t1380;
  t1441 = Cos(var1[16]);
  t1448 = -1.*t1441;
  t1474 = 1. + t1448;
  t1527 = -0.051978134642000004*t98;
  t1038 = 0.05226439969100001*t98;
  t7 = Sin(var1[16]);
  t199 = -0.073913*t184;
  t235 = t163 + t199;
  t1028 = t235*t1009;
  t1040 = -0.703234*t184;
  t1051 = t1038 + t1040;
  t1253 = t1051*t1235;
  t1256 = -0.500001190325*t98;
  t1266 = 1. + t1256;
  t1392 = t1266*t1388;
  t1397 = t1028 + t1253 + t1392;
  t1476 = -0.5054634410180001*t98;
  t1502 = 1. + t1476;
  t1525 = t1502*t1009;
  t1549 = -0.707107*t184;
  t1552 = t1527 + t1549;
  t1565 = t1552*t1235;
  t1606 = 0.073913*t184;
  t1610 = t163 + t1606;
  t1611 = t1610*t1388;
  t1614 = t1525 + t1565 + t1611;
  t1680 = 0.707107*t184;
  t1683 = t1527 + t1680;
  t1684 = t1683*t1009;
  t1697 = -0.9945383682050002*t98;
  t1754 = 1. + t1697;
  t1756 = t1754*t1235;
  t1776 = 0.703234*t184;
  t1783 = t1038 + t1776;
  t1800 = t1783*t1388;
  t1848 = t1684 + t1756 + t1800;
  t52 = -0.104528*t7;
  t55 = 0. + t52;
  t2126 = Sin(var1[3]);
  t2120 = t265*t533*t318;
  t2128 = t2126*t822;
  t2143 = t2120 + t2128;
  t2149 = t533*t2126;
  t2158 = -1.*t265*t318*t822;
  t2159 = t2149 + t2158;
  t2146 = t583*t2143;
  t2160 = t789*t2159;
  t2205 = t2146 + t2160;
  t2222 = t789*t2143;
  t2227 = -1.*t583*t2159;
  t2243 = t2222 + t2227;
  t2206 = 0.103955395616*t466*t2205;
  t2276 = t1137*t2243;
  t2278 = t2206 + t2276;
  t2285 = t923*t2205;
  t2289 = 0.103955395616*t466*t2243;
  t2294 = t2285 + t2289;
  t2310 = t1356*t2205;
  t2320 = t1327*t2243;
  t2324 = t2310 + t2320;
  t1652 = -0.010926102783999999*t1474;
  t1673 = 1. + t1652;
  t1875 = 0.994522*t7;
  t1882 = 0. + t1875;
  t2279 = t1051*t2278;
  t2296 = t235*t2294;
  t2330 = t1266*t2324;
  t2337 = t2279 + t2296 + t2330;
  t1915 = -0.9890740084840001*t1474;
  t1919 = 1. + t1915;
  t2340 = t1552*t2278;
  t2342 = t1502*t2294;
  t2385 = t1610*t2324;
  t2419 = t2340 + t2342 + t2385;
  t2433 = t1754*t2278;
  t2436 = t1683*t2294;
  t2474 = t1783*t2324;
  t2505 = t2433 + t2436 + t2474;
  t1982 = -1.0000001112680001*t1474;
  t1986 = 1. + t1982;
  t2009 = -0.994522*t7;
  t2016 = 0. + t2009;
  t2065 = 0.104528*t7;
  t2079 = 0. + t2065;
  t2672 = -1.*t533*t2126;
  t2674 = t265*t318*t822;
  t2686 = t2672 + t2674;
  t2665 = -1.*t583*t2143;
  t2690 = t789*t2686;
  t2697 = t2665 + t2690;
  t2706 = -1.*t789*t2143;
  t2712 = -1.*t583*t2686;
  t2718 = t2706 + t2712;
  t2702 = 0.103955395616*t466*t2697;
  t2719 = t1137*t2718;
  t2725 = t2702 + t2719;
  t2733 = t923*t2697;
  t2743 = 0.103955395616*t466*t2718;
  t2773 = t2733 + t2743;
  t2788 = t1356*t2697;
  t2811 = t1327*t2718;
  t2812 = t2788 + t2811;
  t2726 = t1051*t2725;
  t2786 = t235*t2773;
  t2824 = t1266*t2812;
  t2827 = t2726 + t2786 + t2824;
  t2838 = t1552*t2725;
  t2849 = t1502*t2773;
  t2851 = t1610*t2812;
  t2896 = t2838 + t2849 + t2851;
  t2900 = t1754*t2725;
  t2916 = t1683*t2773;
  t2919 = t1783*t2812;
  t2924 = t2900 + t2916 + t2919;
  t2999 = t583*t2686;
  t3001 = t2222 + t2999;
  t2995 = t265*t522*t309;
  t3004 = t923*t3001;
  t3013 = t2995 + t2702 + t3004;
  t3019 = t265*t522*t1098;
  t3021 = t1137*t2697;
  t3029 = 0.103955395616*t466*t3001;
  t3036 = t3019 + t3021 + t3029;
  t3046 = t1284*t265*t522;
  t3048 = t1327*t2697;
  t3065 = t1356*t3001;
  t3068 = t3046 + t3048 + t3065;
  t3017 = t235*t3013;
  t3039 = t1051*t3036;
  t3071 = t1266*t3068;
  t3079 = t3017 + t3039 + t3071;
  t3081 = t1502*t3013;
  t3089 = t1552*t3036;
  t3100 = t1610*t3068;
  t3108 = t3081 + t3089 + t3100;
  t3124 = t1683*t3013;
  t3150 = t1754*t3036;
  t3167 = t1783*t3068;
  t3169 = t3124 + t3150 + t3167;
  t3261 = -0.051978134642000004*t184;
  t3297 = -0.49726168403800003*t184;
  t3338 = 0.05226439969100001*t184;
  t3246 = -0.5054634410180001*t184*t3013;
  t3248 = -0.707107*t59;
  t3289 = t3248 + t3261;
  t3292 = t3289*t3036;
  t3295 = 0.073913*t59;
  t3305 = t3295 + t3297;
  t3306 = t3305*t3068;
  t3314 = t3246 + t3292 + t3306;
  t3319 = 0.707107*t59;
  t3321 = t3319 + t3261;
  t3322 = t3321*t3013;
  t3323 = -0.9945383682050002*t184*t3036;
  t3326 = 0.703234*t59;
  t3345 = t3326 + t3338;
  t3350 = t3345*t3068;
  t3353 = t3322 + t3323 + t3350;
  t3367 = -0.073913*t59;
  t3375 = t3367 + t3297;
  t3376 = t3375*t3013;
  t3379 = -0.703234*t59;
  t3381 = t3379 + t3338;
  t3382 = t3381*t3036;
  t3390 = -0.500001190325*t184*t3068;
  t3394 = t3376 + t3382 + t3390;
  t3457 = -1.0000001112680001*t265*t522*t287;
  t3462 = 0.104528*t428*t2697;
  t3465 = -0.994522*t428*t3001;
  t3472 = t3457 + t3462 + t3465;
  t3477 = 0.994522*t428*t265*t522;
  t3479 = 0.103955395616*t287*t2697;
  t3480 = -0.9890740084840001*t287*t3001;
  t3482 = t3477 + t3479 + t3480;
  t3487 = -0.104528*t428*t265*t522;
  t3488 = -0.010926102783999999*t287*t2697;
  t3501 = 0.103955395616*t287*t3001;
  t3502 = t3487 + t3488 + t3501;
  t3474 = t1783*t3472;
  t3485 = t1683*t3482;
  t3509 = t1754*t3502;
  t3510 = t3474 + t3485 + t3509;
  t3514 = t1610*t3472;
  t3519 = t1502*t3482;
  t3522 = t1552*t3502;
  t3525 = t3514 + t3519 + t3522;
  t3535 = t1266*t3472;
  t3536 = t235*t3482;
  t3537 = t1051*t3502;
  t3541 = t3535 + t3536 + t3537;
  t3665 = -1.*t533*t2126*t318;
  t3679 = t265*t822;
  t3682 = t3665 + t3679;
  t3685 = -1.*t265*t533;
  t3690 = -1.*t2126*t318*t822;
  t3693 = t3685 + t3690;
  t3683 = -1.*t583*t3682;
  t3695 = t789*t3693;
  t3699 = t3683 + t3695;
  t3712 = t789*t3682;
  t3716 = t583*t3693;
  t3717 = t3712 + t3716;
  t3650 = -1.*t522*t309*t2126;
  t3704 = 0.103955395616*t466*t3699;
  t3718 = t923*t3717;
  t3720 = t3650 + t3704 + t3718;
  t3746 = -1.*t522*t1098*t2126;
  t3751 = t1137*t3699;
  t3752 = 0.103955395616*t466*t3717;
  t3753 = t3746 + t3751 + t3752;
  t3758 = -1.*t1284*t522*t2126;
  t3765 = t1327*t3699;
  t3770 = t1356*t3717;
  t3775 = t3758 + t3765 + t3770;
  t3724 = t235*t3720;
  t3757 = t1051*t3753;
  t3776 = t1266*t3775;
  t3777 = t3724 + t3757 + t3776;
  t3781 = t1502*t3720;
  t3791 = t1552*t3753;
  t3795 = t1610*t3775;
  t3797 = t3781 + t3791 + t3795;
  t3800 = t1683*t3720;
  t3807 = t1754*t3753;
  t3809 = t1783*t3775;
  t3810 = t3800 + t3807 + t3809;
  t3879 = -1.*t522*t533*t583*t2126;
  t3881 = t789*t522*t2126*t822;
  t3882 = t3879 + t3881;
  t3890 = t789*t522*t533*t2126;
  t3891 = t522*t583*t2126*t822;
  t3892 = t3890 + t3891;
  t3876 = -1.*t309*t2126*t318;
  t3889 = 0.103955395616*t466*t3882;
  t3907 = t923*t3892;
  t3910 = t3876 + t3889 + t3907;
  t3913 = -1.*t1098*t2126*t318;
  t3915 = t1137*t3882;
  t3936 = 0.103955395616*t466*t3892;
  t3941 = t3913 + t3915 + t3936;
  t3947 = -1.*t1284*t2126*t318;
  t3950 = t1327*t3882;
  t3951 = t1356*t3892;
  t3957 = t3947 + t3950 + t3951;
  t3912 = t235*t3910;
  t3944 = t1051*t3941;
  t3960 = t1266*t3957;
  t3964 = t3912 + t3944 + t3960;
  t3969 = t1502*t3910;
  t3973 = t1552*t3941;
  t3980 = t1610*t3957;
  t3981 = t3969 + t3973 + t3980;
  t3984 = t1683*t3910;
  t3990 = t1754*t3941;
  t3994 = t1783*t3957;
  t4000 = t3984 + t3990 + t3994;
  t4116 = t533*t2126*t318;
  t4118 = -1.*t265*t822;
  t4122 = t4116 + t4118;
  t4124 = t583*t4122;
  t4130 = t4124 + t3695;
  t4132 = t789*t4122;
  t4133 = -1.*t583*t3693;
  t4143 = t4132 + t4133;
  t4131 = 0.103955395616*t466*t4130;
  t4144 = t1137*t4143;
  t4154 = t4131 + t4144;
  t4157 = t923*t4130;
  t4162 = 0.103955395616*t466*t4143;
  t4167 = t4157 + t4162;
  t4172 = t1356*t4130;
  t4176 = t1327*t4143;
  t4183 = t4172 + t4176;
  t4155 = t1051*t4154;
  t4170 = t235*t4167;
  t4188 = t1266*t4183;
  t4195 = t4155 + t4170 + t4188;
  t4207 = t1552*t4154;
  t4209 = t1502*t4167;
  t4215 = t1610*t4183;
  t4229 = t4207 + t4209 + t4215;
  t4231 = t1754*t4154;
  t4250 = t1683*t4167;
  t4251 = t1783*t4183;
  t4272 = t4231 + t4250 + t4251;
  t4410 = t265*t533;
  t4416 = t2126*t318*t822;
  t4426 = t4410 + t4416;
  t4406 = -1.*t583*t4122;
  t4427 = t789*t4426;
  t4433 = t4406 + t4427;
  t4437 = -1.*t789*t4122;
  t4440 = -1.*t583*t4426;
  t4466 = t4437 + t4440;
  t4436 = 0.103955395616*t466*t4433;
  t4471 = t1137*t4466;
  t4472 = t4436 + t4471;
  t4499 = t923*t4433;
  t4508 = 0.103955395616*t466*t4466;
  t4523 = t4499 + t4508;
  t4531 = t1356*t4433;
  t4539 = t1327*t4466;
  t4544 = t4531 + t4539;
  t4475 = t1051*t4472;
  t4527 = t235*t4523;
  t4545 = t1266*t4544;
  t4547 = t4475 + t4527 + t4545;
  t4559 = t1552*t4472;
  t4571 = t1502*t4523;
  t4572 = t1610*t4544;
  t4575 = t4559 + t4571 + t4572;
  t4595 = t1754*t4472;
  t4603 = t1683*t4523;
  t4622 = t1783*t4544;
  t4628 = t4595 + t4603 + t4622;
  t4731 = t583*t4426;
  t4733 = t4132 + t4731;
  t4730 = t522*t309*t2126;
  t4735 = t923*t4733;
  t4736 = t4730 + t4436 + t4735;
  t4752 = t522*t1098*t2126;
  t4755 = t1137*t4433;
  t4767 = 0.103955395616*t466*t4733;
  t4770 = t4752 + t4755 + t4767;
  t4787 = t1284*t522*t2126;
  t4796 = t1327*t4433;
  t4808 = t1356*t4733;
  t4809 = t4787 + t4796 + t4808;
  t4745 = t235*t4736;
  t4778 = t1051*t4770;
  t4814 = t1266*t4809;
  t4815 = t4745 + t4778 + t4814;
  t4822 = t1502*t4736;
  t4824 = t1552*t4770;
  t4833 = t1610*t4809;
  t4834 = t4822 + t4824 + t4833;
  t4851 = t1683*t4736;
  t4852 = t1754*t4770;
  t4858 = t1783*t4809;
  t4859 = t4851 + t4852 + t4858;
  t4936 = -0.5054634410180001*t184*t4736;
  t4938 = t3289*t4770;
  t4939 = t3305*t4809;
  t4943 = t4936 + t4938 + t4939;
  t4947 = t3321*t4736;
  t4957 = -0.9945383682050002*t184*t4770;
  t4960 = t3345*t4809;
  t4963 = t4947 + t4957 + t4960;
  t4983 = t3375*t4736;
  t4987 = t3381*t4770;
  t4989 = -0.500001190325*t184*t4809;
  t4991 = t4983 + t4987 + t4989;
  t5063 = -1.0000001112680001*t522*t287*t2126;
  t5064 = 0.104528*t428*t4433;
  t5068 = -0.994522*t428*t4733;
  t5070 = t5063 + t5064 + t5068;
  t5088 = 0.994522*t428*t522*t2126;
  t5093 = 0.103955395616*t287*t4433;
  t5106 = -0.9890740084840001*t287*t4733;
  t5109 = t5088 + t5093 + t5106;
  t5119 = -0.104528*t428*t522*t2126;
  t5122 = -0.010926102783999999*t287*t4433;
  t5123 = 0.103955395616*t287*t4733;
  t5125 = t5119 + t5122 + t5123;
  t5073 = t1783*t5070;
  t5115 = t1683*t5109;
  t5127 = t1754*t5125;
  t5133 = t5073 + t5115 + t5127;
  t5139 = t1610*t5070;
  t5151 = t1502*t5109;
  t5155 = t1552*t5125;
  t5156 = t5139 + t5151 + t5155;
  t5158 = t1266*t5070;
  t5176 = t235*t5109;
  t5177 = t1051*t5125;
  t5181 = t5158 + t5176 + t5177;
  t5262 = -1.*t522*t533*t583;
  t5263 = t789*t522*t822;
  t5265 = t5262 + t5263;
  t5285 = -1.*t789*t522*t533;
  t5290 = -1.*t522*t583*t822;
  t5294 = t5285 + t5290;
  t5270 = 0.103955395616*t466*t5265;
  t5308 = t1137*t5294;
  t5312 = t5270 + t5308;
  t5319 = t923*t5265;
  t5322 = 0.103955395616*t466*t5294;
  t5325 = t5319 + t5322;
  t5333 = t1356*t5265;
  t5342 = t1327*t5294;
  t5343 = t5333 + t5342;
  t5316 = t1051*t5312;
  t5327 = t235*t5325;
  t5347 = t1266*t5343;
  t5357 = t5316 + t5327 + t5347;
  t5373 = t1552*t5312;
  t5379 = t1502*t5325;
  t5381 = t1610*t5343;
  t5382 = t5373 + t5379 + t5381;
  t5395 = t1754*t5312;
  t5397 = t1683*t5325;
  t5400 = t1783*t5343;
  t5403 = t5395 + t5397 + t5400;
  t5512 = t789*t522*t533;
  t5514 = t522*t583*t822;
  t5518 = t5512 + t5514;
  t5496 = -1.*t309*t318;
  t5521 = t923*t5518;
  t5522 = t5496 + t5270 + t5521;
  t5526 = -1.*t1098*t318;
  t5528 = t1137*t5265;
  t5529 = 0.103955395616*t466*t5518;
  t5535 = t5526 + t5528 + t5529;
  t5543 = -1.*t1284*t318;
  t5544 = t1327*t5265;
  t5548 = t1356*t5518;
  t5551 = t5543 + t5544 + t5548;
  t5523 = t235*t5522;
  t5537 = t1051*t5535;
  t5565 = t1266*t5551;
  t5569 = t5523 + t5537 + t5565;
  t5577 = t1502*t5522;
  t5592 = t1552*t5535;
  t5600 = t1610*t5551;
  t5606 = t5577 + t5592 + t5600;
  t5618 = t1683*t5522;
  t5634 = t1754*t5535;
  t5638 = t1783*t5551;
  t5639 = t5618 + t5634 + t5638;
  t5759 = -0.5054634410180001*t184*t5522;
  t5760 = t3289*t5535;
  t5775 = t3305*t5551;
  t5783 = t5759 + t5760 + t5775;
  t5791 = t3321*t5522;
  t5797 = -0.9945383682050002*t184*t5535;
  t5801 = t3345*t5551;
  t5805 = t5791 + t5797 + t5801;
  t5818 = t3375*t5522;
  t5826 = t3381*t5535;
  t5830 = -0.500001190325*t184*t5551;
  t5832 = t5818 + t5826 + t5830;
  t5949 = t522*t533*t583;
  t5952 = -1.*t789*t522*t822;
  t5953 = t5949 + t5952;
  t5962 = 0.103955395616*t466*t5953;
  t5973 = t1137*t5518;
  t5974 = t5962 + t5973;
  t5980 = t923*t5953;
  t5985 = t5980 + t5529;
  t5998 = t1356*t5953;
  t6000 = t1327*t5518;
  t6007 = t5998 + t6000;
  t5977 = t1051*t5974;
  t5990 = t235*t5985;
  t6011 = t1266*t6007;
  t6018 = t5977 + t5990 + t6011;
  t6028 = t1552*t5974;
  t6031 = t1502*t5985;
  t6044 = t1610*t6007;
  t6045 = t6028 + t6031 + t6044;
  t6065 = t1754*t5974;
  t6066 = t1683*t5985;
  t6083 = t1783*t6007;
  t6086 = t6065 + t6066 + t6083;
  t6167 = 1.0000001112680001*t287*t318;
  t6169 = 0.104528*t428*t5265;
  t6173 = -0.994522*t428*t5518;
  t6182 = t6167 + t6169 + t6173;
  t6186 = -0.994522*t428*t318;
  t6198 = 0.103955395616*t287*t5265;
  t6200 = -0.9890740084840001*t287*t5518;
  t6203 = t6186 + t6198 + t6200;
  t6206 = 0.104528*t428*t318;
  t6208 = -0.010926102783999999*t287*t5265;
  t6222 = 0.103955395616*t287*t5518;
  t6230 = t6206 + t6208 + t6222;
  t6184 = t1783*t6182;
  t6205 = t1683*t6203;
  t6236 = t1754*t6230;
  t6240 = t6184 + t6205 + t6236;
  t6243 = t1610*t6182;
  t6252 = t1502*t6203;
  t6257 = t1552*t6230;
  t6259 = t6243 + t6252 + t6257;
  t6267 = t1266*t6182;
  t6268 = t235*t6203;
  t6269 = t1051*t6230;
  t6274 = t6267 + t6268 + t6269;
  t6351 = t533*t583*t318;
  t6360 = -1.*t789*t318*t822;
  t6368 = t6351 + t6360;
  t6372 = -1.*t789*t533*t318;
  t6373 = -1.*t583*t318*t822;
  t6384 = t6372 + t6373;
  t6349 = -1.*t522*t309;
  t6371 = 0.103955395616*t466*t6368;
  t6387 = t923*t6384;
  t6405 = t6349 + t6371 + t6387;
  t6414 = -1.*t522*t1098;
  t6415 = t1137*t6368;
  t6418 = 0.103955395616*t466*t6384;
  t6421 = t6414 + t6415 + t6418;
  t6428 = -1.*t1284*t522;
  t6431 = t1327*t6368;
  t6435 = t1356*t6384;
  t6439 = t6428 + t6431 + t6435;
  t6409 = t235*t6405;
  t6425 = t1051*t6421;
  t6441 = t1266*t6439;
  t6444 = t6409 + t6425 + t6441;
  t6446 = t1502*t6405;
  t6448 = t1552*t6421;
  t6457 = t1610*t6439;
  t6459 = t6446 + t6448 + t6457;
  t6463 = t1683*t6405;
  t6471 = t1754*t6421;
  t6482 = t1783*t6439;
  t6486 = t6463 + t6471 + t6482;
  t1401 = t55*t1397;
  t1623 = 0.103955395616*t1474*t1614;
  t1858 = t1673*t1848;
  t1868 = t1401 + t1623 + t1858;
  t1905 = t1882*t1397;
  t1933 = t1919*t1614;
  t1945 = 0.103955395616*t1474*t1848;
  t1961 = t1905 + t1933 + t1945;
  t2000 = t1986*t1397;
  t2044 = t2016*t1614;
  t2080 = t2079*t1848;
  t2090 = t2000 + t2044 + t2080;
  t2339 = t55*t2337;
  t2429 = 0.103955395616*t1474*t2419;
  t2506 = t1673*t2505;
  t2510 = t2339 + t2429 + t2506;
  t2569 = t1882*t2337;
  t2573 = t1919*t2419;
  t2587 = 0.103955395616*t1474*t2505;
  t2597 = t2569 + t2573 + t2587;
  t2603 = t1986*t2337;
  t2620 = t2016*t2419;
  t2625 = t2079*t2505;
  t2630 = t2603 + t2620 + t2625;
  t2828 = t55*t2827;
  t2899 = 0.103955395616*t1474*t2896;
  t2932 = t1673*t2924;
  t2936 = t2828 + t2899 + t2932;
  t2946 = t1882*t2827;
  t2947 = t1919*t2896;
  t2948 = 0.103955395616*t1474*t2924;
  t2954 = t2946 + t2947 + t2948;
  t2957 = t1986*t2827;
  t2962 = t2016*t2896;
  t2972 = t2079*t2924;
  t2981 = t2957 + t2962 + t2972;
  t3080 = -1.0000001112680001*t7*t3079;
  t3123 = -0.994522*t1441*t3108;
  t3175 = 0.104528*t1441*t3169;
  t3177 = t3080 + t3123 + t3175;
  t3184 = -0.104528*t1441*t3079;
  t3185 = 0.103955395616*t7*t3108;
  t3188 = -0.010926102783999999*t7*t3169;
  t3189 = t3184 + t3185 + t3188;
  t3198 = 0.994522*t1441*t3079;
  t3225 = -0.9890740084840001*t7*t3108;
  t3232 = 0.103955395616*t7*t3169;
  t3236 = t3198 + t3225 + t3232;
  t3315 = t2016*t3314;
  t3365 = t2079*t3353;
  t3399 = t1986*t3394;
  t3401 = t3315 + t3365 + t3399;
  t3409 = 0.103955395616*t1474*t3314;
  t3410 = t1673*t3353;
  t3413 = t55*t3394;
  t3419 = t3409 + t3410 + t3413;
  t3434 = t1919*t3314;
  t3437 = 0.103955395616*t1474*t3353;
  t3439 = t1882*t3394;
  t3440 = t3434 + t3437 + t3439;
  t3512 = t2079*t3510;
  t3533 = t2016*t3525;
  t3562 = t1986*t3541;
  t3566 = t3512 + t3533 + t3562;
  t3595 = t1673*t3510;
  t3602 = 0.103955395616*t1474*t3525;
  t3613 = t55*t3541;
  t3614 = t3595 + t3602 + t3613;
  t3623 = 0.103955395616*t1474*t3510;
  t3629 = t1919*t3525;
  t3636 = t1882*t3541;
  t3637 = t3623 + t3629 + t3636;
  t3778 = t55*t3777;
  t3799 = 0.103955395616*t1474*t3797;
  t3812 = t1673*t3810;
  t3813 = t3778 + t3799 + t3812;
  t3825 = t1882*t3777;
  t3835 = t1919*t3797;
  t3841 = 0.103955395616*t1474*t3810;
  t3842 = t3825 + t3835 + t3841;
  t3848 = t1986*t3777;
  t3849 = t2016*t3797;
  t3854 = t2079*t3810;
  t3855 = t3848 + t3849 + t3854;
  t3965 = t55*t3964;
  t3983 = 0.103955395616*t1474*t3981;
  t4002 = t1673*t4000;
  t4004 = t3965 + t3983 + t4002;
  t4013 = t1882*t3964;
  t4016 = t1919*t3981;
  t4017 = 0.103955395616*t1474*t4000;
  t4019 = t4013 + t4016 + t4017;
  t4037 = t1986*t3964;
  t4039 = t2016*t3981;
  t4040 = t2079*t4000;
  t4041 = t4037 + t4039 + t4040;
  t4061 = t55*t3079;
  t4070 = 0.103955395616*t1474*t3108;
  t4073 = t1673*t3169;
  t4076 = t4061 + t4070 + t4073;
  t4085 = t1882*t3079;
  t4086 = t1919*t3108;
  t4089 = 0.103955395616*t1474*t3169;
  t4091 = t4085 + t4086 + t4089;
  t4099 = t1986*t3079;
  t4101 = t2016*t3108;
  t4102 = t2079*t3169;
  t4105 = t4099 + t4101 + t4102;
  t4197 = t55*t4195;
  t4230 = 0.103955395616*t1474*t4229;
  t4280 = t1673*t4272;
  t4300 = t4197 + t4230 + t4280;
  t4351 = t1882*t4195;
  t4352 = t1919*t4229;
  t4359 = 0.103955395616*t1474*t4272;
  t4369 = t4351 + t4352 + t4359;
  t4378 = t1986*t4195;
  t4380 = t2016*t4229;
  t4387 = t2079*t4272;
  t4395 = t4378 + t4380 + t4387;
  t4554 = t55*t4547;
  t4577 = 0.103955395616*t1474*t4575;
  t4632 = t1673*t4628;
  t4640 = t4554 + t4577 + t4632;
  t4660 = t1882*t4547;
  t4664 = t1919*t4575;
  t4665 = 0.103955395616*t1474*t4628;
  t4666 = t4660 + t4664 + t4665;
  t4670 = t1986*t4547;
  t4680 = t2016*t4575;
  t4688 = t2079*t4628;
  t4701 = t4670 + t4680 + t4688;
  t4820 = -1.0000001112680001*t7*t4815;
  t4846 = -0.994522*t1441*t4834;
  t4860 = 0.104528*t1441*t4859;
  t4862 = t4820 + t4846 + t4860;
  t4871 = -0.104528*t1441*t4815;
  t4884 = 0.103955395616*t7*t4834;
  t4888 = -0.010926102783999999*t7*t4859;
  t4890 = t4871 + t4884 + t4888;
  t4897 = 0.994522*t1441*t4815;
  t4902 = -0.9890740084840001*t7*t4834;
  t4910 = 0.103955395616*t7*t4859;
  t4912 = t4897 + t4902 + t4910;
  t4946 = t2016*t4943;
  t4964 = t2079*t4963;
  t4994 = t1986*t4991;
  t5003 = t4946 + t4964 + t4994;
  t5010 = 0.103955395616*t1474*t4943;
  t5014 = t1673*t4963;
  t5018 = t55*t4991;
  t5026 = t5010 + t5014 + t5018;
  t5033 = t1919*t4943;
  t5036 = 0.103955395616*t1474*t4963;
  t5041 = t1882*t4991;
  t5045 = t5033 + t5036 + t5041;
  t5137 = t2079*t5133;
  t5157 = t2016*t5156;
  t5188 = t1986*t5181;
  t5189 = t5137 + t5157 + t5188;
  t5204 = t1673*t5133;
  t5215 = 0.103955395616*t1474*t5156;
  t5219 = t55*t5181;
  t5221 = t5204 + t5215 + t5219;
  t5237 = 0.103955395616*t1474*t5133;
  t5238 = t1919*t5156;
  t5239 = t1882*t5181;
  t5251 = t5237 + t5238 + t5239;
  t5359 = t55*t5357;
  t5384 = 0.103955395616*t1474*t5382;
  t5405 = t1673*t5403;
  t5409 = t5359 + t5384 + t5405;
  t5416 = t1882*t5357;
  t5424 = t1919*t5382;
  t5433 = 0.103955395616*t1474*t5403;
  t5434 = t5416 + t5424 + t5433;
  t5463 = t1986*t5357;
  t5464 = t2016*t5382;
  t5467 = t2079*t5403;
  t5473 = t5463 + t5464 + t5467;
  t5573 = -1.0000001112680001*t7*t5569;
  t5613 = -0.994522*t1441*t5606;
  t5644 = 0.104528*t1441*t5639;
  t5655 = t5573 + t5613 + t5644;
  t5665 = -0.104528*t1441*t5569;
  t5679 = 0.103955395616*t7*t5606;
  t5680 = -0.010926102783999999*t7*t5639;
  t5681 = t5665 + t5679 + t5680;
  t5723 = 0.994522*t1441*t5569;
  t5725 = -0.9890740084840001*t7*t5606;
  t5745 = 0.103955395616*t7*t5639;
  t5746 = t5723 + t5725 + t5745;
  t5787 = t2016*t5783;
  t5815 = t2079*t5805;
  t5836 = t1986*t5832;
  t5845 = t5787 + t5815 + t5836;
  t5857 = 0.103955395616*t1474*t5783;
  t5874 = t1673*t5805;
  t5882 = t55*t5832;
  t5888 = t5857 + t5874 + t5882;
  t5905 = t1919*t5783;
  t5914 = 0.103955395616*t1474*t5805;
  t5926 = t1882*t5832;
  t5927 = t5905 + t5914 + t5926;
  t6022 = t55*t6018;
  t6064 = 0.103955395616*t1474*t6045;
  t6091 = t1673*t6086;
  t6103 = t6022 + t6064 + t6091;
  t6107 = t1882*t6018;
  t6108 = t1919*t6045;
  t6109 = 0.103955395616*t1474*t6086;
  t6124 = t6107 + t6108 + t6109;
  t6135 = t1986*t6018;
  t6136 = t2016*t6045;
  t6139 = t2079*t6086;
  t6145 = t6135 + t6136 + t6139;
  t6242 = t2079*t6240;
  t6260 = t2016*t6259;
  t6276 = t1986*t6274;
  t6278 = t6242 + t6260 + t6276;
  t6284 = t1673*t6240;
  t6289 = 0.103955395616*t1474*t6259;
  t6290 = t55*t6274;
  t6291 = t6284 + t6289 + t6290;
  t6304 = 0.103955395616*t1474*t6240;
  t6308 = t1919*t6259;
  t6314 = t1882*t6274;
  t6321 = t6304 + t6308 + t6314;
  t6445 = t55*t6444;
  t6460 = 0.103955395616*t1474*t6459;
  t6502 = t1673*t6486;
  t6503 = t6445 + t6460 + t6502;
  t6505 = t1882*t6444;
  t6508 = t1919*t6459;
  t6509 = 0.103955395616*t1474*t6486;
  t6515 = t6505 + t6508 + t6509;
  t6525 = t1986*t6444;
  t6531 = t2016*t6459;
  t6532 = t2079*t6486;
  t6535 = t6525 + t6531 + t6532;
  t7420 = -1.*t789;
  t7428 = 1. + t7420;
  t7519 = 0.051978134642000004*t98;
  t7547 = -0.05226439969100001*t98;
  t7525 = 0.49726168403800003*t98;
  t7468 = 0.12*t7428;
  t7471 = -0.4*t583;
  t7472 = 0. + t7468 + t7471;
  t7434 = 0.4*t7428;
  t7436 = 0.12*t583;
  t7437 = 0. + t7434 + t7436;
  t7497 = 1.1924972351948546e-8*var1[14];
  t7500 = 0.38315655000705834*t466;
  t7501 = -0.05650052807*t309;
  t7506 = t7497 + t7500 + t7501;
  t7476 = 1.1345904784751044e-7*var1[14];
  t7477 = -0.04027119345689465*t466;
  t7478 = -0.05650052807*t1098;
  t7491 = t7476 + t7477 + t7478;
  t7540 = 1.639789470231751e-8*var1[15];
  t7541 = 0.22983603018311177*t98;
  t7550 = t7547 + t1776;
  t7551 = 0.164383620275*t7550;
  t7552 = t7519 + t1680;
  t7557 = 0.18957839082800002*t7552;
  t7566 = t7540 + t7541 + t7551 + t7557;
  t7512 = -1.5601527583902087e-7*var1[15];
  t7518 = 0.09582494577057615*t98;
  t7520 = t7519 + t1549;
  t7522 = 0.231098203479*t7520;
  t7529 = t7525 + t1606;
  t7530 = 0.164383620275*t7529;
  t7534 = t7512 + t7518 + t7522 + t7530;
  t7570 = 1.568745163810375e-7*var1[15];
  t7571 = 0.08219200580743281*t98;
  t7574 = t7547 + t1040;
  t7575 = 0.231098203479*t7574;
  t7576 = t7525 + t199;
  t7583 = 0.18957839082800002*t7576;
  t7584 = t7570 + t7571 + t7575 + t7583;
  t7591 = 0.19098732144477495*t1474;
  t7595 = 0.137024246638*t2016;
  t7596 = -0.014401763312*t2079;
  t7597 = 0. + t7591 + t7595 + t7596;
  t7611 = -5.06291820800569e-8*var1[16];
  t7618 = 0.13702426188441388*t1474;
  t7621 = 0.190987300194*t1882;
  t7634 = t7611 + t7618 + t7621;
  t7646 = -4.817066759205414e-7*var1[16];
  t7654 = -0.0144017649144554*t1474;
  t7661 = 0.190987300194*t55;
  t7662 = t7646 + t7654 + t7661;
  t7875 = 0.051978134642000004*t184;
  t7909 = -0.05226439969100001*t184;
  t7885 = 0.49726168403800003*t184;
  t7445 = -0.056500534356700764*t466;
  t7446 = 0.38315650737400003*t1356;
  t7451 = -0.040271188976*t1327;
  t7454 = 0. + t7445 + t7446 + t7451;
  t7763 = 0.12*t789;
  t7765 = 0.4*t583;
  t7767 = t7763 + t7765;
  t7771 = -0.4*t789;
  t7774 = t7771 + t7436;
  t7804 = -0.13777901533039377*t1441;
  t7814 = 0.19098732144477495*t7;
  t7818 = t7804 + t7814;
  t7820 = 0.18994107176353728*t1441;
  t7821 = 0.13702426188441388*t7;
  t7829 = -5.06291820800569e-8 + t7820 + t7821;
  t7832 = -0.019963520514678434*t1441;
  t7844 = -0.0144017649144554*t7;
  t7845 = -4.817066759205414e-7 + t7832 + t7844;
  t7881 = t3248 + t7875;
  t7882 = 0.231098203479*t7881;
  t7886 = t3295 + t7885;
  t7888 = 0.164383620275*t7886;
  t7901 = 0.09582494577057615*t184;
  t7903 = -1.5601527583902087e-7 + t7882 + t7888 + t7901;
  t7910 = t3326 + t7909;
  t7917 = 0.164383620275*t7910;
  t7919 = t3319 + t7875;
  t7920 = 0.18957839082800002*t7919;
  t7934 = 0.22983603018311177*t184;
  t7942 = 1.639789470231751e-8 + t7917 + t7920 + t7934;
  t7947 = t3379 + t7909;
  t7948 = 0.231098203479*t7947;
  t7949 = t3367 + t7885;
  t7951 = 0.18957839082800002*t7949;
  t7952 = 0.08219200580743281*t184;
  t7955 = 1.568745163810375e-7 + t7948 + t7951 + t7952;
  t7985 = -0.3852670428678886*t428;
  t7986 = -0.056500534356700764*t287;
  t7987 = t7985 + t7986;
  t7989 = 0.0059058871981009595*t428;
  t7992 = -0.04027119345689465*t287;
  t8001 = 1.1345904784751044e-7 + t7989 + t7992;
  t8007 = -0.05619101817723254*t428;
  t8009 = 0.38315655000705834*t287;
  t8010 = 1.1924972351948546e-8 + t8007 + t8009;
  p_output1[0]=(-0.040001*t3813 + 0.380588*t3842 + 0.92388*t3855)*var2[3] + (-0.040001*t1868 + 0.380588*t1961 + 0.92388*t2090)*var2[4] + (-0.040001*t2510 + 0.380588*t2597 + 0.92388*t2630)*var2[5] + (-0.040001*t2936 + 0.380588*t2954 + 0.92388*t2981)*var2[13] + (0.92388*t3566 - 0.040001*t3614 + 0.380588*t3637)*var2[14] + (0.92388*t3401 - 0.040001*t3419 + 0.380588*t3440)*var2[15] + (0.92388*t3177 - 0.040001*t3189 + 0.380588*t3236)*var2[16];
  p_output1[1]=(-0.040001*t4076 + 0.380588*t4091 + 0.92388*t4105)*var2[3] + (-0.040001*t4004 + 0.380588*t4019 + 0.92388*t4041)*var2[4] + (-0.040001*t4300 + 0.380588*t4369 + 0.92388*t4395)*var2[5] + (-0.040001*t4640 + 0.380588*t4666 + 0.92388*t4701)*var2[13] + (0.92388*t5189 - 0.040001*t5221 + 0.380588*t5251)*var2[14] + (0.92388*t5003 - 0.040001*t5026 + 0.380588*t5045)*var2[15] + (0.92388*t4862 - 0.040001*t4890 + 0.380588*t4912)*var2[16];
  p_output1[2]=(-0.040001*t6503 + 0.380588*t6515 + 0.92388*t6535)*var2[4] + (-0.040001*t6103 + 0.380588*t6124 + 0.92388*t6145)*var2[5] + (-0.040001*t5409 + 0.380588*t5434 + 0.92388*t5473)*var2[13] + (0.92388*t6278 - 0.040001*t6291 + 0.380588*t6321)*var2[14] + (0.92388*t5845 - 0.040001*t5888 + 0.380588*t5927)*var2[15] + (0.92388*t5655 - 0.040001*t5681 + 0.380588*t5746)*var2[16];
  p_output1[3]=0;
  p_output1[4]=(0.096572*t3813 - 0.918819*t3842 + 0.382684*t3855)*var2[3] + (0.096572*t1868 - 0.918819*t1961 + 0.382684*t2090)*var2[4] + (0.096572*t2510 - 0.918819*t2597 + 0.382684*t2630)*var2[5] + (0.096572*t2936 - 0.918819*t2954 + 0.382684*t2981)*var2[13] + (0.382684*t3566 + 0.096572*t3614 - 0.918819*t3637)*var2[14] + (0.382684*t3401 + 0.096572*t3419 - 0.918819*t3440)*var2[15] + (0.382684*t3177 + 0.096572*t3189 - 0.918819*t3236)*var2[16];
  p_output1[5]=(0.096572*t4076 - 0.918819*t4091 + 0.382684*t4105)*var2[3] + (0.096572*t4004 - 0.918819*t4019 + 0.382684*t4041)*var2[4] + (0.096572*t4300 - 0.918819*t4369 + 0.382684*t4395)*var2[5] + (0.096572*t4640 - 0.918819*t4666 + 0.382684*t4701)*var2[13] + (0.382684*t5189 + 0.096572*t5221 - 0.918819*t5251)*var2[14] + (0.382684*t5003 + 0.096572*t5026 - 0.918819*t5045)*var2[15] + (0.382684*t4862 + 0.096572*t4890 - 0.918819*t4912)*var2[16];
  p_output1[6]=(0.096572*t6503 - 0.918819*t6515 + 0.382684*t6535)*var2[4] + (0.096572*t6103 - 0.918819*t6124 + 0.382684*t6145)*var2[5] + (0.096572*t5409 - 0.918819*t5434 + 0.382684*t5473)*var2[13] + (0.382684*t6278 + 0.096572*t6291 - 0.918819*t6321)*var2[14] + (0.382684*t5845 + 0.096572*t5888 - 0.918819*t5927)*var2[15] + (0.382684*t5655 + 0.096572*t5681 - 0.918819*t5746)*var2[16];
  p_output1[7]=0;
  p_output1[8]=(0.994522*t3813 + 0.104528*t3842)*var2[3] + (0.994522*t1868 + 0.104528*t1961)*var2[4] + (0.994522*t2510 + 0.104528*t2597)*var2[5] + (0.994522*t2936 + 0.104528*t2954)*var2[13] + (0.994522*t3614 + 0.104528*t3637)*var2[14] + (0.994522*t3419 + 0.104528*t3440)*var2[15] + (0.994522*t3189 + 0.104528*t3236)*var2[16];
  p_output1[9]=(0.994522*t4076 + 0.104528*t4091)*var2[3] + (0.994522*t4004 + 0.104528*t4019)*var2[4] + (0.994522*t4300 + 0.104528*t4369)*var2[5] + (0.994522*t4640 + 0.104528*t4666)*var2[13] + (0.994522*t5221 + 0.104528*t5251)*var2[14] + (0.994522*t5026 + 0.104528*t5045)*var2[15] + (0.994522*t4890 + 0.104528*t4912)*var2[16];
  p_output1[10]=(0.994522*t6503 + 0.104528*t6515)*var2[4] + (0.994522*t6103 + 0.104528*t6124)*var2[5] + (0.994522*t5409 + 0.104528*t5434)*var2[13] + (0.994522*t6291 + 0.104528*t6321)*var2[14] + (0.994522*t5888 + 0.104528*t5927)*var2[15] + (0.994522*t5681 + 0.104528*t5746)*var2[16];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (0.272168*t3813 + 0.167144*t3842 + 0.190987*t3855 + t3682*t7437 - 1.*t2126*t522*t7454 + t3693*t7472 + t3699*t7491 + t3717*t7506 + t3720*t7534 + t3753*t7566 + t3775*t7584 + t3777*t7597 + t3797*t7634 + t3810*t7662)*var2[3] + (0.272168*t1868 + 0.167144*t1961 + 0.190987*t2090 + t265*t522*t533*t7437 - 1.*t265*t318*t7454 + t1009*t7534 + t1235*t7566 + t1388*t7584 + t1397*t7597 + t1614*t7634 + t1848*t7662 + t265*t522*t7472*t822 + t7491*t911 + t7506*t983)*var2[4] + (0.272168*t2510 + 0.167144*t2597 + 0.190987*t2630 + t2159*t7437 + t2143*t7472 + t2243*t7491 + t2205*t7506 + t2294*t7534 + t2278*t7566 + t2324*t7584 + t2337*t7597 + t2419*t7634 + t2505*t7662)*var2[5] + (0.272168*t2936 + 0.167144*t2954 + 0.190987*t2981 + t2718*t7491 + t2697*t7506 + t2773*t7534 + t2725*t7566 + t2812*t7584 + t2827*t7597 + t2896*t7634 + t2924*t7662 + t2143*t7767 + t2686*t7774)*var2[13] + (0.190987*t3566 + 0.272168*t3614 + 0.167144*t3637 + t3482*t7534 + t3502*t7566 + t3472*t7584 + t3541*t7597 + t3525*t7634 + t3510*t7662 + t265*t522*t7987 + t2697*t8001 + t3001*t8010)*var2[14] + (0.190987*t3401 + 0.272168*t3419 + 0.167144*t3440 + t3394*t7597 + t3314*t7634 + t3353*t7662 + t3013*t7903 + t3036*t7942 + t3068*t7955)*var2[15] + (0.190987*t3177 + 0.272168*t3189 + 0.167144*t3236 + t3079*t7818 + t3108*t7829 + t3169*t7845)*var2[16];
  p_output1[13]=var2[1] + (0.272168*t4076 + 0.167144*t4091 + 0.190987*t4105 + t2143*t7437 + t265*t522*t7454 + t2686*t7472 + t2697*t7491 + t3001*t7506 + t3013*t7534 + t3036*t7566 + t3068*t7584 + t3079*t7597 + t3108*t7634 + t3169*t7662)*var2[3] + (0.272168*t4004 + 0.167144*t4019 + 0.190987*t4041 + t2126*t522*t533*t7437 - 1.*t2126*t318*t7454 + t3882*t7491 + t3892*t7506 + t3910*t7534 + t3941*t7566 + t3957*t7584 + t3964*t7597 + t3981*t7634 + t4000*t7662 + t2126*t522*t7472*t822)*var2[4] + (0.272168*t4300 + 0.167144*t4369 + 0.190987*t4395 + t3693*t7437 + t4122*t7472 + t4143*t7491 + t4130*t7506 + t4167*t7534 + t4154*t7566 + t4183*t7584 + t4195*t7597 + t4229*t7634 + t4272*t7662)*var2[5] + (0.272168*t4640 + 0.167144*t4666 + 0.190987*t4701 + t4466*t7491 + t4433*t7506 + t4523*t7534 + t4472*t7566 + t4544*t7584 + t4547*t7597 + t4575*t7634 + t4628*t7662 + t4122*t7767 + t4426*t7774)*var2[13] + (0.190987*t5189 + 0.272168*t5221 + 0.167144*t5251 + t5109*t7534 + t5125*t7566 + t5070*t7584 + t5181*t7597 + t5156*t7634 + t5133*t7662 + t2126*t522*t7987 + t4433*t8001 + t4733*t8010)*var2[14] + (0.190987*t5003 + 0.272168*t5026 + 0.167144*t5045 + t4991*t7597 + t4943*t7634 + t4963*t7662 + t4736*t7903 + t4770*t7942 + t4809*t7955)*var2[15] + (0.190987*t4862 + 0.272168*t4890 + 0.167144*t4912 + t4815*t7818 + t4834*t7829 + t4859*t7845)*var2[16];
  p_output1[14]=var2[2] + (0.272168*t6503 + 0.167144*t6515 + 0.190987*t6535 - 1.*t318*t533*t7437 - 1.*t522*t7454 + t6368*t7491 + t6384*t7506 + t6405*t7534 + t6421*t7566 + t6439*t7584 + t6444*t7597 + t6459*t7634 + t6486*t7662 - 1.*t318*t7472*t822)*var2[4] + (0.272168*t6103 + 0.167144*t6124 + 0.190987*t6145 + t522*t533*t7472 + t5518*t7491 + t5953*t7506 + t5985*t7534 + t5974*t7566 + t6007*t7584 + t6018*t7597 + t6045*t7634 + t6086*t7662 - 1.*t522*t7437*t822)*var2[5] + (0.272168*t5409 + 0.167144*t5434 + 0.190987*t5473 + t5294*t7491 + t5265*t7506 + t5325*t7534 + t5312*t7566 + t5343*t7584 + t5357*t7597 + t5382*t7634 + t5403*t7662 + t522*t533*t7767 + t522*t7774*t822)*var2[13] + (0.190987*t6278 + 0.272168*t6291 + 0.167144*t6321 + t6203*t7534 + t6230*t7566 + t6182*t7584 + t6274*t7597 + t6259*t7634 + t6240*t7662 - 1.*t318*t7987 + t5265*t8001 + t5518*t8010)*var2[14] + (0.190987*t5845 + 0.272168*t5888 + 0.167144*t5927 + t5832*t7597 + t5783*t7634 + t5805*t7662 + t5522*t7903 + t5535*t7942 + t5551*t7955)*var2[15] + (0.190987*t5655 + 0.272168*t5681 + 0.167144*t5746 + t5569*t7818 + t5606*t7829 + t5639*t7845)*var2[16];
  p_output1[15]=0;
}



void dT_elbow_joint_left_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
