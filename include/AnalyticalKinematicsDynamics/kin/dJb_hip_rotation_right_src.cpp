/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:44:32 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dJb_hip_rotation_right_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t557;
  double t605;
  double t564;
  double t572;
  double t498;
  double t628;
  double t653;
  double t452;
  double t586;
  double t687;
  double t733;
  double t776;
  double t778;
  double t785;
  double t796;
  double t16;
  double t275;
  double t885;
  double t765;
  double t1035;
  double t1092;
  double t1099;
  double t86;
  double t412;
  double t1685;
  double t1749;
  double t1755;
  double t1583;
  double t1590;
  double t1613;
  double t952;
  double t992;
  double t1004;
  double t152;
  double t165;
  double t169;
  double t180;
  double t810;
  double t817;
  double t2388;
  double t2408;
  double t2418;
  double t2432;
  double t2433;
  double t2333;
  double t2351;
  double t2361;
  double t2366;
  double t2376;
  double t2571;
  double t2585;
  double t2592;
  double t2377;
  double t2436;
  double t2438;
  double t2846;
  double t2785;
  double t2797;
  double t2809;
  double t2823;
  double t2875;
  double t2942;
  double t2944;
  double t2951;
  double t3023;
  double t3024;
  double t3054;
  double t3272;
  double t3302;
  double t3316;
  double t3178;
  double t3186;
  double t3227;
  double t3667;
  double t3711;
  double t3607;
  double t3612;
  double t3627;
  double t3767;
  double t3780;
  double t3790;
  double t3628;
  double t3736;
  double t3757;
  double t4103;
  double t4014;
  double t4044;
  double t4058;
  double t4060;
  double t4140;
  double t4459;
  double t4473;
  double t4501;
  double t4581;
  double t4587;
  double t4588;
  double t4885;
  double t4887;
  double t4982;
  double t4722;
  double t4732;
  double t4740;
  double t312;
  double t825;
  double t874;
  double t891;
  double t922;
  double t924;
  double t1111;
  double t1123;
  double t1180;
  double t1199;
  double t1357;
  double t1663;
  double t1808;
  double t1821;
  double t1871;
  double t1890;
  double t1918;
  double t1932;
  double t1940;
  double t1975;
  double t2189;
  double t2201;
  double t2206;
  double t2517;
  double t2602;
  double t2609;
  double t2696;
  double t2713;
  double t2714;
  double t2876;
  double t2895;
  double t2901;
  double t2910;
  double t2955;
  double t3055;
  double t3095;
  double t3097;
  double t3116;
  double t3124;
  double t3126;
  double t3250;
  double t3346;
  double t3362;
  double t3415;
  double t3416;
  double t3417;
  double t3424;
  double t3448;
  double t3459;
  double t3764;
  double t3794;
  double t3803;
  double t3836;
  double t3861;
  double t3928;
  double t4164;
  double t4228;
  double t4284;
  double t4293;
  double t4566;
  double t4626;
  double t4647;
  double t4677;
  double t4683;
  double t4684;
  double t4685;
  double t4788;
  double t4986;
  double t5013;
  double t5115;
  double t5121;
  double t5123;
  double t5128;
  double t5134;
  double t5995;
  double t5999;
  double t6007;
  double t6013;
  double t6018;
  double t6020;
  double t6025;
  double t6031;
  double t6043;
  double t6045;
  double t6046;
  double t6049;
  double t6066;
  double t6068;
  double t6077;
  double t6080;
  double t5990;
  double t6032;
  double t6093;
  double t6102;
  double t6103;
  double t6105;
  double t6107;
  double t6095;
  double t6155;
  double t6156;
  double t6157;
  double t6139;
  double t6120;
  double t6121;
  double t6124;
  double t6126;
  double t6128;
  double t6130;
  double t6163;
  double t6165;
  double t6166;
  double t6167;
  double t6169;
  double t6170;
  double t6172;
  double t6173;
  double t6174;
  double t6182;
  double t6183;
  double t6184;
  double t6158;
  double t6100;
  double t6110;
  double t6112;
  double t6136;
  double t6148;
  double t6151;
  double t5972;
  double t6180;
  double t6191;
  double t6194;
  double t6206;
  double t6208;
  double t6213;
  double t6308;
  double t6288;
  double t6293;
  double t6294;
  double t6239;
  double t6243;
  double t6244;
  double t6248;
  double t6263;
  double t6269;
  double t6270;
  double t6274;
  double t5938;
  double t5951;
  double t5955;
  double t5884;
  double t5887;
  double t5890;
  double t6386;
  double t6421;
  double t6431;
  double t6432;
  double t5916;
  double t5917;
  double t5924;
  double t5960;
  double t5961;
  double t6520;
  double t6522;
  double t6525;
  double t6532;
  double t6540;
  double t6545;
  double t6574;
  double t6576;
  double t6577;
  double t6528;
  double t6561;
  double t6567;
  double t6596;
  double t6598;
  double t6600;
  double t6608;
  double t6617;
  double t6622;
  double t6570;
  double t6584;
  double t6591;
  double t6605;
  double t6629;
  double t6662;
  double t6667;
  double t6668;
  double t6669;
  double t6742;
  double t6743;
  double t6746;
  double t6748;
  double t6786;
  double t6787;
  double t6788;
  double t6797;
  double t5817;
  double t5830;
  double t5849;
  double t5790;
  double t5792;
  double t5809;
  double t7061;
  double t7062;
  double t7064;
  double t7065;
  double t7092;
  double t7098;
  double t7100;
  double t7101;
  double t5781;
  double t5782;
  double t5812;
  double t5862;
  double t5873;
  double t5874;
  double t5878;
  double t5902;
  double t5926;
  double t5928;
  double t5936;
  double t5937;
  double t5957;
  double t5970;
  double t5971;
  double t6119;
  double t6154;
  double t6219;
  double t6221;
  double t7280;
  double t7284;
  double t7287;
  double t7296;
  double t7298;
  double t7300;
  double t6301;
  double t6302;
  double t6327;
  double t6330;
  double t6593;
  double t6595;
  double t6689;
  double t6690;
  double t6831;
  double t6838;
  double t6866;
  double t6869;
  double t7388;
  double t7391;
  double t7392;
  double t6725;
  double t6731;
  double t7436;
  double t7438;
  double t7440;
  double t6754;
  double t6761;
  double t6975;
  double t6978;
  double t7009;
  double t7010;
  double t7122;
  double t7123;
  double t7145;
  double t7159;
  double t7536;
  double t7537;
  double t7538;
  double t7047;
  double t7050;
  double t7551;
  double t7552;
  double t7557;
  double t7067;
  double t7068;
  double t7247;
  double t7249;
  double t7260;
  double t7262;
  double t7356;
  double t7372;
  double t7373;
  double t7501;
  double t7506;
  double t7520;
  double t7594;
  double t7595;
  double t7605;
  double t7609;
  double t7909;
  double t7918;
  double t7961;
  t557 = Sin(var1[18]);
  t605 = Sin(var1[17]);
  t564 = -0.366501*t557;
  t572 = 0. + t564;
  t498 = Cos(var1[17]);
  t628 = 0.930418*t557;
  t653 = 0. + t628;
  t452 = Cos(var1[5]);
  t586 = t498*t572;
  t687 = -1.*t605*t653;
  t733 = t586 + t687;
  t776 = t605*t572;
  t778 = t498*t653;
  t785 = t776 + t778;
  t796 = Sin(var1[5]);
  t16 = Cos(var1[3]);
  t275 = Sin(var1[4]);
  t885 = Sin(var1[3]);
  t765 = t452*t733;
  t1035 = -1.*t605*t572;
  t1092 = -1.*t498*t653;
  t1099 = t1035 + t1092;
  t86 = Cos(var1[18]);
  t412 = Cos(var1[4]);
  t1685 = -0.366501*t498*t86;
  t1749 = -0.930418*t86*t605;
  t1755 = t1685 + t1749;
  t1583 = 0.930418*t498*t86;
  t1590 = -0.366501*t86*t605;
  t1613 = t1583 + t1590;
  t952 = t452*t785;
  t992 = -1.*t733*t796;
  t1004 = t952 + t992;
  t152 = -1.*t86;
  t165 = 1. + t152;
  t169 = 1.000000637725*t165;
  t180 = -1. + t169;
  t810 = t785*t796;
  t817 = t765 + t810;
  t2388 = -0.134322983001*t165;
  t2408 = 1. + t2388;
  t2418 = -0.366501*t2408;
  t2432 = 0.3172717261340007*t165;
  t2433 = t2418 + t2432;
  t2333 = -0.8656776547239999*t165;
  t2351 = 1. + t2333;
  t2361 = 0.930418*t2351;
  t2366 = -0.12497652119782442*t165;
  t2376 = t2361 + t2366;
  t2571 = t498*t2433;
  t2585 = -1.*t2376*t605;
  t2592 = t2571 + t2585;
  t2377 = -1.*t498*t2376;
  t2436 = -1.*t2433*t605;
  t2438 = t2377 + t2436;
  t2846 = 0. + t2571 + t2585;
  t2785 = t498*t2376;
  t2797 = t2433*t605;
  t2809 = 0. + t2785 + t2797;
  t2823 = t452*t2809;
  t2875 = -1.*t2846*t796;
  t2942 = -0.366501*t572;
  t2944 = 0.930418*t653;
  t2951 = 0. + t2942 + t2944;
  t3023 = t452*t2846;
  t3024 = t2809*t796;
  t3054 = 0. + t3023 + t3024;
  t3272 = 0.3665012337268502*t498*t557;
  t3302 = 0.930418593350819*t605*t557;
  t3316 = t3272 + t3302;
  t3178 = -0.930418593350819*t498*t557;
  t3186 = 0.3665012337268502*t605*t557;
  t3227 = t3178 + t3186;
  t3667 = -0.930418*t2408;
  t3711 = t3667 + t2366;
  t3607 = -0.366501*t2351;
  t3612 = -0.3172717261340007*t165;
  t3627 = t3607 + t3612;
  t3767 = t498*t3711;
  t3780 = -1.*t3627*t605;
  t3790 = t3767 + t3780;
  t3628 = -1.*t498*t3627;
  t3736 = -1.*t3711*t605;
  t3757 = t3628 + t3736;
  t4103 = 0. + t3767 + t3780;
  t4014 = t498*t3627;
  t4044 = t3711*t605;
  t4058 = 0. + t4014 + t4044;
  t4060 = t452*t4058;
  t4140 = -1.*t4103*t796;
  t4459 = -0.930418*t572;
  t4473 = -0.366501*t653;
  t4501 = 0. + t4459 + t4473;
  t4581 = t452*t4103;
  t4587 = t4058*t796;
  t4588 = 0. + t4581 + t4587;
  t4885 = 1.3877787807814457e-17*t498*t557;
  t4887 = -5.551115123125783e-17*t605*t557;
  t4982 = t4885 + t4887;
  t4722 = 5.551115123125783e-17*t498*t557;
  t4732 = 1.3877787807814457e-17*t605*t557;
  t4740 = t4722 + t4732;
  t312 = -1.*t180*t275;
  t825 = t412*t817;
  t874 = t312 + t825;
  t891 = -1.*t452*t733;
  t922 = -1.*t785*t796;
  t924 = t891 + t922;
  t1111 = -1.*t1099*t796;
  t1123 = t765 + t1111;
  t1180 = t452*t1099;
  t1199 = t733*t796;
  t1357 = t1180 + t1199;
  t1663 = t452*t1613;
  t1808 = -1.*t1755*t796;
  t1821 = t1663 + t1808;
  t1871 = 1.000000637725*t412*t557;
  t1890 = t452*t1755;
  t1918 = t1613*t796;
  t1932 = t1890 + t1918;
  t1940 = t275*t1932;
  t1975 = t1871 + t1940;
  t2189 = t180*t412;
  t2201 = t275*t817;
  t2206 = t2189 + t2201;
  t2517 = t452*t2438;
  t2602 = t2592*t796;
  t2609 = t2517 + t2602;
  t2696 = t452*t2592;
  t2713 = -1.*t2438*t796;
  t2714 = t2696 + t2713;
  t2876 = t2823 + t2875;
  t2895 = -1.*t452*t2846;
  t2901 = -1.*t2809*t796;
  t2910 = t2895 + t2901;
  t2955 = -1.*t2951*t275;
  t3055 = t412*t3054;
  t3095 = t2955 + t3055;
  t3097 = 0. + t2823 + t2875;
  t3116 = t412*t2951;
  t3124 = t275*t3054;
  t3126 = 0. + t3116 + t3124;
  t3250 = t452*t3227;
  t3346 = -1.*t3316*t796;
  t3362 = t3250 + t3346;
  t3415 = 1.000000637725*t86*t412;
  t3416 = t452*t3316;
  t3417 = t3227*t796;
  t3424 = t3416 + t3417;
  t3448 = t275*t3424;
  t3459 = t3415 + t3448;
  t3764 = t452*t3757;
  t3794 = t3790*t796;
  t3803 = t3764 + t3794;
  t3836 = t452*t3790;
  t3861 = -1.*t3757*t796;
  t3928 = t3836 + t3861;
  t4164 = t4060 + t4140;
  t4228 = -1.*t452*t4103;
  t4284 = -1.*t4058*t796;
  t4293 = t4228 + t4284;
  t4566 = -1.*t4501*t275;
  t4626 = t412*t4588;
  t4647 = t4566 + t4626;
  t4677 = 0. + t4060 + t4140;
  t4683 = t412*t4501;
  t4684 = t275*t4588;
  t4685 = 0. + t4683 + t4684;
  t4788 = t452*t4740;
  t4986 = -1.*t4982*t796;
  t5013 = t4788 + t4986;
  t5115 = t452*t4982;
  t5121 = t4740*t796;
  t5123 = t5115 + t5121;
  t5128 = t275*t5123;
  t5134 = 0. + t5128;
  t5995 = 3.2909349868922137e-7*var1[18];
  t5999 = -0.046986*t2408;
  t6007 = -0.0063112059881053895*t165;
  t6013 = -0.045000372235*t572;
  t6018 = 0.366501*t557;
  t6020 = 0. + t6018;
  t6025 = -0.045*t6020;
  t6031 = t5995 + t5999 + t6007 + t6013 + t6025;
  t6043 = 1.296332362046933e-7*var1[18];
  t6045 = -0.109508*t2351;
  t6046 = -0.09479886646268927*t165;
  t6049 = -0.930418*t557;
  t6066 = 0. + t6049;
  t6068 = -0.045*t6066;
  t6077 = -0.045000372235*t653;
  t6080 = t6043 + t6045 + t6046 + t6068 + t6077;
  t5990 = -0.091*t605;
  t6032 = t498*t6031;
  t6093 = -1.*t605*t6080;
  t6102 = -0.091*t498;
  t6103 = -1.*t605*t6031;
  t6105 = -1.*t498*t6080;
  t6107 = t6102 + t6103 + t6105;
  t6095 = t5990 + t6032 + t6093;
  t6155 = t452*t6107;
  t6156 = t6095*t796;
  t6157 = t6155 + t6156;
  t6139 = 0. + t5990 + t6032 + t6093;
  t6120 = -1.*t498;
  t6121 = 1. + t6120;
  t6124 = -0.091*t6121;
  t6126 = t605*t6031;
  t6128 = t498*t6080;
  t6130 = 0. + t6124 + t6126 + t6128;
  t6163 = -1.000000637725*t165;
  t6165 = 1. + t6163;
  t6166 = -0.045*t6165;
  t6167 = -0.04500040093286238*t165;
  t6169 = -0.07877663122399998*t6066;
  t6170 = -0.046986*t572;
  t6172 = 0.031030906668*t6020;
  t6173 = -0.109508*t653;
  t6174 = 0. + t6166 + t6167 + t6169 + t6170 + t6172 + t6173;
  t6182 = t452*t6139;
  t6183 = t6130*t796;
  t6184 = 0. + t6182 + t6183;
  t6158 = 0. + t4566 + t4626;
  t6100 = t452*t6095;
  t6110 = -1.*t6107*t796;
  t6112 = t6100 + t6110;
  t6136 = t452*t6130;
  t6148 = -1.*t6139*t796;
  t6151 = 0. + t6136 + t6148;
  t5972 = 0. + t2955 + t3055;
  t6180 = -1.*t6174*t275;
  t6191 = t412*t6184;
  t6194 = 0. + t6180 + t6191;
  t6206 = t412*t6174;
  t6208 = t275*t6184;
  t6213 = 0. + t6206 + t6208;
  t6308 = t6136 + t6148;
  t6288 = -1.*t452*t6139;
  t6293 = -1.*t6130*t796;
  t6294 = t6288 + t6293;
  t6239 = t4677*t6151;
  t6243 = t6158*t6194;
  t6244 = t4685*t6213;
  t6248 = t6239 + t6243 + t6244;
  t6263 = -1.*t3097*t6151;
  t6269 = -1.*t5972*t6194;
  t6270 = -1.*t3126*t6213;
  t6274 = t6263 + t6269 + t6270;
  t5938 = -1.*t412*t4501;
  t5951 = -1.*t275*t4588;
  t5955 = t5938 + t5951;
  t5884 = -1.*t412*t2951;
  t5887 = -1.*t275*t3054;
  t5890 = t5884 + t5887;
  t6386 = t6180 + t6191;
  t6421 = -1.*t412*t6174;
  t6431 = -1.*t275*t6184;
  t6432 = t6421 + t6431;
  t5916 = -1.000000637725*t86*t275;
  t5917 = t412*t3424;
  t5924 = t5916 + t5917;
  t5960 = t412*t5123;
  t5961 = 0. + t5960;
  t6520 = -3.463341442314083e-7*t86;
  t6522 = -2.3784917349556345e-7*t557;
  t6525 = 1.296332362046933e-7 + t6520 + t6522;
  t6532 = 1.3642449973524928e-7*t86;
  t6540 = 9.369117959755202e-8*t557;
  t6545 = 3.2909349868922137e-7 + t6532 + t6540;
  t6574 = -1.*t605*t6525;
  t6576 = t498*t6545;
  t6577 = t6574 + t6576;
  t6528 = t498*t6525;
  t6561 = t605*t6545;
  t6567 = t6528 + t6561;
  t6596 = 2.556369003148262e-7*t86;
  t6598 = -3.722352373836113e-7*t557;
  t6600 = t6596 + t6598;
  t6608 = t452*t6577;
  t6617 = t6567*t796;
  t6622 = t6608 + t6617;
  t6570 = t452*t6567;
  t6584 = -1.*t6577*t796;
  t6591 = t6570 + t6584;
  t6605 = -1.*t6600*t275;
  t6629 = t412*t6622;
  t6662 = t6605 + t6629;
  t6667 = t412*t6600;
  t6668 = t275*t6622;
  t6669 = t6667 + t6668;
  t6742 = -1.*t4677*t6151;
  t6743 = -1.*t6158*t6194;
  t6746 = -1.*t4685*t6213;
  t6748 = t6742 + t6743 + t6746;
  t6786 = t6151*t1004;
  t6787 = t6194*t874;
  t6788 = t6213*t2206;
  t6797 = t6786 + t6787 + t6788;
  t5817 = -1.*t180*t412;
  t5830 = -1.*t275*t817;
  t5849 = t5817 + t5830;
  t5790 = -1.000000637725*t557*t275;
  t5792 = t412*t1932;
  t5809 = t5790 + t5792;
  t7061 = t3097*t6151;
  t7062 = t5972*t6194;
  t7064 = t3126*t6213;
  t7065 = t7061 + t7062 + t7064;
  t7092 = -1.*t6151*t1004;
  t7098 = -1.*t6194*t874;
  t7100 = -1.*t6213*t2206;
  t7101 = t7092 + t7098 + t7100;
  t5781 = var2[5]*t412*t1004;
  t5782 = var2[17]*t412*t1357;
  t5812 = var2[18]*t5809;
  t5862 = var2[4]*t5849;
  t5873 = t5781 + t5782 + t5812 + t5862;
  t5874 = var2[17]*t412*t2609;
  t5878 = var2[5]*t412*t2876;
  t5902 = var2[4]*t5890;
  t5926 = var2[18]*t5924;
  t5928 = t5874 + t5878 + t5902 + t5926;
  t5936 = var2[17]*t412*t3803;
  t5937 = var2[5]*t412*t4164;
  t5957 = var2[4]*t5955;
  t5970 = var2[18]*t5961;
  t5971 = t5936 + t5937 + t5957 + t5970;
  t6119 = t4677*t6112;
  t6154 = t3928*t6151;
  t6219 = -1.*t3097*t6112;
  t6221 = -1.*t2714*t6151;
  t7280 = t4501*t6174;
  t7284 = t4588*t6184;
  t7287 = t7280 + t7284 + t6239;
  t7296 = -1.*t6174*t2951;
  t7298 = -1.*t3054*t6184;
  t7300 = t7296 + t7298 + t6263;
  t6301 = t4677*t6294;
  t6302 = t4293*t6151;
  t6327 = -1.*t3097*t6294;
  t6330 = -1.*t2910*t6151;
  t6593 = t4677*t6591;
  t6595 = t6151*t5013;
  t6689 = -1.*t3097*t6591;
  t6690 = -1.*t6151*t3362;
  t6831 = -1.*t4677*t6294;
  t6838 = -1.*t4293*t6151;
  t6866 = t6151*t924;
  t6869 = t6294*t1004;
  t7388 = -1.*t4501*t6174;
  t7391 = -1.*t4588*t6184;
  t7392 = t7388 + t7391 + t6742;
  t6725 = -1.*t4677*t6112;
  t6731 = -1.*t3928*t6151;
  t7436 = t180*t6174;
  t7438 = t6184*t817;
  t7440 = t7436 + t7438 + t6786;
  t6754 = t6151*t1123;
  t6761 = t6112*t1004;
  t6975 = t1821*t6151;
  t6978 = t6591*t1004;
  t7009 = -1.*t4677*t6591;
  t7010 = -1.*t6151*t5013;
  t7122 = t3097*t6294;
  t7123 = t2910*t6151;
  t7145 = -1.*t6151*t924;
  t7159 = -1.*t6294*t1004;
  t7536 = t6174*t2951;
  t7537 = t3054*t6184;
  t7538 = t7536 + t7537 + t7061;
  t7047 = t3097*t6112;
  t7050 = t2714*t6151;
  t7551 = -1.*t180*t6174;
  t7552 = -1.*t6184*t817;
  t7557 = t7551 + t7552 + t7092;
  t7067 = -1.*t6151*t1123;
  t7068 = -1.*t6112*t1004;
  t7247 = -1.*t1821*t6151;
  t7249 = -1.*t6591*t1004;
  t7260 = t3097*t6591;
  t7262 = t6151*t3362;
  t7356 = t4501*t6600;
  t7372 = -1.000000637725*t86*t6174;
  t7373 = -1.*t2951*t6600;
  t7501 = t180*t6600;
  t7506 = 1.000000637725*t6174*t557;
  t7520 = -1.*t4501*t6600;
  t7594 = -1.*t180*t6600;
  t7595 = -1.000000637725*t6174*t557;
  t7605 = 1.000000637725*t86*t6174;
  t7609 = t2951*t6600;
  t7909 = t4459 + t4473;
  t7918 = t2942 + t2944;
  t7961 = -1. + t169;
  p_output1[0]=(-1.*t1004*t16 - 1.*t2206*t885)*var2[3] + t16*t874*var2[4] + (t1004*t16*t275 - 1.*t885*t924)*var2[5] + (t1357*t16*t275 - 1.*t1123*t885)*var2[17] + (t16*t1975 - 1.*t1821*t885)*var2[18];
  p_output1[1]=(-1.*t16*t3097 - 1.*t3126*t885)*var2[3] + t16*t3095*var2[4] + (t16*t275*t2876 - 1.*t2910*t885)*var2[5] + (t16*t2609*t275 - 1.*t2714*t885)*var2[17] + (t16*t3459 - 1.*t3362*t885)*var2[18];
  p_output1[2]=(-1.*t16*t4677 - 1.*t4685*t885)*var2[3] + t16*t4647*var2[4] + (t16*t275*t4164 - 1.*t4293*t885)*var2[5] + (t16*t275*t3803 - 1.*t3928*t885)*var2[17] + (t16*t5134 - 1.*t5013*t885)*var2[18];
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=(t16*t2206 - 1.*t1004*t885)*var2[3] + t874*t885*var2[4] + (t1004*t275*t885 + t16*t924)*var2[5] + (t1123*t16 + t1357*t275*t885)*var2[17] + (t16*t1821 + t1975*t885)*var2[18];
  p_output1[7]=(t16*t3126 - 1.*t3097*t885)*var2[3] + t3095*t885*var2[4] + (t16*t2910 + t275*t2876*t885)*var2[5] + (t16*t2714 + t2609*t275*t885)*var2[17] + (t16*t3362 + t3459*t885)*var2[18];
  p_output1[8]=(t16*t4685 - 1.*t4677*t885)*var2[3] + t4647*t885*var2[4] + (t16*t4293 + t275*t4164*t885)*var2[5] + (t16*t3928 + t275*t3803*t885)*var2[17] + (t16*t5013 + t5134*t885)*var2[18];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t5873;
  p_output1[13]=t5928;
  p_output1[14]=t5971;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(t5890*t6248 + t5955*t6274 + t6158*(-1.*t5890*t6194 - 1.*t3095*t6213 - 1.*t3126*t6386 - 1.*t5972*t6432) + t5972*(t5955*t6194 + t4647*t6213 + t4685*t6386 + t6158*t6432))*var2[4] + (t2876*t412*t6248 + t412*t4164*t6274 + t5972*(t412*t4164*t6194 + t275*t4164*t6213 + t6301 + t6302 + t275*t4685*t6308 + t412*t6158*t6308) + t6158*(-1.*t2876*t412*t6194 - 1.*t275*t2876*t6213 - 1.*t275*t3126*t6308 - 1.*t412*t5972*t6308 + t6327 + t6330))*var2[5] + (t5972*(t6119 + t6154 + t275*t4685*t6157 + t412*t6157*t6158 + t3803*t412*t6194 + t275*t3803*t6213) + t6158*(-1.*t275*t3126*t6157 - 1.*t412*t5972*t6157 - 1.*t2609*t412*t6194 - 1.*t2609*t275*t6213 + t6219 + t6221) + t2609*t412*t6248 + t3803*t412*t6274)*var2[17] + (t5924*t6248 + t5961*t6274 + t5972*(t5961*t6194 + t5134*t6213 + t6593 + t6595 + t6158*t6662 + t4685*t6669) + t6158*(-1.*t5924*t6194 - 1.*t3459*t6213 - 1.*t5972*t6662 - 1.*t3126*t6669 + t6689 + t6690))*var2[18];
  p_output1[19]=(t5849*t6748 + t5955*t6797 + (-1.*t5955*t6194 - 1.*t4647*t6213 - 1.*t4685*t6386 - 1.*t6158*t6432)*t874 + t6158*(t5849*t6194 + t2206*t6386 + t6213*t874 + t6432*t874))*var2[4] + (t1004*t412*t6748 + t412*t4164*t6797 + (-1.*t412*t4164*t6194 - 1.*t275*t4164*t6213 - 1.*t275*t4685*t6308 - 1.*t412*t6158*t6308 + t6831 + t6838)*t874 + t6158*(t1004*t412*t6194 + t1004*t275*t6213 + t2206*t275*t6308 + t6866 + t6869 + t412*t6308*t874))*var2[5] + (t1357*t412*t6748 + t3803*t412*t6797 + (-1.*t275*t4685*t6157 - 1.*t412*t6157*t6158 - 1.*t3803*t412*t6194 - 1.*t275*t3803*t6213 + t6725 + t6731)*t874 + t6158*(t2206*t275*t6157 + t1357*t412*t6194 + t1357*t275*t6213 + t6754 + t6761 + t412*t6157*t874))*var2[17] + (t5809*t6748 + t5961*t6797 + (-1.*t5961*t6194 - 1.*t5134*t6213 - 1.*t6158*t6662 - 1.*t4685*t6669 + t7009 + t7010)*t874 + t6158*(t5809*t6194 + t1975*t6213 + t2206*t6669 + t6975 + t6978 + t6662*t874))*var2[18];
  p_output1[20]=(t5849*t7065 + t5890*t7101 + (t5890*t6194 + t3095*t6213 + t3126*t6386 + t5972*t6432)*t874 + t5972*(-1.*t5849*t6194 - 1.*t2206*t6386 - 1.*t6213*t874 - 1.*t6432*t874))*var2[4] + (t1004*t412*t7065 + t2876*t412*t7101 + (t2876*t412*t6194 + t275*t2876*t6213 + t275*t3126*t6308 + t412*t5972*t6308 + t7122 + t7123)*t874 + t5972*(-1.*t1004*t412*t6194 - 1.*t1004*t275*t6213 - 1.*t2206*t275*t6308 + t7145 + t7159 - 1.*t412*t6308*t874))*var2[5] + (t1357*t412*t7065 + t2609*t412*t7101 + (t275*t3126*t6157 + t412*t5972*t6157 + t2609*t412*t6194 + t2609*t275*t6213 + t7047 + t7050)*t874 + t5972*(-1.*t2206*t275*t6157 - 1.*t1357*t412*t6194 - 1.*t1357*t275*t6213 + t7067 + t7068 - 1.*t412*t6157*t874))*var2[17] + (t5809*t7065 + t5924*t7101 + (t5924*t6194 + t3459*t6213 + t5972*t6662 + t3126*t6669 + t7260 + t7262)*t874 + t5972*(-1.*t5809*t6194 - 1.*t1975*t6213 - 1.*t2206*t6669 + t7247 + t7249 - 1.*t6662*t874))*var2[18];
  p_output1[21]=t5873;
  p_output1[22]=t5928;
  p_output1[23]=t5971;
  p_output1[24]=(t3097*(t4164*t6184 + t6301 + t6302 + t4588*t6308) + t4677*(-1.*t2876*t6184 - 1.*t3054*t6308 + t6327 + t6330) + t2910*t7287 + t4293*t7300)*var2[5] + (t3097*(t6119 + t6154 + t4588*t6157 + t3803*t6184) + t4677*(-1.*t3054*t6157 - 1.*t2609*t6184 + t6219 + t6221) + t2714*t7287 + t3928*t7300)*var2[17] + (t3362*t7287 + t5013*t7300 + t3097*(0. + t5123*t6184 + t6593 + t6595 + t4588*t6622 + t7356) + t4677*(-1.*t3424*t6184 - 1.*t3054*t6622 + t6689 + t6690 + t7372 + t7373))*var2[18];
  p_output1[25]=(t1004*(-1.*t4164*t6184 - 1.*t4588*t6308 + t6831 + t6838) + t4293*t7440 + t4677*(t1004*t6184 + t6866 + t6869 + t6308*t817) + t7392*t924)*var2[5] + (t1004*(-1.*t4588*t6157 - 1.*t3803*t6184 + t6725 + t6731) + t1123*t7392 + t3928*t7440 + t4677*(t1357*t6184 + t6754 + t6761 + t6157*t817))*var2[17] + (t1821*t7392 + t5013*t7440 + t1004*(0. - 1.*t5123*t6184 - 1.*t4588*t6622 + t7009 + t7010 + t7520) + t4677*(t1932*t6184 + t6975 + t6978 + t7501 + t7506 + t6622*t817))*var2[18];
  p_output1[26]=(t1004*(t2876*t6184 + t3054*t6308 + t7122 + t7123) + t2910*t7557 + t3097*(-1.*t1004*t6184 + t7145 + t7159 - 1.*t6308*t817) + t7538*t924)*var2[5] + (t1004*(t3054*t6157 + t2609*t6184 + t7047 + t7050) + t1123*t7538 + t2714*t7557 + t3097*(-1.*t1357*t6184 + t7067 + t7068 - 1.*t6157*t817))*var2[17] + (t1821*t7538 + t3362*t7557 + t1004*(t3424*t6184 + t3054*t6622 + t7260 + t7262 + t7605 + t7609) + t3097*(-1.*t1932*t6184 + t7247 + t7249 + t7594 + t7595 - 1.*t6622*t817))*var2[18];
  p_output1[27]=t924*var2[5] + t1123*var2[17] + t1821*var2[18];
  p_output1[28]=t2910*var2[5] + t2714*var2[17] + t3362*var2[18];
  p_output1[29]=t4293*var2[5] + t3928*var2[17] + t5013*var2[18];
  p_output1[30]=(t4501*(-1.*t2809*t6095 - 1.*t2846*t6107 - 1.*t2592*t6130 - 1.*t2438*t6139) + t2951*(t4058*t6095 + t4103*t6107 + t3790*t6130 + t3757*t6139))*var2[17] + (0. + t2951*(0. + t4740*t6130 + t4982*t6139 + t4058*t6567 + t4103*t6577 + t7356) + t4501*(-1.*t3227*t6130 - 1.*t3316*t6139 - 1.*t2809*t6567 - 1.*t2846*t6577 + t7372 + t7373) + 1.000000637725*(t4058*t6130 + t4103*t6139 + t7280)*t86)*var2[18];
  p_output1[31]=(t180*(-1.*t4058*t6095 - 1.*t4103*t6107 - 1.*t3790*t6130 - 1.*t3757*t6139) + t4501*(t1099*t6139 + t6107*t733 + t6130*t733 + t6095*t785))*var2[17] + (0. + 1.000000637725*t557*(-1.*t4058*t6130 - 1.*t4103*t6139 + t7388) + t180*(0. - 1.*t4740*t6130 - 1.*t4982*t6139 - 1.*t4058*t6567 - 1.*t4103*t6577 + t7520) + t4501*(t1613*t6130 + t1755*t6139 + t6577*t733 + t7501 + t7506 + t6567*t785))*var2[18];
  p_output1[32]=(t180*(t2809*t6095 + t2846*t6107 + t2592*t6130 + t2438*t6139) + t2951*(-1.*t1099*t6139 - 1.*t6107*t733 - 1.*t6130*t733 - 1.*t6095*t785))*var2[17] + (1.000000637725*t557*(t2809*t6130 + t2846*t6139 + t7536) + t180*(t3227*t6130 + t3316*t6139 + t2809*t6567 + t2846*t6577 + t7605 + t7609) + t2951*(-1.*t1613*t6130 - 1.*t1755*t6139 - 1.*t6577*t733 + t7594 + t7595 - 1.*t6567*t785) + 1.000000637725*(-1.*t6139*t733 + t7551 - 1.*t6130*t785)*t86)*var2[18];
  p_output1[33]=1.000000637725*t557*var2[18];
  p_output1[34]=1.000000637725*t86*var2[18];
  p_output1[35]=0.;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=(0. - 1.*(0. + 1.3877787807814457e-17*t557*t6031 + 5.551115123125783e-17*t557*t6080 + t3627*t6525 + t3711*t6545 + t6600*t7909)*t7918 - 1.*t7909*(-0.3665012337268502*t557*t6031 + 0.930418593350819*t557*t6080 - 1.*t2376*t6525 - 1.*t2433*t6545 + t7372 - 1.*t6600*t7918) + 0.033351591*t86 - 1.000000637725*(t3711*t6031 + t3627*t6080 + t6174*t7909)*t86)*var2[18];
  p_output1[103]=(0. - 0.03335161226914336*t557 - 1.000000637725*t557*(-1.*t3711*t6031 - 1.*t3627*t6080 - 1.*t6174*t7909) - 1.*(0. - 1.3877787807814457e-17*t557*t6031 - 5.551115123125783e-17*t557*t6080 - 1.*t3627*t6525 - 1.*t3711*t6545 - 1.*t6600*t7909)*t7961 - 1.*t7909*(t6525*t653 + t572*t6545 + t7506 + t6600*t7961 - 0.366501*t6031*t86 + 0.930418*t6080*t86))*var2[18];
  p_output1[104]=(-1.2628786905111155e-18*t557 - 1.000000637725*t557*(t2433*t6031 + t2376*t6080 + t6174*t7918) - 1.*(0.3665012337268502*t557*t6031 - 0.930418593350819*t557*t6080 + t2376*t6525 + t2433*t6545 + t7605 + t6600*t7918)*t7961 - 1.000000637725*(-1.*t572*t6031 - 1.*t6080*t653 - 1.*t6174*t7961)*t86 - 1.*t7918*(-1.*t6525*t653 - 1.*t572*t6545 + t7595 - 1.*t6600*t7961 + 0.366501*t6031*t86 - 0.930418*t6080*t86))*var2[18];
  p_output1[105]=-1.000000637725*t557*var2[18];
  p_output1[106]=-1.000000637725*t86*var2[18];
  p_output1[107]=0.;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void dJb_hip_rotation_right_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
