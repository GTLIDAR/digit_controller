/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:55:17 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dJb_shoulder_pitch_joint_right_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t241;
  double t243;
  double t248;
  double t337;
  double t559;
  double t252;
  double t303;
  double t306;
  double t325;
  double t342;
  double t385;
  double t399;
  double t516;
  double t221;
  double t582;
  double t610;
  double t683;
  double t699;
  double t711;
  double t724;
  double t733;
  double t768;
  double t177;
  double t851;
  double t875;
  double t897;
  double t550;
  double t775;
  double t805;
  double t899;
  double t101;
  double t175;
  double t963;
  double t1279;
  double t1221;
  double t1227;
  double t1228;
  double t1236;
  double t1286;
  double t1683;
  double t1423;
  double t1451;
  double t1461;
  double t1462;
  double t1491;
  double t1508;
  double t1511;
  double t1584;
  double t1597;
  double t1637;
  double t1687;
  double t1688;
  double t1744;
  double t1978;
  double t2004;
  double t2044;
  double t2096;
  double t2145;
  double t2153;
  double t2219;
  double t2244;
  double t2245;
  double t2059;
  double t2181;
  double t2193;
  double t2550;
  double t2551;
  double t2568;
  double t2637;
  double t2659;
  double t2668;
  double t2881;
  double t2886;
  double t2889;
  double t2598;
  double t2675;
  double t2769;
  double t3227;
  double t3082;
  double t3087;
  double t3169;
  double t3178;
  double t3245;
  double t3418;
  double t3424;
  double t3445;
  double t3489;
  double t3544;
  double t3556;
  double t3740;
  double t3742;
  double t3816;
  double t3825;
  double t2327;
  double t3894;
  double t3916;
  double t3917;
  double t3756;
  double t3840;
  double t3850;
  double t4499;
  double t4529;
  double t4555;
  double t4470;
  double t4482;
  double t4489;
  double t4496;
  double t4559;
  double t4854;
  double t4872;
  double t4873;
  double t4798;
  double t4575;
  double t4652;
  double t4657;
  double t4658;
  double t5031;
  double t5047;
  double t4376;
  double t4423;
  double t4429;
  double t4620;
  double t4681;
  double t4723;
  double t5159;
  double t5160;
  double t5150;
  double t5151;
  double t843;
  double t902;
  double t922;
  double t973;
  double t1005;
  double t1025;
  double t1295;
  double t1307;
  double t1322;
  double t1328;
  double t1666;
  double t1789;
  double t1824;
  double t1875;
  double t1884;
  double t1903;
  double t1907;
  double t2217;
  double t2253;
  double t2276;
  double t2306;
  double t2344;
  double t2351;
  double t2364;
  double t2388;
  double t2390;
  double t2397;
  double t2401;
  double t2871;
  double t2928;
  double t2981;
  double t3001;
  double t3005;
  double t3009;
  double t3253;
  double t3312;
  double t3328;
  double t3370;
  double t3475;
  double t3580;
  double t3586;
  double t3595;
  double t3634;
  double t3666;
  double t3676;
  double t3875;
  double t3956;
  double t3978;
  double t4021;
  double t4067;
  double t4075;
  double t4079;
  double t4149;
  double t4213;
  double t4229;
  double t4231;
  double t4457;
  double t4748;
  double t4777;
  double t4825;
  double t4883;
  double t4890;
  double t4915;
  double t4922;
  double t4931;
  double t4998;
  double t5023;
  double t5024;
  double t5052;
  double t5090;
  double t5108;
  double t5110;
  double t5117;
  double t5152;
  double t5163;
  double t5175;
  double t5207;
  double t5208;
  double t5245;
  double t5250;
  double t5252;
  double t5601;
  double t5603;
  double t5608;
  double t5609;
  double t5612;
  double t5613;
  double t5615;
  double t5620;
  double t5623;
  double t5625;
  double t5627;
  double t5628;
  double t5630;
  double t5633;
  double t5643;
  double t5645;
  double t5646;
  double t5685;
  double t5688;
  double t5690;
  double t5691;
  double t5693;
  double t5671;
  double t5674;
  double t5705;
  double t5706;
  double t5715;
  double t5640;
  double t5658;
  double t5605;
  double t5607;
  double t5622;
  double t5634;
  double t5636;
  double t5721;
  double t5724;
  double t5726;
  double t5729;
  double t5730;
  double t5733;
  double t5737;
  double t5740;
  double t5742;
  double t5743;
  double t5637;
  double t5662;
  double t5664;
  double t5718;
  double t5739;
  double t5745;
  double t5751;
  double t5758;
  double t5772;
  double t5775;
  double t5682;
  double t5700;
  double t5701;
  double t5598;
  double t5908;
  double t5805;
  double t5808;
  double t5810;
  double t5826;
  double t5896;
  double t5902;
  double t5905;
  double t5870;
  double t5871;
  double t5873;
  double t5883;
  double t5580;
  double t5582;
  double t5583;
  double t5556;
  double t5558;
  double t5559;
  double t5995;
  double t5998;
  double t5999;
  double t5989;
  double t5562;
  double t5563;
  double t5568;
  double t5587;
  double t5592;
  double t6041;
  double t6042;
  double t6043;
  double t6048;
  double t6049;
  double t6050;
  double t6057;
  double t6059;
  double t6065;
  double t6047;
  double t6052;
  double t6053;
  double t6077;
  double t6081;
  double t6091;
  double t6099;
  double t6102;
  double t6109;
  double t6055;
  double t6066;
  double t6071;
  double t6093;
  double t6115;
  double t6116;
  double t6122;
  double t6123;
  double t6124;
  double t6162;
  double t6183;
  double t6186;
  double t6187;
  double t6188;
  double t6209;
  double t6214;
  double t6215;
  double t6219;
  double t5533;
  double t5534;
  double t5535;
  double t5541;
  double t5542;
  double t5545;
  double t6374;
  double t6375;
  double t6377;
  double t6378;
  double t6404;
  double t6406;
  double t6409;
  double t6410;
  double t5526;
  double t5529;
  double t5536;
  double t5546;
  double t5547;
  double t5554;
  double t5555;
  double t5560;
  double t5569;
  double t5570;
  double t5571;
  double t5578;
  double t5584;
  double t5593;
  double t5596;
  double t5670;
  double t5704;
  double t5835;
  double t5846;
  double t6537;
  double t6539;
  double t6540;
  double t5894;
  double t5906;
  double t5936;
  double t5938;
  double t6557;
  double t6559;
  double t6560;
  double t6073;
  double t6076;
  double t6140;
  double t6141;
  double t6163;
  double t6165;
  double t6190;
  double t6191;
  double t6611;
  double t6612;
  double t6615;
  double t6225;
  double t6226;
  double t6238;
  double t6239;
  double t6636;
  double t6637;
  double t6638;
  double t6294;
  double t6295;
  double t6311;
  double t6312;
  double t6342;
  double t6343;
  double t6386;
  double t6388;
  double t6415;
  double t6416;
  double t6721;
  double t6726;
  double t6728;
  double t6427;
  double t6428;
  double t6738;
  double t6739;
  double t6740;
  double t6493;
  double t6494;
  double t6514;
  double t6515;
  double t6595;
  double t6596;
  double t6602;
  double t6675;
  double t6676;
  double t6683;
  double t6789;
  double t6791;
  double t6772;
  double t6773;
  double t7002;
  double t7004;
  double t7046;
  double t7123;
  t241 = Cos(var1[25]);
  t243 = -1.*t241;
  t248 = 1. + t243;
  t337 = Sin(var1[25]);
  t559 = Sin(var1[24]);
  t252 = -0.010926102783999999*t248;
  t303 = 1. + t252;
  t306 = 0.073913*t303;
  t325 = -0.07310496868062215*t248;
  t342 = 0.104528*t337;
  t385 = 0. + t342;
  t399 = 0.707107*t385;
  t516 = t306 + t325 + t399;
  t221 = Cos(var1[24]);
  t582 = -0.9890740084840001*t248;
  t610 = 1. + t582;
  t683 = 0.703234*t610;
  t699 = -0.007683655156165408*t248;
  t711 = 0.994522*t337;
  t724 = 0. + t711;
  t733 = 0.707107*t724;
  t768 = t683 + t699 + t733;
  t177 = Cos(var1[5]);
  t851 = -1.*t559*t516;
  t875 = t221*t768;
  t897 = t851 + t875;
  t550 = -1.*t221*t516;
  t775 = -1.*t559*t768;
  t805 = t550 + t775;
  t899 = Sin(var1[5]);
  t101 = Cos(var1[3]);
  t175 = Sin(var1[4]);
  t963 = Sin(var1[3]);
  t1279 = 0. + t851 + t875;
  t1221 = t221*t516;
  t1227 = t559*t768;
  t1228 = 0. + t1221 + t1227;
  t1236 = t177*t1228;
  t1286 = -1.*t1279*t899;
  t1683 = Cos(var1[4]);
  t1423 = -1.0000001112680001*t248;
  t1451 = 1. + t1423;
  t1461 = 0.707107*t1451;
  t1462 = -0.994522*t337;
  t1491 = 0. + t1462;
  t1508 = 0.703234*t1491;
  t1511 = -0.104528*t337;
  t1584 = 0. + t1511;
  t1597 = 0.073913*t1584;
  t1637 = 0. + t1461 + t1508 + t1597;
  t1687 = t177*t1279;
  t1688 = t1228*t899;
  t1744 = 0. + t1687 + t1688;
  t1978 = 0.7032334678540001*t241;
  t2004 = -0.7032341264384028*t337;
  t2044 = t1978 + t2004;
  t2096 = 0.07391248049600001*t241;
  t2145 = -0.07391254971569594*t337;
  t2153 = t2096 + t2145;
  t2219 = t221*t2044;
  t2244 = -1.*t559*t2153;
  t2245 = t2219 + t2244;
  t2059 = t559*t2044;
  t2181 = t221*t2153;
  t2193 = t2059 + t2181;
  t2550 = -0.073913*t303;
  t2551 = 0.07310496868062215*t248;
  t2568 = t2550 + t2551 + t399;
  t2637 = -0.703234*t610;
  t2659 = 0.007683655156165408*t248;
  t2668 = t2637 + t2659 + t733;
  t2881 = -1.*t559*t2568;
  t2886 = t221*t2668;
  t2889 = t2881 + t2886;
  t2598 = -1.*t221*t2568;
  t2675 = -1.*t559*t2668;
  t2769 = t2598 + t2675;
  t3227 = 0. + t2881 + t2886;
  t3082 = t221*t2568;
  t3087 = t559*t2668;
  t3169 = 0. + t3082 + t3087;
  t3178 = t177*t3169;
  t3245 = -1.*t3227*t899;
  t3418 = -0.703234*t1491;
  t3424 = -0.073913*t1584;
  t3445 = 0. + t1461 + t3418 + t3424;
  t3489 = t177*t3227;
  t3544 = t3169*t899;
  t3556 = 0. + t3489 + t3544;
  t3740 = 0.07391254971569594*t337;
  t3742 = t2096 + t3740;
  t3816 = 0.7032341264384028*t337;
  t3825 = t1978 + t3816;
  t2327 = -0.7071070786783819*t337;
  t3894 = -1.*t559*t3742;
  t3916 = t221*t3825;
  t3917 = t3894 + t3916;
  t3756 = t221*t3742;
  t3840 = t559*t3825;
  t3850 = t3756 + t3840;
  t4499 = 0.994522*t303;
  t4529 = 0.010866249592949247*t248;
  t4555 = t4499 + t4529;
  t4470 = -0.104528*t610;
  t4482 = -0.10338592795881554*t248;
  t4489 = t4470 + t4482;
  t4496 = t221*t4489;
  t4559 = -1.*t4555*t559;
  t4854 = -1.*t221*t4555;
  t4872 = -1.*t4489*t559;
  t4873 = t4854 + t4872;
  t4798 = t4496 + t4559;
  t4575 = 0. + t4496 + t4559;
  t4652 = t221*t4555;
  t4657 = t4489*t559;
  t4658 = 0. + t4652 + t4657;
  t5031 = t177*t4658;
  t5047 = -1.*t4575*t899;
  t4376 = -0.104528*t1491;
  t4423 = 0.994522*t1584;
  t4429 = 0. + t4376 + t4423;
  t4620 = t177*t4575;
  t4681 = t4658*t899;
  t4723 = 0. + t4620 + t4681;
  t5159 = 1.3877787807814457e-17*t221*t337;
  t5160 = 0. + t5159;
  t5150 = 1.3877787807814457e-17*t559*t337;
  t5151 = 0. + t5150;
  t843 = t177*t805;
  t902 = t897*t899;
  t922 = t843 + t902;
  t973 = t177*t897;
  t1005 = -1.*t805*t899;
  t1025 = t973 + t1005;
  t1295 = t1236 + t1286;
  t1307 = -1.*t177*t1279;
  t1322 = -1.*t1228*t899;
  t1328 = t1307 + t1322;
  t1666 = -1.*t1637*t175;
  t1789 = t1683*t1744;
  t1824 = t1666 + t1789;
  t1875 = 0. + t1236 + t1286;
  t1884 = t1683*t1637;
  t1903 = t175*t1744;
  t1907 = 0. + t1884 + t1903;
  t2217 = t177*t2193;
  t2253 = -1.*t2245*t899;
  t2276 = t2217 + t2253;
  t2306 = -0.707107662212*t241;
  t2344 = t2306 + t2327;
  t2351 = t1683*t2344;
  t2364 = t177*t2245;
  t2388 = t2193*t899;
  t2390 = t2364 + t2388;
  t2397 = t175*t2390;
  t2401 = t2351 + t2397;
  t2871 = t177*t2769;
  t2928 = t2889*t899;
  t2981 = t2871 + t2928;
  t3001 = t177*t2889;
  t3005 = -1.*t2769*t899;
  t3009 = t3001 + t3005;
  t3253 = t3178 + t3245;
  t3312 = -1.*t177*t3227;
  t3328 = -1.*t3169*t899;
  t3370 = t3312 + t3328;
  t3475 = -1.*t3445*t175;
  t3580 = t1683*t3556;
  t3586 = t3475 + t3580;
  t3595 = 0. + t3178 + t3245;
  t3634 = t1683*t3445;
  t3666 = t175*t3556;
  t3676 = 0. + t3634 + t3666;
  t3875 = t177*t3850;
  t3956 = -1.*t3917*t899;
  t3978 = t3875 + t3956;
  t4021 = 0.707107662212*t241;
  t4067 = t4021 + t2327;
  t4075 = t1683*t4067;
  t4079 = t177*t3917;
  t4149 = t3850*t899;
  t4213 = t4079 + t4149;
  t4229 = t175*t4213;
  t4231 = t4075 + t4229;
  t4457 = -1.*t4429*t175;
  t4748 = t1683*t4723;
  t4777 = t4457 + t4748;
  t4825 = t177*t4798;
  t4883 = -1.*t4873*t899;
  t4890 = t4825 + t4883;
  t4915 = t177*t4873;
  t4922 = t4798*t899;
  t4931 = t4915 + t4922;
  t4998 = -1.*t177*t4575;
  t5023 = -1.*t4658*t899;
  t5024 = t4998 + t5023;
  t5052 = t5031 + t5047;
  t5090 = 0. + t5031 + t5047;
  t5108 = t1683*t4429;
  t5110 = t175*t4723;
  t5117 = 0. + t5108 + t5110;
  t5152 = t177*t5151;
  t5163 = -1.*t5160*t899;
  t5175 = t5152 + t5163;
  t5207 = t177*t5160;
  t5208 = t5151*t899;
  t5245 = t5207 + t5208;
  t5250 = t175*t5245;
  t5252 = 0. + t5250;
  t5601 = -1.*t221;
  t5603 = 1. + t5601;
  t5608 = 1.1345904784751044e-7*var1[25];
  t5609 = -0.108558*t303;
  t5612 = -0.0011861143593705353*t248;
  t5613 = -0.05650052807*t1584;
  t5615 = -0.0565*t385;
  t5620 = t5608 + t5609 + t5612 + t5613 + t5615;
  t5623 = -1.1924972351948546e-8*var1[25];
  t5625 = 0.398799*t610;
  t5627 = 0.39444173984434006*t248;
  t5628 = -0.05650052807*t1491;
  t5630 = -0.0565*t724;
  t5633 = t5623 + t5625 + t5627 + t5628 + t5630;
  t5643 = -0.12*t559;
  t5645 = -1.*t559*t5620;
  t5646 = t221*t5633;
  t5685 = -0.12*t221;
  t5688 = 0.4*t559;
  t5690 = -1.*t221*t5620;
  t5691 = -1.*t559*t5633;
  t5693 = t5685 + t5688 + t5690 + t5691;
  t5671 = -0.4*t221;
  t5674 = t5671 + t5643 + t5645 + t5646;
  t5705 = t177*t5693;
  t5706 = t5674*t899;
  t5715 = t5705 + t5706;
  t5640 = 0.4*t5603;
  t5658 = 0. + t5640 + t5643 + t5645 + t5646;
  t5605 = -0.12*t5603;
  t5607 = -0.4*t559;
  t5622 = t221*t5620;
  t5634 = t559*t5633;
  t5636 = 0. + t5605 + t5607 + t5622 + t5634;
  t5721 = -0.0565*t1451;
  t5724 = -0.056500534356700764*t248;
  t5726 = 0.398799*t1491;
  t5729 = -0.108558*t1584;
  t5730 = 0.040271188976*t385;
  t5733 = 0.38315650737400003*t724;
  t5737 = 0. + t5721 + t5724 + t5726 + t5729 + t5730 + t5733;
  t5740 = t177*t5658;
  t5742 = t5636*t899;
  t5743 = 0. + t5740 + t5742;
  t5637 = t177*t5636;
  t5662 = -1.*t5658*t899;
  t5664 = 0. + t5637 + t5662;
  t5718 = 0. + t4457 + t4748;
  t5739 = -1.*t5737*t175;
  t5745 = t1683*t5743;
  t5751 = 0. + t5739 + t5745;
  t5758 = t1683*t5737;
  t5772 = t175*t5743;
  t5775 = 0. + t5758 + t5772;
  t5682 = t177*t5674;
  t5700 = -1.*t5693*t899;
  t5701 = t5682 + t5700;
  t5598 = 0. + t3475 + t3580;
  t5908 = t5637 + t5662;
  t5805 = t5090*t5664;
  t5808 = t5718*t5751;
  t5810 = t5117*t5775;
  t5826 = t5805 + t5808 + t5810;
  t5896 = -1.*t177*t5658;
  t5902 = -1.*t5636*t899;
  t5905 = t5896 + t5902;
  t5870 = -1.*t5664*t3595;
  t5871 = -1.*t5751*t5598;
  t5873 = -1.*t5775*t3676;
  t5883 = t5870 + t5871 + t5873;
  t5580 = -1.*t1683*t4429;
  t5582 = -1.*t175*t4723;
  t5583 = t5580 + t5582;
  t5556 = -1.*t1683*t3445;
  t5558 = -1.*t175*t3556;
  t5559 = t5556 + t5558;
  t5995 = -1.*t1683*t5737;
  t5998 = -1.*t175*t5743;
  t5999 = t5995 + t5998;
  t5989 = t5739 + t5745;
  t5562 = -1.*t4067*t175;
  t5563 = t1683*t4213;
  t5568 = t5562 + t5563;
  t5587 = t1683*t5245;
  t5592 = 0. + t5587;
  t6041 = 5.51981009597885e-8*t241;
  t6042 = 1.5066549364454312e-9*t337;
  t6043 = 1.1345904784751044e-7 + t6041 + t6042;
  t6048 = 5.25177232542362e-7*t241;
  t6049 = 1.4334929299142374e-8*t337;
  t6050 = -1.1924972351948546e-8 + t6048 + t6049;
  t6057 = -1.*t559*t6043;
  t6059 = t221*t6050;
  t6065 = t6057 + t6059;
  t6047 = t221*t6043;
  t6052 = t559*t6050;
  t6053 = t6047 + t6052;
  t6077 = 1.441388858269832e-8*t241;
  t6081 = -5.280700587570464e-7*t337;
  t6091 = t6077 + t6081;
  t6099 = t177*t6065;
  t6102 = t6053*t899;
  t6109 = t6099 + t6102;
  t6055 = t177*t6053;
  t6066 = -1.*t6065*t899;
  t6071 = t6055 + t6066;
  t6093 = -1.*t6091*t175;
  t6115 = t1683*t6109;
  t6116 = t6093 + t6115;
  t6122 = t1683*t6091;
  t6123 = t175*t6109;
  t6124 = t6122 + t6123;
  t6162 = 0. + t1666 + t1789;
  t6183 = -1.*t5090*t5664;
  t6186 = -1.*t5718*t5751;
  t6187 = -1.*t5117*t5775;
  t6188 = t6183 + t6186 + t6187;
  t6209 = t5664*t1875;
  t6214 = t5751*t6162;
  t6215 = t5775*t1907;
  t6219 = t6209 + t6214 + t6215;
  t5533 = -1.*t1683*t1637;
  t5534 = -1.*t175*t1744;
  t5535 = t5533 + t5534;
  t5541 = -1.*t2344*t175;
  t5542 = t1683*t2390;
  t5545 = t5541 + t5542;
  t6374 = -1.*t5664*t1875;
  t6375 = -1.*t5751*t6162;
  t6377 = -1.*t5775*t1907;
  t6378 = t6374 + t6375 + t6377;
  t6404 = t5664*t3595;
  t6406 = t5751*t5598;
  t6409 = t5775*t3676;
  t6410 = t6404 + t6406 + t6409;
  t5526 = var2[24]*t1683*t922;
  t5529 = var2[5]*t1683*t1295;
  t5536 = var2[4]*t5535;
  t5546 = var2[25]*t5545;
  t5547 = t5526 + t5529 + t5536 + t5546;
  t5554 = var2[24]*t1683*t2981;
  t5555 = var2[5]*t1683*t3253;
  t5560 = var2[4]*t5559;
  t5569 = var2[25]*t5568;
  t5570 = t5554 + t5555 + t5560 + t5569;
  t5571 = var2[24]*t1683*t4931;
  t5578 = var2[5]*t1683*t5052;
  t5584 = var2[4]*t5583;
  t5593 = var2[25]*t5592;
  t5596 = t5571 + t5578 + t5584 + t5593;
  t5670 = t4890*t5664;
  t5704 = t5090*t5701;
  t5835 = -1.*t5701*t3595;
  t5846 = -1.*t5664*t3009;
  t6537 = t4429*t5737;
  t6539 = t4723*t5743;
  t6540 = t6537 + t5805 + t6539;
  t5894 = t5024*t5664;
  t5906 = t5090*t5905;
  t5936 = -1.*t5905*t3595;
  t5938 = -1.*t5664*t3370;
  t6557 = -1.*t3445*t5737;
  t6559 = -1.*t5743*t3556;
  t6560 = t6557 + t5870 + t6559;
  t6073 = -1.*t3595*t6071;
  t6076 = -1.*t5664*t3978;
  t6140 = t5090*t6071;
  t6141 = t5664*t5175;
  t6163 = -1.*t4890*t5664;
  t6165 = -1.*t5090*t5701;
  t6190 = t5701*t1875;
  t6191 = t5664*t1025;
  t6611 = -1.*t4429*t5737;
  t6612 = -1.*t4723*t5743;
  t6615 = t6611 + t6183 + t6612;
  t6225 = -1.*t5024*t5664;
  t6226 = -1.*t5090*t5905;
  t6238 = t5905*t1875;
  t6239 = t5664*t1328;
  t6636 = t1637*t5737;
  t6637 = t5743*t1744;
  t6638 = t6636 + t6209 + t6637;
  t6294 = t5664*t2276;
  t6295 = t1875*t6071;
  t6311 = -1.*t5090*t6071;
  t6312 = -1.*t5664*t5175;
  t6342 = -1.*t5701*t1875;
  t6343 = -1.*t5664*t1025;
  t6386 = t5701*t3595;
  t6388 = t5664*t3009;
  t6415 = -1.*t5905*t1875;
  t6416 = -1.*t5664*t1328;
  t6721 = -1.*t1637*t5737;
  t6726 = -1.*t5743*t1744;
  t6728 = t6721 + t6374 + t6726;
  t6427 = t5905*t3595;
  t6428 = t5664*t3370;
  t6738 = t3445*t5737;
  t6739 = t5743*t3556;
  t6740 = t6738 + t6404 + t6739;
  t6493 = -1.*t5664*t2276;
  t6494 = -1.*t1875*t6071;
  t6514 = t3595*t6071;
  t6515 = t5664*t3978;
  t6595 = -1.*t5737*t4067;
  t6596 = -1.*t3445*t6091;
  t6602 = t4429*t6091;
  t6675 = t5737*t2344;
  t6676 = t1637*t6091;
  t6683 = -1.*t4429*t6091;
  t6789 = t5737*t4067;
  t6791 = t3445*t6091;
  t6772 = -1.*t5737*t2344;
  t6773 = -1.*t1637*t6091;
  t7002 = t4376 + t4423;
  t7004 = t1461 + t3418 + t3424;
  t7046 = t1461 + t1508 + t1597;
  t7123 = 0.7071070786783819*t337;
  p_output1[0]=(-1.*t101*t1875 - 1.*t1907*t963)*var2[3] + t101*t1824*var2[4] + (t101*t1295*t175 - 1.*t1328*t963)*var2[5] + (t101*t175*t922 - 1.*t1025*t963)*var2[24] + (t101*t2401 - 1.*t2276*t963)*var2[25];
  p_output1[1]=(-1.*t101*t3595 - 1.*t3676*t963)*var2[3] + t101*t3586*var2[4] + (t101*t175*t3253 - 1.*t3370*t963)*var2[5] + (t101*t175*t2981 - 1.*t3009*t963)*var2[24] + (t101*t4231 - 1.*t3978*t963)*var2[25];
  p_output1[2]=(-1.*t101*t5090 - 1.*t5117*t963)*var2[3] + t101*t4777*var2[4] + (t101*t175*t5052 - 1.*t5024*t963)*var2[5] + (t101*t175*t4931 - 1.*t4890*t963)*var2[24] + (t101*t5252 - 1.*t5175*t963)*var2[25];
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=(t101*t1907 - 1.*t1875*t963)*var2[3] + t1824*t963*var2[4] + (t101*t1328 + t1295*t175*t963)*var2[5] + (t101*t1025 + t175*t922*t963)*var2[24] + (t101*t2276 + t2401*t963)*var2[25];
  p_output1[7]=(t101*t3676 - 1.*t3595*t963)*var2[3] + t3586*t963*var2[4] + (t101*t3370 + t175*t3253*t963)*var2[5] + (t101*t3009 + t175*t2981*t963)*var2[24] + (t101*t3978 + t4231*t963)*var2[25];
  p_output1[8]=(t101*t5117 - 1.*t5090*t963)*var2[3] + t4777*t963*var2[4] + (t101*t5024 + t175*t5052*t963)*var2[5] + (t101*t4890 + t175*t4931*t963)*var2[24] + (t101*t5175 + t5252*t963)*var2[25];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t5547;
  p_output1[13]=t5570;
  p_output1[14]=t5596;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(t5559*t5826 + t5583*t5883 + t5718*(-1.*t5559*t5751 - 1.*t3586*t5775 - 1.*t3676*t5989 - 1.*t5598*t5999) + t5598*(t5583*t5751 + t4777*t5775 + t5117*t5989 + t5718*t5999))*var2[4] + (t1683*t3253*t5826 + t1683*t5052*t5883 + t5598*(t1683*t5052*t5751 + t175*t5052*t5775 + t5894 + t5906 + t175*t5117*t5908 + t1683*t5718*t5908) + t5718*(-1.*t1683*t3253*t5751 - 1.*t175*t3253*t5775 - 1.*t175*t3676*t5908 - 1.*t1683*t5598*t5908 + t5936 + t5938))*var2[5] + (t5598*(t5670 + t5704 + t175*t5117*t5715 + t1683*t5715*t5718 + t1683*t4931*t5751 + t175*t4931*t5775) + t1683*t2981*t5826 + t5718*(-1.*t175*t3676*t5715 - 1.*t1683*t5598*t5715 - 1.*t1683*t2981*t5751 - 1.*t175*t2981*t5775 + t5835 + t5846) + t1683*t4931*t5883)*var2[24] + (t5568*t5826 + t5592*t5883 + t5718*(-1.*t5568*t5751 - 1.*t4231*t5775 + t6073 + t6076 - 1.*t5598*t6116 - 1.*t3676*t6124) + t5598*(t5592*t5751 + t5252*t5775 + t5718*t6116 + t5117*t6124 + t6140 + t6141))*var2[25];
  p_output1[19]=((-1.*t5583*t5751 - 1.*t4777*t5775 - 1.*t5117*t5989 - 1.*t5718*t5999)*t6162 + t5718*(t5535*t5751 + t1824*t5775 + t1907*t5989 + t5999*t6162) + t5535*t6188 + t5583*t6219)*var2[4] + (t1295*t1683*t6188 + t1683*t5052*t6219 + t6162*(-1.*t1683*t5052*t5751 - 1.*t175*t5052*t5775 - 1.*t175*t5117*t5908 - 1.*t1683*t5718*t5908 + t6225 + t6226) + t5718*(t1295*t1683*t5751 + t1295*t175*t5775 + t175*t1907*t5908 + t1683*t5908*t6162 + t6238 + t6239))*var2[5] + (t6162*(-1.*t175*t5117*t5715 - 1.*t1683*t5715*t5718 - 1.*t1683*t4931*t5751 - 1.*t175*t4931*t5775 + t6163 + t6165) + t1683*t4931*t6219 + t1683*t6188*t922 + t5718*(t175*t1907*t5715 + t1683*t5715*t6162 + t6190 + t6191 + t1683*t5751*t922 + t175*t5775*t922))*var2[24] + (t5545*t6188 + t5592*t6219 + t5718*(t5545*t5751 + t2401*t5775 + t1907*t6124 + t6116*t6162 + t6294 + t6295) + t6162*(-1.*t5592*t5751 - 1.*t5252*t5775 - 1.*t5718*t6116 - 1.*t5117*t6124 + t6311 + t6312))*var2[25];
  p_output1[20]=((t5559*t5751 + t3586*t5775 + t3676*t5989 + t5598*t5999)*t6162 + t5598*(-1.*t5535*t5751 - 1.*t1824*t5775 - 1.*t1907*t5989 - 1.*t5999*t6162) + t5559*t6378 + t5535*t6410)*var2[4] + (t1683*t3253*t6378 + t1295*t1683*t6410 + t5598*(-1.*t1295*t1683*t5751 - 1.*t1295*t175*t5775 - 1.*t175*t1907*t5908 - 1.*t1683*t5908*t6162 + t6415 + t6416) + t6162*(t1683*t3253*t5751 + t175*t3253*t5775 + t175*t3676*t5908 + t1683*t5598*t5908 + t6427 + t6428))*var2[5] + (t1683*t2981*t6378 + t6162*(t175*t3676*t5715 + t1683*t5598*t5715 + t1683*t2981*t5751 + t175*t2981*t5775 + t6386 + t6388) + t1683*t6410*t922 + t5598*(-1.*t175*t1907*t5715 - 1.*t1683*t5715*t6162 + t6342 + t6343 - 1.*t1683*t5751*t922 - 1.*t175*t5775*t922))*var2[24] + (t5568*t6378 + t5545*t6410 + t5598*(-1.*t5545*t5751 - 1.*t2401*t5775 - 1.*t1907*t6124 - 1.*t6116*t6162 + t6493 + t6494) + t6162*(t5568*t5751 + t4231*t5775 + t5598*t6116 + t3676*t6124 + t6514 + t6515))*var2[25];
  p_output1[21]=t5547;
  p_output1[22]=t5570;
  p_output1[23]=t5596;
  p_output1[24]=(t3595*(t5052*t5743 + t5894 + t5906 + t4723*t5908) + t5090*(-1.*t3253*t5743 - 1.*t3556*t5908 + t5936 + t5938) + t3370*t6540 + t5024*t6560)*var2[5] + (t3595*(t5670 + t5704 + t4723*t5715 + t4931*t5743) + t5090*(-1.*t3556*t5715 - 1.*t2981*t5743 + t5835 + t5846) + t3009*t6540 + t4890*t6560)*var2[24] + (t3978*t6540 + t5175*t6560 + t5090*(-1.*t4213*t5743 + t6073 + t6076 - 1.*t3556*t6109 + t6595 + t6596) + t3595*(0. + t5245*t5743 + t4723*t6109 + t6140 + t6141 + t6602))*var2[25];
  p_output1[25]=(t1875*(-1.*t5052*t5743 - 1.*t4723*t5908 + t6225 + t6226) + t5090*(t1295*t5743 + t1744*t5908 + t6238 + t6239) + t1328*t6615 + t5024*t6638)*var2[5] + (t1875*(-1.*t4723*t5715 - 1.*t4931*t5743 + t6163 + t6165) + t1025*t6615 + t4890*t6638 + t5090*(t1744*t5715 + t6190 + t6191 + t5743*t922))*var2[24] + (t2276*t6615 + t5175*t6638 + t5090*(t2390*t5743 + t1744*t6109 + t6294 + t6295 + t6675 + t6676) + t1875*(0. - 1.*t5245*t5743 - 1.*t4723*t6109 + t6311 + t6312 + t6683))*var2[25];
  p_output1[26]=(t3595*(-1.*t1295*t5743 - 1.*t1744*t5908 + t6415 + t6416) + t1875*(t3253*t5743 + t3556*t5908 + t6427 + t6428) + t3370*t6728 + t1328*t6740)*var2[5] + (t1875*(t3556*t5715 + t2981*t5743 + t6386 + t6388) + t3009*t6728 + t1025*t6740 + t3595*(-1.*t1744*t5715 + t6342 + t6343 - 1.*t5743*t922))*var2[24] + (t3978*t6728 + t2276*t6740 + t3595*(-1.*t2390*t5743 - 1.*t1744*t6109 + t6493 + t6494 + t6772 + t6773) + t1875*(t4213*t5743 + t3556*t6109 + t6514 + t6515 + t6789 + t6791))*var2[25];
  p_output1[27]=t1328*var2[5] + t1025*var2[24] + t2276*var2[25];
  p_output1[28]=t3370*var2[5] + t3009*var2[24] + t3978*var2[25];
  p_output1[29]=t5024*var2[5] + t4890*var2[24] + t5175*var2[25];
  p_output1[30]=(t4429*(-1.*t2889*t5636 - 1.*t2769*t5658 - 1.*t3169*t5674 - 1.*t3227*t5693) + t3445*(t4798*t5636 + t4873*t5658 + t4658*t5674 + t4575*t5693))*var2[24] + (0. + t4067*(t4658*t5636 + t4575*t5658 + t6537) + t4429*(-1.*t3850*t5636 - 1.*t3917*t5658 - 1.*t3169*t6053 - 1.*t3227*t6065 + t6595 + t6596) + t3445*(0. + t5151*t5636 + t5160*t5658 + t4658*t6053 + t4575*t6065 + t6602))*var2[25];
  p_output1[31]=(t1637*(-1.*t4798*t5636 - 1.*t4873*t5658 - 1.*t4658*t5674 - 1.*t4575*t5693) + t4429*(t1228*t5674 + t1279*t5693 + t5658*t805 + t5636*t897))*var2[24] + (0. + t2344*(-1.*t4658*t5636 - 1.*t4575*t5658 + t6611) + t4429*(t2193*t5636 + t2245*t5658 + t1228*t6053 + t1279*t6065 + t6675 + t6676) + t1637*(0. - 1.*t5151*t5636 - 1.*t5160*t5658 - 1.*t4658*t6053 - 1.*t4575*t6065 + t6683))*var2[25];
  p_output1[32]=(t1637*(t2889*t5636 + t2769*t5658 + t3169*t5674 + t3227*t5693) + t3445*(-1.*t1228*t5674 - 1.*t1279*t5693 - 1.*t5658*t805 - 1.*t5636*t897))*var2[24] + (t4067*(-1.*t1228*t5636 - 1.*t1279*t5658 + t6721) + t2344*(t3169*t5636 + t3227*t5658 + t6738) + t3445*(-1.*t2193*t5636 - 1.*t2245*t5658 - 1.*t1228*t6053 - 1.*t1279*t6065 + t6772 + t6773) + t1637*(t3850*t5636 + t3917*t5658 + t3169*t6053 + t3227*t6065 + t6789 + t6791))*var2[25];
  p_output1[33]=t2344*var2[25];
  p_output1[34]=t4067*var2[25];
  p_output1[35]=0.;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=(0. - 0.12*t2044 - 0.4*t2153 - 1.*t4067*(t4555*t5620 + t4489*t5633 + t5737*t7002) - 1.*(0. + 1.3877787807814457e-17*t337*t5633 + t4555*t6043 + t4489*t6050 + t6091*t7002)*t7004 - 1.*t7002*(-1.*t3742*t5620 - 1.*t3825*t5633 - 1.*t2568*t6043 - 1.*t2668*t6050 + t6595 - 1.*t6091*t7004))*var2[25];
  p_output1[145]=(0. - 0.4*t3742 - 0.12*t3825 - 1.*t2344*(-1.*t4555*t5620 - 1.*t4489*t5633 - 1.*t5737*t7002) - 1.*(0. - 1.3877787807814457e-17*t337*t5633 - 1.*t4555*t6043 - 1.*t4489*t6050 - 1.*t6091*t7002)*t7046 - 1.*t7002*(t2153*t5620 + t2044*t5633 + t516*t6043 + t6675 + t6091*t7046 + t6050*t768))*var2[25];
  p_output1[146]=(0. - 1.6653345369377347e-18*t337 - 1.*t2344*(t2568*t5620 + t2668*t5633 + t5737*t7004) - 1.*(t3742*t5620 + t3825*t5633 + t2568*t6043 + t2668*t6050 + t6789 + t6091*t7004)*t7046 - 1.*t4067*(-1.*t516*t5620 - 1.*t5737*t7046 - 1.*t5633*t768) - 1.*t7004*(-1.*t2153*t5620 - 1.*t2044*t5633 - 1.*t516*t6043 + t6772 - 1.*t6091*t7046 - 1.*t6050*t768))*var2[25];
  p_output1[147]=(t4021 + t7123)*var2[25];
  p_output1[148]=(t2306 + t7123)*var2[25];
  p_output1[149]=0.;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void dJb_shoulder_pitch_joint_right_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
