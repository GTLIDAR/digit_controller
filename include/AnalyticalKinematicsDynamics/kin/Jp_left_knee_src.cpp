/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:56:56 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_left_knee_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t374;
  double t376;
  double t413;
  double t349;
  double t537;
  double t1875;
  double t7;
  double t837;
  double t1021;
  double t1105;
  double t375;
  double t722;
  double t760;
  double t1111;
  double t1533;
  double t1662;
  double t1712;
  double t2354;
  double t2365;
  double t2372;
  double t2144;
  double t2181;
  double t2204;
  double t1493;
  double t2228;
  double t2243;
  double t3021;
  double t3095;
  double t3189;
  double t2585;
  double t2609;
  double t1878;
  double t1909;
  double t1928;
  double t1939;
  double t4080;
  double t4125;
  double t4219;
  double t4246;
  double t4278;
  double t4279;
  double t3191;
  double t3207;
  double t3231;
  double t3273;
  double t3328;
  double t3553;
  double t4360;
  double t3874;
  double t3918;
  double t3933;
  double t4002;
  double t4015;
  double t4019;
  double t2784;
  double t2917;
  double t2965;
  double t3646;
  double t3688;
  double t3774;
  double t4028;
  double t4426;
  double t4434;
  double t4445;
  double t4453;
  double t4522;
  double t4556;
  double t4557;
  double t4586;
  double t4591;
  double t4624;
  double t4643;
  double t4767;
  double t4787;
  double t4796;
  double t4801;
  double t4817;
  double t4831;
  double t4861;
  double t4909;
  double t4924;
  double t4934;
  double t4986;
  double t4996;
  double t5061;
  double t5094;
  double t5139;
  double t5241;
  double t5275;
  double t5282;
  double t4536;
  double t4539;
  double t14;
  double t35;
  double t172;
  double t274;
  double t1374;
  double t1382;
  double t1852;
  double t1926;
  double t1943;
  double t2079;
  double t5827;
  double t5839;
  double t5855;
  double t5798;
  double t5807;
  double t5813;
  double t2213;
  double t2222;
  double t2245;
  double t2346;
  double t2470;
  double t2514;
  double t2627;
  double t2706;
  double t5935;
  double t5964;
  double t5986;
  double t5890;
  double t5919;
  double t5921;
  double t6080;
  double t6087;
  double t6088;
  double t6113;
  double t6006;
  double t6010;
  double t6013;
  double t6017;
  double t6022;
  double t6031;
  double t6040;
  double t6057;
  double t4806;
  double t4808;
  double t5025;
  double t5047;
  double t6018;
  double t6073;
  double t6129;
  double t6135;
  double t6153;
  double t6154;
  double t6167;
  double t6168;
  double t6183;
  double t6205;
  double t6206;
  double t6210;
  double t5255;
  double t5264;
  double t5363;
  double t5430;
  double t5437;
  double t5438;
  double t5457;
  double t5458;
  double t5462;
  double t5520;
  double t5528;
  double t5534;
  double t5557;
  double t5600;
  double t5626;
  double t5638;
  double t5648;
  double t5660;
  double t5733;
  double t5740;
  double t5741;
  double t5743;
  double t5747;
  double t5752;
  double t5761;
  double t5767;
  double t6528;
  double t6530;
  double t6537;
  double t6484;
  double t6487;
  double t6492;
  double t6660;
  double t6661;
  double t6674;
  double t6690;
  double t6548;
  double t6558;
  double t6567;
  double t6595;
  double t6613;
  double t6622;
  double t6625;
  double t6631;
  double t6611;
  double t6636;
  double t6698;
  double t6703;
  double t6725;
  double t6738;
  double t6740;
  double t6750;
  double t6759;
  double t6766;
  double t6771;
  double t6773;
  double t7006;
  double t7008;
  double t7023;
  double t6901;
  double t6913;
  double t6934;
  double t7075;
  double t7081;
  double t7084;
  double t7086;
  double t7040;
  double t7041;
  double t7042;
  double t7044;
  double t7048;
  double t7049;
  double t7065;
  double t7066;
  double t7047;
  double t7074;
  double t7090;
  double t7104;
  double t7135;
  double t7136;
  double t7152;
  double t7155;
  double t7163;
  double t7171;
  double t7172;
  double t7180;
  double t7290;
  double t7292;
  double t7313;
  double t7283;
  double t7285;
  double t7286;
  double t7404;
  double t7405;
  double t7411;
  double t7425;
  double t7332;
  double t7338;
  double t7339;
  double t7353;
  double t7380;
  double t7381;
  double t7392;
  double t7393;
  double t7372;
  double t7399;
  double t7427;
  double t7430;
  double t7438;
  double t7444;
  double t7445;
  double t7453;
  double t7471;
  double t7472;
  double t7477;
  double t7491;
  double t7579;
  double t7583;
  double t7587;
  double t7595;
  double t7598;
  double t7604;
  double t7610;
  double t7621;
  double t7644;
  double t7645;
  double t7646;
  double t7638;
  double t7639;
  double t7640;
  double t7630;
  double t7633;
  double t7634;
  double t7637;
  double t7641;
  double t7648;
  double t7653;
  double t7659;
  double t7660;
  double t7661;
  double t7670;
  double t7687;
  double t7693;
  double t7694;
  double t7695;
  double t7778;
  double t7781;
  double t7795;
  double t7820;
  double t7826;
  double t7830;
  double t7832;
  double t7834;
  double t7869;
  double t7890;
  double t7897;
  double t7855;
  double t7859;
  double t7862;
  double t7839;
  double t7840;
  double t7841;
  double t7853;
  double t7868;
  double t7898;
  double t7899;
  double t7905;
  double t7906;
  double t7907;
  double t7915;
  double t7918;
  double t7930;
  double t7937;
  double t7939;
  double t8016;
  double t8021;
  double t8023;
  double t8025;
  double t8027;
  double t8032;
  double t8087;
  double t8089;
  double t8092;
  double t8071;
  double t8072;
  double t8082;
  double t8050;
  double t8060;
  double t8065;
  double t8066;
  double t8084;
  double t8099;
  double t8100;
  double t8118;
  double t8120;
  double t8121;
  double t8122;
  double t8126;
  double t8127;
  double t8129;
  double t8132;
  double t8217;
  double t8220;
  double t8221;
  double t8256;
  double t8257;
  double t8262;
  double t8236;
  double t8249;
  double t8252;
  double t8226;
  double t8227;
  double t8230;
  double t8253;
  double t8263;
  double t8265;
  double t8269;
  double t8270;
  double t8272;
  double t8273;
  double t8275;
  double t8276;
  double t8278;
  double t8279;
  double t8368;
  double t8375;
  double t8378;
  double t8388;
  double t8391;
  double t8393;
  double t8406;
  double t8409;
  double t8411;
  double t8430;
  double t8431;
  double t8432;
  double t8423;
  double t8424;
  double t8425;
  double t8413;
  double t8416;
  double t8418;
  double t8419;
  double t8427;
  double t8435;
  double t8436;
  double t8440;
  double t8441;
  double t8442;
  double t8444;
  double t8447;
  double t8448;
  double t8450;
  double t8453;
  double t8519;
  double t8520;
  double t8522;
  double t8525;
  double t8526;
  double t8532;
  double t8550;
  double t8552;
  double t8554;
  double t8544;
  double t8545;
  double t8548;
  double t8534;
  double t8537;
  double t8540;
  double t8541;
  double t8549;
  double t8555;
  double t8557;
  double t8564;
  double t8568;
  double t8589;
  double t8591;
  double t8594;
  double t8603;
  double t8604;
  double t8605;
  double t8707;
  double t8711;
  double t8713;
  double t8722;
  double t8698;
  double t8700;
  double t8701;
  double t8702;
  double t8692;
  double t8693;
  double t8694;
  double t8695;
  double t8697;
  double t8706;
  double t8725;
  double t8728;
  double t8730;
  double t8735;
  double t8736;
  double t8740;
  double t8749;
  double t8750;
  double t8751;
  double t8758;
  double t8664;
  double t8666;
  double t8667;
  double t8669;
  double t8670;
  double t8671;
  double t8677;
  double t8678;
  double t8679;
  double t8844;
  double t8845;
  double t8867;
  double t8868;
  double t8869;
  double t8872;
  double t8862;
  double t8863;
  double t8864;
  double t8865;
  double t8853;
  double t8856;
  double t8859;
  double t8860;
  double t8861;
  double t8866;
  double t8875;
  double t8876;
  double t8879;
  double t8881;
  double t8888;
  double t8890;
  double t8892;
  double t8893;
  double t8894;
  double t8904;
  double t8973;
  double t8975;
  double t8976;
  double t8979;
  double t8968;
  double t8969;
  double t8970;
  double t8971;
  double t8960;
  double t8961;
  double t8965;
  double t8966;
  double t8967;
  double t8972;
  double t8987;
  double t8988;
  double t8991;
  double t8992;
  double t8993;
  double t8994;
  double t9001;
  double t9002;
  double t9003;
  double t9006;
  double t9071;
  double t9072;
  double t9075;
  double t9076;
  double t9080;
  double t9083;
  double t9085;
  double t9090;
  double t9097;
  double t9100;
  double t9101;
  double t9102;
  double t9047;
  double t9048;
  double t9049;
  double t9055;
  double t9056;
  double t9057;
  double t9063;
  double t9066;
  double t9067;
  double t9148;
  double t9149;
  double t9152;
  double t9176;
  double t9180;
  double t9183;
  double t9184;
  double t9154;
  double t9163;
  double t9170;
  double t9171;
  double t9188;
  double t9189;
  double t9190;
  double t9191;
  double t9193;
  double t9198;
  double t9199;
  double t9200;
  double t9206;
  double t9207;
  double t9209;
  double t9216;
  double t9243;
  double t9244;
  double t9245;
  double t9254;
  double t9255;
  double t9256;
  double t9247;
  double t9250;
  double t9251;
  double t9252;
  double t9259;
  double t9260;
  double t9262;
  double t9263;
  double t9265;
  double t9267;
  double t9268;
  double t9274;
  double t9276;
  double t9277;
  double t9281;
  double t9282;
  double t9335;
  double t9336;
  double t9337;
  double t9339;
  double t9342;
  double t9343;
  double t9346;
  double t9347;
  double t9349;
  double t9350;
  double t9351;
  double t9358;
  double t9318;
  double t9319;
  double t9320;
  double t9323;
  double t9325;
  double t9326;
  double t9330;
  double t9331;
  double t9332;
  double t9385;
  double t9387;
  double t9388;
  double t9389;
  double t9392;
  double t9393;
  double t9394;
  double t9395;
  double t9398;
  double t9399;
  double t9400;
  double t9401;
  t374 = Cos(var1[5]);
  t376 = Sin(var1[3]);
  t413 = Sin(var1[4]);
  t349 = Cos(var1[3]);
  t537 = Sin(var1[5]);
  t1875 = Sin(var1[7]);
  t7 = Cos(var1[6]);
  t837 = -1.*t374*t376*t413;
  t1021 = t349*t537;
  t1105 = t837 + t1021;
  t375 = -1.*t349*t374;
  t722 = -1.*t376*t413*t537;
  t760 = t375 + t722;
  t1111 = Sin(var1[6]);
  t1533 = Cos(var1[7]);
  t1662 = -1.*t1533;
  t1712 = 1. + t1662;
  t2354 = t7*t760;
  t2365 = -1.*t1105*t1111;
  t2372 = t2354 + t2365;
  t2144 = t7*t1105;
  t2181 = t760*t1111;
  t2204 = t2144 + t2181;
  t1493 = Cos(var1[4]);
  t2228 = 0.366501*t1875;
  t2243 = 0. + t2228;
  t3021 = Cos(var1[8]);
  t3095 = -1.*t3021;
  t3189 = 1. + t3095;
  t2585 = 0.930418*t1875;
  t2609 = 0. + t2585;
  t1878 = -0.930418*t1875;
  t1909 = 0. + t1878;
  t1928 = -0.366501*t1875;
  t1939 = 0. + t1928;
  t4080 = -1.000000637725*t1712;
  t4125 = 1. + t4080;
  t4219 = -1.*t1493*t4125*t376;
  t4246 = t2372*t1909;
  t4278 = t2204*t1939;
  t4279 = t4219 + t4246 + t4278;
  t3191 = -0.340999127418*t1712*t2372;
  t3207 = -0.134322983001*t1712;
  t3231 = 1. + t3207;
  t3273 = t3231*t2204;
  t3328 = -1.*t1493*t376*t2243;
  t3553 = t3191 + t3273 + t3328;
  t4360 = Sin(var1[8]);
  t3874 = -0.8656776547239999*t1712;
  t3918 = 1. + t3874;
  t3933 = t3918*t2372;
  t4002 = -0.340999127418*t1712*t2204;
  t4015 = -1.*t1493*t376*t2609;
  t4019 = t3933 + t4002 + t4015;
  t2784 = Cos(var1[9]);
  t2917 = -1.*t2784;
  t2965 = 1. + t2917;
  t3646 = 0.340999127418*t3189*t3553;
  t3688 = -0.134322983001*t3189;
  t3774 = 1. + t3688;
  t4028 = t3774*t4019;
  t4426 = -0.366501*t4360;
  t4434 = 0. + t4426;
  t4445 = t4279*t4434;
  t4453 = t3646 + t4028 + t4445;
  t4522 = Sin(var1[9]);
  t4556 = -1.000000637725*t3189;
  t4557 = 1. + t4556;
  t4586 = t4557*t4279;
  t4591 = -0.930418*t4360;
  t4624 = 0. + t4591;
  t4643 = t3553*t4624;
  t4767 = 0.366501*t4360;
  t4787 = 0. + t4767;
  t4796 = t4019*t4787;
  t4801 = t4586 + t4643 + t4796;
  t4817 = -0.8656776547239999*t3189;
  t4831 = 1. + t4817;
  t4861 = t4831*t3553;
  t4909 = 0.340999127418*t3189*t4019;
  t4924 = 0.930418*t4360;
  t4934 = 0. + t4924;
  t4986 = t4279*t4934;
  t4996 = t4861 + t4909 + t4986;
  t5061 = 0.366501*t4522;
  t5094 = 0. + t5061;
  t5139 = -0.366501*t4522;
  t5241 = 0. + t5139;
  t5275 = 0.930418*t4522;
  t5282 = 0. + t5275;
  t4536 = -0.930418*t4522;
  t4539 = 0. + t4536;
  t14 = -1.*t7;
  t35 = 1. + t14;
  t172 = 0.091*t35;
  t274 = 0. + t172;
  t1374 = 0.091*t1111;
  t1382 = 0. + t1374;
  t1852 = -0.04500040093286238*t1712;
  t1926 = 0.07877663122399998*t1909;
  t1943 = 0.031030906668*t1939;
  t2079 = 0. + t1852 + t1926 + t1943;
  t5827 = t349*t374*t413;
  t5839 = t376*t537;
  t5855 = t5827 + t5839;
  t5798 = -1.*t374*t376;
  t5807 = t349*t413*t537;
  t5813 = t5798 + t5807;
  t2213 = -3.2909349868922137e-7*var1[7];
  t2222 = 0.03103092645718495*t1712;
  t2245 = -0.045000372235*t2243;
  t2346 = t2213 + t2222 + t2245;
  t2470 = 1.296332362046933e-7*var1[7];
  t2514 = 0.07877668146182712*t1712;
  t2627 = -0.045000372235*t2609;
  t2706 = t2470 + t2514 + t2627;
  t5935 = t7*t5813;
  t5964 = -1.*t5855*t1111;
  t5986 = t5935 + t5964;
  t5890 = t7*t5855;
  t5919 = t5813*t1111;
  t5921 = t5890 + t5919;
  t6080 = t349*t1493*t4125;
  t6087 = t5986*t1909;
  t6088 = t5921*t1939;
  t6113 = t6080 + t6087 + t6088;
  t6006 = -0.340999127418*t1712*t5986;
  t6010 = t3231*t5921;
  t6013 = t349*t1493*t2243;
  t6017 = t6006 + t6010 + t6013;
  t6022 = t3918*t5986;
  t6031 = -0.340999127418*t1712*t5921;
  t6040 = t349*t1493*t2609;
  t6057 = t6022 + t6031 + t6040;
  t4806 = -0.8656776547239999*t2965;
  t4808 = 1. + t4806;
  t5025 = -0.134322983001*t2965;
  t5047 = 1. + t5025;
  t6018 = 0.340999127418*t3189*t6017;
  t6073 = t3774*t6057;
  t6129 = t6113*t4434;
  t6135 = t6018 + t6073 + t6129;
  t6153 = t4557*t6113;
  t6154 = t6017*t4624;
  t6167 = t6057*t4787;
  t6168 = t6153 + t6154 + t6167;
  t6183 = t4831*t6017;
  t6205 = 0.340999127418*t3189*t6057;
  t6206 = t6113*t4934;
  t6210 = t6183 + t6205 + t6206;
  t5255 = -1.000000637725*t2965;
  t5264 = 1. + t5255;
  t5363 = 3.2909349868922137e-7*var1[8];
  t5430 = 0.055653945343889656*t3189;
  t5437 = -0.045000372235*t4434;
  t5438 = t5363 + t5430 + t5437;
  t5457 = -1.5981976069815686e-7*var1[9];
  t5458 = 0.08675267452931407*t2965;
  t5462 = 0.039853013046*t5094;
  t5520 = t5457 + t5458 + t5462;
  t5528 = -0.04500040093286238*t3189;
  t5534 = -0.141285834136*t4624;
  t5557 = 0.055653909852*t4787;
  t5600 = 0. + t5528 + t5534 + t5557;
  t5626 = 0.039853038461262744*t2965;
  t5638 = 0.086752619205*t5241;
  t5648 = -0.22023459268999998*t5282;
  t5660 = 0. + t5626 + t5638 + t5648;
  t5733 = 1.296332362046933e-7*var1[8];
  t5740 = -0.14128592423750855*t3189;
  t5741 = -0.045000372235*t4934;
  t5743 = t5733 + t5740 + t5741;
  t5747 = -6.295460977284962e-8*var1[9];
  t5752 = -0.22023473313910558*t2965;
  t5761 = 0.039853013046*t4539;
  t5767 = t5747 + t5752 + t5761;
  t6528 = t349*t1493*t7*t537;
  t6530 = -1.*t349*t1493*t374*t1111;
  t6537 = t6528 + t6530;
  t6484 = t349*t1493*t374*t7;
  t6487 = t349*t1493*t537*t1111;
  t6492 = t6484 + t6487;
  t6660 = -1.*t349*t4125*t413;
  t6661 = t6537*t1909;
  t6674 = t6492*t1939;
  t6690 = t6660 + t6661 + t6674;
  t6548 = -0.340999127418*t1712*t6537;
  t6558 = t3231*t6492;
  t6567 = -1.*t349*t413*t2243;
  t6595 = t6548 + t6558 + t6567;
  t6613 = t3918*t6537;
  t6622 = -0.340999127418*t1712*t6492;
  t6625 = -1.*t349*t413*t2609;
  t6631 = t6613 + t6622 + t6625;
  t6611 = 0.340999127418*t3189*t6595;
  t6636 = t3774*t6631;
  t6698 = t6690*t4434;
  t6703 = t6611 + t6636 + t6698;
  t6725 = t4557*t6690;
  t6738 = t6595*t4624;
  t6740 = t6631*t4787;
  t6750 = t6725 + t6738 + t6740;
  t6759 = t4831*t6595;
  t6766 = 0.340999127418*t3189*t6631;
  t6771 = t6690*t4934;
  t6773 = t6759 + t6766 + t6771;
  t7006 = t1493*t7*t376*t537;
  t7008 = -1.*t1493*t374*t376*t1111;
  t7023 = t7006 + t7008;
  t6901 = t1493*t374*t7*t376;
  t6913 = t1493*t376*t537*t1111;
  t6934 = t6901 + t6913;
  t7075 = -1.*t4125*t376*t413;
  t7081 = t7023*t1909;
  t7084 = t6934*t1939;
  t7086 = t7075 + t7081 + t7084;
  t7040 = -0.340999127418*t1712*t7023;
  t7041 = t3231*t6934;
  t7042 = -1.*t376*t413*t2243;
  t7044 = t7040 + t7041 + t7042;
  t7048 = t3918*t7023;
  t7049 = -0.340999127418*t1712*t6934;
  t7065 = -1.*t376*t413*t2609;
  t7066 = t7048 + t7049 + t7065;
  t7047 = 0.340999127418*t3189*t7044;
  t7074 = t3774*t7066;
  t7090 = t7086*t4434;
  t7104 = t7047 + t7074 + t7090;
  t7135 = t4557*t7086;
  t7136 = t7044*t4624;
  t7152 = t7066*t4787;
  t7155 = t7135 + t7136 + t7152;
  t7163 = t4831*t7044;
  t7171 = 0.340999127418*t3189*t7066;
  t7172 = t7086*t4934;
  t7180 = t7163 + t7171 + t7172;
  t7290 = -1.*t7*t413*t537;
  t7292 = t374*t413*t1111;
  t7313 = t7290 + t7292;
  t7283 = -1.*t374*t7*t413;
  t7285 = -1.*t413*t537*t1111;
  t7286 = t7283 + t7285;
  t7404 = -1.*t1493*t4125;
  t7405 = t7313*t1909;
  t7411 = t7286*t1939;
  t7425 = t7404 + t7405 + t7411;
  t7332 = -0.340999127418*t1712*t7313;
  t7338 = t3231*t7286;
  t7339 = -1.*t1493*t2243;
  t7353 = t7332 + t7338 + t7339;
  t7380 = t3918*t7313;
  t7381 = -0.340999127418*t1712*t7286;
  t7392 = -1.*t1493*t2609;
  t7393 = t7380 + t7381 + t7392;
  t7372 = 0.340999127418*t3189*t7353;
  t7399 = t3774*t7393;
  t7427 = t7425*t4434;
  t7430 = t7372 + t7399 + t7427;
  t7438 = t4557*t7425;
  t7444 = t7353*t4624;
  t7445 = t7393*t4787;
  t7453 = t7438 + t7444 + t7445;
  t7471 = t4831*t7353;
  t7472 = 0.340999127418*t3189*t7393;
  t7477 = t7425*t4934;
  t7491 = t7471 + t7472 + t7477;
  t7579 = t374*t376;
  t7583 = -1.*t349*t413*t537;
  t7587 = t7579 + t7583;
  t7595 = t7*t7587;
  t7598 = t5855*t1111;
  t7604 = t7595 + t7598;
  t7610 = -1.*t7587*t1111;
  t7621 = t5890 + t7610;
  t7644 = t7621*t1909;
  t7645 = t7604*t1939;
  t7646 = t7644 + t7645;
  t7638 = t3231*t7604;
  t7639 = -0.340999127418*t1712*t7621;
  t7640 = t7638 + t7639;
  t7630 = -0.340999127418*t1712*t7604;
  t7633 = t3918*t7621;
  t7634 = t7630 + t7633;
  t7637 = t3774*t7634;
  t7641 = 0.340999127418*t3189*t7640;
  t7648 = t7646*t4434;
  t7653 = t7637 + t7641 + t7648;
  t7659 = t4557*t7646;
  t7660 = t7640*t4624;
  t7661 = t7634*t4787;
  t7670 = t7659 + t7660 + t7661;
  t7687 = 0.340999127418*t3189*t7634;
  t7693 = t4831*t7640;
  t7694 = t7646*t4934;
  t7695 = t7687 + t7693 + t7694;
  t7778 = t374*t376*t413;
  t7781 = -1.*t349*t537;
  t7795 = t7778 + t7781;
  t7820 = t7795*t1111;
  t7826 = t2354 + t7820;
  t7830 = t7*t7795;
  t7832 = -1.*t760*t1111;
  t7834 = t7830 + t7832;
  t7869 = t7834*t1909;
  t7890 = t7826*t1939;
  t7897 = t7869 + t7890;
  t7855 = t3231*t7826;
  t7859 = -0.340999127418*t1712*t7834;
  t7862 = t7855 + t7859;
  t7839 = -0.340999127418*t1712*t7826;
  t7840 = t3918*t7834;
  t7841 = t7839 + t7840;
  t7853 = t3774*t7841;
  t7868 = 0.340999127418*t3189*t7862;
  t7898 = t7897*t4434;
  t7899 = t7853 + t7868 + t7898;
  t7905 = t4557*t7897;
  t7906 = t7862*t4624;
  t7907 = t7841*t4787;
  t7915 = t7905 + t7906 + t7907;
  t7918 = 0.340999127418*t3189*t7841;
  t7930 = t4831*t7862;
  t7937 = t7897*t4934;
  t7939 = t7918 + t7930 + t7937;
  t8016 = -1.*t1493*t7*t537;
  t8021 = t1493*t374*t1111;
  t8023 = t8016 + t8021;
  t8025 = t1493*t374*t7;
  t8027 = t1493*t537*t1111;
  t8032 = t8025 + t8027;
  t8087 = t8032*t1909;
  t8089 = t8023*t1939;
  t8092 = t8087 + t8089;
  t8071 = t3231*t8023;
  t8072 = -0.340999127418*t1712*t8032;
  t8082 = t8071 + t8072;
  t8050 = -0.340999127418*t1712*t8023;
  t8060 = t3918*t8032;
  t8065 = t8050 + t8060;
  t8066 = t3774*t8065;
  t8084 = 0.340999127418*t3189*t8082;
  t8099 = t8092*t4434;
  t8100 = t8066 + t8084 + t8099;
  t8118 = t4557*t8092;
  t8120 = t8082*t4624;
  t8121 = t8065*t4787;
  t8122 = t8118 + t8120 + t8121;
  t8126 = 0.340999127418*t3189*t8065;
  t8127 = t4831*t8082;
  t8129 = t8092*t4934;
  t8132 = t8126 + t8127 + t8129;
  t8217 = -1.*t7*t5855;
  t8220 = -1.*t5813*t1111;
  t8221 = t8217 + t8220;
  t8256 = t8221*t1909;
  t8257 = t5986*t1939;
  t8262 = t8256 + t8257;
  t8236 = t3231*t5986;
  t8249 = -0.340999127418*t1712*t8221;
  t8252 = t8236 + t8249;
  t8226 = t3918*t8221;
  t8227 = t6006 + t8226;
  t8230 = t3774*t8227;
  t8253 = 0.340999127418*t3189*t8252;
  t8263 = t8262*t4434;
  t8265 = t8230 + t8253 + t8263;
  t8269 = t4557*t8262;
  t8270 = t8252*t4624;
  t8272 = t8227*t4787;
  t8273 = t8269 + t8270 + t8272;
  t8275 = 0.340999127418*t3189*t8227;
  t8276 = t4831*t8252;
  t8278 = t8262*t4934;
  t8279 = t8275 + t8276 + t8278;
  t8368 = t349*t374;
  t8375 = t376*t413*t537;
  t8378 = t8368 + t8375;
  t8388 = t7*t8378;
  t8391 = -1.*t7795*t1111;
  t8393 = t8388 + t8391;
  t8406 = -1.*t7*t7795;
  t8409 = -1.*t8378*t1111;
  t8411 = t8406 + t8409;
  t8430 = t8411*t1909;
  t8431 = t8393*t1939;
  t8432 = t8430 + t8431;
  t8423 = t3231*t8393;
  t8424 = -0.340999127418*t1712*t8411;
  t8425 = t8423 + t8424;
  t8413 = -0.340999127418*t1712*t8393;
  t8416 = t3918*t8411;
  t8418 = t8413 + t8416;
  t8419 = t3774*t8418;
  t8427 = 0.340999127418*t3189*t8425;
  t8435 = t8432*t4434;
  t8436 = t8419 + t8427 + t8435;
  t8440 = t4557*t8432;
  t8441 = t8425*t4624;
  t8442 = t8418*t4787;
  t8444 = t8440 + t8441 + t8442;
  t8447 = 0.340999127418*t3189*t8418;
  t8448 = t4831*t8425;
  t8450 = t8432*t4934;
  t8453 = t8447 + t8448 + t8450;
  t8519 = t1493*t7*t537;
  t8520 = -1.*t1493*t374*t1111;
  t8522 = t8519 + t8520;
  t8525 = -1.*t1493*t374*t7;
  t8526 = -1.*t1493*t537*t1111;
  t8532 = t8525 + t8526;
  t8550 = t8532*t1909;
  t8552 = t8522*t1939;
  t8554 = t8550 + t8552;
  t8544 = t3231*t8522;
  t8545 = -0.340999127418*t1712*t8532;
  t8548 = t8544 + t8545;
  t8534 = -0.340999127418*t1712*t8522;
  t8537 = t3918*t8532;
  t8540 = t8534 + t8537;
  t8541 = t3774*t8540;
  t8549 = 0.340999127418*t3189*t8548;
  t8555 = t8554*t4434;
  t8557 = t8541 + t8549 + t8555;
  t8564 = t4557*t8554;
  t8568 = t8548*t4624;
  t8589 = t8540*t4787;
  t8591 = t8564 + t8568 + t8589;
  t8594 = 0.340999127418*t3189*t8540;
  t8603 = t4831*t8548;
  t8604 = t8554*t4934;
  t8605 = t8594 + t8603 + t8604;
  t8707 = -0.930418*t1533*t5986;
  t8711 = -0.366501*t1533*t5921;
  t8713 = -1.000000637725*t349*t1493*t1875;
  t8722 = t8707 + t8711 + t8713;
  t8698 = 0.366501*t349*t1493*t1533;
  t8700 = -0.340999127418*t5986*t1875;
  t8701 = -0.134322983001*t5921*t1875;
  t8702 = t8698 + t8700 + t8701;
  t8692 = 0.930418*t349*t1493*t1533;
  t8693 = -0.8656776547239999*t5986*t1875;
  t8694 = -0.340999127418*t5921*t1875;
  t8695 = t8692 + t8693 + t8694;
  t8697 = t3774*t8695;
  t8706 = 0.340999127418*t3189*t8702;
  t8725 = t8722*t4434;
  t8728 = t8697 + t8706 + t8725;
  t8730 = t4557*t8722;
  t8735 = t8702*t4624;
  t8736 = t8695*t4787;
  t8740 = t8730 + t8735 + t8736;
  t8749 = 0.340999127418*t3189*t8695;
  t8750 = t4831*t8702;
  t8751 = t8722*t4934;
  t8758 = t8749 + t8750 + t8751;
  t8664 = -0.0846680539949003*t1533;
  t8666 = -0.04500040093286238*t1875;
  t8667 = t8664 + t8666;
  t8669 = -0.016492681424499736*t1533;
  t8670 = 0.03103092645718495*t1875;
  t8671 = -3.2909349868922137e-7 + t8669 + t8670;
  t8677 = -0.04186915633414423*t1533;
  t8678 = 0.07877668146182712*t1875;
  t8679 = 1.296332362046933e-7 + t8677 + t8678;
  t8844 = t8378*t1111;
  t8845 = t7830 + t8844;
  t8867 = -0.930418*t1533*t8393;
  t8868 = -0.366501*t1533*t8845;
  t8869 = -1.000000637725*t1493*t376*t1875;
  t8872 = t8867 + t8868 + t8869;
  t8862 = 0.366501*t1493*t1533*t376;
  t8863 = -0.340999127418*t8393*t1875;
  t8864 = -0.134322983001*t8845*t1875;
  t8865 = t8862 + t8863 + t8864;
  t8853 = 0.930418*t1493*t1533*t376;
  t8856 = -0.8656776547239999*t8393*t1875;
  t8859 = -0.340999127418*t8845*t1875;
  t8860 = t8853 + t8856 + t8859;
  t8861 = t3774*t8860;
  t8866 = 0.340999127418*t3189*t8865;
  t8875 = t8872*t4434;
  t8876 = t8861 + t8866 + t8875;
  t8879 = t4557*t8872;
  t8881 = t8865*t4624;
  t8888 = t8860*t4787;
  t8890 = t8879 + t8881 + t8888;
  t8892 = 0.340999127418*t3189*t8860;
  t8893 = t4831*t8865;
  t8894 = t8872*t4934;
  t8904 = t8892 + t8893 + t8894;
  t8973 = -0.930418*t1533*t8522;
  t8975 = -0.366501*t1533*t8032;
  t8976 = 1.000000637725*t413*t1875;
  t8979 = t8973 + t8975 + t8976;
  t8968 = -0.366501*t1533*t413;
  t8969 = -0.340999127418*t8522*t1875;
  t8970 = -0.134322983001*t8032*t1875;
  t8971 = t8968 + t8969 + t8970;
  t8960 = -0.930418*t1533*t413;
  t8961 = -0.8656776547239999*t8522*t1875;
  t8965 = -0.340999127418*t8032*t1875;
  t8966 = t8960 + t8961 + t8965;
  t8967 = t3774*t8966;
  t8972 = 0.340999127418*t3189*t8971;
  t8987 = t8979*t4434;
  t8988 = t8967 + t8972 + t8987;
  t8991 = t4557*t8979;
  t8992 = t8971*t4624;
  t8993 = t8966*t4787;
  t8994 = t8991 + t8992 + t8993;
  t9001 = 0.340999127418*t3189*t8966;
  t9002 = t4831*t8971;
  t9003 = t8979*t4934;
  t9006 = t9001 + t9002 + t9003;
  t9071 = -0.930418*t3021*t6017;
  t9072 = 0.366501*t3021*t6057;
  t9075 = -1.000000637725*t6113*t4360;
  t9076 = t9071 + t9072 + t9075;
  t9080 = -0.366501*t3021*t6113;
  t9083 = 0.340999127418*t6017*t4360;
  t9085 = -0.134322983001*t6057*t4360;
  t9090 = t9080 + t9083 + t9085;
  t9097 = 0.930418*t3021*t6113;
  t9100 = -0.8656776547239999*t6017*t4360;
  t9101 = 0.340999127418*t6057*t4360;
  t9102 = t9097 + t9100 + t9101;
  t9047 = -0.04186915633414423*t3021;
  t9048 = -0.14128592423750855*t4360;
  t9049 = 1.296332362046933e-7 + t9047 + t9048;
  t9055 = 0.15185209683981668*t3021;
  t9056 = -0.04500040093286238*t4360;
  t9057 = t9055 + t9056;
  t9063 = 0.016492681424499736*t3021;
  t9066 = 0.055653945343889656*t4360;
  t9067 = 3.2909349868922137e-7 + t9063 + t9066;
  t9148 = t3231*t8845;
  t9149 = t1493*t376*t2243;
  t9152 = t8413 + t9148 + t9149;
  t9176 = t3918*t8393;
  t9180 = -0.340999127418*t1712*t8845;
  t9183 = t1493*t376*t2609;
  t9184 = t9176 + t9180 + t9183;
  t9154 = t1493*t4125*t376;
  t9163 = t8393*t1909;
  t9170 = t8845*t1939;
  t9171 = t9154 + t9163 + t9170;
  t9188 = -0.930418*t3021*t9152;
  t9189 = 0.366501*t3021*t9184;
  t9190 = -1.000000637725*t9171*t4360;
  t9191 = t9188 + t9189 + t9190;
  t9193 = -0.366501*t3021*t9171;
  t9198 = 0.340999127418*t9152*t4360;
  t9199 = -0.134322983001*t9184*t4360;
  t9200 = t9193 + t9198 + t9199;
  t9206 = 0.930418*t3021*t9171;
  t9207 = -0.8656776547239999*t9152*t4360;
  t9209 = 0.340999127418*t9184*t4360;
  t9216 = t9206 + t9207 + t9209;
  t9243 = t3231*t8032;
  t9244 = -1.*t413*t2243;
  t9245 = t8534 + t9243 + t9244;
  t9254 = t3918*t8522;
  t9255 = -1.*t413*t2609;
  t9256 = t9254 + t8072 + t9255;
  t9247 = -1.*t4125*t413;
  t9250 = t8522*t1909;
  t9251 = t8032*t1939;
  t9252 = t9247 + t9250 + t9251;
  t9259 = -0.930418*t3021*t9245;
  t9260 = 0.366501*t3021*t9256;
  t9262 = -1.000000637725*t9252*t4360;
  t9263 = t9259 + t9260 + t9262;
  t9265 = -0.366501*t3021*t9252;
  t9267 = 0.340999127418*t9245*t4360;
  t9268 = -0.134322983001*t9256*t4360;
  t9274 = t9265 + t9267 + t9268;
  t9276 = 0.930418*t3021*t9252;
  t9277 = -0.8656776547239999*t9245*t4360;
  t9281 = 0.340999127418*t9256*t4360;
  t9282 = t9276 + t9277 + t9281;
  t9335 = 0.340999127418*t3189*t9152;
  t9336 = t3774*t9184;
  t9337 = t9171*t4434;
  t9339 = t9335 + t9336 + t9337;
  t9342 = t4557*t9171;
  t9343 = t9152*t4624;
  t9346 = t9184*t4787;
  t9347 = t9342 + t9343 + t9346;
  t9349 = t4831*t9152;
  t9350 = 0.340999127418*t3189*t9184;
  t9351 = t9171*t4934;
  t9358 = t9349 + t9350 + t9351;
  t9318 = 0.014606169134372047*t2784;
  t9319 = 0.08675267452931407*t4522;
  t9320 = -1.5981976069815686e-7 + t9318 + t9319;
  t9323 = -0.23670515095269612*t2784;
  t9325 = 0.039853038461262744*t4522;
  t9326 = t9323 + t9325;
  t9330 = -0.03707996069223323*t2784;
  t9331 = -0.22023473313910558*t4522;
  t9332 = -6.295460977284962e-8 + t9330 + t9331;
  t9385 = 0.340999127418*t3189*t9245;
  t9387 = t3774*t9256;
  t9388 = t9252*t4434;
  t9389 = t9385 + t9387 + t9388;
  t9392 = t4557*t9252;
  t9393 = t9245*t4624;
  t9394 = t9256*t4787;
  t9395 = t9392 + t9393 + t9394;
  t9398 = t4831*t9245;
  t9399 = 0.340999127418*t3189*t9256;
  t9400 = t9252*t4934;
  t9401 = t9398 + t9399 + t9400;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1105*t1382 + t2204*t2346 + t2372*t2706 - 1.*t1493*t2079*t376 - 0.274521*(0.340999127418*t2965*t4453 + t4539*t4801 + t4808*t4996) + 0.197083*(0.340999127418*t2965*t4996 + t4453*t5047 + t4801*t5094) - 0.010507*(t4453*t5241 + t4801*t5264 + t4996*t5282) + t4019*t5438 + t4453*t5520 + t4279*t5600 + t4801*t5660 + t3553*t5743 + t4996*t5767 + t274*t760;
  p_output1[10]=t1493*t2079*t349 + t274*t5813 + t1382*t5855 + t2346*t5921 + t2706*t5986 + t5743*t6017 + t5438*t6057 + t5600*t6113 + t5520*t6135 + t5660*t6168 + t5767*t6210 + 0.197083*(t5047*t6135 + t5094*t6168 + 0.340999127418*t2965*t6210) - 0.274521*(0.340999127418*t2965*t6135 + t4539*t6168 + t4808*t6210) - 0.010507*(t5241*t6135 + t5264*t6168 + t5282*t6210);
  p_output1[11]=0;
  p_output1[12]=t1382*t1493*t349*t374 - 1.*t2079*t349*t413 + t1493*t274*t349*t537 + t2346*t6492 + t2706*t6537 + t5743*t6595 + t5438*t6631 + t5600*t6690 + t5520*t6703 + t5660*t6750 + t5767*t6773 + 0.197083*(t5047*t6703 + t5094*t6750 + 0.340999127418*t2965*t6773) - 0.274521*(0.340999127418*t2965*t6703 + t4539*t6750 + t4808*t6773) - 0.010507*(t5241*t6703 + t5264*t6750 + t5282*t6773);
  p_output1[13]=t1382*t1493*t374*t376 - 1.*t2079*t376*t413 + t1493*t274*t376*t537 + t2346*t6934 + t2706*t7023 + t5743*t7044 + t5438*t7066 + t5600*t7086 + t5520*t7104 + t5660*t7155 + t5767*t7180 + 0.197083*(t5047*t7104 + t5094*t7155 + 0.340999127418*t2965*t7180) - 0.274521*(0.340999127418*t2965*t7104 + t4539*t7155 + t4808*t7180) - 0.010507*(t5241*t7104 + t5264*t7155 + t5282*t7180);
  p_output1[14]=-1.*t1493*t2079 - 1.*t1382*t374*t413 - 1.*t274*t413*t537 + t2346*t7286 + t2706*t7313 + t5743*t7353 + t5438*t7393 + t5600*t7425 + t5520*t7430 + t5660*t7453 + t5767*t7491 + 0.197083*(t5047*t7430 + t5094*t7453 + 0.340999127418*t2965*t7491) - 0.274521*(0.340999127418*t2965*t7430 + t4539*t7453 + t4808*t7491) - 0.010507*(t5241*t7430 + t5264*t7453 + t5282*t7491);
  p_output1[15]=t274*t5855 + t1382*t7587 + t2346*t7604 + t2706*t7621 + t5438*t7634 + t5743*t7640 + t5600*t7646 + t5520*t7653 + t5660*t7670 + t5767*t7695 + 0.197083*(t5047*t7653 + t5094*t7670 + 0.340999127418*t2965*t7695) - 0.274521*(0.340999127418*t2965*t7653 + t4539*t7670 + t4808*t7695) - 0.010507*(t5241*t7653 + t5264*t7670 + t5282*t7695);
  p_output1[16]=t1382*t760 + t274*t7795 + t2346*t7826 + t2706*t7834 + t5438*t7841 + t5743*t7862 + t5600*t7897 + t5520*t7899 + t5660*t7915 + t5767*t7939 + 0.197083*(t5047*t7899 + t5094*t7915 + 0.340999127418*t2965*t7939) - 0.274521*(0.340999127418*t2965*t7899 + t4539*t7915 + t4808*t7939) - 0.010507*(t5241*t7899 + t5264*t7915 + t5282*t7939);
  p_output1[17]=t1493*t274*t374 - 1.*t1382*t1493*t537 + t2346*t8023 + t2706*t8032 + t5438*t8065 + t5743*t8082 + t5600*t8092 + t5520*t8100 + t5660*t8122 + t5767*t8132 + 0.197083*(t5047*t8100 + t5094*t8122 + 0.340999127418*t2965*t8132) - 0.274521*(0.340999127418*t2965*t8100 + t4539*t8122 + t4808*t8132) - 0.010507*(t5241*t8100 + t5264*t8122 + t5282*t8132);
  p_output1[18]=0.091*t1111*t5813 + t2346*t5986 + 0.091*t5855*t7 + t2706*t8221 + t5438*t8227 + t5743*t8252 + t5600*t8262 + t5520*t8265 + t5660*t8273 + t5767*t8279 + 0.197083*(t5047*t8265 + t5094*t8273 + 0.340999127418*t2965*t8279) - 0.274521*(0.340999127418*t2965*t8265 + t4539*t8273 + t4808*t8279) - 0.010507*(t5241*t8265 + t5264*t8273 + t5282*t8279);
  p_output1[19]=0.091*t7*t7795 + 0.091*t1111*t8378 + t2346*t8393 + t2706*t8411 + t5438*t8418 + t5743*t8425 + t5600*t8432 + t5520*t8436 + t5660*t8444 + t5767*t8453 + 0.197083*(t5047*t8436 + t5094*t8444 + 0.340999127418*t2965*t8453) - 0.274521*(0.340999127418*t2965*t8436 + t4539*t8444 + t4808*t8453) - 0.010507*(t5241*t8436 + t5264*t8444 + t5282*t8453);
  p_output1[20]=0.091*t1111*t1493*t537 + 0.091*t1493*t374*t7 + t2346*t8522 + t2706*t8532 + t5438*t8540 + t5743*t8548 + t5600*t8554 + t5520*t8557 + t5660*t8591 + t5767*t8605 + 0.197083*(t5047*t8557 + t5094*t8591 + 0.340999127418*t2965*t8605) - 0.274521*(0.340999127418*t2965*t8557 + t4539*t8591 + t4808*t8605) - 0.010507*(t5241*t8557 + t5264*t8591 + t5282*t8605);
  p_output1[21]=t1493*t349*t8667 + t5921*t8671 + t5986*t8679 + t5438*t8695 + t5743*t8702 + t5600*t8722 + t5520*t8728 + t5660*t8740 + t5767*t8758 + 0.197083*(t5047*t8728 + t5094*t8740 + 0.340999127418*t2965*t8758) - 0.274521*(0.340999127418*t2965*t8728 + t4539*t8740 + t4808*t8758) - 0.010507*(t5241*t8728 + t5264*t8740 + t5282*t8758);
  p_output1[22]=t1493*t376*t8667 + t8393*t8679 + t8671*t8845 + t5438*t8860 + t5743*t8865 + t5600*t8872 + t5520*t8876 + t5660*t8890 + t5767*t8904 + 0.197083*(t5047*t8876 + t5094*t8890 + 0.340999127418*t2965*t8904) - 0.274521*(0.340999127418*t2965*t8876 + t4539*t8890 + t4808*t8904) - 0.010507*(t5241*t8876 + t5264*t8890 + t5282*t8904);
  p_output1[23]=-1.*t413*t8667 + t8032*t8671 + t8522*t8679 + t5438*t8966 + t5743*t8971 + t5600*t8979 + t5520*t8988 + t5660*t8994 + t5767*t9006 + 0.197083*(t5047*t8988 + t5094*t8994 + 0.340999127418*t2965*t9006) - 0.274521*(0.340999127418*t2965*t8988 + t4539*t8994 + t4808*t9006) - 0.010507*(t5241*t8988 + t5264*t8994 + t5282*t9006);
  p_output1[24]=t6017*t9049 + t6113*t9057 + t6057*t9067 + t5660*t9076 + t5520*t9090 + t5767*t9102 + 0.197083*(t5094*t9076 + t5047*t9090 + 0.340999127418*t2965*t9102) - 0.274521*(t4539*t9076 + 0.340999127418*t2965*t9090 + t4808*t9102) - 0.010507*(t5264*t9076 + t5241*t9090 + t5282*t9102);
  p_output1[25]=t9049*t9152 + t9057*t9171 + t9067*t9184 + t5660*t9191 + t5520*t9200 + t5767*t9216 + 0.197083*(t5094*t9191 + t5047*t9200 + 0.340999127418*t2965*t9216) - 0.274521*(t4539*t9191 + 0.340999127418*t2965*t9200 + t4808*t9216) - 0.010507*(t5264*t9191 + t5241*t9200 + t5282*t9216);
  p_output1[26]=t9049*t9245 + t9057*t9252 + t9067*t9256 + t5660*t9263 + t5520*t9274 + t5767*t9282 + 0.197083*(t5094*t9263 + t5047*t9274 + 0.340999127418*t2965*t9282) - 0.274521*(t4539*t9263 + 0.340999127418*t2965*t9274 + t4808*t9282) - 0.010507*(t5264*t9263 + t5241*t9274 + t5282*t9282);
  p_output1[27]=-0.010507*(-0.366501*t2784*t6135 - 1.000000637725*t4522*t6168 + 0.930418*t2784*t6210) - 0.274521*(0.340999127418*t4522*t6135 - 0.930418*t2784*t6168 - 0.8656776547239999*t4522*t6210) + 0.197083*(-0.134322983001*t4522*t6135 + 0.366501*t2784*t6168 + 0.340999127418*t4522*t6210) + t6135*t9320 + t6168*t9326 + t6210*t9332;
  p_output1[28]=t9320*t9339 + t9326*t9347 + t9332*t9358 - 0.010507*(-0.366501*t2784*t9339 - 1.000000637725*t4522*t9347 + 0.930418*t2784*t9358) - 0.274521*(0.340999127418*t4522*t9339 - 0.930418*t2784*t9347 - 0.8656776547239999*t4522*t9358) + 0.197083*(-0.134322983001*t4522*t9339 + 0.366501*t2784*t9347 + 0.340999127418*t4522*t9358);
  p_output1[29]=t9320*t9389 + t9326*t9395 + t9332*t9401 - 0.010507*(-0.366501*t2784*t9389 - 1.000000637725*t4522*t9395 + 0.930418*t2784*t9401) - 0.274521*(0.340999127418*t4522*t9389 - 0.930418*t2784*t9395 - 0.8656776547239999*t4522*t9401) + 0.197083*(-0.134322983001*t4522*t9389 + 0.366501*t2784*t9395 + 0.340999127418*t4522*t9401);
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jp_left_knee_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
