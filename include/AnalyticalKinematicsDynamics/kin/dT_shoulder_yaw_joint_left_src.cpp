/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:44:00 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dT_shoulder_yaw_joint_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t503;
  double t1083;
  double t810;
  double t1075;
  double t1080;
  double t1192;
  double t1091;
  double t1125;
  double t1205;
  double t9;
  double t247;
  double t297;
  double t387;
  double t518;
  double t724;
  double t1137;
  double t1209;
  double t1275;
  double t1299;
  double t1366;
  double t1372;
  double t628;
  double t636;
  double t804;
  double t1279;
  double t1286;
  double t1293;
  double t1376;
  double t1383;
  double t1453;
  double t1462;
  double t1525;
  double t1527;
  double t1531;
  double t1566;
  double t1585;
  double t1589;
  double t372;
  double t1603;
  double t1624;
  double t1642;
  double t1663;
  double t1671;
  double t1685;
  double t1705;
  double t1706;
  double t1729;
  double t1771;
  double t1877;
  double t1417;
  double t1420;
  double t1450;
  double t2319;
  double t2314;
  double t2345;
  double t2375;
  double t2401;
  double t2454;
  double t2457;
  double t474;
  double t500;
  double t2393;
  double t2462;
  double t2470;
  double t2487;
  double t2499;
  double t2519;
  double t1597;
  double t1599;
  double t1880;
  double t1899;
  double t2486;
  double t2539;
  double t2540;
  double t1840;
  double t1844;
  double t2554;
  double t2558;
  double t2562;
  double t1966;
  double t2077;
  double t2628;
  double t2632;
  double t2662;
  double t2172;
  double t2189;
  double t2137;
  double t2141;
  double t2237;
  double t2243;
  double t2866;
  double t2870;
  double t2874;
  double t2860;
  double t2907;
  double t2923;
  double t2957;
  double t2959;
  double t2960;
  double t2929;
  double t2967;
  double t2968;
  double t2984;
  double t3000;
  double t3018;
  double t3032;
  double t3034;
  double t3040;
  double t3162;
  double t3163;
  double t3202;
  double t3147;
  double t3176;
  double t3190;
  double t3214;
  double t3223;
  double t3224;
  double t3229;
  double t3258;
  double t3266;
  double t3272;
  double t3275;
  double t3247;
  double t3378;
  double t3478;
  double t3489;
  double t3501;
  double t3504;
  double t3523;
  double t3528;
  double t3530;
  double t3531;
  double t3541;
  double t3550;
  double t3553;
  double t3556;
  double t3700;
  double t3702;
  double t3705;
  double t3712;
  double t3731;
  double t3734;
  double t3709;
  double t3735;
  double t3745;
  double t3764;
  double t3769;
  double t3771;
  double t3699;
  double t3750;
  double t3773;
  double t3774;
  double t3783;
  double t3791;
  double t3802;
  double t3803;
  double t3812;
  double t3813;
  double t3822;
  double t3825;
  double t3996;
  double t4011;
  double t4027;
  double t4042;
  double t4054;
  double t4055;
  double t3994;
  double t4030;
  double t4071;
  double t4074;
  double t4081;
  double t4084;
  double t4092;
  double t4093;
  double t4122;
  double t4126;
  double t4128;
  double t4132;
  double t4314;
  double t4317;
  double t4319;
  double t4322;
  double t4337;
  double t4343;
  double t4350;
  double t4351;
  double t4339;
  double t4354;
  double t4355;
  double t4363;
  double t4366;
  double t4368;
  double t4374;
  double t4375;
  double t4390;
  double t4449;
  double t4452;
  double t4458;
  double t4448;
  double t4459;
  double t4481;
  double t4490;
  double t4491;
  double t4498;
  double t4484;
  double t4502;
  double t4509;
  double t4518;
  double t4519;
  double t4520;
  double t4536;
  double t4538;
  double t4544;
  double t3201;
  double t3207;
  double t4601;
  double t4604;
  double t3245;
  double t3257;
  double t3333;
  double t3336;
  double t4600;
  double t4609;
  double t4610;
  double t4613;
  double t4614;
  double t4617;
  double t4620;
  double t3361;
  double t3386;
  double t4623;
  double t4624;
  double t4629;
  double t4630;
  double t3413;
  double t3415;
  double t3431;
  double t3442;
  double t4666;
  double t4668;
  double t4675;
  double t4676;
  double t4688;
  double t4689;
  double t4698;
  double t4705;
  double t4715;
  double t4727;
  double t4730;
  double t4732;
  double t4876;
  double t4880;
  double t4881;
  double t4925;
  double t4929;
  double t4950;
  double t4885;
  double t4966;
  double t4986;
  double t5010;
  double t5011;
  double t5019;
  double t5051;
  double t5081;
  double t5092;
  double t5251;
  double t5255;
  double t5256;
  double t5247;
  double t5273;
  double t5274;
  double t5283;
  double t5286;
  double t5300;
  double t5317;
  double t5348;
  double t5350;
  double t5351;
  double t5354;
  double t5442;
  double t5455;
  double t5459;
  double t5465;
  double t5470;
  double t5472;
  double t5484;
  double t5485;
  double t5501;
  double t5502;
  double t5503;
  double t5595;
  double t5604;
  double t5614;
  double t5617;
  double t5625;
  double t5667;
  double t5671;
  double t5674;
  double t5683;
  double t5688;
  double t5689;
  double t5701;
  double t5782;
  double t5793;
  double t5799;
  double t5817;
  double t5818;
  double t5859;
  double t5775;
  double t5808;
  double t5865;
  double t5866;
  double t5871;
  double t5872;
  double t5883;
  double t5895;
  double t5907;
  double t5916;
  double t5923;
  double t5924;
  double t1862;
  double t1916;
  double t2084;
  double t2086;
  double t2154;
  double t2217;
  double t2257;
  double t2263;
  double t2690;
  double t2695;
  double t2701;
  double t2708;
  double t2718;
  double t2721;
  double t2724;
  double t2760;
  double t3078;
  double t3080;
  double t3082;
  double t3085;
  double t3102;
  double t3106;
  double t3109;
  double t3114;
  double t3191;
  double t3241;
  double t3280;
  double t3294;
  double t3344;
  double t3360;
  double t3387;
  double t3396;
  double t3512;
  double t3538;
  double t3557;
  double t3560;
  double t3573;
  double t3595;
  double t3598;
  double t3603;
  double t3855;
  double t3856;
  double t3885;
  double t3889;
  double t3903;
  double t3909;
  double t3911;
  double t3925;
  double t4161;
  double t4167;
  double t4168;
  double t4184;
  double t4189;
  double t4192;
  double t4193;
  double t4196;
  double t4245;
  double t4254;
  double t4269;
  double t4280;
  double t4285;
  double t4296;
  double t4302;
  double t4305;
  double t4403;
  double t4410;
  double t4413;
  double t4416;
  double t4421;
  double t4424;
  double t4425;
  double t4428;
  double t4561;
  double t4573;
  double t4574;
  double t4576;
  double t4584;
  double t4585;
  double t4588;
  double t4589;
  double t4611;
  double t4622;
  double t4634;
  double t4636;
  double t4643;
  double t4644;
  double t4645;
  double t4648;
  double t4681;
  double t4712;
  double t4746;
  double t4750;
  double t4760;
  double t4768;
  double t4776;
  double t4784;
  double t5116;
  double t5121;
  double t5128;
  double t5135;
  double t5194;
  double t5197;
  double t5208;
  double t5209;
  double t5279;
  double t5320;
  double t5360;
  double t5367;
  double t5369;
  double t5380;
  double t5382;
  double t5396;
  double t5535;
  double t5551;
  double t5553;
  double t5556;
  double t5562;
  double t5567;
  double t5569;
  double t5582;
  double t5620;
  double t5677;
  double t5709;
  double t5710;
  double t5721;
  double t5727;
  double t5735;
  double t5738;
  double t5955;
  double t5959;
  double t5962;
  double t5964;
  double t5967;
  double t5971;
  double t5972;
  double t5973;
  double t1384;
  double t1590;
  double t1806;
  double t1807;
  double t1835;
  double t2541;
  double t2565;
  double t2669;
  double t2682;
  double t2689;
  double t2971;
  double t3020;
  double t3047;
  double t3059;
  double t3073;
  double t3422;
  double t3449;
  double t3454;
  double t3456;
  double t3461;
  double t3617;
  double t3621;
  double t3624;
  double t3625;
  double t3647;
  double t3778;
  double t3810;
  double t3831;
  double t3834;
  double t3848;
  double t4077;
  double t4106;
  double t4135;
  double t4145;
  double t4152;
  double t4216;
  double t4218;
  double t4220;
  double t4234;
  double t4240;
  double t4357;
  double t4371;
  double t4391;
  double t4393;
  double t4402;
  double t4517;
  double t4530;
  double t4555;
  double t4559;
  double t4560;
  double t4651;
  double t4652;
  double t4655;
  double t4657;
  double t4660;
  double t4796;
  double t4799;
  double t4803;
  double t4831;
  double t4847;
  double t4992;
  double t5047;
  double t5099;
  double t5100;
  double t5108;
  double t5408;
  double t5411;
  double t5412;
  double t5416;
  double t5421;
  double t5474;
  double t5495;
  double t5512;
  double t5531;
  double t5533;
  double t5751;
  double t5755;
  double t5762;
  double t5766;
  double t5772;
  double t5869;
  double t5902;
  double t5928;
  double t5931;
  double t5939;
  double t6716;
  double t6717;
  double t6826;
  double t6852;
  double t6833;
  double t6750;
  double t6751;
  double t6755;
  double t6718;
  double t6721;
  double t6724;
  double t6776;
  double t6778;
  double t6801;
  double t6810;
  double t6758;
  double t6762;
  double t6763;
  double t6765;
  double t6843;
  double t6848;
  double t6853;
  double t6854;
  double t6857;
  double t6858;
  double t6859;
  double t6815;
  double t6822;
  double t6827;
  double t6829;
  double t6834;
  double t6838;
  double t6839;
  double t6866;
  double t6867;
  double t6882;
  double t6889;
  double t6895;
  double t6898;
  double t6899;
  double t7004;
  double t7036;
  double t7009;
  double t6731;
  double t6739;
  double t6742;
  double t6744;
  double t6939;
  double t6943;
  double t6945;
  double t6950;
  double t6957;
  double t7007;
  double t7008;
  double t7016;
  double t7022;
  double t7023;
  double t7031;
  double t7037;
  double t7039;
  double t7045;
  double t7046;
  double t7057;
  double t7060;
  double t7064;
  double t7065;
  double t7068;
  double t7069;
  double t7070;
  double t7072;
  double t7100;
  double t7103;
  double t7106;
  double t7116;
  double t7129;
  double t7135;
  double t7147;
  double t7148;
  double t7151;
  t503 = Cos(var1[3]);
  t1083 = Cos(var1[4]);
  t810 = Cos(var1[14]);
  t1075 = -1.*t810;
  t1080 = 1. + t1075;
  t1192 = Cos(var1[13]);
  t1091 = Cos(var1[5]);
  t1125 = Sin(var1[13]);
  t1205 = Sin(var1[5]);
  t9 = Cos(var1[15]);
  t247 = -1.*t9;
  t297 = 1. + t247;
  t387 = Sin(var1[15]);
  t518 = Sin(var1[14]);
  t724 = Sin(var1[4]);
  t1137 = -1.*t503*t1083*t1091*t1125;
  t1209 = t1192*t503*t1083*t1205;
  t1275 = t1137 + t1209;
  t1299 = t1192*t503*t1083*t1091;
  t1366 = t503*t1083*t1125*t1205;
  t1372 = t1299 + t1366;
  t628 = 0.994522*t518;
  t636 = 0. + t628;
  t804 = -1.*t503*t636*t724;
  t1279 = 0.103955395616*t1080*t1275;
  t1286 = -0.9890740084840001*t1080;
  t1293 = 1. + t1286;
  t1376 = t1293*t1372;
  t1383 = t804 + t1279 + t1376;
  t1453 = -0.104528*t518;
  t1462 = 0. + t1453;
  t1525 = -1.*t503*t1462*t724;
  t1527 = -0.010926102783999999*t1080;
  t1531 = 1. + t1527;
  t1566 = t1531*t1275;
  t1585 = 0.103955395616*t1080*t1372;
  t1589 = t1525 + t1566 + t1585;
  t372 = -0.49726168403800003*t297;
  t1603 = -1.0000001112680001*t1080;
  t1624 = 1. + t1603;
  t1642 = -1.*t1624*t503*t724;
  t1663 = 0.104528*t518;
  t1671 = 0. + t1663;
  t1685 = t1671*t1275;
  t1705 = -0.994522*t518;
  t1706 = 0. + t1705;
  t1729 = t1706*t1372;
  t1771 = t1642 + t1685 + t1729;
  t1877 = -0.051978134642000004*t297;
  t1417 = 0.05226439969100001*t297;
  t1420 = -0.703234*t387;
  t1450 = t1417 + t1420;
  t2319 = Sin(var1[3]);
  t2314 = t503*t1091*t724;
  t2345 = t2319*t1205;
  t2375 = t2314 + t2345;
  t2401 = t1091*t2319;
  t2454 = -1.*t503*t724*t1205;
  t2457 = t2401 + t2454;
  t474 = -0.073913*t387;
  t500 = t372 + t474;
  t2393 = t1125*t2375;
  t2462 = t1192*t2457;
  t2470 = t2393 + t2462;
  t2487 = t1192*t2375;
  t2499 = -1.*t1125*t2457;
  t2519 = t2487 + t2499;
  t1597 = -0.500001190325*t297;
  t1599 = 1. + t1597;
  t1880 = -0.707107*t387;
  t1899 = t1877 + t1880;
  t2486 = 0.103955395616*t1080*t2470;
  t2539 = t1531*t2519;
  t2540 = t2486 + t2539;
  t1840 = -0.5054634410180001*t297;
  t1844 = 1. + t1840;
  t2554 = t1293*t2470;
  t2558 = 0.103955395616*t1080*t2519;
  t2562 = t2554 + t2558;
  t1966 = 0.073913*t387;
  t2077 = t372 + t1966;
  t2628 = t1706*t2470;
  t2632 = t1671*t2519;
  t2662 = t2628 + t2632;
  t2172 = -0.9945383682050002*t297;
  t2189 = 1. + t2172;
  t2137 = 0.707107*t387;
  t2141 = t1877 + t2137;
  t2237 = 0.703234*t387;
  t2243 = t1417 + t2237;
  t2866 = -1.*t1091*t2319;
  t2870 = t503*t724*t1205;
  t2874 = t2866 + t2870;
  t2860 = -1.*t1125*t2375;
  t2907 = t1192*t2874;
  t2923 = t2860 + t2907;
  t2957 = -1.*t1192*t2375;
  t2959 = -1.*t1125*t2874;
  t2960 = t2957 + t2959;
  t2929 = 0.103955395616*t1080*t2923;
  t2967 = t1531*t2960;
  t2968 = t2929 + t2967;
  t2984 = t1293*t2923;
  t3000 = 0.103955395616*t1080*t2960;
  t3018 = t2984 + t3000;
  t3032 = t1706*t2923;
  t3034 = t1671*t2960;
  t3040 = t3032 + t3034;
  t3162 = t1125*t2874;
  t3163 = t2487 + t3162;
  t3202 = -0.051978134642000004*t387;
  t3147 = t503*t1083*t636;
  t3176 = t1293*t3163;
  t3190 = t3147 + t2929 + t3176;
  t3214 = t503*t1083*t1462;
  t3223 = t1531*t2923;
  t3224 = 0.103955395616*t1080*t3163;
  t3229 = t3214 + t3223 + t3224;
  t3258 = t1624*t503*t1083;
  t3266 = t1671*t2923;
  t3272 = t1706*t3163;
  t3275 = t3258 + t3266 + t3272;
  t3247 = -0.49726168403800003*t387;
  t3378 = 0.05226439969100001*t387;
  t3478 = -1.0000001112680001*t503*t1083*t518;
  t3489 = 0.104528*t810*t2923;
  t3501 = -0.994522*t810*t3163;
  t3504 = t3478 + t3489 + t3501;
  t3523 = 0.994522*t810*t503*t1083;
  t3528 = 0.103955395616*t518*t2923;
  t3530 = -0.9890740084840001*t518*t3163;
  t3531 = t3523 + t3528 + t3530;
  t3541 = -0.104528*t810*t503*t1083;
  t3550 = -0.010926102783999999*t518*t2923;
  t3553 = 0.103955395616*t518*t3163;
  t3556 = t3541 + t3550 + t3553;
  t3700 = -1.*t1091*t2319*t724;
  t3702 = t503*t1205;
  t3705 = t3700 + t3702;
  t3712 = -1.*t503*t1091;
  t3731 = -1.*t2319*t724*t1205;
  t3734 = t3712 + t3731;
  t3709 = -1.*t1125*t3705;
  t3735 = t1192*t3734;
  t3745 = t3709 + t3735;
  t3764 = t1192*t3705;
  t3769 = t1125*t3734;
  t3771 = t3764 + t3769;
  t3699 = -1.*t1083*t636*t2319;
  t3750 = 0.103955395616*t1080*t3745;
  t3773 = t1293*t3771;
  t3774 = t3699 + t3750 + t3773;
  t3783 = -1.*t1083*t1462*t2319;
  t3791 = t1531*t3745;
  t3802 = 0.103955395616*t1080*t3771;
  t3803 = t3783 + t3791 + t3802;
  t3812 = -1.*t1624*t1083*t2319;
  t3813 = t1671*t3745;
  t3822 = t1706*t3771;
  t3825 = t3812 + t3813 + t3822;
  t3996 = -1.*t1083*t1091*t1125*t2319;
  t4011 = t1192*t1083*t2319*t1205;
  t4027 = t3996 + t4011;
  t4042 = t1192*t1083*t1091*t2319;
  t4054 = t1083*t1125*t2319*t1205;
  t4055 = t4042 + t4054;
  t3994 = -1.*t636*t2319*t724;
  t4030 = 0.103955395616*t1080*t4027;
  t4071 = t1293*t4055;
  t4074 = t3994 + t4030 + t4071;
  t4081 = -1.*t1462*t2319*t724;
  t4084 = t1531*t4027;
  t4092 = 0.103955395616*t1080*t4055;
  t4093 = t4081 + t4084 + t4092;
  t4122 = -1.*t1624*t2319*t724;
  t4126 = t1671*t4027;
  t4128 = t1706*t4055;
  t4132 = t4122 + t4126 + t4128;
  t4314 = t1091*t2319*t724;
  t4317 = -1.*t503*t1205;
  t4319 = t4314 + t4317;
  t4322 = t1125*t4319;
  t4337 = t4322 + t3735;
  t4343 = t1192*t4319;
  t4350 = -1.*t1125*t3734;
  t4351 = t4343 + t4350;
  t4339 = 0.103955395616*t1080*t4337;
  t4354 = t1531*t4351;
  t4355 = t4339 + t4354;
  t4363 = t1293*t4337;
  t4366 = 0.103955395616*t1080*t4351;
  t4368 = t4363 + t4366;
  t4374 = t1706*t4337;
  t4375 = t1671*t4351;
  t4390 = t4374 + t4375;
  t4449 = t503*t1091;
  t4452 = t2319*t724*t1205;
  t4458 = t4449 + t4452;
  t4448 = -1.*t1125*t4319;
  t4459 = t1192*t4458;
  t4481 = t4448 + t4459;
  t4490 = -1.*t1192*t4319;
  t4491 = -1.*t1125*t4458;
  t4498 = t4490 + t4491;
  t4484 = 0.103955395616*t1080*t4481;
  t4502 = t1531*t4498;
  t4509 = t4484 + t4502;
  t4518 = t1293*t4481;
  t4519 = 0.103955395616*t1080*t4498;
  t4520 = t4518 + t4519;
  t4536 = t1706*t4481;
  t4538 = t1671*t4498;
  t4544 = t4536 + t4538;
  t3201 = -0.707107*t9;
  t3207 = t3201 + t3202;
  t4601 = t1125*t4458;
  t4604 = t4343 + t4601;
  t3245 = 0.073913*t9;
  t3257 = t3245 + t3247;
  t3333 = 0.707107*t9;
  t3336 = t3333 + t3202;
  t4600 = t1083*t636*t2319;
  t4609 = t1293*t4604;
  t4610 = t4600 + t4484 + t4609;
  t4613 = t1083*t1462*t2319;
  t4614 = t1531*t4481;
  t4617 = 0.103955395616*t1080*t4604;
  t4620 = t4613 + t4614 + t4617;
  t3361 = 0.703234*t9;
  t3386 = t3361 + t3378;
  t4623 = t1624*t1083*t2319;
  t4624 = t1671*t4481;
  t4629 = t1706*t4604;
  t4630 = t4623 + t4624 + t4629;
  t3413 = -0.073913*t9;
  t3415 = t3413 + t3247;
  t3431 = -0.703234*t9;
  t3442 = t3431 + t3378;
  t4666 = -1.0000001112680001*t1083*t518*t2319;
  t4668 = 0.104528*t810*t4481;
  t4675 = -0.994522*t810*t4604;
  t4676 = t4666 + t4668 + t4675;
  t4688 = 0.994522*t810*t1083*t2319;
  t4689 = 0.103955395616*t518*t4481;
  t4698 = -0.9890740084840001*t518*t4604;
  t4705 = t4688 + t4689 + t4698;
  t4715 = -0.104528*t810*t1083*t2319;
  t4727 = -0.010926102783999999*t518*t4481;
  t4730 = 0.103955395616*t518*t4604;
  t4732 = t4715 + t4727 + t4730;
  t4876 = -1.*t1083*t1091*t1125;
  t4880 = t1192*t1083*t1205;
  t4881 = t4876 + t4880;
  t4925 = -1.*t1192*t1083*t1091;
  t4929 = -1.*t1083*t1125*t1205;
  t4950 = t4925 + t4929;
  t4885 = 0.103955395616*t1080*t4881;
  t4966 = t1531*t4950;
  t4986 = t4885 + t4966;
  t5010 = t1293*t4881;
  t5011 = 0.103955395616*t1080*t4950;
  t5019 = t5010 + t5011;
  t5051 = t1706*t4881;
  t5081 = t1671*t4950;
  t5092 = t5051 + t5081;
  t5251 = t1192*t1083*t1091;
  t5255 = t1083*t1125*t1205;
  t5256 = t5251 + t5255;
  t5247 = -1.*t636*t724;
  t5273 = t1293*t5256;
  t5274 = t5247 + t4885 + t5273;
  t5283 = -1.*t1462*t724;
  t5286 = t1531*t4881;
  t5300 = 0.103955395616*t1080*t5256;
  t5317 = t5283 + t5286 + t5300;
  t5348 = -1.*t1624*t724;
  t5350 = t1671*t4881;
  t5351 = t1706*t5256;
  t5354 = t5348 + t5350 + t5351;
  t5442 = t1083*t1091*t1125;
  t5455 = -1.*t1192*t1083*t1205;
  t5459 = t5442 + t5455;
  t5465 = 0.103955395616*t1080*t5459;
  t5470 = t1531*t5256;
  t5472 = t5465 + t5470;
  t5484 = t1293*t5459;
  t5485 = t5484 + t5300;
  t5501 = t1706*t5459;
  t5502 = t1671*t5256;
  t5503 = t5501 + t5502;
  t5595 = 1.0000001112680001*t518*t724;
  t5604 = 0.104528*t810*t4881;
  t5614 = -0.994522*t810*t5256;
  t5617 = t5595 + t5604 + t5614;
  t5625 = -0.994522*t810*t724;
  t5667 = 0.103955395616*t518*t4881;
  t5671 = -0.9890740084840001*t518*t5256;
  t5674 = t5625 + t5667 + t5671;
  t5683 = 0.104528*t810*t724;
  t5688 = -0.010926102783999999*t518*t4881;
  t5689 = 0.103955395616*t518*t5256;
  t5701 = t5683 + t5688 + t5689;
  t5782 = t1091*t1125*t724;
  t5793 = -1.*t1192*t724*t1205;
  t5799 = t5782 + t5793;
  t5817 = -1.*t1192*t1091*t724;
  t5818 = -1.*t1125*t724*t1205;
  t5859 = t5817 + t5818;
  t5775 = -1.*t1083*t636;
  t5808 = 0.103955395616*t1080*t5799;
  t5865 = t1293*t5859;
  t5866 = t5775 + t5808 + t5865;
  t5871 = -1.*t1083*t1462;
  t5872 = t1531*t5799;
  t5883 = 0.103955395616*t1080*t5859;
  t5895 = t5871 + t5872 + t5883;
  t5907 = -1.*t1624*t1083;
  t5916 = t1671*t5799;
  t5923 = t1706*t5859;
  t5924 = t5907 + t5916 + t5923;
  t1862 = t1844*t1383;
  t1916 = t1899*t1589;
  t2084 = t2077*t1771;
  t2086 = t1862 + t1916 + t2084;
  t2154 = t2141*t1383;
  t2217 = t2189*t1589;
  t2257 = t2243*t1771;
  t2263 = t2154 + t2217 + t2257;
  t2690 = t1899*t2540;
  t2695 = t1844*t2562;
  t2701 = t2077*t2662;
  t2708 = t2690 + t2695 + t2701;
  t2718 = t2189*t2540;
  t2721 = t2141*t2562;
  t2724 = t2243*t2662;
  t2760 = t2718 + t2721 + t2724;
  t3078 = t1899*t2968;
  t3080 = t1844*t3018;
  t3082 = t2077*t3040;
  t3085 = t3078 + t3080 + t3082;
  t3102 = t2189*t2968;
  t3106 = t2141*t3018;
  t3109 = t2243*t3040;
  t3114 = t3102 + t3106 + t3109;
  t3191 = -0.5054634410180001*t387*t3190;
  t3241 = t3207*t3229;
  t3280 = t3257*t3275;
  t3294 = t3191 + t3241 + t3280;
  t3344 = t3336*t3190;
  t3360 = -0.9945383682050002*t387*t3229;
  t3387 = t3386*t3275;
  t3396 = t3344 + t3360 + t3387;
  t3512 = t2243*t3504;
  t3538 = t2141*t3531;
  t3557 = t2189*t3556;
  t3560 = t3512 + t3538 + t3557;
  t3573 = t2077*t3504;
  t3595 = t1844*t3531;
  t3598 = t1899*t3556;
  t3603 = t3573 + t3595 + t3598;
  t3855 = t1844*t3774;
  t3856 = t1899*t3803;
  t3885 = t2077*t3825;
  t3889 = t3855 + t3856 + t3885;
  t3903 = t2141*t3774;
  t3909 = t2189*t3803;
  t3911 = t2243*t3825;
  t3925 = t3903 + t3909 + t3911;
  t4161 = t1844*t4074;
  t4167 = t1899*t4093;
  t4168 = t2077*t4132;
  t4184 = t4161 + t4167 + t4168;
  t4189 = t2141*t4074;
  t4192 = t2189*t4093;
  t4193 = t2243*t4132;
  t4196 = t4189 + t4192 + t4193;
  t4245 = t1844*t3190;
  t4254 = t1899*t3229;
  t4269 = t2077*t3275;
  t4280 = t4245 + t4254 + t4269;
  t4285 = t2141*t3190;
  t4296 = t2189*t3229;
  t4302 = t2243*t3275;
  t4305 = t4285 + t4296 + t4302;
  t4403 = t1899*t4355;
  t4410 = t1844*t4368;
  t4413 = t2077*t4390;
  t4416 = t4403 + t4410 + t4413;
  t4421 = t2189*t4355;
  t4424 = t2141*t4368;
  t4425 = t2243*t4390;
  t4428 = t4421 + t4424 + t4425;
  t4561 = t1899*t4509;
  t4573 = t1844*t4520;
  t4574 = t2077*t4544;
  t4576 = t4561 + t4573 + t4574;
  t4584 = t2189*t4509;
  t4585 = t2141*t4520;
  t4588 = t2243*t4544;
  t4589 = t4584 + t4585 + t4588;
  t4611 = -0.5054634410180001*t387*t4610;
  t4622 = t3207*t4620;
  t4634 = t3257*t4630;
  t4636 = t4611 + t4622 + t4634;
  t4643 = t3336*t4610;
  t4644 = -0.9945383682050002*t387*t4620;
  t4645 = t3386*t4630;
  t4648 = t4643 + t4644 + t4645;
  t4681 = t2243*t4676;
  t4712 = t2141*t4705;
  t4746 = t2189*t4732;
  t4750 = t4681 + t4712 + t4746;
  t4760 = t2077*t4676;
  t4768 = t1844*t4705;
  t4776 = t1899*t4732;
  t4784 = t4760 + t4768 + t4776;
  t5116 = t1899*t4986;
  t5121 = t1844*t5019;
  t5128 = t2077*t5092;
  t5135 = t5116 + t5121 + t5128;
  t5194 = t2189*t4986;
  t5197 = t2141*t5019;
  t5208 = t2243*t5092;
  t5209 = t5194 + t5197 + t5208;
  t5279 = -0.5054634410180001*t387*t5274;
  t5320 = t3207*t5317;
  t5360 = t3257*t5354;
  t5367 = t5279 + t5320 + t5360;
  t5369 = t3336*t5274;
  t5380 = -0.9945383682050002*t387*t5317;
  t5382 = t3386*t5354;
  t5396 = t5369 + t5380 + t5382;
  t5535 = t1899*t5472;
  t5551 = t1844*t5485;
  t5553 = t2077*t5503;
  t5556 = t5535 + t5551 + t5553;
  t5562 = t2189*t5472;
  t5567 = t2141*t5485;
  t5569 = t2243*t5503;
  t5582 = t5562 + t5567 + t5569;
  t5620 = t2243*t5617;
  t5677 = t2141*t5674;
  t5709 = t2189*t5701;
  t5710 = t5620 + t5677 + t5709;
  t5721 = t2077*t5617;
  t5727 = t1844*t5674;
  t5735 = t1899*t5701;
  t5738 = t5721 + t5727 + t5735;
  t5955 = t1844*t5866;
  t5959 = t1899*t5895;
  t5962 = t2077*t5924;
  t5964 = t5955 + t5959 + t5962;
  t5967 = t2141*t5866;
  t5971 = t2189*t5895;
  t5972 = t2243*t5924;
  t5973 = t5967 + t5971 + t5972;
  t1384 = t500*t1383;
  t1590 = t1450*t1589;
  t1806 = t1599*t1771;
  t1807 = t1384 + t1590 + t1806;
  t1835 = 0.707107*t1807;
  t2541 = t1450*t2540;
  t2565 = t500*t2562;
  t2669 = t1599*t2662;
  t2682 = t2541 + t2565 + t2669;
  t2689 = 0.707107*t2682;
  t2971 = t1450*t2968;
  t3020 = t500*t3018;
  t3047 = t1599*t3040;
  t3059 = t2971 + t3020 + t3047;
  t3073 = 0.707107*t3059;
  t3422 = t3415*t3190;
  t3449 = t3442*t3229;
  t3454 = -0.500001190325*t387*t3275;
  t3456 = t3422 + t3449 + t3454;
  t3461 = 0.707107*t3456;
  t3617 = t1599*t3504;
  t3621 = t500*t3531;
  t3624 = t1450*t3556;
  t3625 = t3617 + t3621 + t3624;
  t3647 = 0.707107*t3625;
  t3778 = t500*t3774;
  t3810 = t1450*t3803;
  t3831 = t1599*t3825;
  t3834 = t3778 + t3810 + t3831;
  t3848 = 0.707107*t3834;
  t4077 = t500*t4074;
  t4106 = t1450*t4093;
  t4135 = t1599*t4132;
  t4145 = t4077 + t4106 + t4135;
  t4152 = 0.707107*t4145;
  t4216 = t500*t3190;
  t4218 = t1450*t3229;
  t4220 = t1599*t3275;
  t4234 = t4216 + t4218 + t4220;
  t4240 = 0.707107*t4234;
  t4357 = t1450*t4355;
  t4371 = t500*t4368;
  t4391 = t1599*t4390;
  t4393 = t4357 + t4371 + t4391;
  t4402 = 0.707107*t4393;
  t4517 = t1450*t4509;
  t4530 = t500*t4520;
  t4555 = t1599*t4544;
  t4559 = t4517 + t4530 + t4555;
  t4560 = 0.707107*t4559;
  t4651 = t3415*t4610;
  t4652 = t3442*t4620;
  t4655 = -0.500001190325*t387*t4630;
  t4657 = t4651 + t4652 + t4655;
  t4660 = 0.707107*t4657;
  t4796 = t1599*t4676;
  t4799 = t500*t4705;
  t4803 = t1450*t4732;
  t4831 = t4796 + t4799 + t4803;
  t4847 = 0.707107*t4831;
  t4992 = t1450*t4986;
  t5047 = t500*t5019;
  t5099 = t1599*t5092;
  t5100 = t4992 + t5047 + t5099;
  t5108 = 0.707107*t5100;
  t5408 = t3415*t5274;
  t5411 = t3442*t5317;
  t5412 = -0.500001190325*t387*t5354;
  t5416 = t5408 + t5411 + t5412;
  t5421 = 0.707107*t5416;
  t5474 = t1450*t5472;
  t5495 = t500*t5485;
  t5512 = t1599*t5503;
  t5531 = t5474 + t5495 + t5512;
  t5533 = 0.707107*t5531;
  t5751 = t1599*t5617;
  t5755 = t500*t5674;
  t5762 = t1450*t5701;
  t5766 = t5751 + t5755 + t5762;
  t5772 = 0.707107*t5766;
  t5869 = t500*t5866;
  t5902 = t1450*t5895;
  t5928 = t1599*t5924;
  t5931 = t5869 + t5902 + t5928;
  t5939 = 0.707107*t5931;
  t6716 = -1.*t1192;
  t6717 = 1. + t6716;
  t6826 = 0.051978134642000004*t297;
  t6852 = -0.05226439969100001*t297;
  t6833 = 0.49726168403800003*t297;
  t6750 = 0.12*t6717;
  t6751 = -0.4*t1125;
  t6755 = 0. + t6750 + t6751;
  t6718 = 0.4*t6717;
  t6721 = 0.12*t1125;
  t6724 = 0. + t6718 + t6721;
  t6776 = 1.1924972351948546e-8*var1[14];
  t6778 = 0.38315655000705834*t1080;
  t6801 = -0.05650052807*t636;
  t6810 = t6776 + t6778 + t6801;
  t6758 = 1.1345904784751044e-7*var1[14];
  t6762 = -0.04027119345689465*t1080;
  t6763 = -0.05650052807*t1462;
  t6765 = t6758 + t6762 + t6763;
  t6843 = 1.639789470231751e-8*var1[15];
  t6848 = 0.22983603018311177*t297;
  t6853 = t6852 + t2237;
  t6854 = 0.164383620275*t6853;
  t6857 = t6826 + t2137;
  t6858 = 0.18957839082800002*t6857;
  t6859 = t6843 + t6848 + t6854 + t6858;
  t6815 = -1.5601527583902087e-7*var1[15];
  t6822 = 0.09582494577057615*t297;
  t6827 = t6826 + t1880;
  t6829 = 0.231098203479*t6827;
  t6834 = t6833 + t1966;
  t6838 = 0.164383620275*t6834;
  t6839 = t6815 + t6822 + t6829 + t6838;
  t6866 = 1.568745163810375e-7*var1[15];
  t6867 = 0.08219200580743281*t297;
  t6882 = t6852 + t1420;
  t6889 = 0.231098203479*t6882;
  t6895 = t6833 + t474;
  t6898 = 0.18957839082800002*t6895;
  t6899 = t6866 + t6867 + t6889 + t6898;
  t7004 = 0.051978134642000004*t387;
  t7036 = -0.05226439969100001*t387;
  t7009 = 0.49726168403800003*t387;
  t6731 = -0.056500534356700764*t1080;
  t6739 = 0.38315650737400003*t1706;
  t6742 = -0.040271188976*t1671;
  t6744 = 0. + t6731 + t6739 + t6742;
  t6939 = 0.12*t1192;
  t6943 = 0.4*t1125;
  t6945 = t6939 + t6943;
  t6950 = -0.4*t1192;
  t6957 = t6950 + t6721;
  t7007 = t3201 + t7004;
  t7008 = 0.231098203479*t7007;
  t7016 = t3245 + t7009;
  t7022 = 0.164383620275*t7016;
  t7023 = 0.09582494577057615*t387;
  t7031 = -1.5601527583902087e-7 + t7008 + t7022 + t7023;
  t7037 = t3361 + t7036;
  t7039 = 0.164383620275*t7037;
  t7045 = t3333 + t7004;
  t7046 = 0.18957839082800002*t7045;
  t7057 = 0.22983603018311177*t387;
  t7060 = 1.639789470231751e-8 + t7039 + t7046 + t7057;
  t7064 = t3431 + t7036;
  t7065 = 0.231098203479*t7064;
  t7068 = t3413 + t7009;
  t7069 = 0.18957839082800002*t7068;
  t7070 = 0.08219200580743281*t387;
  t7072 = 1.568745163810375e-7 + t7065 + t7069 + t7070;
  t7100 = -0.3852670428678886*t810;
  t7103 = -0.056500534356700764*t518;
  t7106 = t7100 + t7103;
  t7116 = 0.0059058871981009595*t810;
  t7129 = -0.04027119345689465*t518;
  t7135 = 1.1345904784751044e-7 + t7116 + t7129;
  t7147 = -0.05619101817723254*t810;
  t7148 = 0.38315655000705834*t518;
  t7151 = 1.1924972351948546e-8 + t7147 + t7148;
  p_output1[0]=(t3848 + 0.703234*t3889 - 0.073913*t3925)*var2[3] + (t1835 + 0.703234*t2086 - 0.073913*t2263)*var2[4] + (t2689 + 0.703234*t2708 - 0.073913*t2760)*var2[5] + (t3073 + 0.703234*t3085 - 0.073913*t3114)*var2[13] + (-0.073913*t3560 + 0.703234*t3603 + t3647)*var2[14] + (0.703234*t3294 - 0.073913*t3396 + t3461)*var2[15];
  p_output1[1]=(t4240 + 0.703234*t4280 - 0.073913*t4305)*var2[3] + (t4152 + 0.703234*t4184 - 0.073913*t4196)*var2[4] + (t4402 + 0.703234*t4416 - 0.073913*t4428)*var2[5] + (t4560 + 0.703234*t4576 - 0.073913*t4589)*var2[13] + (-0.073913*t4750 + 0.703234*t4784 + t4847)*var2[14] + (0.703234*t4636 - 0.073913*t4648 + t4660)*var2[15];
  p_output1[2]=(t5939 + 0.703234*t5964 - 0.073913*t5973)*var2[4] + (t5533 + 0.703234*t5556 - 0.073913*t5582)*var2[5] + (t5108 + 0.703234*t5135 - 0.073913*t5209)*var2[13] + (-0.073913*t5710 + 0.703234*t5738 + t5772)*var2[14] + (0.703234*t5367 - 0.073913*t5396 + t5421)*var2[15];
  p_output1[3]=0;
  p_output1[4]=(-0.104528*t3889 - 0.994522*t3925)*var2[3] + (-0.104528*t2086 - 0.994522*t2263)*var2[4] + (-0.104528*t2708 - 0.994522*t2760)*var2[5] + (-0.104528*t3085 - 0.994522*t3114)*var2[13] + (-0.994522*t3560 - 0.104528*t3603)*var2[14] + (-0.104528*t3294 - 0.994522*t3396)*var2[15];
  p_output1[5]=(-0.104528*t4280 - 0.994522*t4305)*var2[3] + (-0.104528*t4184 - 0.994522*t4196)*var2[4] + (-0.104528*t4416 - 0.994522*t4428)*var2[5] + (-0.104528*t4576 - 0.994522*t4589)*var2[13] + (-0.994522*t4750 - 0.104528*t4784)*var2[14] + (-0.104528*t4636 - 0.994522*t4648)*var2[15];
  p_output1[6]=(-0.104528*t5964 - 0.994522*t5973)*var2[4] + (-0.104528*t5556 - 0.994522*t5582)*var2[5] + (-0.104528*t5135 - 0.994522*t5209)*var2[13] + (-0.994522*t5710 - 0.104528*t5738)*var2[14] + (-0.104528*t5367 - 0.994522*t5396)*var2[15];
  p_output1[7]=0;
  p_output1[8]=(t3848 - 0.703234*t3889 + 0.073913*t3925)*var2[3] + (t1835 - 0.703234*t2086 + 0.073913*t2263)*var2[4] + (t2689 - 0.703234*t2708 + 0.073913*t2760)*var2[5] + (t3073 - 0.703234*t3085 + 0.073913*t3114)*var2[13] + (0.073913*t3560 - 0.703234*t3603 + t3647)*var2[14] + (-0.703234*t3294 + 0.073913*t3396 + t3461)*var2[15];
  p_output1[9]=(t4240 - 0.703234*t4280 + 0.073913*t4305)*var2[3] + (t4152 - 0.703234*t4184 + 0.073913*t4196)*var2[4] + (t4402 - 0.703234*t4416 + 0.073913*t4428)*var2[5] + (t4560 - 0.703234*t4576 + 0.073913*t4589)*var2[13] + (0.073913*t4750 - 0.703234*t4784 + t4847)*var2[14] + (-0.703234*t4636 + 0.073913*t4648 + t4660)*var2[15];
  p_output1[10]=(t5939 - 0.703234*t5964 + 0.073913*t5973)*var2[4] + (t5533 - 0.703234*t5556 + 0.073913*t5582)*var2[5] + (t5108 - 0.703234*t5135 + 0.073913*t5209)*var2[13] + (0.073913*t5710 - 0.703234*t5738 + t5772)*var2[14] + (-0.703234*t5367 + 0.073913*t5396 + t5421)*var2[15];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (0.060173*t3834 + 0.293218*t3889 + 0.220205*t3925 + t3705*t6724 - 1.*t1083*t2319*t6744 + t3734*t6755 + t3745*t6765 + t3771*t6810 + t3774*t6839 + t3803*t6859 + t3825*t6899)*var2[3] + (0.060173*t1807 + 0.293218*t2086 + 0.220205*t2263 + t1083*t1091*t503*t6724 + t1083*t1205*t503*t6755 + t1275*t6765 + t1372*t6810 + t1383*t6839 + t1589*t6859 + t1771*t6899 - 1.*t503*t6744*t724)*var2[4] + (0.060173*t2682 + 0.293218*t2708 + 0.220205*t2760 + t2457*t6724 + t2375*t6755 + t2519*t6765 + t2470*t6810 + t2562*t6839 + t2540*t6859 + t2662*t6899)*var2[5] + (0.060173*t3059 + 0.293218*t3085 + 0.220205*t3114 + t2960*t6765 + t2923*t6810 + t3018*t6839 + t2968*t6859 + t3040*t6899 + t2375*t6945 + t2874*t6957)*var2[13] + (0.220205*t3560 + 0.293218*t3603 + 0.060173*t3625 + t3531*t6839 + t3556*t6859 + t3504*t6899 + t1083*t503*t7106 + t2923*t7135 + t3163*t7151)*var2[14] + (0.293218*t3294 + 0.220205*t3396 + 0.060173*t3456 + t3190*t7031 + t3229*t7060 + t3275*t7072)*var2[15];
  p_output1[13]=var2[1] + (0.060173*t4234 + 0.293218*t4280 + 0.220205*t4305 + t2375*t6724 + t1083*t503*t6744 + t2874*t6755 + t2923*t6765 + t3163*t6810 + t3190*t6839 + t3229*t6859 + t3275*t6899)*var2[3] + (0.060173*t4145 + 0.293218*t4184 + 0.220205*t4196 + t1083*t1091*t2319*t6724 + t1083*t1205*t2319*t6755 + t4027*t6765 + t4055*t6810 + t4074*t6839 + t4093*t6859 + t4132*t6899 - 1.*t2319*t6744*t724)*var2[4] + (0.060173*t4393 + 0.293218*t4416 + 0.220205*t4428 + t3734*t6724 + t4319*t6755 + t4351*t6765 + t4337*t6810 + t4368*t6839 + t4355*t6859 + t4390*t6899)*var2[5] + (0.060173*t4559 + 0.293218*t4576 + 0.220205*t4589 + t4498*t6765 + t4481*t6810 + t4520*t6839 + t4509*t6859 + t4544*t6899 + t4319*t6945 + t4458*t6957)*var2[13] + (0.220205*t4750 + 0.293218*t4784 + 0.060173*t4831 + t4705*t6839 + t4732*t6859 + t4676*t6899 + t1083*t2319*t7106 + t4481*t7135 + t4604*t7151)*var2[14] + (0.293218*t4636 + 0.220205*t4648 + 0.060173*t4657 + t4610*t7031 + t4620*t7060 + t4630*t7072)*var2[15];
  p_output1[14]=var2[2] + (0.060173*t5931 + 0.293218*t5964 + 0.220205*t5973 - 1.*t1083*t6744 + t5799*t6765 + t5859*t6810 + t5866*t6839 + t5895*t6859 + t5924*t6899 - 1.*t1091*t6724*t724 - 1.*t1205*t6755*t724)*var2[4] + (0.060173*t5531 + 0.293218*t5556 + 0.220205*t5582 - 1.*t1083*t1205*t6724 + t1083*t1091*t6755 + t5256*t6765 + t5459*t6810 + t5485*t6839 + t5472*t6859 + t5503*t6899)*var2[5] + (0.060173*t5100 + 0.293218*t5135 + 0.220205*t5209 + t4950*t6765 + t4881*t6810 + t5019*t6839 + t4986*t6859 + t5092*t6899 + t1083*t1091*t6945 + t1083*t1205*t6957)*var2[13] + (0.220205*t5710 + 0.293218*t5738 + 0.060173*t5766 + t5674*t6839 + t5701*t6859 + t5617*t6899 + t4881*t7135 + t5256*t7151 - 1.*t7106*t724)*var2[14] + (0.293218*t5367 + 0.220205*t5396 + 0.060173*t5416 + t5274*t7031 + t5317*t7060 + t5354*t7072)*var2[15];
  p_output1[15]=0;
}



void dT_shoulder_yaw_joint_left_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
