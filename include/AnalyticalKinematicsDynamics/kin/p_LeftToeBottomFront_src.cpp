/*
 * Automatically Generated from Mathematica.
 * Thu 10 Nov 2022 14:50:15 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "p_LeftToeBottomFront_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t424;
  double t331;
  double t425;
  double t399;
  double t428;
  double t1134;
  double t30;
  double t494;
  double t732;
  double t740;
  double t411;
  double t434;
  double t465;
  double t852;
  double t950;
  double t971;
  double t995;
  double t1663;
  double t1664;
  double t1725;
  double t1327;
  double t1328;
  double t1347;
  double t943;
  double t1571;
  double t1606;
  double t2681;
  double t2766;
  double t2767;
  double t1896;
  double t2001;
  double t1144;
  double t1171;
  double t1218;
  double t1234;
  double t2951;
  double t2971;
  double t2983;
  double t2986;
  double t3008;
  double t3011;
  double t2771;
  double t2772;
  double t2773;
  double t2784;
  double t2785;
  double t2789;
  double t3014;
  double t2816;
  double t2817;
  double t2873;
  double t2900;
  double t2912;
  double t2914;
  double t2676;
  double t2678;
  double t2679;
  double t2544;
  double t2791;
  double t2798;
  double t2815;
  double t2941;
  double t3016;
  double t3017;
  double t3023;
  double t3067;
  double t3071;
  double t3090;
  double t3091;
  double t3125;
  double t3126;
  double t3135;
  double t3137;
  double t3141;
  double t3142;
  double t3144;
  double t3162;
  double t3186;
  double t3189;
  double t3192;
  double t3197;
  double t3205;
  double t3206;
  double t3209;
  double t3234;
  double t3321;
  double t3325;
  double t3336;
  double t3069;
  double t3080;
  double t3083;
  double t3164;
  double t3169;
  double t3174;
  double t3238;
  double t3242;
  double t3270;
  double t3300;
  double t3305;
  double t3307;
  double t3309;
  double t3312;
  double t3313;
  double t3315;
  double t3350;
  double t3356;
  double t3370;
  double t3373;
  double t3377;
  double t3384;
  double t3399;
  double t3401;
  double t3402;
  double t3405;
  double t3415;
  double t3416;
  double t3417;
  double t2069;
  double t2070;
  double t2133;
  double t2236;
  double t2436;
  double t2574;
  double t2674;
  double t3251;
  double t3253;
  double t3269;
  double t3320;
  double t3341;
  double t3347;
  double t3406;
  double t3412;
  double t3418;
  double t3421;
  double t3424;
  double t3440;
  double t3443;
  double t3450;
  double t3451;
  double t3454;
  double t3464;
  double t3471;
  double t3473;
  double t3474;
  double t3476;
  double t3485;
  double t3486;
  double t3488;
  double t2529;
  double t2541;
  double t3413;
  double t3455;
  double t3456;
  double t3458;
  double t3489;
  double t3490;
  double t3502;
  double t3504;
  double t3505;
  double t3506;
  double t3507;
  double t3509;
  double t3511;
  double t3514;
  double t2147;
  double t3525;
  double t3526;
  double t3528;
  double t3540;
  double t3541;
  double t3544;
  double t3545;
  double t3550;
  double t3553;
  double t3555;
  double t3569;
  double t3497;
  double t3586;
  double t3570;
  double t3671;
  double t3606;
  double t3633;
  double t3691;
  double t3499;
  double t3664;
  double t2242;
  double t115;
  double t238;
  double t240;
  double t330;
  double t868;
  double t922;
  double t1111;
  double t1184;
  double t1257;
  double t1307;
  double t3914;
  double t3918;
  double t3919;
  double t3903;
  double t3904;
  double t3906;
  double t1365;
  double t1378;
  double t1609;
  double t1630;
  double t1849;
  double t1869;
  double t2027;
  double t2052;
  double t2422;
  double t3949;
  double t3953;
  double t3954;
  double t3939;
  double t3941;
  double t3943;
  double t3979;
  double t3980;
  double t3983;
  double t3984;
  double t3959;
  double t3961;
  double t3962;
  double t3964;
  double t3968;
  double t3971;
  double t3972;
  double t3974;
  double t3967;
  double t3975;
  double t3986;
  double t3988;
  double t3990;
  double t3991;
  double t3993;
  double t4001;
  double t4026;
  double t4031;
  double t4035;
  double t4036;
  double t3989;
  double t4005;
  double t4040;
  double t4041;
  double t4045;
  double t4046;
  double t4048;
  double t4050;
  double t4057;
  double t4058;
  double t4062;
  double t4065;
  double t3501;
  double t4044;
  double t4053;
  double t4066;
  double t4068;
  double t4074;
  double t4076;
  double t4084;
  double t4086;
  double t4096;
  double t4097;
  double t4098;
  double t4099;
  double t3519;
  double t3522;
  double t3564;
  double t3567;
  double t4073;
  double t4090;
  double t4101;
  double t4102;
  double t3582;
  double t4116;
  double t4132;
  double t4135;
  double t4138;
  double t3595;
  double t4141;
  double t4142;
  double t4148;
  double t4155;
  double t3614;
  double t3627;
  double t3629;
  double t3648;
  double t3656;
  double t3659;
  double t3668;
  double t3670;
  double t3672;
  double t3676;
  double t3679;
  double t3681;
  double t3685;
  double t3687;
  double t3690;
  double t3692;
  double t3694;
  double t3695;
  double t3703;
  double t3708;
  double t3710;
  double t3715;
  double t3716;
  double t3717;
  double t3725;
  double t3732;
  double t3733;
  double t3735;
  double t3736;
  double t3741;
  double t3743;
  double t3745;
  double t3749;
  double t3752;
  double t3754;
  double t3756;
  double t3762;
  double t3767;
  double t3768;
  double t3770;
  double t3773;
  double t3776;
  double t3782;
  double t3783;
  double t3786;
  double t3788;
  double t3789;
  double t3791;
  double t3795;
  double t3798;
  double t3801;
  double t3803;
  double t3804;
  double t3808;
  double t3814;
  double t3816;
  double t3819;
  double t3823;
  double t3825;
  double t3827;
  double t3828;
  double t3832;
  double t3837;
  double t3838;
  double t3842;
  double t3851;
  double t3852;
  double t3880;
  double t3885;
  double t3888;
  double t3889;
  double t3890;
  double t3895;
  double t4247;
  double t4251;
  double t4254;
  double t4238;
  double t4241;
  double t4243;
  double t4280;
  double t4284;
  double t4285;
  double t4288;
  double t4256;
  double t4261;
  double t4263;
  double t4265;
  double t4269;
  double t4270;
  double t4272;
  double t4274;
  double t4268;
  double t4279;
  double t4291;
  double t4296;
  double t4302;
  double t4305;
  double t4306;
  double t4311;
  double t4314;
  double t4319;
  double t4324;
  double t4325;
  double t4298;
  double t4312;
  double t4326;
  double t4327;
  double t4333;
  double t4337;
  double t4343;
  double t4345;
  double t4350;
  double t4352;
  double t4353;
  double t4354;
  double t4328;
  double t4347;
  double t4359;
  double t4360;
  double t4368;
  double t4369;
  double t4372;
  double t4373;
  double t4375;
  double t4376;
  double t4378;
  double t4381;
  double t4365;
  double t4374;
  double t4387;
  double t4390;
  double t4392;
  double t4393;
  double t4395;
  double t4410;
  double t4418;
  double t4419;
  double t4421;
  double t4422;
  t424 = Cos(var1[3]);
  t331 = Cos(var1[5]);
  t425 = Sin(var1[4]);
  t399 = Sin(var1[3]);
  t428 = Sin(var1[5]);
  t1134 = Sin(var1[7]);
  t30 = Cos(var1[6]);
  t494 = t424*t331*t425;
  t732 = t399*t428;
  t740 = t494 + t732;
  t411 = -1.*t331*t399;
  t434 = t424*t425*t428;
  t465 = t411 + t434;
  t852 = Sin(var1[6]);
  t950 = Cos(var1[7]);
  t971 = -1.*t950;
  t995 = 1. + t971;
  t1663 = t30*t465;
  t1664 = -1.*t740*t852;
  t1725 = t1663 + t1664;
  t1327 = t30*t740;
  t1328 = t465*t852;
  t1347 = t1327 + t1328;
  t943 = Cos(var1[4]);
  t1571 = 0.366501*t1134;
  t1606 = 0. + t1571;
  t2681 = Cos(var1[8]);
  t2766 = -1.*t2681;
  t2767 = 1. + t2766;
  t1896 = 0.930418*t1134;
  t2001 = 0. + t1896;
  t1144 = -0.930418*t1134;
  t1171 = 0. + t1144;
  t1218 = -0.366501*t1134;
  t1234 = 0. + t1218;
  t2951 = -1.000000637725*t995;
  t2971 = 1. + t2951;
  t2983 = t424*t943*t2971;
  t2986 = t1725*t1171;
  t3008 = t1347*t1234;
  t3011 = t2983 + t2986 + t3008;
  t2771 = -0.340999127418*t995*t1725;
  t2772 = -0.134322983001*t995;
  t2773 = 1. + t2772;
  t2784 = t2773*t1347;
  t2785 = t424*t943*t1606;
  t2789 = t2771 + t2784 + t2785;
  t3014 = Sin(var1[8]);
  t2816 = -0.8656776547239999*t995;
  t2817 = 1. + t2816;
  t2873 = t2817*t1725;
  t2900 = -0.340999127418*t995*t1347;
  t2912 = t424*t943*t2001;
  t2914 = t2873 + t2900 + t2912;
  t2676 = Cos(var1[9]);
  t2678 = -1.*t2676;
  t2679 = 1. + t2678;
  t2544 = Sin(var1[10]);
  t2791 = 0.340999127418*t2767*t2789;
  t2798 = -0.134322983001*t2767;
  t2815 = 1. + t2798;
  t2941 = t2815*t2914;
  t3016 = -0.366501*t3014;
  t3017 = 0. + t3016;
  t3023 = t3011*t3017;
  t3067 = t2791 + t2941 + t3023;
  t3071 = Sin(var1[9]);
  t3090 = -1.000000637725*t2767;
  t3091 = 1. + t3090;
  t3125 = t3091*t3011;
  t3126 = -0.930418*t3014;
  t3135 = 0. + t3126;
  t3137 = t2789*t3135;
  t3141 = 0.366501*t3014;
  t3142 = 0. + t3141;
  t3144 = t2914*t3142;
  t3162 = t3125 + t3137 + t3144;
  t3186 = -0.8656776547239999*t2767;
  t3189 = 1. + t3186;
  t3192 = t3189*t2789;
  t3197 = 0.340999127418*t2767*t2914;
  t3205 = 0.930418*t3014;
  t3206 = 0. + t3205;
  t3209 = t3011*t3206;
  t3234 = t3192 + t3197 + t3209;
  t3321 = Cos(var1[10]);
  t3325 = -1.*t3321;
  t3336 = 1. + t3325;
  t3069 = 0.340999127418*t2679*t3067;
  t3080 = -0.930418*t3071;
  t3083 = 0. + t3080;
  t3164 = t3083*t3162;
  t3169 = -0.8656776547239999*t2679;
  t3174 = 1. + t3169;
  t3238 = t3174*t3234;
  t3242 = t3069 + t3164 + t3238;
  t3270 = -0.134322983001*t2679;
  t3300 = 1. + t3270;
  t3305 = t3300*t3067;
  t3307 = 0.366501*t3071;
  t3309 = 0. + t3307;
  t3312 = t3309*t3162;
  t3313 = 0.340999127418*t2679*t3234;
  t3315 = t3305 + t3312 + t3313;
  t3350 = -0.366501*t3071;
  t3356 = 0. + t3350;
  t3370 = t3356*t3067;
  t3373 = -1.000000637725*t2679;
  t3377 = 1. + t3373;
  t3384 = t3377*t3162;
  t3399 = 0.930418*t3071;
  t3401 = 0. + t3399;
  t3402 = t3401*t3234;
  t3405 = t3370 + t3384 + t3402;
  t3415 = Cos(var1[11]);
  t3416 = -1.*t3415;
  t3417 = 1. + t3416;
  t2069 = Cos(var1[12]);
  t2070 = -1.*t2069;
  t2133 = 1. + t2070;
  t2236 = Sin(var1[12]);
  t2436 = Sin(var1[11]);
  t2574 = 0.930418*t2544;
  t2674 = 0. + t2574;
  t3251 = t2674*t3242;
  t3253 = -0.366501*t2544;
  t3269 = 0. + t3253;
  t3320 = t3269*t3315;
  t3341 = -1.000000637725*t3336;
  t3347 = 1. + t3341;
  t3406 = t3347*t3405;
  t3412 = t3251 + t3320 + t3406;
  t3418 = -0.8656776547239999*t3336;
  t3421 = 1. + t3418;
  t3424 = t3421*t3242;
  t3440 = 0.340999127418*t3336*t3315;
  t3443 = -0.930418*t2544;
  t3450 = 0. + t3443;
  t3451 = t3450*t3405;
  t3454 = t3424 + t3440 + t3451;
  t3464 = 0.340999127418*t3336*t3242;
  t3471 = -0.134322983001*t3336;
  t3473 = 1. + t3471;
  t3474 = t3473*t3315;
  t3476 = 0.366501*t2544;
  t3485 = 0. + t3476;
  t3486 = t3485*t3405;
  t3488 = t3464 + t3474 + t3486;
  t2529 = 0.366501*t2436;
  t2541 = 0. + t2529;
  t3413 = t2541*t3412;
  t3455 = 0.340999127418*t3417*t3454;
  t3456 = -0.134322983001*t3417;
  t3458 = 1. + t3456;
  t3489 = t3458*t3488;
  t3490 = t3413 + t3455 + t3489;
  t3502 = -0.930418*t2436;
  t3504 = 0. + t3502;
  t3505 = t3504*t3412;
  t3506 = -0.8656776547239999*t3417;
  t3507 = 1. + t3506;
  t3509 = t3507*t3454;
  t3511 = 0.340999127418*t3417*t3488;
  t3514 = t3505 + t3509 + t3511;
  t2147 = -0.175248972904*t2133;
  t3525 = -1.000000637725*t3417;
  t3526 = 1. + t3525;
  t3528 = t3526*t3412;
  t3540 = 0.930418*t2436;
  t3541 = 0. + t3540;
  t3544 = t3541*t3454;
  t3545 = -0.366501*t2436;
  t3550 = 0. + t3545;
  t3553 = t3550*t3488;
  t3555 = t3528 + t3544 + t3553;
  t3569 = -0.120666640478*t2133;
  t3497 = 0.444895486988*t2133;
  t3586 = -0.553471*t2236;
  t3570 = 0.803828*t2236;
  t3671 = 0.120666640478*t2133;
  t3606 = -0.803828*t2236;
  t3633 = -0.218018*t2236;
  t3691 = -0.444895486988*t2133;
  t3499 = 0.218018*t2236;
  t3664 = 0.175248972904*t2133;
  t2242 = 0.553471*t2236;
  t115 = -1.*t30;
  t238 = 1. + t115;
  t240 = 0.091*t238;
  t330 = 0. + t240;
  t868 = 0.091*t852;
  t922 = 0. + t868;
  t1111 = -0.04500040093286238*t995;
  t1184 = 0.07877663122399998*t1171;
  t1257 = 0.031030906668*t1234;
  t1307 = 0. + t1111 + t1184 + t1257;
  t3914 = t331*t399*t425;
  t3918 = -1.*t424*t428;
  t3919 = t3914 + t3918;
  t3903 = t424*t331;
  t3904 = t399*t425*t428;
  t3906 = t3903 + t3904;
  t1365 = -3.2909349868922137e-7*var1[7];
  t1378 = 0.03103092645718495*t995;
  t1609 = -0.045000372235*t1606;
  t1630 = t1365 + t1378 + t1609;
  t1849 = 1.296332362046933e-7*var1[7];
  t1869 = 0.07877668146182712*t995;
  t2027 = -0.045000372235*t2001;
  t2052 = t1849 + t1869 + t2027;
  t2422 = t2147 + t2242;
  t3949 = t30*t3906;
  t3953 = -1.*t3919*t852;
  t3954 = t3949 + t3953;
  t3939 = t30*t3919;
  t3941 = t3906*t852;
  t3943 = t3939 + t3941;
  t3979 = t943*t2971*t399;
  t3980 = t3954*t1171;
  t3983 = t3943*t1234;
  t3984 = t3979 + t3980 + t3983;
  t3959 = -0.340999127418*t995*t3954;
  t3961 = t2773*t3943;
  t3962 = t943*t399*t1606;
  t3964 = t3959 + t3961 + t3962;
  t3968 = t2817*t3954;
  t3971 = -0.340999127418*t995*t3943;
  t3972 = t943*t399*t2001;
  t3974 = t3968 + t3971 + t3972;
  t3967 = 0.340999127418*t2767*t3964;
  t3975 = t2815*t3974;
  t3986 = t3984*t3017;
  t3988 = t3967 + t3975 + t3986;
  t3990 = t3091*t3984;
  t3991 = t3964*t3135;
  t3993 = t3974*t3142;
  t4001 = t3990 + t3991 + t3993;
  t4026 = t3189*t3964;
  t4031 = 0.340999127418*t2767*t3974;
  t4035 = t3984*t3206;
  t4036 = t4026 + t4031 + t4035;
  t3989 = 0.340999127418*t2679*t3988;
  t4005 = t3083*t4001;
  t4040 = t3174*t4036;
  t4041 = t3989 + t4005 + t4040;
  t4045 = t3300*t3988;
  t4046 = t3309*t4001;
  t4048 = 0.340999127418*t2679*t4036;
  t4050 = t4045 + t4046 + t4048;
  t4057 = t3356*t3988;
  t4058 = t3377*t4001;
  t4062 = t3401*t4036;
  t4065 = t4057 + t4058 + t4062;
  t3501 = t3497 + t3499;
  t4044 = t2674*t4041;
  t4053 = t3269*t4050;
  t4066 = t3347*t4065;
  t4068 = t4044 + t4053 + t4066;
  t4074 = t3421*t4041;
  t4076 = 0.340999127418*t3336*t4050;
  t4084 = t3450*t4065;
  t4086 = t4074 + t4076 + t4084;
  t4096 = 0.340999127418*t3336*t4041;
  t4097 = t3473*t4050;
  t4098 = t3485*t4065;
  t4099 = t4096 + t4097 + t4098;
  t3519 = -0.353861996165*t2133;
  t3522 = 1. + t3519;
  t3564 = -0.952469601425*t2133;
  t3567 = 1. + t3564;
  t4073 = t2541*t4068;
  t4090 = 0.340999127418*t3417*t4086;
  t4101 = t3458*t4099;
  t4102 = t4073 + t4090 + t4101;
  t3582 = t3569 + t3570;
  t4116 = t3504*t4068;
  t4132 = t3507*t4086;
  t4135 = 0.340999127418*t3417*t4099;
  t4138 = t4116 + t4132 + t4135;
  t3595 = t2147 + t3586;
  t4141 = t3526*t4068;
  t4142 = t3541*t4086;
  t4148 = t3550*t4099;
  t4155 = t4141 + t4142 + t4148;
  t3614 = t3569 + t3606;
  t3627 = -0.693671301908*t2133;
  t3629 = 1. + t3627;
  t3648 = t3497 + t3633;
  t3656 = 2.838136523330542e-8*var1[12];
  t3659 = 0.2845150083511607*t2133;
  t3668 = t3664 + t3586;
  t3670 = 0.44503472296900004*t3668;
  t3672 = t3671 + t3570;
  t3676 = -0.5286755231320001*t3672;
  t3679 = t3656 + t3659 + t3670 + t3676;
  t3681 = -7.20503013377005e-8*var1[12];
  t3685 = -0.3667270384178674*t2133;
  t3687 = t3671 + t3606;
  t3690 = 0.29871295412*t3687;
  t3692 = t3691 + t3633;
  t3694 = 0.44503472296900004*t3692;
  t3695 = t3681 + t3685 + t3690 + t3694;
  t3703 = -1.0464152525368286e-7*var1[12];
  t3708 = 0.15748087543254813*t2133;
  t3710 = t3691 + t3499;
  t3715 = -0.5286755231320001*t3710;
  t3716 = t3664 + t2242;
  t3717 = 0.29871295412*t3716;
  t3725 = t3703 + t3708 + t3715 + t3717;
  t3732 = 0.06199697675299678*t3417;
  t3733 = 0.324290713329*t3550;
  t3735 = -0.823260828522*t3541;
  t3736 = 0. + t3732 + t3733 + t3735;
  t3741 = 2.95447451120871e-8*var1[11];
  t3743 = -0.8232613535360118*t3417;
  t3745 = 0.061996937216*t3504;
  t3749 = t3741 + t3743 + t3745;
  t3752 = 7.500378623168247e-8*var1[11];
  t3754 = 0.32429092013729516*t3417;
  t3756 = 0.061996937216*t2541;
  t3762 = t3752 + t3754 + t3756;
  t3767 = 2.281945176511838e-8*var1[10];
  t3768 = -0.5905366811997648*t3336;
  t3770 = -0.262809976934*t3450;
  t3773 = t3767 + t3768 + t3770;
  t3776 = 5.7930615939377813e-8*var1[10];
  t3782 = 0.23261833304643187*t3336;
  t3783 = -0.262809976934*t3485;
  t3786 = t3776 + t3782 + t3783;
  t3788 = -0.26281014453449253*t3336;
  t3789 = 0.23261818470000004*t3269;
  t3791 = -0.5905363046000001*t2674;
  t3795 = 0. + t3788 + t3789 + t3791;
  t3798 = 3.2909349868922137e-7*var1[8];
  t3801 = 0.055653945343889656*t2767;
  t3803 = -0.045000372235*t3017;
  t3804 = t3798 + t3801 + t3803;
  t3808 = -1.5981976069815686e-7*var1[9];
  t3814 = 0.08675267452931407*t2679;
  t3816 = 0.039853013046*t3309;
  t3819 = t3808 + t3814 + t3816;
  t3823 = -0.04500040093286238*t2767;
  t3825 = -0.141285834136*t3135;
  t3827 = 0.055653909852*t3142;
  t3828 = 0. + t3823 + t3825 + t3827;
  t3832 = 0.039853038461262744*t2679;
  t3837 = 0.086752619205*t3356;
  t3838 = -0.22023459268999998*t3401;
  t3842 = 0. + t3832 + t3837 + t3838;
  t3851 = 1.296332362046933e-7*var1[8];
  t3852 = -0.14128592423750855*t2767;
  t3880 = -0.045000372235*t3206;
  t3885 = t3851 + t3852 + t3880;
  t3888 = -6.295460977284962e-8*var1[9];
  t3889 = -0.22023473313910558*t2679;
  t3890 = 0.039853013046*t3083;
  t3895 = t3888 + t3889 + t3890;
  t4247 = t943*t30*t428;
  t4251 = -1.*t943*t331*t852;
  t4254 = t4247 + t4251;
  t4238 = t943*t331*t30;
  t4241 = t943*t428*t852;
  t4243 = t4238 + t4241;
  t4280 = -1.*t2971*t425;
  t4284 = t4254*t1171;
  t4285 = t4243*t1234;
  t4288 = t4280 + t4284 + t4285;
  t4256 = -0.340999127418*t995*t4254;
  t4261 = t2773*t4243;
  t4263 = -1.*t425*t1606;
  t4265 = t4256 + t4261 + t4263;
  t4269 = t2817*t4254;
  t4270 = -0.340999127418*t995*t4243;
  t4272 = -1.*t425*t2001;
  t4274 = t4269 + t4270 + t4272;
  t4268 = 0.340999127418*t2767*t4265;
  t4279 = t2815*t4274;
  t4291 = t4288*t3017;
  t4296 = t4268 + t4279 + t4291;
  t4302 = t3091*t4288;
  t4305 = t4265*t3135;
  t4306 = t4274*t3142;
  t4311 = t4302 + t4305 + t4306;
  t4314 = t3189*t4265;
  t4319 = 0.340999127418*t2767*t4274;
  t4324 = t4288*t3206;
  t4325 = t4314 + t4319 + t4324;
  t4298 = 0.340999127418*t2679*t4296;
  t4312 = t3083*t4311;
  t4326 = t3174*t4325;
  t4327 = t4298 + t4312 + t4326;
  t4333 = t3300*t4296;
  t4337 = t3309*t4311;
  t4343 = 0.340999127418*t2679*t4325;
  t4345 = t4333 + t4337 + t4343;
  t4350 = t3356*t4296;
  t4352 = t3377*t4311;
  t4353 = t3401*t4325;
  t4354 = t4350 + t4352 + t4353;
  t4328 = t2674*t4327;
  t4347 = t3269*t4345;
  t4359 = t3347*t4354;
  t4360 = t4328 + t4347 + t4359;
  t4368 = t3421*t4327;
  t4369 = 0.340999127418*t3336*t4345;
  t4372 = t3450*t4354;
  t4373 = t4368 + t4369 + t4372;
  t4375 = 0.340999127418*t3336*t4327;
  t4376 = t3473*t4345;
  t4378 = t3485*t4354;
  t4381 = t4375 + t4376 + t4378;
  t4365 = t2541*t4360;
  t4374 = 0.340999127418*t3417*t4373;
  t4387 = t3458*t4381;
  t4390 = t4365 + t4374 + t4387;
  t4392 = t3504*t4360;
  t4393 = t3507*t4373;
  t4395 = 0.340999127418*t3417*t4381;
  t4410 = t4392 + t4393 + t4395;
  t4418 = t3526*t4360;
  t4419 = t3541*t4373;
  t4421 = t3550*t4381;
  t4422 = t4418 + t4419 + t4421;
  p_output1[0]=0. + t1347*t1630 + t1725*t2052 + 0.150471*(t2422*t3490 + t3501*t3514 + t3522*t3555) + 0.425433*(t3490*t3567 + t3514*t3582 + t3555*t3595) - 0.836729*(t3490*t3614 + t3514*t3629 + t3555*t3648) + t3490*t3679 + t3514*t3695 + t3555*t3725 + t3412*t3736 + t3454*t3749 + t3488*t3762 + t3242*t3773 + t3315*t3786 + t3405*t3795 + t2914*t3804 + t3067*t3819 + t3011*t3828 + t3162*t3842 + t2789*t3885 + t3234*t3895 + t330*t465 + t740*t922 + t1307*t424*t943 + var1[0];
  p_output1[1]=0. + t330*t3906 + t1630*t3943 + t2052*t3954 + t3885*t3964 + t3804*t3974 + t3828*t3984 + t3819*t3988 + t3842*t4001 + t3895*t4036 + t3773*t4041 + t3786*t4050 + t3795*t4065 + t3736*t4068 + t3749*t4086 + t3762*t4099 + t3679*t4102 + t3695*t4138 + t3725*t4155 + 0.150471*(t2422*t4102 + t3501*t4138 + t3522*t4155) + 0.425433*(t3567*t4102 + t3582*t4138 + t3595*t4155) - 0.836729*(t3614*t4102 + t3629*t4138 + t3648*t4155) + t3919*t922 + t1307*t399*t943 + var1[1];
  p_output1[2]=0. + t1630*t4243 - 1.*t1307*t425 + t2052*t4254 + t3885*t4265 + t3804*t4274 + t3828*t4288 + t3819*t4296 + t3842*t4311 + t3895*t4325 + t3773*t4327 + t3786*t4345 + t3795*t4354 + t3736*t4360 + t3749*t4373 + t3762*t4381 + t3679*t4390 + t3695*t4410 + t3725*t4422 + 0.150471*(t2422*t4390 + t3501*t4410 + t3522*t4422) + 0.425433*(t3567*t4390 + t3582*t4410 + t3595*t4422) - 0.836729*(t3614*t4390 + t3629*t4410 + t3648*t4422) + t330*t428*t943 + t331*t922*t943 + var1[2];
}



void p_LeftToeBottomFront_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
