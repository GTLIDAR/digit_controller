/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:43:25 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "T_toe_roll_joint_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t259;
  double t225;
  double t264;
  double t232;
  double t267;
  double t216;
  double t220;
  double t221;
  double t223;
  double t292;
  double t293;
  double t297;
  double t251;
  double t269;
  double t270;
  double t300;
  double t210;
  double t211;
  double t212;
  double t276;
  double t304;
  double t305;
  double t316;
  double t318;
  double t320;
  double t323;
  double t324;
  double t404;
  double t405;
  double t409;
  double t413;
  double t424;
  double t439;
  double t440;
  double t451;
  double t461;
  double t465;
  double t307;
  double t309;
  double t312;
  double t321;
  double t325;
  double t326;
  double t338;
  double t344;
  double t466;
  double t358;
  double t360;
  double t361;
  double t368;
  double t370;
  double t391;
  double t393;
  double t397;
  double t182;
  double t191;
  double t192;
  double t168;
  double t345;
  double t355;
  double t356;
  double t399;
  double t472;
  double t474;
  double t478;
  double t498;
  double t505;
  double t532;
  double t539;
  double t544;
  double t553;
  double t556;
  double t558;
  double t572;
  double t573;
  double t575;
  double t577;
  double t597;
  double t604;
  double t610;
  double t617;
  double t618;
  double t619;
  double t621;
  double t624;
  double t781;
  double t784;
  double t796;
  double t504;
  double t525;
  double t528;
  double t580;
  double t583;
  double t586;
  double t648;
  double t650;
  double t673;
  double t676;
  double t687;
  double t709;
  double t730;
  double t742;
  double t745;
  double t747;
  double t835;
  double t838;
  double t846;
  double t850;
  double t858;
  double t859;
  double t866;
  double t869;
  double t871;
  double t881;
  double t903;
  double t905;
  double t917;
  double t55;
  double t67;
  double t74;
  double t99;
  double t173;
  double t177;
  double t668;
  double t669;
  double t670;
  double t758;
  double t811;
  double t831;
  double t882;
  double t895;
  double t918;
  double t921;
  double t923;
  double t924;
  double t926;
  double t927;
  double t934;
  double t939;
  double t1002;
  double t1003;
  double t1004;
  double t1011;
  double t1031;
  double t1036;
  double t1046;
  double t1049;
  double t1102;
  double t1087;
  double t135;
  double t163;
  double t896;
  double t955;
  double t956;
  double t1000;
  double t1054;
  double t1064;
  double t1131;
  double t1136;
  double t1150;
  double t1153;
  double t1154;
  double t1157;
  double t1158;
  double t1163;
  double t1195;
  double t1200;
  double t1207;
  double t1214;
  double t1225;
  double t1230;
  double t1240;
  double t1250;
  double t1257;
  double t1261;
  double t79;
  double t96;
  double t1368;
  double t1378;
  double t1382;
  double t1344;
  double t1345;
  double t1350;
  double t1353;
  double t1391;
  double t1393;
  double t1407;
  double t1410;
  double t1419;
  double t1474;
  double t1476;
  double t1488;
  double t1498;
  double t1402;
  double t1422;
  double t1425;
  double t1426;
  double t1432;
  double t1452;
  double t1453;
  double t1454;
  double t1429;
  double t1473;
  double t1514;
  double t1519;
  double t1525;
  double t1532;
  double t1545;
  double t1547;
  double t1558;
  double t1563;
  double t1570;
  double t1574;
  double t1524;
  double t1550;
  double t1575;
  double t1588;
  double t1597;
  double t1600;
  double t1601;
  double t1603;
  double t1617;
  double t1618;
  double t1621;
  double t1624;
  double t1114;
  double t1118;
  double t1595;
  double t1612;
  double t1637;
  double t1638;
  double t1648;
  double t1652;
  double t1655;
  double t1657;
  double t1663;
  double t1674;
  double t1675;
  double t1687;
  double t1167;
  double t1174;
  double t1184;
  double t1287;
  double t1289;
  double t1640;
  double t1662;
  double t1688;
  double t1694;
  double t1293;
  double t1296;
  double t1701;
  double t1713;
  double t1722;
  double t1723;
  double t1299;
  double t1301;
  double t1307;
  double t1732;
  double t1737;
  double t1738;
  double t1740;
  double t1816;
  double t1826;
  double t1828;
  double t1837;
  double t1841;
  double t1842;
  double t1861;
  double t1872;
  double t1873;
  double t1876;
  double t1836;
  double t1843;
  double t1846;
  double t1849;
  double t1853;
  double t1855;
  double t1857;
  double t1859;
  double t1851;
  double t1860;
  double t1880;
  double t1888;
  double t1904;
  double t1905;
  double t1907;
  double t1909;
  double t1916;
  double t1924;
  double t1927;
  double t1936;
  double t1901;
  double t1914;
  double t1937;
  double t1945;
  double t1953;
  double t1961;
  double t1968;
  double t1969;
  double t1972;
  double t1973;
  double t1976;
  double t1977;
  double t1948;
  double t1970;
  double t1979;
  double t1984;
  double t1990;
  double t1992;
  double t1993;
  double t1994;
  double t2007;
  double t2020;
  double t2031;
  double t2032;
  double t1986;
  double t2003;
  double t2035;
  double t2036;
  double t2042;
  double t2044;
  double t2047;
  double t2051;
  double t2063;
  double t2070;
  double t2073;
  double t2082;
  double t1070;
  double t1165;
  double t1270;
  double t1282;
  double t1292;
  double t1297;
  double t1308;
  double t1315;
  double t2170;
  double t2177;
  double t2181;
  double t2183;
  double t2191;
  double t2193;
  double t1695;
  double t1729;
  double t1742;
  double t1743;
  double t1767;
  double t1768;
  double t1793;
  double t1801;
  double t2040;
  double t2056;
  double t2117;
  double t2118;
  double t2134;
  double t2136;
  double t2147;
  double t2150;
  double t2180;
  double t2187;
  double t2194;
  double t2198;
  double t2214;
  double t2218;
  double t2223;
  double t2224;
  double t2244;
  double t2246;
  double t2248;
  double t2250;
  double t2426;
  double t2448;
  double t2403;
  double t2314;
  double t2315;
  double t2316;
  double t2318;
  double t2321;
  double t2325;
  double t2344;
  double t2345;
  double t2348;
  double t2351;
  double t2353;
  double t2357;
  double t2360;
  double t2363;
  double t2366;
  double t2369;
  double t2372;
  double t2378;
  double t2398;
  double t2401;
  double t2404;
  double t2421;
  double t2427;
  double t2431;
  double t2433;
  double t2442;
  double t2444;
  double t2445;
  double t2446;
  double t2451;
  double t2454;
  double t2462;
  double t2474;
  double t2477;
  double t2478;
  double t2483;
  double t2485;
  double t2486;
  double t2487;
  double t2490;
  double t2491;
  double t2494;
  double t2495;
  double t2499;
  double t2503;
  double t2504;
  double t2506;
  double t2514;
  double t2516;
  double t2517;
  double t2522;
  double t2545;
  double t2554;
  double t2557;
  double t2558;
  double t2565;
  double t2567;
  double t2572;
  double t2575;
  double t2581;
  double t2593;
  double t2594;
  double t2595;
  double t2600;
  double t2604;
  double t2607;
  double t2608;
  double t2610;
  double t2611;
  double t2613;
  double t2614;
  double t2617;
  double t2619;
  double t2623;
  double t2625;
  double t2630;
  double t2631;
  double t2636;
  double t2638;
  double t2642;
  double t2644;
  double t2657;
  double t2659;
  double t2669;
  double t2671;
  double t2672;
  double t2674;
  t259 = Cos(var1[3]);
  t225 = Cos(var1[5]);
  t264 = Sin(var1[4]);
  t232 = Sin(var1[3]);
  t267 = Sin(var1[5]);
  t216 = Cos(var1[7]);
  t220 = -1.*t216;
  t221 = 1. + t220;
  t223 = Cos(var1[6]);
  t292 = t259*t225*t264;
  t293 = t232*t267;
  t297 = t292 + t293;
  t251 = -1.*t225*t232;
  t269 = t259*t264*t267;
  t270 = t251 + t269;
  t300 = Sin(var1[6]);
  t210 = Cos(var1[8]);
  t211 = -1.*t210;
  t212 = 1. + t211;
  t276 = t223*t270;
  t304 = -1.*t297*t300;
  t305 = t276 + t304;
  t316 = t223*t297;
  t318 = t270*t300;
  t320 = t316 + t318;
  t323 = Cos(var1[4]);
  t324 = Sin(var1[7]);
  t404 = -1.000000637725*t221;
  t405 = 1. + t404;
  t409 = t259*t323*t405;
  t413 = -0.930418*t324;
  t424 = 0. + t413;
  t439 = t305*t424;
  t440 = -0.366501*t324;
  t451 = 0. + t440;
  t461 = t320*t451;
  t465 = t409 + t439 + t461;
  t307 = -0.340999127418*t221*t305;
  t309 = -0.134322983001*t221;
  t312 = 1. + t309;
  t321 = t312*t320;
  t325 = 0.366501*t324;
  t326 = 0. + t325;
  t338 = t259*t323*t326;
  t344 = t307 + t321 + t338;
  t466 = Sin(var1[8]);
  t358 = -0.8656776547239999*t221;
  t360 = 1. + t358;
  t361 = t360*t305;
  t368 = -0.340999127418*t221*t320;
  t370 = 0.930418*t324;
  t391 = 0. + t370;
  t393 = t259*t323*t391;
  t397 = t361 + t368 + t393;
  t182 = Cos(var1[9]);
  t191 = -1.*t182;
  t192 = 1. + t191;
  t168 = Sin(var1[10]);
  t345 = 0.340999127418*t212*t344;
  t355 = -0.134322983001*t212;
  t356 = 1. + t355;
  t399 = t356*t397;
  t472 = -0.366501*t466;
  t474 = 0. + t472;
  t478 = t465*t474;
  t498 = t345 + t399 + t478;
  t505 = Sin(var1[9]);
  t532 = -1.000000637725*t212;
  t539 = 1. + t532;
  t544 = t539*t465;
  t553 = -0.930418*t466;
  t556 = 0. + t553;
  t558 = t344*t556;
  t572 = 0.366501*t466;
  t573 = 0. + t572;
  t575 = t397*t573;
  t577 = t544 + t558 + t575;
  t597 = -0.8656776547239999*t212;
  t604 = 1. + t597;
  t610 = t604*t344;
  t617 = 0.340999127418*t212*t397;
  t618 = 0.930418*t466;
  t619 = 0. + t618;
  t621 = t465*t619;
  t624 = t610 + t617 + t621;
  t781 = Cos(var1[10]);
  t784 = -1.*t781;
  t796 = 1. + t784;
  t504 = 0.340999127418*t192*t498;
  t525 = -0.930418*t505;
  t528 = 0. + t525;
  t580 = t528*t577;
  t583 = -0.8656776547239999*t192;
  t586 = 1. + t583;
  t648 = t586*t624;
  t650 = t504 + t580 + t648;
  t673 = -0.134322983001*t192;
  t676 = 1. + t673;
  t687 = t676*t498;
  t709 = 0.366501*t505;
  t730 = 0. + t709;
  t742 = t730*t577;
  t745 = 0.340999127418*t192*t624;
  t747 = t687 + t742 + t745;
  t835 = -0.366501*t505;
  t838 = 0. + t835;
  t846 = t838*t498;
  t850 = -1.000000637725*t192;
  t858 = 1. + t850;
  t859 = t858*t577;
  t866 = 0.930418*t505;
  t869 = 0. + t866;
  t871 = t869*t624;
  t881 = t846 + t859 + t871;
  t903 = Cos(var1[11]);
  t905 = -1.*t903;
  t917 = 1. + t905;
  t55 = Cos(var1[12]);
  t67 = -1.*t55;
  t74 = 1. + t67;
  t99 = Sin(var1[11]);
  t173 = 0.930418*t168;
  t177 = 0. + t173;
  t668 = t177*t650;
  t669 = -0.366501*t168;
  t670 = 0. + t669;
  t758 = t670*t747;
  t811 = -1.000000637725*t796;
  t831 = 1. + t811;
  t882 = t831*t881;
  t895 = t668 + t758 + t882;
  t918 = -0.8656776547239999*t796;
  t921 = 1. + t918;
  t923 = t921*t650;
  t924 = 0.340999127418*t796*t747;
  t926 = -0.930418*t168;
  t927 = 0. + t926;
  t934 = t927*t881;
  t939 = t923 + t924 + t934;
  t1002 = 0.340999127418*t796*t650;
  t1003 = -0.134322983001*t796;
  t1004 = 1. + t1003;
  t1011 = t1004*t747;
  t1031 = 0.366501*t168;
  t1036 = 0. + t1031;
  t1046 = t1036*t881;
  t1049 = t1002 + t1011 + t1046;
  t1102 = Sin(var1[12]);
  t1087 = -0.120666640478*t74;
  t135 = 0.366501*t99;
  t163 = 0. + t135;
  t896 = t163*t895;
  t955 = 0.340999127418*t917*t939;
  t956 = -0.134322983001*t917;
  t1000 = 1. + t956;
  t1054 = t1000*t1049;
  t1064 = t896 + t955 + t1054;
  t1131 = -0.930418*t99;
  t1136 = 0. + t1131;
  t1150 = t1136*t895;
  t1153 = -0.8656776547239999*t917;
  t1154 = 1. + t1153;
  t1157 = t1154*t939;
  t1158 = 0.340999127418*t917*t1049;
  t1163 = t1150 + t1157 + t1158;
  t1195 = -1.000000637725*t917;
  t1200 = 1. + t1195;
  t1207 = t1200*t895;
  t1214 = 0.930418*t99;
  t1225 = 0. + t1214;
  t1230 = t1225*t939;
  t1240 = -0.366501*t99;
  t1250 = 0. + t1240;
  t1257 = t1250*t1049;
  t1261 = t1207 + t1230 + t1257;
  t79 = -0.952469601425*t74;
  t96 = 1. + t79;
  t1368 = t225*t232*t264;
  t1378 = -1.*t259*t267;
  t1382 = t1368 + t1378;
  t1344 = t259*t225;
  t1345 = t232*t264*t267;
  t1350 = t1344 + t1345;
  t1353 = t223*t1350;
  t1391 = -1.*t1382*t300;
  t1393 = t1353 + t1391;
  t1407 = t223*t1382;
  t1410 = t1350*t300;
  t1419 = t1407 + t1410;
  t1474 = t323*t405*t232;
  t1476 = t1393*t424;
  t1488 = t1419*t451;
  t1498 = t1474 + t1476 + t1488;
  t1402 = -0.340999127418*t221*t1393;
  t1422 = t312*t1419;
  t1425 = t323*t232*t326;
  t1426 = t1402 + t1422 + t1425;
  t1432 = t360*t1393;
  t1452 = -0.340999127418*t221*t1419;
  t1453 = t323*t232*t391;
  t1454 = t1432 + t1452 + t1453;
  t1429 = 0.340999127418*t212*t1426;
  t1473 = t356*t1454;
  t1514 = t1498*t474;
  t1519 = t1429 + t1473 + t1514;
  t1525 = t539*t1498;
  t1532 = t1426*t556;
  t1545 = t1454*t573;
  t1547 = t1525 + t1532 + t1545;
  t1558 = t604*t1426;
  t1563 = 0.340999127418*t212*t1454;
  t1570 = t1498*t619;
  t1574 = t1558 + t1563 + t1570;
  t1524 = 0.340999127418*t192*t1519;
  t1550 = t528*t1547;
  t1575 = t586*t1574;
  t1588 = t1524 + t1550 + t1575;
  t1597 = t676*t1519;
  t1600 = t730*t1547;
  t1601 = 0.340999127418*t192*t1574;
  t1603 = t1597 + t1600 + t1601;
  t1617 = t838*t1519;
  t1618 = t858*t1547;
  t1621 = t869*t1574;
  t1624 = t1617 + t1618 + t1621;
  t1114 = 0.803828*t1102;
  t1118 = t1087 + t1114;
  t1595 = t177*t1588;
  t1612 = t670*t1603;
  t1637 = t831*t1624;
  t1638 = t1595 + t1612 + t1637;
  t1648 = t921*t1588;
  t1652 = 0.340999127418*t796*t1603;
  t1655 = t927*t1624;
  t1657 = t1648 + t1652 + t1655;
  t1663 = 0.340999127418*t796*t1588;
  t1674 = t1004*t1603;
  t1675 = t1036*t1624;
  t1687 = t1663 + t1674 + t1675;
  t1167 = -0.175248972904*t74;
  t1174 = -0.553471*t1102;
  t1184 = t1167 + t1174;
  t1287 = -0.803828*t1102;
  t1289 = t1087 + t1287;
  t1640 = t163*t1638;
  t1662 = 0.340999127418*t917*t1657;
  t1688 = t1000*t1687;
  t1694 = t1640 + t1662 + t1688;
  t1293 = -0.693671301908*t74;
  t1296 = 1. + t1293;
  t1701 = t1136*t1638;
  t1713 = t1154*t1657;
  t1722 = 0.340999127418*t917*t1687;
  t1723 = t1701 + t1713 + t1722;
  t1299 = 0.444895486988*t74;
  t1301 = -0.218018*t1102;
  t1307 = t1299 + t1301;
  t1732 = t1200*t1638;
  t1737 = t1225*t1657;
  t1738 = t1250*t1687;
  t1740 = t1732 + t1737 + t1738;
  t1816 = t323*t223*t267;
  t1826 = -1.*t323*t225*t300;
  t1828 = t1816 + t1826;
  t1837 = t323*t225*t223;
  t1841 = t323*t267*t300;
  t1842 = t1837 + t1841;
  t1861 = -1.*t405*t264;
  t1872 = t1828*t424;
  t1873 = t1842*t451;
  t1876 = t1861 + t1872 + t1873;
  t1836 = -0.340999127418*t221*t1828;
  t1843 = t312*t1842;
  t1846 = -1.*t264*t326;
  t1849 = t1836 + t1843 + t1846;
  t1853 = t360*t1828;
  t1855 = -0.340999127418*t221*t1842;
  t1857 = -1.*t264*t391;
  t1859 = t1853 + t1855 + t1857;
  t1851 = 0.340999127418*t212*t1849;
  t1860 = t356*t1859;
  t1880 = t1876*t474;
  t1888 = t1851 + t1860 + t1880;
  t1904 = t539*t1876;
  t1905 = t1849*t556;
  t1907 = t1859*t573;
  t1909 = t1904 + t1905 + t1907;
  t1916 = t604*t1849;
  t1924 = 0.340999127418*t212*t1859;
  t1927 = t1876*t619;
  t1936 = t1916 + t1924 + t1927;
  t1901 = 0.340999127418*t192*t1888;
  t1914 = t528*t1909;
  t1937 = t586*t1936;
  t1945 = t1901 + t1914 + t1937;
  t1953 = t676*t1888;
  t1961 = t730*t1909;
  t1968 = 0.340999127418*t192*t1936;
  t1969 = t1953 + t1961 + t1968;
  t1972 = t838*t1888;
  t1973 = t858*t1909;
  t1976 = t869*t1936;
  t1977 = t1972 + t1973 + t1976;
  t1948 = t177*t1945;
  t1970 = t670*t1969;
  t1979 = t831*t1977;
  t1984 = t1948 + t1970 + t1979;
  t1990 = t921*t1945;
  t1992 = 0.340999127418*t796*t1969;
  t1993 = t927*t1977;
  t1994 = t1990 + t1992 + t1993;
  t2007 = 0.340999127418*t796*t1945;
  t2020 = t1004*t1969;
  t2031 = t1036*t1977;
  t2032 = t2007 + t2020 + t2031;
  t1986 = t163*t1984;
  t2003 = 0.340999127418*t917*t1994;
  t2035 = t1000*t2032;
  t2036 = t1986 + t2003 + t2035;
  t2042 = t1136*t1984;
  t2044 = t1154*t1994;
  t2047 = 0.340999127418*t917*t2032;
  t2051 = t2042 + t2044 + t2047;
  t2063 = t1200*t1984;
  t2070 = t1225*t1994;
  t2073 = t1250*t2032;
  t2082 = t2063 + t2070 + t2073;
  t1070 = t96*t1064;
  t1165 = t1118*t1163;
  t1270 = t1184*t1261;
  t1282 = t1070 + t1165 + t1270;
  t1292 = t1289*t1064;
  t1297 = t1296*t1163;
  t1308 = t1307*t1261;
  t1315 = t1292 + t1297 + t1308;
  t2170 = 0.553471*t1102;
  t2177 = t1167 + t2170;
  t2181 = 0.218018*t1102;
  t2183 = t1299 + t2181;
  t2191 = -0.353861996165*t74;
  t2193 = 1. + t2191;
  t1695 = t96*t1694;
  t1729 = t1118*t1723;
  t1742 = t1184*t1740;
  t1743 = t1695 + t1729 + t1742;
  t1767 = t1289*t1694;
  t1768 = t1296*t1723;
  t1793 = t1307*t1740;
  t1801 = t1767 + t1768 + t1793;
  t2040 = t96*t2036;
  t2056 = t1118*t2051;
  t2117 = t1184*t2082;
  t2118 = t2040 + t2056 + t2117;
  t2134 = t1289*t2036;
  t2136 = t1296*t2051;
  t2147 = t1307*t2082;
  t2150 = t2134 + t2136 + t2147;
  t2180 = t2177*t1064;
  t2187 = t2183*t1163;
  t2194 = t2193*t1261;
  t2198 = t2180 + t2187 + t2194;
  t2214 = t2177*t1694;
  t2218 = t2183*t1723;
  t2223 = t2193*t1740;
  t2224 = t2214 + t2218 + t2223;
  t2244 = t2177*t2036;
  t2246 = t2183*t2051;
  t2248 = t2193*t2082;
  t2250 = t2244 + t2246 + t2248;
  t2426 = 0.120666640478*t74;
  t2448 = -0.444895486988*t74;
  t2403 = 0.175248972904*t74;
  t2314 = -1.*t223;
  t2315 = 1. + t2314;
  t2316 = 0.091*t2315;
  t2318 = 0. + t2316;
  t2321 = 0.091*t300;
  t2325 = 0. + t2321;
  t2344 = -0.04500040093286238*t221;
  t2345 = 0.07877663122399998*t424;
  t2348 = 0.031030906668*t451;
  t2351 = 0. + t2344 + t2345 + t2348;
  t2353 = -3.2909349868922137e-7*var1[7];
  t2357 = 0.03103092645718495*t221;
  t2360 = -0.045000372235*t326;
  t2363 = t2353 + t2357 + t2360;
  t2366 = 1.296332362046933e-7*var1[7];
  t2369 = 0.07877668146182712*t221;
  t2372 = -0.045000372235*t391;
  t2378 = t2366 + t2369 + t2372;
  t2398 = 2.838136523330542e-8*var1[12];
  t2401 = 0.2845150083511607*t74;
  t2404 = t2403 + t1174;
  t2421 = 0.44503472296900004*t2404;
  t2427 = t2426 + t1114;
  t2431 = -0.5286755231320001*t2427;
  t2433 = t2398 + t2401 + t2421 + t2431;
  t2442 = -7.20503013377005e-8*var1[12];
  t2444 = -0.3667270384178674*t74;
  t2445 = t2426 + t1287;
  t2446 = 0.29871295412*t2445;
  t2451 = t2448 + t1301;
  t2454 = 0.44503472296900004*t2451;
  t2462 = t2442 + t2444 + t2446 + t2454;
  t2474 = -1.0464152525368286e-7*var1[12];
  t2477 = 0.15748087543254813*t74;
  t2478 = t2448 + t2181;
  t2483 = -0.5286755231320001*t2478;
  t2485 = t2403 + t2170;
  t2486 = 0.29871295412*t2485;
  t2487 = t2474 + t2477 + t2483 + t2486;
  t2490 = 0.06199697675299678*t917;
  t2491 = 0.324290713329*t1250;
  t2494 = -0.823260828522*t1225;
  t2495 = 0. + t2490 + t2491 + t2494;
  t2499 = 2.95447451120871e-8*var1[11];
  t2503 = -0.8232613535360118*t917;
  t2504 = 0.061996937216*t1136;
  t2506 = t2499 + t2503 + t2504;
  t2514 = 7.500378623168247e-8*var1[11];
  t2516 = 0.32429092013729516*t917;
  t2517 = 0.061996937216*t163;
  t2522 = t2514 + t2516 + t2517;
  t2545 = 2.281945176511838e-8*var1[10];
  t2554 = -0.5905366811997648*t796;
  t2557 = -0.262809976934*t927;
  t2558 = t2545 + t2554 + t2557;
  t2565 = 5.7930615939377813e-8*var1[10];
  t2567 = 0.23261833304643187*t796;
  t2572 = -0.262809976934*t1036;
  t2575 = t2565 + t2567 + t2572;
  t2581 = -0.26281014453449253*t796;
  t2593 = 0.23261818470000004*t670;
  t2594 = -0.5905363046000001*t177;
  t2595 = 0. + t2581 + t2593 + t2594;
  t2600 = 3.2909349868922137e-7*var1[8];
  t2604 = 0.055653945343889656*t212;
  t2607 = -0.045000372235*t474;
  t2608 = t2600 + t2604 + t2607;
  t2610 = -1.5981976069815686e-7*var1[9];
  t2611 = 0.08675267452931407*t192;
  t2613 = 0.039853013046*t730;
  t2614 = t2610 + t2611 + t2613;
  t2617 = -0.04500040093286238*t212;
  t2619 = -0.141285834136*t556;
  t2623 = 0.055653909852*t573;
  t2625 = 0. + t2617 + t2619 + t2623;
  t2630 = 0.039853038461262744*t192;
  t2631 = 0.086752619205*t838;
  t2636 = -0.22023459268999998*t869;
  t2638 = 0. + t2630 + t2631 + t2636;
  t2642 = 1.296332362046933e-7*var1[8];
  t2644 = -0.14128592423750855*t212;
  t2657 = -0.045000372235*t619;
  t2659 = t2642 + t2644 + t2657;
  t2669 = -6.295460977284962e-8*var1[9];
  t2671 = -0.22023473313910558*t192;
  t2672 = 0.039853013046*t528;
  t2674 = t2669 + t2671 + t2672;
  p_output1[0]=0.930418*t1282 + 0.366501*t1315;
  p_output1[1]=0.930418*t1743 + 0.366501*t1801;
  p_output1[2]=0.930418*t2118 + 0.366501*t2150;
  p_output1[3]=0.;
  p_output1[4]=-0.294604*t1282 + 0.747896*t1315 - 0.594863*t2198;
  p_output1[5]=-0.294604*t1743 + 0.747896*t1801 - 0.594863*t2224;
  p_output1[6]=-0.294604*t2118 + 0.747896*t2150 - 0.594863*t2250;
  p_output1[7]=0.;
  p_output1[8]=-0.218018*t1282 + 0.553471*t1315 + 0.803828*t2198;
  p_output1[9]=-0.218018*t1743 + 0.553471*t1801 + 0.803828*t2224;
  p_output1[10]=-0.218018*t2118 + 0.553471*t2150 + 0.803828*t2250;
  p_output1[11]=0.;
  p_output1[12]=0. + 0.402602*t1282 - 0.792413*t1315 + 0.061997*t2198 + t1064*t2433 + t1163*t2462 + t1261*t2487 + t1049*t2522 + t2318*t270 + t2325*t297 + t2378*t305 + t2363*t320 + t2351*t259*t323 + t2659*t344 + t2608*t397 + t2625*t465 + t2614*t498 + t2638*t577 + t2674*t624 + t2558*t650 + t2575*t747 + t2595*t881 + t2495*t895 + t2506*t939 + var1[0];
  p_output1[13]=0. + 0.402602*t1743 - 0.792413*t1801 + 0.061997*t2224 + t1350*t2318 + t1382*t2325 + t1419*t2363 + t1393*t2378 + t1694*t2433 + t1723*t2462 + t1740*t2487 + t1638*t2495 + t1657*t2506 + t1687*t2522 + t1588*t2558 + t1603*t2575 + t1624*t2595 + t1454*t2608 + t1519*t2614 + t1498*t2625 + t1547*t2638 + t1426*t2659 + t1574*t2674 + t232*t2351*t323 + var1[1];
  p_output1[14]=0. + 0.402602*t2118 - 0.792413*t2150 + 0.061997*t2250 + t1842*t2363 + t1828*t2378 + t2036*t2433 + t2051*t2462 + t2082*t2487 + t1984*t2495 + t1994*t2506 + t2032*t2522 + t1945*t2558 + t1969*t2575 + t1977*t2595 + t1859*t2608 + t1888*t2614 + t1876*t2625 + t1909*t2638 - 1.*t2351*t264 + t1849*t2659 + t1936*t2674 + t225*t2325*t323 + t2318*t267*t323 + var1[2];
  p_output1[15]=1.;
}



void T_toe_roll_joint_left_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
