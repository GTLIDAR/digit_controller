/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:21:57 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dJs_right_shoulder_yaw_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t87;
  double t125;
  double t295;
  double t312;
  double t835;
  double t882;
  double t1029;
  double t1057;
  double t1081;
  double t1320;
  double t1328;
  double t1334;
  double t2045;
  double t2034;
  double t1670;
  double t1694;
  double t1704;
  double t2118;
  double t2122;
  double t2124;
  double t1270;
  double t1273;
  double t1280;
  double t2317;
  double t2323;
  double t1591;
  double t1604;
  double t1628;
  double t2036;
  double t2068;
  double t2070;
  double t2341;
  double t2381;
  double t2387;
  double t2446;
  double t2447;
  double t2448;
  double t2093;
  double t2098;
  double t2099;
  double t2524;
  double t2545;
  double t2554;
  double t2315;
  double t2391;
  double t2451;
  double t2455;
  double t1101;
  double t1111;
  double t1154;
  double t2636;
  double t2112;
  double t2251;
  double t2788;
  double t2814;
  double t2820;
  double t2933;
  double t2938;
  double t2943;
  double t2865;
  double t2873;
  double t2876;
  double t2831;
  double t2466;
  double t2475;
  double t2477;
  double t2901;
  double t2913;
  double t2927;
  double t3140;
  double t3142;
  double t3153;
  double t3165;
  double t3181;
  double t2148;
  double t2151;
  double t2152;
  double t3272;
  double t3292;
  double t3299;
  double t3159;
  double t3191;
  double t3202;
  double t3073;
  double t3076;
  double t3444;
  double t3451;
  double t3457;
  double t3474;
  double t3475;
  double t3491;
  double t3049;
  double t3052;
  double t3056;
  double t3208;
  double t3227;
  double t3256;
  double t2659;
  double t2709;
  double t2997;
  double t2832;
  double t2852;
  double t2776;
  double t2780;
  double t3788;
  double t3807;
  double t3852;
  double t2769;
  double t2770;
  double t2771;
  double t3759;
  double t3776;
  double t3783;
  double t3892;
  double t3898;
  double t3904;
  double t3908;
  double t3885;
  double t3887;
  double t3888;
  double t3095;
  double t3104;
  double t3107;
  double t4005;
  double t4008;
  double t4036;
  double t3972;
  double t3983;
  double t3986;
  double t3421;
  double t3423;
  double t3425;
  double t3551;
  double t3554;
  double t3555;
  double t3368;
  double t3371;
  double t3374;
  double t3503;
  double t3504;
  double t3510;
  double t4154;
  double t4155;
  double t4157;
  double t3382;
  double t3390;
  double t3393;
  double t3602;
  double t3604;
  double t3605;
  double t4174;
  double t4176;
  double t4184;
  double t2246;
  double t2262;
  double t4266;
  double t4270;
  double t4278;
  double t2265;
  double t2268;
  double t2312;
  double t4496;
  double t4433;
  double t4435;
  double t4437;
  double t4531;
  double t4537;
  double t4560;
  double t4563;
  double t4513;
  double t4519;
  double t4520;
  double t4621;
  double t4629;
  double t4634;
  double t4649;
  double t4653;
  double t4657;
  double t4746;
  double t4747;
  double t4752;
  double t4707;
  double t4709;
  double t4710;
  double t4801;
  double t4822;
  double t4826;
  double t4829;
  double t3712;
  double t3723;
  double t3737;
  double t5129;
  double t5132;
  double t5133;
  double t5109;
  double t5114;
  double t5121;
  double t5140;
  double t5142;
  double t5177;
  double t5179;
  double t5228;
  double t5230;
  double t5273;
  double t5280;
  double t5284;
  double t5298;
  double t5306;
  double t5320;
  double t5367;
  double t5393;
  double t5433;
  double t5122;
  double t5135;
  double t5143;
  double t5161;
  double t5553;
  double t5559;
  double t5565;
  double t5572;
  double t5574;
  double t5577;
  double t5578;
  double t5586;
  double t5597;
  double t5609;
  double t5615;
  double t5616;
  double t5573;
  double t5593;
  double t5618;
  double t5626;
  double t5180;
  double t5234;
  double t5235;
  double t5239;
  double t5649;
  double t5650;
  double t5653;
  double t5655;
  double t5281;
  double t5300;
  double t5328;
  double t5349;
  double t5634;
  double t5844;
  double t5854;
  double t5860;
  double t5867;
  double t5871;
  double t5881;
  double t5822;
  double t5935;
  double t5937;
  double t5944;
  double t5948;
  double t5897;
  double t5901;
  double t5903;
  double t5906;
  double t6314;
  double t6331;
  double t6332;
  double t6339;
  double t6343;
  double t6347;
  double t5994;
  double t6000;
  double t6004;
  double t6176;
  double t6184;
  double t6186;
  double t6189;
  double t6654;
  double t6666;
  double t6686;
  double t6687;
  double t6699;
  double t6720;
  double t6737;
  double t6742;
  double t7140;
  double t7145;
  double t7147;
  double t7159;
  double t7162;
  double t7169;
  double t7172;
  double t7174;
  double t7188;
  double t7207;
  double t7217;
  double t7219;
  double t7221;
  double t7149;
  double t7171;
  double t7194;
  double t7198;
  double t5631;
  double t5636;
  double t5638;
  double t5677;
  double t5683;
  double t5687;
  double t5690;
  double t5703;
  double t5714;
  double t5719;
  double t5724;
  double t5837;
  double t5840;
  double t5976;
  double t5981;
  double t5982;
  double t6059;
  double t6066;
  double t6068;
  double t5764;
  double t5777;
  double t5918;
  double t5919;
  double t7560;
  double t7561;
  double t7572;
  double t7575;
  double t5783;
  double t5785;
  double t5792;
  double t7581;
  double t7582;
  double t7583;
  double t7589;
  double t7593;
  double t7594;
  double t6017;
  double t6024;
  double t6034;
  double t7619;
  double t7626;
  double t7631;
  double t7634;
  double t5802;
  double t5809;
  double t5810;
  double t6081;
  double t6155;
  double t6157;
  double t6296;
  double t6300;
  double t6302;
  double t6372;
  double t6397;
  double t6398;
  double t6429;
  double t6431;
  double t6439;
  double t6236;
  double t6239;
  double t6254;
  double t6354;
  double t6355;
  double t6360;
  double t6257;
  double t6258;
  double t6269;
  double t7723;
  double t7724;
  double t7734;
  double t7736;
  double t7738;
  double t7740;
  double t6415;
  double t6416;
  double t6276;
  double t6283;
  double t6290;
  double t6453;
  double t6455;
  double t6464;
  double t6630;
  double t6640;
  double t6641;
  double t6645;
  double t6784;
  double t6785;
  double t6787;
  double t6795;
  double t6878;
  double t6886;
  double t6888;
  double t6895;
  double t6523;
  double t6525;
  double t6526;
  double t6528;
  double t6758;
  double t6759;
  double t6761;
  double t6768;
  double t6546;
  double t6551;
  double t6559;
  double t6562;
  double t7797;
  double t7798;
  double t7799;
  double t7807;
  double t7817;
  double t7819;
  double t7824;
  double t7828;
  double t6837;
  double t6840;
  double t6844;
  double t6845;
  double t6574;
  double t6582;
  double t6583;
  double t6597;
  double t6901;
  double t6929;
  double t6931;
  double t6932;
  double t7086;
  double t7088;
  double t7091;
  double t7095;
  double t7288;
  double t7294;
  double t7300;
  double t7301;
  double t7372;
  double t7379;
  double t7384;
  double t7396;
  double t6982;
  double t6984;
  double t6988;
  double t6995;
  double t7117;
  double t7119;
  double t7122;
  double t7124;
  double t7943;
  double t7950;
  double t7951;
  double t7953;
  double t7266;
  double t7268;
  double t7273;
  double t7277;
  double t7927;
  double t7929;
  double t7931;
  double t7933;
  double t6999;
  double t7002;
  double t7008;
  double t7038;
  double t7343;
  double t7349;
  double t7354;
  double t7358;
  double t7062;
  double t7071;
  double t7076;
  double t7077;
  double t5488;
  double t5489;
  double t5490;
  double t5502;
  double t5509;
  double t5514;
  double t7999;
  double t8001;
  double t8003;
  double t5527;
  double t5534;
  double t5538;
  double t8109;
  double t8112;
  double t8114;
  double t8122;
  double t8133;
  double t8142;
  double t8148;
  double t8154;
  double t8160;
  double t8163;
  double t8165;
  double t8166;
  double t8167;
  double t8223;
  double t8224;
  double t8225;
  double t8227;
  double t8230;
  double t8233;
  double t8299;
  double t8301;
  double t8302;
  double t8308;
  double t8314;
  double t8315;
  double t8350;
  double t8354;
  double t8355;
  double t8356;
  double t8423;
  double t8424;
  double t8426;
  double t8430;
  double t8414;
  double t8417;
  double t8420;
  double t8421;
  double t7531;
  double t7533;
  double t7535;
  double t7541;
  t87 = Cos(var1[3]);
  t125 = Sin(var1[3]);
  t295 = Cos(var1[4]);
  t312 = Sin(var1[4]);
  t835 = Cos(var1[5]);
  t882 = Sin(var1[5]);
  t1029 = t87*t835*t312;
  t1057 = t125*t882;
  t1081 = t1029 + t1057;
  t1320 = -1.*t87*t835;
  t1328 = -1.*t125*t312*t882;
  t1334 = t1320 + t1328;
  t2045 = Cos(var1[24]);
  t2034 = Sin(var1[24]);
  t1670 = t835*t125*t312;
  t1694 = -1.*t87*t882;
  t1704 = t1670 + t1694;
  t2118 = t87*t835;
  t2122 = t125*t312*t882;
  t2124 = t2118 + t2122;
  t1270 = -1.*t835*t125*t312;
  t1273 = t87*t882;
  t1280 = t1270 + t1273;
  t2317 = -1.*t2045;
  t2323 = 1. + t2317;
  t1591 = -1.*t835*t125;
  t1604 = t87*t312*t882;
  t1628 = t1591 + t1604;
  t2036 = -1.*t295*t835*t2034;
  t2068 = t2045*t295*t882;
  t2070 = t2036 + t2068;
  t2341 = 0.4*t2323;
  t2381 = -0.12*t2034;
  t2387 = 0. + t2341 + t2381;
  t2446 = -0.12*t2323;
  t2447 = -0.4*t2034;
  t2448 = 0. + t2446 + t2447;
  t2093 = t2045*t295*t835;
  t2098 = t295*t2034*t882;
  t2099 = t2093 + t2098;
  t2524 = t2387*t1081;
  t2545 = t2448*t1628;
  t2554 = t2524 + t2545;
  t2315 = -1.*var1[2];
  t2391 = -1.*t295*t835*t2387;
  t2451 = -1.*t295*t2448*t882;
  t2455 = 0. + t2315 + t2391 + t2451;
  t1101 = t835*t125;
  t1111 = -1.*t87*t312*t882;
  t1154 = t1101 + t1111;
  t2636 = t2045*t1081;
  t2112 = t2034*t1704;
  t2251 = t2045*t1334;
  t2788 = t2448*t1704;
  t2814 = t2387*t1334;
  t2820 = t2788 + t2814;
  t2933 = t2387*t1704;
  t2938 = t2448*t2124;
  t2943 = 0. + var1[1] + t2933 + t2938;
  t2865 = -1.*t295*t835*t2448;
  t2873 = t295*t2387*t882;
  t2876 = t2865 + t2873;
  t2831 = t2045*t1704;
  t2466 = -1.*t2034*t1081;
  t2475 = t2045*t1628;
  t2477 = t2466 + t2475;
  t2901 = -1.*t2034*t1704;
  t2913 = t2045*t2124;
  t2927 = t2901 + t2913;
  t3140 = -0.12*t2045;
  t3142 = 0.4*t2034;
  t3153 = t3140 + t3142;
  t3165 = -0.4*t2045;
  t3181 = t3165 + t2381;
  t2148 = -1.*t2045*t1704;
  t2151 = -1.*t2034*t2124;
  t2152 = t2148 + t2151;
  t3272 = t3153*t1704;
  t3292 = t3181*t2124;
  t3299 = t3272 + t3292;
  t3159 = -1.*t295*t835*t3153;
  t3191 = -1.*t295*t3181*t882;
  t3202 = t3159 + t3191;
  t3073 = t2034*t2124;
  t3076 = t2831 + t3073;
  t3444 = t295*t835*t2387*t125;
  t3451 = t295*t2448*t125*t882;
  t3457 = t3444 + t3451;
  t3474 = t835*t2387*t312;
  t3475 = t2448*t312*t882;
  t3491 = t3474 + t3475;
  t3049 = t295*t835*t2034;
  t3052 = -1.*t2045*t295*t882;
  t3056 = t3049 + t3052;
  t3208 = -1.*t2045*t295*t835;
  t3227 = -1.*t295*t2034*t882;
  t3256 = t3208 + t3227;
  t2659 = t2034*t1628;
  t2709 = t2636 + t2659;
  t2997 = t2112 + t2251;
  t2832 = -1.*t2034*t1334;
  t2852 = t2831 + t2832;
  t2776 = -1.*t2034*t1154;
  t2780 = t2636 + t2776;
  t3788 = t295*t835*t2387;
  t3807 = t295*t2448*t882;
  t3852 = 0. + var1[2] + t3788 + t3807;
  t2769 = t2034*t1081;
  t2770 = t2045*t1154;
  t2771 = t2769 + t2770;
  t3759 = -1.*t2448*t1081;
  t3776 = -1.*t2387*t1154;
  t3783 = t3759 + t3776;
  t3892 = -1.*var1[0];
  t3898 = -1.*t2387*t1081;
  t3904 = -1.*t2448*t1628;
  t3908 = 0. + t3892 + t3898 + t3904;
  t3885 = t295*t835*t2448;
  t3887 = -1.*t295*t2387*t882;
  t3888 = t3885 + t3887;
  t3095 = -1.*t2045*t1081;
  t3104 = -1.*t2034*t1628;
  t3107 = t3095 + t3104;
  t4005 = -1.*t3153*t1081;
  t4008 = -1.*t3181*t1628;
  t4036 = t4005 + t4008;
  t3972 = t295*t835*t3153;
  t3983 = t295*t3181*t882;
  t3986 = t3972 + t3983;
  t3421 = -1.*t295*t835*t2034*t125;
  t3423 = t2045*t295*t125*t882;
  t3425 = t3421 + t3423;
  t3551 = t2045*t295*t835*t125;
  t3554 = t295*t2034*t125*t882;
  t3555 = t3551 + t3554;
  t3368 = -1.*t87*t295*t835*t2034;
  t3371 = t2045*t87*t295*t882;
  t3374 = t3368 + t3371;
  t3503 = t835*t2034*t312;
  t3504 = -1.*t2045*t312*t882;
  t3510 = t3503 + t3504;
  t4154 = -1.*t87*t295*t835*t2387;
  t4155 = -1.*t87*t295*t2448*t882;
  t4157 = t4154 + t4155;
  t3382 = t2045*t87*t295*t835;
  t3390 = t87*t295*t2034*t882;
  t3393 = t3382 + t3390;
  t3602 = -1.*t2045*t835*t312;
  t3604 = -1.*t2034*t312*t882;
  t3605 = t3602 + t3604;
  t4174 = -1.*t835*t2387*t312;
  t4176 = -1.*t2448*t312*t882;
  t4184 = t4174 + t4176;
  t2246 = -1.*t2034*t1280;
  t2262 = t2246 + t2251;
  t4266 = -1.*t2387*t1280;
  t4270 = -1.*t2448*t1334;
  t4278 = t4266 + t4270;
  t2265 = t2045*t1280;
  t2268 = t2034*t1334;
  t2312 = t2265 + t2268;
  t4496 = 0. + var1[0] + t2524 + t2545;
  t4433 = -1.*t295*t835*t2387*t125;
  t4435 = -1.*t295*t2448*t125*t882;
  t4437 = t4433 + t4435;
  t4531 = -1.*var1[1];
  t4537 = -1.*t2387*t1704;
  t4560 = -1.*t2448*t2124;
  t4563 = 0. + t4531 + t4537 + t4560;
  t4513 = t87*t295*t835*t2387;
  t4519 = t87*t295*t2448*t882;
  t4520 = t4513 + t4519;
  t4621 = -1.*t2448*t1704;
  t4629 = -1.*t2387*t1334;
  t4634 = t4621 + t4629;
  t4649 = t2448*t1081;
  t4653 = t2387*t1154;
  t4657 = t4649 + t4653;
  t4746 = -1.*t3153*t1704;
  t4747 = -1.*t3181*t2124;
  t4752 = t4746 + t4747;
  t4707 = t3153*t1081;
  t4709 = t3181*t1628;
  t4710 = t4707 + t4709;
  t4801 = t3898 + t3904;
  t4822 = t2387*t1280;
  t4826 = t2448*t1334;
  t4829 = t4822 + t4826;
  t3712 = -0.994522*t2477;
  t3723 = 0.104528*t2709;
  t3737 = t3712 + t3723;
  t5129 = Cos(var1[25]);
  t5132 = -1.*t5129;
  t5133 = 1. + t5132;
  t5109 = Sin(var1[25]);
  t5114 = -0.994522*t5109;
  t5121 = 0. + t5114;
  t5140 = -0.9890740084840001*t5133;
  t5142 = 1. + t5140;
  t5177 = -0.104528*t5109;
  t5179 = 0. + t5177;
  t5228 = -0.010926102783999999*t5133;
  t5230 = 1. + t5228;
  t5273 = -1.0000001112680001*t5133;
  t5280 = 1. + t5273;
  t5284 = 0.104528*t5109;
  t5298 = 0. + t5284;
  t5306 = 0.994522*t5109;
  t5320 = 0. + t5306;
  t5367 = -1.*t295*t5121*t125;
  t5393 = -1.*t295*t5179*t125;
  t5433 = -1.*t5280*t295*t125;
  t5122 = -1.*t5121*t312;
  t5135 = -0.103955395616*t5133*t2070;
  t5143 = t5142*t2099;
  t5161 = t5122 + t5135 + t5143;
  t5553 = -0.056500534356700764*t5133;
  t5559 = 0.040271188976*t5298;
  t5565 = 0.38315650737400003*t5320;
  t5572 = 0. + t5553 + t5559 + t5565;
  t5574 = 1.1345904784751044e-7*var1[25];
  t5577 = 0.04027119345689465*t5133;
  t5578 = -0.05650052807*t5179;
  t5586 = t5574 + t5577 + t5578;
  t5597 = -1.1924972351948546e-8*var1[25];
  t5609 = 0.38315655000705834*t5133;
  t5615 = -0.05650052807*t5121;
  t5616 = t5597 + t5609 + t5615;
  t5573 = t5572*t312;
  t5593 = -1.*t5586*t2070;
  t5618 = -1.*t5616*t2099;
  t5626 = 0. + t2315 + t2391 + t5573 + t2451 + t5593 + t5618;
  t5180 = -1.*t5179*t312;
  t5234 = t5230*t2070;
  t5235 = -0.103955395616*t5133*t2099;
  t5239 = t5180 + t5234 + t5235;
  t5649 = t87*t295*t5572;
  t5650 = t5586*t2477;
  t5653 = t5616*t2709;
  t5655 = t5649 + t2524 + t2545 + t5650 + t5653;
  t5281 = -1.*t5280*t312;
  t5300 = t5298*t2070;
  t5328 = t5320*t2099;
  t5349 = t5281 + t5300 + t5328;
  t5634 = -0.103955395616*t5133*t2477;
  t5844 = t5616*t2927;
  t5854 = t5586*t2152;
  t5860 = t3272 + t3292 + t5844 + t5854;
  t5867 = -1.*t5616*t2070;
  t5871 = -1.*t5586*t3256;
  t5881 = t3159 + t3191 + t5867 + t5871;
  t5822 = -0.103955395616*t5133*t2927;
  t5935 = t295*t5572*t125;
  t5937 = t5586*t2927;
  t5944 = t5616*t3076;
  t5948 = 0. + var1[1] + t5935 + t2933 + t2938 + t5937 + t5944;
  t5897 = t295*t5179*t125;
  t5901 = t5230*t2927;
  t5903 = -0.103955395616*t5133*t3076;
  t5906 = t5897 + t5901 + t5903;
  t6314 = t5616*t2997;
  t6331 = t5586*t2852;
  t6332 = t2788 + t2814 + t6314 + t6331;
  t6339 = -1.*t5616*t3056;
  t6343 = -1.*t5586*t2099;
  t6347 = t2865 + t2873 + t6339 + t6343;
  t5994 = t295*t5121*t125;
  t6000 = t5142*t3076;
  t6004 = t5994 + t5822 + t6000;
  t6176 = t5280*t295*t125;
  t6184 = t5298*t2927;
  t6186 = t5320*t3076;
  t6189 = t6176 + t6184 + t6186;
  t6654 = -1.*t5572*t125*t312;
  t6666 = t5586*t3425;
  t6686 = t5616*t3555;
  t6687 = t3444 + t6654 + t3451 + t6666 + t6686;
  t6699 = t295*t5572;
  t6720 = -1.*t5586*t3510;
  t6737 = -1.*t5616*t3605;
  t6742 = t6699 + t3474 + t3475 + t6720 + t6737;
  t7140 = 0.3852670428678886*t5129;
  t7145 = -0.056500534356700764*t5109;
  t7147 = t7140 + t7145;
  t7159 = 0.0059058871981009595*t5129;
  t7162 = 0.04027119345689465*t5109;
  t7169 = 1.1345904784751044e-7 + t7159 + t7162;
  t7172 = 0.05619101817723254*t5129;
  t7174 = 0.38315655000705834*t5109;
  t7188 = -1.1924972351948546e-8 + t7172 + t7174;
  t7207 = t7147*t312;
  t7217 = -1.*t7169*t2070;
  t7219 = -1.*t7188*t2099;
  t7221 = t7207 + t7217 + t7219;
  t7149 = t295*t7147*t125;
  t7171 = t7169*t2927;
  t7194 = t7188*t3076;
  t7198 = t7149 + t7171 + t7194;
  t5631 = t87*t295*t5121;
  t5636 = t5142*t2709;
  t5638 = t5631 + t5634 + t5636;
  t5677 = t87*t295*t5179;
  t5683 = t5230*t2477;
  t5687 = -0.103955395616*t5133*t2709;
  t5690 = t5677 + t5683 + t5687;
  t5703 = t5280*t87*t295;
  t5714 = t5298*t2477;
  t5719 = t5320*t2709;
  t5724 = t5703 + t5714 + t5719;
  t5837 = t5230*t2152;
  t5840 = t5822 + t5837;
  t5976 = t5142*t2927;
  t5981 = -0.103955395616*t5133*t2152;
  t5982 = t5976 + t5981;
  t6059 = t5320*t2927;
  t6066 = t5298*t2152;
  t6068 = t6059 + t6066;
  t5764 = t5230*t3107;
  t5777 = t5634 + t5764;
  t5918 = t5230*t3256;
  t5919 = t5135 + t5918;
  t7560 = -1.*t5572*t312;
  t7561 = t5586*t2070;
  t7572 = t5616*t2099;
  t7575 = 0. + var1[2] + t3788 + t7560 + t3807 + t7561 + t7572;
  t5783 = t5142*t2477;
  t5785 = -0.103955395616*t5133*t3107;
  t5792 = t5783 + t5785;
  t7581 = -1.*t5616*t2477;
  t7582 = -1.*t5586*t3107;
  t7583 = t4005 + t4008 + t7581 + t7582;
  t7589 = t5616*t2070;
  t7593 = t5586*t3256;
  t7594 = t3972 + t3983 + t7589 + t7593;
  t6017 = t5142*t2070;
  t6024 = -0.103955395616*t5133*t3256;
  t6034 = t6017 + t6024;
  t7619 = -1.*t87*t295*t5572;
  t7626 = -1.*t5586*t2477;
  t7631 = -1.*t5616*t2709;
  t7634 = 0. + t3892 + t7619 + t3898 + t3904 + t7626 + t7631;
  t5802 = t5320*t2477;
  t5809 = t5298*t3107;
  t5810 = t5802 + t5809;
  t6081 = t5320*t2070;
  t6155 = t5298*t3256;
  t6157 = t6081 + t6155;
  t6296 = -0.103955395616*t5133*t2997;
  t6300 = t5230*t2852;
  t6302 = t6296 + t6300;
  t6372 = t5142*t2997;
  t6397 = -0.103955395616*t5133*t2852;
  t6398 = t6372 + t6397;
  t6429 = t5320*t2997;
  t6431 = t5298*t2852;
  t6439 = t6429 + t6431;
  t6236 = -0.103955395616*t5133*t2771;
  t6239 = t5230*t2780;
  t6254 = t6236 + t6239;
  t6354 = -0.103955395616*t5133*t3056;
  t6355 = t5230*t2099;
  t6360 = t6354 + t6355;
  t6257 = t5142*t2771;
  t6258 = -0.103955395616*t5133*t2780;
  t6269 = t6257 + t6258;
  t7723 = -1.*t5616*t2771;
  t7724 = -1.*t5586*t2780;
  t7734 = t3759 + t3776 + t7723 + t7724;
  t7736 = t5616*t3056;
  t7738 = t5586*t2099;
  t7740 = t3885 + t3887 + t7736 + t7738;
  t6415 = t5142*t3056;
  t6416 = t6415 + t5235;
  t6276 = t5320*t2771;
  t6283 = t5298*t2780;
  t6290 = t6276 + t6283;
  t6453 = t5320*t3056;
  t6455 = t5298*t2099;
  t6464 = t6453 + t6455;
  t6630 = -1.*t5121*t125*t312;
  t6640 = -0.103955395616*t5133*t3425;
  t6641 = t5142*t3555;
  t6645 = t6630 + t6640 + t6641;
  t6784 = -1.*t5179*t125*t312;
  t6785 = t5230*t3425;
  t6787 = -0.103955395616*t5133*t3555;
  t6795 = t6784 + t6785 + t6787;
  t6878 = -1.*t5280*t125*t312;
  t6886 = t5298*t3425;
  t6888 = t5320*t3555;
  t6895 = t6878 + t6886 + t6888;
  t6523 = -1.*t87*t5121*t312;
  t6525 = -0.103955395616*t5133*t3374;
  t6526 = t5142*t3393;
  t6528 = t6523 + t6525 + t6526;
  t6758 = -1.*t295*t5121;
  t6759 = -0.103955395616*t5133*t3510;
  t6761 = t5142*t3605;
  t6768 = t6758 + t6759 + t6761;
  t6546 = -1.*t87*t5179*t312;
  t6551 = t5230*t3374;
  t6559 = -0.103955395616*t5133*t3393;
  t6562 = t6546 + t6551 + t6559;
  t7797 = t87*t5572*t312;
  t7798 = -1.*t5586*t3374;
  t7799 = -1.*t5616*t3393;
  t7807 = t4154 + t7797 + t4155 + t7798 + t7799;
  t7817 = -1.*t295*t5572;
  t7819 = t5586*t3510;
  t7824 = t5616*t3605;
  t7828 = t7817 + t4174 + t4176 + t7819 + t7824;
  t6837 = -1.*t295*t5179;
  t6840 = t5230*t3510;
  t6844 = -0.103955395616*t5133*t3605;
  t6845 = t6837 + t6840 + t6844;
  t6574 = -1.*t5280*t87*t312;
  t6582 = t5298*t3374;
  t6583 = t5320*t3393;
  t6597 = t6574 + t6582 + t6583;
  t6901 = -1.*t5280*t295;
  t6929 = t5298*t3510;
  t6931 = t5320*t3605;
  t6932 = t6901 + t6929 + t6931;
  t7086 = -1.0000001112680001*t295*t5109*t125;
  t7088 = 0.104528*t5129*t2927;
  t7091 = 0.994522*t5129*t3076;
  t7095 = t7086 + t7088 + t7091;
  t7288 = -0.994522*t5129*t295*t125;
  t7294 = -0.103955395616*t5109*t2927;
  t7300 = -0.9890740084840001*t5109*t3076;
  t7301 = t7288 + t7294 + t7300;
  t7372 = -0.104528*t5129*t295*t125;
  t7379 = -0.010926102783999999*t5109*t2927;
  t7384 = -0.103955395616*t5109*t3076;
  t7396 = t7372 + t7379 + t7384;
  t6982 = -1.0000001112680001*t87*t295*t5109;
  t6984 = 0.104528*t5129*t2477;
  t6988 = 0.994522*t5129*t2709;
  t6995 = t6982 + t6984 + t6988;
  t7117 = 1.0000001112680001*t5109*t312;
  t7119 = 0.104528*t5129*t2070;
  t7122 = 0.994522*t5129*t2099;
  t7124 = t7117 + t7119 + t7122;
  t7943 = -1.*t7147*t312;
  t7950 = t7169*t2070;
  t7951 = t7188*t2099;
  t7953 = t7943 + t7950 + t7951;
  t7266 = 0.994522*t5129*t312;
  t7268 = -0.103955395616*t5109*t2070;
  t7273 = -0.9890740084840001*t5109*t2099;
  t7277 = t7266 + t7268 + t7273;
  t7927 = -1.*t87*t295*t7147;
  t7929 = -1.*t7169*t2477;
  t7931 = -1.*t7188*t2709;
  t7933 = t7927 + t7929 + t7931;
  t6999 = -0.994522*t5129*t87*t295;
  t7002 = -0.103955395616*t5109*t2477;
  t7008 = -0.9890740084840001*t5109*t2709;
  t7038 = t6999 + t7002 + t7008;
  t7343 = 0.104528*t5129*t312;
  t7349 = -0.010926102783999999*t5109*t2070;
  t7354 = -0.103955395616*t5109*t2099;
  t7358 = t7343 + t7349 + t7354;
  t7062 = -0.104528*t5129*t87*t295;
  t7071 = -0.010926102783999999*t5109*t2477;
  t7076 = -0.103955395616*t5109*t2709;
  t7077 = t7062 + t7071 + t7076;
  t5488 = -0.103955395616*t5133*t2262;
  t5489 = t5142*t2312;
  t5490 = t5367 + t5488 + t5489;
  t5502 = t5230*t2262;
  t5509 = -0.103955395616*t5133*t2312;
  t5514 = t5393 + t5502 + t5509;
  t7999 = -1.*t5586*t2262;
  t8001 = -1.*t5616*t2312;
  t8003 = t5935 + t4266 + t4270 + t7999 + t8001;
  t5527 = t5298*t2262;
  t5534 = t5320*t2312;
  t5538 = t5433 + t5527 + t5534;
  t8109 = t5572*t125*t312;
  t8112 = -1.*t5586*t3425;
  t8114 = -1.*t5616*t3555;
  t8122 = t4433 + t8109 + t4435 + t8112 + t8114;
  t8133 = 0. + var1[0] + t5649 + t2524 + t2545 + t5650 + t5653;
  t8142 = -1.*t87*t5572*t312;
  t8148 = t5586*t3374;
  t8154 = t5616*t3393;
  t8160 = t4513 + t8142 + t4519 + t8148 + t8154;
  t8163 = -1.*t295*t5572*t125;
  t8165 = -1.*t5586*t2927;
  t8166 = -1.*t5616*t3076;
  t8167 = 0. + t4531 + t8163 + t4537 + t4560 + t8165 + t8166;
  t8223 = -1.*t5616*t2997;
  t8224 = -1.*t5586*t2852;
  t8225 = t4621 + t4629 + t8223 + t8224;
  t8227 = t5616*t2771;
  t8230 = t5586*t2780;
  t8233 = t4649 + t4653 + t8227 + t8230;
  t8299 = -1.*t5616*t2927;
  t8301 = -1.*t5586*t2152;
  t8302 = t4746 + t4747 + t8299 + t8301;
  t8308 = t5616*t2477;
  t8314 = t5586*t3107;
  t8315 = t4707 + t4709 + t8308 + t8314;
  t8350 = t7619 + t3898 + t3904 + t7626 + t7631;
  t8354 = t5586*t2262;
  t8355 = t5616*t2312;
  t8356 = t8163 + t4822 + t4826 + t8354 + t8355;
  t8423 = t87*t295*t7147;
  t8424 = t7169*t2477;
  t8426 = t7188*t2709;
  t8430 = t8423 + t8424 + t8426;
  t8414 = -1.*t295*t7147*t125;
  t8417 = -1.*t7169*t2927;
  t8420 = -1.*t7188*t3076;
  t8421 = t8414 + t8417 + t8420;
  t7531 = -0.703234*t5638;
  t7533 = -0.073913*t5690;
  t7535 = 0.707107*t5724;
  t7541 = t7531 + t7533 + t7535;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=var2[1];
  p_output1[19]=-1.*var2[0];
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=-1.*t87*var2[2] + t125*var1[2]*var2[3];
  p_output1[25]=-1.*t125*var2[2] - 1.*t87*var1[2]*var2[3];
  p_output1[26]=t87*var2[0] + t125*var2[1] + (-1.*t125*var1[0] + t87*var1[1])*var2[3];
  p_output1[27]=-1.*t87*var2[3];
  p_output1[28]=-1.*t125*var2[3];
  p_output1[29]=0;
  p_output1[30]=-1.*t312*var2[1] - 1.*t125*t295*var2[2] - 1.*t295*t87*var1[2]*var2[3] + (-1.*t295*var1[1] + t125*t312*var1[2])*var2[4];
  p_output1[31]=t312*var2[0] + t295*t87*var2[2] - 1.*t125*t295*var1[2]*var2[3] + (t295*var1[0] - 1.*t312*t87*var1[2])*var2[4];
  p_output1[32]=t125*t295*var2[0] - 1.*t295*t87*var2[1] + (t295*t87*var1[0] + t125*t295*var1[1])*var2[3] + (-1.*t125*t312*var1[0] + t312*t87*var1[1])*var2[4];
  p_output1[33]=-1.*t125*t295*var2[3] - 1.*t312*t87*var2[4];
  p_output1[34]=t295*t87*var2[3] - 1.*t125*t312*var2[4];
  p_output1[35]=-1.*t295*var2[4];
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=t312*var2[1] + t125*t295*var2[2] + (-0.12*t1280 - 0.4*t1334 + t295*t87*var1[2])*var2[3] + (-0.12*t295*t835*t87 - 0.4*t295*t87*t882 + t295*var1[1] - 1.*t125*t312*var1[2])*var2[4] + (-0.4*t1081 - 0.12*t1154)*var2[5];
  p_output1[145]=-1.*t312*var2[0] - 1.*t295*t87*var2[2] + (-0.12*t1081 - 0.4*t1628 + t125*t295*var1[2])*var2[3] + (-0.12*t125*t295*t835 - 0.4*t125*t295*t882 - 1.*t295*var1[0] + t312*t87*var1[2])*var2[4] + (-0.12*t1334 - 0.4*t1704)*var2[5];
  p_output1[146]=-1.*t125*t295*var2[0] + t295*t87*var2[1] + (-1.*t295*t87*var1[0] - 1.*t125*t295*var1[1])*var2[3] + (0.12*t312*t835 + 0.4*t312*t882 + t125*t312*var1[0] - 1.*t312*t87*var1[1])*var2[4] + (-0.4*t295*t835 + 0.12*t295*t882)*var2[5];
  p_output1[147]=t125*t295*var2[3] + t312*t87*var2[4];
  p_output1[148]=-1.*t295*t87*var2[3] + t125*t312*var2[4];
  p_output1[149]=t295*var2[4];
  p_output1[150]=(-0.994522*t2070 + 0.104528*t2099)*var2[1] + (-0.994522*(t2112 - 1.*t2045*t2124) + 0.104528*t2152)*var2[2] + (0.005906*t2262 + 0.056191*t2312 - 0.994522*(t2455*t2477 + t2070*t2554) + 0.104528*(t2099*t2554 + t2455*t2709) - 0.385267*t125*t295)*var2[3] + (0.005906*t3374 + 0.056191*t3393 - 0.994522*(t2455*t3425 + t2070*t3457 + t2927*t3491 + t2943*t3510) + 0.104528*(t2099*t3457 + t3076*t3491 + t2455*t3555 + t2943*t3605) - 0.385267*t312*t87)*var2[4] + (0.056191*t2771 + 0.005906*t2780 - 0.994522*(t2070*t2820 + t2455*t2852 + t2876*t2927 + t2099*t2943) + 0.104528*(t2099*t2820 + t2455*t2997 + t2943*t3056 + t2876*t3076))*var2[5] + (0.056191*t2477 + 0.005906*t3107 - 0.994522*(t2152*t2455 + t2927*t3202 + t2943*t3256 + t2070*t3299) + 0.104528*(t2455*t2927 + t2070*t2943 + t3076*t3202 + t2099*t3299))*var2[24];
  p_output1[151]=(-0.994522*t3056 + 0.104528*t3256)*var2[0] + t3737*var2[2] + (0.005906*t2477 + 0.056191*t2709 - 0.994522*(t2262*t3852 + t2070*t4278) + 0.104528*(t2312*t3852 + t2099*t4278) + 0.385267*t295*t87)*var2[3] + (-0.385267*t125*t312 + 0.005906*t3425 + 0.056191*t3555 - 0.994522*(t3374*t3852 + t3510*t3908 + t2070*t4157 + t2477*t4184) + 0.104528*(t3393*t3852 + t3605*t3908 + t2099*t4157 + t2709*t4184))*var2[4] + (0.005906*t2852 + 0.056191*t2997 - 0.994522*(t2070*t3783 + t2780*t3852 + t2477*t3888 + t2099*t3908) + 0.104528*(t2099*t3783 + t2771*t3852 + t2709*t3888 + t3056*t3908))*var2[5] + (0.005906*t2152 + 0.056191*t2927 - 0.994522*(t3107*t3852 + t3256*t3908 + t2477*t3986 + t2070*t4036) + 0.104528*(t2477*t3852 + t2070*t3908 + t2709*t3986 + t2099*t4036))*var2[24];
  p_output1[152]=(-0.994522*t2927 + 0.104528*t3076)*var2[0] + (-0.994522*(-1.*t1628*t2045 + t2769) + 0.104528*t3107)*var2[1] + (-0.994522*(t2477*t4496 + t2262*t4563 + t2477*t4801 + t2927*t4829) + 0.104528*(t2709*t4496 + t2312*t4563 + t2709*t4801 + t3076*t4829))*var2[3] + (-0.385267*t295 + 0.005906*t3510 + 0.056191*t3605 - 0.994522*(t2477*t4437 + t3425*t4496 + t2927*t4520 + t3374*t4563) + 0.104528*(t2709*t4437 + t3555*t4496 + t3076*t4520 + t3393*t4563))*var2[4] + (0.005906*t2099 + 0.056191*t3056 - 0.994522*(t2852*t4496 + t2780*t4563 + t2477*t4634 + t2927*t4657) + 0.104528*(t2997*t4496 + t2771*t4563 + t2709*t4634 + t3076*t4657))*var2[5] + (0.056191*t2070 + 0.005906*t3256 - 0.994522*(t2152*t4496 + t3107*t4563 + t2927*t4710 + t2477*t4752) + 0.104528*(t2927*t4496 + t2477*t4563 + t3076*t4710 + t2709*t4752))*var2[24];
  p_output1[153]=(-0.994522*t2262 + 0.104528*t2312)*var2[3] + (-0.994522*t3374 + 0.104528*t3393)*var2[4] + (0.104528*t2771 - 0.994522*t2780)*var2[5] + (0.104528*t2477 - 0.994522*t3107)*var2[24];
  p_output1[154]=t3737*var2[3] + (-0.994522*t3425 + 0.104528*t3555)*var2[4] + (-0.994522*t2852 + 0.104528*t2997)*var2[5] + (-0.994522*t2152 + 0.104528*t2927)*var2[24];
  p_output1[155]=(-0.994522*t3510 + 0.104528*t3605)*var2[4] + (-0.994522*t2099 + 0.104528*t3056)*var2[5] + (0.104528*t2070 - 0.994522*t3256)*var2[24];
  p_output1[156]=(-0.703234*t5161 - 0.073913*t5239 + 0.707107*t5349)*var2[1] + (-0.703234*(0.103955395616*t2927*t5133 - 1.*t3076*t5142 + t5367) - 0.073913*(0.103955395616*t3076*t5133 - 1.*t2927*t5230 + t5393) + 0.707107*(-1.*t2927*t5298 - 1.*t3076*t5320 + t5433))*var2[2] + (0.151261*t5490 + 0.249652*t5514 + 0.176528*t5538 - 0.703234*(t5626*t5638 + t5161*t5655) - 0.073913*(t5239*t5655 + t5626*t5690) + 0.707107*(t5349*t5655 + t5626*t5724))*var2[3] + (0.151261*t6528 + 0.249652*t6562 + 0.176528*t6597 - 0.703234*(t5626*t6645 + t5161*t6687 + t6004*t6742 + t5948*t6768) - 0.073913*(t5239*t6687 + t5906*t6742 + t5626*t6795 + t5948*t6845) + 0.707107*(t5349*t6687 + t6189*t6742 + t5626*t6895 + t5948*t6932))*var2[4] + (0.249652*t6254 + 0.151261*t6269 + 0.176528*t6290 - 0.073913*(t5626*t6302 + t5239*t6332 + t5906*t6347 + t5948*t6360) - 0.703234*(t5161*t6332 + t6004*t6347 + t5626*t6398 + t5948*t6416) + 0.707107*(t5349*t6332 + t6189*t6347 + t5626*t6439 + t5948*t6464))*var2[5] + (0.249652*t5777 + 0.151261*t5792 + 0.176528*t5810 - 0.073913*(t5626*t5840 + t5239*t5860 + t5881*t5906 + t5919*t5948) - 0.703234*(t5161*t5860 + t5626*t5982 + t5881*t6004 + t5948*t6034) + 0.707107*(t5349*t5860 + t5626*t6068 + t5948*t6157 + t5881*t6189))*var2[24] + (0.176528*t6995 + 0.151261*t7038 + 0.249652*t7077 + 0.707107*(t5626*t7095 + t5948*t7124 + t5349*t7198 + t6189*t7221) - 0.703234*(t5161*t7198 + t6004*t7221 + t5948*t7277 + t5626*t7301) - 0.073913*(t5239*t7198 + t5906*t7221 + t5948*t7358 + t5626*t7396))*var2[25];
  p_output1[157]=(-0.703234*(t312*t5121 + 0.103955395616*t2070*t5133 - 1.*t2099*t5142) - 0.073913*(0.103955395616*t2099*t5133 + t312*t5179 - 1.*t2070*t5230) + 0.707107*(t312*t5280 - 1.*t2070*t5298 - 1.*t2099*t5320))*var2[0] + t7541*var2[2] + (0.151261*t5638 + 0.249652*t5690 + 0.176528*t5724 - 0.703234*(t5490*t7575 + t5161*t8003) - 0.073913*(t5514*t7575 + t5239*t8003) + 0.707107*(t5538*t7575 + t5349*t8003))*var2[3] + (0.151261*t6645 + 0.249652*t6795 + 0.176528*t6895 - 0.703234*(t6528*t7575 + t6768*t7634 + t5161*t7807 + t5638*t7828) - 0.073913*(t6562*t7575 + t6845*t7634 + t5239*t7807 + t5690*t7828) + 0.707107*(t6597*t7575 + t6932*t7634 + t5349*t7807 + t5724*t7828))*var2[4] + (0.249652*t6302 + 0.151261*t6398 + 0.176528*t6439 - 0.703234*(t6269*t7575 + t6416*t7634 + t5161*t7734 + t5638*t7740) - 0.073913*(t6254*t7575 + t6360*t7634 + t5239*t7734 + t5690*t7740) + 0.707107*(t6290*t7575 + t6464*t7634 + t5349*t7734 + t5724*t7740))*var2[5] + (0.249652*t5840 + 0.151261*t5982 + 0.176528*t6068 - 0.073913*(t5777*t7575 + t5239*t7583 + t5690*t7594 + t5919*t7634) - 0.703234*(t5792*t7575 + t5161*t7583 + t5638*t7594 + t6034*t7634) + 0.707107*(t5810*t7575 + t5349*t7583 + t5724*t7594 + t6157*t7634))*var2[24] + (0.176528*t7095 + 0.151261*t7301 + 0.249652*t7396 - 0.703234*(t7038*t7575 + t7277*t7634 + t5161*t7933 + t5638*t7953) - 0.073913*(t7077*t7575 + t7358*t7634 + t5239*t7933 + t5690*t7953) + 0.707107*(t6995*t7575 + t7124*t7634 + t5349*t7933 + t5724*t7953))*var2[25];
  p_output1[158]=(-0.073913*t5906 - 0.703234*t6004 + 0.707107*t6189)*var2[0] + (-0.703234*(0.103955395616*t2477*t5133 - 1.*t2709*t5142 - 1.*t295*t5121*t87) - 0.073913*(0.103955395616*t2709*t5133 - 1.*t2477*t5230 - 1.*t295*t5179*t87) + 0.707107*(-1.*t2477*t5298 - 1.*t2709*t5320 - 1.*t295*t5280*t87))*var2[1] + (-0.073913*(t5690*t8133 + t5514*t8167 + t5690*t8350 + t5906*t8356) - 0.703234*(t5638*t8133 + t5490*t8167 + t5638*t8350 + t6004*t8356) + 0.707107*(t5724*t8133 + t5538*t8167 + t5724*t8350 + t6189*t8356))*var2[3] + (0.151261*t6768 + 0.249652*t6845 + 0.176528*t6932 - 0.703234*(t5638*t8122 + t6645*t8133 + t6004*t8160 + t6528*t8167) - 0.073913*(t5690*t8122 + t6795*t8133 + t5906*t8160 + t6562*t8167) + 0.707107*(t5724*t8122 + t6895*t8133 + t6189*t8160 + t6597*t8167))*var2[4] + (0.249652*t6360 + 0.151261*t6416 + 0.176528*t6464 - 0.073913*(t6302*t8133 + t6254*t8167 + t5690*t8225 + t5906*t8233) - 0.703234*(t6398*t8133 + t6269*t8167 + t5638*t8225 + t6004*t8233) + 0.707107*(t6439*t8133 + t6290*t8167 + t5724*t8225 + t6189*t8233))*var2[5] + (0.249652*t5919 + 0.151261*t6034 + 0.176528*t6157 - 0.073913*(t5840*t8133 + t5777*t8167 + t5690*t8302 + t5906*t8315) - 0.703234*(t5982*t8133 + t5792*t8167 + t5638*t8302 + t6004*t8315) + 0.707107*(t6068*t8133 + t5810*t8167 + t5724*t8302 + t6189*t8315))*var2[24] + (0.176528*t7124 + 0.151261*t7277 + 0.249652*t7358 - 0.073913*(t7396*t8133 + t7077*t8167 + t5690*t8421 + t5906*t8430) - 0.703234*(t7301*t8133 + t7038*t8167 + t5638*t8421 + t6004*t8430) + 0.707107*(t7095*t8133 + t6995*t8167 + t5724*t8421 + t6189*t8430))*var2[25];
  p_output1[159]=(-0.703234*t5490 - 0.073913*t5514 + 0.707107*t5538)*var2[3] + (-0.703234*t6528 - 0.073913*t6562 + 0.707107*t6597)*var2[4] + (-0.073913*t6254 - 0.703234*t6269 + 0.707107*t6290)*var2[5] + (-0.073913*t5777 - 0.703234*t5792 + 0.707107*t5810)*var2[24] + (0.707107*t6995 - 0.703234*t7038 - 0.073913*t7077)*var2[25];
  p_output1[160]=t7541*var2[3] + (-0.703234*t6645 - 0.073913*t6795 + 0.707107*t6895)*var2[4] + (-0.073913*t6302 - 0.703234*t6398 + 0.707107*t6439)*var2[5] + (-0.073913*t5840 - 0.703234*t5982 + 0.707107*t6068)*var2[24] + (0.707107*t7095 - 0.703234*t7301 - 0.073913*t7396)*var2[25];
  p_output1[161]=(-0.703234*t6768 - 0.073913*t6845 + 0.707107*t6932)*var2[4] + (-0.073913*t6360 - 0.703234*t6416 + 0.707107*t6464)*var2[5] + (-0.073913*t5919 - 0.703234*t6034 + 0.707107*t6157)*var2[24] + (0.707107*t7124 - 0.703234*t7277 - 0.073913*t7358)*var2[25];
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void dJs_right_shoulder_yaw_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
