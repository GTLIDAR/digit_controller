/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:33:42 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dT_knee_joint_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t819;
  double t851;
  double t702;
  double t774;
  double t778;
  double t899;
  double t872;
  double t873;
  double t916;
  double t609;
  double t625;
  double t686;
  double t877;
  double t936;
  double t943;
  double t1045;
  double t1049;
  double t1054;
  double t1100;
  double t1109;
  double t1355;
  double t1358;
  double t1397;
  double t1430;
  double t1451;
  double t1461;
  double t1468;
  double t1488;
  double t1489;
  double t1496;
  double t948;
  double t981;
  double t989;
  double t1071;
  double t1111;
  double t1113;
  double t1115;
  double t1127;
  double t1563;
  double t1190;
  double t1196;
  double t1198;
  double t1199;
  double t1201;
  double t1202;
  double t1208;
  double t1211;
  double t62;
  double t93;
  double t96;
  double t1131;
  double t1148;
  double t1186;
  double t1352;
  double t1585;
  double t1661;
  double t1664;
  double t1675;
  double t1687;
  double t1759;
  double t1798;
  double t1800;
  double t1839;
  double t1842;
  double t1845;
  double t1852;
  double t1856;
  double t1867;
  double t1894;
  double t1925;
  double t1944;
  double t1954;
  double t1963;
  double t1978;
  double t1983;
  double t1986;
  double t1996;
  double t2324;
  double t2350;
  double t2354;
  double t2356;
  double t2332;
  double t2337;
  double t2342;
  double t2345;
  double t2364;
  double t2365;
  double t2396;
  double t2416;
  double t2420;
  double t1728;
  double t1757;
  double t2529;
  double t2531;
  double t2541;
  double t2479;
  double t2509;
  double t2518;
  double t2376;
  double t2426;
  double t2454;
  double t1917;
  double t1922;
  double t2026;
  double t2049;
  double t2456;
  double t2528;
  double t2545;
  double t2550;
  double t2076;
  double t2081;
  double t2608;
  double t2644;
  double t2651;
  double t2661;
  double t2697;
  double t2703;
  double t2706;
  double t2709;
  double t2193;
  double t2199;
  double t2242;
  double t2244;
  double t2273;
  double t2277;
  double t2924;
  double t2927;
  double t2933;
  double t2937;
  double t2939;
  double t2948;
  double t2955;
  double t2973;
  double t2976;
  double t3022;
  double t3023;
  double t3025;
  double t3016;
  double t3018;
  double t3020;
  double t2951;
  double t2979;
  double t2994;
  double t3011;
  double t3021;
  double t3026;
  double t3029;
  double t3036;
  double t3043;
  double t3047;
  double t3050;
  double t3062;
  double t3064;
  double t3089;
  double t3096;
  double t3209;
  double t3212;
  double t3264;
  double t3268;
  double t3269;
  double t3272;
  double t3213;
  double t3222;
  double t3233;
  double t3244;
  double t3247;
  double t3252;
  double t3254;
  double t3242;
  double t3263;
  double t3281;
  double t3288;
  double t3295;
  double t3312;
  double t3323;
  double t3332;
  double t3336;
  double t3339;
  double t3342;
  double t3359;
  double t3476;
  double t3490;
  double t3492;
  double t3462;
  double t3466;
  double t3467;
  double t3472;
  double t3494;
  double t3496;
  double t3503;
  double t3508;
  double t3509;
  double t3565;
  double t3567;
  double t3569;
  double t3571;
  double t3498;
  double t3510;
  double t3511;
  double t3512;
  double t3523;
  double t3546;
  double t3553;
  double t3557;
  double t3515;
  double t3560;
  double t3572;
  double t3575;
  double t3588;
  double t3589;
  double t3590;
  double t3594;
  double t3606;
  double t3608;
  double t3612;
  double t3620;
  double t3720;
  double t3724;
  double t3728;
  double t3731;
  double t3703;
  double t3705;
  double t3708;
  double t3709;
  double t3677;
  double t3693;
  double t3696;
  double t3698;
  double t3702;
  double t3719;
  double t3738;
  double t3740;
  double t3745;
  double t3751;
  double t3753;
  double t3755;
  double t3758;
  double t3759;
  double t3760;
  double t3768;
  double t3829;
  double t3833;
  double t3834;
  double t3837;
  double t3852;
  double t3855;
  double t3857;
  double t3858;
  double t3863;
  double t3865;
  double t3874;
  double t3883;
  double t3957;
  double t3958;
  double t3971;
  double t3982;
  double t3991;
  double t3998;
  double t4030;
  double t4040;
  double t4044;
  double t4050;
  double t3973;
  double t4003;
  double t4004;
  double t4007;
  double t4017;
  double t4024;
  double t4025;
  double t4026;
  double t4009;
  double t4028;
  double t4054;
  double t4060;
  double t4070;
  double t4071;
  double t4086;
  double t4100;
  double t4103;
  double t4106;
  double t4110;
  double t4115;
  double t4192;
  double t4194;
  double t4196;
  double t4176;
  double t4180;
  double t4181;
  double t4190;
  double t4197;
  double t4198;
  double t4212;
  double t4213;
  double t4222;
  double t4246;
  double t4248;
  double t4249;
  double t4230;
  double t4234;
  double t4235;
  double t4203;
  double t4223;
  double t4224;
  double t4227;
  double t4243;
  double t4251;
  double t4261;
  double t4270;
  double t4273;
  double t4274;
  double t4283;
  double t4290;
  double t4312;
  double t4318;
  double t4326;
  double t4417;
  double t4419;
  double t4431;
  double t4432;
  double t4433;
  double t4477;
  double t4484;
  double t4497;
  double t4461;
  double t4466;
  double t4468;
  double t4424;
  double t4447;
  double t4449;
  double t4455;
  double t4471;
  double t4505;
  double t4511;
  double t4524;
  double t4528;
  double t4542;
  double t4544;
  double t4583;
  double t4596;
  double t4603;
  double t4608;
  double t4882;
  double t4887;
  double t4935;
  double t4936;
  double t4940;
  double t4945;
  double t4889;
  double t4894;
  double t4901;
  double t4909;
  double t4913;
  double t4914;
  double t4926;
  double t4902;
  double t4928;
  double t4946;
  double t4949;
  double t4966;
  double t4967;
  double t4969;
  double t4971;
  double t4982;
  double t4990;
  double t4996;
  double t5017;
  double t5227;
  double t5232;
  double t5234;
  double t5248;
  double t5189;
  double t5203;
  double t5211;
  double t5215;
  double t5161;
  double t5166;
  double t5168;
  double t5184;
  double t5187;
  double t5221;
  double t5251;
  double t5254;
  double t5270;
  double t5271;
  double t5276;
  double t5288;
  double t5294;
  double t5295;
  double t5296;
  double t5302;
  double t5390;
  double t5391;
  double t5402;
  double t5405;
  double t5418;
  double t5419;
  double t5431;
  double t5433;
  double t5464;
  double t5466;
  double t5467;
  double t5468;
  double t5583;
  double t5585;
  double t5596;
  double t5606;
  double t5610;
  double t5611;
  double t5677;
  double t5683;
  double t5689;
  double t5652;
  double t5654;
  double t5657;
  double t5599;
  double t5628;
  double t5639;
  double t5649;
  double t5674;
  double t5693;
  double t5715;
  double t5724;
  double t5726;
  double t5744;
  double t5745;
  double t5761;
  double t5768;
  double t5769;
  double t5772;
  double t5986;
  double t5995;
  double t6004;
  double t6008;
  double t6014;
  double t6020;
  double t6087;
  double t6090;
  double t6099;
  double t6063;
  double t6064;
  double t6076;
  double t6005;
  double t6023;
  double t6024;
  double t6054;
  double t6081;
  double t6102;
  double t6103;
  double t6114;
  double t6116;
  double t6124;
  double t6141;
  double t6145;
  double t6150;
  double t6157;
  double t6158;
  double t6419;
  double t6423;
  double t6436;
  double t6450;
  double t6364;
  double t6369;
  double t6375;
  double t6387;
  double t6400;
  double t6403;
  double t6377;
  double t6412;
  double t6455;
  double t6456;
  double t6465;
  double t6476;
  double t6480;
  double t6481;
  double t6494;
  double t6501;
  double t6514;
  double t6516;
  double t6689;
  double t6690;
  double t6712;
  double t6718;
  double t6737;
  double t6748;
  double t6850;
  double t6857;
  double t6864;
  double t6875;
  double t6717;
  double t6765;
  double t6772;
  double t6789;
  double t6815;
  double t6828;
  double t6831;
  double t6833;
  double t6792;
  double t6844;
  double t6879;
  double t6883;
  double t6895;
  double t6906;
  double t6924;
  double t6929;
  double t6941;
  double t6944;
  double t6946;
  double t6958;
  double t7076;
  double t7077;
  double t7079;
  double t7083;
  double t7051;
  double t7052;
  double t7053;
  double t7055;
  double t7034;
  double t7035;
  double t7037;
  double t7038;
  double t7043;
  double t7064;
  double t7093;
  double t7099;
  double t7109;
  double t7128;
  double t7139;
  double t7143;
  double t7168;
  double t7176;
  double t7179;
  double t7198;
  double t7296;
  double t7297;
  double t7304;
  double t7329;
  double t7343;
  double t7352;
  double t7355;
  double t7359;
  double t7365;
  double t7368;
  double t7375;
  double t7377;
  double t1683;
  double t1895;
  double t2006;
  double t2009;
  double t2010;
  double t2059;
  double t2102;
  double t2112;
  double t2157;
  double t2188;
  double t2216;
  double t2261;
  double t2288;
  double t2289;
  double t2604;
  double t2676;
  double t2727;
  double t2740;
  double t2762;
  double t2775;
  double t2780;
  double t2782;
  double t2783;
  double t2794;
  double t2822;
  double t2834;
  double t2896;
  double t2905;
  double t3034;
  double t3061;
  double t3104;
  double t3105;
  double t3106;
  double t3113;
  double t3114;
  double t3124;
  double t3138;
  double t3142;
  double t3148;
  double t3165;
  double t3166;
  double t3185;
  double t3290;
  double t3334;
  double t3363;
  double t3368;
  double t3379;
  double t3381;
  double t3382;
  double t3386;
  double t3398;
  double t3405;
  double t3417;
  double t3422;
  double t3428;
  double t3441;
  double t3584;
  double t3597;
  double t3623;
  double t3624;
  double t3627;
  double t3628;
  double t3630;
  double t3639;
  double t3646;
  double t3651;
  double t3654;
  double t3657;
  double t3663;
  double t3664;
  double t3743;
  double t3756;
  double t3773;
  double t3777;
  double t3780;
  double t3793;
  double t3794;
  double t3795;
  double t3797;
  double t3798;
  double t3801;
  double t3805;
  double t3814;
  double t3819;
  double t3838;
  double t3862;
  double t3886;
  double t3890;
  double t3891;
  double t3892;
  double t3894;
  double t3897;
  double t3898;
  double t3907;
  double t3919;
  double t3924;
  double t3925;
  double t3928;
  double t4062;
  double t4102;
  double t4117;
  double t4122;
  double t4124;
  double t4131;
  double t4134;
  double t4142;
  double t4143;
  double t4156;
  double t4157;
  double t4161;
  double t4162;
  double t4165;
  double t4263;
  double t4289;
  double t4327;
  double t4346;
  double t4349;
  double t4351;
  double t4373;
  double t4377;
  double t4380;
  double t4382;
  double t4384;
  double t4390;
  double t4391;
  double t4400;
  double t4522;
  double t4555;
  double t4610;
  double t4611;
  double t4618;
  double t4621;
  double t4626;
  double t4654;
  double t4664;
  double t4680;
  double t4712;
  double t4715;
  double t4718;
  double t4719;
  double t4758;
  double t4759;
  double t4764;
  double t4765;
  double t4767;
  double t4783;
  double t4785;
  double t4787;
  double t4795;
  double t4803;
  double t4806;
  double t4815;
  double t4833;
  double t4835;
  double t4960;
  double t4977;
  double t5021;
  double t5022;
  double t5042;
  double t5044;
  double t5048;
  double t5051;
  double t5052;
  double t5069;
  double t5082;
  double t5093;
  double t5109;
  double t5117;
  double t5262;
  double t5290;
  double t5306;
  double t5307;
  double t5313;
  double t5324;
  double t5332;
  double t5333;
  double t5341;
  double t5348;
  double t5357;
  double t5364;
  double t5370;
  double t5371;
  double t5409;
  double t5458;
  double t5470;
  double t5471;
  double t5481;
  double t5487;
  double t5488;
  double t5492;
  double t5511;
  double t5517;
  double t5518;
  double t5520;
  double t5521;
  double t5533;
  double t5723;
  double t5748;
  double t5774;
  double t5780;
  double t5781;
  double t5794;
  double t5810;
  double t5842;
  double t5868;
  double t5924;
  double t5927;
  double t5933;
  double t5946;
  double t5947;
  double t6110;
  double t6144;
  double t6159;
  double t6164;
  double t6169;
  double t6173;
  double t6211;
  double t6212;
  double t6219;
  double t6220;
  double t6251;
  double t6253;
  double t6263;
  double t6332;
  double t6458;
  double t6491;
  double t6528;
  double t6538;
  double t6540;
  double t6568;
  double t6591;
  double t6606;
  double t6629;
  double t6642;
  double t6643;
  double t6650;
  double t6659;
  double t6667;
  double t6884;
  double t6938;
  double t6966;
  double t6968;
  double t6973;
  double t6976;
  double t6978;
  double t6979;
  double t6990;
  double t6995;
  double t6996;
  double t6998;
  double t7008;
  double t7022;
  double t7101;
  double t7146;
  double t7201;
  double t7205;
  double t7213;
  double t7217;
  double t7222;
  double t7225;
  double t7231;
  double t7245;
  double t7262;
  double t7263;
  double t7268;
  double t7276;
  double t7334;
  double t7361;
  double t7379;
  double t7380;
  double t7382;
  double t7402;
  double t7405;
  double t7413;
  double t7419;
  double t7420;
  double t7434;
  double t7438;
  double t7442;
  double t7458;
  double t8171;
  double t8181;
  double t8188;
  double t8189;
  double t8192;
  double t8193;
  double t8194;
  double t8196;
  double t8215;
  double t8216;
  double t8217;
  double t8219;
  double t8229;
  double t8230;
  double t8235;
  double t8242;
  double t8244;
  double t8245;
  double t8247;
  double t8250;
  double t8257;
  double t8258;
  double t8260;
  double t8263;
  double t8269;
  double t8275;
  double t8276;
  double t8278;
  double t8281;
  double t8285;
  double t8286;
  double t8292;
  double t8129;
  double t8130;
  double t8137;
  double t8138;
  double t8148;
  double t8156;
  double t8161;
  double t8162;
  double t8163;
  double t8166;
  double t8441;
  double t8446;
  double t8447;
  double t8451;
  double t8453;
  double t8454;
  double t8463;
  double t8464;
  double t8467;
  double t8549;
  double t8550;
  double t8552;
  double t8554;
  double t8555;
  double t8556;
  double t8558;
  double t8561;
  double t8563;
  double t8595;
  double t8596;
  double t8601;
  double t8614;
  double t8615;
  double t8616;
  double t8624;
  double t8625;
  double t8628;
  t819 = Cos(var1[3]);
  t851 = Cos(var1[4]);
  t702 = Cos(var1[7]);
  t774 = -1.*t702;
  t778 = 1. + t774;
  t899 = Cos(var1[5]);
  t872 = Cos(var1[6]);
  t873 = Sin(var1[5]);
  t916 = Sin(var1[6]);
  t609 = Cos(var1[8]);
  t625 = -1.*t609;
  t686 = 1. + t625;
  t877 = t819*t851*t872*t873;
  t936 = -1.*t819*t851*t899*t916;
  t943 = t877 + t936;
  t1045 = t819*t851*t899*t872;
  t1049 = t819*t851*t873*t916;
  t1054 = t1045 + t1049;
  t1100 = Sin(var1[4]);
  t1109 = Sin(var1[7]);
  t1355 = -1.000000637725*t778;
  t1358 = 1. + t1355;
  t1397 = -1.*t819*t1358*t1100;
  t1430 = -0.930418*t1109;
  t1451 = 0. + t1430;
  t1461 = t943*t1451;
  t1468 = -0.366501*t1109;
  t1488 = 0. + t1468;
  t1489 = t1054*t1488;
  t1496 = t1397 + t1461 + t1489;
  t948 = -0.340999127418*t778*t943;
  t981 = -0.134322983001*t778;
  t989 = 1. + t981;
  t1071 = t989*t1054;
  t1111 = 0.366501*t1109;
  t1113 = 0. + t1111;
  t1115 = -1.*t819*t1100*t1113;
  t1127 = t948 + t1071 + t1115;
  t1563 = Sin(var1[8]);
  t1190 = -0.8656776547239999*t778;
  t1196 = 1. + t1190;
  t1198 = t1196*t943;
  t1199 = -0.340999127418*t778*t1054;
  t1201 = 0.930418*t1109;
  t1202 = 0. + t1201;
  t1208 = -1.*t819*t1100*t1202;
  t1211 = t1198 + t1199 + t1208;
  t62 = Cos(var1[9]);
  t93 = -1.*t62;
  t96 = 1. + t93;
  t1131 = 0.340999127418*t686*t1127;
  t1148 = -0.134322983001*t686;
  t1186 = 1. + t1148;
  t1352 = t1186*t1211;
  t1585 = -0.366501*t1563;
  t1661 = 0. + t1585;
  t1664 = t1496*t1661;
  t1675 = t1131 + t1352 + t1664;
  t1687 = Sin(var1[9]);
  t1759 = -1.000000637725*t686;
  t1798 = 1. + t1759;
  t1800 = t1798*t1496;
  t1839 = -0.930418*t1563;
  t1842 = 0. + t1839;
  t1845 = t1127*t1842;
  t1852 = 0.366501*t1563;
  t1856 = 0. + t1852;
  t1867 = t1211*t1856;
  t1894 = t1800 + t1845 + t1867;
  t1925 = -0.8656776547239999*t686;
  t1944 = 1. + t1925;
  t1954 = t1944*t1127;
  t1963 = 0.340999127418*t686*t1211;
  t1978 = 0.930418*t1563;
  t1983 = 0. + t1978;
  t1986 = t1496*t1983;
  t1996 = t1954 + t1963 + t1986;
  t2324 = Sin(var1[3]);
  t2350 = t819*t899*t1100;
  t2354 = t2324*t873;
  t2356 = t2350 + t2354;
  t2332 = -1.*t899*t2324;
  t2337 = t819*t1100*t873;
  t2342 = t2332 + t2337;
  t2345 = t872*t2342;
  t2364 = -1.*t2356*t916;
  t2365 = t2345 + t2364;
  t2396 = -1.*t872*t2356;
  t2416 = -1.*t2342*t916;
  t2420 = t2396 + t2416;
  t1728 = -0.930418*t1687;
  t1757 = 0. + t1728;
  t2529 = t2420*t1451;
  t2531 = t2365*t1488;
  t2541 = t2529 + t2531;
  t2479 = t989*t2365;
  t2509 = -0.340999127418*t778*t2420;
  t2518 = t2479 + t2509;
  t2376 = -0.340999127418*t778*t2365;
  t2426 = t1196*t2420;
  t2454 = t2376 + t2426;
  t1917 = -0.8656776547239999*t96;
  t1922 = 1. + t1917;
  t2026 = -0.134322983001*t96;
  t2049 = 1. + t2026;
  t2456 = t1186*t2454;
  t2528 = 0.340999127418*t686*t2518;
  t2545 = t2541*t1661;
  t2550 = t2456 + t2528 + t2545;
  t2076 = 0.366501*t1687;
  t2081 = 0. + t2076;
  t2608 = t1798*t2541;
  t2644 = t2518*t1842;
  t2651 = t2454*t1856;
  t2661 = t2608 + t2644 + t2651;
  t2697 = 0.340999127418*t686*t2454;
  t2703 = t1944*t2518;
  t2706 = t2541*t1983;
  t2709 = t2697 + t2703 + t2706;
  t2193 = -0.366501*t1687;
  t2199 = 0. + t2193;
  t2242 = -1.000000637725*t96;
  t2244 = 1. + t2242;
  t2273 = 0.930418*t1687;
  t2277 = 0. + t2273;
  t2924 = t899*t2324;
  t2927 = -1.*t819*t1100*t873;
  t2933 = t2924 + t2927;
  t2937 = t872*t2933;
  t2939 = t2356*t916;
  t2948 = t2937 + t2939;
  t2955 = t872*t2356;
  t2973 = -1.*t2933*t916;
  t2976 = t2955 + t2973;
  t3022 = t2976*t1451;
  t3023 = t2948*t1488;
  t3025 = t3022 + t3023;
  t3016 = t989*t2948;
  t3018 = -0.340999127418*t778*t2976;
  t3020 = t3016 + t3018;
  t2951 = -0.340999127418*t778*t2948;
  t2979 = t1196*t2976;
  t2994 = t2951 + t2979;
  t3011 = t1186*t2994;
  t3021 = 0.340999127418*t686*t3020;
  t3026 = t3025*t1661;
  t3029 = t3011 + t3021 + t3026;
  t3036 = t1798*t3025;
  t3043 = t3020*t1842;
  t3047 = t2994*t1856;
  t3050 = t3036 + t3043 + t3047;
  t3062 = 0.340999127418*t686*t2994;
  t3064 = t1944*t3020;
  t3089 = t3025*t1983;
  t3096 = t3062 + t3064 + t3089;
  t3209 = t2342*t916;
  t3212 = t2955 + t3209;
  t3264 = t819*t851*t1358;
  t3268 = t2365*t1451;
  t3269 = t3212*t1488;
  t3272 = t3264 + t3268 + t3269;
  t3213 = t989*t3212;
  t3222 = t819*t851*t1113;
  t3233 = t2376 + t3213 + t3222;
  t3244 = t1196*t2365;
  t3247 = -0.340999127418*t778*t3212;
  t3252 = t819*t851*t1202;
  t3254 = t3244 + t3247 + t3252;
  t3242 = 0.340999127418*t686*t3233;
  t3263 = t1186*t3254;
  t3281 = t3272*t1661;
  t3288 = t3242 + t3263 + t3281;
  t3295 = t1798*t3272;
  t3312 = t3233*t1842;
  t3323 = t3254*t1856;
  t3332 = t3295 + t3312 + t3323;
  t3336 = t1944*t3233;
  t3339 = 0.340999127418*t686*t3254;
  t3342 = t3272*t1983;
  t3359 = t3336 + t3339 + t3342;
  t3476 = -1.*t899*t2324*t1100;
  t3490 = t819*t873;
  t3492 = t3476 + t3490;
  t3462 = -1.*t819*t899;
  t3466 = -1.*t2324*t1100*t873;
  t3467 = t3462 + t3466;
  t3472 = t872*t3467;
  t3494 = -1.*t3492*t916;
  t3496 = t3472 + t3494;
  t3503 = t872*t3492;
  t3508 = t3467*t916;
  t3509 = t3503 + t3508;
  t3565 = -1.*t851*t1358*t2324;
  t3567 = t3496*t1451;
  t3569 = t3509*t1488;
  t3571 = t3565 + t3567 + t3569;
  t3498 = -0.340999127418*t778*t3496;
  t3510 = t989*t3509;
  t3511 = -1.*t851*t2324*t1113;
  t3512 = t3498 + t3510 + t3511;
  t3523 = t1196*t3496;
  t3546 = -0.340999127418*t778*t3509;
  t3553 = -1.*t851*t2324*t1202;
  t3557 = t3523 + t3546 + t3553;
  t3515 = 0.340999127418*t686*t3512;
  t3560 = t1186*t3557;
  t3572 = t3571*t1661;
  t3575 = t3515 + t3560 + t3572;
  t3588 = t1798*t3571;
  t3589 = t3512*t1842;
  t3590 = t3557*t1856;
  t3594 = t3588 + t3589 + t3590;
  t3606 = t1944*t3512;
  t3608 = 0.340999127418*t686*t3557;
  t3612 = t3571*t1983;
  t3620 = t3606 + t3608 + t3612;
  t3720 = -0.930418*t702*t2365;
  t3724 = -0.366501*t702*t3212;
  t3728 = -1.000000637725*t819*t851*t1109;
  t3731 = t3720 + t3724 + t3728;
  t3703 = 0.366501*t819*t851*t702;
  t3705 = -0.340999127418*t2365*t1109;
  t3708 = -0.134322983001*t3212*t1109;
  t3709 = t3703 + t3705 + t3708;
  t3677 = 0.930418*t819*t851*t702;
  t3693 = -0.8656776547239999*t2365*t1109;
  t3696 = -0.340999127418*t3212*t1109;
  t3698 = t3677 + t3693 + t3696;
  t3702 = t1186*t3698;
  t3719 = 0.340999127418*t686*t3709;
  t3738 = t3731*t1661;
  t3740 = t3702 + t3719 + t3738;
  t3745 = t1798*t3731;
  t3751 = t3709*t1842;
  t3753 = t3698*t1856;
  t3755 = t3745 + t3751 + t3753;
  t3758 = 0.340999127418*t686*t3698;
  t3759 = t1944*t3709;
  t3760 = t3731*t1983;
  t3768 = t3758 + t3759 + t3760;
  t3829 = -0.930418*t609*t3233;
  t3833 = 0.366501*t609*t3254;
  t3834 = -1.000000637725*t3272*t1563;
  t3837 = t3829 + t3833 + t3834;
  t3852 = -0.366501*t609*t3272;
  t3855 = 0.340999127418*t3233*t1563;
  t3857 = -0.134322983001*t3254*t1563;
  t3858 = t3852 + t3855 + t3857;
  t3863 = 0.930418*t609*t3272;
  t3865 = -0.8656776547239999*t3233*t1563;
  t3874 = 0.340999127418*t3254*t1563;
  t3883 = t3863 + t3865 + t3874;
  t3957 = t851*t872*t2324*t873;
  t3958 = -1.*t851*t899*t2324*t916;
  t3971 = t3957 + t3958;
  t3982 = t851*t899*t872*t2324;
  t3991 = t851*t2324*t873*t916;
  t3998 = t3982 + t3991;
  t4030 = -1.*t1358*t2324*t1100;
  t4040 = t3971*t1451;
  t4044 = t3998*t1488;
  t4050 = t4030 + t4040 + t4044;
  t3973 = -0.340999127418*t778*t3971;
  t4003 = t989*t3998;
  t4004 = -1.*t2324*t1100*t1113;
  t4007 = t3973 + t4003 + t4004;
  t4017 = t1196*t3971;
  t4024 = -0.340999127418*t778*t3998;
  t4025 = -1.*t2324*t1100*t1202;
  t4026 = t4017 + t4024 + t4025;
  t4009 = 0.340999127418*t686*t4007;
  t4028 = t1186*t4026;
  t4054 = t4050*t1661;
  t4060 = t4009 + t4028 + t4054;
  t4070 = t1798*t4050;
  t4071 = t4007*t1842;
  t4086 = t4026*t1856;
  t4100 = t4070 + t4071 + t4086;
  t4103 = t1944*t4007;
  t4106 = 0.340999127418*t686*t4026;
  t4110 = t4050*t1983;
  t4115 = t4103 + t4106 + t4110;
  t4192 = t899*t2324*t1100;
  t4194 = -1.*t819*t873;
  t4196 = t4192 + t4194;
  t4176 = t819*t899;
  t4180 = t2324*t1100*t873;
  t4181 = t4176 + t4180;
  t4190 = t872*t4181;
  t4197 = -1.*t4196*t916;
  t4198 = t4190 + t4197;
  t4212 = -1.*t872*t4196;
  t4213 = -1.*t4181*t916;
  t4222 = t4212 + t4213;
  t4246 = t4222*t1451;
  t4248 = t4198*t1488;
  t4249 = t4246 + t4248;
  t4230 = t989*t4198;
  t4234 = -0.340999127418*t778*t4222;
  t4235 = t4230 + t4234;
  t4203 = -0.340999127418*t778*t4198;
  t4223 = t1196*t4222;
  t4224 = t4203 + t4223;
  t4227 = t1186*t4224;
  t4243 = 0.340999127418*t686*t4235;
  t4251 = t4249*t1661;
  t4261 = t4227 + t4243 + t4251;
  t4270 = t1798*t4249;
  t4273 = t4235*t1842;
  t4274 = t4224*t1856;
  t4283 = t4270 + t4273 + t4274;
  t4290 = 0.340999127418*t686*t4224;
  t4312 = t1944*t4235;
  t4318 = t4249*t1983;
  t4326 = t4290 + t4312 + t4318;
  t4417 = t4196*t916;
  t4419 = t3472 + t4417;
  t4431 = t872*t4196;
  t4432 = -1.*t3467*t916;
  t4433 = t4431 + t4432;
  t4477 = t4433*t1451;
  t4484 = t4419*t1488;
  t4497 = t4477 + t4484;
  t4461 = t989*t4419;
  t4466 = -0.340999127418*t778*t4433;
  t4468 = t4461 + t4466;
  t4424 = -0.340999127418*t778*t4419;
  t4447 = t1196*t4433;
  t4449 = t4424 + t4447;
  t4455 = t1186*t4449;
  t4471 = 0.340999127418*t686*t4468;
  t4505 = t4497*t1661;
  t4511 = t4455 + t4471 + t4505;
  t4524 = t1798*t4497;
  t4528 = t4468*t1842;
  t4542 = t4449*t1856;
  t4544 = t4524 + t4528 + t4542;
  t4583 = 0.340999127418*t686*t4449;
  t4596 = t1944*t4468;
  t4603 = t4497*t1983;
  t4608 = t4583 + t4596 + t4603;
  t4882 = t4181*t916;
  t4887 = t4431 + t4882;
  t4935 = t851*t1358*t2324;
  t4936 = t4198*t1451;
  t4940 = t4887*t1488;
  t4945 = t4935 + t4936 + t4940;
  t4889 = t989*t4887;
  t4894 = t851*t2324*t1113;
  t4901 = t4203 + t4889 + t4894;
  t4909 = t1196*t4198;
  t4913 = -0.340999127418*t778*t4887;
  t4914 = t851*t2324*t1202;
  t4926 = t4909 + t4913 + t4914;
  t4902 = 0.340999127418*t686*t4901;
  t4928 = t1186*t4926;
  t4946 = t4945*t1661;
  t4949 = t4902 + t4928 + t4946;
  t4966 = t1798*t4945;
  t4967 = t4901*t1842;
  t4969 = t4926*t1856;
  t4971 = t4966 + t4967 + t4969;
  t4982 = t1944*t4901;
  t4990 = 0.340999127418*t686*t4926;
  t4996 = t4945*t1983;
  t5017 = t4982 + t4990 + t4996;
  t5227 = -0.930418*t702*t4198;
  t5232 = -0.366501*t702*t4887;
  t5234 = -1.000000637725*t851*t2324*t1109;
  t5248 = t5227 + t5232 + t5234;
  t5189 = 0.366501*t851*t702*t2324;
  t5203 = -0.340999127418*t4198*t1109;
  t5211 = -0.134322983001*t4887*t1109;
  t5215 = t5189 + t5203 + t5211;
  t5161 = 0.930418*t851*t702*t2324;
  t5166 = -0.8656776547239999*t4198*t1109;
  t5168 = -0.340999127418*t4887*t1109;
  t5184 = t5161 + t5166 + t5168;
  t5187 = t1186*t5184;
  t5221 = 0.340999127418*t686*t5215;
  t5251 = t5248*t1661;
  t5254 = t5187 + t5221 + t5251;
  t5270 = t1798*t5248;
  t5271 = t5215*t1842;
  t5276 = t5184*t1856;
  t5288 = t5270 + t5271 + t5276;
  t5294 = 0.340999127418*t686*t5184;
  t5295 = t1944*t5215;
  t5296 = t5248*t1983;
  t5302 = t5294 + t5295 + t5296;
  t5390 = -0.930418*t609*t4901;
  t5391 = 0.366501*t609*t4926;
  t5402 = -1.000000637725*t4945*t1563;
  t5405 = t5390 + t5391 + t5402;
  t5418 = -0.366501*t609*t4945;
  t5419 = 0.340999127418*t4901*t1563;
  t5431 = -0.134322983001*t4926*t1563;
  t5433 = t5418 + t5419 + t5431;
  t5464 = 0.930418*t609*t4945;
  t5466 = -0.8656776547239999*t4901*t1563;
  t5467 = 0.340999127418*t4926*t1563;
  t5468 = t5464 + t5466 + t5467;
  t5583 = t851*t872*t873;
  t5585 = -1.*t851*t899*t916;
  t5596 = t5583 + t5585;
  t5606 = -1.*t851*t899*t872;
  t5610 = -1.*t851*t873*t916;
  t5611 = t5606 + t5610;
  t5677 = t5611*t1451;
  t5683 = t5596*t1488;
  t5689 = t5677 + t5683;
  t5652 = t989*t5596;
  t5654 = -0.340999127418*t778*t5611;
  t5657 = t5652 + t5654;
  t5599 = -0.340999127418*t778*t5596;
  t5628 = t1196*t5611;
  t5639 = t5599 + t5628;
  t5649 = t1186*t5639;
  t5674 = 0.340999127418*t686*t5657;
  t5693 = t5689*t1661;
  t5715 = t5649 + t5674 + t5693;
  t5724 = t1798*t5689;
  t5726 = t5657*t1842;
  t5744 = t5639*t1856;
  t5745 = t5724 + t5726 + t5744;
  t5761 = 0.340999127418*t686*t5639;
  t5768 = t1944*t5657;
  t5769 = t5689*t1983;
  t5772 = t5761 + t5768 + t5769;
  t5986 = -1.*t851*t872*t873;
  t5995 = t851*t899*t916;
  t6004 = t5986 + t5995;
  t6008 = t851*t899*t872;
  t6014 = t851*t873*t916;
  t6020 = t6008 + t6014;
  t6087 = t6020*t1451;
  t6090 = t6004*t1488;
  t6099 = t6087 + t6090;
  t6063 = t989*t6004;
  t6064 = -0.340999127418*t778*t6020;
  t6076 = t6063 + t6064;
  t6005 = -0.340999127418*t778*t6004;
  t6023 = t1196*t6020;
  t6024 = t6005 + t6023;
  t6054 = t1186*t6024;
  t6081 = 0.340999127418*t686*t6076;
  t6102 = t6099*t1661;
  t6103 = t6054 + t6081 + t6102;
  t6114 = t1798*t6099;
  t6116 = t6076*t1842;
  t6124 = t6024*t1856;
  t6141 = t6114 + t6116 + t6124;
  t6145 = 0.340999127418*t686*t6024;
  t6150 = t1944*t6076;
  t6157 = t6099*t1983;
  t6158 = t6145 + t6150 + t6157;
  t6419 = -1.*t1358*t1100;
  t6423 = t5596*t1451;
  t6436 = t6020*t1488;
  t6450 = t6419 + t6423 + t6436;
  t6364 = t989*t6020;
  t6369 = -1.*t1100*t1113;
  t6375 = t5599 + t6364 + t6369;
  t6387 = t1196*t5596;
  t6400 = -1.*t1100*t1202;
  t6403 = t6387 + t6064 + t6400;
  t6377 = 0.340999127418*t686*t6375;
  t6412 = t1186*t6403;
  t6455 = t6450*t1661;
  t6456 = t6377 + t6412 + t6455;
  t6465 = t1798*t6450;
  t6476 = t6375*t1842;
  t6480 = t6403*t1856;
  t6481 = t6465 + t6476 + t6480;
  t6494 = t1944*t6375;
  t6501 = 0.340999127418*t686*t6403;
  t6514 = t6450*t1983;
  t6516 = t6494 + t6501 + t6514;
  t6689 = -1.*t872*t1100*t873;
  t6690 = t899*t1100*t916;
  t6712 = t6689 + t6690;
  t6718 = -1.*t899*t872*t1100;
  t6737 = -1.*t1100*t873*t916;
  t6748 = t6718 + t6737;
  t6850 = -1.*t851*t1358;
  t6857 = t6712*t1451;
  t6864 = t6748*t1488;
  t6875 = t6850 + t6857 + t6864;
  t6717 = -0.340999127418*t778*t6712;
  t6765 = t989*t6748;
  t6772 = -1.*t851*t1113;
  t6789 = t6717 + t6765 + t6772;
  t6815 = t1196*t6712;
  t6828 = -0.340999127418*t778*t6748;
  t6831 = -1.*t851*t1202;
  t6833 = t6815 + t6828 + t6831;
  t6792 = 0.340999127418*t686*t6789;
  t6844 = t1186*t6833;
  t6879 = t6875*t1661;
  t6883 = t6792 + t6844 + t6879;
  t6895 = t1798*t6875;
  t6906 = t6789*t1842;
  t6924 = t6833*t1856;
  t6929 = t6895 + t6906 + t6924;
  t6941 = t1944*t6789;
  t6944 = 0.340999127418*t686*t6833;
  t6946 = t6875*t1983;
  t6958 = t6941 + t6944 + t6946;
  t7076 = -0.930418*t702*t5596;
  t7077 = -0.366501*t702*t6020;
  t7079 = 1.000000637725*t1100*t1109;
  t7083 = t7076 + t7077 + t7079;
  t7051 = -0.366501*t702*t1100;
  t7052 = -0.340999127418*t5596*t1109;
  t7053 = -0.134322983001*t6020*t1109;
  t7055 = t7051 + t7052 + t7053;
  t7034 = -0.930418*t702*t1100;
  t7035 = -0.8656776547239999*t5596*t1109;
  t7037 = -0.340999127418*t6020*t1109;
  t7038 = t7034 + t7035 + t7037;
  t7043 = t1186*t7038;
  t7064 = 0.340999127418*t686*t7055;
  t7093 = t7083*t1661;
  t7099 = t7043 + t7064 + t7093;
  t7109 = t1798*t7083;
  t7128 = t7055*t1842;
  t7139 = t7038*t1856;
  t7143 = t7109 + t7128 + t7139;
  t7168 = 0.340999127418*t686*t7038;
  t7176 = t1944*t7055;
  t7179 = t7083*t1983;
  t7198 = t7168 + t7176 + t7179;
  t7296 = -0.930418*t609*t6375;
  t7297 = 0.366501*t609*t6403;
  t7304 = -1.000000637725*t6450*t1563;
  t7329 = t7296 + t7297 + t7304;
  t7343 = -0.366501*t609*t6450;
  t7352 = 0.340999127418*t6375*t1563;
  t7355 = -0.134322983001*t6403*t1563;
  t7359 = t7343 + t7352 + t7355;
  t7365 = 0.930418*t609*t6450;
  t7368 = -0.8656776547239999*t6375*t1563;
  t7375 = 0.340999127418*t6403*t1563;
  t7377 = t7365 + t7368 + t7375;
  t1683 = 0.340999127418*t96*t1675;
  t1895 = t1757*t1894;
  t2006 = t1922*t1996;
  t2009 = t1683 + t1895 + t2006;
  t2010 = -0.657905*t2009;
  t2059 = t2049*t1675;
  t2102 = t2081*t1894;
  t2112 = 0.340999127418*t96*t1996;
  t2157 = t2059 + t2102 + t2112;
  t2188 = 0.259155*t2157;
  t2216 = t2199*t1675;
  t2261 = t2244*t1894;
  t2288 = t2277*t1996;
  t2289 = t2216 + t2261 + t2288;
  t2604 = 0.340999127418*t96*t2550;
  t2676 = t1757*t2661;
  t2727 = t1922*t2709;
  t2740 = t2604 + t2676 + t2727;
  t2762 = -0.657905*t2740;
  t2775 = t2049*t2550;
  t2780 = t2081*t2661;
  t2782 = 0.340999127418*t96*t2709;
  t2783 = t2775 + t2780 + t2782;
  t2794 = 0.259155*t2783;
  t2822 = t2199*t2550;
  t2834 = t2244*t2661;
  t2896 = t2277*t2709;
  t2905 = t2822 + t2834 + t2896;
  t3034 = 0.340999127418*t96*t3029;
  t3061 = t1757*t3050;
  t3104 = t1922*t3096;
  t3105 = t3034 + t3061 + t3104;
  t3106 = -0.657905*t3105;
  t3113 = t2049*t3029;
  t3114 = t2081*t3050;
  t3124 = 0.340999127418*t96*t3096;
  t3138 = t3113 + t3114 + t3124;
  t3142 = 0.259155*t3138;
  t3148 = t2199*t3029;
  t3165 = t2244*t3050;
  t3166 = t2277*t3096;
  t3185 = t3148 + t3165 + t3166;
  t3290 = -0.366501*t62*t3288;
  t3334 = -1.000000637725*t1687*t3332;
  t3363 = 0.930418*t62*t3359;
  t3368 = t3290 + t3334 + t3363;
  t3379 = 0.340999127418*t1687*t3288;
  t3381 = -0.930418*t62*t3332;
  t3382 = -0.8656776547239999*t1687*t3359;
  t3386 = t3379 + t3381 + t3382;
  t3398 = -0.657905*t3386;
  t3405 = -0.134322983001*t1687*t3288;
  t3417 = 0.366501*t62*t3332;
  t3422 = 0.340999127418*t1687*t3359;
  t3428 = t3405 + t3417 + t3422;
  t3441 = 0.259155*t3428;
  t3584 = 0.340999127418*t96*t3575;
  t3597 = t1757*t3594;
  t3623 = t1922*t3620;
  t3624 = t3584 + t3597 + t3623;
  t3627 = -0.657905*t3624;
  t3628 = t2049*t3575;
  t3630 = t2081*t3594;
  t3639 = 0.340999127418*t96*t3620;
  t3646 = t3628 + t3630 + t3639;
  t3651 = 0.259155*t3646;
  t3654 = t2199*t3575;
  t3657 = t2244*t3594;
  t3663 = t2277*t3620;
  t3664 = t3654 + t3657 + t3663;
  t3743 = 0.340999127418*t96*t3740;
  t3756 = t1757*t3755;
  t3773 = t1922*t3768;
  t3777 = t3743 + t3756 + t3773;
  t3780 = -0.657905*t3777;
  t3793 = t2049*t3740;
  t3794 = t2081*t3755;
  t3795 = 0.340999127418*t96*t3768;
  t3797 = t3793 + t3794 + t3795;
  t3798 = 0.259155*t3797;
  t3801 = t2199*t3740;
  t3805 = t2244*t3755;
  t3814 = t2277*t3768;
  t3819 = t3801 + t3805 + t3814;
  t3838 = t1757*t3837;
  t3862 = 0.340999127418*t96*t3858;
  t3886 = t1922*t3883;
  t3890 = t3838 + t3862 + t3886;
  t3891 = -0.657905*t3890;
  t3892 = t2081*t3837;
  t3894 = t2049*t3858;
  t3897 = 0.340999127418*t96*t3883;
  t3898 = t3892 + t3894 + t3897;
  t3907 = 0.259155*t3898;
  t3919 = t2244*t3837;
  t3924 = t2199*t3858;
  t3925 = t2277*t3883;
  t3928 = t3919 + t3924 + t3925;
  t4062 = 0.340999127418*t96*t4060;
  t4102 = t1757*t4100;
  t4117 = t1922*t4115;
  t4122 = t4062 + t4102 + t4117;
  t4124 = -0.657905*t4122;
  t4131 = t2049*t4060;
  t4134 = t2081*t4100;
  t4142 = 0.340999127418*t96*t4115;
  t4143 = t4131 + t4134 + t4142;
  t4156 = 0.259155*t4143;
  t4157 = t2199*t4060;
  t4161 = t2244*t4100;
  t4162 = t2277*t4115;
  t4165 = t4157 + t4161 + t4162;
  t4263 = 0.340999127418*t96*t4261;
  t4289 = t1757*t4283;
  t4327 = t1922*t4326;
  t4346 = t4263 + t4289 + t4327;
  t4349 = -0.657905*t4346;
  t4351 = t2049*t4261;
  t4373 = t2081*t4283;
  t4377 = 0.340999127418*t96*t4326;
  t4380 = t4351 + t4373 + t4377;
  t4382 = 0.259155*t4380;
  t4384 = t2199*t4261;
  t4390 = t2244*t4283;
  t4391 = t2277*t4326;
  t4400 = t4384 + t4390 + t4391;
  t4522 = 0.340999127418*t96*t4511;
  t4555 = t1757*t4544;
  t4610 = t1922*t4608;
  t4611 = t4522 + t4555 + t4610;
  t4618 = -0.657905*t4611;
  t4621 = t2049*t4511;
  t4626 = t2081*t4544;
  t4654 = 0.340999127418*t96*t4608;
  t4664 = t4621 + t4626 + t4654;
  t4680 = 0.259155*t4664;
  t4712 = t2199*t4511;
  t4715 = t2244*t4544;
  t4718 = t2277*t4608;
  t4719 = t4712 + t4715 + t4718;
  t4758 = 0.340999127418*t96*t3288;
  t4759 = t1757*t3332;
  t4764 = t1922*t3359;
  t4765 = t4758 + t4759 + t4764;
  t4767 = -0.657905*t4765;
  t4783 = t2049*t3288;
  t4785 = t2081*t3332;
  t4787 = 0.340999127418*t96*t3359;
  t4795 = t4783 + t4785 + t4787;
  t4803 = 0.259155*t4795;
  t4806 = t2199*t3288;
  t4815 = t2244*t3332;
  t4833 = t2277*t3359;
  t4835 = t4806 + t4815 + t4833;
  t4960 = -0.366501*t62*t4949;
  t4977 = -1.000000637725*t1687*t4971;
  t5021 = 0.930418*t62*t5017;
  t5022 = t4960 + t4977 + t5021;
  t5042 = 0.340999127418*t1687*t4949;
  t5044 = -0.930418*t62*t4971;
  t5048 = -0.8656776547239999*t1687*t5017;
  t5051 = t5042 + t5044 + t5048;
  t5052 = -0.657905*t5051;
  t5069 = -0.134322983001*t1687*t4949;
  t5082 = 0.366501*t62*t4971;
  t5093 = 0.340999127418*t1687*t5017;
  t5109 = t5069 + t5082 + t5093;
  t5117 = 0.259155*t5109;
  t5262 = 0.340999127418*t96*t5254;
  t5290 = t1757*t5288;
  t5306 = t1922*t5302;
  t5307 = t5262 + t5290 + t5306;
  t5313 = -0.657905*t5307;
  t5324 = t2049*t5254;
  t5332 = t2081*t5288;
  t5333 = 0.340999127418*t96*t5302;
  t5341 = t5324 + t5332 + t5333;
  t5348 = 0.259155*t5341;
  t5357 = t2199*t5254;
  t5364 = t2244*t5288;
  t5370 = t2277*t5302;
  t5371 = t5357 + t5364 + t5370;
  t5409 = t1757*t5405;
  t5458 = 0.340999127418*t96*t5433;
  t5470 = t1922*t5468;
  t5471 = t5409 + t5458 + t5470;
  t5481 = -0.657905*t5471;
  t5487 = t2081*t5405;
  t5488 = t2049*t5433;
  t5492 = 0.340999127418*t96*t5468;
  t5511 = t5487 + t5488 + t5492;
  t5517 = 0.259155*t5511;
  t5518 = t2244*t5405;
  t5520 = t2199*t5433;
  t5521 = t2277*t5468;
  t5533 = t5518 + t5520 + t5521;
  t5723 = 0.340999127418*t96*t5715;
  t5748 = t1757*t5745;
  t5774 = t1922*t5772;
  t5780 = t5723 + t5748 + t5774;
  t5781 = -0.657905*t5780;
  t5794 = t2049*t5715;
  t5810 = t2081*t5745;
  t5842 = 0.340999127418*t96*t5772;
  t5868 = t5794 + t5810 + t5842;
  t5924 = 0.259155*t5868;
  t5927 = t2199*t5715;
  t5933 = t2244*t5745;
  t5946 = t2277*t5772;
  t5947 = t5927 + t5933 + t5946;
  t6110 = 0.340999127418*t96*t6103;
  t6144 = t1757*t6141;
  t6159 = t1922*t6158;
  t6164 = t6110 + t6144 + t6159;
  t6169 = -0.657905*t6164;
  t6173 = t2049*t6103;
  t6211 = t2081*t6141;
  t6212 = 0.340999127418*t96*t6158;
  t6219 = t6173 + t6211 + t6212;
  t6220 = 0.259155*t6219;
  t6251 = t2199*t6103;
  t6253 = t2244*t6141;
  t6263 = t2277*t6158;
  t6332 = t6251 + t6253 + t6263;
  t6458 = -0.366501*t62*t6456;
  t6491 = -1.000000637725*t1687*t6481;
  t6528 = 0.930418*t62*t6516;
  t6538 = t6458 + t6491 + t6528;
  t6540 = 0.340999127418*t1687*t6456;
  t6568 = -0.930418*t62*t6481;
  t6591 = -0.8656776547239999*t1687*t6516;
  t6606 = t6540 + t6568 + t6591;
  t6629 = -0.657905*t6606;
  t6642 = -0.134322983001*t1687*t6456;
  t6643 = 0.366501*t62*t6481;
  t6650 = 0.340999127418*t1687*t6516;
  t6659 = t6642 + t6643 + t6650;
  t6667 = 0.259155*t6659;
  t6884 = 0.340999127418*t96*t6883;
  t6938 = t1757*t6929;
  t6966 = t1922*t6958;
  t6968 = t6884 + t6938 + t6966;
  t6973 = -0.657905*t6968;
  t6976 = t2049*t6883;
  t6978 = t2081*t6929;
  t6979 = 0.340999127418*t96*t6958;
  t6990 = t6976 + t6978 + t6979;
  t6995 = 0.259155*t6990;
  t6996 = t2199*t6883;
  t6998 = t2244*t6929;
  t7008 = t2277*t6958;
  t7022 = t6996 + t6998 + t7008;
  t7101 = 0.340999127418*t96*t7099;
  t7146 = t1757*t7143;
  t7201 = t1922*t7198;
  t7205 = t7101 + t7146 + t7201;
  t7213 = -0.657905*t7205;
  t7217 = t2049*t7099;
  t7222 = t2081*t7143;
  t7225 = 0.340999127418*t96*t7198;
  t7231 = t7217 + t7222 + t7225;
  t7245 = 0.259155*t7231;
  t7262 = t2199*t7099;
  t7263 = t2244*t7143;
  t7268 = t2277*t7198;
  t7276 = t7262 + t7263 + t7268;
  t7334 = t1757*t7329;
  t7361 = 0.340999127418*t96*t7359;
  t7379 = t1922*t7377;
  t7380 = t7334 + t7361 + t7379;
  t7382 = -0.657905*t7380;
  t7402 = t2081*t7329;
  t7405 = t2049*t7359;
  t7413 = 0.340999127418*t96*t7377;
  t7419 = t7402 + t7405 + t7413;
  t7420 = 0.259155*t7419;
  t7434 = t2244*t7329;
  t7438 = t2199*t7359;
  t7442 = t2277*t7377;
  t7458 = t7434 + t7438 + t7442;
  t8171 = -3.2909349868922137e-7*var1[7];
  t8181 = 0.03103092645718495*t778;
  t8188 = -0.045000372235*t1113;
  t8189 = t8171 + t8181 + t8188;
  t8192 = 1.296332362046933e-7*var1[7];
  t8193 = 0.07877668146182712*t778;
  t8194 = -0.045000372235*t1202;
  t8196 = t8192 + t8193 + t8194;
  t8215 = 3.2909349868922137e-7*var1[8];
  t8216 = 0.055653945343889656*t686;
  t8217 = -0.045000372235*t1661;
  t8219 = t8215 + t8216 + t8217;
  t8229 = -1.5981976069815686e-7*var1[9];
  t8230 = 0.08675267452931407*t96;
  t8235 = 0.039853013046*t2081;
  t8242 = t8229 + t8230 + t8235;
  t8244 = -0.04500040093286238*t686;
  t8245 = -0.141285834136*t1842;
  t8247 = 0.055653909852*t1856;
  t8250 = 0. + t8244 + t8245 + t8247;
  t8257 = 0.039853038461262744*t96;
  t8258 = 0.086752619205*t2199;
  t8260 = -0.22023459268999998*t2277;
  t8263 = 0. + t8257 + t8258 + t8260;
  t8269 = 1.296332362046933e-7*var1[8];
  t8275 = -0.14128592423750855*t686;
  t8276 = -0.045000372235*t1983;
  t8278 = t8269 + t8275 + t8276;
  t8281 = -6.295460977284962e-8*var1[9];
  t8285 = -0.22023473313910558*t96;
  t8286 = 0.039853013046*t1757;
  t8292 = t8281 + t8285 + t8286;
  t8129 = -1.*t872;
  t8130 = 1. + t8129;
  t8137 = 0.091*t8130;
  t8138 = 0. + t8137;
  t8148 = 0.091*t916;
  t8156 = 0. + t8148;
  t8161 = -0.04500040093286238*t778;
  t8162 = 0.07877663122399998*t1451;
  t8163 = 0.031030906668*t1488;
  t8166 = 0. + t8161 + t8162 + t8163;
  t8441 = 0.014606169134372047*t62;
  t8446 = 0.08675267452931407*t1687;
  t8447 = -1.5981976069815686e-7 + t8441 + t8446;
  t8451 = -0.23670515095269612*t62;
  t8453 = 0.039853038461262744*t1687;
  t8454 = t8451 + t8453;
  t8463 = -0.03707996069223323*t62;
  t8464 = -0.22023473313910558*t1687;
  t8467 = -6.295460977284962e-8 + t8463 + t8464;
  t8549 = -0.0846680539949003*t702;
  t8550 = -0.04500040093286238*t1109;
  t8552 = t8549 + t8550;
  t8554 = -0.016492681424499736*t702;
  t8555 = 0.03103092645718495*t1109;
  t8556 = -3.2909349868922137e-7 + t8554 + t8555;
  t8558 = -0.04186915633414423*t702;
  t8561 = 0.07877668146182712*t1109;
  t8563 = 1.296332362046933e-7 + t8558 + t8561;
  t8595 = -0.04186915633414423*t609;
  t8596 = -0.14128592423750855*t1563;
  t8601 = 1.296332362046933e-7 + t8595 + t8596;
  t8614 = 0.15185209683981668*t609;
  t8615 = -0.04500040093286238*t1563;
  t8616 = t8614 + t8615;
  t8624 = 0.016492681424499736*t609;
  t8625 = 0.055653945343889656*t1563;
  t8628 = 3.2909349868922137e-7 + t8624 + t8625;
  p_output1[0]=(t3627 + t3651 - 0.707107*t3664)*var2[3] + (t2010 + t2188 - 0.707107*t2289)*var2[4] + (t3106 + t3142 - 0.707107*t3185)*var2[5] + (t2762 + t2794 - 0.707107*t2905)*var2[6] + (t3780 + t3798 - 0.707107*t3819)*var2[7] + (t3891 + t3907 - 0.707107*t3928)*var2[8] + (-0.707107*t3368 + t3398 + t3441)*var2[9];
  p_output1[1]=(t4767 + t4803 - 0.707107*t4835)*var2[3] + (t4124 + t4156 - 0.707107*t4165)*var2[4] + (t4618 + t4680 - 0.707107*t4719)*var2[5] + (t4349 + t4382 - 0.707107*t4400)*var2[6] + (t5313 + t5348 - 0.707107*t5371)*var2[7] + (t5481 + t5517 - 0.707107*t5533)*var2[8] + (-0.707107*t5022 + t5052 + t5117)*var2[9];
  p_output1[2]=(t6973 + t6995 - 0.707107*t7022)*var2[4] + (t6169 + t6220 - 0.707107*t6332)*var2[5] + (t5781 + t5924 - 0.707107*t5947)*var2[6] + (t7213 + t7245 - 0.707107*t7276)*var2[7] + (t7382 + t7420 - 0.707107*t7458)*var2[8] + (-0.707107*t6538 + t6629 + t6667)*var2[9];
  p_output1[3]=0;
  p_output1[4]=(t3627 + t3651 + 0.707107*t3664)*var2[3] + (t2010 + t2188 + 0.707107*t2289)*var2[4] + (t3106 + t3142 + 0.707107*t3185)*var2[5] + (t2762 + t2794 + 0.707107*t2905)*var2[6] + (t3780 + t3798 + 0.707107*t3819)*var2[7] + (t3891 + t3907 + 0.707107*t3928)*var2[8] + (0.707107*t3368 + t3398 + t3441)*var2[9];
  p_output1[5]=(t4767 + t4803 + 0.707107*t4835)*var2[3] + (t4124 + t4156 + 0.707107*t4165)*var2[4] + (t4618 + t4680 + 0.707107*t4719)*var2[5] + (t4349 + t4382 + 0.707107*t4400)*var2[6] + (t5313 + t5348 + 0.707107*t5371)*var2[7] + (t5481 + t5517 + 0.707107*t5533)*var2[8] + (0.707107*t5022 + t5052 + t5117)*var2[9];
  p_output1[6]=(t6973 + t6995 + 0.707107*t7022)*var2[4] + (t6169 + t6220 + 0.707107*t6332)*var2[5] + (t5781 + t5924 + 0.707107*t5947)*var2[6] + (t7213 + t7245 + 0.707107*t7276)*var2[7] + (t7382 + t7420 + 0.707107*t7458)*var2[8] + (0.707107*t6538 + t6629 + t6667)*var2[9];
  p_output1[7]=0;
  p_output1[8]=(-0.366501*t3624 - 0.930418*t3646)*var2[3] + (-0.366501*t2009 - 0.930418*t2157)*var2[4] + (-0.366501*t3105 - 0.930418*t3138)*var2[5] + (-0.366501*t2740 - 0.930418*t2783)*var2[6] + (-0.366501*t3777 - 0.930418*t3797)*var2[7] + (-0.366501*t3890 - 0.930418*t3898)*var2[8] + (-0.366501*t3386 - 0.930418*t3428)*var2[9];
  p_output1[9]=(-0.366501*t4765 - 0.930418*t4795)*var2[3] + (-0.366501*t4122 - 0.930418*t4143)*var2[4] + (-0.366501*t4611 - 0.930418*t4664)*var2[5] + (-0.366501*t4346 - 0.930418*t4380)*var2[6] + (-0.366501*t5307 - 0.930418*t5341)*var2[7] + (-0.366501*t5471 - 0.930418*t5511)*var2[8] + (-0.366501*t5051 - 0.930418*t5109)*var2[9];
  p_output1[10]=(-0.366501*t6968 - 0.930418*t6990)*var2[4] + (-0.366501*t6164 - 0.930418*t6219)*var2[5] + (-0.366501*t5780 - 0.930418*t5868)*var2[6] + (-0.366501*t7205 - 0.930418*t7231)*var2[7] + (-0.366501*t7380 - 0.930418*t7419)*var2[8] + (-0.366501*t6606 - 0.930418*t6659)*var2[9];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (-0.189386*t3624 + 0.165064*t3646 + 0.039853*t3664 + t3467*t8138 + t3492*t8156 + t3509*t8189 + t3496*t8196 + t3557*t8219 + t3575*t8242 + t3571*t8250 + t3594*t8263 + t3512*t8278 + t3620*t8292 - 1.*t2324*t8166*t851)*var2[3] + (-0.189386*t2009 + 0.165064*t2157 + 0.039853*t2289 + t1054*t8189 - 1.*t1100*t8166*t819 + t1211*t8219 + t1675*t8242 + t1496*t8250 + t1894*t8263 + t1127*t8278 + t1996*t8292 + t8138*t819*t851*t873 + t8156*t819*t851*t899 + t8196*t943)*var2[4] + (-0.189386*t3105 + 0.165064*t3138 + 0.039853*t3185 + t2356*t8138 + t2933*t8156 + t2948*t8189 + t2976*t8196 + t2994*t8219 + t3029*t8242 + t3025*t8250 + t3050*t8263 + t3020*t8278 + t3096*t8292)*var2[5] + (-0.189386*t2740 + 0.165064*t2783 + 0.039853*t2905 + t2365*t8189 + t2420*t8196 + t2454*t8219 + t2550*t8242 + t2541*t8250 + t2661*t8263 + t2518*t8278 + t2709*t8292 + 0.091*t2356*t872 + 0.091*t2342*t916)*var2[6] + (-0.189386*t3777 + 0.165064*t3797 + 0.039853*t3819 + t3698*t8219 + t3740*t8242 + t3731*t8250 + t3755*t8263 + t3709*t8278 + t3768*t8292 + t819*t851*t8552 + t3212*t8556 + t2365*t8563)*var2[7] + (-0.189386*t3890 + 0.165064*t3898 + 0.039853*t3928 + t3858*t8242 + t3837*t8263 + t3883*t8292 + t3233*t8601 + t3272*t8616 + t3254*t8628)*var2[8] + (0.039853*t3368 - 0.189386*t3386 + 0.165064*t3428 + t3288*t8447 + t3332*t8454 + t3359*t8467)*var2[9];
  p_output1[13]=var2[1] + (-0.189386*t4765 + 0.165064*t4795 + 0.039853*t4835 + t2342*t8138 + t2356*t8156 + t3212*t8189 + t2365*t8196 + t3254*t8219 + t3288*t8242 + t3272*t8250 + t3332*t8263 + t3233*t8278 + t3359*t8292 + t8166*t819*t851)*var2[3] + (-0.189386*t4122 + 0.165064*t4143 + 0.039853*t4165 - 1.*t1100*t2324*t8166 + t3998*t8189 + t3971*t8196 + t4026*t8219 + t4060*t8242 + t4050*t8250 + t4100*t8263 + t4007*t8278 + t4115*t8292 + t2324*t8138*t851*t873 + t2324*t8156*t851*t899)*var2[4] + (-0.189386*t4611 + 0.165064*t4664 + 0.039853*t4719 + t4196*t8138 + t3467*t8156 + t4419*t8189 + t4433*t8196 + t4449*t8219 + t4511*t8242 + t4497*t8250 + t4544*t8263 + t4468*t8278 + t4608*t8292)*var2[5] + (-0.189386*t4346 + 0.165064*t4380 + 0.039853*t4400 + t4198*t8189 + t4222*t8196 + t4224*t8219 + t4261*t8242 + t4249*t8250 + t4283*t8263 + t4235*t8278 + t4326*t8292 + 0.091*t4196*t872 + 0.091*t4181*t916)*var2[6] + (-0.189386*t5307 + 0.165064*t5341 + 0.039853*t5371 + t5184*t8219 + t5254*t8242 + t5248*t8250 + t5288*t8263 + t5215*t8278 + t5302*t8292 + t2324*t851*t8552 + t4887*t8556 + t4198*t8563)*var2[7] + (-0.189386*t5471 + 0.165064*t5511 + 0.039853*t5533 + t5433*t8242 + t5405*t8263 + t5468*t8292 + t4901*t8601 + t4945*t8616 + t4926*t8628)*var2[8] + (0.039853*t5022 - 0.189386*t5051 + 0.165064*t5109 + t4949*t8447 + t4971*t8454 + t5017*t8467)*var2[9];
  p_output1[14]=var2[2] + (-0.189386*t6968 + 0.165064*t6990 + 0.039853*t7022 + t6748*t8189 + t6712*t8196 + t6833*t8219 + t6883*t8242 + t6875*t8250 + t6929*t8263 + t6789*t8278 + t6958*t8292 - 1.*t8166*t851 - 1.*t1100*t8138*t873 - 1.*t1100*t8156*t899)*var2[4] + (-0.189386*t6164 + 0.165064*t6219 + 0.039853*t6332 + t6004*t8189 + t6020*t8196 + t6024*t8219 + t6103*t8242 + t6099*t8250 + t6141*t8263 + t6076*t8278 + t6158*t8292 - 1.*t8156*t851*t873 + t8138*t851*t899)*var2[5] + (-0.189386*t5780 + 0.165064*t5868 + 0.039853*t5947 + t5596*t8189 + t5611*t8196 + t5639*t8219 + t5715*t8242 + t5689*t8250 + t5745*t8263 + t5657*t8278 + t5772*t8292 + 0.091*t851*t872*t899 + 0.091*t851*t873*t916)*var2[6] + (-0.189386*t7205 + 0.165064*t7231 + 0.039853*t7276 + t7038*t8219 + t7099*t8242 + t7083*t8250 + t7143*t8263 + t7055*t8278 + t7198*t8292 - 1.*t1100*t8552 + t6020*t8556 + t5596*t8563)*var2[7] + (-0.189386*t7380 + 0.165064*t7419 + 0.039853*t7458 + t7359*t8242 + t7329*t8263 + t7377*t8292 + t6375*t8601 + t6450*t8616 + t6403*t8628)*var2[8] + (0.039853*t6538 - 0.189386*t6606 + 0.165064*t6659 + t6456*t8447 + t6481*t8454 + t6516*t8467)*var2[9];
  p_output1[15]=0;
}



void dT_knee_joint_left_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
