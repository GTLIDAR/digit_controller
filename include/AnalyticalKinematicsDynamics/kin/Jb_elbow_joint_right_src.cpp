/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:55:44 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jb_elbow_joint_right_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t620;
  double t340;
  double t342;
  double t354;
  double t365;
  double t459;
  double t480;
  double t504;
  double t244;
  double t298;
  double t339;
  double t553;
  double t601;
  double t613;
  double t771;
  double t803;
  double t813;
  double t931;
  double t938;
  double t952;
  double t999;
  double t1072;
  double t1133;
  double t1220;
  double t1260;
  double t1297;
  double t1309;
  double t1344;
  double t1366;
  double t1006;
  double t1483;
  double t1518;
  double t1526;
  double t1548;
  double t1580;
  double t1590;
  double t1606;
  double t1673;
  double t1896;
  double t363;
  double t374;
  double t388;
  double t1004;
  double t1038;
  double t1064;
  double t1369;
  double t1374;
  double t1436;
  double t1682;
  double t1787;
  double t1905;
  double t1910;
  double t1972;
  double t1984;
  double t1989;
  double t2008;
  double t2045;
  double t2092;
  double t2169;
  double t2192;
  double t2218;
  double t2232;
  double t2267;
  double t2273;
  double t2283;
  double t2284;
  double t2292;
  double t2308;
  double t2494;
  double t2509;
  double t2513;
  double t2579;
  double t1793;
  double t1821;
  double t1834;
  double t2194;
  double t2222;
  double t2223;
  double t2545;
  double t2557;
  double t242;
  double t2592;
  double t2600;
  double t2601;
  double t2607;
  double t2617;
  double t2620;
  double t2652;
  double t2666;
  double t234;
  double t2716;
  double t2831;
  double t2881;
  double t2562;
  double t2678;
  double t2696;
  double t2920;
  double t106;
  double t3306;
  double t3307;
  double t3327;
  double t3347;
  double t3364;
  double t3366;
  double t3367;
  double t3387;
  double t3412;
  double t3415;
  double t3440;
  double t3449;
  double t3348;
  double t3391;
  double t3484;
  double t3509;
  double t3558;
  double t3565;
  double t3569;
  double t3578;
  double t3637;
  double t3645;
  double t3649;
  double t3658;
  double t3521;
  double t3622;
  double t3660;
  double t3662;
  double t3688;
  double t3714;
  double t3719;
  double t3772;
  double t2949;
  double t2974;
  double t2998;
  double t3013;
  double t3058;
  double t3061;
  double t3080;
  double t3101;
  double t3142;
  double t3795;
  double t3801;
  double t3805;
  double t3678;
  double t3778;
  double t3780;
  double t4160;
  double t4180;
  double t4188;
  double t4081;
  double t4110;
  double t4152;
  double t4197;
  double t4203;
  double t4217;
  double t4155;
  double t4192;
  double t4222;
  double t4232;
  double t4274;
  double t4319;
  double t4343;
  double t4367;
  double t4402;
  double t4404;
  double t4405;
  double t4406;
  double t4255;
  double t4390;
  double t4418;
  double t4422;
  double t4514;
  double t4515;
  double t4519;
  double t4523;
  double t4573;
  double t4576;
  double t4643;
  double t4456;
  double t4529;
  double t4544;
  double t2700;
  double t2933;
  double t2934;
  double t3055;
  double t3065;
  double t3106;
  double t3110;
  double t3134;
  double t3158;
  double t3178;
  double t3179;
  double t3213;
  double t3217;
  double t3785;
  double t3833;
  double t3844;
  double t3898;
  double t3941;
  double t3942;
  double t3951;
  double t3956;
  double t3958;
  double t3976;
  double t3982;
  double t4009;
  double t4040;
  double t4556;
  double t4654;
  double t4687;
  double t4729;
  double t4737;
  double t4742;
  double t4750;
  double t4766;
  double t4767;
  double t4774;
  double t4776;
  double t4786;
  double t4789;
  double t4943;
  double t4962;
  double t4969;
  double t5033;
  double t5092;
  double t5110;
  double t5111;
  double t5143;
  double t5155;
  double t5162;
  double t5192;
  double t5198;
  double t5213;
  double t5218;
  double t5237;
  double t5269;
  double t5271;
  double t5285;
  double t5291;
  double t5330;
  double t5348;
  double t5361;
  double t5364;
  double t5417;
  double t5054;
  double t5018;
  double t5029;
  double t5038;
  double t5047;
  double t5073;
  double t5075;
  double t5163;
  double t5277;
  double t5375;
  double t5383;
  double t5408;
  double t5416;
  double t5420;
  double t5438;
  double t5465;
  double t5480;
  double t5487;
  double t5499;
  double t5510;
  double t5511;
  double t5528;
  double t5532;
  double t5533;
  double t5540;
  double t5547;
  double t5548;
  double t5554;
  double t5561;
  double t5575;
  double t5581;
  double t4978;
  double t4979;
  double t4995;
  double t5003;
  double t5005;
  double t5386;
  double t5514;
  double t5585;
  double t5600;
  double t5602;
  double t5608;
  double t5609;
  double t5618;
  double t5632;
  double t5643;
  double t5647;
  double t4970;
  double t4975;
  double t4976;
  double t5676;
  double t5677;
  double t5686;
  double t5691;
  double t5696;
  double t4987;
  double t4988;
  double t5601;
  double t5651;
  double t5663;
  double t5720;
  double t5723;
  double t5726;
  double t5744;
  double t5759;
  double t5765;
  double t5787;
  double t5815;
  double t5828;
  double t5830;
  double t5675;
  double t5698;
  double t5710;
  double t5812;
  double t5836;
  double t5839;
  double t5845;
  double t5847;
  double t5862;
  double t4928;
  double t4935;
  double t4938;
  double t5716;
  double t5895;
  double t5919;
  double t5946;
  double t5973;
  double t6001;
  double t6098;
  double t6041;
  double t6156;
  double t6135;
  double t6203;
  double t6186;
  double t6648;
  double t6651;
  double t6654;
  double t6657;
  double t6661;
  double t6671;
  double t6677;
  double t6689;
  double t6778;
  double t6781;
  double t6782;
  double t6787;
  double t6796;
  double t6816;
  double t6817;
  double t6818;
  double t6857;
  double t6858;
  double t6861;
  double t6862;
  double t6874;
  double t6879;
  double t6882;
  double t6884;
  double t6959;
  double t6962;
  double t6967;
  double t6972;
  double t6983;
  double t6986;
  double t6988;
  double t7006;
  double t7079;
  double t7083;
  double t7084;
  double t7088;
  double t7091;
  double t7093;
  double t7100;
  double t7105;
  double t7183;
  double t7185;
  double t7196;
  double t7200;
  double t7171;
  double t7176;
  double t7177;
  double t7179;
  t620 = Sin(var1[27]);
  t340 = Cos(var1[26]);
  t342 = -1.*t340;
  t354 = 1. + t342;
  t365 = Sin(var1[26]);
  t459 = Cos(var1[27]);
  t480 = -1.*t459;
  t504 = 1. + t480;
  t244 = Cos(var1[25]);
  t298 = -1.*t244;
  t339 = 1. + t298;
  t553 = -1.0000001112680001*t504;
  t601 = 1. + t553;
  t613 = 0.92388*t601;
  t771 = -0.994522*t620;
  t803 = 0. + t771;
  t813 = 0.380588*t803;
  t931 = -0.104528*t620;
  t938 = 0. + t931;
  t952 = 0.040001*t938;
  t999 = t613 + t813 + t952;
  t1072 = -0.010926102783999999*t504;
  t1133 = 1. + t1072;
  t1220 = 0.040001*t1133;
  t1260 = -0.0395641761067022*t504;
  t1297 = 0.104528*t620;
  t1309 = 0. + t1297;
  t1344 = 0.92388*t1309;
  t1366 = t1220 + t1260 + t1344;
  t1006 = 0.051978134642000004*t354;
  t1483 = -0.9890740084840001*t504;
  t1518 = 1. + t1483;
  t1526 = 0.380588*t1518;
  t1548 = -0.004158319780035616*t504;
  t1580 = 0.994522*t620;
  t1590 = 0. + t1580;
  t1606 = 0.92388*t1590;
  t1673 = t1526 + t1548 + t1606;
  t1896 = -0.05226439969100001*t354;
  t363 = -0.49726168403800003*t354;
  t374 = 0.073913*t365;
  t388 = t363 + t374;
  t1004 = t388*t999;
  t1038 = 0.707107*t365;
  t1064 = t1006 + t1038;
  t1369 = t1064*t1366;
  t1374 = -0.5054634410180001*t354;
  t1436 = 1. + t1374;
  t1682 = t1436*t1673;
  t1787 = 0. + t1004 + t1369 + t1682;
  t1905 = -0.703234*t365;
  t1910 = t1896 + t1905;
  t1972 = t1910*t999;
  t1984 = -0.9945383682050002*t354;
  t1989 = 1. + t1984;
  t2008 = t1989*t1366;
  t2045 = -0.707107*t365;
  t2092 = t1006 + t2045;
  t2169 = t2092*t1673;
  t2192 = 0. + t1972 + t2008 + t2169;
  t2218 = Sin(var1[25]);
  t2232 = -0.500001190325*t354;
  t2267 = 1. + t2232;
  t2273 = t2267*t999;
  t2283 = 0.703234*t365;
  t2284 = t1896 + t2283;
  t2292 = t2284*t1366;
  t2308 = -0.073913*t365;
  t2494 = t363 + t2308;
  t2509 = t2494*t1673;
  t2513 = 0. + t2273 + t2292 + t2509;
  t2579 = Sin(var1[24]);
  t1793 = -0.103955395616*t339*t1787;
  t1821 = -0.010926102783999999*t339;
  t1834 = 1. + t1821;
  t2194 = t1834*t2192;
  t2222 = 0.104528*t2218;
  t2223 = 0. + t2222;
  t2545 = t2223*t2513;
  t2557 = 0. + t1793 + t2194 + t2545;
  t242 = Cos(var1[24]);
  t2592 = -0.9890740084840001*t339;
  t2600 = 1. + t2592;
  t2601 = t2600*t1787;
  t2607 = -0.103955395616*t339*t2192;
  t2617 = 0.994522*t2218;
  t2620 = 0. + t2617;
  t2652 = t2620*t2513;
  t2666 = 0. + t2601 + t2607 + t2652;
  t234 = Cos(var1[5]);
  t2716 = -1.*t2579*t2557;
  t2831 = t242*t2666;
  t2881 = 0. + t2716 + t2831;
  t2562 = t242*t2557;
  t2678 = t2579*t2666;
  t2696 = 0. + t2562 + t2678;
  t2920 = Sin(var1[5]);
  t106 = Sin(var1[3]);
  t3306 = -0.382684*t601;
  t3307 = 0.918819*t803;
  t3327 = 0.096572*t938;
  t3347 = t3306 + t3307 + t3327;
  t3364 = 0.096572*t1133;
  t3366 = -0.0955161926444975*t504;
  t3367 = -0.382684*t1309;
  t3387 = t3364 + t3366 + t3367;
  t3412 = 0.918819*t1518;
  t3415 = -0.010039180465428352*t504;
  t3440 = -0.382684*t1590;
  t3449 = t3412 + t3415 + t3440;
  t3348 = t388*t3347;
  t3391 = t1064*t3387;
  t3484 = t1436*t3449;
  t3509 = 0. + t3348 + t3391 + t3484;
  t3558 = t1910*t3347;
  t3565 = t1989*t3387;
  t3569 = t2092*t3449;
  t3578 = 0. + t3558 + t3565 + t3569;
  t3637 = t2267*t3347;
  t3645 = t2284*t3387;
  t3649 = t2494*t3449;
  t3658 = 0. + t3637 + t3645 + t3649;
  t3521 = -0.103955395616*t339*t3509;
  t3622 = t1834*t3578;
  t3660 = t2223*t3658;
  t3662 = 0. + t3521 + t3622 + t3660;
  t3688 = t2600*t3509;
  t3714 = -0.103955395616*t339*t3578;
  t3719 = t2620*t3658;
  t3772 = 0. + t3688 + t3714 + t3719;
  t2949 = Cos(var1[3]);
  t2974 = Cos(var1[4]);
  t2998 = -0.994522*t2218;
  t3013 = 0. + t2998;
  t3058 = -0.104528*t2218;
  t3061 = 0. + t3058;
  t3080 = -1.0000001112680001*t339;
  t3101 = 1. + t3080;
  t3142 = Sin(var1[4]);
  t3795 = -1.*t2579*t3662;
  t3801 = t242*t3772;
  t3805 = 0. + t3795 + t3801;
  t3678 = t242*t3662;
  t3778 = t2579*t3772;
  t3780 = 0. + t3678 + t3778;
  t4160 = -0.994522*t1133;
  t4180 = -0.010866249592949247*t504;
  t4188 = t4160 + t4180;
  t4081 = 0.104528*t1518;
  t4110 = 0.10338592795881554*t504;
  t4152 = t4081 + t4110;
  t4197 = 0.104528*t803;
  t4203 = -0.994522*t938;
  t4217 = t4197 + t4203;
  t4155 = t4152*t2494;
  t4192 = t4188*t2284;
  t4222 = t2267*t4217;
  t4232 = 0. + t4155 + t4192 + t4222;
  t4274 = t1989*t4188;
  t4319 = t4152*t2092;
  t4343 = t1910*t4217;
  t4367 = 0. + t4274 + t4319 + t4343;
  t4402 = t1436*t4152;
  t4404 = t4188*t1064;
  t4405 = t388*t4217;
  t4406 = 0. + t4402 + t4404 + t4405;
  t4255 = t2620*t4232;
  t4390 = -0.103955395616*t339*t4367;
  t4418 = t2600*t4406;
  t4422 = 0. + t4255 + t4390 + t4418;
  t4514 = t2223*t4232;
  t4515 = t1834*t4367;
  t4519 = -0.103955395616*t339*t4406;
  t4523 = 0. + t4514 + t4515 + t4519;
  t4573 = t242*t4422;
  t4576 = -1.*t2579*t4523;
  t4643 = 0. + t4573 + t4576;
  t4456 = t2579*t4422;
  t4529 = t242*t4523;
  t4544 = 0. + t4456 + t4529;
  t2700 = t234*t2696;
  t2933 = -1.*t2881*t2920;
  t2934 = 0. + t2700 + t2933;
  t3055 = t3013*t1787;
  t3065 = t3061*t2192;
  t3106 = t3101*t2513;
  t3110 = 0. + t3055 + t3065 + t3106;
  t3134 = t2974*t3110;
  t3158 = t234*t2881;
  t3178 = t2696*t2920;
  t3179 = 0. + t3158 + t3178;
  t3213 = t3142*t3179;
  t3217 = 0. + t3134 + t3213;
  t3785 = t234*t3780;
  t3833 = -1.*t3805*t2920;
  t3844 = 0. + t3785 + t3833;
  t3898 = t3013*t3509;
  t3941 = t3061*t3578;
  t3942 = t3101*t3658;
  t3951 = 0. + t3898 + t3941 + t3942;
  t3956 = t2974*t3951;
  t3958 = t234*t3805;
  t3976 = t3780*t2920;
  t3982 = 0. + t3958 + t3976;
  t4009 = t3142*t3982;
  t4040 = 0. + t3956 + t4009;
  t4556 = t234*t4544;
  t4654 = -1.*t4643*t2920;
  t4687 = 0. + t4556 + t4654;
  t4729 = t3101*t4232;
  t4737 = t3061*t4367;
  t4742 = t3013*t4406;
  t4750 = 0. + t4729 + t4737 + t4742;
  t4766 = t2974*t4750;
  t4767 = t234*t4643;
  t4774 = t4544*t2920;
  t4776 = 0. + t4767 + t4774;
  t4786 = t3142*t4776;
  t4789 = 0. + t4766 + t4786;
  t4943 = -1.*t3951*t3142;
  t4962 = t2974*t3982;
  t4969 = 0. + t4943 + t4962;
  t5033 = -0.051978134642000004*t354;
  t5092 = -4.817066759205414e-7*var1[27];
  t5110 = -0.272168*t1133;
  t5111 = -0.0029737557303853007*t504;
  t5143 = 0.190987300194*t938;
  t5155 = 0.190987*t1309;
  t5162 = t5092 + t5110 + t5111 + t5143 + t5155;
  t5192 = 0.190987*t601;
  t5198 = 0.19098732144477495*t504;
  t5213 = 0.167144*t803;
  t5218 = -0.272168*t938;
  t5237 = 0.014401763312*t1309;
  t5269 = 0.137024246638*t1590;
  t5271 = 0. + t5192 + t5198 + t5213 + t5218 + t5237 + t5269;
  t5285 = 5.06291820800569e-8*var1[27];
  t5291 = 0.167144*t1518;
  t5330 = 0.16531759399842938*t504;
  t5348 = 0.190987300194*t803;
  t5361 = 0.190987*t1590;
  t5364 = t5285 + t5291 + t5330 + t5348 + t5361;
  t5417 = 0.05226439969100001*t354;
  t5054 = 0.49726168403800003*t354;
  t5018 = 1.5601527583902087e-7*var1[26];
  t5029 = 0.09582494577057615*t354;
  t5038 = t5033 + t2045;
  t5047 = -0.231098203479*t5038;
  t5073 = t5054 + t2308;
  t5075 = 0.164383620275*t5073;
  t5163 = t1064*t5162;
  t5277 = t388*t5271;
  t5375 = t1436*t5364;
  t5383 = t5018 + t5029 + t5047 + t5075 + t5163 + t5277 + t5375;
  t5408 = 1.639789470231751e-8*var1[26];
  t5416 = -0.22983603018311177*t354;
  t5420 = t5417 + t2283;
  t5438 = 0.164383620275*t5420;
  t5465 = t5033 + t1038;
  t5480 = 0.18957839082800002*t5465;
  t5487 = t1989*t5162;
  t5499 = t1910*t5271;
  t5510 = t2092*t5364;
  t5511 = t5408 + t5416 + t5438 + t5480 + t5487 + t5499 + t5510;
  t5528 = -1.568745163810375e-7*var1[26];
  t5532 = 0.08219200580743281*t354;
  t5533 = t5417 + t1905;
  t5540 = -0.231098203479*t5533;
  t5547 = t5054 + t374;
  t5548 = 0.18957839082800002*t5547;
  t5554 = t2284*t5162;
  t5561 = t2267*t5271;
  t5575 = t2494*t5364;
  t5581 = t5528 + t5532 + t5540 + t5548 + t5554 + t5561 + t5575;
  t4978 = -1.*t242;
  t4979 = 1. + t4978;
  t4995 = 1.1345904784751044e-7*var1[25];
  t5003 = 0.04027119345689465*t339;
  t5005 = -0.05650052807*t3061;
  t5386 = -0.103955395616*t339*t5383;
  t5514 = t1834*t5511;
  t5585 = t2223*t5581;
  t5600 = t4995 + t5003 + t5005 + t5386 + t5514 + t5585;
  t5602 = -1.1924972351948546e-8*var1[25];
  t5608 = 0.38315655000705834*t339;
  t5609 = -0.05650052807*t3013;
  t5618 = t2600*t5383;
  t5632 = -0.103955395616*t339*t5511;
  t5643 = t2620*t5581;
  t5647 = t5602 + t5608 + t5609 + t5618 + t5632 + t5643;
  t4970 = -1.*t4750*t3142;
  t4975 = t2974*t4776;
  t4976 = 0. + t4970 + t4975;
  t5676 = 0.4*t4979;
  t5677 = -0.12*t2579;
  t5686 = -1.*t2579*t5600;
  t5691 = t242*t5647;
  t5696 = 0. + t5676 + t5677 + t5686 + t5691;
  t4987 = -0.12*t4979;
  t4988 = -0.4*t2579;
  t5601 = t242*t5600;
  t5651 = t2579*t5647;
  t5663 = 0. + t4987 + t4988 + t5601 + t5651;
  t5720 = -0.056500534356700764*t339;
  t5723 = 0.040271188976*t2223;
  t5726 = 0.38315650737400003*t2620;
  t5744 = t3013*t5383;
  t5759 = t3061*t5511;
  t5765 = t3101*t5581;
  t5787 = 0. + t5720 + t5723 + t5726 + t5744 + t5759 + t5765;
  t5815 = t234*t5696;
  t5828 = t5663*t2920;
  t5830 = 0. + t5815 + t5828;
  t5675 = t234*t5663;
  t5698 = -1.*t5696*t2920;
  t5710 = 0. + t5675 + t5698;
  t5812 = -1.*t5787*t3142;
  t5836 = t2974*t5830;
  t5839 = 0. + t5812 + t5836;
  t5845 = t2974*t5787;
  t5847 = t3142*t5830;
  t5862 = 0. + t5845 + t5847;
  t4928 = -1.*t3110*t3142;
  t4935 = t2974*t3179;
  t4938 = 0. + t4928 + t4935;
  t5716 = t4687*t5710;
  t5895 = -1.*t3844*t5710;
  t5919 = -1.*t4687*t5710;
  t5946 = t5710*t2934;
  t5973 = t3844*t5710;
  t6001 = -1.*t5710*t2934;
  t6098 = -1.*t3951*t5787;
  t6041 = t4750*t5787;
  t6156 = t5787*t3110;
  t6135 = -1.*t4750*t5787;
  t6203 = -1.*t5787*t3110;
  t6186 = t3951*t5787;
  t6648 = -1.*t3509*t5383;
  t6651 = -1.*t3578*t5511;
  t6654 = -1.*t3658*t5581;
  t6657 = t6648 + t6651 + t6654;
  t6661 = t4406*t5383;
  t6671 = t4367*t5511;
  t6677 = t4232*t5581;
  t6689 = t6661 + t6671 + t6677;
  t6778 = t5383*t1787;
  t6781 = t5511*t2192;
  t6782 = t5581*t2513;
  t6787 = t6778 + t6781 + t6782;
  t6796 = -1.*t4406*t5383;
  t6816 = -1.*t4367*t5511;
  t6817 = -1.*t4232*t5581;
  t6818 = t6796 + t6816 + t6817;
  t6857 = -1.*t5383*t1787;
  t6858 = -1.*t5511*t2192;
  t6861 = -1.*t5581*t2513;
  t6862 = t6857 + t6858 + t6861;
  t6874 = t3509*t5383;
  t6879 = t3578*t5511;
  t6882 = t3658*t5581;
  t6884 = t6874 + t6879 + t6882;
  t6959 = -1.*t3387*t5162;
  t6962 = -1.*t3347*t5271;
  t6967 = -1.*t3449*t5364;
  t6972 = t6959 + t6962 + t6967;
  t6983 = t4188*t5162;
  t6986 = t4217*t5271;
  t6988 = t4152*t5364;
  t7006 = t6983 + t6986 + t6988;
  t7079 = t5162*t1366;
  t7083 = t999*t5271;
  t7084 = t5364*t1673;
  t7088 = t7079 + t7083 + t7084;
  t7091 = -1.*t4188*t5162;
  t7093 = -1.*t4217*t5271;
  t7100 = -1.*t4152*t5364;
  t7105 = t7091 + t7093 + t7100;
  t7183 = -1.*t5162*t1366;
  t7185 = -1.*t999*t5271;
  t7196 = -1.*t5364*t1673;
  t7200 = t7183 + t7185 + t7196;
  t7171 = t3387*t5162;
  t7176 = t3347*t5271;
  t7177 = t3449*t5364;
  t7179 = t7171 + t7176 + t7177;
  p_output1[0]=0. - 1.*t106*t2934 + t2949*t3217;
  p_output1[1]=0. - 1.*t106*t3844 + t2949*t4040;
  p_output1[2]=0. - 1.*t106*t4687 + t2949*t4789;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0. + t2934*t2949 + t106*t3217;
  p_output1[7]=0. + t2949*t3844 + t106*t4040;
  p_output1[8]=0. + t2949*t4687 + t106*t4789;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t4938;
  p_output1[13]=t4969;
  p_output1[14]=t4976;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=t4969*(t5716 + t4976*t5839 + t4789*t5862) + t4976*(-1.*t4969*t5839 - 1.*t4040*t5862 + t5895);
  p_output1[19]=t4938*(-1.*t4976*t5839 - 1.*t4789*t5862 + t5919) + t4976*(t4938*t5839 + t3217*t5862 + t5946);
  p_output1[20]=t4938*(t4969*t5839 + t4040*t5862 + t5973) + t4969*(-1.*t4938*t5839 - 1.*t3217*t5862 + t6001);
  p_output1[21]=t4938;
  p_output1[22]=t4969;
  p_output1[23]=t4976;
  p_output1[24]=t3844*(t5716 + t4776*t5830 + t6041) + t4687*(-1.*t3982*t5830 + t5895 + t6098);
  p_output1[25]=t2934*(-1.*t4776*t5830 + t5919 + t6135) + t4687*(t3179*t5830 + t5946 + t6156);
  p_output1[26]=t2934*(t3982*t5830 + t5973 + t6186) + t3844*(-1.*t3179*t5830 + t6001 + t6203);
  p_output1[27]=t2934;
  p_output1[28]=t3844;
  p_output1[29]=t4687;
  p_output1[30]=t3951*(t4544*t5663 + t4643*t5696 + t6041) + t4750*(-1.*t3780*t5663 - 1.*t3805*t5696 + t6098);
  p_output1[31]=t3110*(-1.*t4544*t5663 - 1.*t4643*t5696 + t6135) + t4750*(t2696*t5663 + t2881*t5696 + t6156);
  p_output1[32]=t3110*(t3780*t5663 + t3805*t5696 + t6186) + t3951*(-1.*t2696*t5663 - 1.*t2881*t5696 + t6203);
  p_output1[33]=t3110;
  p_output1[34]=t3951;
  p_output1[35]=t4750;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=-0.4*t2557 - 0.12*t2666 - 1.*t3951*(t4523*t5600 + t4422*t5647 + t6041) - 1.*t4750*(-1.*t3662*t5600 - 1.*t3772*t5647 + t6098);
  p_output1[145]=-0.4*t3662 - 0.12*t3772 - 1.*t3110*(-1.*t4523*t5600 - 1.*t4422*t5647 + t6135) - 1.*t4750*(t2557*t5600 + t2666*t5647 + t6156);
  p_output1[146]=-0.12*t4422 - 0.4*t4523 - 1.*t3110*(t3662*t5600 + t3772*t5647 + t6186) - 1.*t3951*(-1.*t2557*t5600 - 1.*t2666*t5647 + t6203);
  p_output1[147]=0. - 1.*t1787*t3013 - 1.*t2192*t3061 - 1.*t2513*t3101;
  p_output1[148]=0. - 1.*t3013*t3509 - 1.*t3061*t3578 - 1.*t3101*t3658;
  p_output1[149]=0. - 1.*t3101*t4232 - 1.*t3061*t4367 - 1.*t3013*t4406;
  p_output1[150]=0.056191*t1787 + 0.005906*t2192 + 0.385267*t2513 + 0.104528*(t4406*t6657 + t3509*t6689) - 0.994522*(t4367*t6657 + t3578*t6689);
  p_output1[151]=0.056191*t3509 + 0.005906*t3578 + 0.385267*t3658 + 0.104528*(t4406*t6787 + t1787*t6818) - 0.994522*(t4367*t6787 + t2192*t6818);
  p_output1[152]=0.385267*t4232 + 0.005906*t4367 + 0.056191*t4406 + 0.104528*(t3509*t6862 + t1787*t6884) - 0.994522*(t3578*t6862 + t2192*t6884);
  p_output1[153]=0. + 0.104528*t1787 - 0.994522*t2192;
  p_output1[154]=0. + 0.104528*t3509 - 0.994522*t3578;
  p_output1[155]=0. - 0.994522*t4367 + 0.104528*t4406;
  p_output1[156]=0.249652*t1366 + 0.151261*t1673 + 0.707107*(t4217*t6972 + t3347*t7006) - 0.073913*(t4188*t6972 + t3387*t7006) - 0.703234*(t4152*t6972 + t3449*t7006) + 0.176528*t999;
  p_output1[157]=0.176528*t3347 + 0.249652*t3387 + 0.151261*t3449 - 0.073913*(t4188*t7088 + t1366*t7105) - 0.703234*(t4152*t7088 + t1673*t7105) + 0.707107*(t4217*t7088 + t7105*t999);
  p_output1[158]=0.151261*t4152 + 0.249652*t4188 + 0.176528*t4217 - 0.073913*(t1366*t7179 + t3387*t7200) - 0.703234*(t1673*t7179 + t3449*t7200) + 0.707107*(t3347*t7200 + t7179*t999);
  p_output1[159]=0. - 0.073913*t1366 - 0.703234*t1673 + 0.707107*t999;
  p_output1[160]=0. + 0.707107*t3347 - 0.073913*t3387 - 0.703234*t3449;
  p_output1[161]=0. - 0.703234*t4152 - 0.073913*t4188 + 0.707107*t4217;
  p_output1[162]=-3.86465687628873e-7;
  p_output1[163]=-1.4404024535792648e-7;
  p_output1[164]=6.493807148989783e-7;
  p_output1[165]=2.2794199999731646e-7;
  p_output1[166]=-6.661520000061927e-7;
  p_output1[167]=1.0000001112680001;
}



void Jb_elbow_joint_right_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
