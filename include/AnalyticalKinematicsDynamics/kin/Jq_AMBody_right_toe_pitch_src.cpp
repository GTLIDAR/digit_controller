/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:12:46 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jq_AMBody_right_toe_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t483;
  double t509;
  double t547;
  double t437;
  double t723;
  double t1094;
  double t1098;
  double t1127;
  double t556;
  double t622;
  double t694;
  double t721;
  double t800;
  double t825;
  double t827;
  double t854;
  double t868;
  double t926;
  double t928;
  double t930;
  double t934;
  double t935;
  double t964;
  double t997;
  double t1318;
  double t1325;
  double t1403;
  double t1409;
  double t1454;
  double t1477;
  double t1501;
  double t1504;
  double t1512;
  double t1538;
  double t1599;
  double t1659;
  double t1661;
  double t216;
  double t409;
  double t464;
  double t480;
  double t861;
  double t862;
  double t867;
  double t1052;
  double t1218;
  double t1309;
  double t1551;
  double t1567;
  double t1700;
  double t1703;
  double t1747;
  double t1801;
  double t1826;
  double t1830;
  double t1905;
  double t1910;
  double t1949;
  double t1956;
  double t1978;
  double t1996;
  double t2040;
  double t2042;
  double t2111;
  double t2134;
  double t2655;
  double t2656;
  double t2659;
  double t416;
  double t428;
  double t1590;
  double t1928;
  double t1938;
  double t1942;
  double t2145;
  double t2147;
  double t2252;
  double t2272;
  double t2279;
  double t2299;
  double t2354;
  double t2517;
  double t2586;
  double t2618;
  double t2686;
  double t2687;
  double t2699;
  double t2712;
  double t2735;
  double t2758;
  double t2766;
  double t2775;
  double t2776;
  double t2853;
  double t2900;
  double t220;
  double t320;
  double t2212;
  double t2223;
  double t2249;
  double t2639;
  double t2673;
  double t2685;
  double t2854;
  double t2866;
  double t35;
  double t80;
  double t145;
  double t2915;
  double t2933;
  double t2952;
  double t2953;
  double t2956;
  double t2969;
  double t2980;
  double t2982;
  double t3013;
  double t3016;
  double t3018;
  double t3031;
  double t3032;
  double t3046;
  double t3048;
  double t3050;
  double t3202;
  double t3133;
  double t3135;
  double t3166;
  double t3167;
  double t3169;
  double t3173;
  double t3174;
  double t3175;
  double t3127;
  double t3206;
  double t3208;
  double t3235;
  double t3250;
  double t3255;
  double t3257;
  double t3268;
  double t3277;
  double t24;
  double t183;
  double t194;
  double t3346;
  double t3353;
  double t3365;
  double t3371;
  double t3377;
  double t3397;
  double t3404;
  double t3417;
  double t3420;
  double t3443;
  double t3448;
  double t3450;
  double t3375;
  double t3418;
  double t3467;
  double t3468;
  double t3486;
  double t3488;
  double t3497;
  double t3499;
  double t3501;
  double t3502;
  double t3506;
  double t3508;
  double t2905;
  double t2911;
  double t3472;
  double t3500;
  double t3533;
  double t3539;
  double t3552;
  double t3555;
  double t3559;
  double t3564;
  double t3572;
  double t3574;
  double t3583;
  double t3588;
  double t3010;
  double t3011;
  double t3112;
  double t3115;
  double t3544;
  double t3570;
  double t3592;
  double t3595;
  double t3608;
  double t3610;
  double t3616;
  double t3617;
  double t3622;
  double t3625;
  double t3638;
  double t3639;
  double t3644;
  double t3646;
  double t3647;
  double t3650;
  double t3656;
  double t3657;
  double t3667;
  double t3670;
  double t3333;
  double t3737;
  double t3739;
  double t3740;
  double t3722;
  double t3729;
  double t3732;
  double t3755;
  double t3760;
  double t3763;
  double t3735;
  double t3753;
  double t3770;
  double t3773;
  double t3781;
  double t3786;
  double t3790;
  double t3793;
  double t3802;
  double t3805;
  double t3808;
  double t3812;
  double t3774;
  double t3794;
  double t3816;
  double t3817;
  double t3826;
  double t3829;
  double t3830;
  double t3845;
  double t3849;
  double t3853;
  double t3857;
  double t3858;
  double t3819;
  double t3847;
  double t3860;
  double t3861;
  double t3863;
  double t3866;
  double t3868;
  double t3871;
  double t3876;
  double t3878;
  double t3880;
  double t3881;
  double t3888;
  double t3890;
  double t3892;
  double t3898;
  double t3903;
  double t3905;
  double t3906;
  double t3907;
  double t3184;
  double t3282;
  double t3283;
  double t3297;
  double t3312;
  double t3326;
  double t3654;
  double t3671;
  double t3673;
  double t3683;
  double t3684;
  double t3686;
  double t3902;
  double t3911;
  double t3914;
  double t3929;
  double t3931;
  double t3933;
  double t4094;
  double t4095;
  double t4096;
  double t4083;
  double t4120;
  double t4125;
  double t4138;
  double t4115;
  double t4204;
  double t4236;
  double t4238;
  double t4196;
  double t4294;
  double t4305;
  double t4307;
  double t4308;
  double t4313;
  double t4326;
  double t4331;
  double t4332;
  double t4264;
  double t4265;
  double t4266;
  double t4272;
  double t4345;
  double t4346;
  double t4349;
  double t4309;
  double t4334;
  double t4335;
  double t4426;
  double t4440;
  double t4453;
  double t4456;
  double t4458;
  double t4459;
  double t4465;
  double t4467;
  double t4397;
  double t4403;
  double t4404;
  double t4408;
  double t4475;
  double t4478;
  double t4479;
  double t4457;
  double t4468;
  double t4469;
  double t4537;
  double t4544;
  double t4545;
  double t4546;
  double t4552;
  double t4553;
  double t4554;
  double t4557;
  double t4512;
  double t4513;
  double t4516;
  double t4522;
  double t4577;
  double t4578;
  double t4579;
  double t4549;
  double t4563;
  double t4565;
  double t4600;
  double t4603;
  double t4606;
  double t4607;
  double t4614;
  double t4616;
  double t4618;
  double t4621;
  double t4642;
  double t4646;
  double t4647;
  double t4648;
  double t4671;
  double t4675;
  double t4676;
  double t4677;
  double t4689;
  double t4700;
  double t4701;
  double t4704;
  double t4660;
  double t4661;
  double t4662;
  double t4664;
  double t4713;
  double t4719;
  double t4722;
  double t4682;
  double t4706;
  double t4709;
  double t4759;
  double t4761;
  double t4762;
  double t4764;
  double t4766;
  double t4773;
  double t4775;
  double t4777;
  double t4796;
  double t4802;
  double t4803;
  double t4809;
  double t4837;
  double t4841;
  double t4847;
  double t4850;
  double t4852;
  double t4853;
  double t4854;
  double t4855;
  double t4817;
  double t4818;
  double t4819;
  double t4824;
  double t4866;
  double t4868;
  double t4869;
  double t4851;
  double t4857;
  double t4859;
  double t4898;
  double t4899;
  double t4904;
  double t4905;
  double t4908;
  double t4910;
  double t4912;
  double t4916;
  double t4948;
  double t4954;
  double t4955;
  double t4960;
  double t4990;
  double t4994;
  double t4996;
  double t4997;
  double t4999;
  double t5001;
  double t5002;
  double t5004;
  double t4978;
  double t4982;
  double t4985;
  double t4987;
  double t5009;
  double t5012;
  double t5015;
  double t4998;
  double t5005;
  double t5006;
  double t5036;
  double t5039;
  double t5051;
  double t5054;
  double t5057;
  double t5059;
  double t5061;
  double t5065;
  double t5070;
  double t5072;
  double t5076;
  double t5077;
  double t5055;
  double t5069;
  double t5078;
  double t5080;
  double t5085;
  double t5086;
  double t5087;
  double t5089;
  double t5102;
  double t5103;
  double t5105;
  double t5112;
  double t5160;
  double t5161;
  double t5163;
  double t5164;
  double t5168;
  double t5170;
  double t5172;
  double t5173;
  double t5130;
  double t5132;
  double t5133;
  double t5142;
  double t5182;
  double t5183;
  double t5185;
  double t5167;
  double t5175;
  double t5177;
  double t5209;
  double t5210;
  double t5212;
  double t5215;
  double t5227;
  double t5229;
  double t5232;
  double t5233;
  double t5235;
  double t5241;
  double t5242;
  double t5244;
  double t5225;
  double t5234;
  double t5245;
  double t5246;
  double t5248;
  double t5249;
  double t5258;
  double t5264;
  double t5299;
  double t5309;
  double t5316;
  double t5317;
  double t5364;
  double t5366;
  double t5368;
  double t5369;
  double t5373;
  double t5374;
  double t5376;
  double t5380;
  double t5340;
  double t5341;
  double t5342;
  double t5350;
  double t5391;
  double t5397;
  double t5398;
  double t5371;
  double t5384;
  double t5385;
  double t5441;
  double t5446;
  double t5449;
  double t5452;
  double t5456;
  double t5460;
  double t5463;
  double t5464;
  double t5473;
  double t5477;
  double t5478;
  double t5482;
  double t5454;
  double t5470;
  double t5483;
  double t5486;
  double t5492;
  double t5494;
  double t5496;
  double t5497;
  double t5505;
  double t5506;
  double t5509;
  double t5510;
  double t5533;
  double t5534;
  double t5537;
  double t5538;
  double t5541;
  double t5543;
  double t5544;
  double t5548;
  double t5517;
  double t5518;
  double t5519;
  double t5520;
  double t5561;
  double t5568;
  double t5570;
  double t5539;
  double t5549;
  double t5555;
  double t5609;
  double t5611;
  double t5612;
  double t5616;
  double t5620;
  double t5627;
  double t5628;
  double t5635;
  double t5643;
  double t5645;
  double t5646;
  double t5647;
  double t5619;
  double t5642;
  double t5648;
  double t5650;
  double t5654;
  double t5655;
  double t5658;
  double t5659;
  double t5666;
  double t5671;
  double t5672;
  double t5674;
  double t5653;
  double t5661;
  double t5675;
  double t5676;
  double t5683;
  double t5698;
  double t5701;
  double t5702;
  double t5722;
  double t5725;
  double t5729;
  double t5733;
  double t5792;
  double t5794;
  double t5800;
  double t5803;
  double t5809;
  double t5817;
  double t5818;
  double t5824;
  double t5749;
  double t5750;
  double t5761;
  double t5763;
  double t5837;
  double t5841;
  double t5843;
  double t5804;
  double t5830;
  double t5831;
  double t5909;
  double t5911;
  double t5912;
  double t5913;
  double t5918;
  double t5923;
  double t5925;
  double t5928;
  double t5931;
  double t5933;
  double t5939;
  double t5942;
  double t5917;
  double t5930;
  double t5946;
  double t5947;
  double t5949;
  double t5950;
  double t5951;
  double t5954;
  double t5960;
  double t5963;
  double t5965;
  double t5966;
  double t5948;
  double t5956;
  double t5972;
  double t5974;
  double t5979;
  double t5982;
  double t5983;
  double t5987;
  double t6010;
  double t6013;
  double t6014;
  double t6018;
  double t6064;
  double t6065;
  double t6068;
  double t6071;
  double t6085;
  double t6087;
  double t6089;
  double t6091;
  double t6030;
  double t6032;
  double t6036;
  double t6038;
  double t6101;
  double t6103;
  double t6104;
  double t6083;
  double t6095;
  double t6096;
  double t6136;
  double t6137;
  double t6142;
  double t6149;
  double t6156;
  double t6164;
  double t6175;
  double t6177;
  double t6184;
  double t6188;
  double t6191;
  double t6196;
  double t6152;
  double t6178;
  double t6197;
  double t6200;
  double t6211;
  double t6212;
  double t6215;
  double t6225;
  double t6239;
  double t6241;
  double t6243;
  double t6245;
  double t6203;
  double t6230;
  double t6247;
  double t6250;
  double t6256;
  double t6257;
  double t6259;
  double t6261;
  double t6273;
  double t6274;
  double t6276;
  double t6277;
  double t6323;
  double t6325;
  double t6329;
  double t6331;
  double t6334;
  double t6335;
  double t6336;
  double t6337;
  double t6285;
  double t6292;
  double t6295;
  double t6296;
  double t6344;
  double t6346;
  double t6347;
  double t6332;
  double t6338;
  double t6340;
  double t6408;
  double t6414;
  double t6415;
  double t6422;
  double t6426;
  double t6428;
  double t6431;
  double t6436;
  double t6440;
  double t6420;
  double t6429;
  double t6442;
  double t6446;
  double t6448;
  double t6449;
  double t6450;
  double t6454;
  double t6458;
  double t6459;
  double t6461;
  double t6465;
  double t6447;
  double t6456;
  double t6466;
  double t6469;
  double t6475;
  double t6481;
  double t6482;
  double t6485;
  double t6487;
  double t6494;
  double t6499;
  double t6504;
  double t6473;
  double t6486;
  double t6509;
  double t6510;
  double t6517;
  double t6518;
  double t6520;
  double t6521;
  double t6537;
  double t6539;
  double t6540;
  double t6541;
  double t6602;
  double t6603;
  double t6605;
  double t6606;
  double t6612;
  double t6614;
  double t6615;
  double t6616;
  double t6553;
  double t6555;
  double t6557;
  double t6559;
  double t6631;
  double t6637;
  double t6639;
  double t6609;
  double t6620;
  double t6627;
  double t6682;
  double t6688;
  double t6689;
  double t6696;
  double t6699;
  double t6700;
  double t6703;
  double t6704;
  double t6705;
  double t6695;
  double t6701;
  double t6706;
  double t6707;
  double t6709;
  double t6712;
  double t6713;
  double t6715;
  double t6719;
  double t6720;
  double t6723;
  double t6724;
  double t6708;
  double t6718;
  double t6728;
  double t6730;
  double t6741;
  double t6745;
  double t6748;
  double t6750;
  double t6753;
  double t6754;
  double t6757;
  double t6758;
  double t6740;
  double t6752;
  double t6760;
  double t6764;
  double t6769;
  double t6772;
  double t6776;
  double t6777;
  double t6803;
  double t6805;
  double t6812;
  double t6813;
  double t6867;
  double t6868;
  double t6870;
  double t6872;
  double t6874;
  double t6878;
  double t6880;
  double t6881;
  double t6830;
  double t6831;
  double t6834;
  double t6839;
  double t6894;
  double t6903;
  double t6906;
  double t6873;
  double t6884;
  double t6889;
  double t6971;
  double t6973;
  double t6974;
  double t6980;
  double t6981;
  double t6982;
  double t6995;
  double t6999;
  double t7003;
  double t6990;
  double t6992;
  double t7004;
  double t7010;
  double t7015;
  double t7019;
  double t7020;
  double t7021;
  double t7032;
  double t7033;
  double t7036;
  double t7038;
  double t7040;
  double t7041;
  double t7042;
  double t7044;
  double t7051;
  double t7054;
  double t7055;
  double t7056;
  double t7068;
  double t7073;
  double t7076;
  double t7077;
  double t7109;
  double t7110;
  double t7112;
  double t7113;
  double t7126;
  double t7130;
  double t7131;
  double t7134;
  double t7083;
  double t7090;
  double t7092;
  double t7093;
  double t7138;
  double t7140;
  double t7141;
  double t7116;
  double t7135;
  double t7136;
  t483 = Cos(var1[22]);
  t509 = -1.*t483;
  t547 = 1. + t509;
  t437 = Sin(var1[21]);
  t723 = Sin(var1[22]);
  t1094 = Cos(var1[21]);
  t1098 = -1.*t1094;
  t1127 = 1. + t1098;
  t556 = -0.8656776547239999*t547;
  t622 = 1. + t556;
  t694 = 0.553471*t622;
  t721 = -0.07434394776141752*t547;
  t800 = -0.930418*t723;
  t825 = 0. + t800;
  t827 = 0.803828*t825;
  t854 = t694 + t721 + t827;
  t868 = -0.134322983001*t547;
  t926 = 1. + t868;
  t928 = 0.218018*t926;
  t930 = -0.18873312805116788*t547;
  t934 = -0.366501*t723;
  t935 = 0. + t934;
  t964 = 0.803828*t935;
  t997 = t928 + t930 + t964;
  t1318 = -1.000000637725*t547;
  t1325 = 1. + t1318;
  t1403 = 0.803828*t1325;
  t1409 = 0.366501*t723;
  t1454 = 0. + t1409;
  t1477 = 0.218018*t1454;
  t1501 = 0.930418*t723;
  t1504 = 0. + t1501;
  t1512 = 0.553471*t1504;
  t1538 = t1403 + t1477 + t1512;
  t1599 = Cos(var1[20]);
  t1659 = -1.*t1599;
  t1661 = 1. + t1659;
  t216 = Sin(var1[19]);
  t409 = Sin(var1[20]);
  t464 = 0.930418*t437;
  t480 = 0. + t464;
  t861 = t480*t854;
  t862 = 0.366501*t437;
  t867 = 0. + t862;
  t1052 = t867*t997;
  t1218 = -1.000000637725*t1127;
  t1309 = 1. + t1218;
  t1551 = t1309*t1538;
  t1567 = 0. + t861 + t1052 + t1551;
  t1700 = -0.8656776547239999*t1127;
  t1703 = 1. + t1700;
  t1747 = t1703*t854;
  t1801 = -0.340999127418*t1127*t997;
  t1826 = -0.930418*t437;
  t1830 = 0. + t1826;
  t1905 = t1830*t1538;
  t1910 = 0. + t1747 + t1801 + t1905;
  t1949 = -0.340999127418*t1127*t854;
  t1956 = -0.134322983001*t1127;
  t1978 = 1. + t1956;
  t1996 = t1978*t997;
  t2040 = -0.366501*t437;
  t2042 = 0. + t2040;
  t2111 = t2042*t1538;
  t2134 = 0. + t1949 + t1996 + t2111;
  t2655 = Cos(var1[19]);
  t2656 = -1.*t2655;
  t2659 = 1. + t2656;
  t416 = -0.366501*t409;
  t428 = 0. + t416;
  t1590 = t428*t1567;
  t1928 = -0.340999127418*t1661*t1910;
  t1938 = -0.134322983001*t1661;
  t1942 = 1. + t1938;
  t2145 = t1942*t2134;
  t2147 = 0. + t1590 + t1928 + t2145;
  t2252 = -0.930418*t409;
  t2272 = 0. + t2252;
  t2279 = t2272*t1567;
  t2299 = -0.8656776547239999*t1661;
  t2354 = 1. + t2299;
  t2517 = t2354*t1910;
  t2586 = -0.340999127418*t1661*t2134;
  t2618 = 0. + t2279 + t2517 + t2586;
  t2686 = -1.000000637725*t1661;
  t2687 = 1. + t2686;
  t2699 = t2687*t1567;
  t2712 = 0.930418*t409;
  t2735 = 0. + t2712;
  t2758 = t2735*t1910;
  t2766 = 0.366501*t409;
  t2775 = 0. + t2766;
  t2776 = t2775*t2134;
  t2853 = 0. + t2699 + t2758 + t2776;
  t2900 = Sin(var1[18]);
  t220 = -0.366501*t216;
  t320 = 0. + t220;
  t2212 = t320*t2147;
  t2223 = -0.930418*t216;
  t2249 = 0. + t2223;
  t2639 = t2249*t2618;
  t2673 = -1.000000637725*t2659;
  t2685 = 1. + t2673;
  t2854 = t2685*t2853;
  t2866 = 0. + t2212 + t2639 + t2854;
  t35 = Cos(var1[18]);
  t80 = -1.*t35;
  t145 = 1. + t80;
  t2915 = -0.134322983001*t2659;
  t2933 = 1. + t2915;
  t2952 = t2933*t2147;
  t2953 = -0.340999127418*t2659*t2618;
  t2956 = 0.366501*t216;
  t2969 = 0. + t2956;
  t2980 = t2969*t2853;
  t2982 = 0. + t2952 + t2953 + t2980;
  t3013 = -0.340999127418*t2659*t2147;
  t3016 = -0.8656776547239999*t2659;
  t3018 = 1. + t3016;
  t3031 = t3018*t2618;
  t3032 = 0.930418*t216;
  t3046 = 0. + t3032;
  t3048 = t3046*t2853;
  t3050 = 0. + t3013 + t3031 + t3048;
  t3202 = Sin(var1[17]);
  t3133 = 0.366501*t2900;
  t3135 = 0. + t3133;
  t3166 = t3135*t2866;
  t3167 = 0.340999127418*t145*t2982;
  t3169 = -0.134322983001*t145;
  t3173 = 1. + t3169;
  t3174 = t3173*t3050;
  t3175 = 0. + t3166 + t3167 + t3174;
  t3127 = Cos(var1[17]);
  t3206 = -0.930418*t2900;
  t3208 = 0. + t3206;
  t3235 = t3208*t2866;
  t3250 = -0.8656776547239999*t145;
  t3255 = 1. + t3250;
  t3257 = t3255*t2982;
  t3268 = 0.340999127418*t145*t3050;
  t3277 = 0. + t3235 + t3257 + t3268;
  t24 = Cos(var1[4]);
  t183 = -1.000000637725*t145;
  t194 = 1. + t183;
  t3346 = -0.747896*t622;
  t3353 = 0.10045970693385246*t547;
  t3365 = 0.594863*t825;
  t3371 = t3346 + t3353 + t3365;
  t3377 = -0.294604*t926;
  t3397 = 0.2550318833994125*t547;
  t3404 = 0.594863*t935;
  t3417 = t3377 + t3397 + t3404;
  t3420 = 0.594863*t1325;
  t3443 = -0.294604*t1454;
  t3448 = -0.747896*t1504;
  t3450 = t3420 + t3443 + t3448;
  t3375 = t480*t3371;
  t3418 = t867*t3417;
  t3467 = t1309*t3450;
  t3468 = 0. + t3375 + t3418 + t3467;
  t3486 = t1703*t3371;
  t3488 = -0.340999127418*t1127*t3417;
  t3497 = t1830*t3450;
  t3499 = 0. + t3486 + t3488 + t3497;
  t3501 = -0.340999127418*t1127*t3371;
  t3502 = t1978*t3417;
  t3506 = t2042*t3450;
  t3508 = 0. + t3501 + t3502 + t3506;
  t2905 = 0.930418*t2900;
  t2911 = 0. + t2905;
  t3472 = t428*t3468;
  t3500 = -0.340999127418*t1661*t3499;
  t3533 = t1942*t3508;
  t3539 = 0. + t3472 + t3500 + t3533;
  t3552 = t2272*t3468;
  t3555 = t2354*t3499;
  t3559 = -0.340999127418*t1661*t3508;
  t3564 = 0. + t3552 + t3555 + t3559;
  t3572 = t2687*t3468;
  t3574 = t2735*t3499;
  t3583 = t2775*t3508;
  t3588 = 0. + t3572 + t3574 + t3583;
  t3010 = -0.366501*t2900;
  t3011 = 0. + t3010;
  t3112 = Sin(var1[4]);
  t3115 = Cos(var1[5]);
  t3544 = t320*t3539;
  t3570 = t2249*t3564;
  t3592 = t2685*t3588;
  t3595 = 0. + t3544 + t3570 + t3592;
  t3608 = t2933*t3539;
  t3610 = -0.340999127418*t2659*t3564;
  t3616 = t2969*t3588;
  t3617 = 0. + t3608 + t3610 + t3616;
  t3622 = -0.340999127418*t2659*t3539;
  t3625 = t3018*t3564;
  t3638 = t3046*t3588;
  t3639 = 0. + t3622 + t3625 + t3638;
  t3644 = t3135*t3595;
  t3646 = 0.340999127418*t145*t3617;
  t3647 = t3173*t3639;
  t3650 = 0. + t3644 + t3646 + t3647;
  t3656 = t3208*t3595;
  t3657 = t3255*t3617;
  t3667 = 0.340999127418*t145*t3639;
  t3670 = 0. + t3656 + t3657 + t3667;
  t3333 = Sin(var1[5]);
  t3737 = -0.366501*t622;
  t3739 = -0.3172717261340007*t547;
  t3740 = t3737 + t3739;
  t3722 = 0.930418*t926;
  t3729 = 0.12497652119782442*t547;
  t3732 = t3722 + t3729;
  t3755 = 0.930418*t1454;
  t3760 = -0.366501*t1504;
  t3763 = t3755 + t3760;
  t3735 = t3732*t867;
  t3753 = t3740*t480;
  t3770 = t1309*t3763;
  t3773 = 0. + t3735 + t3753 + t3770;
  t3781 = t1703*t3740;
  t3786 = -0.340999127418*t1127*t3732;
  t3790 = t1830*t3763;
  t3793 = 0. + t3781 + t3786 + t3790;
  t3802 = -0.340999127418*t1127*t3740;
  t3805 = t1978*t3732;
  t3808 = t2042*t3763;
  t3812 = 0. + t3802 + t3805 + t3808;
  t3774 = t428*t3773;
  t3794 = -0.340999127418*t1661*t3793;
  t3816 = t1942*t3812;
  t3817 = 0. + t3774 + t3794 + t3816;
  t3826 = t2272*t3773;
  t3829 = t2354*t3793;
  t3830 = -0.340999127418*t1661*t3812;
  t3845 = 0. + t3826 + t3829 + t3830;
  t3849 = t2687*t3773;
  t3853 = t2735*t3793;
  t3857 = t2775*t3812;
  t3858 = 0. + t3849 + t3853 + t3857;
  t3819 = t320*t3817;
  t3847 = t2249*t3845;
  t3860 = t2685*t3858;
  t3861 = 0. + t3819 + t3847 + t3860;
  t3863 = t2933*t3817;
  t3866 = -0.340999127418*t2659*t3845;
  t3868 = t2969*t3858;
  t3871 = 0. + t3863 + t3866 + t3868;
  t3876 = -0.340999127418*t2659*t3817;
  t3878 = t3018*t3845;
  t3880 = t3046*t3858;
  t3881 = 0. + t3876 + t3878 + t3880;
  t3888 = t3135*t3861;
  t3890 = 0.340999127418*t145*t3871;
  t3892 = t3173*t3881;
  t3898 = 0. + t3888 + t3890 + t3892;
  t3903 = t3208*t3861;
  t3905 = t3255*t3871;
  t3906 = 0.340999127418*t145*t3881;
  t3907 = 0. + t3903 + t3905 + t3906;
  t3184 = t3127*t3175;
  t3282 = -1.*t3202*t3277;
  t3283 = 0. + t3184 + t3282;
  t3297 = t3202*t3175;
  t3312 = t3127*t3277;
  t3326 = 0. + t3297 + t3312;
  t3654 = t3127*t3650;
  t3671 = -1.*t3202*t3670;
  t3673 = 0. + t3654 + t3671;
  t3683 = t3202*t3650;
  t3684 = t3127*t3670;
  t3686 = 0. + t3683 + t3684;
  t3902 = t3127*t3898;
  t3911 = -1.*t3202*t3907;
  t3914 = 0. + t3902 + t3911;
  t3929 = t3202*t3898;
  t3931 = t3127*t3907;
  t3933 = 0. + t3929 + t3931;
  t4094 = -1.*t3202*t3175;
  t4095 = -1.*t3127*t3277;
  t4096 = t4094 + t4095;
  t4083 = t3184 + t3282;
  t4120 = -1.*t3202*t3650;
  t4125 = -1.*t3127*t3670;
  t4138 = t4120 + t4125;
  t4115 = t3654 + t3671;
  t4204 = -1.*t3202*t3898;
  t4236 = -1.*t3127*t3907;
  t4238 = t4204 + t4236;
  t4196 = t3902 + t3911;
  t4294 = 0.366501*t35*t2866;
  t4305 = 0.340999127418*t2900*t2982;
  t4307 = -0.134322983001*t2900*t3050;
  t4308 = t4294 + t4305 + t4307;
  t4313 = -0.930418*t35*t2866;
  t4326 = -0.8656776547239999*t2900*t2982;
  t4331 = 0.340999127418*t2900*t3050;
  t4332 = t4313 + t4326 + t4331;
  t4264 = -1.000000637725*t2900*t2866;
  t4265 = 0.930418*t35*t2982;
  t4266 = -0.366501*t35*t3050;
  t4272 = t4264 + t4265 + t4266;
  t4345 = t3127*t4308;
  t4346 = -1.*t3202*t4332;
  t4349 = t4345 + t4346;
  t4309 = t3202*t4308;
  t4334 = t3127*t4332;
  t4335 = t4309 + t4334;
  t4426 = 0.366501*t35*t3595;
  t4440 = 0.340999127418*t2900*t3617;
  t4453 = -0.134322983001*t2900*t3639;
  t4456 = t4426 + t4440 + t4453;
  t4458 = -0.930418*t35*t3595;
  t4459 = -0.8656776547239999*t2900*t3617;
  t4465 = 0.340999127418*t2900*t3639;
  t4467 = t4458 + t4459 + t4465;
  t4397 = -1.000000637725*t2900*t3595;
  t4403 = 0.930418*t35*t3617;
  t4404 = -0.366501*t35*t3639;
  t4408 = t4397 + t4403 + t4404;
  t4475 = t3127*t4456;
  t4478 = -1.*t3202*t4467;
  t4479 = t4475 + t4478;
  t4457 = t3202*t4456;
  t4468 = t3127*t4467;
  t4469 = t4457 + t4468;
  t4537 = 0.366501*t35*t3861;
  t4544 = 0.340999127418*t2900*t3871;
  t4545 = -0.134322983001*t2900*t3881;
  t4546 = t4537 + t4544 + t4545;
  t4552 = -0.930418*t35*t3861;
  t4553 = -0.8656776547239999*t2900*t3871;
  t4554 = 0.340999127418*t2900*t3881;
  t4557 = t4552 + t4553 + t4554;
  t4512 = -1.000000637725*t2900*t3861;
  t4513 = 0.930418*t35*t3871;
  t4516 = -0.366501*t35*t3881;
  t4522 = t4512 + t4513 + t4516;
  t4577 = t3127*t4546;
  t4578 = -1.*t3202*t4557;
  t4579 = t4577 + t4578;
  t4549 = t3202*t4546;
  t4563 = t3127*t4557;
  t4565 = t4549 + t4563;
  t4600 = -0.134322983001*t216*t2147;
  t4603 = -0.340999127418*t216*t2618;
  t4606 = 0.366501*t2655*t2853;
  t4607 = t4600 + t4603 + t4606;
  t4614 = -0.340999127418*t216*t2147;
  t4616 = -0.8656776547239999*t216*t2618;
  t4618 = 0.930418*t2655*t2853;
  t4621 = t4614 + t4616 + t4618;
  t4642 = -0.366501*t2655*t2147;
  t4646 = -0.930418*t2655*t2618;
  t4647 = -1.000000637725*t216*t2853;
  t4648 = t4642 + t4646 + t4647;
  t4671 = t3255*t4607;
  t4675 = 0.340999127418*t145*t4621;
  t4676 = t3208*t4648;
  t4677 = t4671 + t4675 + t4676;
  t4689 = 0.340999127418*t145*t4607;
  t4700 = t3173*t4621;
  t4701 = t3135*t4648;
  t4704 = t4689 + t4700 + t4701;
  t4660 = t2911*t4607;
  t4661 = t3011*t4621;
  t4662 = t194*t4648;
  t4664 = t4660 + t4661 + t4662;
  t4713 = -1.*t3202*t4677;
  t4719 = t3127*t4704;
  t4722 = t4713 + t4719;
  t4682 = t3127*t4677;
  t4706 = t3202*t4704;
  t4709 = t4682 + t4706;
  t4759 = -0.134322983001*t216*t3539;
  t4761 = -0.340999127418*t216*t3564;
  t4762 = 0.366501*t2655*t3588;
  t4764 = t4759 + t4761 + t4762;
  t4766 = -0.340999127418*t216*t3539;
  t4773 = -0.8656776547239999*t216*t3564;
  t4775 = 0.930418*t2655*t3588;
  t4777 = t4766 + t4773 + t4775;
  t4796 = -0.366501*t2655*t3539;
  t4802 = -0.930418*t2655*t3564;
  t4803 = -1.000000637725*t216*t3588;
  t4809 = t4796 + t4802 + t4803;
  t4837 = t3255*t4764;
  t4841 = 0.340999127418*t145*t4777;
  t4847 = t3208*t4809;
  t4850 = t4837 + t4841 + t4847;
  t4852 = 0.340999127418*t145*t4764;
  t4853 = t3173*t4777;
  t4854 = t3135*t4809;
  t4855 = t4852 + t4853 + t4854;
  t4817 = t2911*t4764;
  t4818 = t3011*t4777;
  t4819 = t194*t4809;
  t4824 = t4817 + t4818 + t4819;
  t4866 = -1.*t3202*t4850;
  t4868 = t3127*t4855;
  t4869 = t4866 + t4868;
  t4851 = t3127*t4850;
  t4857 = t3202*t4855;
  t4859 = t4851 + t4857;
  t4898 = -0.134322983001*t216*t3817;
  t4899 = -0.340999127418*t216*t3845;
  t4904 = 0.366501*t2655*t3858;
  t4905 = t4898 + t4899 + t4904;
  t4908 = -0.340999127418*t216*t3817;
  t4910 = -0.8656776547239999*t216*t3845;
  t4912 = 0.930418*t2655*t3858;
  t4916 = t4908 + t4910 + t4912;
  t4948 = -0.366501*t2655*t3817;
  t4954 = -0.930418*t2655*t3845;
  t4955 = -1.000000637725*t216*t3858;
  t4960 = t4948 + t4954 + t4955;
  t4990 = t3255*t4905;
  t4994 = 0.340999127418*t145*t4916;
  t4996 = t3208*t4960;
  t4997 = t4990 + t4994 + t4996;
  t4999 = 0.340999127418*t145*t4905;
  t5001 = t3173*t4916;
  t5002 = t3135*t4960;
  t5004 = t4999 + t5001 + t5002;
  t4978 = t2911*t4905;
  t4982 = t3011*t4916;
  t4985 = t194*t4960;
  t4987 = t4978 + t4982 + t4985;
  t5009 = -1.*t3202*t4997;
  t5012 = t3127*t5004;
  t5015 = t5009 + t5012;
  t4998 = t3127*t4997;
  t5005 = t3202*t5004;
  t5006 = t4998 + t5005;
  t5036 = -1.000000637725*t409*t1567;
  t5039 = 0.930418*t1599*t1910;
  t5051 = 0.366501*t1599*t2134;
  t5054 = t5036 + t5039 + t5051;
  t5057 = -0.930418*t1599*t1567;
  t5059 = -0.8656776547239999*t409*t1910;
  t5061 = -0.340999127418*t409*t2134;
  t5065 = t5057 + t5059 + t5061;
  t5070 = -0.366501*t1599*t1567;
  t5072 = -0.340999127418*t409*t1910;
  t5076 = -0.134322983001*t409*t2134;
  t5077 = t5070 + t5072 + t5076;
  t5055 = t2969*t5054;
  t5069 = -0.340999127418*t2659*t5065;
  t5078 = t2933*t5077;
  t5080 = t5055 + t5069 + t5078;
  t5085 = t3046*t5054;
  t5086 = t3018*t5065;
  t5087 = -0.340999127418*t2659*t5077;
  t5089 = t5085 + t5086 + t5087;
  t5102 = t2685*t5054;
  t5103 = t2249*t5065;
  t5105 = t320*t5077;
  t5112 = t5102 + t5103 + t5105;
  t5160 = t3255*t5080;
  t5161 = 0.340999127418*t145*t5089;
  t5163 = t3208*t5112;
  t5164 = t5160 + t5161 + t5163;
  t5168 = 0.340999127418*t145*t5080;
  t5170 = t3173*t5089;
  t5172 = t3135*t5112;
  t5173 = t5168 + t5170 + t5172;
  t5130 = t2911*t5080;
  t5132 = t3011*t5089;
  t5133 = t194*t5112;
  t5142 = t5130 + t5132 + t5133;
  t5182 = -1.*t3202*t5164;
  t5183 = t3127*t5173;
  t5185 = t5182 + t5183;
  t5167 = t3127*t5164;
  t5175 = t3202*t5173;
  t5177 = t5167 + t5175;
  t5209 = -1.000000637725*t409*t3468;
  t5210 = 0.930418*t1599*t3499;
  t5212 = 0.366501*t1599*t3508;
  t5215 = t5209 + t5210 + t5212;
  t5227 = -0.930418*t1599*t3468;
  t5229 = -0.8656776547239999*t409*t3499;
  t5232 = -0.340999127418*t409*t3508;
  t5233 = t5227 + t5229 + t5232;
  t5235 = -0.366501*t1599*t3468;
  t5241 = -0.340999127418*t409*t3499;
  t5242 = -0.134322983001*t409*t3508;
  t5244 = t5235 + t5241 + t5242;
  t5225 = t2969*t5215;
  t5234 = -0.340999127418*t2659*t5233;
  t5245 = t2933*t5244;
  t5246 = t5225 + t5234 + t5245;
  t5248 = t3046*t5215;
  t5249 = t3018*t5233;
  t5258 = -0.340999127418*t2659*t5244;
  t5264 = t5248 + t5249 + t5258;
  t5299 = t2685*t5215;
  t5309 = t2249*t5233;
  t5316 = t320*t5244;
  t5317 = t5299 + t5309 + t5316;
  t5364 = t3255*t5246;
  t5366 = 0.340999127418*t145*t5264;
  t5368 = t3208*t5317;
  t5369 = t5364 + t5366 + t5368;
  t5373 = 0.340999127418*t145*t5246;
  t5374 = t3173*t5264;
  t5376 = t3135*t5317;
  t5380 = t5373 + t5374 + t5376;
  t5340 = t2911*t5246;
  t5341 = t3011*t5264;
  t5342 = t194*t5317;
  t5350 = t5340 + t5341 + t5342;
  t5391 = -1.*t3202*t5369;
  t5397 = t3127*t5380;
  t5398 = t5391 + t5397;
  t5371 = t3127*t5369;
  t5384 = t3202*t5380;
  t5385 = t5371 + t5384;
  t5441 = -1.000000637725*t409*t3773;
  t5446 = 0.930418*t1599*t3793;
  t5449 = 0.366501*t1599*t3812;
  t5452 = t5441 + t5446 + t5449;
  t5456 = -0.930418*t1599*t3773;
  t5460 = -0.8656776547239999*t409*t3793;
  t5463 = -0.340999127418*t409*t3812;
  t5464 = t5456 + t5460 + t5463;
  t5473 = -0.366501*t1599*t3773;
  t5477 = -0.340999127418*t409*t3793;
  t5478 = -0.134322983001*t409*t3812;
  t5482 = t5473 + t5477 + t5478;
  t5454 = t2969*t5452;
  t5470 = -0.340999127418*t2659*t5464;
  t5483 = t2933*t5482;
  t5486 = t5454 + t5470 + t5483;
  t5492 = t3046*t5452;
  t5494 = t3018*t5464;
  t5496 = -0.340999127418*t2659*t5482;
  t5497 = t5492 + t5494 + t5496;
  t5505 = t2685*t5452;
  t5506 = t2249*t5464;
  t5509 = t320*t5482;
  t5510 = t5505 + t5506 + t5509;
  t5533 = t3255*t5486;
  t5534 = 0.340999127418*t145*t5497;
  t5537 = t3208*t5510;
  t5538 = t5533 + t5534 + t5537;
  t5541 = 0.340999127418*t145*t5486;
  t5543 = t3173*t5497;
  t5544 = t3135*t5510;
  t5548 = t5541 + t5543 + t5544;
  t5517 = t2911*t5486;
  t5518 = t3011*t5497;
  t5519 = t194*t5510;
  t5520 = t5517 + t5518 + t5519;
  t5561 = -1.*t3202*t5538;
  t5568 = t3127*t5548;
  t5570 = t5561 + t5568;
  t5539 = t3127*t5538;
  t5549 = t3202*t5548;
  t5555 = t5539 + t5549;
  t5609 = -0.8656776547239999*t437*t854;
  t5611 = -0.340999127418*t437*t997;
  t5612 = -0.930418*t1094*t1538;
  t5616 = t5609 + t5611 + t5612;
  t5620 = -0.340999127418*t437*t854;
  t5627 = -0.134322983001*t437*t997;
  t5628 = -0.366501*t1094*t1538;
  t5635 = t5620 + t5627 + t5628;
  t5643 = 0.930418*t1094*t854;
  t5645 = 0.366501*t1094*t997;
  t5646 = -1.000000637725*t437*t1538;
  t5647 = t5643 + t5645 + t5646;
  t5619 = t2735*t5616;
  t5642 = t2775*t5635;
  t5648 = t2687*t5647;
  t5650 = t5619 + t5642 + t5648;
  t5654 = t2354*t5616;
  t5655 = -0.340999127418*t1661*t5635;
  t5658 = t2272*t5647;
  t5659 = t5654 + t5655 + t5658;
  t5666 = -0.340999127418*t1661*t5616;
  t5671 = t1942*t5635;
  t5672 = t428*t5647;
  t5674 = t5666 + t5671 + t5672;
  t5653 = t2969*t5650;
  t5661 = -0.340999127418*t2659*t5659;
  t5675 = t2933*t5674;
  t5676 = t5653 + t5661 + t5675;
  t5683 = t3046*t5650;
  t5698 = t3018*t5659;
  t5701 = -0.340999127418*t2659*t5674;
  t5702 = t5683 + t5698 + t5701;
  t5722 = t2685*t5650;
  t5725 = t2249*t5659;
  t5729 = t320*t5674;
  t5733 = t5722 + t5725 + t5729;
  t5792 = t3255*t5676;
  t5794 = 0.340999127418*t145*t5702;
  t5800 = t3208*t5733;
  t5803 = t5792 + t5794 + t5800;
  t5809 = 0.340999127418*t145*t5676;
  t5817 = t3173*t5702;
  t5818 = t3135*t5733;
  t5824 = t5809 + t5817 + t5818;
  t5749 = t2911*t5676;
  t5750 = t3011*t5702;
  t5761 = t194*t5733;
  t5763 = t5749 + t5750 + t5761;
  t5837 = -1.*t3202*t5803;
  t5841 = t3127*t5824;
  t5843 = t5837 + t5841;
  t5804 = t3127*t5803;
  t5830 = t3202*t5824;
  t5831 = t5804 + t5830;
  t5909 = -0.8656776547239999*t437*t3371;
  t5911 = -0.340999127418*t437*t3417;
  t5912 = -0.930418*t1094*t3450;
  t5913 = t5909 + t5911 + t5912;
  t5918 = -0.340999127418*t437*t3371;
  t5923 = -0.134322983001*t437*t3417;
  t5925 = -0.366501*t1094*t3450;
  t5928 = t5918 + t5923 + t5925;
  t5931 = 0.930418*t1094*t3371;
  t5933 = 0.366501*t1094*t3417;
  t5939 = -1.000000637725*t437*t3450;
  t5942 = t5931 + t5933 + t5939;
  t5917 = t2735*t5913;
  t5930 = t2775*t5928;
  t5946 = t2687*t5942;
  t5947 = t5917 + t5930 + t5946;
  t5949 = t2354*t5913;
  t5950 = -0.340999127418*t1661*t5928;
  t5951 = t2272*t5942;
  t5954 = t5949 + t5950 + t5951;
  t5960 = -0.340999127418*t1661*t5913;
  t5963 = t1942*t5928;
  t5965 = t428*t5942;
  t5966 = t5960 + t5963 + t5965;
  t5948 = t2969*t5947;
  t5956 = -0.340999127418*t2659*t5954;
  t5972 = t2933*t5966;
  t5974 = t5948 + t5956 + t5972;
  t5979 = t3046*t5947;
  t5982 = t3018*t5954;
  t5983 = -0.340999127418*t2659*t5966;
  t5987 = t5979 + t5982 + t5983;
  t6010 = t2685*t5947;
  t6013 = t2249*t5954;
  t6014 = t320*t5966;
  t6018 = t6010 + t6013 + t6014;
  t6064 = t3255*t5974;
  t6065 = 0.340999127418*t145*t5987;
  t6068 = t3208*t6018;
  t6071 = t6064 + t6065 + t6068;
  t6085 = 0.340999127418*t145*t5974;
  t6087 = t3173*t5987;
  t6089 = t3135*t6018;
  t6091 = t6085 + t6087 + t6089;
  t6030 = t2911*t5974;
  t6032 = t3011*t5987;
  t6036 = t194*t6018;
  t6038 = t6030 + t6032 + t6036;
  t6101 = -1.*t3202*t6071;
  t6103 = t3127*t6091;
  t6104 = t6101 + t6103;
  t6083 = t3127*t6071;
  t6095 = t3202*t6091;
  t6096 = t6083 + t6095;
  t6136 = -0.8656776547239999*t3740*t437;
  t6137 = -0.340999127418*t3732*t437;
  t6142 = -0.930418*t1094*t3763;
  t6149 = t6136 + t6137 + t6142;
  t6156 = -0.340999127418*t3740*t437;
  t6164 = -0.134322983001*t3732*t437;
  t6175 = -0.366501*t1094*t3763;
  t6177 = t6156 + t6164 + t6175;
  t6184 = 0.930418*t1094*t3740;
  t6188 = 0.366501*t1094*t3732;
  t6191 = -1.000000637725*t437*t3763;
  t6196 = t6184 + t6188 + t6191;
  t6152 = t2735*t6149;
  t6178 = t2775*t6177;
  t6197 = t2687*t6196;
  t6200 = t6152 + t6178 + t6197;
  t6211 = t2354*t6149;
  t6212 = -0.340999127418*t1661*t6177;
  t6215 = t2272*t6196;
  t6225 = t6211 + t6212 + t6215;
  t6239 = -0.340999127418*t1661*t6149;
  t6241 = t1942*t6177;
  t6243 = t428*t6196;
  t6245 = t6239 + t6241 + t6243;
  t6203 = t2969*t6200;
  t6230 = -0.340999127418*t2659*t6225;
  t6247 = t2933*t6245;
  t6250 = t6203 + t6230 + t6247;
  t6256 = t3046*t6200;
  t6257 = t3018*t6225;
  t6259 = -0.340999127418*t2659*t6245;
  t6261 = t6256 + t6257 + t6259;
  t6273 = t2685*t6200;
  t6274 = t2249*t6225;
  t6276 = t320*t6245;
  t6277 = t6273 + t6274 + t6276;
  t6323 = t3255*t6250;
  t6325 = 0.340999127418*t145*t6261;
  t6329 = t3208*t6277;
  t6331 = t6323 + t6325 + t6329;
  t6334 = 0.340999127418*t145*t6250;
  t6335 = t3173*t6261;
  t6336 = t3135*t6277;
  t6337 = t6334 + t6335 + t6336;
  t6285 = t2911*t6250;
  t6292 = t3011*t6261;
  t6295 = t194*t6277;
  t6296 = t6285 + t6292 + t6295;
  t6344 = -1.*t3202*t6331;
  t6346 = t3127*t6337;
  t6347 = t6344 + t6346;
  t6332 = t3127*t6331;
  t6338 = t3202*t6337;
  t6340 = t6332 + t6338;
  t6408 = 0.594863195896*t483;
  t6414 = -0.8038285126212112*t723;
  t6415 = t6408 + t6414;
  t6422 = -0.747896040104*t483;
  t6426 = -0.5534714249991646*t723;
  t6428 = t6422 + t6426;
  t6431 = -0.294603765828*t483;
  t6436 = -0.2180179561590799*t723;
  t6440 = t6431 + t6436;
  t6420 = t2042*t6415;
  t6429 = -0.340999127418*t1127*t6428;
  t6442 = t1978*t6440;
  t6446 = t6420 + t6429 + t6442;
  t6448 = t1830*t6415;
  t6449 = t1703*t6428;
  t6450 = -0.340999127418*t1127*t6440;
  t6454 = t6448 + t6449 + t6450;
  t6458 = t1309*t6415;
  t6459 = t480*t6428;
  t6461 = t867*t6440;
  t6465 = t6458 + t6459 + t6461;
  t6447 = t2775*t6446;
  t6456 = t2735*t6454;
  t6466 = t2687*t6465;
  t6469 = t6447 + t6456 + t6466;
  t6475 = -0.340999127418*t1661*t6446;
  t6481 = t2354*t6454;
  t6482 = t2272*t6465;
  t6485 = t6475 + t6481 + t6482;
  t6487 = t1942*t6446;
  t6494 = -0.340999127418*t1661*t6454;
  t6499 = t428*t6465;
  t6504 = t6487 + t6494 + t6499;
  t6473 = t2969*t6469;
  t6486 = -0.340999127418*t2659*t6485;
  t6509 = t2933*t6504;
  t6510 = t6473 + t6486 + t6509;
  t6517 = t3046*t6469;
  t6518 = t3018*t6485;
  t6520 = -0.340999127418*t2659*t6504;
  t6521 = t6517 + t6518 + t6520;
  t6537 = t2685*t6469;
  t6539 = t2249*t6485;
  t6540 = t320*t6504;
  t6541 = t6537 + t6539 + t6540;
  t6602 = t3255*t6510;
  t6603 = 0.340999127418*t145*t6521;
  t6605 = t3208*t6541;
  t6606 = t6602 + t6603 + t6605;
  t6612 = 0.340999127418*t145*t6510;
  t6614 = t3173*t6521;
  t6615 = t3135*t6541;
  t6616 = t6612 + t6614 + t6615;
  t6553 = t2911*t6510;
  t6555 = t3011*t6521;
  t6557 = t194*t6541;
  t6559 = t6553 + t6555 + t6557;
  t6631 = -1.*t3202*t6606;
  t6637 = t3127*t6616;
  t6639 = t6631 + t6637;
  t6609 = t3127*t6606;
  t6620 = t3202*t6616;
  t6627 = t6609 + t6620;
  t6682 = -0.803828561132*t483;
  t6688 = -0.5948633793590067*t723;
  t6689 = t6682 + t6688;
  t6696 = -0.21801788436300001*t483;
  t6699 = 0.29460397148343914*t723;
  t6700 = t6696 + t6699;
  t6703 = -0.5534712427340001*t483;
  t6704 = 0.7478965621913131*t723;
  t6705 = t6703 + t6704;
  t6695 = t1830*t6689;
  t6701 = -0.340999127418*t1127*t6700;
  t6706 = t1703*t6705;
  t6707 = t6695 + t6701 + t6706;
  t6709 = t2042*t6689;
  t6712 = t1978*t6700;
  t6713 = -0.340999127418*t1127*t6705;
  t6715 = t6709 + t6712 + t6713;
  t6719 = t1309*t6689;
  t6720 = t867*t6700;
  t6723 = t480*t6705;
  t6724 = t6719 + t6720 + t6723;
  t6708 = t2735*t6707;
  t6718 = t2775*t6715;
  t6728 = t2687*t6724;
  t6730 = t6708 + t6718 + t6728;
  t6741 = t2354*t6707;
  t6745 = -0.340999127418*t1661*t6715;
  t6748 = t2272*t6724;
  t6750 = t6741 + t6745 + t6748;
  t6753 = -0.340999127418*t1661*t6707;
  t6754 = t1942*t6715;
  t6757 = t428*t6724;
  t6758 = t6753 + t6754 + t6757;
  t6740 = t2969*t6730;
  t6752 = -0.340999127418*t2659*t6750;
  t6760 = t2933*t6758;
  t6764 = t6740 + t6752 + t6760;
  t6769 = t3046*t6730;
  t6772 = t3018*t6750;
  t6776 = -0.340999127418*t2659*t6758;
  t6777 = t6769 + t6772 + t6776;
  t6803 = t2685*t6730;
  t6805 = t2249*t6750;
  t6812 = t320*t6758;
  t6813 = t6803 + t6805 + t6812;
  t6867 = t3255*t6764;
  t6868 = 0.340999127418*t145*t6777;
  t6870 = t3208*t6813;
  t6872 = t6867 + t6868 + t6870;
  t6874 = 0.340999127418*t145*t6764;
  t6878 = t3173*t6777;
  t6880 = t3135*t6813;
  t6881 = t6874 + t6878 + t6880;
  t6830 = t2911*t6764;
  t6831 = t3011*t6777;
  t6834 = t194*t6813;
  t6839 = t6830 + t6831 + t6834;
  t6894 = -1.*t3202*t6872;
  t6903 = t3127*t6881;
  t6906 = t6894 + t6903;
  t6873 = t3127*t6872;
  t6884 = t3202*t6881;
  t6889 = t6873 + t6884;
  t6971 = -1.3877787807814457e-17*t1978*t723;
  t6973 = -1.8929254131827554e-17*t1127*t723;
  t6974 = 0. + t6971 + t6973;
  t6980 = 5.551115123125783e-17*t1703*t723;
  t6981 = 4.7323135329568886e-18*t1127*t723;
  t6982 = 0. + t6980 + t6981;
  t6995 = -1.3877787807814457e-17*t867*t723;
  t6999 = 5.551115123125783e-17*t480*t723;
  t7003 = 0. + t6995 + t6999;
  t6990 = -0.340999127418*t1661*t6974;
  t6992 = t2354*t6982;
  t7004 = t2272*t7003;
  t7010 = t6990 + t6992 + t7004;
  t7015 = t1942*t6974;
  t7019 = -0.340999127418*t1661*t6982;
  t7020 = t428*t7003;
  t7021 = t7015 + t7019 + t7020;
  t7032 = t2775*t6974;
  t7033 = t2735*t6982;
  t7036 = t2687*t7003;
  t7038 = t7032 + t7033 + t7036;
  t7040 = t2969*t7038;
  t7041 = -0.340999127418*t2659*t7010;
  t7042 = t2933*t7021;
  t7044 = t7040 + t7041 + t7042;
  t7051 = t3046*t7038;
  t7054 = t3018*t7010;
  t7055 = -0.340999127418*t2659*t7021;
  t7056 = t7051 + t7054 + t7055;
  t7068 = t2685*t7038;
  t7073 = t2249*t7010;
  t7076 = t320*t7021;
  t7077 = t7068 + t7073 + t7076;
  t7109 = t3255*t7044;
  t7110 = 0.340999127418*t145*t7056;
  t7112 = t3208*t7077;
  t7113 = t7109 + t7110 + t7112;
  t7126 = 0.340999127418*t145*t7044;
  t7130 = t3173*t7056;
  t7131 = t3135*t7077;
  t7134 = t7126 + t7130 + t7131;
  t7083 = t2911*t7044;
  t7090 = t3011*t7056;
  t7092 = t194*t7077;
  t7093 = t7083 + t7090 + t7092;
  t7138 = -1.*t3202*t7113;
  t7140 = t3127*t7134;
  t7141 = t7138 + t7140;
  t7116 = t3127*t7113;
  t7135 = t3202*t7134;
  t7136 = t7116 + t7135;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0.00001*(-1.*t24*(0. + t194*t2866 + t2911*t2982 + t3011*t3050) - 1.*t3112*(0. + t3115*t3283 + t3326*t3333))*var2[3];
  p_output1[13]=0.00001*(-1.*t24*(0. + t194*t3595 + t2911*t3617 + t3011*t3639) - 1.*t3112*(0. + t3115*t3673 + t3333*t3686))*var2[3];
  p_output1[14]=0.00001*(-1.*t24*(0. + t194*t3861 + t2911*t3871 + t3011*t3881) - 1.*t3112*(0. + t3115*t3914 + t3333*t3933))*var2[3];
  p_output1[15]=0.00001*(t24*(t3115*t3326 - 1.*t3283*t3333)*var2[3] + (-1.*t3115*t3283 - 1.*t3326*t3333)*var2[4]);
  p_output1[16]=0.00001*(t24*(-1.*t3333*t3673 + t3115*t3686)*var2[3] + (-1.*t3115*t3673 - 1.*t3333*t3686)*var2[4]);
  p_output1[17]=0.00001*(t24*(-1.*t3333*t3914 + t3115*t3933)*var2[3] + (-1.*t3115*t3914 - 1.*t3333*t3933)*var2[4]);
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0.00001*(t24*(t3333*t4083 + t3115*t4096)*var2[3] + (t3115*t4083 - 1.*t3333*t4096)*var2[4]);
  p_output1[52]=0.00001*(t24*(t3333*t4115 + t3115*t4138)*var2[3] + (t3115*t4115 - 1.*t3333*t4138)*var2[4]);
  p_output1[53]=0.00001*(t24*(t3333*t4196 + t3115*t4238)*var2[3] + (t3115*t4196 - 1.*t3333*t4238)*var2[4]);
  p_output1[54]=0.00001*((-1.*t3112*t4272 + t24*(t3333*t4335 + t3115*t4349))*var2[3] + (t3115*t4335 - 1.*t3333*t4349)*var2[4] + t4272*var2[5] + (1.000000637725*t2866*t2900 - 0.930418*t2982*t35 + 0.366501*t3050*t35)*var2[17]);
  p_output1[55]=0.00001*((-1.*t3112*t4408 + t24*(t3333*t4469 + t3115*t4479))*var2[3] + (t3115*t4469 - 1.*t3333*t4479)*var2[4] + t4408*var2[5] + (1.000000637725*t2900*t3595 - 0.930418*t35*t3617 + 0.366501*t35*t3639)*var2[17]);
  p_output1[56]=0.00001*((-1.*t3112*t4522 + t24*(t3333*t4565 + t3115*t4579))*var2[3] + (t3115*t4565 - 1.*t3333*t4579)*var2[4] + t4522*var2[5] + (1.000000637725*t2900*t3861 - 0.930418*t35*t3871 + 0.366501*t35*t3881)*var2[17]);
  p_output1[57]=0.00001*((-1.*t3112*t4664 + t24*(t3333*t4709 + t3115*t4722))*var2[3] + (t3115*t4709 - 1.*t3333*t4722)*var2[4] + t4664*var2[5] + (-1.*t2911*t4607 - 1.*t3011*t4621 - 1.*t194*t4648)*var2[17] + (-0.366501*t4607 - 0.930418*t4621)*var2[18]);
  p_output1[58]=0.00001*((-1.*t3112*t4824 + t24*(t3333*t4859 + t3115*t4869))*var2[3] + (t3115*t4859 - 1.*t3333*t4869)*var2[4] + t4824*var2[5] + (-1.*t2911*t4764 - 1.*t3011*t4777 - 1.*t194*t4809)*var2[17] + (-0.366501*t4764 - 0.930418*t4777)*var2[18]);
  p_output1[59]=0.00001*((-1.*t3112*t4987 + t24*(t3333*t5006 + t3115*t5015))*var2[3] + (t3115*t5006 - 1.*t3333*t5015)*var2[4] + t4987*var2[5] + (-1.*t2911*t4905 - 1.*t3011*t4916 - 1.*t194*t4960)*var2[17] + (-0.366501*t4905 - 0.930418*t4916)*var2[18]);
  p_output1[60]=0.00001*((-1.*t3112*t5142 + t24*(t3333*t5177 + t3115*t5185))*var2[3] + (t3115*t5177 - 1.*t3333*t5185)*var2[4] + t5142*var2[5] + (-1.*t2911*t5080 - 1.*t3011*t5089 - 1.*t194*t5112)*var2[17] + (-0.366501*t5080 - 0.930418*t5089)*var2[18] + (0.366501*t5065 - 0.930418*t5077)*var2[19]);
  p_output1[61]=0.00001*((-1.*t3112*t5350 + t24*(t3333*t5385 + t3115*t5398))*var2[3] + (t3115*t5385 - 1.*t3333*t5398)*var2[4] + t5350*var2[5] + (-1.*t2911*t5246 - 1.*t3011*t5264 - 1.*t194*t5317)*var2[17] + (-0.366501*t5246 - 0.930418*t5264)*var2[18] + (0.366501*t5233 - 0.930418*t5244)*var2[19]);
  p_output1[62]=0.00001*((-1.*t3112*t5520 + t24*(t3333*t5555 + t3115*t5570))*var2[3] + (t3115*t5555 - 1.*t3333*t5570)*var2[4] + t5520*var2[5] + (-1.*t2911*t5486 - 1.*t3011*t5497 - 1.*t194*t5510)*var2[17] + (-0.366501*t5486 - 0.930418*t5497)*var2[18] + (0.366501*t5464 - 0.930418*t5482)*var2[19]);
  p_output1[63]=0.00001*((-1.*t3112*t5763 + t24*(t3333*t5831 + t3115*t5843))*var2[3] + (t3115*t5831 - 1.*t3333*t5843)*var2[4] + t5763*var2[5] + (-1.*t2911*t5676 - 1.*t3011*t5702 - 1.*t194*t5733)*var2[17] + (-0.366501*t5676 - 0.930418*t5702)*var2[18] + (0.366501*t5659 - 0.930418*t5674)*var2[19] + (-0.366501*t5616 + 0.930418*t5635)*var2[20]);
  p_output1[64]=0.00001*((-1.*t3112*t6038 + t24*(t3333*t6096 + t3115*t6104))*var2[3] + (t3115*t6096 - 1.*t3333*t6104)*var2[4] + t6038*var2[5] + (-1.*t2911*t5974 - 1.*t3011*t5987 - 1.*t194*t6018)*var2[17] + (-0.366501*t5974 - 0.930418*t5987)*var2[18] + (0.366501*t5954 - 0.930418*t5966)*var2[19] + (-0.366501*t5913 + 0.930418*t5928)*var2[20]);
  p_output1[65]=0.00001*((-1.*t3112*t6296 + t24*(t3333*t6340 + t3115*t6347))*var2[3] + (t3115*t6340 - 1.*t3333*t6347)*var2[4] + t6296*var2[5] + (-1.*t2911*t6250 - 1.*t3011*t6261 - 1.*t194*t6277)*var2[17] + (-0.366501*t6250 - 0.930418*t6261)*var2[18] + (0.366501*t6225 - 0.930418*t6245)*var2[19] + (-0.366501*t6149 + 0.930418*t6177)*var2[20]);
  p_output1[66]=0.00001*((-1.*t3112*t6559 + t24*(t3333*t6627 + t3115*t6639))*var2[3] + (t3115*t6627 - 1.*t3333*t6639)*var2[4] + t6559*var2[5] + (-1.*t2911*t6510 - 1.*t3011*t6521 - 1.*t194*t6541)*var2[17] + (-0.366501*t6510 - 0.930418*t6521)*var2[18] + (0.366501*t6485 - 0.930418*t6504)*var2[19] + (0.930418*t6446 - 0.366501*t6454)*var2[20] + (-0.366501*t6428 + 0.930418*t6440)*var2[21]);
  p_output1[67]=0.00001*((-1.*t3112*t6839 + t24*(t3333*t6889 + t3115*t6906))*var2[3] + (t3115*t6889 - 1.*t3333*t6906)*var2[4] + t6839*var2[5] + (-1.*t2911*t6764 - 1.*t3011*t6777 - 1.*t194*t6813)*var2[17] + (-0.366501*t6764 - 0.930418*t6777)*var2[18] + (0.366501*t6750 - 0.930418*t6758)*var2[19] + (-0.366501*t6707 + 0.930418*t6715)*var2[20] + (0.930418*t6700 - 0.366501*t6705)*var2[21]);
  p_output1[68]=0.00001*((-1.*t3112*t7093 + t24*(t3333*t7136 + t3115*t7141))*var2[3] + (t3115*t7136 - 1.*t3333*t7141)*var2[4] + t7093*var2[5] + (-1.*t2911*t7044 - 1.*t3011*t7056 - 1.*t194*t7077)*var2[17] + (-0.366501*t7044 - 0.930418*t7056)*var2[18] + (0.366501*t7010 - 0.930418*t7021)*var2[19] + (0.930418*t6974 - 0.366501*t6982)*var2[20] - 3.325703601397834e-17*t723*var2[21]);
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jq_AMBody_right_toe_pitch_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
