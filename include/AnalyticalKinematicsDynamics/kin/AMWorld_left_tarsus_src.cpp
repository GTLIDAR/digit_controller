/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:57:50 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "AMWorld_left_tarsus_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t306;
  double t368;
  double t423;
  double t603;
  double t786;
  double t840;
  double t842;
  double t925;
  double t1787;
  double t1802;
  double t1830;
  double t1043;
  double t1185;
  double t1355;
  double t1494;
  double t1500;
  double t2119;
  double t2050;
  double t2125;
  double t2131;
  double t2155;
  double t2180;
  double t2182;
  double t2191;
  double t2192;
  double t1840;
  double t1844;
  double t2023;
  double t2025;
  double t2073;
  double t2083;
  double t2193;
  double t2201;
  double t3085;
  double t3098;
  double t3187;
  double t2209;
  double t2215;
  double t2346;
  double t2388;
  double t2397;
  double t2405;
  double t2421;
  double t2428;
  double t2843;
  double t2933;
  double t2946;
  double t3362;
  double t3372;
  double t3416;
  double t3422;
  double t3427;
  double t3437;
  double t3438;
  double t3441;
  double t3520;
  double t3543;
  double t3592;
  double t3199;
  double t3206;
  double t3252;
  double t3268;
  double t3622;
  double t3627;
  double t3664;
  double t3683;
  double t3707;
  double t3708;
  double t3762;
  double t3764;
  double t3770;
  double t3782;
  double t3784;
  double t3788;
  double t3861;
  double t3905;
  double t3968;
  double t3972;
  double t3982;
  double t3985;
  double t4010;
  double t4020;
  double t4023;
  double t4039;
  double t4063;
  double t4102;
  double t3692;
  double t3699;
  double t3705;
  double t3801;
  double t3866;
  double t3878;
  double t4064;
  double t4065;
  double t2577;
  double t4108;
  double t4132;
  double t4133;
  double t4134;
  double t4138;
  double t4148;
  double t4153;
  double t4160;
  double t4207;
  double t4066;
  double t4172;
  double t4184;
  double t2576;
  double t4211;
  double t4213;
  double t4219;
  double t4385;
  double t4388;
  double t4442;
  double t4448;
  double t4475;
  double t4481;
  double t4397;
  double t4471;
  double t4484;
  double t4492;
  double t4631;
  double t4634;
  double t4637;
  double t4656;
  double t4659;
  double t4664;
  double t4669;
  double t4673;
  double t4675;
  double t4693;
  double t4696;
  double t4709;
  double t4725;
  double t4757;
  double t4763;
  double t4774;
  double t4776;
  double t4788;
  double t4665;
  double t4721;
  double t4809;
  double t4810;
  double t4816;
  double t4838;
  double t4847;
  double t4855;
  double t4875;
  double t4897;
  double t4909;
  double t4926;
  double t4873;
  double t4874;
  double t4933;
  double t4935;
  double t4941;
  double t4943;
  double t4961;
  double t4984;
  double t4990;
  double t4994;
  double t4995;
  double t5005;
  double t4940;
  double t4985;
  double t5007;
  double t5008;
  double t5019;
  double t5020;
  double t5022;
  double t5023;
  double t4333;
  double t5018;
  double t5033;
  double t5034;
  double t5041;
  double t5049;
  double t5050;
  double t4381;
  double t5091;
  double t5097;
  double t5098;
  double t5101;
  double t5193;
  double t5200;
  double t5204;
  double t5213;
  double t5238;
  double t5241;
  double t5243;
  double t5244;
  double t5264;
  double t5267;
  double t5272;
  double t5275;
  double t5221;
  double t5245;
  double t5281;
  double t5284;
  double t5291;
  double t5300;
  double t5301;
  double t5306;
  double t5398;
  double t5403;
  double t5410;
  double t5418;
  double t5353;
  double t5382;
  double t5422;
  double t5438;
  double t5447;
  double t5451;
  double t5452;
  double t5462;
  double t5471;
  double t5474;
  double t5477;
  double t5478;
  double t5442;
  double t5468;
  double t5479;
  double t5496;
  double t5503;
  double t5504;
  double t5510;
  double t5512;
  double t5500;
  double t5513;
  double t5514;
  double t5524;
  double t5528;
  double t5533;
  double t5565;
  double t5566;
  double t5573;
  double t5577;
  double t5656;
  double t5651;
  double t5666;
  double t5667;
  double t5670;
  double t5654;
  double t5657;
  double t5658;
  double t5661;
  double t5671;
  double t5672;
  double t5686;
  double t5687;
  double t5689;
  double t5716;
  double t5720;
  double t5721;
  double t5726;
  double t5673;
  double t5690;
  double t5698;
  double t5702;
  double t5705;
  double t5711;
  double t5713;
  double t5714;
  double t5704;
  double t5715;
  double t5727;
  double t5728;
  double t5739;
  double t5744;
  double t5745;
  double t5748;
  double t5774;
  double t5787;
  double t5806;
  double t5807;
  double t5738;
  double t5765;
  double t5810;
  double t5811;
  double t5832;
  double t5838;
  double t5839;
  double t5840;
  double t5854;
  double t5857;
  double t5859;
  double t5861;
  double t17;
  double t1034;
  double t1672;
  double t1707;
  double t1784;
  double t2204;
  double t2477;
  double t2514;
  double t2551;
  double t4204;
  double t4222;
  double t4283;
  double t4309;
  double t4359;
  double t4362;
  double t4372;
  double t4377;
  double t4500;
  double t4503;
  double t4508;
  double t4545;
  double t4550;
  double t4555;
  double t4562;
  double t4563;
  double t4566;
  double t4573;
  double t4606;
  double t4608;
  double t4609;
  double t4610;
  double t4616;
  double t4813;
  double t4857;
  double t4860;
  double t4861;
  double t4862;
  double t4863;
  double t4866;
  double t4868;
  double t5039;
  double t5051;
  double t5052;
  double t5053;
  double t5056;
  double t5080;
  double t5086;
  double t5087;
  double t5111;
  double t5120;
  double t5138;
  double t5139;
  double t5146;
  double t5153;
  double t5154;
  double t5156;
  double t5164;
  double t5166;
  double t5175;
  double t5176;
  double t5180;
  double t5183;
  double t5186;
  double t5288;
  double t5309;
  double t5310;
  double t5334;
  double t5336;
  double t5339;
  double t5343;
  double t5352;
  double t5516;
  double t5534;
  double t5542;
  double t5546;
  double t5547;
  double t5550;
  double t5554;
  double t5561;
  double t5580;
  double t5586;
  double t5587;
  double t5590;
  double t5592;
  double t5601;
  double t5605;
  double t5609;
  double t5621;
  double t5629;
  double t5631;
  double t5633;
  double t5635;
  double t5638;
  double t5830;
  double t5848;
  double t5865;
  double t5866;
  double t5869;
  double t5872;
  double t5878;
  double t5884;
  double t5920;
  double t5922;
  double t5923;
  double t5952;
  double t4614;
  double t5185;
  double t5643;
  double t5650;
  double t5997;
  double t5999;
  double t6001;
  double t5991;
  double t5992;
  double t5993;
  double t5995;
  double t6006;
  double t6007;
  double t6010;
  double t6023;
  double t6027;
  double t6094;
  double t6107;
  double t6114;
  double t6115;
  double t6009;
  double t6035;
  double t6039;
  double t6057;
  double t6063;
  double t6065;
  double t6067;
  double t6068;
  double t6062;
  double t6088;
  double t6116;
  double t6125;
  double t6139;
  double t6142;
  double t6145;
  double t6148;
  double t6158;
  double t6161;
  double t6170;
  double t6174;
  double t6131;
  double t6156;
  double t6182;
  double t6186;
  double t6193;
  double t6218;
  double t6221;
  double t6226;
  double t6233;
  double t6242;
  double t6243;
  double t6245;
  double t5910;
  double t5913;
  double t5915;
  double t5917;
  double t6192;
  double t6230;
  double t6252;
  double t6258;
  double t6265;
  double t6266;
  double t6268;
  double t6269;
  double t5963;
  double t5964;
  double t5968;
  double t5969;
  double t6279;
  double t6281;
  double t6282;
  double t6283;
  double t6317;
  double t6319;
  double t6322;
  double t6329;
  double t6330;
  double t6334;
  double t6404;
  double t6422;
  double t6423;
  double t6424;
  double t6328;
  double t6335;
  double t6338;
  double t6341;
  double t6372;
  double t6383;
  double t6389;
  double t6398;
  double t6353;
  double t6399;
  double t6427;
  double t6430;
  double t6444;
  double t6447;
  double t6450;
  double t6453;
  double t6461;
  double t6463;
  double t6468;
  double t6473;
  double t6442;
  double t6459;
  double t6475;
  double t6481;
  double t6484;
  double t6485;
  double t6488;
  double t6509;
  double t6516;
  double t6517;
  double t6518;
  double t6534;
  double t6482;
  double t6512;
  double t6541;
  double t6542;
  double t6547;
  double t6548;
  double t6550;
  double t6551;
  double t6572;
  double t6576;
  double t6577;
  double t6578;
  t306 = Cos(var1[10]);
  t368 = -1.*t306;
  t423 = 1. + t368;
  t603 = -0.8656776547239999*t423;
  t786 = 1. + t603;
  t840 = -0.366501*t786;
  t842 = -0.3172717261340007*t423;
  t925 = t840 + t842;
  t1787 = Cos(var1[9]);
  t1802 = -1.*t1787;
  t1830 = 1. + t1802;
  t1043 = -0.134322983001*t423;
  t1185 = 1. + t1043;
  t1355 = -0.930418*t1185;
  t1494 = -0.12497652119782442*t423;
  t1500 = t1355 + t1494;
  t2119 = Sin(var1[10]);
  t2050 = Sin(var1[9]);
  t2125 = -0.930418*t2119;
  t2131 = 0. + t2125;
  t2155 = -0.366501*t2131;
  t2180 = 0.366501*t2119;
  t2182 = 0. + t2180;
  t2191 = -0.930418*t2182;
  t2192 = t2155 + t2191;
  t1840 = 0.340999127418*t1830*t925;
  t1844 = -0.134322983001*t1830;
  t2023 = 1. + t1844;
  t2025 = t2023*t1500;
  t2073 = -0.366501*t2050;
  t2083 = 0. + t2073;
  t2193 = t2083*t2192;
  t2201 = 0. + t1840 + t2025 + t2193;
  t3085 = Cos(var1[8]);
  t3098 = -1.*t3085;
  t3187 = 1. + t3098;
  t2209 = -0.8656776547239999*t1830;
  t2215 = 1. + t2209;
  t2346 = t2215*t925;
  t2388 = 0.340999127418*t1830*t1500;
  t2397 = 0.930418*t2050;
  t2405 = 0. + t2397;
  t2421 = t2405*t2192;
  t2428 = 0. + t2346 + t2388 + t2421;
  t2843 = Cos(var1[7]);
  t2933 = -1.*t2843;
  t2946 = 1. + t2933;
  t3362 = -0.930418*t2050;
  t3372 = 0. + t3362;
  t3416 = t925*t3372;
  t3422 = 0.366501*t2050;
  t3427 = 0. + t3422;
  t3437 = t1500*t3427;
  t3438 = -1.000000637725*t1830;
  t3441 = 1. + t3438;
  t3520 = t3441*t2192;
  t3543 = 0. + t3416 + t3437 + t3520;
  t3592 = Sin(var1[8]);
  t3199 = 0.340999127418*t3187*t2201;
  t3206 = -0.8656776547239999*t3187;
  t3252 = 1. + t3206;
  t3268 = t3252*t2428;
  t3622 = -0.930418*t3592;
  t3627 = 0. + t3622;
  t3664 = t3543*t3627;
  t3683 = 0. + t3199 + t3268 + t3664;
  t3707 = -0.134322983001*t3187;
  t3708 = 1. + t3707;
  t3762 = t3708*t2201;
  t3764 = 0.340999127418*t3187*t2428;
  t3770 = 0.366501*t3592;
  t3782 = 0. + t3770;
  t3784 = t3543*t3782;
  t3788 = 0. + t3762 + t3764 + t3784;
  t3861 = Sin(var1[7]);
  t3905 = -1.000000637725*t3187;
  t3968 = 1. + t3905;
  t3972 = t3968*t3543;
  t3982 = -0.366501*t3592;
  t3985 = 0. + t3982;
  t4010 = t2201*t3985;
  t4020 = 0.930418*t3592;
  t4023 = 0. + t4020;
  t4039 = t2428*t4023;
  t4063 = 0. + t3972 + t4010 + t4039;
  t4102 = Cos(var1[6]);
  t3692 = -0.340999127418*t2946*t3683;
  t3699 = -0.8656776547239999*t2946;
  t3705 = 1. + t3699;
  t3801 = t3705*t3788;
  t3866 = -0.930418*t3861;
  t3878 = 0. + t3866;
  t4064 = t3878*t4063;
  t4065 = 0. + t3692 + t3801 + t4064;
  t2577 = Sin(var1[6]);
  t4108 = -0.134322983001*t2946;
  t4132 = 1. + t4108;
  t4133 = t4132*t3683;
  t4134 = -0.340999127418*t2946*t3788;
  t4138 = -0.366501*t3861;
  t4148 = 0. + t4138;
  t4153 = t4148*t4063;
  t4160 = 0. + t4133 + t4134 + t4153;
  t4207 = Cos(var1[5]);
  t4066 = -1.*t2577*t4065;
  t4172 = t4102*t4160;
  t4184 = 0. + t4066 + t4172;
  t2576 = Sin(var1[5]);
  t4211 = t4102*t4065;
  t4213 = t2577*t4160;
  t4219 = 0. + t4211 + t4213;
  t4385 = 0.366501*t3861;
  t4388 = 0. + t4385;
  t4442 = 0.930418*t3861;
  t4448 = 0. + t4442;
  t4475 = -1.000000637725*t2946;
  t4481 = 1. + t4475;
  t4397 = t4388*t3683;
  t4471 = t4448*t3788;
  t4484 = t4481*t4063;
  t4492 = 0. + t4397 + t4471 + t4484;
  t4631 = -0.310811*t1185;
  t4634 = 0.2690616104987713*t423;
  t4637 = -0.366501*t2119;
  t4656 = 0. + t4637;
  t4659 = 0.529919*t4656;
  t4664 = t4631 + t4634 + t4659;
  t4669 = -1.000000637725*t423;
  t4673 = 1. + t4669;
  t4675 = 0.529919*t4673;
  t4693 = 0.789039*t2131;
  t4696 = -0.310811*t2182;
  t4709 = t4675 + t4693 + t4696;
  t4725 = 0.789039*t786;
  t4757 = -0.105986279791916*t423;
  t4763 = 0.930418*t2119;
  t4774 = 0. + t4763;
  t4776 = 0.529919*t4774;
  t4788 = t4725 + t4757 + t4776;
  t4665 = 0.340999127418*t1830*t4664;
  t4721 = t2405*t4709;
  t4809 = t2215*t4788;
  t4810 = 0. + t4665 + t4721 + t4809;
  t4816 = t2023*t4664;
  t4838 = t2083*t4709;
  t4847 = 0.340999127418*t1830*t4788;
  t4855 = 0. + t4816 + t4838 + t4847;
  t4875 = t3427*t4664;
  t4897 = t3441*t4709;
  t4909 = t3372*t4788;
  t4926 = 0. + t4875 + t4897 + t4909;
  t4873 = t3252*t4810;
  t4874 = 0.340999127418*t3187*t4855;
  t4933 = t4926*t3627;
  t4935 = 0. + t4873 + t4874 + t4933;
  t4941 = 0.340999127418*t3187*t4810;
  t4943 = t3708*t4855;
  t4961 = t4926*t3782;
  t4984 = 0. + t4941 + t4943 + t4961;
  t4990 = t3968*t4926;
  t4994 = t4855*t3985;
  t4995 = t4810*t4023;
  t5005 = 0. + t4990 + t4994 + t4995;
  t4940 = -0.340999127418*t2946*t4935;
  t4985 = t3705*t4984;
  t5007 = t3878*t5005;
  t5008 = 0. + t4940 + t4985 + t5007;
  t5019 = t4132*t4935;
  t5020 = -0.340999127418*t2946*t4984;
  t5022 = t4148*t5005;
  t5023 = 0. + t5019 + t5020 + t5022;
  t4333 = Cos(var1[4]);
  t5018 = -1.*t2577*t5008;
  t5033 = t4102*t5023;
  t5034 = 0. + t5018 + t5033;
  t5041 = t4102*t5008;
  t5049 = t2577*t5023;
  t5050 = 0. + t5041 + t5049;
  t4381 = Sin(var1[4]);
  t5091 = t4388*t4935;
  t5097 = t4448*t4984;
  t5098 = t4481*t5005;
  t5101 = 0. + t5091 + t5097 + t5098;
  t5193 = 0.194216*t1185;
  t5200 = -0.16812859677606265*t423;
  t5204 = 0.848048*t4656;
  t5213 = t5193 + t5200 + t5204;
  t5238 = 0.848048*t4673;
  t5241 = -0.493047*t2131;
  t5243 = 0.194216*t2182;
  t5244 = t5238 + t5241 + t5243;
  t5264 = -0.493047*t786;
  t5267 = 0.06622748653061429*t423;
  t5272 = 0.848048*t4774;
  t5275 = t5264 + t5267 + t5272;
  t5221 = 0.340999127418*t1830*t5213;
  t5245 = t2405*t5244;
  t5281 = t2215*t5275;
  t5284 = 0. + t5221 + t5245 + t5281;
  t5291 = t2023*t5213;
  t5300 = t2083*t5244;
  t5301 = 0.340999127418*t1830*t5275;
  t5306 = 0. + t5291 + t5300 + t5301;
  t5398 = t3427*t5213;
  t5403 = t3441*t5244;
  t5410 = t3372*t5275;
  t5418 = 0. + t5398 + t5403 + t5410;
  t5353 = t3252*t5284;
  t5382 = 0.340999127418*t3187*t5306;
  t5422 = t5418*t3627;
  t5438 = 0. + t5353 + t5382 + t5422;
  t5447 = 0.340999127418*t3187*t5284;
  t5451 = t3708*t5306;
  t5452 = t5418*t3782;
  t5462 = 0. + t5447 + t5451 + t5452;
  t5471 = t3968*t5418;
  t5474 = t5306*t3985;
  t5477 = t5284*t4023;
  t5478 = 0. + t5471 + t5474 + t5477;
  t5442 = -0.340999127418*t2946*t5438;
  t5468 = t3705*t5462;
  t5479 = t3878*t5478;
  t5496 = 0. + t5442 + t5468 + t5479;
  t5503 = t4132*t5438;
  t5504 = -0.340999127418*t2946*t5462;
  t5510 = t4148*t5478;
  t5512 = 0. + t5503 + t5504 + t5510;
  t5500 = -1.*t2577*t5496;
  t5513 = t4102*t5512;
  t5514 = 0. + t5500 + t5513;
  t5524 = t4102*t5496;
  t5528 = t2577*t5512;
  t5533 = 0. + t5524 + t5528;
  t5565 = t4388*t5438;
  t5566 = t4448*t5462;
  t5573 = t4481*t5478;
  t5577 = 0. + t5565 + t5566 + t5573;
  t5656 = Cos(var1[3]);
  t5651 = Sin(var1[3]);
  t5666 = t5656*t4207*t4381;
  t5667 = t5651*t2576;
  t5670 = t5666 + t5667;
  t5654 = -1.*t4207*t5651;
  t5657 = t5656*t4381*t2576;
  t5658 = t5654 + t5657;
  t5661 = t4102*t5658;
  t5671 = -1.*t5670*t2577;
  t5672 = t5661 + t5671;
  t5686 = t4102*t5670;
  t5687 = t5658*t2577;
  t5689 = t5686 + t5687;
  t5716 = t5656*t4333*t4481;
  t5720 = t5672*t3878;
  t5721 = t5689*t4148;
  t5726 = t5716 + t5720 + t5721;
  t5673 = -0.340999127418*t2946*t5672;
  t5690 = t4132*t5689;
  t5698 = t5656*t4333*t4388;
  t5702 = t5673 + t5690 + t5698;
  t5705 = t3705*t5672;
  t5711 = -0.340999127418*t2946*t5689;
  t5713 = t5656*t4333*t4448;
  t5714 = t5705 + t5711 + t5713;
  t5704 = 0.340999127418*t3187*t5702;
  t5715 = t3708*t5714;
  t5727 = t5726*t3985;
  t5728 = t5704 + t5715 + t5727;
  t5739 = t3968*t5726;
  t5744 = t5702*t3627;
  t5745 = t5714*t3782;
  t5748 = t5739 + t5744 + t5745;
  t5774 = t3252*t5702;
  t5787 = 0.340999127418*t3187*t5714;
  t5806 = t5726*t4023;
  t5807 = t5774 + t5787 + t5806;
  t5738 = 0.340999127418*t1830*t5728;
  t5765 = t3372*t5748;
  t5810 = t2215*t5807;
  t5811 = t5738 + t5765 + t5810;
  t5832 = t2023*t5728;
  t5838 = t3427*t5748;
  t5839 = 0.340999127418*t1830*t5807;
  t5840 = t5832 + t5838 + t5839;
  t5854 = t2083*t5728;
  t5857 = t3441*t5748;
  t5859 = t2405*t5807;
  t5861 = t5854 + t5857 + t5859;
  t17 = 1.000000637725*var2[10];
  t1034 = -0.366501*t925;
  t1672 = -0.930418*t1500;
  t1707 = 0. + t1034 + t1672;
  t1784 = var2[9]*t1707;
  t2204 = 0.930418*t2201;
  t2477 = 0.366501*t2428;
  t2514 = 0. + t2204 + t2477;
  t2551 = var2[8]*t2514;
  t4204 = -1.*t2576*t4184;
  t4222 = t4207*t4219;
  t4283 = 0. + t4204 + t4222;
  t4309 = var2[4]*t4283;
  t4359 = t4207*t4184;
  t4362 = t2576*t4219;
  t4372 = 0. + t4359 + t4362;
  t4377 = t4333*t4372;
  t4500 = -1.*t4381*t4492;
  t4503 = 0. + t4377 + t4500;
  t4508 = var2[3]*t4503;
  t4545 = -0.930418*t3683;
  t4550 = 0.366501*t3788;
  t4555 = 0. + t4545 + t4550;
  t4562 = var2[7]*t4555;
  t4563 = -1.*t4388*t3683;
  t4566 = -1.*t4448*t3788;
  t4573 = -1.*t4481*t4063;
  t4606 = 0. + t4563 + t4566 + t4573;
  t4608 = var2[6]*t4606;
  t4609 = var2[5]*t4492;
  t4610 = t17 + t1784 + t2551 + t4309 + t4508 + t4562 + t4608 + t4609;
  t4616 = 5.664589999843095e-7*var2[10];
  t4813 = 0.366501*t4810;
  t4857 = 0.930418*t4855;
  t4860 = 0. + t4813 + t4857;
  t4861 = var2[8]*t4860;
  t4862 = -0.930418*t4664;
  t4863 = -0.366501*t4788;
  t4866 = 0. + t4862 + t4863;
  t4868 = var2[9]*t4866;
  t5039 = -1.*t2576*t5034;
  t5051 = t4207*t5050;
  t5052 = 0. + t5039 + t5051;
  t5053 = var2[4]*t5052;
  t5056 = t4207*t5034;
  t5080 = t2576*t5050;
  t5086 = 0. + t5056 + t5080;
  t5087 = t4333*t5086;
  t5111 = -1.*t4381*t5101;
  t5120 = 0. + t5087 + t5111;
  t5138 = var2[3]*t5120;
  t5139 = -0.930418*t4935;
  t5146 = 0.366501*t4984;
  t5153 = 0. + t5139 + t5146;
  t5154 = var2[7]*t5153;
  t5156 = -1.*t4388*t4935;
  t5164 = -1.*t4448*t4984;
  t5166 = -1.*t4481*t5005;
  t5175 = 0. + t5156 + t5164 + t5166;
  t5176 = var2[6]*t5175;
  t5180 = var2[5]*t5101;
  t5183 = t4616 + t4861 + t4868 + t5053 + t5138 + t5154 + t5176 + t5180;
  t5186 = 1.5625900004478943e-7*var2[10];
  t5288 = 0.366501*t5284;
  t5309 = 0.930418*t5306;
  t5310 = 0. + t5288 + t5309;
  t5334 = var2[8]*t5310;
  t5336 = -0.930418*t5213;
  t5339 = -0.366501*t5275;
  t5343 = 0. + t5336 + t5339;
  t5352 = var2[9]*t5343;
  t5516 = -1.*t2576*t5514;
  t5534 = t4207*t5533;
  t5542 = 0. + t5516 + t5534;
  t5546 = var2[4]*t5542;
  t5547 = t4207*t5514;
  t5550 = t2576*t5533;
  t5554 = 0. + t5547 + t5550;
  t5561 = t4333*t5554;
  t5580 = -1.*t4381*t5577;
  t5586 = 0. + t5561 + t5580;
  t5587 = var2[3]*t5586;
  t5590 = -0.930418*t5438;
  t5592 = 0.366501*t5462;
  t5601 = 0. + t5590 + t5592;
  t5605 = var2[7]*t5601;
  t5609 = -1.*t4388*t5438;
  t5621 = -1.*t4448*t5462;
  t5629 = -1.*t4481*t5478;
  t5631 = 0. + t5609 + t5621 + t5629;
  t5633 = var2[6]*t5631;
  t5635 = var2[5]*t5577;
  t5638 = t5186 + t5334 + t5352 + t5546 + t5587 + t5605 + t5633 + t5635;
  t5830 = t786*t5811;
  t5848 = 0.340999127418*t423*t5840;
  t5865 = t2131*t5861;
  t5866 = t5830 + t5848 + t5865;
  t5869 = 0.340999127418*t423*t5811;
  t5872 = t1185*t5840;
  t5878 = t2182*t5861;
  t5884 = t5869 + t5872 + t5878;
  t5920 = t4774*t5811;
  t5922 = t4656*t5840;
  t5923 = t4673*t5861;
  t5952 = t5920 + t5922 + t5923;
  t4614 = 0.0165*t4610;
  t5185 = 0.00001*t5183;
  t5643 = 0.0001*t5638;
  t5650 = t4614 + t5185 + t5643;
  t5997 = t4207*t5651*t4381;
  t5999 = -1.*t5656*t2576;
  t6001 = t5997 + t5999;
  t5991 = t5656*t4207;
  t5992 = t5651*t4381*t2576;
  t5993 = t5991 + t5992;
  t5995 = t4102*t5993;
  t6006 = -1.*t6001*t2577;
  t6007 = t5995 + t6006;
  t6010 = t4102*t6001;
  t6023 = t5993*t2577;
  t6027 = t6010 + t6023;
  t6094 = t4333*t4481*t5651;
  t6107 = t6007*t3878;
  t6114 = t6027*t4148;
  t6115 = t6094 + t6107 + t6114;
  t6009 = -0.340999127418*t2946*t6007;
  t6035 = t4132*t6027;
  t6039 = t4333*t5651*t4388;
  t6057 = t6009 + t6035 + t6039;
  t6063 = t3705*t6007;
  t6065 = -0.340999127418*t2946*t6027;
  t6067 = t4333*t5651*t4448;
  t6068 = t6063 + t6065 + t6067;
  t6062 = 0.340999127418*t3187*t6057;
  t6088 = t3708*t6068;
  t6116 = t6115*t3985;
  t6125 = t6062 + t6088 + t6116;
  t6139 = t3968*t6115;
  t6142 = t6057*t3627;
  t6145 = t6068*t3782;
  t6148 = t6139 + t6142 + t6145;
  t6158 = t3252*t6057;
  t6161 = 0.340999127418*t3187*t6068;
  t6170 = t6115*t4023;
  t6174 = t6158 + t6161 + t6170;
  t6131 = 0.340999127418*t1830*t6125;
  t6156 = t3372*t6148;
  t6182 = t2215*t6174;
  t6186 = t6131 + t6156 + t6182;
  t6193 = t2023*t6125;
  t6218 = t3427*t6148;
  t6221 = 0.340999127418*t1830*t6174;
  t6226 = t6193 + t6218 + t6221;
  t6233 = t2083*t6125;
  t6242 = t3441*t6148;
  t6243 = t2405*t6174;
  t6245 = t6233 + t6242 + t6243;
  t5910 = 0.00001*t4610;
  t5913 = 0.01641*t5183;
  t5915 = 0.00061*t5638;
  t5917 = t5910 + t5913 + t5915;
  t6192 = t786*t6186;
  t6230 = 0.340999127418*t423*t6226;
  t6252 = t2131*t6245;
  t6258 = t6192 + t6230 + t6252;
  t6265 = 0.340999127418*t423*t6186;
  t6266 = t1185*t6226;
  t6268 = t2182*t6245;
  t6269 = t6265 + t6266 + t6268;
  t5963 = 0.0001*t4610;
  t5964 = 0.00061*t5183;
  t5968 = 0.00093*t5638;
  t5969 = t5963 + t5964 + t5968;
  t6279 = t4774*t6186;
  t6281 = t4656*t6226;
  t6282 = t4673*t6245;
  t6283 = t6279 + t6281 + t6282;
  t6317 = t4333*t4102*t2576;
  t6319 = -1.*t4333*t4207*t2577;
  t6322 = t6317 + t6319;
  t6329 = t4333*t4207*t4102;
  t6330 = t4333*t2576*t2577;
  t6334 = t6329 + t6330;
  t6404 = -1.*t4481*t4381;
  t6422 = t6322*t3878;
  t6423 = t6334*t4148;
  t6424 = t6404 + t6422 + t6423;
  t6328 = -0.340999127418*t2946*t6322;
  t6335 = t4132*t6334;
  t6338 = -1.*t4381*t4388;
  t6341 = t6328 + t6335 + t6338;
  t6372 = t3705*t6322;
  t6383 = -0.340999127418*t2946*t6334;
  t6389 = -1.*t4381*t4448;
  t6398 = t6372 + t6383 + t6389;
  t6353 = 0.340999127418*t3187*t6341;
  t6399 = t3708*t6398;
  t6427 = t6424*t3985;
  t6430 = t6353 + t6399 + t6427;
  t6444 = t3968*t6424;
  t6447 = t6341*t3627;
  t6450 = t6398*t3782;
  t6453 = t6444 + t6447 + t6450;
  t6461 = t3252*t6341;
  t6463 = 0.340999127418*t3187*t6398;
  t6468 = t6424*t4023;
  t6473 = t6461 + t6463 + t6468;
  t6442 = 0.340999127418*t1830*t6430;
  t6459 = t3372*t6453;
  t6475 = t2215*t6473;
  t6481 = t6442 + t6459 + t6475;
  t6484 = t2023*t6430;
  t6485 = t3427*t6453;
  t6488 = 0.340999127418*t1830*t6473;
  t6509 = t6484 + t6485 + t6488;
  t6516 = t2083*t6430;
  t6517 = t3441*t6453;
  t6518 = t2405*t6473;
  t6534 = t6516 + t6517 + t6518;
  t6482 = t786*t6481;
  t6512 = 0.340999127418*t423*t6509;
  t6541 = t2131*t6534;
  t6542 = t6482 + t6512 + t6541;
  t6547 = 0.340999127418*t423*t6481;
  t6548 = t1185*t6509;
  t6550 = t2182*t6534;
  t6551 = t6547 + t6548 + t6550;
  t6572 = t4774*t6481;
  t6576 = t4656*t6509;
  t6577 = t4673*t6534;
  t6578 = t6572 + t6576 + t6577;
  p_output1[0]=t5650*(-0.366501*t5866 - 0.930418*t5884) + t5917*(0.789039*t5866 - 0.310811*t5884 + 0.529919*t5952) + (-0.493047*t5866 + 0.194216*t5884 + 0.848048*t5952)*t5969;
  p_output1[1]=t5650*(-0.366501*t6258 - 0.930418*t6269) + t5917*(0.789039*t6258 - 0.310811*t6269 + 0.529919*t6283) + t5969*(-0.493047*t6258 + 0.194216*t6269 + 0.848048*t6283);
  p_output1[2]=t5650*(-0.366501*t6542 - 0.930418*t6551) + t5917*(0.789039*t6542 - 0.310811*t6551 + 0.529919*t6578) + t5969*(-0.493047*t6542 + 0.194216*t6551 + 0.848048*t6578);
}



void AMWorld_left_tarsus_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
