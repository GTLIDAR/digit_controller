/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:43:45 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dJb_shoulder_pitch_joint_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t308;
  double t123;
  double t160;
  double t263;
  double t627;
  double t490;
  double t493;
  double t522;
  double t534;
  double t540;
  double t541;
  double t550;
  double t562;
  double t475;
  double t628;
  double t636;
  double t662;
  double t697;
  double t727;
  double t728;
  double t733;
  double t735;
  double t442;
  double t578;
  double t757;
  double t903;
  double t86;
  double t419;
  double t1069;
  double t1084;
  double t1100;
  double t1012;
  double t992;
  double t812;
  double t834;
  double t863;
  double t867;
  double t1515;
  double t1521;
  double t426;
  double t289;
  double t293;
  double t301;
  double t377;
  double t381;
  double t389;
  double t396;
  double t408;
  double t412;
  double t418;
  double t830;
  double t909;
  double t919;
  double t1800;
  double t1803;
  double t1810;
  double t1823;
  double t1839;
  double t1858;
  double t1910;
  double t1938;
  double t1943;
  double t1814;
  double t1883;
  double t1884;
  double t2310;
  double t2328;
  double t2379;
  double t2411;
  double t2335;
  double t2414;
  double t2620;
  double t2643;
  double t2646;
  double t2599;
  double t2416;
  double t2452;
  double t2453;
  double t2469;
  double t2830;
  double t2853;
  double t2249;
  double t2285;
  double t2428;
  double t2470;
  double t2478;
  double t3072;
  double t3092;
  double t3095;
  double t3107;
  double t1978;
  double t3193;
  double t3198;
  double t3238;
  double t3094;
  double t3116;
  double t3149;
  double t3774;
  double t3781;
  double t3784;
  double t3730;
  double t3732;
  double t3749;
  double t3767;
  double t3800;
  double t3953;
  double t3973;
  double t4025;
  double t3937;
  double t3824;
  double t3836;
  double t3840;
  double t3844;
  double t4255;
  double t4266;
  double t3641;
  double t3668;
  double t3670;
  double t3828;
  double t3878;
  double t3898;
  double t4563;
  double t4576;
  double t4461;
  double t4471;
  double t421;
  double t928;
  double t970;
  double t1027;
  double t1103;
  double t1115;
  double t1171;
  double t1192;
  double t1236;
  double t1415;
  double t1430;
  double t1463;
  double t1524;
  double t1668;
  double t1693;
  double t1733;
  double t1759;
  double t1894;
  double t1946;
  double t1965;
  double t2017;
  double t2038;
  double t2129;
  double t2155;
  double t2163;
  double t2169;
  double t2170;
  double t2195;
  double t2290;
  double t2502;
  double t2512;
  double t2615;
  double t2647;
  double t2651;
  double t2653;
  double t2654;
  double t2655;
  double t2710;
  double t2713;
  double t2722;
  double t2868;
  double t2939;
  double t2980;
  double t2987;
  double t3026;
  double t3159;
  double t3239;
  double t3269;
  double t3385;
  double t3392;
  double t3399;
  double t3404;
  double t3421;
  double t3468;
  double t3534;
  double t3543;
  double t3716;
  double t3905;
  double t3928;
  double t3942;
  double t4030;
  double t4103;
  double t4128;
  double t4137;
  double t4140;
  double t4211;
  double t4223;
  double t4225;
  double t4293;
  double t4345;
  double t4358;
  double t4365;
  double t4392;
  double t4522;
  double t4589;
  double t4626;
  double t4659;
  double t4663;
  double t4674;
  double t4683;
  double t4699;
  double t5315;
  double t5317;
  double t5324;
  double t5326;
  double t5329;
  double t5333;
  double t5334;
  double t5337;
  double t5344;
  double t5356;
  double t5357;
  double t5366;
  double t5368;
  double t5370;
  double t5382;
  double t5383;
  double t5385;
  double t5399;
  double t5401;
  double t5402;
  double t5406;
  double t5407;
  double t5392;
  double t5394;
  double t5418;
  double t5420;
  double t5422;
  double t5380;
  double t5386;
  double t5319;
  double t5323;
  double t5343;
  double t5376;
  double t5378;
  double t5426;
  double t5432;
  double t5433;
  double t5434;
  double t5437;
  double t5438;
  double t5439;
  double t5441;
  double t5443;
  double t5444;
  double t5423;
  double t5379;
  double t5387;
  double t5389;
  double t5395;
  double t5412;
  double t5414;
  double t5311;
  double t5440;
  double t5445;
  double t5446;
  double t5451;
  double t5452;
  double t5456;
  double t5546;
  double t5528;
  double t5530;
  double t5539;
  double t5484;
  double t5486;
  double t5487;
  double t5488;
  double t5492;
  double t5493;
  double t5495;
  double t5499;
  double t5276;
  double t5288;
  double t5289;
  double t5231;
  double t5234;
  double t5237;
  double t5611;
  double t5617;
  double t5622;
  double t5623;
  double t5244;
  double t5250;
  double t5254;
  double t5294;
  double t5295;
  double t5699;
  double t5701;
  double t5702;
  double t5706;
  double t5707;
  double t5708;
  double t5721;
  double t5725;
  double t5730;
  double t5704;
  double t5710;
  double t5717;
  double t5759;
  double t5760;
  double t5761;
  double t5763;
  double t5765;
  double t5767;
  double t5718;
  double t5735;
  double t5746;
  double t5762;
  double t5769;
  double t5770;
  double t5800;
  double t5804;
  double t5810;
  double t5858;
  double t5898;
  double t5899;
  double t5902;
  double t5903;
  double t5910;
  double t5911;
  double t5913;
  double t5917;
  double t5201;
  double t5202;
  double t5203;
  double t5210;
  double t5211;
  double t5214;
  double t6090;
  double t6091;
  double t6097;
  double t6098;
  double t6101;
  double t6105;
  double t6108;
  double t6109;
  double t5186;
  double t5198;
  double t5209;
  double t5219;
  double t5224;
  double t5228;
  double t5230;
  double t5243;
  double t5257;
  double t5259;
  double t5261;
  double t5265;
  double t5290;
  double t5296;
  double t5309;
  double t5391;
  double t5415;
  double t5466;
  double t5467;
  double t6250;
  double t6251;
  double t6252;
  double t5526;
  double t5543;
  double t6262;
  double t6263;
  double t6267;
  double t5571;
  double t5573;
  double t5748;
  double t5753;
  double t5832;
  double t5836;
  double t5861;
  double t5870;
  double t5884;
  double t5885;
  double t6347;
  double t6348;
  double t6349;
  double t5938;
  double t5941;
  double t6356;
  double t6364;
  double t6365;
  double t5956;
  double t5957;
  double t6025;
  double t6027;
  double t6042;
  double t6043;
  double t6062;
  double t6063;
  double t6074;
  double t6075;
  double t6446;
  double t6447;
  double t6451;
  double t6114;
  double t6115;
  double t6464;
  double t6465;
  double t6468;
  double t6131;
  double t6132;
  double t6209;
  double t6210;
  double t6226;
  double t6228;
  double t6317;
  double t6318;
  double t6335;
  double t6411;
  double t6414;
  double t6427;
  double t6526;
  double t6529;
  double t6513;
  double t6518;
  double t6760;
  double t6752;
  double t6788;
  double t6880;
  t308 = Sin(var1[14]);
  t123 = Cos(var1[14]);
  t160 = -1.*t123;
  t263 = 1. + t160;
  t627 = Sin(var1[13]);
  t490 = -0.9890740084840001*t263;
  t493 = 1. + t490;
  t522 = 0.703234*t493;
  t534 = -0.007683655156165408*t263;
  t540 = -0.994522*t308;
  t541 = 0. + t540;
  t550 = 0.707107*t541;
  t562 = t522 + t534 + t550;
  t475 = Cos(var1[13]);
  t628 = -0.010926102783999999*t263;
  t636 = 1. + t628;
  t662 = -0.073913*t636;
  t697 = 0.07310496868062215*t263;
  t727 = 0.104528*t308;
  t728 = 0. + t727;
  t733 = 0.707107*t728;
  t735 = t662 + t697 + t733;
  t442 = Cos(var1[5]);
  t578 = t475*t562;
  t757 = -1.*t627*t735;
  t903 = Sin(var1[5]);
  t86 = Cos(var1[3]);
  t419 = Sin(var1[4]);
  t1069 = -1.*t627*t562;
  t1084 = -1.*t475*t735;
  t1100 = t1069 + t1084;
  t1012 = t578 + t757;
  t992 = Sin(var1[3]);
  t812 = 0. + t578 + t757;
  t834 = t627*t562;
  t863 = t475*t735;
  t867 = 0. + t834 + t863;
  t1515 = t442*t867;
  t1521 = -1.*t812*t903;
  t426 = Cos(var1[4]);
  t289 = -1.0000001112680001*t263;
  t293 = 1. + t289;
  t301 = 0.707107*t293;
  t377 = -0.104528*t308;
  t381 = 0. + t377;
  t389 = -0.073913*t381;
  t396 = 0.994522*t308;
  t408 = 0. + t396;
  t412 = 0.703234*t408;
  t418 = 0. + t301 + t389 + t412;
  t830 = t442*t812;
  t909 = t867*t903;
  t919 = 0. + t830 + t909;
  t1800 = -0.7032334678540001*t123;
  t1803 = -0.7032341264384028*t308;
  t1810 = t1800 + t1803;
  t1823 = 0.07391248049600001*t123;
  t1839 = 0.07391254971569594*t308;
  t1858 = t1823 + t1839;
  t1910 = t475*t1810;
  t1938 = -1.*t627*t1858;
  t1943 = t1910 + t1938;
  t1814 = t627*t1810;
  t1883 = t475*t1858;
  t1884 = t1814 + t1883;
  t2310 = -0.707107*t541;
  t2328 = t522 + t534 + t2310;
  t2379 = -0.707107*t728;
  t2411 = t662 + t697 + t2379;
  t2335 = t475*t2328;
  t2414 = -1.*t627*t2411;
  t2620 = -1.*t627*t2328;
  t2643 = -1.*t475*t2411;
  t2646 = t2620 + t2643;
  t2599 = t2335 + t2414;
  t2416 = 0. + t2335 + t2414;
  t2452 = t627*t2328;
  t2453 = t475*t2411;
  t2469 = 0. + t2452 + t2453;
  t2830 = t442*t2469;
  t2853 = -1.*t2416*t903;
  t2249 = -0.707107*t293;
  t2285 = 0. + t2249 + t389 + t412;
  t2428 = t442*t2416;
  t2470 = t2469*t903;
  t2478 = 0. + t2428 + t2470;
  t3072 = 0.7032334678540001*t123;
  t3092 = t3072 + t1803;
  t3095 = -0.07391248049600001*t123;
  t3107 = t3095 + t1839;
  t1978 = 0.707107662212*t123;
  t3193 = t475*t3092;
  t3198 = -1.*t627*t3107;
  t3238 = t3193 + t3198;
  t3094 = t627*t3092;
  t3116 = t475*t3107;
  t3149 = t3094 + t3116;
  t3774 = -0.994522*t636;
  t3781 = -0.010866249592949247*t263;
  t3784 = t3774 + t3781;
  t3730 = -0.104528*t493;
  t3732 = -0.10338592795881554*t263;
  t3749 = t3730 + t3732;
  t3767 = t475*t3749;
  t3800 = -1.*t3784*t627;
  t3953 = -1.*t475*t3784;
  t3973 = -1.*t3749*t627;
  t4025 = t3953 + t3973;
  t3937 = t3767 + t3800;
  t3824 = 0. + t3767 + t3800;
  t3836 = t475*t3784;
  t3840 = t3749*t627;
  t3844 = 0. + t3836 + t3840;
  t4255 = t442*t3844;
  t4266 = -1.*t3824*t903;
  t3641 = -0.994522*t381;
  t3668 = -0.104528*t408;
  t3670 = 0. + t3641 + t3668;
  t3828 = t442*t3824;
  t3878 = t3844*t903;
  t3898 = 0. + t3828 + t3878;
  t4563 = 1.3877787807814457e-17*t475*t308;
  t4576 = 0. + t4563;
  t4461 = 1.3877787807814457e-17*t627*t308;
  t4471 = 0. + t4461;
  t421 = -1.*t418*t419;
  t928 = t426*t919;
  t970 = t421 + t928;
  t1027 = t442*t1012;
  t1103 = -1.*t1100*t903;
  t1115 = t1027 + t1103;
  t1171 = t442*t1100;
  t1192 = t1012*t903;
  t1236 = t1171 + t1192;
  t1415 = -1.*t442*t812;
  t1430 = -1.*t867*t903;
  t1463 = t1415 + t1430;
  t1524 = t1515 + t1521;
  t1668 = 0. + t1515 + t1521;
  t1693 = t426*t418;
  t1733 = t419*t919;
  t1759 = 0. + t1693 + t1733;
  t1894 = t442*t1884;
  t1946 = -1.*t1943*t903;
  t1965 = t1894 + t1946;
  t2017 = -0.7071070786783819*t308;
  t2038 = t1978 + t2017;
  t2129 = t426*t2038;
  t2155 = t442*t1943;
  t2163 = t1884*t903;
  t2169 = t2155 + t2163;
  t2170 = t419*t2169;
  t2195 = t2129 + t2170;
  t2290 = -1.*t2285*t419;
  t2502 = t426*t2478;
  t2512 = t2290 + t2502;
  t2615 = t442*t2599;
  t2647 = -1.*t2646*t903;
  t2651 = t2615 + t2647;
  t2653 = t442*t2646;
  t2654 = t2599*t903;
  t2655 = t2653 + t2654;
  t2710 = -1.*t442*t2416;
  t2713 = -1.*t2469*t903;
  t2722 = t2710 + t2713;
  t2868 = t2830 + t2853;
  t2939 = 0. + t2830 + t2853;
  t2980 = t426*t2285;
  t2987 = t419*t2478;
  t3026 = 0. + t2980 + t2987;
  t3159 = t442*t3149;
  t3239 = -1.*t3238*t903;
  t3269 = t3159 + t3239;
  t3385 = 0.7071070786783819*t308;
  t3392 = t1978 + t3385;
  t3399 = t426*t3392;
  t3404 = t442*t3238;
  t3421 = t3149*t903;
  t3468 = t3404 + t3421;
  t3534 = t419*t3468;
  t3543 = t3399 + t3534;
  t3716 = -1.*t3670*t419;
  t3905 = t426*t3898;
  t3928 = t3716 + t3905;
  t3942 = t442*t3937;
  t4030 = -1.*t4025*t903;
  t4103 = t3942 + t4030;
  t4128 = t442*t4025;
  t4137 = t3937*t903;
  t4140 = t4128 + t4137;
  t4211 = -1.*t442*t3824;
  t4223 = -1.*t3844*t903;
  t4225 = t4211 + t4223;
  t4293 = t4255 + t4266;
  t4345 = 0. + t4255 + t4266;
  t4358 = t426*t3670;
  t4365 = t419*t3898;
  t4392 = 0. + t4358 + t4365;
  t4522 = t442*t4471;
  t4589 = -1.*t4576*t903;
  t4626 = t4522 + t4589;
  t4659 = t442*t4576;
  t4663 = t4471*t903;
  t4674 = t4659 + t4663;
  t4683 = t419*t4674;
  t4699 = 0. + t4683;
  t5315 = -1.*t475;
  t5317 = 1. + t5315;
  t5324 = 1.1345904784751044e-7*var1[14];
  t5326 = 0.108558*t636;
  t5329 = 0.0011861143593705353*t263;
  t5333 = -0.05650052807*t381;
  t5334 = -0.0565*t728;
  t5337 = t5324 + t5326 + t5329 + t5333 + t5334;
  t5344 = 1.1924972351948546e-8*var1[14];
  t5356 = 0.398799*t493;
  t5357 = 0.39444173984434006*t263;
  t5366 = -0.0565*t541;
  t5368 = -0.05650052807*t408;
  t5370 = t5344 + t5356 + t5357 + t5366 + t5368;
  t5382 = 0.12*t627;
  t5383 = -1.*t627*t5337;
  t5385 = t475*t5370;
  t5399 = 0.12*t475;
  t5401 = 0.4*t627;
  t5402 = -1.*t475*t5337;
  t5406 = -1.*t627*t5370;
  t5407 = t5399 + t5401 + t5402 + t5406;
  t5392 = -0.4*t475;
  t5394 = t5392 + t5382 + t5383 + t5385;
  t5418 = t442*t5407;
  t5420 = t5394*t903;
  t5422 = t5418 + t5420;
  t5380 = 0.4*t5317;
  t5386 = 0. + t5380 + t5382 + t5383 + t5385;
  t5319 = 0.12*t5317;
  t5323 = -0.4*t627;
  t5343 = t475*t5337;
  t5376 = t627*t5370;
  t5378 = 0. + t5319 + t5323 + t5343 + t5376;
  t5426 = -0.0565*t293;
  t5432 = -0.056500534356700764*t263;
  t5433 = 0.38315650737400003*t541;
  t5434 = 0.108558*t381;
  t5437 = -0.040271188976*t728;
  t5438 = 0.398799*t408;
  t5439 = 0. + t5426 + t5432 + t5433 + t5434 + t5437 + t5438;
  t5441 = t442*t5386;
  t5443 = t5378*t903;
  t5444 = 0. + t5441 + t5443;
  t5423 = 0. + t3716 + t3905;
  t5379 = t442*t5378;
  t5387 = -1.*t5386*t903;
  t5389 = 0. + t5379 + t5387;
  t5395 = t442*t5394;
  t5412 = -1.*t5407*t903;
  t5414 = t5395 + t5412;
  t5311 = 0. + t2290 + t2502;
  t5440 = -1.*t5439*t419;
  t5445 = t426*t5444;
  t5446 = 0. + t5440 + t5445;
  t5451 = t426*t5439;
  t5452 = t419*t5444;
  t5456 = 0. + t5451 + t5452;
  t5546 = t5379 + t5387;
  t5528 = -1.*t442*t5386;
  t5530 = -1.*t5378*t903;
  t5539 = t5528 + t5530;
  t5484 = t4345*t5389;
  t5486 = t5423*t5446;
  t5487 = t4392*t5456;
  t5488 = t5484 + t5486 + t5487;
  t5492 = -1.*t2939*t5389;
  t5493 = -1.*t5311*t5446;
  t5495 = -1.*t3026*t5456;
  t5499 = t5492 + t5493 + t5495;
  t5276 = -1.*t426*t3670;
  t5288 = -1.*t419*t3898;
  t5289 = t5276 + t5288;
  t5231 = -1.*t426*t2285;
  t5234 = -1.*t419*t2478;
  t5237 = t5231 + t5234;
  t5611 = t5440 + t5445;
  t5617 = -1.*t426*t5439;
  t5622 = -1.*t419*t5444;
  t5623 = t5617 + t5622;
  t5244 = -1.*t3392*t419;
  t5250 = t426*t3468;
  t5254 = t5244 + t5250;
  t5294 = t426*t4674;
  t5295 = 0. + t5294;
  t5699 = 5.51981009597885e-8*t123;
  t5701 = -1.5066549364454312e-9*t308;
  t5702 = 1.1345904784751044e-7 + t5699 + t5701;
  t5706 = -5.25177232542362e-7*t123;
  t5707 = 1.4334929299142374e-8*t308;
  t5708 = 1.1924972351948546e-8 + t5706 + t5707;
  t5721 = -1.*t627*t5702;
  t5725 = t475*t5708;
  t5730 = t5721 + t5725;
  t5704 = t475*t5702;
  t5710 = t627*t5708;
  t5717 = t5704 + t5710;
  t5759 = -1.441388858269832e-8*t123;
  t5760 = -5.280700587570464e-7*t308;
  t5761 = t5759 + t5760;
  t5763 = t442*t5730;
  t5765 = t5717*t903;
  t5767 = t5763 + t5765;
  t5718 = t442*t5717;
  t5735 = -1.*t5730*t903;
  t5746 = t5718 + t5735;
  t5762 = -1.*t5761*t419;
  t5769 = t426*t5767;
  t5770 = t5762 + t5769;
  t5800 = t426*t5761;
  t5804 = t419*t5767;
  t5810 = t5800 + t5804;
  t5858 = 0. + t421 + t928;
  t5898 = -1.*t4345*t5389;
  t5899 = -1.*t5423*t5446;
  t5902 = -1.*t4392*t5456;
  t5903 = t5898 + t5899 + t5902;
  t5910 = t1668*t5389;
  t5911 = t5858*t5446;
  t5913 = t1759*t5456;
  t5917 = t5910 + t5911 + t5913;
  t5201 = -1.*t426*t418;
  t5202 = -1.*t419*t919;
  t5203 = t5201 + t5202;
  t5210 = -1.*t2038*t419;
  t5211 = t426*t2169;
  t5214 = t5210 + t5211;
  t6090 = t2939*t5389;
  t6091 = t5311*t5446;
  t6097 = t3026*t5456;
  t6098 = t6090 + t6091 + t6097;
  t6101 = -1.*t1668*t5389;
  t6105 = -1.*t5858*t5446;
  t6108 = -1.*t1759*t5456;
  t6109 = t6101 + t6105 + t6108;
  t5186 = var2[13]*t426*t1236;
  t5198 = var2[5]*t426*t1524;
  t5209 = var2[4]*t5203;
  t5219 = var2[14]*t5214;
  t5224 = t5186 + t5198 + t5209 + t5219;
  t5228 = var2[13]*t426*t2655;
  t5230 = var2[5]*t426*t2868;
  t5243 = var2[4]*t5237;
  t5257 = var2[14]*t5254;
  t5259 = t5228 + t5230 + t5243 + t5257;
  t5261 = var2[13]*t426*t4140;
  t5265 = var2[5]*t426*t4293;
  t5290 = var2[4]*t5289;
  t5296 = var2[14]*t5295;
  t5309 = t5261 + t5265 + t5290 + t5296;
  t5391 = t4103*t5389;
  t5415 = t4345*t5414;
  t5466 = -1.*t2651*t5389;
  t5467 = -1.*t2939*t5414;
  t6250 = t3670*t5439;
  t6251 = t3898*t5444;
  t6252 = t6250 + t5484 + t6251;
  t5526 = t4225*t5389;
  t5543 = t4345*t5539;
  t6262 = -1.*t5439*t2285;
  t6263 = -1.*t2478*t5444;
  t6267 = t6262 + t5492 + t6263;
  t5571 = -1.*t2722*t5389;
  t5573 = -1.*t2939*t5539;
  t5748 = -1.*t2939*t5746;
  t5753 = -1.*t5389*t3269;
  t5832 = t4345*t5746;
  t5836 = t5389*t4626;
  t5861 = -1.*t4103*t5389;
  t5870 = -1.*t4345*t5414;
  t5884 = t1115*t5389;
  t5885 = t1668*t5414;
  t6347 = -1.*t3670*t5439;
  t6348 = -1.*t3898*t5444;
  t6349 = t6347 + t5898 + t6348;
  t5938 = -1.*t4225*t5389;
  t5941 = -1.*t4345*t5539;
  t6356 = t5439*t418;
  t6364 = t919*t5444;
  t6365 = t6356 + t5910 + t6364;
  t5956 = t1463*t5389;
  t5957 = t1668*t5539;
  t6025 = t1668*t5746;
  t6027 = t5389*t1965;
  t6042 = -1.*t4345*t5746;
  t6043 = -1.*t5389*t4626;
  t6062 = t2651*t5389;
  t6063 = t2939*t5414;
  t6074 = -1.*t1115*t5389;
  t6075 = -1.*t1668*t5414;
  t6446 = t5439*t2285;
  t6447 = t2478*t5444;
  t6451 = t6446 + t6090 + t6447;
  t6114 = t2722*t5389;
  t6115 = t2939*t5539;
  t6464 = -1.*t5439*t418;
  t6465 = -1.*t919*t5444;
  t6468 = t6464 + t6101 + t6465;
  t6131 = -1.*t1463*t5389;
  t6132 = -1.*t1668*t5539;
  t6209 = t2939*t5746;
  t6210 = t5389*t3269;
  t6226 = -1.*t1668*t5746;
  t6228 = -1.*t5389*t1965;
  t6317 = -1.*t2285*t5761;
  t6318 = -1.*t5439*t3392;
  t6335 = t3670*t5761;
  t6411 = t5439*t2038;
  t6414 = t418*t5761;
  t6427 = -1.*t3670*t5761;
  t6526 = -1.*t5439*t2038;
  t6529 = -1.*t418*t5761;
  t6513 = t2285*t5761;
  t6518 = t5439*t3392;
  t6760 = t3641 + t3668;
  t6752 = t2249 + t389 + t412;
  t6788 = t301 + t389 + t412;
  t6880 = -0.707107662212*t123;
  p_output1[0]=(-1.*t1668*t86 - 1.*t1759*t992)*var2[3] + t86*t970*var2[4] + (t1524*t419*t86 - 1.*t1463*t992)*var2[5] + (t1236*t419*t86 - 1.*t1115*t992)*var2[13] + (t2195*t86 - 1.*t1965*t992)*var2[14];
  p_output1[1]=(-1.*t2939*t86 - 1.*t3026*t992)*var2[3] + t2512*t86*var2[4] + (t2868*t419*t86 - 1.*t2722*t992)*var2[5] + (t2655*t419*t86 - 1.*t2651*t992)*var2[13] + (t3543*t86 - 1.*t3269*t992)*var2[14];
  p_output1[2]=(-1.*t4345*t86 - 1.*t4392*t992)*var2[3] + t3928*t86*var2[4] + (t419*t4293*t86 - 1.*t4225*t992)*var2[5] + (t4140*t419*t86 - 1.*t4103*t992)*var2[13] + (t4699*t86 - 1.*t4626*t992)*var2[14];
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=(t1759*t86 - 1.*t1668*t992)*var2[3] + t970*t992*var2[4] + (t1463*t86 + t1524*t419*t992)*var2[5] + (t1115*t86 + t1236*t419*t992)*var2[13] + (t1965*t86 + t2195*t992)*var2[14];
  p_output1[7]=(t3026*t86 - 1.*t2939*t992)*var2[3] + t2512*t992*var2[4] + (t2722*t86 + t2868*t419*t992)*var2[5] + (t2651*t86 + t2655*t419*t992)*var2[13] + (t3269*t86 + t3543*t992)*var2[14];
  p_output1[8]=(t4392*t86 - 1.*t4345*t992)*var2[3] + t3928*t992*var2[4] + (t4225*t86 + t419*t4293*t992)*var2[5] + (t4103*t86 + t4140*t419*t992)*var2[13] + (t4626*t86 + t4699*t992)*var2[14];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t5224;
  p_output1[13]=t5259;
  p_output1[14]=t5309;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(t5237*t5488 + t5289*t5499 + t5423*(-1.*t5237*t5446 - 1.*t2512*t5456 - 1.*t3026*t5611 - 1.*t5311*t5623) + t5311*(t5289*t5446 + t3928*t5456 + t4392*t5611 + t5423*t5623))*var2[4] + (t2868*t426*t5488 + t426*t4293*t5499 + t5311*(t426*t4293*t5446 + t419*t4293*t5456 + t5526 + t5543 + t419*t4392*t5546 + t426*t5423*t5546) + t5423*(-1.*t2868*t426*t5446 - 1.*t2868*t419*t5456 - 1.*t3026*t419*t5546 - 1.*t426*t5311*t5546 + t5571 + t5573))*var2[5] + (t5311*(t5391 + t5415 + t419*t4392*t5422 + t426*t5422*t5423 + t4140*t426*t5446 + t4140*t419*t5456) + t5423*(-1.*t3026*t419*t5422 - 1.*t426*t5311*t5422 - 1.*t2655*t426*t5446 - 1.*t2655*t419*t5456 + t5466 + t5467) + t2655*t426*t5488 + t4140*t426*t5499)*var2[13] + (t5254*t5488 + t5295*t5499 + t5423*(-1.*t5254*t5446 - 1.*t3543*t5456 + t5748 + t5753 - 1.*t5311*t5770 - 1.*t3026*t5810) + t5311*(t5295*t5446 + t4699*t5456 + t5423*t5770 + t4392*t5810 + t5832 + t5836))*var2[14];
  p_output1[19]=((-1.*t5289*t5446 - 1.*t3928*t5456 - 1.*t4392*t5611 - 1.*t5423*t5623)*t5858 + t5203*t5903 + t5289*t5917 + t5423*(t5203*t5446 + t1759*t5611 + t5623*t5858 + t5456*t970))*var2[4] + (t1524*t426*t5903 + t426*t4293*t5917 + t5858*(-1.*t426*t4293*t5446 - 1.*t419*t4293*t5456 - 1.*t419*t4392*t5546 - 1.*t426*t5423*t5546 + t5938 + t5941) + t5423*(t1524*t426*t5446 + t1524*t419*t5456 + t1759*t419*t5546 + t426*t5546*t5858 + t5956 + t5957))*var2[5] + (t5858*(-1.*t419*t4392*t5422 - 1.*t426*t5422*t5423 - 1.*t4140*t426*t5446 - 1.*t4140*t419*t5456 + t5861 + t5870) + t5423*(t1759*t419*t5422 + t1236*t426*t5446 + t1236*t419*t5456 + t426*t5422*t5858 + t5884 + t5885) + t1236*t426*t5903 + t4140*t426*t5917)*var2[13] + (t5214*t5903 + t5295*t5917 + t5423*(t5214*t5446 + t2195*t5456 + t1759*t5810 + t5770*t5858 + t6025 + t6027) + t5858*(-1.*t5295*t5446 - 1.*t4699*t5456 - 1.*t5423*t5770 - 1.*t4392*t5810 + t6042 + t6043))*var2[14];
  p_output1[20]=((t5237*t5446 + t2512*t5456 + t3026*t5611 + t5311*t5623)*t5858 + t5203*t6098 + t5237*t6109 + t5311*(-1.*t5203*t5446 - 1.*t1759*t5611 - 1.*t5623*t5858 - 1.*t5456*t970))*var2[4] + (t1524*t426*t6098 + t2868*t426*t6109 + t5858*(t2868*t426*t5446 + t2868*t419*t5456 + t3026*t419*t5546 + t426*t5311*t5546 + t6114 + t6115) + t5311*(-1.*t1524*t426*t5446 - 1.*t1524*t419*t5456 - 1.*t1759*t419*t5546 - 1.*t426*t5546*t5858 + t6131 + t6132))*var2[5] + (t5858*(t3026*t419*t5422 + t426*t5311*t5422 + t2655*t426*t5446 + t2655*t419*t5456 + t6062 + t6063) + t5311*(-1.*t1759*t419*t5422 - 1.*t1236*t426*t5446 - 1.*t1236*t419*t5456 - 1.*t426*t5422*t5858 + t6074 + t6075) + t1236*t426*t6098 + t2655*t426*t6109)*var2[13] + (t5214*t6098 + t5254*t6109 + t5858*(t5254*t5446 + t3543*t5456 + t5311*t5770 + t3026*t5810 + t6209 + t6210) + t5311*(-1.*t5214*t5446 - 1.*t2195*t5456 - 1.*t1759*t5810 - 1.*t5770*t5858 + t6226 + t6228))*var2[14];
  p_output1[21]=t5224;
  p_output1[22]=t5259;
  p_output1[23]=t5309;
  p_output1[24]=(t2939*(t4293*t5444 + t5526 + t5543 + t3898*t5546) + t4345*(-1.*t2868*t5444 - 1.*t2478*t5546 + t5571 + t5573) + t2722*t6252 + t4225*t6267)*var2[5] + (t2939*(t5391 + t5415 + t3898*t5422 + t4140*t5444) + t4345*(-1.*t2478*t5422 - 1.*t2655*t5444 + t5466 + t5467) + t2651*t6252 + t4103*t6267)*var2[13] + (t3269*t6252 + t4626*t6267 + t4345*(-1.*t3468*t5444 + t5748 + t5753 - 1.*t2478*t5767 + t6317 + t6318) + t2939*(0. + t4674*t5444 + t3898*t5767 + t5832 + t5836 + t6335))*var2[14];
  p_output1[25]=(t1668*(-1.*t4293*t5444 - 1.*t3898*t5546 + t5938 + t5941) + t1463*t6349 + t4225*t6365 + t4345*(t1524*t5444 + t5956 + t5957 + t5546*t919))*var2[5] + (t1668*(-1.*t3898*t5422 - 1.*t4140*t5444 + t5861 + t5870) + t1115*t6349 + t4103*t6365 + t4345*(t1236*t5444 + t5884 + t5885 + t5422*t919))*var2[13] + (t1965*t6349 + t4626*t6365 + t1668*(0. - 1.*t4674*t5444 - 1.*t3898*t5767 + t6042 + t6043 + t6427) + t4345*(t2169*t5444 + t6025 + t6027 + t6411 + t6414 + t5767*t919))*var2[14];
  p_output1[26]=(t1668*(t2868*t5444 + t2478*t5546 + t6114 + t6115) + t1463*t6451 + t2722*t6468 + t2939*(-1.*t1524*t5444 + t6131 + t6132 - 1.*t5546*t919))*var2[5] + (t1668*(t2478*t5422 + t2655*t5444 + t6062 + t6063) + t1115*t6451 + t2651*t6468 + t2939*(-1.*t1236*t5444 + t6074 + t6075 - 1.*t5422*t919))*var2[13] + (t1965*t6451 + t3269*t6468 + t1668*(t3468*t5444 + t2478*t5767 + t6209 + t6210 + t6513 + t6518) + t2939*(-1.*t2169*t5444 + t6226 + t6228 + t6526 + t6529 - 1.*t5767*t919))*var2[14];
  p_output1[27]=t1463*var2[5] + t1115*var2[13] + t1965*var2[14];
  p_output1[28]=t2722*var2[5] + t2651*var2[13] + t3269*var2[14];
  p_output1[29]=t4225*var2[5] + t4103*var2[13] + t4626*var2[14];
  p_output1[30]=(t3670*(-1.*t2599*t5378 - 1.*t2646*t5386 - 1.*t2469*t5394 - 1.*t2416*t5407) + t2285*(t3937*t5378 + t4025*t5386 + t3844*t5394 + t3824*t5407))*var2[13] + (0. + t3392*(t3844*t5378 + t3824*t5386 + t6250) + t3670*(-1.*t3149*t5378 - 1.*t3238*t5386 - 1.*t2469*t5717 - 1.*t2416*t5730 + t6317 + t6318) + t2285*(0. + t4471*t5378 + t4576*t5386 + t3844*t5717 + t3824*t5730 + t6335))*var2[14];
  p_output1[31]=(t418*(-1.*t3937*t5378 - 1.*t4025*t5386 - 1.*t3844*t5394 - 1.*t3824*t5407) + t3670*(t1012*t5378 + t1100*t5386 + t5407*t812 + t5394*t867))*var2[13] + (0. + t2038*(-1.*t3844*t5378 - 1.*t3824*t5386 + t6347) + t418*(0. - 1.*t4471*t5378 - 1.*t4576*t5386 - 1.*t3844*t5717 - 1.*t3824*t5730 + t6427) + t3670*(t1884*t5378 + t1943*t5386 + t6411 + t6414 + t5730*t812 + t5717*t867))*var2[14];
  p_output1[32]=(t418*(t2599*t5378 + t2646*t5386 + t2469*t5394 + t2416*t5407) + t2285*(-1.*t1012*t5378 - 1.*t1100*t5386 - 1.*t5407*t812 - 1.*t5394*t867))*var2[13] + (t2038*(t2469*t5378 + t2416*t5386 + t6446) + t418*(t3149*t5378 + t3238*t5386 + t2469*t5717 + t2416*t5730 + t6513 + t6518) + t3392*(t6464 - 1.*t5386*t812 - 1.*t5378*t867) + t2285*(-1.*t1884*t5378 - 1.*t1943*t5386 + t6526 + t6529 - 1.*t5730*t812 - 1.*t5717*t867))*var2[14];
  p_output1[33]=t2038*var2[14];
  p_output1[34]=t3392*var2[14];
  p_output1[35]=0.;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=(0. + 0.12*t1810 - 0.4*t1858 - 1.*(-1.*t3107*t5337 - 1.*t3092*t5370 - 1.*t2411*t5702 - 1.*t2328*t5708 + t6318 - 1.*t5761*t6752)*t6760 - 1.*t3392*(t3784*t5337 + t3749*t5370 + t5439*t6760) - 1.*t6752*(0. + 1.3877787807814457e-17*t308*t5370 + t3784*t5702 + t3749*t5708 + t5761*t6760))*var2[14];
  p_output1[79]=(0. + 0.12*t3092 - 0.4*t3107 - 1.*t2038*(-1.*t3784*t5337 - 1.*t3749*t5370 - 1.*t5439*t6760) - 1.*(0. - 1.3877787807814457e-17*t308*t5370 - 1.*t3784*t5702 - 1.*t3749*t5708 - 1.*t5761*t6760)*t6788 - 1.*t6760*(t1858*t5337 + t1810*t5370 + t562*t5708 + t6411 + t5761*t6788 + t5702*t735))*var2[14];
  p_output1[80]=(0. + 1.6653345369377347e-18*t308 - 1.*t2038*(t2411*t5337 + t2328*t5370 + t5439*t6752) - 1.*(t3107*t5337 + t3092*t5370 + t2411*t5702 + t2328*t5708 + t6518 + t5761*t6752)*t6788 - 1.*t3392*(-1.*t5370*t562 - 1.*t5439*t6788 - 1.*t5337*t735) - 1.*t6752*(-1.*t1858*t5337 - 1.*t1810*t5370 - 1.*t562*t5708 + t6526 - 1.*t5761*t6788 - 1.*t5702*t735))*var2[14];
  p_output1[81]=(t3385 + t6880)*var2[14];
  p_output1[82]=(t2017 + t6880)*var2[14];
  p_output1[83]=0.;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void dJb_shoulder_pitch_joint_left_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
