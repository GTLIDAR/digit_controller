/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:08:35 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_left_shoulder_yaw_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t363;
  double t646;
  double t692;
  double t703;
  double t712;
  double t818;
  double t1066;
  double t965;
  double t969;
  double t1619;
  double t283;
  double t290;
  double t327;
  double t1038;
  double t1662;
  double t1795;
  double t2068;
  double t2092;
  double t2185;
  double t3868;
  double t3887;
  double t3913;
  double t3956;
  double t228;
  double t3230;
  double t3238;
  double t2943;
  double t3063;
  double t3079;
  double t3448;
  double t3550;
  double t3632;
  double t3920;
  double t2576;
  double t2729;
  double t4710;
  double t4222;
  double t438;
  double t563;
  double t399;
  double t415;
  double t5321;
  double t4416;
  double t4458;
  double t4464;
  double t4486;
  double t4512;
  double t4527;
  double t5216;
  double t4957;
  double t4958;
  double t4969;
  double t4992;
  double t5001;
  double t5045;
  double t5342;
  double t5346;
  double t5367;
  double t5478;
  double t5481;
  double t5491;
  double t4201;
  double t5602;
  double t4305;
  double t6176;
  double t4863;
  double t5668;
  double t4808;
  double t358;
  double t433;
  double t589;
  double t593;
  double t772;
  double t824;
  double t841;
  double t1806;
  double t1846;
  double t1897;
  double t2238;
  double t2324;
  double t2877;
  double t2914;
  double t6382;
  double t6397;
  double t6401;
  double t6411;
  double t6416;
  double t6421;
  double t3181;
  double t3204;
  double t3247;
  double t3389;
  double t3772;
  double t3916;
  double t4208;
  double t4209;
  double t4318;
  double t4332;
  double t4407;
  double t6459;
  double t6466;
  double t6468;
  double t6473;
  double t6476;
  double t6507;
  double t4574;
  double t4618;
  double t4844;
  double t4856;
  double t4877;
  double t4931;
  double t4947;
  double t5135;
  double t5170;
  double t5276;
  double t5284;
  double t5331;
  double t5334;
  double t5335;
  double t5649;
  double t6509;
  double t6513;
  double t6515;
  double t6521;
  double t5684;
  double t6539;
  double t6540;
  double t6552;
  double t6554;
  double t5931;
  double t5933;
  double t6565;
  double t6569;
  double t6575;
  double t6582;
  double t6050;
  double t6066;
  double t6178;
  double t6211;
  double t6265;
  double t6301;
  double t6304;
  double t6324;
  double t6709;
  double t6710;
  double t6712;
  double t6714;
  double t6720;
  double t6735;
  double t6741;
  double t6743;
  double t6769;
  double t6770;
  double t6773;
  double t6786;
  double t6788;
  double t6790;
  double t6795;
  double t6796;
  double t6799;
  double t6801;
  double t6853;
  double t6854;
  double t6855;
  double t6861;
  double t6863;
  double t6865;
  double t6871;
  double t6873;
  double t6874;
  double t6875;
  double t6887;
  double t6896;
  double t6897;
  double t6902;
  double t6907;
  double t6909;
  double t6911;
  double t6918;
  double t7006;
  double t7008;
  double t7009;
  double t7030;
  double t7034;
  double t7039;
  double t7046;
  double t7049;
  double t7050;
  double t7051;
  double t7055;
  double t7057;
  double t7063;
  double t7064;
  double t7073;
  double t7074;
  double t7076;
  double t7077;
  double t7152;
  double t7154;
  double t7155;
  double t7158;
  double t7162;
  double t7163;
  double t7168;
  double t7174;
  double t7178;
  double t7179;
  double t7180;
  double t7183;
  double t7185;
  double t7186;
  double t7188;
  double t7190;
  double t7194;
  double t7240;
  double t7241;
  double t7243;
  double t7249;
  double t7251;
  double t7256;
  double t7257;
  double t7258;
  double t7260;
  double t7261;
  double t7262;
  double t7264;
  double t7265;
  double t7266;
  double t7273;
  double t7275;
  double t7276;
  double t7325;
  double t7326;
  double t7327;
  double t7334;
  double t7337;
  double t7338;
  double t7342;
  double t7343;
  double t7357;
  double t7359;
  double t7360;
  double t7361;
  double t7363;
  double t7364;
  double t7365;
  double t7415;
  double t7416;
  double t7419;
  double t7424;
  double t7425;
  double t7428;
  double t7431;
  double t7432;
  double t7434;
  double t7436;
  double t7437;
  double t7405;
  double t7406;
  double t7407;
  double t7410;
  double t7411;
  double t7478;
  double t7480;
  double t7481;
  double t7483;
  double t7491;
  double t7493;
  double t7500;
  double t7502;
  double t7503;
  double t7508;
  double t7509;
  double t7512;
  double t7514;
  double t7515;
  double t7517;
  double t7520;
  double t7526;
  double t7528;
  double t7567;
  double t7568;
  double t7574;
  double t7578;
  double t7579;
  double t7580;
  double t7582;
  double t7585;
  double t7586;
  double t7590;
  double t7591;
  double t7592;
  double t7594;
  double t7595;
  double t7596;
  double t7633;
  double t7634;
  double t7636;
  double t7637;
  double t7640;
  double t7642;
  double t7643;
  double t7644;
  double t7646;
  double t7647;
  double t7648;
  double t7649;
  double t7621;
  double t7622;
  double t7623;
  double t7625;
  double t7626;
  double t7627;
  double t7629;
  double t7630;
  double t7631;
  double t7673;
  double t7674;
  double t7676;
  double t7677;
  double t7678;
  double t7679;
  double t7681;
  double t7682;
  double t7683;
  double t7684;
  double t7686;
  double t7689;
  double t7690;
  double t7691;
  double t7713;
  double t7714;
  double t7715;
  double t7716;
  double t7718;
  double t7719;
  double t7720;
  double t7721;
  double t7723;
  double t7724;
  double t7725;
  double t7726;
  double t7748;
  double t7761;
  double t7752;
  double t7747;
  double t7751;
  double t7764;
  double t7782;
  double t7760;
  double t7774;
  double t7785;
  double t7770;
  double t7793;
  double t7749;
  double t7750;
  double t7753;
  double t7755;
  double t7756;
  double t7757;
  double t7762;
  double t7763;
  double t7765;
  double t7766;
  double t7767;
  double t7768;
  double t7772;
  double t7773;
  double t7775;
  double t7776;
  double t7777;
  double t7778;
  double t7806;
  double t7807;
  double t7808;
  double t7783;
  double t7811;
  double t7812;
  double t7814;
  double t7815;
  double t7786;
  double t7818;
  double t7819;
  double t7820;
  double t7821;
  double t7790;
  double t7794;
  double t7798;
  double t7800;
  double t7844;
  double t7845;
  double t7846;
  double t7848;
  double t7849;
  double t7852;
  double t7854;
  double t7855;
  double t7856;
  double t7857;
  t363 = Sin(var1[14]);
  t646 = Sin(var1[3]);
  t692 = Cos(var1[13]);
  t703 = -1.*t692;
  t712 = 1. + t703;
  t818 = Sin(var1[13]);
  t1066 = Cos(var1[3]);
  t965 = Cos(var1[5]);
  t969 = Sin(var1[4]);
  t1619 = Sin(var1[5]);
  t283 = Cos(var1[14]);
  t290 = -1.*t283;
  t327 = 1. + t290;
  t1038 = -1.*t965*t646*t969;
  t1662 = t1066*t1619;
  t1795 = t1038 + t1662;
  t2068 = -1.*t1066*t965;
  t2092 = -1.*t646*t969*t1619;
  t2185 = t2068 + t2092;
  t3868 = Cos(var1[15]);
  t3887 = -1.*t3868;
  t3913 = 1. + t3887;
  t3956 = Sin(var1[15]);
  t228 = Cos(var1[4]);
  t3230 = 0.994522*t363;
  t3238 = 0. + t3230;
  t2943 = -1.*t818*t1795;
  t3063 = t692*t2185;
  t3079 = t2943 + t3063;
  t3448 = t692*t1795;
  t3550 = t818*t2185;
  t3632 = t3448 + t3550;
  t3920 = 0.051978134642000004*t3913;
  t2576 = -0.104528*t363;
  t2729 = 0. + t2576;
  t4710 = -0.05226439969100001*t3913;
  t4222 = 0.49726168403800003*t3913;
  t438 = 0.104528*t363;
  t563 = 0. + t438;
  t399 = -0.994522*t363;
  t415 = 0. + t399;
  t5321 = -0.073913*t3956;
  t4416 = -1.*t228*t3238*t646;
  t4458 = 0.103955395616*t327*t3079;
  t4464 = -0.9890740084840001*t327;
  t4486 = 1. + t4464;
  t4512 = t4486*t3632;
  t4527 = t4416 + t4458 + t4512;
  t5216 = -0.703234*t3956;
  t4957 = -1.*t228*t2729*t646;
  t4958 = -0.010926102783999999*t327;
  t4969 = 1. + t4958;
  t4992 = t4969*t3079;
  t5001 = 0.103955395616*t327*t3632;
  t5045 = t4957 + t4992 + t5001;
  t5342 = -1.0000001112680001*t327;
  t5346 = 1. + t5342;
  t5367 = -1.*t5346*t228*t646;
  t5478 = t563*t3079;
  t5481 = t415*t3632;
  t5491 = t5367 + t5478 + t5481;
  t4201 = -0.707107*t3956;
  t5602 = -0.49726168403800003*t3913;
  t4305 = 0.073913*t3956;
  t6176 = -0.051978134642000004*t3913;
  t4863 = 0.707107*t3956;
  t5668 = 0.05226439969100001*t3913;
  t4808 = 0.703234*t3956;
  t358 = -0.056500534356700764*t327;
  t433 = 0.38315650737400003*t415;
  t589 = -0.040271188976*t563;
  t593 = 0. + t358 + t433 + t589;
  t772 = 0.4*t712;
  t824 = 0.12*t818;
  t841 = 0. + t772 + t824;
  t1806 = 0.12*t712;
  t1846 = -0.4*t818;
  t1897 = 0. + t1806 + t1846;
  t2238 = 1.1345904784751044e-7*var1[14];
  t2324 = -0.04027119345689465*t327;
  t2877 = -0.05650052807*t2729;
  t2914 = t2238 + t2324 + t2877;
  t6382 = t1066*t965*t969;
  t6397 = t646*t1619;
  t6401 = t6382 + t6397;
  t6411 = -1.*t965*t646;
  t6416 = t1066*t969*t1619;
  t6421 = t6411 + t6416;
  t3181 = 1.1924972351948546e-8*var1[14];
  t3204 = 0.38315655000705834*t327;
  t3247 = -0.05650052807*t3238;
  t3389 = t3181 + t3204 + t3247;
  t3772 = -1.5601527583902087e-7*var1[15];
  t3916 = 0.09582494577057615*t3913;
  t4208 = t3920 + t4201;
  t4209 = 0.231098203479*t4208;
  t4318 = t4222 + t4305;
  t4332 = 0.164383620275*t4318;
  t4407 = t3772 + t3916 + t4209 + t4332;
  t6459 = -1.*t818*t6401;
  t6466 = t692*t6421;
  t6468 = t6459 + t6466;
  t6473 = t692*t6401;
  t6476 = t818*t6421;
  t6507 = t6473 + t6476;
  t4574 = 1.639789470231751e-8*var1[15];
  t4618 = 0.22983603018311177*t3913;
  t4844 = t4710 + t4808;
  t4856 = 0.164383620275*t4844;
  t4877 = t3920 + t4863;
  t4931 = 0.18957839082800002*t4877;
  t4947 = t4574 + t4618 + t4856 + t4931;
  t5135 = 1.568745163810375e-7*var1[15];
  t5170 = 0.08219200580743281*t3913;
  t5276 = t4710 + t5216;
  t5284 = 0.231098203479*t5276;
  t5331 = t4222 + t5321;
  t5334 = 0.18957839082800002*t5331;
  t5335 = t5135 + t5170 + t5284 + t5334;
  t5649 = t5602 + t5321;
  t6509 = t1066*t228*t3238;
  t6513 = 0.103955395616*t327*t6468;
  t6515 = t4486*t6507;
  t6521 = t6509 + t6513 + t6515;
  t5684 = t5668 + t5216;
  t6539 = t1066*t228*t2729;
  t6540 = t4969*t6468;
  t6552 = 0.103955395616*t327*t6507;
  t6554 = t6539 + t6540 + t6552;
  t5931 = -0.500001190325*t3913;
  t5933 = 1. + t5931;
  t6565 = t5346*t1066*t228;
  t6569 = t563*t6468;
  t6575 = t415*t6507;
  t6582 = t6565 + t6569 + t6575;
  t6050 = -0.5054634410180001*t3913;
  t6066 = 1. + t6050;
  t6178 = t6176 + t4201;
  t6211 = t5602 + t4305;
  t6265 = t6176 + t4863;
  t6301 = -0.9945383682050002*t3913;
  t6304 = 1. + t6301;
  t6324 = t5668 + t4808;
  t6709 = -1.*t1066*t228*t965*t818;
  t6710 = t692*t1066*t228*t1619;
  t6712 = t6709 + t6710;
  t6714 = t692*t1066*t228*t965;
  t6720 = t1066*t228*t818*t1619;
  t6735 = t6714 + t6720;
  t6741 = -1.*t1066*t3238*t969;
  t6743 = 0.103955395616*t327*t6712;
  t6769 = t4486*t6735;
  t6770 = t6741 + t6743 + t6769;
  t6773 = -1.*t1066*t2729*t969;
  t6786 = t4969*t6712;
  t6788 = 0.103955395616*t327*t6735;
  t6790 = t6773 + t6786 + t6788;
  t6795 = -1.*t5346*t1066*t969;
  t6796 = t563*t6712;
  t6799 = t415*t6735;
  t6801 = t6795 + t6796 + t6799;
  t6853 = -1.*t228*t965*t818*t646;
  t6854 = t692*t228*t646*t1619;
  t6855 = t6853 + t6854;
  t6861 = t692*t228*t965*t646;
  t6863 = t228*t818*t646*t1619;
  t6865 = t6861 + t6863;
  t6871 = -1.*t3238*t646*t969;
  t6873 = 0.103955395616*t327*t6855;
  t6874 = t4486*t6865;
  t6875 = t6871 + t6873 + t6874;
  t6887 = -1.*t2729*t646*t969;
  t6896 = t4969*t6855;
  t6897 = 0.103955395616*t327*t6865;
  t6902 = t6887 + t6896 + t6897;
  t6907 = -1.*t5346*t646*t969;
  t6909 = t563*t6855;
  t6911 = t415*t6865;
  t6918 = t6907 + t6909 + t6911;
  t7006 = t965*t818*t969;
  t7008 = -1.*t692*t969*t1619;
  t7009 = t7006 + t7008;
  t7030 = -1.*t692*t965*t969;
  t7034 = -1.*t818*t969*t1619;
  t7039 = t7030 + t7034;
  t7046 = -1.*t228*t3238;
  t7049 = 0.103955395616*t327*t7009;
  t7050 = t4486*t7039;
  t7051 = t7046 + t7049 + t7050;
  t7055 = -1.*t228*t2729;
  t7057 = t4969*t7009;
  t7063 = 0.103955395616*t327*t7039;
  t7064 = t7055 + t7057 + t7063;
  t7073 = -1.*t5346*t228;
  t7074 = t563*t7009;
  t7076 = t415*t7039;
  t7077 = t7073 + t7074 + t7076;
  t7152 = t965*t646;
  t7154 = -1.*t1066*t969*t1619;
  t7155 = t7152 + t7154;
  t7158 = t818*t6401;
  t7162 = t692*t7155;
  t7163 = t7158 + t7162;
  t7168 = -1.*t818*t7155;
  t7174 = t6473 + t7168;
  t7178 = 0.103955395616*t327*t7163;
  t7179 = t4969*t7174;
  t7180 = t7178 + t7179;
  t7183 = t4486*t7163;
  t7185 = 0.103955395616*t327*t7174;
  t7186 = t7183 + t7185;
  t7188 = t415*t7163;
  t7190 = t563*t7174;
  t7194 = t7188 + t7190;
  t7240 = t965*t646*t969;
  t7241 = -1.*t1066*t1619;
  t7243 = t7240 + t7241;
  t7249 = t818*t7243;
  t7251 = t7249 + t3063;
  t7256 = t692*t7243;
  t7257 = -1.*t818*t2185;
  t7258 = t7256 + t7257;
  t7260 = 0.103955395616*t327*t7251;
  t7261 = t4969*t7258;
  t7262 = t7260 + t7261;
  t7264 = t4486*t7251;
  t7265 = 0.103955395616*t327*t7258;
  t7266 = t7264 + t7265;
  t7273 = t415*t7251;
  t7275 = t563*t7258;
  t7276 = t7273 + t7275;
  t7325 = t228*t965*t818;
  t7326 = -1.*t692*t228*t1619;
  t7327 = t7325 + t7326;
  t7334 = t692*t228*t965;
  t7337 = t228*t818*t1619;
  t7338 = t7334 + t7337;
  t7342 = 0.103955395616*t327*t7327;
  t7343 = t4969*t7338;
  t7357 = t7342 + t7343;
  t7359 = t4486*t7327;
  t7360 = 0.103955395616*t327*t7338;
  t7361 = t7359 + t7360;
  t7363 = t415*t7327;
  t7364 = t563*t7338;
  t7365 = t7363 + t7364;
  t7415 = -1.*t692*t6401;
  t7416 = -1.*t818*t6421;
  t7419 = t7415 + t7416;
  t7424 = t4969*t7419;
  t7425 = t6513 + t7424;
  t7428 = t4486*t6468;
  t7431 = 0.103955395616*t327*t7419;
  t7432 = t7428 + t7431;
  t7434 = t415*t6468;
  t7436 = t563*t7419;
  t7437 = t7434 + t7436;
  t7405 = 0.12*t692;
  t7406 = 0.4*t818;
  t7407 = t7405 + t7406;
  t7410 = -0.4*t692;
  t7411 = t7410 + t824;
  t7478 = t1066*t965;
  t7480 = t646*t969*t1619;
  t7481 = t7478 + t7480;
  t7483 = -1.*t818*t7243;
  t7491 = t692*t7481;
  t7493 = t7483 + t7491;
  t7500 = -1.*t692*t7243;
  t7502 = -1.*t818*t7481;
  t7503 = t7500 + t7502;
  t7508 = 0.103955395616*t327*t7493;
  t7509 = t4969*t7503;
  t7512 = t7508 + t7509;
  t7514 = t4486*t7493;
  t7515 = 0.103955395616*t327*t7503;
  t7517 = t7514 + t7515;
  t7520 = t415*t7493;
  t7526 = t563*t7503;
  t7528 = t7520 + t7526;
  t7567 = -1.*t228*t965*t818;
  t7568 = t692*t228*t1619;
  t7574 = t7567 + t7568;
  t7578 = -1.*t692*t228*t965;
  t7579 = -1.*t228*t818*t1619;
  t7580 = t7578 + t7579;
  t7582 = 0.103955395616*t327*t7574;
  t7585 = t4969*t7580;
  t7586 = t7582 + t7585;
  t7590 = t4486*t7574;
  t7591 = 0.103955395616*t327*t7580;
  t7592 = t7590 + t7591;
  t7594 = t415*t7574;
  t7595 = t563*t7580;
  t7596 = t7594 + t7595;
  t7633 = -1.0000001112680001*t1066*t228*t363;
  t7634 = 0.104528*t283*t6468;
  t7636 = -0.994522*t283*t6507;
  t7637 = t7633 + t7634 + t7636;
  t7640 = 0.994522*t283*t1066*t228;
  t7642 = 0.103955395616*t363*t6468;
  t7643 = -0.9890740084840001*t363*t6507;
  t7644 = t7640 + t7642 + t7643;
  t7646 = -0.104528*t283*t1066*t228;
  t7647 = -0.010926102783999999*t363*t6468;
  t7648 = 0.103955395616*t363*t6507;
  t7649 = t7646 + t7647 + t7648;
  t7621 = -0.3852670428678886*t283;
  t7622 = -0.056500534356700764*t363;
  t7623 = t7621 + t7622;
  t7625 = 0.0059058871981009595*t283;
  t7626 = -0.04027119345689465*t363;
  t7627 = 1.1345904784751044e-7 + t7625 + t7626;
  t7629 = -0.05619101817723254*t283;
  t7630 = 0.38315655000705834*t363;
  t7631 = 1.1924972351948546e-8 + t7629 + t7630;
  t7673 = t818*t7481;
  t7674 = t7256 + t7673;
  t7676 = -1.0000001112680001*t228*t363*t646;
  t7677 = 0.104528*t283*t7493;
  t7678 = -0.994522*t283*t7674;
  t7679 = t7676 + t7677 + t7678;
  t7681 = 0.994522*t283*t228*t646;
  t7682 = 0.103955395616*t363*t7493;
  t7683 = -0.9890740084840001*t363*t7674;
  t7684 = t7681 + t7682 + t7683;
  t7686 = -0.104528*t283*t228*t646;
  t7689 = -0.010926102783999999*t363*t7493;
  t7690 = 0.103955395616*t363*t7674;
  t7691 = t7686 + t7689 + t7690;
  t7713 = 1.0000001112680001*t363*t969;
  t7714 = 0.104528*t283*t7574;
  t7715 = -0.994522*t283*t7338;
  t7716 = t7713 + t7714 + t7715;
  t7718 = -0.994522*t283*t969;
  t7719 = 0.103955395616*t363*t7574;
  t7720 = -0.9890740084840001*t363*t7338;
  t7721 = t7718 + t7719 + t7720;
  t7723 = 0.104528*t283*t969;
  t7724 = -0.010926102783999999*t363*t7574;
  t7725 = 0.103955395616*t363*t7338;
  t7726 = t7723 + t7724 + t7725;
  t7748 = 0.051978134642000004*t3956;
  t7761 = -0.05226439969100001*t3956;
  t7752 = 0.49726168403800003*t3956;
  t7747 = -0.707107*t3868;
  t7751 = 0.073913*t3868;
  t7764 = 0.707107*t3868;
  t7782 = -0.051978134642000004*t3956;
  t7760 = 0.703234*t3868;
  t7774 = -0.073913*t3868;
  t7785 = -0.49726168403800003*t3956;
  t7770 = -0.703234*t3868;
  t7793 = 0.05226439969100001*t3956;
  t7749 = t7747 + t7748;
  t7750 = 0.231098203479*t7749;
  t7753 = t7751 + t7752;
  t7755 = 0.164383620275*t7753;
  t7756 = 0.09582494577057615*t3956;
  t7757 = -1.5601527583902087e-7 + t7750 + t7755 + t7756;
  t7762 = t7760 + t7761;
  t7763 = 0.164383620275*t7762;
  t7765 = t7764 + t7748;
  t7766 = 0.18957839082800002*t7765;
  t7767 = 0.22983603018311177*t3956;
  t7768 = 1.639789470231751e-8 + t7763 + t7766 + t7767;
  t7772 = t7770 + t7761;
  t7773 = 0.231098203479*t7772;
  t7775 = t7774 + t7752;
  t7776 = 0.18957839082800002*t7775;
  t7777 = 0.08219200580743281*t3956;
  t7778 = 1.568745163810375e-7 + t7773 + t7776 + t7777;
  t7806 = t228*t3238*t646;
  t7807 = t4486*t7674;
  t7808 = t7806 + t7508 + t7807;
  t7783 = t7747 + t7782;
  t7811 = t228*t2729*t646;
  t7812 = t4969*t7493;
  t7814 = 0.103955395616*t327*t7674;
  t7815 = t7811 + t7812 + t7814;
  t7786 = t7751 + t7785;
  t7818 = t5346*t228*t646;
  t7819 = t563*t7493;
  t7820 = t415*t7674;
  t7821 = t7818 + t7819 + t7820;
  t7790 = t7764 + t7782;
  t7794 = t7760 + t7793;
  t7798 = t7774 + t7785;
  t7800 = t7770 + t7793;
  t7844 = -1.*t3238*t969;
  t7845 = t4486*t7338;
  t7846 = t7844 + t7582 + t7845;
  t7848 = -1.*t2729*t969;
  t7849 = t4969*t7574;
  t7852 = t7848 + t7849 + t7360;
  t7854 = -1.*t5346*t969;
  t7855 = t563*t7574;
  t7856 = t415*t7338;
  t7857 = t7854 + t7855 + t7856;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1897*t2185 + t2914*t3079 + t3389*t3632 + t4407*t4527 + t4947*t5045 + t5335*t5491 + 0.140811*(t4527*t5649 + t5045*t5684 + t5491*t5933) + 0.213182*(t4527*t6066 + t5045*t6178 + t5491*t6211) + 0.230568*(t4527*t6265 + t5045*t6304 + t5491*t6324) - 1.*t228*t593*t646 + t1795*t841;
  p_output1[10]=t1066*t228*t593 + t1897*t6421 + t2914*t6468 + t3389*t6507 + t4407*t6521 + t4947*t6554 + t5335*t6582 + 0.140811*(t5649*t6521 + t5684*t6554 + t5933*t6582) + 0.213182*(t6066*t6521 + t6178*t6554 + t6211*t6582) + 0.230568*(t6265*t6521 + t6304*t6554 + t6324*t6582) + t6401*t841;
  p_output1[11]=0;
  p_output1[12]=t1066*t1619*t1897*t228 + t2914*t6712 + t3389*t6735 + t4407*t6770 + t4947*t6790 + t5335*t6801 + 0.140811*(t5649*t6770 + t5684*t6790 + t5933*t6801) + 0.213182*(t6066*t6770 + t6178*t6790 + t6211*t6801) + 0.230568*(t6265*t6770 + t6304*t6790 + t6324*t6801) + t1066*t228*t841*t965 - 1.*t1066*t593*t969;
  p_output1[13]=t1619*t1897*t228*t646 + t2914*t6855 + t3389*t6865 + t4407*t6875 + t4947*t6902 + t5335*t6918 + 0.140811*(t5649*t6875 + t5684*t6902 + t5933*t6918) + 0.213182*(t6066*t6875 + t6178*t6902 + t6211*t6918) + 0.230568*(t6265*t6875 + t6304*t6902 + t6324*t6918) + t228*t646*t841*t965 - 1.*t593*t646*t969;
  p_output1[14]=-1.*t228*t593 + t2914*t7009 + t3389*t7039 + t4407*t7051 + t4947*t7064 + t5335*t7077 + 0.140811*(t5649*t7051 + t5684*t7064 + t5933*t7077) + 0.213182*(t6066*t7051 + t6178*t7064 + t6211*t7077) + 0.230568*(t6265*t7051 + t6304*t7064 + t6324*t7077) - 1.*t1619*t1897*t969 - 1.*t841*t965*t969;
  p_output1[15]=t1897*t6401 + t3389*t7163 + t2914*t7174 + t4947*t7180 + t4407*t7186 + t5335*t7194 + 0.140811*(t5684*t7180 + t5649*t7186 + t5933*t7194) + 0.213182*(t6178*t7180 + t6066*t7186 + t6211*t7194) + 0.230568*(t6304*t7180 + t6265*t7186 + t6324*t7194) + t7155*t841;
  p_output1[16]=t1897*t7243 + t3389*t7251 + t2914*t7258 + t4947*t7262 + t4407*t7266 + t5335*t7276 + 0.140811*(t5684*t7262 + t5649*t7266 + t5933*t7276) + 0.213182*(t6178*t7262 + t6066*t7266 + t6211*t7276) + 0.230568*(t6304*t7262 + t6265*t7266 + t6324*t7276) + t2185*t841;
  p_output1[17]=t3389*t7327 + t2914*t7338 + t4947*t7357 + t4407*t7361 + t5335*t7365 + 0.140811*(t5684*t7357 + t5649*t7361 + t5933*t7365) + 0.213182*(t6178*t7357 + t6066*t7361 + t6211*t7365) + 0.230568*(t6304*t7357 + t6265*t7361 + t6324*t7365) - 1.*t1619*t228*t841 + t1897*t228*t965;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t3389*t6468 + t6401*t7407 + t6421*t7411 + t2914*t7419 + t4947*t7425 + t4407*t7432 + t5335*t7437 + 0.140811*(t5684*t7425 + t5649*t7432 + t5933*t7437) + 0.213182*(t6178*t7425 + t6066*t7432 + t6211*t7437) + 0.230568*(t6304*t7425 + t6265*t7432 + t6324*t7437);
  p_output1[40]=t7243*t7407 + t7411*t7481 + t3389*t7493 + t2914*t7503 + t4947*t7512 + t4407*t7517 + t5335*t7528 + 0.140811*(t5684*t7512 + t5649*t7517 + t5933*t7528) + 0.213182*(t6178*t7512 + t6066*t7517 + t6211*t7528) + 0.230568*(t6304*t7512 + t6265*t7517 + t6324*t7528);
  p_output1[41]=t1619*t228*t7411 + t3389*t7574 + t2914*t7580 + t4947*t7586 + t4407*t7592 + t5335*t7596 + 0.140811*(t5684*t7586 + t5649*t7592 + t5933*t7596) + 0.213182*(t6178*t7586 + t6066*t7592 + t6211*t7596) + 0.230568*(t6304*t7586 + t6265*t7592 + t6324*t7596) + t228*t7407*t965;
  p_output1[42]=t1066*t228*t7623 + t6468*t7627 + t6507*t7631 + t5335*t7637 + t4407*t7644 + t4947*t7649 + 0.140811*(t5933*t7637 + t5649*t7644 + t5684*t7649) + 0.213182*(t6211*t7637 + t6066*t7644 + t6178*t7649) + 0.230568*(t6324*t7637 + t6265*t7644 + t6304*t7649);
  p_output1[43]=t228*t646*t7623 + t7493*t7627 + t7631*t7674 + t5335*t7679 + t4407*t7684 + t4947*t7691 + 0.140811*(t5933*t7679 + t5649*t7684 + t5684*t7691) + 0.213182*(t6211*t7679 + t6066*t7684 + t6178*t7691) + 0.230568*(t6324*t7679 + t6265*t7684 + t6304*t7691);
  p_output1[44]=t7574*t7627 + t7338*t7631 + t5335*t7716 + t4407*t7721 + t4947*t7726 + 0.140811*(t5933*t7716 + t5649*t7721 + t5684*t7726) + 0.213182*(t6211*t7716 + t6066*t7721 + t6178*t7726) + 0.230568*(t6324*t7716 + t6265*t7721 + t6304*t7726) - 1.*t7623*t969;
  p_output1[45]=t6521*t7757 + t6554*t7768 + t6582*t7778 + 0.213182*(-0.5054634410180001*t3956*t6521 + t6554*t7783 + t6582*t7786) + 0.230568*(-0.9945383682050002*t3956*t6554 + t6521*t7790 + t6582*t7794) + 0.140811*(-0.500001190325*t3956*t6582 + t6521*t7798 + t6554*t7800);
  p_output1[46]=t7757*t7808 + t7768*t7815 + t7778*t7821 + 0.140811*(t7798*t7808 + t7800*t7815 - 0.500001190325*t3956*t7821) + 0.213182*(-0.5054634410180001*t3956*t7808 + t7783*t7815 + t7786*t7821) + 0.230568*(t7790*t7808 - 0.9945383682050002*t3956*t7815 + t7794*t7821);
  p_output1[47]=t7757*t7846 + t7768*t7852 + t7778*t7857 + 0.140811*(t7798*t7846 + t7800*t7852 - 0.500001190325*t3956*t7857) + 0.213182*(-0.5054634410180001*t3956*t7846 + t7783*t7852 + t7786*t7857) + 0.230568*(t7790*t7846 - 0.9945383682050002*t3956*t7852 + t7794*t7857);
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jp_left_shoulder_yaw_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
