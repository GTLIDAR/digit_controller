/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:12:48 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "AMWorld_right_toe_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t415;
  double t424;
  double t426;
  double t593;
  double t768;
  double t769;
  double t773;
  double t783;
  double t453;
  double t465;
  double t475;
  double t490;
  double t506;
  double t1454;
  double t1831;
  double t1699;
  double t1747;
  double t1763;
  double t1863;
  double t1912;
  double t1993;
  double t2104;
  double t2138;
  double t2145;
  double t2147;
  double t2282;
  double t2403;
  double t2433;
  double t1087;
  double t1229;
  double t1339;
  double t1413;
  double t1477;
  double t1492;
  double t1496;
  double t1598;
  double t1651;
  double t1677;
  double t1800;
  double t1806;
  double t2171;
  double t2210;
  double t2450;
  double t2460;
  double t2471;
  double t2519;
  double t2605;
  double t2613;
  double t2703;
  double t2766;
  double t2815;
  double t2866;
  double t2893;
  double t2900;
  double t2902;
  double t2952;
  double t3014;
  double t3031;
  double t1430;
  double t1440;
  double t2252;
  double t2775;
  double t2779;
  double t2790;
  double t3275;
  double t3284;
  double t3293;
  double t3294;
  double t3306;
  double t3336;
  double t3353;
  double t3365;
  double t3369;
  double t3373;
  double t3377;
  double t3423;
  double t3442;
  double t3450;
  double t3452;
  double t3467;
  double t3490;
  double t3502;
  double t3504;
  double t3508;
  double t3533;
  double t1376;
  double t1378;
  double t3292;
  double t3375;
  double t3418;
  double t3420;
  double t3559;
  double t3570;
  double t3767;
  double t3595;
  double t3608;
  double t3612;
  double t3616;
  double t3621;
  double t3622;
  double t3631;
  double t3633;
  double t3675;
  double t3693;
  double t3701;
  double t3704;
  double t3705;
  double t3708;
  double t3709;
  double t3726;
  double t3729;
  double t3730;
  double t3732;
  double t3737;
  double t3739;
  double t3740;
  double t3753;
  double t3770;
  double t3774;
  double t3786;
  double t3794;
  double t3980;
  double t3912;
  double t3924;
  double t3929;
  double t3931;
  double t3954;
  double t3955;
  double t3962;
  double t3972;
  double t3890;
  double t3989;
  double t3990;
  double t3996;
  double t4000;
  double t4002;
  double t4003;
  double t4005;
  double t4009;
  double t3808;
  double t3812;
  double t3826;
  double t3830;
  double t3887;
  double t4016;
  double t4018;
  double t4021;
  double t3977;
  double t4010;
  double t4013;
  double t4027;
  double t4046;
  double t4097;
  double t4044;
  double t4105;
  double t4102;
  double t4114;
  double t4118;
  double t4139;
  double t4147;
  double t4153;
  double t4131;
  double t4157;
  double t4163;
  double t4168;
  double t4174;
  double t4182;
  double t4098;
  double t4167;
  double t4195;
  double t4235;
  double t4241;
  double t4244;
  double t4245;
  double t4247;
  double t4263;
  double t4264;
  double t4266;
  double t4269;
  double t4237;
  double t4253;
  double t4270;
  double t4282;
  double t4291;
  double t4294;
  double t4309;
  double t4313;
  double t4325;
  double t4326;
  double t4331;
  double t4344;
  double t4287;
  double t4314;
  double t4345;
  double t4353;
  double t4365;
  double t4373;
  double t4377;
  double t4378;
  double t4383;
  double t4387;
  double t4388;
  double t4390;
  double t4363;
  double t4379;
  double t4392;
  double t4394;
  double t4413;
  double t4418;
  double t4425;
  double t4426;
  double t4440;
  double t4445;
  double t4453;
  double t4456;
  double t4486;
  double t4492;
  double t4497;
  double t4498;
  double t4499;
  double t4500;
  double t4505;
  double t4511;
  double t4512;
  double t4513;
  double t4516;
  double t4527;
  double t4532;
  double t4534;
  double t4535;
  double t4544;
  double t4553;
  double t4554;
  double t4502;
  double t4529;
  double t4563;
  double t4572;
  double t4582;
  double t4584;
  double t4585;
  double t4586;
  double t4589;
  double t4590;
  double t4592;
  double t4593;
  double t4577;
  double t4588;
  double t4596;
  double t4600;
  double t4603;
  double t4606;
  double t4609;
  double t4610;
  double t4614;
  double t4616;
  double t4618;
  double t4624;
  double t4601;
  double t4613;
  double t4638;
  double t4647;
  double t4652;
  double t4661;
  double t4662;
  double t4671;
  double t4684;
  double t4689;
  double t4700;
  double t4701;
  double t4773;
  double t4775;
  double t4778;
  double t4780;
  double t4795;
  double t4796;
  double t4802;
  double t4803;
  double t4726;
  double t4728;
  double t4729;
  double t4730;
  double t4816;
  double t4818;
  double t4831;
  double t4788;
  double t4804;
  double t4806;
  double t4409;
  double t4438;
  double t4457;
  double t4458;
  double t4461;
  double t4462;
  double t4465;
  double t4468;
  double t4895;
  double t4906;
  double t4907;
  double t4910;
  double t4913;
  double t4928;
  double t4929;
  double t4931;
  double t4948;
  double t4954;
  double t4955;
  double t4961;
  double t4912;
  double t4937;
  double t4974;
  double t4978;
  double t4982;
  double t4985;
  double t4988;
  double t4989;
  double t4993;
  double t4994;
  double t4995;
  double t4998;
  double t4981;
  double t4991;
  double t5001;
  double t5002;
  double t5008;
  double t5011;
  double t5012;
  double t5013;
  double t5021;
  double t5023;
  double t5025;
  double t5028;
  double t5004;
  double t5020;
  double t5029;
  double t5031;
  double t5039;
  double t5049;
  double t5051;
  double t5054;
  double t5065;
  double t5067;
  double t5069;
  double t5077;
  double t5154;
  double t5155;
  double t5156;
  double t5160;
  double t5163;
  double t5167;
  double t5168;
  double t5170;
  double t5095;
  double t5097;
  double t5100;
  double t5101;
  double t5181;
  double t5183;
  double t5186;
  double t5161;
  double t5172;
  double t5173;
  double t4873;
  double t4875;
  double t4882;
  double t4883;
  double t40;
  double t548;
  double t788;
  double t858;
  double t988;
  double t3572;
  double t3638;
  double t3657;
  double t3658;
  double t3759;
  double t3777;
  double t3795;
  double t3802;
  double t3805;
  double t3839;
  double t3841;
  double t3847;
  double t3849;
  double t3857;
  double t3858;
  double t3871;
  double t3876;
  double t3886;
  double t4015;
  double t4031;
  double t4036;
  double t4041;
  double t4045;
  double t4052;
  double t4061;
  double t4063;
  double t4072;
  double t4078;
  double t4091;
  double t4092;
  double t5233;
  double t5234;
  double t5235;
  double t5242;
  double t5244;
  double t5245;
  double t5237;
  double t5247;
  double t5248;
  double t5261;
  double t5265;
  double t5268;
  double t5232;
  double t5249;
  double t5281;
  double t5288;
  double t5297;
  double t5299;
  double t5302;
  double t5309;
  double t5327;
  double t5330;
  double t5340;
  double t5341;
  double t5290;
  double t5318;
  double t5342;
  double t5344;
  double t5364;
  double t5366;
  double t5368;
  double t5370;
  double t5373;
  double t5374;
  double t5376;
  double t5378;
  double t5353;
  double t5371;
  double t5379;
  double t5380;
  double t5386;
  double t5389;
  double t5397;
  double t5399;
  double t5411;
  double t5413;
  double t5416;
  double t5422;
  double t5384;
  double t5408;
  double t5424;
  double t5425;
  double t5430;
  double t5432;
  double t5433;
  double t5435;
  double t5438;
  double t5441;
  double t5446;
  double t5447;
  double t4485;
  double t4651;
  double t4675;
  double t4676;
  double t4682;
  double t4705;
  double t4706;
  double t4711;
  double t4719;
  double t4724;
  double t4732;
  double t4736;
  double t4738;
  double t4739;
  double t4740;
  double t4748;
  double t4753;
  double t4756;
  double t4757;
  double t4759;
  double t4761;
  double t4762;
  double t4765;
  double t4813;
  double t4836;
  double t4837;
  double t4841;
  double t4847;
  double t4851;
  double t4852;
  double t4853;
  double t4854;
  double t4855;
  double t4857;
  double t4862;
  double t5426;
  double t5436;
  double t5449;
  double t5452;
  double t5460;
  double t5463;
  double t5464;
  double t5468;
  double t4892;
  double t5036;
  double t5055;
  double t5057;
  double t5059;
  double t5082;
  double t5083;
  double t5085;
  double t5086;
  double t5087;
  double t5102;
  double t5103;
  double t5115;
  double t5123;
  double t5124;
  double t5126;
  double t5132;
  double t5133;
  double t5140;
  double t5143;
  double t5146;
  double t5151;
  double t5153;
  double t5175;
  double t5187;
  double t5189;
  double t5192;
  double t5194;
  double t5195;
  double t5196;
  double t5199;
  double t5200;
  double t5202;
  double t5203;
  double t5209;
  double t5483;
  double t5489;
  double t5492;
  double t5496;
  double t5514;
  double t5515;
  double t5517;
  double t5519;
  double t5525;
  double t5527;
  double t5512;
  double t5518;
  double t5528;
  double t5529;
  double t5533;
  double t5534;
  double t5539;
  double t5543;
  double t5548;
  double t5549;
  double t5550;
  double t5558;
  double t5532;
  double t5546;
  double t5559;
  double t5568;
  double t5576;
  double t5577;
  double t5581;
  double t5582;
  double t5586;
  double t5587;
  double t5591;
  double t5593;
  double t5571;
  double t5583;
  double t5603;
  double t5604;
  double t5608;
  double t5609;
  double t5611;
  double t5612;
  double t5619;
  double t5620;
  double t5627;
  double t5628;
  double t5606;
  double t5616;
  double t5629;
  double t5635;
  double t5639;
  double t5643;
  double t5645;
  double t5646;
  double t5650;
  double t5653;
  double t5654;
  double t5655;
  double t5638;
  double t5647;
  double t5657;
  double t5658;
  double t5661;
  double t5665;
  double t5671;
  double t5672;
  double t5703;
  double t5705;
  double t5708;
  double t5709;
  t415 = Cos(var1[22]);
  t424 = -1.*t415;
  t426 = 1. + t424;
  t593 = -0.134322983001*t426;
  t768 = 1. + t593;
  t769 = 0.930418*t768;
  t773 = 0.12497652119782442*t426;
  t783 = t769 + t773;
  t453 = -0.8656776547239999*t426;
  t465 = 1. + t453;
  t475 = -0.366501*t465;
  t490 = -0.3172717261340007*t426;
  t506 = t475 + t490;
  t1454 = Sin(var1[21]);
  t1831 = Sin(var1[22]);
  t1699 = Cos(var1[21]);
  t1747 = -1.*t1699;
  t1763 = 1. + t1747;
  t1863 = 0.366501*t1831;
  t1912 = 0. + t1863;
  t1993 = 0.930418*t1912;
  t2104 = 0.930418*t1831;
  t2138 = 0. + t2104;
  t2145 = -0.366501*t2138;
  t2147 = t1993 + t2145;
  t2282 = Cos(var1[20]);
  t2403 = -1.*t2282;
  t2433 = 1. + t2403;
  t1087 = Cos(var1[19]);
  t1229 = -1.*t1087;
  t1339 = 1. + t1229;
  t1413 = Sin(var1[20]);
  t1477 = 0.366501*t1454;
  t1492 = 0. + t1477;
  t1496 = t783*t1492;
  t1598 = 0.930418*t1454;
  t1651 = 0. + t1598;
  t1677 = t506*t1651;
  t1800 = -1.000000637725*t1763;
  t1806 = 1. + t1800;
  t2171 = t1806*t2147;
  t2210 = 0. + t1496 + t1677 + t2171;
  t2450 = -0.8656776547239999*t1763;
  t2460 = 1. + t2450;
  t2471 = t2460*t506;
  t2519 = -0.340999127418*t1763*t783;
  t2605 = -0.930418*t1454;
  t2613 = 0. + t2605;
  t2703 = t2613*t2147;
  t2766 = 0. + t2471 + t2519 + t2703;
  t2815 = -0.340999127418*t1763*t506;
  t2866 = -0.134322983001*t1763;
  t2893 = 1. + t2866;
  t2900 = t2893*t783;
  t2902 = -0.366501*t1454;
  t2952 = 0. + t2902;
  t3014 = t2952*t2147;
  t3031 = 0. + t2815 + t2900 + t3014;
  t1430 = -0.366501*t1413;
  t1440 = 0. + t1430;
  t2252 = t1440*t2210;
  t2775 = -0.340999127418*t2433*t2766;
  t2779 = -0.134322983001*t2433;
  t2790 = 1. + t2779;
  t3275 = t2790*t3031;
  t3284 = 0. + t2252 + t2775 + t3275;
  t3293 = -0.930418*t1413;
  t3294 = 0. + t3293;
  t3306 = t3294*t2210;
  t3336 = -0.8656776547239999*t2433;
  t3353 = 1. + t3336;
  t3365 = t3353*t2766;
  t3369 = -0.340999127418*t2433*t3031;
  t3373 = 0. + t3306 + t3365 + t3369;
  t3377 = Sin(var1[19]);
  t3423 = -1.000000637725*t2433;
  t3442 = 1. + t3423;
  t3450 = t3442*t2210;
  t3452 = 0.930418*t1413;
  t3467 = 0. + t3452;
  t3490 = t3467*t2766;
  t3502 = 0.366501*t1413;
  t3504 = 0. + t3502;
  t3508 = t3504*t3031;
  t3533 = 0. + t3450 + t3490 + t3508;
  t1376 = -0.134322983001*t1339;
  t1378 = 1. + t1376;
  t3292 = t1378*t3284;
  t3375 = -0.340999127418*t1339*t3373;
  t3418 = 0.366501*t3377;
  t3420 = 0. + t3418;
  t3559 = t3420*t3533;
  t3570 = 0. + t3292 + t3375 + t3559;
  t3767 = Sin(var1[18]);
  t3595 = -0.340999127418*t1339*t3284;
  t3608 = -0.8656776547239999*t1339;
  t3612 = 1. + t3608;
  t3616 = t3612*t3373;
  t3621 = 0.930418*t3377;
  t3622 = 0. + t3621;
  t3631 = t3622*t3533;
  t3633 = 0. + t3595 + t3616 + t3631;
  t3675 = Cos(var1[18]);
  t3693 = -1.*t3675;
  t3701 = 1. + t3693;
  t3704 = -1.000000637725*t3701;
  t3705 = 1. + t3704;
  t3708 = -0.366501*t3377;
  t3709 = 0. + t3708;
  t3726 = t3709*t3284;
  t3729 = -0.930418*t3377;
  t3730 = 0. + t3729;
  t3732 = t3730*t3373;
  t3737 = -1.000000637725*t1339;
  t3739 = 1. + t3737;
  t3740 = t3739*t3533;
  t3753 = 0. + t3726 + t3732 + t3740;
  t3770 = 0.930418*t3767;
  t3774 = 0. + t3770;
  t3786 = -0.366501*t3767;
  t3794 = 0. + t3786;
  t3980 = Cos(var1[17]);
  t3912 = 0.366501*t3767;
  t3924 = 0. + t3912;
  t3929 = t3924*t3753;
  t3931 = 0.340999127418*t3701*t3570;
  t3954 = -0.134322983001*t3701;
  t3955 = 1. + t3954;
  t3962 = t3955*t3633;
  t3972 = 0. + t3929 + t3931 + t3962;
  t3890 = Sin(var1[17]);
  t3989 = -0.930418*t3767;
  t3990 = 0. + t3989;
  t3996 = t3990*t3753;
  t4000 = -0.8656776547239999*t3701;
  t4002 = 1. + t4000;
  t4003 = t4002*t3570;
  t4005 = 0.340999127418*t3701*t3633;
  t4009 = 0. + t3996 + t4003 + t4005;
  t3808 = t3705*t3753;
  t3812 = t3774*t3570;
  t3826 = t3794*t3633;
  t3830 = 0. + t3808 + t3812 + t3826;
  t3887 = Cos(var1[5]);
  t4016 = t3980*t3972;
  t4018 = -1.*t3890*t4009;
  t4021 = 0. + t4016 + t4018;
  t3977 = t3890*t3972;
  t4010 = t3980*t4009;
  t4013 = 0. + t3977 + t4010;
  t4027 = Sin(var1[5]);
  t4046 = Cos(var1[4]);
  t4097 = Cos(var1[3]);
  t4044 = Sin(var1[4]);
  t4105 = Sin(var1[3]);
  t4102 = t4097*t3887*t4044;
  t4114 = t4105*t4027;
  t4118 = t4102 + t4114;
  t4139 = -1.*t3887*t4105;
  t4147 = t4097*t4044*t4027;
  t4153 = t4139 + t4147;
  t4131 = -1.*t3890*t4118;
  t4157 = t3980*t4153;
  t4163 = t4131 + t4157;
  t4168 = t3980*t4118;
  t4174 = t3890*t4153;
  t4182 = t4168 + t4174;
  t4098 = t4097*t4046*t3794;
  t4167 = 0.340999127418*t3701*t4163;
  t4195 = t3955*t4182;
  t4235 = t4098 + t4167 + t4195;
  t4241 = t4097*t4046*t3774;
  t4244 = t4002*t4163;
  t4245 = 0.340999127418*t3701*t4182;
  t4247 = t4241 + t4244 + t4245;
  t4263 = t3705*t4097*t4046;
  t4264 = t3990*t4163;
  t4266 = t3924*t4182;
  t4269 = t4263 + t4264 + t4266;
  t4237 = t3622*t4235;
  t4253 = t3420*t4247;
  t4270 = t3739*t4269;
  t4282 = t4237 + t4253 + t4270;
  t4291 = t3612*t4235;
  t4294 = -0.340999127418*t1339*t4247;
  t4309 = t3730*t4269;
  t4313 = t4291 + t4294 + t4309;
  t4325 = -0.340999127418*t1339*t4235;
  t4326 = t1378*t4247;
  t4331 = t3709*t4269;
  t4344 = t4325 + t4326 + t4331;
  t4287 = t3504*t4282;
  t4314 = -0.340999127418*t2433*t4313;
  t4345 = t2790*t4344;
  t4353 = t4287 + t4314 + t4345;
  t4365 = t3467*t4282;
  t4373 = t3353*t4313;
  t4377 = -0.340999127418*t2433*t4344;
  t4378 = t4365 + t4373 + t4377;
  t4383 = t3442*t4282;
  t4387 = t3294*t4313;
  t4388 = t1440*t4344;
  t4390 = t4383 + t4387 + t4388;
  t4363 = t2952*t4353;
  t4379 = t2613*t4378;
  t4392 = t1806*t4390;
  t4394 = t4363 + t4379 + t4392;
  t4413 = t2893*t4353;
  t4418 = -0.340999127418*t1763*t4378;
  t4425 = t1492*t4390;
  t4426 = t4413 + t4418 + t4425;
  t4440 = -0.340999127418*t1763*t4353;
  t4445 = t2460*t4378;
  t4453 = t1651*t4390;
  t4456 = t4440 + t4445 + t4453;
  t4486 = -0.747896*t465;
  t4492 = 0.10045970693385246*t426;
  t4497 = -0.930418*t1831;
  t4498 = 0. + t4497;
  t4499 = 0.594863*t4498;
  t4500 = t4486 + t4492 + t4499;
  t4505 = -0.294604*t768;
  t4511 = 0.2550318833994125*t426;
  t4512 = -0.366501*t1831;
  t4513 = 0. + t4512;
  t4516 = 0.594863*t4513;
  t4527 = t4505 + t4511 + t4516;
  t4532 = -1.000000637725*t426;
  t4534 = 1. + t4532;
  t4535 = 0.594863*t4534;
  t4544 = -0.294604*t1912;
  t4553 = -0.747896*t2138;
  t4554 = t4535 + t4544 + t4553;
  t4502 = t1651*t4500;
  t4529 = t1492*t4527;
  t4563 = t1806*t4554;
  t4572 = 0. + t4502 + t4529 + t4563;
  t4582 = t2460*t4500;
  t4584 = -0.340999127418*t1763*t4527;
  t4585 = t2613*t4554;
  t4586 = 0. + t4582 + t4584 + t4585;
  t4589 = -0.340999127418*t1763*t4500;
  t4590 = t2893*t4527;
  t4592 = t2952*t4554;
  t4593 = 0. + t4589 + t4590 + t4592;
  t4577 = t1440*t4572;
  t4588 = -0.340999127418*t2433*t4586;
  t4596 = t2790*t4593;
  t4600 = 0. + t4577 + t4588 + t4596;
  t4603 = t3294*t4572;
  t4606 = t3353*t4586;
  t4609 = -0.340999127418*t2433*t4593;
  t4610 = 0. + t4603 + t4606 + t4609;
  t4614 = t3442*t4572;
  t4616 = t3467*t4586;
  t4618 = t3504*t4593;
  t4624 = 0. + t4614 + t4616 + t4618;
  t4601 = t1378*t4600;
  t4613 = -0.340999127418*t1339*t4610;
  t4638 = t3420*t4624;
  t4647 = 0. + t4601 + t4613 + t4638;
  t4652 = -0.340999127418*t1339*t4600;
  t4661 = t3612*t4610;
  t4662 = t3622*t4624;
  t4671 = 0. + t4652 + t4661 + t4662;
  t4684 = t3709*t4600;
  t4689 = t3730*t4610;
  t4700 = t3739*t4624;
  t4701 = 0. + t4684 + t4689 + t4700;
  t4773 = t3924*t4701;
  t4775 = 0.340999127418*t3701*t4647;
  t4778 = t3955*t4671;
  t4780 = 0. + t4773 + t4775 + t4778;
  t4795 = t3990*t4701;
  t4796 = t4002*t4647;
  t4802 = 0.340999127418*t3701*t4671;
  t4803 = 0. + t4795 + t4796 + t4802;
  t4726 = t3705*t4701;
  t4728 = t3774*t4647;
  t4729 = t3794*t4671;
  t4730 = 0. + t4726 + t4728 + t4729;
  t4816 = t3980*t4780;
  t4818 = -1.*t3890*t4803;
  t4831 = 0. + t4816 + t4818;
  t4788 = t3890*t4780;
  t4804 = t3980*t4803;
  t4806 = 0. + t4788 + t4804;
  t4409 = t2138*t4394;
  t4438 = -0.340999127418*t426*t4426;
  t4457 = t465*t4456;
  t4458 = t4409 + t4438 + t4457;
  t4461 = t1912*t4394;
  t4462 = t768*t4426;
  t4465 = -0.340999127418*t426*t4456;
  t4468 = t4461 + t4462 + t4465;
  t4895 = 0.553471*t465;
  t4906 = -0.07434394776141752*t426;
  t4907 = 0.803828*t4498;
  t4910 = t4895 + t4906 + t4907;
  t4913 = 0.218018*t768;
  t4928 = -0.18873312805116788*t426;
  t4929 = 0.803828*t4513;
  t4931 = t4913 + t4928 + t4929;
  t4948 = 0.803828*t4534;
  t4954 = 0.218018*t1912;
  t4955 = 0.553471*t2138;
  t4961 = t4948 + t4954 + t4955;
  t4912 = t1651*t4910;
  t4937 = t1492*t4931;
  t4974 = t1806*t4961;
  t4978 = 0. + t4912 + t4937 + t4974;
  t4982 = t2460*t4910;
  t4985 = -0.340999127418*t1763*t4931;
  t4988 = t2613*t4961;
  t4989 = 0. + t4982 + t4985 + t4988;
  t4993 = -0.340999127418*t1763*t4910;
  t4994 = t2893*t4931;
  t4995 = t2952*t4961;
  t4998 = 0. + t4993 + t4994 + t4995;
  t4981 = t1440*t4978;
  t4991 = -0.340999127418*t2433*t4989;
  t5001 = t2790*t4998;
  t5002 = 0. + t4981 + t4991 + t5001;
  t5008 = t3294*t4978;
  t5011 = t3353*t4989;
  t5012 = -0.340999127418*t2433*t4998;
  t5013 = 0. + t5008 + t5011 + t5012;
  t5021 = t3442*t4978;
  t5023 = t3467*t4989;
  t5025 = t3504*t4998;
  t5028 = 0. + t5021 + t5023 + t5025;
  t5004 = t1378*t5002;
  t5020 = -0.340999127418*t1339*t5013;
  t5029 = t3420*t5028;
  t5031 = 0. + t5004 + t5020 + t5029;
  t5039 = -0.340999127418*t1339*t5002;
  t5049 = t3612*t5013;
  t5051 = t3622*t5028;
  t5054 = 0. + t5039 + t5049 + t5051;
  t5065 = t3709*t5002;
  t5067 = t3730*t5013;
  t5069 = t3739*t5028;
  t5077 = 0. + t5065 + t5067 + t5069;
  t5154 = t3924*t5077;
  t5155 = 0.340999127418*t3701*t5031;
  t5156 = t3955*t5054;
  t5160 = 0. + t5154 + t5155 + t5156;
  t5163 = t3990*t5077;
  t5167 = t4002*t5031;
  t5168 = 0.340999127418*t3701*t5054;
  t5170 = 0. + t5163 + t5167 + t5168;
  t5095 = t3705*t5077;
  t5097 = t3774*t5031;
  t5100 = t3794*t5054;
  t5101 = 0. + t5095 + t5097 + t5100;
  t5181 = t3980*t5160;
  t5183 = -1.*t3890*t5170;
  t5186 = 0. + t5181 + t5183;
  t5161 = t3890*t5160;
  t5172 = t3980*t5170;
  t5173 = 0. + t5161 + t5172;
  t4873 = t4534*t4394;
  t4875 = t4513*t4426;
  t4882 = t4498*t4456;
  t4883 = t4873 + t4875 + t4882;
  t40 = 1.000000637725*var2[22];
  t548 = -0.366501*t506;
  t788 = 0.930418*t783;
  t858 = 0. + t548 + t788;
  t988 = var2[21]*t858;
  t3572 = -0.366501*t3570;
  t3638 = -0.930418*t3633;
  t3657 = 0. + t3572 + t3638;
  t3658 = var2[18]*t3657;
  t3759 = -1.*t3705*t3753;
  t3777 = -1.*t3774*t3570;
  t3795 = -1.*t3794*t3633;
  t3802 = 0. + t3759 + t3777 + t3795;
  t3805 = var2[17]*t3802;
  t3839 = var2[5]*t3830;
  t3841 = -0.930418*t3284;
  t3847 = 0.366501*t3373;
  t3849 = 0. + t3841 + t3847;
  t3857 = var2[19]*t3849;
  t3858 = -0.366501*t2766;
  t3871 = 0.930418*t3031;
  t3876 = 0. + t3858 + t3871;
  t3886 = var2[20]*t3876;
  t4015 = t3887*t4013;
  t4031 = -1.*t4021*t4027;
  t4036 = 0. + t4015 + t4031;
  t4041 = var2[4]*t4036;
  t4045 = -1.*t3830*t4044;
  t4052 = t3887*t4021;
  t4061 = t4013*t4027;
  t4063 = 0. + t4052 + t4061;
  t4072 = t4046*t4063;
  t4078 = 0. + t4045 + t4072;
  t4091 = var2[3]*t4078;
  t4092 = t40 + t988 + t3658 + t3805 + t3839 + t3857 + t3886 + t4041 + t4091;
  t5233 = t3887*t4105*t4044;
  t5234 = -1.*t4097*t4027;
  t5235 = t5233 + t5234;
  t5242 = t4097*t3887;
  t5244 = t4105*t4044*t4027;
  t5245 = t5242 + t5244;
  t5237 = -1.*t3890*t5235;
  t5247 = t3980*t5245;
  t5248 = t5237 + t5247;
  t5261 = t3980*t5235;
  t5265 = t3890*t5245;
  t5268 = t5261 + t5265;
  t5232 = t4046*t3794*t4105;
  t5249 = 0.340999127418*t3701*t5248;
  t5281 = t3955*t5268;
  t5288 = t5232 + t5249 + t5281;
  t5297 = t4046*t3774*t4105;
  t5299 = t4002*t5248;
  t5302 = 0.340999127418*t3701*t5268;
  t5309 = t5297 + t5299 + t5302;
  t5327 = t3705*t4046*t4105;
  t5330 = t3990*t5248;
  t5340 = t3924*t5268;
  t5341 = t5327 + t5330 + t5340;
  t5290 = t3622*t5288;
  t5318 = t3420*t5309;
  t5342 = t3739*t5341;
  t5344 = t5290 + t5318 + t5342;
  t5364 = t3612*t5288;
  t5366 = -0.340999127418*t1339*t5309;
  t5368 = t3730*t5341;
  t5370 = t5364 + t5366 + t5368;
  t5373 = -0.340999127418*t1339*t5288;
  t5374 = t1378*t5309;
  t5376 = t3709*t5341;
  t5378 = t5373 + t5374 + t5376;
  t5353 = t3504*t5344;
  t5371 = -0.340999127418*t2433*t5370;
  t5379 = t2790*t5378;
  t5380 = t5353 + t5371 + t5379;
  t5386 = t3467*t5344;
  t5389 = t3353*t5370;
  t5397 = -0.340999127418*t2433*t5378;
  t5399 = t5386 + t5389 + t5397;
  t5411 = t3442*t5344;
  t5413 = t3294*t5370;
  t5416 = t1440*t5378;
  t5422 = t5411 + t5413 + t5416;
  t5384 = t2952*t5380;
  t5408 = t2613*t5399;
  t5424 = t1806*t5422;
  t5425 = t5384 + t5408 + t5424;
  t5430 = t2893*t5380;
  t5432 = -0.340999127418*t1763*t5399;
  t5433 = t1492*t5422;
  t5435 = t5430 + t5432 + t5433;
  t5438 = -0.340999127418*t1763*t5380;
  t5441 = t2460*t5399;
  t5446 = t1651*t5422;
  t5447 = t5438 + t5441 + t5446;
  t4485 = -2.3257599990333944e-7*var2[22];
  t4651 = -0.366501*t4647;
  t4675 = -0.930418*t4671;
  t4676 = 0. + t4651 + t4675;
  t4682 = var2[18]*t4676;
  t4705 = -1.*t3705*t4701;
  t4706 = -1.*t3774*t4647;
  t4711 = -1.*t3794*t4671;
  t4719 = 0. + t4705 + t4706 + t4711;
  t4724 = var2[17]*t4719;
  t4732 = var2[5]*t4730;
  t4736 = -0.930418*t4600;
  t4738 = 0.366501*t4610;
  t4739 = 0. + t4736 + t4738;
  t4740 = var2[19]*t4739;
  t4748 = -0.366501*t4586;
  t4753 = 0.930418*t4593;
  t4756 = 0. + t4748 + t4753;
  t4757 = var2[20]*t4756;
  t4759 = -0.366501*t4500;
  t4761 = 0.930418*t4527;
  t4762 = 0. + t4759 + t4761;
  t4765 = var2[21]*t4762;
  t4813 = t3887*t4806;
  t4836 = -1.*t4831*t4027;
  t4837 = 0. + t4813 + t4836;
  t4841 = var2[4]*t4837;
  t4847 = -1.*t4730*t4044;
  t4851 = t3887*t4831;
  t4852 = t4806*t4027;
  t4853 = 0. + t4851 + t4852;
  t4854 = t4046*t4853;
  t4855 = 0. + t4847 + t4854;
  t4857 = var2[3]*t4855;
  t4862 = t4485 + t4682 + t4724 + t4732 + t4740 + t4757 + t4765 + t4841 + t4857;
  t5426 = t2138*t5425;
  t5436 = -0.340999127418*t426*t5435;
  t5449 = t465*t5447;
  t5452 = t5426 + t5436 + t5449;
  t5460 = t1912*t5425;
  t5463 = t768*t5435;
  t5464 = -0.340999127418*t426*t5447;
  t5468 = t5460 + t5463 + t5464;
  t4892 = 1.9655299995924302e-7*var2[22];
  t5036 = -0.366501*t5031;
  t5055 = -0.930418*t5054;
  t5057 = 0. + t5036 + t5055;
  t5059 = var2[18]*t5057;
  t5082 = -1.*t3705*t5077;
  t5083 = -1.*t3774*t5031;
  t5085 = -1.*t3794*t5054;
  t5086 = 0. + t5082 + t5083 + t5085;
  t5087 = var2[17]*t5086;
  t5102 = var2[5]*t5101;
  t5103 = -0.930418*t5002;
  t5115 = 0.366501*t5013;
  t5123 = 0. + t5103 + t5115;
  t5124 = var2[19]*t5123;
  t5126 = -0.366501*t4989;
  t5132 = 0.930418*t4998;
  t5133 = 0. + t5126 + t5132;
  t5140 = var2[20]*t5133;
  t5143 = -0.366501*t4910;
  t5146 = 0.930418*t4931;
  t5151 = 0. + t5143 + t5146;
  t5153 = var2[21]*t5151;
  t5175 = t3887*t5173;
  t5187 = -1.*t5186*t4027;
  t5189 = 0. + t5175 + t5187;
  t5192 = var2[4]*t5189;
  t5194 = -1.*t5101*t4044;
  t5195 = t3887*t5186;
  t5196 = t5173*t4027;
  t5199 = 0. + t5195 + t5196;
  t5200 = t4046*t5199;
  t5202 = 0. + t5194 + t5200;
  t5203 = var2[3]*t5202;
  t5209 = t4892 + t5059 + t5087 + t5102 + t5124 + t5140 + t5153 + t5192 + t5203;
  t5483 = t4534*t5425;
  t5489 = t4513*t5435;
  t5492 = t4498*t5447;
  t5496 = t5483 + t5489 + t5492;
  t5514 = -1.*t4046*t3887*t3890;
  t5515 = t3980*t4046*t4027;
  t5517 = t5514 + t5515;
  t5519 = t3980*t4046*t3887;
  t5525 = t4046*t3890*t4027;
  t5527 = t5519 + t5525;
  t5512 = -1.*t3794*t4044;
  t5518 = 0.340999127418*t3701*t5517;
  t5528 = t3955*t5527;
  t5529 = t5512 + t5518 + t5528;
  t5533 = -1.*t3774*t4044;
  t5534 = t4002*t5517;
  t5539 = 0.340999127418*t3701*t5527;
  t5543 = t5533 + t5534 + t5539;
  t5548 = -1.*t3705*t4044;
  t5549 = t3990*t5517;
  t5550 = t3924*t5527;
  t5558 = t5548 + t5549 + t5550;
  t5532 = t3622*t5529;
  t5546 = t3420*t5543;
  t5559 = t3739*t5558;
  t5568 = t5532 + t5546 + t5559;
  t5576 = t3612*t5529;
  t5577 = -0.340999127418*t1339*t5543;
  t5581 = t3730*t5558;
  t5582 = t5576 + t5577 + t5581;
  t5586 = -0.340999127418*t1339*t5529;
  t5587 = t1378*t5543;
  t5591 = t3709*t5558;
  t5593 = t5586 + t5587 + t5591;
  t5571 = t3504*t5568;
  t5583 = -0.340999127418*t2433*t5582;
  t5603 = t2790*t5593;
  t5604 = t5571 + t5583 + t5603;
  t5608 = t3467*t5568;
  t5609 = t3353*t5582;
  t5611 = -0.340999127418*t2433*t5593;
  t5612 = t5608 + t5609 + t5611;
  t5619 = t3442*t5568;
  t5620 = t3294*t5582;
  t5627 = t1440*t5593;
  t5628 = t5619 + t5620 + t5627;
  t5606 = t2952*t5604;
  t5616 = t2613*t5612;
  t5629 = t1806*t5628;
  t5635 = t5606 + t5616 + t5629;
  t5639 = t2893*t5604;
  t5643 = -0.340999127418*t1763*t5612;
  t5645 = t1492*t5628;
  t5646 = t5639 + t5643 + t5645;
  t5650 = -0.340999127418*t1763*t5604;
  t5653 = t2460*t5612;
  t5654 = t1651*t5628;
  t5655 = t5650 + t5653 + t5654;
  t5638 = t2138*t5635;
  t5647 = -0.340999127418*t426*t5646;
  t5657 = t465*t5655;
  t5658 = t5638 + t5647 + t5657;
  t5661 = t1912*t5635;
  t5665 = t768*t5646;
  t5671 = -0.340999127418*t426*t5655;
  t5672 = t5661 + t5665 + t5671;
  t5703 = t4534*t5635;
  t5705 = t4513*t5646;
  t5708 = t4498*t5655;
  t5709 = t5703 + t5705 + t5708;
  p_output1[0]=0.00001*t4092*(-0.366501*t4458 + 0.930418*t4468) + 0.00001*t4862*(-0.747896*t4458 - 0.294604*t4468 + 0.594863*t4883) + 0.00001*(0.553471*t4458 + 0.218018*t4468 + 0.803828*t4883)*t5209;
  p_output1[1]=0.00001*t4092*(-0.366501*t5452 + 0.930418*t5468) + 0.00001*t4862*(-0.747896*t5452 - 0.294604*t5468 + 0.594863*t5496) + 0.00001*t5209*(0.553471*t5452 + 0.218018*t5468 + 0.803828*t5496);
  p_output1[2]=0.00001*t4092*(-0.366501*t5658 + 0.930418*t5672) + 0.00001*t4862*(-0.747896*t5658 - 0.294604*t5672 + 0.594863*t5709) + 0.00001*t5209*(0.553471*t5658 + 0.218018*t5672 + 0.803828*t5709);
}



void AMWorld_right_toe_pitch_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
