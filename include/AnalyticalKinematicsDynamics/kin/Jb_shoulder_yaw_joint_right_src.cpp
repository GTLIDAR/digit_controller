/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:55:27 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jb_shoulder_yaw_joint_right_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t339;
  double t341;
  double t425;
  double t482;
  double t631;
  double t128;
  double t140;
  double t167;
  double t934;
  double t470;
  double t446;
  double t447;
  double t456;
  double t530;
  double t532;
  double t630;
  double t685;
  double t692;
  double t696;
  double t737;
  double t781;
  double t864;
  double t867;
  double t915;
  double t937;
  double t945;
  double t946;
  double t947;
  double t950;
  double t953;
  double t996;
  double t1106;
  double t1110;
  double t1139;
  double t1175;
  double t1210;
  double t1212;
  double t1257;
  double t1272;
  double t1336;
  double t1350;
  double t1568;
  double t740;
  double t811;
  double t823;
  double t997;
  double t1002;
  double t1012;
  double t1476;
  double t1551;
  double t127;
  double t1570;
  double t1579;
  double t1636;
  double t1697;
  double t1702;
  double t1753;
  double t1812;
  double t1814;
  double t61;
  double t1990;
  double t1991;
  double t2135;
  double t1562;
  double t1877;
  double t1890;
  double t2136;
  double t59;
  double t2594;
  double t2595;
  double t2596;
  double t2746;
  double t2759;
  double t2830;
  double t2919;
  double t2921;
  double t2936;
  double t2645;
  double t2861;
  double t2939;
  double t2942;
  double t3000;
  double t3057;
  double t3096;
  double t3104;
  double t2225;
  double t2281;
  double t2296;
  double t2319;
  double t2332;
  double t2371;
  double t2418;
  double t2470;
  double t2508;
  double t3199;
  double t3232;
  double t3270;
  double t2979;
  double t3118;
  double t3133;
  double t3533;
  double t3562;
  double t3573;
  double t3601;
  double t3646;
  double t3667;
  double t3706;
  double t3722;
  double t3726;
  double t3592;
  double t3701;
  double t3751;
  double t3754;
  double t3806;
  double t3816;
  double t3841;
  double t3846;
  double t3882;
  double t3887;
  double t3890;
  double t3759;
  double t3855;
  double t3864;
  double t1946;
  double t2142;
  double t2156;
  double t2322;
  double t2414;
  double t2482;
  double t2497;
  double t2501;
  double t2528;
  double t2530;
  double t2536;
  double t2543;
  double t2556;
  double t3157;
  double t3299;
  double t3301;
  double t3316;
  double t3318;
  double t3347;
  double t3377;
  double t3378;
  double t3395;
  double t3465;
  double t3486;
  double t3495;
  double t3513;
  double t3872;
  double t3896;
  double t3911;
  double t3931;
  double t3968;
  double t4050;
  double t4083;
  double t4157;
  double t4175;
  double t4258;
  double t4275;
  double t4291;
  double t4292;
  double t4613;
  double t4615;
  double t4617;
  double t4747;
  double t5146;
  double t4879;
  double t4727;
  double t4738;
  double t4745;
  double t4753;
  double t4822;
  double t4830;
  double t4906;
  double t4941;
  double t4960;
  double t4974;
  double t4989;
  double t4994;
  double t5099;
  double t5109;
  double t5128;
  double t5135;
  double t5137;
  double t5159;
  double t5209;
  double t5217;
  double t5232;
  double t5247;
  double t5256;
  double t5278;
  double t5290;
  double t5299;
  double t5305;
  double t5311;
  double t5318;
  double t5410;
  double t4620;
  double t4688;
  double t4713;
  double t4714;
  double t4716;
  double t4976;
  double t5221;
  double t5424;
  double t5426;
  double t5428;
  double t5429;
  double t5458;
  double t5467;
  double t5495;
  double t5501;
  double t5507;
  double t4548;
  double t4584;
  double t4587;
  double t5555;
  double t5577;
  double t5581;
  double t5587;
  double t5588;
  double t4707;
  double t4708;
  double t5427;
  double t5521;
  double t5539;
  double t5628;
  double t5629;
  double t5635;
  double t5637;
  double t5638;
  double t5640;
  double t5641;
  double t5649;
  double t5652;
  double t5665;
  double t5544;
  double t5605;
  double t5615;
  double t5644;
  double t5667;
  double t5680;
  double t5685;
  double t5686;
  double t5694;
  double t4510;
  double t4518;
  double t4531;
  double t5623;
  double t5725;
  double t5770;
  double t5796;
  double t5857;
  double t5872;
  double t5913;
  double t5897;
  double t5959;
  double t5934;
  double t6003;
  double t5985;
  double t6305;
  double t6306;
  double t6307;
  double t6308;
  double t6330;
  double t6333;
  double t6334;
  double t6336;
  double t6376;
  double t6379;
  double t6381;
  double t6392;
  double t6399;
  double t6401;
  double t6403;
  double t6407;
  double t6436;
  double t6437;
  double t6442;
  double t6446;
  double t6452;
  double t6462;
  double t6463;
  double t6464;
  t339 = Cos(var1[26]);
  t341 = -1.*t339;
  t425 = 1. + t341;
  t482 = Sin(var1[26]);
  t631 = -0.05226439969100001*t425;
  t128 = Cos(var1[25]);
  t140 = -1.*t128;
  t167 = 1. + t140;
  t934 = -0.49726168403800003*t425;
  t470 = 0.051978134642000004*t425;
  t446 = -0.9945383682050002*t425;
  t447 = 1. + t446;
  t456 = 0.073913*t447;
  t530 = -0.707107*t482;
  t532 = t470 + t530;
  t630 = 0.703234*t532;
  t685 = -0.703234*t482;
  t692 = t631 + t685;
  t696 = 0.707107*t692;
  t737 = t456 + t630 + t696;
  t781 = Sin(var1[25]);
  t864 = -0.500001190325*t425;
  t867 = 1. + t864;
  t915 = 0.707107*t867;
  t937 = -0.073913*t482;
  t945 = t934 + t937;
  t946 = 0.703234*t945;
  t947 = 0.703234*t482;
  t950 = t631 + t947;
  t953 = 0.073913*t950;
  t996 = t915 + t946 + t953;
  t1106 = -0.5054634410180001*t425;
  t1110 = 1. + t1106;
  t1139 = 0.703234*t1110;
  t1175 = 0.073913*t482;
  t1210 = t934 + t1175;
  t1212 = 0.707107*t1210;
  t1257 = 0.707107*t482;
  t1272 = t470 + t1257;
  t1336 = 0.073913*t1272;
  t1350 = t1139 + t1212 + t1336;
  t1568 = Cos(var1[24]);
  t740 = -0.103955395616*t167*t737;
  t811 = 0.994522*t781;
  t823 = 0. + t811;
  t997 = t823*t996;
  t1002 = -0.9890740084840001*t167;
  t1012 = 1. + t1002;
  t1476 = t1012*t1350;
  t1551 = 0. + t740 + t997 + t1476;
  t127 = Sin(var1[24]);
  t1570 = -0.010926102783999999*t167;
  t1579 = 1. + t1570;
  t1636 = t1579*t737;
  t1697 = 0.104528*t781;
  t1702 = 0. + t1697;
  t1753 = t1702*t996;
  t1812 = -0.103955395616*t167*t1350;
  t1814 = 0. + t1636 + t1753 + t1812;
  t61 = Cos(var1[5]);
  t1990 = t1568*t1551;
  t1991 = -1.*t127*t1814;
  t2135 = 0. + t1990 + t1991;
  t1562 = t127*t1551;
  t1877 = t1568*t1814;
  t1890 = 0. + t1562 + t1877;
  t2136 = Sin(var1[5]);
  t59 = Sin(var1[3]);
  t2594 = -0.994522*t447;
  t2595 = 0.104528*t532;
  t2596 = t2594 + t2595;
  t2746 = 0.104528*t945;
  t2759 = -0.994522*t950;
  t2830 = t2746 + t2759;
  t2919 = 0.104528*t1110;
  t2921 = -0.994522*t1272;
  t2936 = t2919 + t2921;
  t2645 = -0.103955395616*t167*t2596;
  t2861 = t823*t2830;
  t2939 = t1012*t2936;
  t2942 = 0. + t2645 + t2861 + t2939;
  t3000 = t1579*t2596;
  t3057 = t1702*t2830;
  t3096 = -0.103955395616*t167*t2936;
  t3104 = 0. + t3000 + t3057 + t3096;
  t2225 = Cos(var1[3]);
  t2281 = Cos(var1[4]);
  t2296 = -0.104528*t781;
  t2319 = 0. + t2296;
  t2332 = -1.0000001112680001*t167;
  t2371 = 1. + t2332;
  t2418 = -0.994522*t781;
  t2470 = 0. + t2418;
  t2508 = Sin(var1[4]);
  t3199 = t1568*t2942;
  t3232 = -1.*t127*t3104;
  t3270 = 0. + t3199 + t3232;
  t2979 = t127*t2942;
  t3118 = t1568*t3104;
  t3133 = 0. + t2979 + t3118;
  t3533 = -0.073913*t447;
  t3562 = -0.703234*t532;
  t3573 = t3533 + t3562 + t696;
  t3601 = -0.703234*t945;
  t3646 = -0.073913*t950;
  t3667 = t915 + t3601 + t3646;
  t3706 = -0.703234*t1110;
  t3722 = -0.073913*t1272;
  t3726 = t3706 + t1212 + t3722;
  t3592 = -0.103955395616*t167*t3573;
  t3701 = t823*t3667;
  t3751 = t1012*t3726;
  t3754 = 0. + t3592 + t3701 + t3751;
  t3806 = t1579*t3573;
  t3816 = t1702*t3667;
  t3841 = -0.103955395616*t167*t3726;
  t3846 = 0. + t3806 + t3816 + t3841;
  t3882 = t1568*t3754;
  t3887 = -1.*t127*t3846;
  t3890 = 0. + t3882 + t3887;
  t3759 = t127*t3754;
  t3855 = t1568*t3846;
  t3864 = 0. + t3759 + t3855;
  t1946 = t61*t1890;
  t2142 = -1.*t2135*t2136;
  t2156 = 0. + t1946 + t2142;
  t2322 = t2319*t737;
  t2414 = t2371*t996;
  t2482 = t2470*t1350;
  t2497 = 0. + t2322 + t2414 + t2482;
  t2501 = t2281*t2497;
  t2528 = t61*t2135;
  t2530 = t1890*t2136;
  t2536 = 0. + t2528 + t2530;
  t2543 = t2508*t2536;
  t2556 = 0. + t2501 + t2543;
  t3157 = t61*t3133;
  t3299 = -1.*t3270*t2136;
  t3301 = 0. + t3157 + t3299;
  t3316 = t2319*t2596;
  t3318 = t2371*t2830;
  t3347 = t2470*t2936;
  t3377 = 0. + t3316 + t3318 + t3347;
  t3378 = t2281*t3377;
  t3395 = t61*t3270;
  t3465 = t3133*t2136;
  t3486 = 0. + t3395 + t3465;
  t3495 = t2508*t3486;
  t3513 = 0. + t3378 + t3495;
  t3872 = t61*t3864;
  t3896 = -1.*t3890*t2136;
  t3911 = 0. + t3872 + t3896;
  t3931 = t2319*t3573;
  t3968 = t2371*t3667;
  t4050 = t2470*t3726;
  t4083 = 0. + t3931 + t3968 + t4050;
  t4157 = t2281*t4083;
  t4175 = t61*t3890;
  t4258 = t3864*t2136;
  t4275 = 0. + t4175 + t4258;
  t4291 = t2508*t4275;
  t4292 = 0. + t4157 + t4291;
  t4613 = -1.*t4083*t2508;
  t4615 = t2281*t4275;
  t4617 = 0. + t4613 + t4615;
  t4747 = 0.05226439969100001*t425;
  t5146 = -0.051978134642000004*t425;
  t4879 = 0.49726168403800003*t425;
  t4727 = -1.568745163810375e-7*var1[26];
  t4738 = 0.060173*t867;
  t4745 = 0.08219200580743281*t425;
  t4753 = t4747 + t685;
  t4822 = -0.231098203479*t4753;
  t4830 = 0.293218*t945;
  t4906 = t4879 + t1175;
  t4941 = 0.18957839082800002*t4906;
  t4960 = -0.220205*t950;
  t4974 = t4727 + t4738 + t4745 + t4822 + t4830 + t4941 + t4960;
  t4989 = 1.639789470231751e-8*var1[26];
  t4994 = -0.220205*t447;
  t5099 = -0.22983603018311177*t425;
  t5109 = 0.293218*t532;
  t5128 = 0.060173*t692;
  t5135 = t4747 + t947;
  t5137 = 0.164383620275*t5135;
  t5159 = t5146 + t1257;
  t5209 = 0.18957839082800002*t5159;
  t5217 = t4989 + t4994 + t5099 + t5109 + t5128 + t5137 + t5209;
  t5232 = 1.5601527583902087e-7*var1[26];
  t5247 = 0.293218*t1110;
  t5256 = 0.09582494577057615*t425;
  t5278 = t5146 + t530;
  t5290 = -0.231098203479*t5278;
  t5299 = t4879 + t937;
  t5305 = 0.164383620275*t5299;
  t5311 = 0.060173*t1210;
  t5318 = -0.220205*t1272;
  t5410 = t5232 + t5247 + t5256 + t5290 + t5305 + t5311 + t5318;
  t4620 = -1.*t1568;
  t4688 = 1. + t4620;
  t4713 = -1.1924972351948546e-8*var1[25];
  t4714 = 0.38315655000705834*t167;
  t4716 = -0.05650052807*t2470;
  t4976 = t823*t4974;
  t5221 = -0.103955395616*t167*t5217;
  t5424 = t1012*t5410;
  t5426 = t4713 + t4714 + t4716 + t4976 + t5221 + t5424;
  t5428 = 1.1345904784751044e-7*var1[25];
  t5429 = 0.04027119345689465*t167;
  t5458 = -0.05650052807*t2319;
  t5467 = t1702*t4974;
  t5495 = t1579*t5217;
  t5501 = -0.103955395616*t167*t5410;
  t5507 = t5428 + t5429 + t5458 + t5467 + t5495 + t5501;
  t4548 = -1.*t3377*t2508;
  t4584 = t2281*t3486;
  t4587 = 0. + t4548 + t4584;
  t5555 = 0.4*t4688;
  t5577 = -0.12*t127;
  t5581 = t1568*t5426;
  t5587 = -1.*t127*t5507;
  t5588 = 0. + t5555 + t5577 + t5581 + t5587;
  t4707 = -0.12*t4688;
  t4708 = -0.4*t127;
  t5427 = t127*t5426;
  t5521 = t1568*t5507;
  t5539 = 0. + t4707 + t4708 + t5427 + t5521;
  t5628 = -0.056500534356700764*t167;
  t5629 = 0.040271188976*t1702;
  t5635 = 0.38315650737400003*t823;
  t5637 = t2371*t4974;
  t5638 = t2319*t5217;
  t5640 = t2470*t5410;
  t5641 = 0. + t5628 + t5629 + t5635 + t5637 + t5638 + t5640;
  t5649 = t61*t5588;
  t5652 = t5539*t2136;
  t5665 = 0. + t5649 + t5652;
  t5544 = t61*t5539;
  t5605 = -1.*t5588*t2136;
  t5615 = 0. + t5544 + t5605;
  t5644 = -1.*t5641*t2508;
  t5667 = t2281*t5665;
  t5680 = 0. + t5644 + t5667;
  t5685 = t2281*t5641;
  t5686 = t2508*t5665;
  t5694 = 0. + t5685 + t5686;
  t4510 = -1.*t2497*t2508;
  t4518 = t2281*t2536;
  t4531 = 0. + t4510 + t4518;
  t5623 = -1.*t3301*t5615;
  t5725 = t5615*t3911;
  t5770 = -1.*t5615*t3911;
  t5796 = t5615*t2156;
  t5857 = t3301*t5615;
  t5872 = -1.*t5615*t2156;
  t5913 = t5641*t4083;
  t5897 = -1.*t3377*t5641;
  t5959 = t5641*t2497;
  t5934 = -1.*t5641*t4083;
  t6003 = -1.*t5641*t2497;
  t5985 = t3377*t5641;
  t6305 = t4974*t3667;
  t6306 = t3573*t5217;
  t6307 = t5410*t3726;
  t6308 = t6305 + t6306 + t6307;
  t6330 = -1.*t2830*t4974;
  t6333 = -1.*t2596*t5217;
  t6334 = -1.*t2936*t5410;
  t6336 = t6330 + t6333 + t6334;
  t6376 = t4974*t996;
  t6379 = t737*t5217;
  t6381 = t5410*t1350;
  t6392 = t6376 + t6379 + t6381;
  t6399 = -1.*t4974*t3667;
  t6401 = -1.*t3573*t5217;
  t6403 = -1.*t5410*t3726;
  t6407 = t6399 + t6401 + t6403;
  t6436 = -1.*t4974*t996;
  t6437 = -1.*t737*t5217;
  t6442 = -1.*t5410*t1350;
  t6446 = t6436 + t6437 + t6442;
  t6452 = t2830*t4974;
  t6462 = t2596*t5217;
  t6463 = t2936*t5410;
  t6464 = t6452 + t6462 + t6463;
  p_output1[0]=0. + t2225*t2556 - 1.*t2156*t59;
  p_output1[1]=0. + t2225*t3513 - 1.*t3301*t59;
  p_output1[2]=0. + t2225*t4292 - 1.*t3911*t59;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0. + t2156*t2225 + t2556*t59;
  p_output1[7]=0. + t2225*t3301 + t3513*t59;
  p_output1[8]=0. + t2225*t3911 + t4292*t59;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t4531;
  p_output1[13]=t4587;
  p_output1[14]=t4617;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=t4617*(t5623 - 1.*t4587*t5680 - 1.*t3513*t5694) + t4587*(t4617*t5680 + t4292*t5694 + t5725);
  p_output1[19]=t4531*(-1.*t4617*t5680 - 1.*t4292*t5694 + t5770) + t4617*(t4531*t5680 + t2556*t5694 + t5796);
  p_output1[20]=t4531*(t4587*t5680 + t3513*t5694 + t5857) + t4587*(-1.*t4531*t5680 - 1.*t2556*t5694 + t5872);
  p_output1[21]=t4531;
  p_output1[22]=t4587;
  p_output1[23]=t4617;
  p_output1[24]=t3911*(t5623 - 1.*t3486*t5665 + t5897) + t3301*(t4275*t5665 + t5725 + t5913);
  p_output1[25]=t2156*(-1.*t4275*t5665 + t5770 + t5934) + t3911*(t2536*t5665 + t5796 + t5959);
  p_output1[26]=t2156*(t3486*t5665 + t5857 + t5985) + t3301*(-1.*t2536*t5665 + t5872 + t6003);
  p_output1[27]=t2156;
  p_output1[28]=t3301;
  p_output1[29]=t3911;
  p_output1[30]=t4083*(-1.*t3133*t5539 - 1.*t3270*t5588 + t5897) + t3377*(t3864*t5539 + t3890*t5588 + t5913);
  p_output1[31]=t2497*(-1.*t3864*t5539 - 1.*t3890*t5588 + t5934) + t4083*(t1890*t5539 + t2135*t5588 + t5959);
  p_output1[32]=t2497*(t3133*t5539 + t3270*t5588 + t5985) + t3377*(-1.*t1890*t5539 - 1.*t2135*t5588 + t6003);
  p_output1[33]=t2497;
  p_output1[34]=t3377;
  p_output1[35]=t4083;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=-0.12*t1551 - 0.4*t1814 - 1.*t4083*(-1.*t2942*t5426 - 1.*t3104*t5507 + t5897) - 1.*t3377*(t3754*t5426 + t3846*t5507 + t5913);
  p_output1[145]=-0.12*t2942 - 0.4*t3104 - 1.*t2497*(-1.*t3754*t5426 - 1.*t3846*t5507 + t5934) - 1.*t4083*(t1551*t5426 + t1814*t5507 + t5959);
  p_output1[146]=-0.12*t3754 - 0.4*t3846 - 1.*t2497*(t2942*t5426 + t3104*t5507 + t5985) - 1.*t3377*(-1.*t1551*t5426 - 1.*t1814*t5507 + t6003);
  p_output1[147]=0. - 1.*t1350*t2470 - 1.*t2319*t737 - 1.*t2371*t996;
  p_output1[148]=0. - 1.*t2319*t2596 - 1.*t2371*t2830 - 1.*t2470*t2936;
  p_output1[149]=0. - 1.*t2319*t3573 - 1.*t2371*t3667 - 1.*t2470*t3726;
  p_output1[150]=0.056191*t1350 - 0.994522*(t2596*t6308 + t3573*t6336) + 0.104528*(t2936*t6308 + t3726*t6336) + 0.005906*t737 + 0.385267*t996;
  p_output1[151]=0.005906*t2596 + 0.385267*t2830 + 0.056191*t2936 + 0.104528*(t3726*t6392 + t1350*t6407) - 0.994522*(t3573*t6392 + t6407*t737);
  p_output1[152]=0.005906*t3573 + 0.385267*t3667 + 0.056191*t3726 + 0.104528*(t2936*t6446 + t1350*t6464) - 0.994522*(t2596*t6446 + t6464*t737);
  p_output1[153]=0. + 0.104528*t1350 - 0.994522*t737;
  p_output1[154]=0. - 0.994522*t2596 + 0.104528*t2936;
  p_output1[155]=0. - 0.994522*t3573 + 0.104528*t3726;
  p_output1[156]=-5.962928707747839e-8;
  p_output1[157]=4.2665979334277626e-7;
  p_output1[158]=-5.489413506948315e-7;
  p_output1[159]=-8.80875999975661e-7;
  p_output1[160]=4.610340000044122e-7;
  p_output1[161]=1.000001499774;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void Jb_shoulder_yaw_joint_right_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
