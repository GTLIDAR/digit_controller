/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:07:34 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "AMBody_left_toe_roll_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t620;
  double t735;
  double t925;
  double t1525;
  double t587;
  double t606;
  double t612;
  double t1453;
  double t507;
  double t968;
  double t1001;
  double t1332;
  double t1546;
  double t1550;
  double t1577;
  double t1601;
  double t1617;
  double t1665;
  double t1719;
  double t1795;
  double t1806;
  double t1847;
  double t1925;
  double t1928;
  double t1959;
  double t1996;
  double t2147;
  double t2155;
  double t2156;
  double t2165;
  double t2205;
  double t2216;
  double t2222;
  double t2534;
  double t2536;
  double t2611;
  double t1613;
  double t1629;
  double t1656;
  double t2003;
  double t2061;
  double t2099;
  double t2273;
  double t2292;
  double t2373;
  double t2421;
  double t2432;
  double t2454;
  double t2455;
  double t2458;
  double t2469;
  double t2528;
  double t2622;
  double t2658;
  double t2665;
  double t2680;
  double t2687;
  double t2688;
  double t2701;
  double t2716;
  double t2720;
  double t2721;
  double t2806;
  double t2807;
  double t2837;
  double t192;
  double t541;
  double t581;
  double t2315;
  double t2358;
  double t2372;
  double t2532;
  double t2612;
  double t2613;
  double t2723;
  double t2724;
  double t2840;
  double t2844;
  double t2857;
  double t2893;
  double t2894;
  double t2897;
  double t2903;
  double t2914;
  double t2926;
  double t2929;
  double t2938;
  double t2940;
  double t2969;
  double t2974;
  double t2976;
  double t2989;
  double t252;
  double t477;
  double t2776;
  double t2917;
  double t2923;
  double t2925;
  double t2994;
  double t2995;
  double t3204;
  double t3210;
  double t3212;
  double t3014;
  double t3017;
  double t3018;
  double t3020;
  double t3021;
  double t3035;
  double t3036;
  double t3037;
  double t3168;
  double t3176;
  double t3192;
  double t3236;
  double t3242;
  double t3244;
  double t3253;
  double t3254;
  double t3260;
  double t3262;
  double t3265;
  double t3267;
  double t3274;
  double t3281;
  double t3213;
  double t3220;
  double t3226;
  double t3235;
  double t3287;
  double t3291;
  double t3293;
  double t3297;
  double t3310;
  double t3313;
  double t3316;
  double t3317;
  double t3333;
  double t3352;
  double t3355;
  double t3364;
  double t3370;
  double t3385;
  double t3392;
  double t3393;
  double t3398;
  double t3406;
  double t3412;
  double t3415;
  double t3422;
  double t3431;
  double t3441;
  double t3457;
  double t3299;
  double t3302;
  double t3307;
  double t3366;
  double t3376;
  double t3384;
  double t3444;
  double t3445;
  double t3164;
  double t3458;
  double t3459;
  double t3461;
  double t3464;
  double t3465;
  double t3467;
  double t3468;
  double t3470;
  double t3480;
  double t3453;
  double t3473;
  double t3474;
  double t3156;
  double t3481;
  double t3486;
  double t3489;
  double t3540;
  double t3541;
  double t3549;
  double t3550;
  double t3561;
  double t3562;
  double t3546;
  double t3560;
  double t3566;
  double t3567;
  double t3615;
  double t3624;
  double t3628;
  double t3629;
  double t3634;
  double t3635;
  double t3640;
  double t3642;
  double t3644;
  double t3645;
  double t3647;
  double t3649;
  double t3657;
  double t3659;
  double t3660;
  double t3661;
  double t3664;
  double t3666;
  double t3636;
  double t3650;
  double t3667;
  double t3668;
  double t3670;
  double t3674;
  double t3675;
  double t3677;
  double t3681;
  double t3684;
  double t3686;
  double t3688;
  double t3669;
  double t3678;
  double t3691;
  double t3692;
  double t3699;
  double t3702;
  double t3704;
  double t3707;
  double t3714;
  double t3716;
  double t3717;
  double t3726;
  double t3696;
  double t3711;
  double t3734;
  double t3737;
  double t3741;
  double t3743;
  double t3747;
  double t3748;
  double t3809;
  double t3811;
  double t3812;
  double t3815;
  double t3799;
  double t3800;
  double t3818;
  double t3820;
  double t3822;
  double t3824;
  double t3830;
  double t3831;
  double t3837;
  double t3849;
  double t3851;
  double t3852;
  double t3821;
  double t3835;
  double t3854;
  double t3855;
  double t3860;
  double t3862;
  double t3865;
  double t3867;
  double t3500;
  double t3859;
  double t3868;
  double t3870;
  double t3875;
  double t3877;
  double t3892;
  double t3539;
  double t3908;
  double t3911;
  double t3913;
  double t3916;
  double t3959;
  double t3962;
  double t3968;
  double t3970;
  double t3976;
  double t3977;
  double t3978;
  double t3980;
  double t3983;
  double t3988;
  double t3989;
  double t3991;
  double t3975;
  double t3981;
  double t3992;
  double t3996;
  double t3998;
  double t4000;
  double t4001;
  double t4002;
  double t4004;
  double t4010;
  double t4012;
  double t4013;
  double t3997;
  double t4003;
  double t4014;
  double t4017;
  double t4031;
  double t4035;
  double t4044;
  double t4046;
  double t4066;
  double t4067;
  double t4070;
  double t4075;
  double t4024;
  double t4055;
  double t4082;
  double t4086;
  double t4088;
  double t4090;
  double t4092;
  double t4095;
  double t4169;
  double t4171;
  double t4175;
  double t4183;
  double t4163;
  double t4168;
  double t4189;
  double t4191;
  double t4196;
  double t4197;
  double t4199;
  double t4201;
  double t4207;
  double t4208;
  double t4209;
  double t4215;
  double t4193;
  double t4202;
  double t4216;
  double t4223;
  double t4229;
  double t4230;
  double t4231;
  double t4233;
  double t4226;
  double t4237;
  double t4238;
  double t4243;
  double t4249;
  double t4250;
  double t4276;
  double t4277;
  double t4278;
  double t4281;
  double t3612;
  double t3738;
  double t3755;
  double t3756;
  double t3757;
  double t3758;
  double t3761;
  double t3762;
  double t3764;
  double t3766;
  double t3767;
  double t3778;
  double t3781;
  double t3786;
  double t3789;
  double t3791;
  double t3794;
  double t3873;
  double t3894;
  double t3895;
  double t3896;
  double t3899;
  double t3903;
  double t3904;
  double t3907;
  double t3920;
  double t3921;
  double t3925;
  double t3928;
  double t3930;
  double t3931;
  double t3933;
  double t3935;
  double t3941;
  double t3942;
  double t3944;
  double t3945;
  double t3947;
  double t3948;
  double t3958;
  double t4087;
  double t4096;
  double t4103;
  double t4104;
  double t4106;
  double t4107;
  double t4110;
  double t4112;
  double t4117;
  double t4122;
  double t4123;
  double t4125;
  double t4128;
  double t4137;
  double t4152;
  double t4158;
  double t4242;
  double t4260;
  double t4261;
  double t4267;
  double t4268;
  double t4272;
  double t4274;
  double t4275;
  double t4284;
  double t4285;
  double t4287;
  double t4292;
  double t4294;
  double t4302;
  double t4305;
  double t4309;
  double t4313;
  double t4316;
  double t4319;
  double t4320;
  double t4322;
  double t4324;
  t620 = Cos(var1[12]);
  t735 = -1.*t620;
  t925 = 1. + t735;
  t1525 = Sin(var1[12]);
  t587 = Cos(var1[11]);
  t606 = -1.*t587;
  t612 = 1. + t606;
  t1453 = -0.120666640478*t925;
  t507 = Sin(var1[10]);
  t968 = -0.952469601425*t925;
  t1001 = 1. + t968;
  t1332 = 0.930418*t1001;
  t1546 = -0.803828*t1525;
  t1550 = t1453 + t1546;
  t1577 = 0.366501*t1550;
  t1601 = t1332 + t1577;
  t1617 = Sin(var1[11]);
  t1665 = -0.175248972904*t925;
  t1719 = -0.553471*t1525;
  t1795 = t1665 + t1719;
  t1806 = 0.930418*t1795;
  t1847 = 0.444895486988*t925;
  t1925 = -0.218018*t1525;
  t1928 = t1847 + t1925;
  t1959 = 0.366501*t1928;
  t1996 = t1806 + t1959;
  t2147 = -0.693671301908*t925;
  t2155 = 1. + t2147;
  t2156 = 0.366501*t2155;
  t2165 = 0.803828*t1525;
  t2205 = t1453 + t2165;
  t2216 = 0.930418*t2205;
  t2222 = t2156 + t2216;
  t2534 = Cos(var1[10]);
  t2536 = -1.*t2534;
  t2611 = 1. + t2536;
  t1613 = 0.340999127418*t612*t1601;
  t1629 = 0.930418*t1617;
  t1656 = 0. + t1629;
  t2003 = t1656*t1996;
  t2061 = -0.8656776547239999*t612;
  t2099 = 1. + t2061;
  t2273 = t2099*t2222;
  t2292 = 0. + t1613 + t2003 + t2273;
  t2373 = -0.134322983001*t612;
  t2421 = 1. + t2373;
  t2432 = t2421*t1601;
  t2454 = -0.366501*t1617;
  t2455 = 0. + t2454;
  t2458 = t2455*t1996;
  t2469 = 0.340999127418*t612*t2222;
  t2528 = 0. + t2432 + t2458 + t2469;
  t2622 = 0.366501*t1617;
  t2658 = 0. + t2622;
  t2665 = t2658*t1601;
  t2680 = -1.000000637725*t612;
  t2687 = 1. + t2680;
  t2688 = t2687*t1996;
  t2701 = -0.930418*t1617;
  t2716 = 0. + t2701;
  t2720 = t2716*t2222;
  t2721 = 0. + t2665 + t2688 + t2720;
  t2806 = Cos(var1[9]);
  t2807 = -1.*t2806;
  t2837 = 1. + t2807;
  t192 = Sin(var1[9]);
  t541 = -0.930418*t507;
  t581 = 0. + t541;
  t2315 = t581*t2292;
  t2358 = 0.366501*t507;
  t2372 = 0. + t2358;
  t2532 = t2372*t2528;
  t2612 = -1.000000637725*t2611;
  t2613 = 1. + t2612;
  t2723 = t2613*t2721;
  t2724 = 0. + t2315 + t2532 + t2723;
  t2840 = 0.340999127418*t2611*t2292;
  t2844 = -0.134322983001*t2611;
  t2857 = 1. + t2844;
  t2893 = t2857*t2528;
  t2894 = -0.366501*t507;
  t2897 = 0. + t2894;
  t2903 = t2897*t2721;
  t2914 = 0. + t2840 + t2893 + t2903;
  t2926 = -0.8656776547239999*t2611;
  t2929 = 1. + t2926;
  t2938 = t2929*t2292;
  t2940 = 0.340999127418*t2611*t2528;
  t2969 = 0.930418*t507;
  t2974 = 0. + t2969;
  t2976 = t2974*t2721;
  t2989 = 0. + t2938 + t2940 + t2976;
  t252 = 0.930418*t192;
  t477 = 0. + t252;
  t2776 = t477*t2724;
  t2917 = 0.340999127418*t2837*t2914;
  t2923 = -0.8656776547239999*t2837;
  t2925 = 1. + t2923;
  t2994 = t2925*t2989;
  t2995 = 0. + t2776 + t2917 + t2994;
  t3204 = Cos(var1[8]);
  t3210 = -1.*t3204;
  t3212 = 1. + t3210;
  t3014 = -0.366501*t192;
  t3017 = 0. + t3014;
  t3018 = t3017*t2724;
  t3020 = -0.134322983001*t2837;
  t3021 = 1. + t3020;
  t3035 = t3021*t2914;
  t3036 = 0.340999127418*t2837*t2989;
  t3037 = 0. + t3018 + t3035 + t3036;
  t3168 = Cos(var1[7]);
  t3176 = -1.*t3168;
  t3192 = 1. + t3176;
  t3236 = -1.000000637725*t2837;
  t3242 = 1. + t3236;
  t3244 = t3242*t2724;
  t3253 = 0.366501*t192;
  t3254 = 0. + t3253;
  t3260 = t3254*t2914;
  t3262 = -0.930418*t192;
  t3265 = 0. + t3262;
  t3267 = t3265*t2989;
  t3274 = 0. + t3244 + t3260 + t3267;
  t3281 = Sin(var1[8]);
  t3213 = -0.8656776547239999*t3212;
  t3220 = 1. + t3213;
  t3226 = t3220*t2995;
  t3235 = 0.340999127418*t3212*t3037;
  t3287 = -0.930418*t3281;
  t3291 = 0. + t3287;
  t3293 = t3274*t3291;
  t3297 = 0. + t3226 + t3235 + t3293;
  t3310 = 0.340999127418*t3212*t2995;
  t3313 = -0.134322983001*t3212;
  t3316 = 1. + t3313;
  t3317 = t3316*t3037;
  t3333 = 0.366501*t3281;
  t3352 = 0. + t3333;
  t3355 = t3274*t3352;
  t3364 = 0. + t3310 + t3317 + t3355;
  t3370 = Sin(var1[7]);
  t3385 = -1.000000637725*t3212;
  t3392 = 1. + t3385;
  t3393 = t3392*t3274;
  t3398 = -0.366501*t3281;
  t3406 = 0. + t3398;
  t3412 = t3037*t3406;
  t3415 = 0.930418*t3281;
  t3422 = 0. + t3415;
  t3431 = t2995*t3422;
  t3441 = 0. + t3393 + t3412 + t3431;
  t3457 = Cos(var1[6]);
  t3299 = -0.340999127418*t3192*t3297;
  t3302 = -0.8656776547239999*t3192;
  t3307 = 1. + t3302;
  t3366 = t3307*t3364;
  t3376 = -0.930418*t3370;
  t3384 = 0. + t3376;
  t3444 = t3384*t3441;
  t3445 = 0. + t3299 + t3366 + t3444;
  t3164 = Sin(var1[6]);
  t3458 = -0.134322983001*t3192;
  t3459 = 1. + t3458;
  t3461 = t3459*t3297;
  t3464 = -0.340999127418*t3192*t3364;
  t3465 = -0.366501*t3370;
  t3467 = 0. + t3465;
  t3468 = t3467*t3441;
  t3470 = 0. + t3461 + t3464 + t3468;
  t3480 = Cos(var1[5]);
  t3453 = -1.*t3164*t3445;
  t3473 = t3457*t3470;
  t3474 = 0. + t3453 + t3473;
  t3156 = Sin(var1[5]);
  t3481 = t3457*t3445;
  t3486 = t3164*t3470;
  t3489 = 0. + t3481 + t3486;
  t3540 = 0.366501*t3370;
  t3541 = 0. + t3540;
  t3549 = 0.930418*t3370;
  t3550 = 0. + t3549;
  t3561 = -1.000000637725*t3192;
  t3562 = 1. + t3561;
  t3546 = t3541*t3297;
  t3560 = t3550*t3364;
  t3566 = t3562*t3441;
  t3567 = 0. + t3546 + t3560 + t3566;
  t3615 = -0.353861996165*t925;
  t3624 = 1. + t3615;
  t3628 = -0.594863*t3624;
  t3629 = -0.294604*t1795;
  t3634 = 0.747896*t1928;
  t3635 = t3628 + t3629 + t3634;
  t3640 = -0.294604*t1001;
  t3642 = 0.747896*t1550;
  t3644 = 0.553471*t1525;
  t3645 = t1665 + t3644;
  t3647 = -0.594863*t3645;
  t3649 = t3640 + t3642 + t3647;
  t3657 = 0.747896*t2155;
  t3659 = 0.218018*t1525;
  t3660 = t1847 + t3659;
  t3661 = -0.594863*t3660;
  t3664 = -0.294604*t2205;
  t3666 = t3657 + t3661 + t3664;
  t3636 = t1656*t3635;
  t3650 = 0.340999127418*t612*t3649;
  t3667 = t2099*t3666;
  t3668 = 0. + t3636 + t3650 + t3667;
  t3670 = t2455*t3635;
  t3674 = t2421*t3649;
  t3675 = 0.340999127418*t612*t3666;
  t3677 = 0. + t3670 + t3674 + t3675;
  t3681 = t2687*t3635;
  t3684 = t2658*t3649;
  t3686 = t2716*t3666;
  t3688 = 0. + t3681 + t3684 + t3686;
  t3669 = t581*t3668;
  t3678 = t2372*t3677;
  t3691 = t2613*t3688;
  t3692 = 0. + t3669 + t3678 + t3691;
  t3699 = 0.340999127418*t2611*t3668;
  t3702 = t2857*t3677;
  t3704 = t2897*t3688;
  t3707 = 0. + t3699 + t3702 + t3704;
  t3714 = t2929*t3668;
  t3716 = 0.340999127418*t2611*t3677;
  t3717 = t2974*t3688;
  t3726 = 0. + t3714 + t3716 + t3717;
  t3696 = t477*t3692;
  t3711 = 0.340999127418*t2837*t3707;
  t3734 = t2925*t3726;
  t3737 = 0. + t3696 + t3711 + t3734;
  t3741 = t3017*t3692;
  t3743 = t3021*t3707;
  t3747 = 0.340999127418*t2837*t3726;
  t3748 = 0. + t3741 + t3743 + t3747;
  t3809 = t3242*t3692;
  t3811 = t3254*t3707;
  t3812 = t3265*t3726;
  t3815 = 0. + t3809 + t3811 + t3812;
  t3799 = t3220*t3737;
  t3800 = 0.340999127418*t3212*t3748;
  t3818 = t3815*t3291;
  t3820 = 0. + t3799 + t3800 + t3818;
  t3822 = 0.340999127418*t3212*t3737;
  t3824 = t3316*t3748;
  t3830 = t3815*t3352;
  t3831 = 0. + t3822 + t3824 + t3830;
  t3837 = t3392*t3815;
  t3849 = t3748*t3406;
  t3851 = t3737*t3422;
  t3852 = 0. + t3837 + t3849 + t3851;
  t3821 = -0.340999127418*t3192*t3820;
  t3835 = t3307*t3831;
  t3854 = t3384*t3852;
  t3855 = 0. + t3821 + t3835 + t3854;
  t3860 = t3459*t3820;
  t3862 = -0.340999127418*t3192*t3831;
  t3865 = t3467*t3852;
  t3867 = 0. + t3860 + t3862 + t3865;
  t3500 = Cos(var1[4]);
  t3859 = -1.*t3164*t3855;
  t3868 = t3457*t3867;
  t3870 = 0. + t3859 + t3868;
  t3875 = t3457*t3855;
  t3877 = t3164*t3867;
  t3892 = 0. + t3875 + t3877;
  t3539 = Sin(var1[4]);
  t3908 = t3541*t3820;
  t3911 = t3550*t3831;
  t3913 = t3562*t3852;
  t3916 = 0. + t3908 + t3911 + t3913;
  t3959 = 0.803828*t3624;
  t3962 = -0.218018*t1795;
  t3968 = 0.553471*t1928;
  t3970 = t3959 + t3962 + t3968;
  t3976 = -0.218018*t1001;
  t3977 = 0.553471*t1550;
  t3978 = 0.803828*t3645;
  t3980 = t3976 + t3977 + t3978;
  t3983 = 0.553471*t2155;
  t3988 = 0.803828*t3660;
  t3989 = -0.218018*t2205;
  t3991 = t3983 + t3988 + t3989;
  t3975 = t1656*t3970;
  t3981 = 0.340999127418*t612*t3980;
  t3992 = t2099*t3991;
  t3996 = 0. + t3975 + t3981 + t3992;
  t3998 = t2455*t3970;
  t4000 = t2421*t3980;
  t4001 = 0.340999127418*t612*t3991;
  t4002 = 0. + t3998 + t4000 + t4001;
  t4004 = t2687*t3970;
  t4010 = t2658*t3980;
  t4012 = t2716*t3991;
  t4013 = 0. + t4004 + t4010 + t4012;
  t3997 = t581*t3996;
  t4003 = t2372*t4002;
  t4014 = t2613*t4013;
  t4017 = 0. + t3997 + t4003 + t4014;
  t4031 = 0.340999127418*t2611*t3996;
  t4035 = t2857*t4002;
  t4044 = t2897*t4013;
  t4046 = 0. + t4031 + t4035 + t4044;
  t4066 = t2929*t3996;
  t4067 = 0.340999127418*t2611*t4002;
  t4070 = t2974*t4013;
  t4075 = 0. + t4066 + t4067 + t4070;
  t4024 = t477*t4017;
  t4055 = 0.340999127418*t2837*t4046;
  t4082 = t2925*t4075;
  t4086 = 0. + t4024 + t4055 + t4082;
  t4088 = t3017*t4017;
  t4090 = t3021*t4046;
  t4092 = 0.340999127418*t2837*t4075;
  t4095 = 0. + t4088 + t4090 + t4092;
  t4169 = t3242*t4017;
  t4171 = t3254*t4046;
  t4175 = t3265*t4075;
  t4183 = 0. + t4169 + t4171 + t4175;
  t4163 = t3220*t4086;
  t4168 = 0.340999127418*t3212*t4095;
  t4189 = t4183*t3291;
  t4191 = 0. + t4163 + t4168 + t4189;
  t4196 = 0.340999127418*t3212*t4086;
  t4197 = t3316*t4095;
  t4199 = t4183*t3352;
  t4201 = 0. + t4196 + t4197 + t4199;
  t4207 = t3392*t4183;
  t4208 = t4095*t3406;
  t4209 = t4086*t3422;
  t4215 = 0. + t4207 + t4208 + t4209;
  t4193 = -0.340999127418*t3192*t4191;
  t4202 = t3307*t4201;
  t4216 = t3384*t4215;
  t4223 = 0. + t4193 + t4202 + t4216;
  t4229 = t3459*t4191;
  t4230 = -0.340999127418*t3192*t4201;
  t4231 = t3467*t4215;
  t4233 = 0. + t4229 + t4230 + t4231;
  t4226 = -1.*t3164*t4223;
  t4237 = t3457*t4233;
  t4238 = 0. + t4226 + t4237;
  t4243 = t3457*t4223;
  t4249 = t3164*t4233;
  t4250 = 0. + t4243 + t4249;
  t4276 = t3541*t4191;
  t4277 = t3550*t4201;
  t4278 = t3562*t4215;
  t4281 = 0. + t4276 + t4277 + t4278;
  t3612 = 1.8632400006213246e-7*var2[12];
  t3738 = 0.366501*t3737;
  t3755 = 0.930418*t3748;
  t3756 = 0. + t3738 + t3755;
  t3757 = var2[8]*t3756;
  t3758 = -0.930418*t3707;
  t3761 = -0.366501*t3726;
  t3762 = 0. + t3758 + t3761;
  t3764 = var2[9]*t3762;
  t3766 = -0.366501*t3668;
  t3767 = -0.930418*t3677;
  t3778 = 0. + t3766 + t3767;
  t3781 = var2[10]*t3778;
  t3786 = -0.930418*t3649;
  t3789 = -0.366501*t3666;
  t3791 = 0. + t3786 + t3789;
  t3794 = var2[11]*t3791;
  t3873 = -1.*t3156*t3870;
  t3894 = t3480*t3892;
  t3895 = 0. + t3873 + t3894;
  t3896 = var2[4]*t3895;
  t3899 = t3480*t3870;
  t3903 = t3156*t3892;
  t3904 = 0. + t3899 + t3903;
  t3907 = t3500*t3904;
  t3920 = -1.*t3539*t3916;
  t3921 = 0. + t3907 + t3920;
  t3925 = var2[3]*t3921;
  t3928 = -0.930418*t3820;
  t3930 = 0.366501*t3831;
  t3931 = 0. + t3928 + t3930;
  t3933 = var2[7]*t3931;
  t3935 = -1.*t3541*t3820;
  t3941 = -1.*t3550*t3831;
  t3942 = -1.*t3562*t3852;
  t3944 = 0. + t3935 + t3941 + t3942;
  t3945 = var2[6]*t3944;
  t3947 = var2[5]*t3916;
  t3948 = t3612 + t3757 + t3764 + t3781 + t3794 + t3896 + t3925 + t3933 + t3945 + t3947;
  t3958 = 1.000001449749*var2[12];
  t4087 = 0.366501*t4086;
  t4096 = 0.930418*t4095;
  t4103 = 0. + t4087 + t4096;
  t4104 = var2[8]*t4103;
  t4106 = -0.930418*t4046;
  t4107 = -0.366501*t4075;
  t4110 = 0. + t4106 + t4107;
  t4112 = var2[9]*t4110;
  t4117 = -0.366501*t3996;
  t4122 = -0.930418*t4002;
  t4123 = 0. + t4117 + t4122;
  t4125 = var2[10]*t4123;
  t4128 = -0.930418*t3980;
  t4137 = -0.366501*t3991;
  t4152 = 0. + t4128 + t4137;
  t4158 = var2[11]*t4152;
  t4242 = -1.*t3156*t4238;
  t4260 = t3480*t4250;
  t4261 = 0. + t4242 + t4260;
  t4267 = var2[4]*t4261;
  t4268 = t3480*t4238;
  t4272 = t3156*t4250;
  t4274 = 0. + t4268 + t4272;
  t4275 = t3500*t4274;
  t4284 = -1.*t3539*t4281;
  t4285 = 0. + t4275 + t4284;
  t4287 = var2[3]*t4285;
  t4292 = -0.930418*t4191;
  t4294 = 0.366501*t4201;
  t4302 = 0. + t4292 + t4294;
  t4305 = var2[7]*t4302;
  t4309 = -1.*t3541*t4191;
  t4313 = -1.*t3550*t4201;
  t4316 = -1.*t3562*t4215;
  t4319 = 0. + t4309 + t4313 + t4316;
  t4320 = var2[6]*t4319;
  t4322 = var2[5]*t4281;
  t4324 = t3958 + t4104 + t4112 + t4125 + t4158 + t4267 + t4287 + t4305 + t4320 + t4322;
  p_output1[0]=0.00187*((0. + (0. + t3474*t3480 + t3156*t3489)*t3500 - 1.*t3539*t3567)*var2[3] + (0. - 1.*t3156*t3474 + t3480*t3489)*var2[4] + t3567*var2[5] + (0. - 1.*t3297*t3541 - 1.*t3364*t3550 - 1.*t3441*t3562)*var2[6] + (0. - 0.930418*t3297 + 0.366501*t3364)*var2[7] + (0. + 0.366501*t2995 + 0.930418*t3037)*var2[8] + (0. - 0.930418*t2914 - 0.366501*t2989)*var2[9] + (0. - 0.366501*t2292 - 0.930418*t2528)*var2[10] + (0. - 0.930418*t1601 - 0.366501*t2222)*var2[11] - 1.9655299995924302e-7*var2[12]);
  p_output1[1]=0.00162*t3948 + 0.00057*t4324;
  p_output1[2]=0.00057*t3948 + 0.00084*t4324;
}



void AMBody_left_toe_roll_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
