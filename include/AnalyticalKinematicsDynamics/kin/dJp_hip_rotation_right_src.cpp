/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:44:30 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dJp_hip_rotation_right_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1404;
  double t638;
  double t53;
  double t740;
  double t1084;
  double t1365;
  double t54;
  double t220;
  double t1865;
  double t2487;
  double t3366;
  double t3407;
  double t1787;
  double t3187;
  double t3199;
  double t3270;
  double t3497;
  double t3500;
  double t3511;
  double t2964;
  double t3015;
  double t1417;
  double t1429;
  double t1577;
  double t1603;
  double t1385;
  double t1492;
  double t1750;
  double t1760;
  double t362;
  double t460;
  double t4824;
  double t2004;
  double t2027;
  double t2211;
  double t2280;
  double t2659;
  double t2709;
  double t3038;
  double t3142;
  double t4879;
  double t4897;
  double t4898;
  double t4946;
  double t4951;
  double t4954;
  double t3337;
  double t3347;
  double t3421;
  double t3473;
  double t4983;
  double t4987;
  double t4989;
  double t3796;
  double t3986;
  double t5064;
  double t5090;
  double t5092;
  double t4449;
  double t4454;
  double t4574;
  double t4576;
  double t5168;
  double t5170;
  double t5176;
  double t5188;
  double t5196;
  double t5216;
  double t5232;
  double t5233;
  double t5236;
  double t5256;
  double t5265;
  double t5274;
  double t5409;
  double t5414;
  double t5415;
  double t5494;
  double t5498;
  double t5509;
  double t5516;
  double t5518;
  double t5521;
  double t5523;
  double t5529;
  double t5606;
  double t5610;
  double t5611;
  double t5625;
  double t5633;
  double t5634;
  double t5725;
  double t5734;
  double t5740;
  double t5746;
  double t5751;
  double t5754;
  double t5759;
  double t5760;
  double t5836;
  double t5838;
  double t5840;
  double t5852;
  double t5854;
  double t5855;
  double t5857;
  double t5858;
  double t5861;
  double t5374;
  double t5379;
  double t5381;
  double t5395;
  double t5397;
  double t5400;
  double t5405;
  double t5406;
  double t5408;
  double t5916;
  double t5917;
  double t5280;
  double t5645;
  double t6087;
  double t6091;
  double t6095;
  double t6139;
  double t6146;
  double t6148;
  double t5665;
  double t707;
  double t1801;
  double t2604;
  double t3300;
  double t3551;
  double t3651;
  double t3668;
  double t4134;
  double t4199;
  double t4244;
  double t4438;
  double t4455;
  double t4473;
  double t4500;
  double t4514;
  double t4608;
  double t4623;
  double t4664;
  double t4672;
  double t4677;
  double t4779;
  double t4839;
  double t5109;
  double t6249;
  double t6252;
  double t6255;
  double t6265;
  double t6266;
  double t6267;
  double t5122;
  double t5136;
  double t5598;
  double t5600;
  double t5601;
  double t5623;
  double t5635;
  double t5644;
  double t5649;
  double t5651;
  double t5658;
  double t5660;
  double t5664;
  double t5668;
  double t5675;
  double t5679;
  double t5687;
  double t5691;
  double t5692;
  double t5693;
  double t5709;
  double t6328;
  double t6330;
  double t6340;
  double t6419;
  double t6421;
  double t6425;
  double t5977;
  double t5991;
  double t6562;
  double t6563;
  double t6570;
  double t6578;
  double t6580;
  double t6584;
  double t6010;
  double t6027;
  double t6648;
  double t6649;
  double t6650;
  double t6656;
  double t6660;
  double t6661;
  double t6706;
  double t6711;
  double t6713;
  double t6719;
  double t6722;
  double t6723;
  double t6754;
  double t6755;
  double t6761;
  double t6828;
  double t6830;
  double t6831;
  double t6136;
  double t6138;
  double t6149;
  double t6153;
  double t6154;
  double t6155;
  double t6156;
  double t6158;
  double t6161;
  double t6163;
  double t6165;
  double t6167;
  double t6169;
  double t6172;
  double t6173;
  double t6174;
  double t6879;
  double t6881;
  double t5783;
  double t4912;
  double t4956;
  double t5039;
  double t5105;
  double t5114;
  double t5115;
  double t5123;
  double t5125;
  double t5152;
  double t5155;
  double t5493;
  double t5511;
  double t5522;
  double t5534;
  double t5535;
  double t5537;
  double t5541;
  double t5544;
  double t5545;
  double t5548;
  double t5555;
  double t5556;
  double t5557;
  double t5563;
  double t5568;
  double t5573;
  double t5589;
  double t6415;
  double t6416;
  double t6418;
  double t6431;
  double t6438;
  double t6439;
  double t6444;
  double t6445;
  double t6452;
  double t6456;
  double t6457;
  double t6458;
  double t6459;
  double t6460;
  double t6462;
  double t6477;
  double t5744;
  double t5745;
  double t5753;
  double t5763;
  double t5764;
  double t5765;
  double t5774;
  double t5775;
  double t5781;
  double t5797;
  double t5809;
  double t5811;
  double t5812;
  double t5813;
  double t5819;
  double t5823;
  double t7023;
  double t7025;
  double t7034;
  double t7040;
  double t7043;
  double t7045;
  double t7050;
  double t7051;
  double t7083;
  double t7084;
  double t5979;
  double t5980;
  double t5985;
  double t5990;
  double t5999;
  double t6013;
  double t6018;
  double t6028;
  double t6031;
  double t6638;
  double t6644;
  double t6651;
  double t6662;
  double t6664;
  double t6668;
  double t6679;
  double t6683;
  double t6693;
  double t6694;
  double t7186;
  double t7187;
  double t7188;
  double t7190;
  double t7195;
  double t7197;
  double t6704;
  double t6705;
  double t6718;
  double t6727;
  double t6729;
  double t6730;
  double t6731;
  double t6732;
  double t6734;
  double t6735;
  double t6736;
  double t6737;
  double t6740;
  double t6741;
  double t6742;
  double t6743;
  double t6746;
  double t6066;
  double t6068;
  double t6083;
  double t6100;
  double t6101;
  double t6103;
  double t6105;
  double t6107;
  double t6108;
  double t6109;
  double t6110;
  double t6112;
  double t6119;
  double t6121;
  double t6124;
  double t6128;
  double t6875;
  double t6878;
  double t6885;
  double t6890;
  double t6891;
  double t6893;
  double t6894;
  double t6902;
  double t6904;
  double t6905;
  double t6919;
  double t6920;
  double t6929;
  double t6930;
  double t6936;
  double t6941;
  double t7303;
  double t7306;
  double t5878;
  double t5938;
  double t5177;
  double t5228;
  double t5242;
  double t5277;
  double t5282;
  double t5284;
  double t5286;
  double t5289;
  double t5294;
  double t5308;
  double t5311;
  double t5312;
  double t5314;
  double t5323;
  double t5328;
  double t5346;
  double t6324;
  double t6327;
  double t6346;
  double t6348;
  double t6351;
  double t6368;
  double t6371;
  double t6377;
  double t6383;
  double t6384;
  double t6387;
  double t6395;
  double t6397;
  double t6405;
  double t6408;
  double t6409;
  double t5832;
  double t5851;
  double t5856;
  double t5862;
  double t5870;
  double t5872;
  double t5873;
  double t5874;
  double t5876;
  double t5882;
  double t5884;
  double t5885;
  double t5890;
  double t5892;
  double t5897;
  double t5905;
  double t7036;
  double t7037;
  double t7047;
  double t7052;
  double t7057;
  double t7058;
  double t7059;
  double t7060;
  double t7062;
  double t7064;
  double t7065;
  double t7066;
  double t7067;
  double t7068;
  double t7069;
  double t7073;
  double t7077;
  double t7398;
  double t7405;
  double t7421;
  double t7423;
  double t7461;
  double t7159;
  double t7161;
  double t7162;
  double t7165;
  double t7170;
  double t7171;
  double t7176;
  double t7181;
  double t7189;
  double t7199;
  double t7200;
  double t7202;
  double t7203;
  double t7204;
  double t7207;
  double t7209;
  double t7212;
  double t7220;
  double t7222;
  double t7223;
  double t7224;
  double t7228;
  double t7229;
  double t6818;
  double t6820;
  double t6823;
  double t6833;
  double t6834;
  double t6838;
  double t6839;
  double t6845;
  double t6847;
  double t6849;
  double t6850;
  double t6855;
  double t6857;
  double t6858;
  double t6859;
  double t6863;
  double t6864;
  double t6181;
  double t6182;
  double t6184;
  double t6194;
  double t6197;
  double t6204;
  double t6205;
  double t6206;
  double t6208;
  double t6213;
  double t6216;
  double t6219;
  double t6221;
  double t6222;
  double t6224;
  double t6229;
  double t6230;
  double t6236;
  double t6237;
  double t6948;
  double t6951;
  double t6952;
  double t6956;
  double t6958;
  double t6959;
  double t6964;
  double t6967;
  double t6970;
  double t6972;
  double t6975;
  double t6976;
  double t6978;
  double t6980;
  double t6994;
  double t7343;
  double t7344;
  double t7353;
  double t7354;
  double t7356;
  double t7357;
  double t7361;
  double t7362;
  double t7363;
  double t7364;
  double t7366;
  double t7372;
  double t7373;
  double t7377;
  double t5387;
  double t5403;
  double t5416;
  double t5419;
  double t5434;
  double t5456;
  double t5460;
  double t5461;
  double t5462;
  double t5463;
  double t5464;
  double t5466;
  double t5467;
  double t5470;
  double t5473;
  double t5474;
  double t5477;
  double t5478;
  double t5481;
  double t6483;
  double t6486;
  double t6487;
  double t6488;
  double t6497;
  double t6502;
  double t6505;
  double t6508;
  double t6509;
  double t6511;
  double t6512;
  double t6514;
  double t6515;
  double t6520;
  double t6522;
  double t6525;
  double t6531;
  double t6532;
  double t6540;
  double t5908;
  double t5914;
  double t5925;
  double t5926;
  double t5927;
  double t5928;
  double t5935;
  double t5936;
  double t5937;
  double t5948;
  double t5951;
  double t5955;
  double t5957;
  double t5960;
  double t5961;
  double t5962;
  double t5972;
  double t5974;
  double t7087;
  double t7092;
  double t7098;
  double t7100;
  double t7101;
  double t7102;
  double t7110;
  double t7113;
  double t7115;
  double t7118;
  double t7122;
  double t7123;
  double t7124;
  double t7125;
  double t7126;
  double t7468;
  double t7471;
  double t7474;
  double t7475;
  double t7476;
  double t7491;
  double t7493;
  double t7495;
  double t7496;
  double t7499;
  double t7500;
  double t7501;
  double t7506;
  double t7510;
  double t7517;
  double t7565;
  double t7566;
  double t7567;
  double t7571;
  double t7572;
  double t7573;
  double t7575;
  double t7576;
  double t7578;
  double t7638;
  double t7646;
  double t7530;
  double t7533;
  double t7534;
  double t7535;
  double t7536;
  double t7537;
  double t7538;
  double t7539;
  double t7540;
  double t7541;
  double t7542;
  double t7543;
  double t7544;
  double t7545;
  double t7547;
  double t7240;
  double t7242;
  double t7245;
  double t7247;
  double t7253;
  double t7254;
  double t7255;
  double t7256;
  double t7262;
  double t7263;
  double t7264;
  double t7265;
  double t7270;
  double t7272;
  double t7274;
  double t6749;
  double t6763;
  double t6766;
  double t6767;
  double t6777;
  double t6783;
  double t6786;
  double t6787;
  double t6788;
  double t6789;
  double t6790;
  double t6795;
  double t6797;
  double t6799;
  double t6800;
  double t6804;
  double t6808;
  double t6809;
  double t6810;
  t1404 = Sin(var1[18]);
  t638 = Sin(var1[3]);
  t53 = Cos(var1[4]);
  t740 = Cos(var1[18]);
  t1084 = -1.*t740;
  t1365 = 1. + t1084;
  t54 = Cos(var1[5]);
  t220 = Sin(var1[17]);
  t1865 = Cos(var1[17]);
  t2487 = Sin(var1[5]);
  t3366 = -0.366501*t1404;
  t3407 = 0. + t3366;
  t1787 = Sin(var1[4]);
  t3187 = t53*t54*t220*t638;
  t3199 = -1.*t1865*t53*t638*t2487;
  t3270 = t3187 + t3199;
  t3497 = -1.*t1865*t53*t54*t638;
  t3500 = -1.*t53*t220*t638*t2487;
  t3511 = t3497 + t3500;
  t2964 = 0.930418*t1404;
  t3015 = 0. + t2964;
  t1417 = -0.930418*t1404;
  t1429 = 0. + t1417;
  t1577 = 0.366501*t1404;
  t1603 = 0. + t1577;
  t1385 = -0.04500040093286238*t1365;
  t1492 = -0.07877663122399998*t1429;
  t1750 = 0.031030906668*t1603;
  t1760 = 0. + t1385 + t1492 + t1750;
  t362 = -0.091*t220;
  t460 = 0. + t362;
  t4824 = Cos(var1[3]);
  t2004 = -1.*t1865;
  t2027 = 1. + t2004;
  t2211 = -0.091*t2027;
  t2280 = 0. + t2211;
  t2659 = 1.296332362046933e-7*var1[18];
  t2709 = -0.07877668146182712*t1365;
  t3038 = -0.045000372235*t3015;
  t3142 = t2659 + t2709 + t3038;
  t4879 = -1.*t4824*t54*t1787;
  t4897 = -1.*t638*t2487;
  t4898 = t4879 + t4897;
  t4946 = t54*t638;
  t4951 = -1.*t4824*t1787*t2487;
  t4954 = t4946 + t4951;
  t3337 = 3.2909349868922137e-7*var1[18];
  t3347 = 0.03103092645718495*t1365;
  t3421 = -0.045000372235*t3407;
  t3473 = t3337 + t3347 + t3421;
  t4983 = -1.*t220*t4898;
  t4987 = t1865*t4954;
  t4989 = t4983 + t4987;
  t3796 = -0.134322983001*t1365;
  t3986 = 1. + t3796;
  t5064 = t1865*t4898;
  t5090 = t220*t4954;
  t5092 = t5064 + t5090;
  t4449 = -0.8656776547239999*t1365;
  t4454 = 1. + t4449;
  t4574 = -1.000000637725*t1365;
  t4576 = 1. + t4574;
  t5168 = -1.*t54*t638*t1787;
  t5170 = t4824*t2487;
  t5176 = t5168 + t5170;
  t5188 = -1.*t4824*t54;
  t5196 = -1.*t638*t1787*t2487;
  t5216 = t5188 + t5196;
  t5232 = -1.*t220*t5176;
  t5233 = t1865*t5216;
  t5236 = t5232 + t5233;
  t5256 = -1.*t1865*t5176;
  t5265 = -1.*t220*t5216;
  t5274 = t5256 + t5265;
  t5409 = t1865*t5176;
  t5414 = t220*t5216;
  t5415 = t5409 + t5414;
  t5494 = t4824*t54;
  t5498 = t638*t1787*t2487;
  t5509 = t5494 + t5498;
  t5516 = t220*t5176;
  t5518 = t1865*t5509;
  t5521 = t5516 + t5518;
  t5523 = -1.*t220*t5509;
  t5529 = t5409 + t5523;
  t5606 = -1.*t4824*t53*t54*t220;
  t5610 = t1865*t4824*t53*t2487;
  t5611 = t5606 + t5610;
  t5625 = t1865*t4824*t53*t54;
  t5633 = t4824*t53*t220*t2487;
  t5634 = t5625 + t5633;
  t5725 = t4824*t54*t1787;
  t5734 = t638*t2487;
  t5740 = t5725 + t5734;
  t5746 = t220*t5740;
  t5751 = t5746 + t4987;
  t5754 = t1865*t5740;
  t5759 = -1.*t220*t4954;
  t5760 = t5754 + t5759;
  t5836 = -1.*t54*t638;
  t5838 = t4824*t1787*t2487;
  t5840 = t5836 + t5838;
  t5852 = -1.*t220*t5740;
  t5854 = t1865*t5840;
  t5855 = t5852 + t5854;
  t5857 = -1.*t1865*t5740;
  t5858 = -1.*t220*t5840;
  t5861 = t5857 + t5858;
  t5374 = 0.0846680539949003*t740;
  t5379 = -0.04500040093286238*t1404;
  t5381 = t5374 + t5379;
  t5395 = -0.04186915633414423*t740;
  t5397 = -0.07877668146182712*t1404;
  t5400 = 1.296332362046933e-7 + t5395 + t5397;
  t5405 = 0.016492681424499736*t740;
  t5406 = 0.03103092645718495*t1404;
  t5408 = 3.2909349868922137e-7 + t5405 + t5406;
  t5916 = t220*t5840;
  t5917 = t5754 + t5916;
  t5280 = 0.340999127418*t1365*t5236;
  t5645 = 0.340999127418*t1365*t5611;
  t6087 = -1.*t1865*t4824*t53*t54;
  t6091 = -1.*t4824*t53*t220*t2487;
  t6095 = t6087 + t6091;
  t6139 = t4824*t53*t54*t220;
  t6146 = -1.*t1865*t4824*t53*t2487;
  t6148 = t6139 + t6146;
  t5665 = 0.340999127418*t1365*t5634;
  t707 = -1.*t53*t54*t460*t638;
  t1801 = t1760*t638*t1787;
  t2604 = -1.*t2280*t53*t638*t2487;
  t3300 = t3142*t3270;
  t3551 = t3473*t3511;
  t3651 = t3407*t638*t1787;
  t3668 = 0.340999127418*t1365*t3270;
  t4134 = t3986*t3511;
  t4199 = t3651 + t3668 + t4134;
  t4244 = -0.046986*t4199;
  t4438 = t3015*t638*t1787;
  t4455 = t4454*t3270;
  t4473 = 0.340999127418*t1365*t3511;
  t4500 = t4438 + t4455 + t4473;
  t4514 = -0.109508*t4500;
  t4608 = t4576*t638*t1787;
  t4623 = t1429*t3270;
  t4664 = t1603*t3511;
  t4672 = t4608 + t4623 + t4664;
  t4677 = -0.045*t4672;
  t4779 = t707 + t1801 + t2604 + t3300 + t3551 + t4244 + t4514 + t4677;
  t4839 = -1.*t4824*t53*t1760;
  t5109 = -1.*t4824*t53*t3407;
  t6249 = t4824*t54*t220*t1787;
  t6252 = -1.*t1865*t4824*t1787*t2487;
  t6255 = t6249 + t6252;
  t6265 = -1.*t1865*t4824*t54*t1787;
  t6266 = -1.*t4824*t220*t1787*t2487;
  t6267 = t6265 + t6266;
  t5122 = -1.*t4824*t53*t3015;
  t5136 = -1.*t4576*t4824*t53;
  t5598 = t4824*t53*t54*t460;
  t5600 = -1.*t4824*t1760*t1787;
  t5601 = t2280*t4824*t53*t2487;
  t5623 = t3142*t5611;
  t5635 = t3473*t5634;
  t5644 = -1.*t4824*t3407*t1787;
  t5649 = t3986*t5634;
  t5651 = t5644 + t5645 + t5649;
  t5658 = -0.046986*t5651;
  t5660 = -1.*t4824*t3015*t1787;
  t5664 = t4454*t5611;
  t5668 = t5660 + t5664 + t5665;
  t5675 = -0.109508*t5668;
  t5679 = -1.*t4576*t4824*t1787;
  t5687 = t1429*t5611;
  t5691 = t1603*t5634;
  t5692 = t5679 + t5687 + t5691;
  t5693 = -0.045*t5692;
  t5709 = t5598 + t5600 + t5601 + t5623 + t5635 + t5658 + t5675 + t5693;
  t6328 = -1.*t53*t54*t220*t638;
  t6330 = t1865*t53*t638*t2487;
  t6340 = t6328 + t6330;
  t6419 = t1865*t53*t54*t638;
  t6421 = t53*t220*t638*t2487;
  t6425 = t6419 + t6421;
  t5977 = -1.*t53*t1760*t638;
  t5991 = -1.*t53*t3407*t638;
  t6562 = t54*t220*t638*t1787;
  t6563 = -1.*t1865*t638*t1787*t2487;
  t6570 = t6562 + t6563;
  t6578 = -1.*t1865*t54*t638*t1787;
  t6580 = -1.*t220*t638*t1787*t2487;
  t6584 = t6578 + t6580;
  t6010 = -1.*t53*t3015*t638;
  t6027 = -1.*t4576*t53*t638;
  t6648 = t53*t54*t220;
  t6649 = -1.*t1865*t53*t2487;
  t6650 = t6648 + t6649;
  t6656 = -1.*t1865*t53*t54;
  t6660 = -1.*t53*t220*t2487;
  t6661 = t6656 + t6660;
  t6706 = -1.*t54*t220*t1787;
  t6711 = t1865*t1787*t2487;
  t6713 = t6706 + t6711;
  t6719 = -1.*t1865*t54*t1787;
  t6722 = -1.*t220*t1787*t2487;
  t6723 = t6719 + t6722;
  t6754 = t54*t220*t1787;
  t6755 = -1.*t1865*t1787*t2487;
  t6761 = t6754 + t6755;
  t6828 = t1865*t54*t1787;
  t6830 = t220*t1787*t2487;
  t6831 = t6828 + t6830;
  t6136 = t2280*t4824*t53*t54;
  t6138 = -1.*t4824*t53*t460*t2487;
  t6149 = t3473*t6148;
  t6153 = t3142*t5634;
  t6154 = 0.340999127418*t1365*t6148;
  t6155 = t4454*t5634;
  t6156 = t6154 + t6155;
  t6158 = -0.109508*t6156;
  t6161 = t3986*t6148;
  t6163 = t6161 + t5665;
  t6165 = -0.046986*t6163;
  t6167 = t1603*t6148;
  t6169 = t1429*t5634;
  t6172 = t6167 + t6169;
  t6173 = -0.045*t6172;
  t6174 = t6136 + t6138 + t6149 + t6153 + t6158 + t6165 + t6173;
  t6879 = -1.*t1865*t4954;
  t6881 = t5852 + t6879;
  t5783 = 0.340999127418*t1365*t5760;
  t4912 = t460*t4898;
  t4956 = t2280*t4954;
  t5039 = t3142*t4989;
  t5105 = t3473*t5092;
  t5114 = 0.340999127418*t1365*t4989;
  t5115 = t3986*t5092;
  t5123 = t4454*t4989;
  t5125 = 0.340999127418*t1365*t5092;
  t5152 = t1429*t4989;
  t5155 = t1603*t5092;
  t5493 = t2280*t5176;
  t5511 = t460*t5509;
  t5522 = t3473*t5521;
  t5534 = t3142*t5529;
  t5535 = 0.340999127418*t1365*t5521;
  t5537 = t4454*t5529;
  t5541 = t5535 + t5537;
  t5544 = -0.109508*t5541;
  t5545 = t3986*t5521;
  t5548 = 0.340999127418*t1365*t5529;
  t5555 = t5545 + t5548;
  t5556 = -0.046986*t5555;
  t5557 = t1603*t5521;
  t5563 = t1429*t5529;
  t5568 = t5557 + t5563;
  t5573 = -0.045*t5568;
  t5589 = t5493 + t5511 + t5522 + t5534 + t5544 + t5556 + t5573;
  t6415 = t2280*t53*t54*t638;
  t6416 = -1.*t53*t460*t638*t2487;
  t6418 = t3473*t3270;
  t6431 = t3142*t6425;
  t6438 = t4454*t6425;
  t6439 = t3668 + t6438;
  t6444 = -0.109508*t6439;
  t6445 = t3986*t3270;
  t6452 = 0.340999127418*t1365*t6425;
  t6456 = t6445 + t6452;
  t6457 = -0.046986*t6456;
  t6458 = t1603*t3270;
  t6459 = t1429*t6425;
  t6460 = t6458 + t6459;
  t6462 = -0.045*t6460;
  t6477 = t6415 + t6416 + t6418 + t6431 + t6444 + t6457 + t6462;
  t5744 = t2280*t5740;
  t5745 = t460*t4954;
  t5753 = t3473*t5751;
  t5763 = t3142*t5760;
  t5764 = 0.340999127418*t1365*t5751;
  t5765 = t4454*t5760;
  t5774 = t5764 + t5765;
  t5775 = -0.109508*t5774;
  t5781 = t3986*t5751;
  t5797 = t5781 + t5783;
  t5809 = -0.046986*t5797;
  t5811 = t1603*t5751;
  t5812 = t1429*t5760;
  t5813 = t5811 + t5812;
  t5819 = -0.045*t5813;
  t5823 = t5744 + t5745 + t5753 + t5763 + t5775 + t5809 + t5819;
  t7023 = t54*t638*t1787;
  t7025 = -1.*t4824*t2487;
  t7034 = t7023 + t7025;
  t7040 = -1.*t220*t7034;
  t7043 = -1.*t1865*t5216;
  t7045 = t7040 + t7043;
  t7050 = t1865*t7034;
  t7051 = t7050 + t5265;
  t7083 = t220*t7034;
  t7084 = t7083 + t5233;
  t5979 = t460*t5176;
  t5980 = t2280*t5216;
  t5985 = t3142*t5236;
  t5990 = t3473*t5415;
  t5999 = t3986*t5415;
  t6013 = t4454*t5236;
  t6018 = 0.340999127418*t1365*t5415;
  t6028 = t1429*t5236;
  t6031 = t1603*t5415;
  t6638 = -1.*t53*t54*t460;
  t6644 = -1.*t2280*t53*t2487;
  t6651 = t3142*t6650;
  t6662 = t3473*t6661;
  t6664 = 0.340999127418*t1365*t6650;
  t6668 = t3986*t6661;
  t6679 = t4454*t6650;
  t6683 = 0.340999127418*t1365*t6661;
  t6693 = t1429*t6650;
  t6694 = t1603*t6661;
  t7186 = -1.*t53*t54*t220;
  t7187 = t1865*t53*t2487;
  t7188 = t7186 + t7187;
  t7190 = t1865*t53*t54;
  t7195 = t53*t220*t2487;
  t7197 = t7190 + t7195;
  t6704 = -1.*t2280*t54*t1787;
  t6705 = t460*t1787*t2487;
  t6718 = t3473*t6713;
  t6727 = t3142*t6723;
  t6729 = 0.340999127418*t1365*t6713;
  t6730 = t4454*t6723;
  t6731 = t6729 + t6730;
  t6732 = -0.109508*t6731;
  t6734 = t3986*t6713;
  t6735 = 0.340999127418*t1365*t6723;
  t6736 = t6734 + t6735;
  t6737 = -0.046986*t6736;
  t6740 = t1603*t6713;
  t6741 = t1429*t6723;
  t6742 = t6740 + t6741;
  t6743 = -0.045*t6742;
  t6746 = t6704 + t6705 + t6718 + t6727 + t6732 + t6737 + t6743;
  t6066 = -0.091*t1865*t4824*t53*t54;
  t6068 = -0.091*t4824*t53*t220*t2487;
  t6083 = t3473*t5611;
  t6100 = t3142*t6095;
  t6101 = t4454*t6095;
  t6103 = t5645 + t6101;
  t6105 = -0.109508*t6103;
  t6107 = t3986*t5611;
  t6108 = 0.340999127418*t1365*t6095;
  t6109 = t6107 + t6108;
  t6110 = -0.046986*t6109;
  t6112 = t1603*t5611;
  t6119 = t1429*t6095;
  t6121 = t6112 + t6119;
  t6124 = -0.045*t6121;
  t6128 = t6066 + t6068 + t6083 + t6100 + t6105 + t6110 + t6124;
  t6875 = -0.091*t220*t5740;
  t6878 = -0.091*t1865*t4954;
  t6885 = t3142*t6881;
  t6890 = t3473*t5760;
  t6891 = 0.340999127418*t1365*t6881;
  t6893 = t3986*t5760;
  t6894 = t6891 + t6893;
  t6902 = -0.046986*t6894;
  t6904 = t4454*t6881;
  t6905 = t6904 + t5783;
  t6919 = -0.109508*t6905;
  t6920 = t1429*t6881;
  t6929 = t1603*t5760;
  t6930 = t6920 + t6929;
  t6936 = -0.045*t6930;
  t6941 = t6875 + t6878 + t6885 + t6890 + t6902 + t6919 + t6936;
  t7303 = -1.*t1865*t5840;
  t7306 = t5746 + t7303;
  t5878 = 0.340999127418*t1365*t5861;
  t5938 = 0.340999127418*t1404*t5855;
  t5177 = -0.091*t1865*t5176;
  t5228 = -0.091*t220*t5216;
  t5242 = t3473*t5236;
  t5277 = t3142*t5274;
  t5282 = t4454*t5274;
  t5284 = t5280 + t5282;
  t5286 = -0.109508*t5284;
  t5289 = t3986*t5236;
  t5294 = 0.340999127418*t1365*t5274;
  t5308 = t5289 + t5294;
  t5311 = -0.046986*t5308;
  t5312 = t1603*t5236;
  t5314 = t1429*t5274;
  t5323 = t5312 + t5314;
  t5328 = -0.045*t5323;
  t5346 = t5177 + t5228 + t5242 + t5277 + t5286 + t5311 + t5328;
  t6324 = -0.091*t1865*t53*t54*t638;
  t6327 = -0.091*t53*t220*t638*t2487;
  t6346 = t3473*t6340;
  t6348 = t3142*t3511;
  t6351 = 0.340999127418*t1365*t6340;
  t6368 = t4454*t3511;
  t6371 = t6351 + t6368;
  t6377 = -0.109508*t6371;
  t6383 = t3986*t6340;
  t6384 = t6383 + t4473;
  t6387 = -0.046986*t6384;
  t6395 = t1603*t6340;
  t6397 = t1429*t3511;
  t6405 = t6395 + t6397;
  t6408 = -0.045*t6405;
  t6409 = t6324 + t6327 + t6346 + t6348 + t6377 + t6387 + t6408;
  t5832 = -0.091*t1865*t5740;
  t5851 = -0.091*t220*t5840;
  t5856 = t3473*t5855;
  t5862 = t3142*t5861;
  t5870 = 0.340999127418*t1365*t5855;
  t5872 = t4454*t5861;
  t5873 = t5870 + t5872;
  t5874 = -0.109508*t5873;
  t5876 = t3986*t5855;
  t5882 = t5876 + t5878;
  t5884 = -0.046986*t5882;
  t5885 = t1603*t5855;
  t5890 = t1429*t5861;
  t5892 = t5885 + t5890;
  t5897 = -0.045*t5892;
  t5905 = t5832 + t5851 + t5856 + t5862 + t5874 + t5884 + t5897;
  t7036 = -0.091*t220*t7034;
  t7037 = -0.091*t1865*t5216;
  t7047 = t3142*t7045;
  t7052 = t3473*t7051;
  t7057 = 0.340999127418*t1365*t7045;
  t7058 = t3986*t7051;
  t7059 = t7057 + t7058;
  t7060 = -0.046986*t7059;
  t7062 = t4454*t7045;
  t7064 = 0.340999127418*t1365*t7051;
  t7065 = t7062 + t7064;
  t7066 = -0.109508*t7065;
  t7067 = t1429*t7045;
  t7068 = t1603*t7051;
  t7069 = t7067 + t7068;
  t7073 = -0.045*t7069;
  t7077 = t7036 + t7037 + t7047 + t7052 + t7060 + t7066 + t7073;
  t7398 = -1.*t1865*t5509;
  t7405 = t7083 + t7398;
  t7421 = -1.*t1865*t7034;
  t7423 = t7421 + t5523;
  t7461 = t7040 + t5518;
  t7159 = t6664 + t6668;
  t7161 = -0.046986*t7159;
  t7162 = t6679 + t6683;
  t7165 = -0.109508*t7162;
  t7170 = t6693 + t6694;
  t7171 = -0.045*t7170;
  t7176 = -0.091*t53*t54*t220;
  t7181 = 0.091*t1865*t53*t2487;
  t7189 = t3142*t7188;
  t7199 = t3473*t7197;
  t7200 = 0.340999127418*t1365*t7188;
  t7202 = t3986*t7197;
  t7203 = t7200 + t7202;
  t7204 = -0.046986*t7203;
  t7207 = t4454*t7188;
  t7209 = 0.340999127418*t1365*t7197;
  t7212 = t7207 + t7209;
  t7220 = -0.109508*t7212;
  t7222 = t1429*t7188;
  t7223 = t1603*t7197;
  t7224 = t7222 + t7223;
  t7228 = -0.045*t7224;
  t7229 = t7176 + t7181 + t7189 + t7199 + t7204 + t7220 + t7228;
  t6818 = 0.091*t1865*t54*t1787;
  t6820 = 0.091*t220*t1787*t2487;
  t6823 = t3473*t6761;
  t6833 = t3142*t6831;
  t6834 = 0.340999127418*t1365*t6761;
  t6838 = t4454*t6831;
  t6839 = t6834 + t6838;
  t6845 = -0.109508*t6839;
  t6847 = t3986*t6761;
  t6849 = 0.340999127418*t1365*t6831;
  t6850 = t6847 + t6849;
  t6855 = -0.046986*t6850;
  t6857 = t1603*t6761;
  t6858 = t1429*t6831;
  t6859 = t6857 + t6858;
  t6863 = -0.045*t6859;
  t6864 = t6818 + t6820 + t6823 + t6833 + t6845 + t6855 + t6863;
  t6181 = -1.*t4824*t5381*t1787;
  t6182 = t5400*t5611;
  t6184 = t5408*t5634;
  t6194 = 1.000000637725*t4824*t1404*t1787;
  t6197 = -0.930418*t740*t5611;
  t6204 = 0.366501*t740*t5634;
  t6205 = t6194 + t6197 + t6204;
  t6206 = -0.045*t6205;
  t6208 = 0.366501*t740*t4824*t1787;
  t6213 = 0.340999127418*t1404*t5611;
  t6216 = -0.134322983001*t1404*t5634;
  t6219 = t6208 + t6213 + t6216;
  t6221 = -0.046986*t6219;
  t6222 = -0.930418*t740*t4824*t1787;
  t6224 = -0.8656776547239999*t1404*t5611;
  t6229 = 0.340999127418*t1404*t5634;
  t6230 = t6222 + t6224 + t6229;
  t6236 = -0.109508*t6230;
  t6237 = t6181 + t6182 + t6184 + t6206 + t6221 + t6236;
  t6948 = t5408*t5751;
  t6951 = t5400*t5760;
  t6952 = 0.366501*t740*t5751;
  t6956 = -0.930418*t740*t5760;
  t6958 = t6952 + t6956;
  t6959 = -0.045*t6958;
  t6964 = 0.340999127418*t1404*t5751;
  t6967 = -0.8656776547239999*t1404*t5760;
  t6970 = t6964 + t6967;
  t6972 = -0.109508*t6970;
  t6975 = -0.134322983001*t1404*t5751;
  t6976 = 0.340999127418*t1404*t5760;
  t6978 = t6975 + t6976;
  t6980 = -0.046986*t6978;
  t6994 = t6948 + t6951 + t6959 + t6972 + t6980;
  t7343 = t5408*t5855;
  t7344 = t5400*t5861;
  t7353 = 0.366501*t740*t5855;
  t7354 = -0.930418*t740*t5861;
  t7356 = t7353 + t7354;
  t7357 = -0.045*t7356;
  t7361 = -0.8656776547239999*t1404*t5861;
  t7362 = t5938 + t7361;
  t7363 = -0.109508*t7362;
  t7364 = -0.134322983001*t1404*t5855;
  t7366 = 0.340999127418*t1404*t5861;
  t7372 = t7364 + t7366;
  t7373 = -0.046986*t7372;
  t7377 = t7343 + t7344 + t7357 + t7363 + t7373;
  t5387 = -1.*t53*t5381*t638;
  t5403 = t5400*t5236;
  t5416 = t5408*t5415;
  t5419 = 1.000000637725*t53*t1404*t638;
  t5434 = -0.930418*t740*t5236;
  t5456 = 0.366501*t740*t5415;
  t5460 = t5419 + t5434 + t5456;
  t5461 = -0.045*t5460;
  t5462 = 0.366501*t740*t53*t638;
  t5463 = 0.340999127418*t1404*t5236;
  t5464 = -0.134322983001*t1404*t5415;
  t5466 = t5462 + t5463 + t5464;
  t5467 = -0.046986*t5466;
  t5470 = -0.930418*t740*t53*t638;
  t5473 = -0.8656776547239999*t1404*t5236;
  t5474 = 0.340999127418*t1404*t5415;
  t5477 = t5470 + t5473 + t5474;
  t5478 = -0.109508*t5477;
  t5481 = t5387 + t5403 + t5416 + t5461 + t5467 + t5478;
  t6483 = -1.*t5381*t638*t1787;
  t6486 = t5400*t6340;
  t6487 = t5408*t6425;
  t6488 = 1.000000637725*t1404*t638*t1787;
  t6497 = -0.930418*t740*t6340;
  t6502 = 0.366501*t740*t6425;
  t6505 = t6488 + t6497 + t6502;
  t6508 = -0.045*t6505;
  t6509 = 0.366501*t740*t638*t1787;
  t6511 = 0.340999127418*t1404*t6340;
  t6512 = -0.134322983001*t1404*t6425;
  t6514 = t6509 + t6511 + t6512;
  t6515 = -0.046986*t6514;
  t6520 = -0.930418*t740*t638*t1787;
  t6522 = -0.8656776547239999*t1404*t6340;
  t6525 = 0.340999127418*t1404*t6425;
  t6531 = t6520 + t6522 + t6525;
  t6532 = -0.109508*t6531;
  t6540 = t6483 + t6486 + t6487 + t6508 + t6515 + t6532;
  t5908 = t4824*t53*t5381;
  t5914 = t5400*t5855;
  t5925 = t5408*t5917;
  t5926 = -1.000000637725*t4824*t53*t1404;
  t5927 = -0.930418*t740*t5855;
  t5928 = 0.366501*t740*t5917;
  t5935 = t5926 + t5927 + t5928;
  t5936 = -0.045*t5935;
  t5937 = -0.366501*t740*t4824*t53;
  t5948 = -0.134322983001*t1404*t5917;
  t5951 = t5937 + t5938 + t5948;
  t5955 = -0.046986*t5951;
  t5957 = 0.930418*t740*t4824*t53;
  t5960 = -0.8656776547239999*t1404*t5855;
  t5961 = 0.340999127418*t1404*t5917;
  t5962 = t5957 + t5960 + t5961;
  t5972 = -0.109508*t5962;
  t5974 = t5908 + t5914 + t5925 + t5936 + t5955 + t5972;
  t7087 = t5408*t7084;
  t7092 = t5400*t7051;
  t7098 = 0.366501*t740*t7084;
  t7100 = -0.930418*t740*t7051;
  t7101 = t7098 + t7100;
  t7102 = -0.045*t7101;
  t7110 = 0.340999127418*t1404*t7084;
  t7113 = -0.8656776547239999*t1404*t7051;
  t7115 = t7110 + t7113;
  t7118 = -0.109508*t7115;
  t7122 = -0.134322983001*t1404*t7084;
  t7123 = 0.340999127418*t1404*t7051;
  t7124 = t7122 + t7123;
  t7125 = -0.046986*t7124;
  t7126 = t7087 + t7092 + t7102 + t7118 + t7125;
  t7468 = t5408*t7461;
  t7471 = t5400*t7423;
  t7474 = 0.366501*t740*t7461;
  t7475 = -0.930418*t740*t7423;
  t7476 = t7474 + t7475;
  t7491 = -0.045*t7476;
  t7493 = 0.340999127418*t1404*t7461;
  t7495 = -0.8656776547239999*t1404*t7423;
  t7496 = t7493 + t7495;
  t7499 = -0.109508*t7496;
  t7500 = -0.134322983001*t1404*t7461;
  t7501 = 0.340999127418*t1404*t7423;
  t7506 = t7500 + t7501;
  t7510 = -0.046986*t7506;
  t7517 = t7468 + t7471 + t7491 + t7499 + t7510;
  t7565 = -0.04500040093286238*t740;
  t7566 = -0.0846680539949003*t1404;
  t7567 = t7565 + t7566;
  t7571 = -0.07877668146182712*t740;
  t7572 = 0.04186915633414423*t1404;
  t7573 = t7571 + t7572;
  t7575 = 0.03103092645718495*t740;
  t7576 = -0.016492681424499736*t1404;
  t7578 = t7575 + t7576;
  t7638 = t220*t5509;
  t7646 = t7050 + t7638;
  t7530 = t5408*t7188;
  t7533 = t5400*t6661;
  t7534 = 0.366501*t740*t7188;
  t7535 = -0.930418*t740*t6661;
  t7536 = t7534 + t7535;
  t7537 = -0.045*t7536;
  t7538 = 0.340999127418*t1404*t7188;
  t7539 = -0.8656776547239999*t1404*t6661;
  t7540 = t7538 + t7539;
  t7541 = -0.109508*t7540;
  t7542 = -0.134322983001*t1404*t7188;
  t7543 = 0.340999127418*t1404*t6661;
  t7544 = t7542 + t7543;
  t7545 = -0.046986*t7544;
  t7547 = t7530 + t7533 + t7537 + t7541 + t7545;
  t7240 = t5408*t6650;
  t7242 = t5400*t7197;
  t7245 = 0.366501*t740*t6650;
  t7247 = -0.930418*t740*t7197;
  t7253 = t7245 + t7247;
  t7254 = -0.045*t7253;
  t7255 = 0.340999127418*t1404*t6650;
  t7256 = -0.8656776547239999*t1404*t7197;
  t7262 = t7255 + t7256;
  t7263 = -0.109508*t7262;
  t7264 = -0.134322983001*t1404*t6650;
  t7265 = 0.340999127418*t1404*t7197;
  t7270 = t7264 + t7265;
  t7272 = -0.046986*t7270;
  t7274 = t7240 + t7242 + t7254 + t7263 + t7272;
  t6749 = -1.*t53*t5381;
  t6763 = t5400*t6761;
  t6766 = t5408*t6723;
  t6767 = 1.000000637725*t53*t1404;
  t6777 = -0.930418*t740*t6761;
  t6783 = 0.366501*t740*t6723;
  t6786 = t6767 + t6777 + t6783;
  t6787 = -0.045*t6786;
  t6788 = 0.366501*t740*t53;
  t6789 = 0.340999127418*t1404*t6761;
  t6790 = -0.134322983001*t1404*t6723;
  t6795 = t6788 + t6789 + t6790;
  t6797 = -0.046986*t6795;
  t6799 = -0.930418*t740*t53;
  t6800 = -0.8656776547239999*t1404*t6761;
  t6804 = 0.340999127418*t1404*t6723;
  t6808 = t6799 + t6800 + t6804;
  t6809 = -0.109508*t6808;
  t6810 = t6749 + t6763 + t6766 + t6787 + t6797 + t6809;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(t4839 + t4912 + t4956 + t5039 + t5105 - 0.046986*(t5109 + t5114 + t5115) - 0.109508*(t5122 + t5123 + t5125) - 0.045*(t5136 + t5152 + t5155))*var2[3] + t4779*var2[4] + t5589*var2[5] + t5346*var2[17] + t5481*var2[18];
  p_output1[10]=(t5977 + t5979 + t5980 + t5985 + t5990 - 0.046986*(t5280 + t5991 + t5999) - 0.109508*(t6010 + t6013 + t6018) - 0.045*(t6027 + t6028 + t6031))*var2[3] + t5709*var2[4] + t5823*var2[5] + t5905*var2[17] + t5974*var2[18];
  p_output1[11]=0;
  p_output1[12]=t4779*var2[3] + (-1.*t1787*t2280*t2487*t4824 + t4839 - 1.*t1787*t460*t4824*t54 + t3142*t6255 + t3473*t6267 - 0.109508*(t5122 + t4454*t6255 + 0.340999127418*t1365*t6267) - 0.045*(t5136 + t1429*t6255 + t1603*t6267) - 0.046986*(t5109 + 0.340999127418*t1365*t6255 + t3986*t6267))*var2[4] + t6174*var2[5] + t6128*var2[17] + t6237*var2[18];
  p_output1[13]=t5709*var2[3] + (t5977 - 1.*t1787*t2280*t2487*t638 - 1.*t1787*t460*t54*t638 + t3142*t6570 + t3473*t6584 - 0.109508*(t6010 + t4454*t6570 + 0.340999127418*t1365*t6584) - 0.045*(t6027 + t1429*t6570 + t1603*t6584) - 0.046986*(t5991 + 0.340999127418*t1365*t6570 + t3986*t6584))*var2[4] + t6477*var2[5] + t6409*var2[17] + t6540*var2[18];
  p_output1[14]=(t1760*t1787 + t6638 + t6644 + t6651 + t6662 - 0.046986*(t1787*t3407 + t6664 + t6668) - 0.109508*(t1787*t3015 + t6679 + t6683) - 0.045*(t1787*t4576 + t6693 + t6694))*var2[4] + t6746*var2[5] + t6864*var2[17] + t6810*var2[18];
  p_output1[15]=t5589*var2[3] + t6174*var2[4] + (t4912 + t4956 + t5039 + t5105 - 0.046986*(t5114 + t5115) - 0.109508*(t5123 + t5125) - 0.045*(t5152 + t5155))*var2[5] + t6941*var2[17] + t6994*var2[18];
  p_output1[16]=t5823*var2[3] + t6477*var2[4] + (t5979 + t5980 + t5985 + t5990 - 0.046986*(t5280 + t5999) - 0.109508*(t6013 + t6018) - 0.045*(t6028 + t6031))*var2[5] + t7077*var2[17] + t7126*var2[18];
  p_output1[17]=t6746*var2[4] + (t6638 + t6644 + t6651 + t6662 + t7161 + t7165 + t7171)*var2[5] + t7229*var2[17] + t7274*var2[18];
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=t5346*var2[3] + t6128*var2[4] + t6941*var2[5] + (0.091*t220*t5740 - 0.091*t1865*t5840 + t3473*t5861 + t3142*t7306 - 0.046986*(t3986*t5861 + 0.340999127418*t1365*t7306) - 0.045*(t1603*t5861 + t1429*t7306) - 0.109508*(t5878 + t4454*t7306))*var2[17] + t7377*var2[18];
  p_output1[52]=t5905*var2[3] + t6409*var2[4] + t7077*var2[5] + (-0.091*t1865*t5509 + 0.091*t220*t7034 + t3142*t7405 + t3473*t7423 - 0.109508*(t4454*t7405 + 0.340999127418*t1365*t7423) - 0.045*(t1429*t7405 + t1603*t7423) - 0.046986*(0.340999127418*t1365*t7405 + t3986*t7423))*var2[17] + t7517*var2[18];
  p_output1[53]=t6864*var2[4] + t7229*var2[5] + (-0.091*t1865*t2487*t53 + 0.091*t220*t53*t54 + t6651 + t6662 + t7161 + t7165 + t7171)*var2[17] + t7547*var2[18];
  p_output1[54]=t5481*var2[3] + t6237*var2[4] + t6994*var2[5] + t7377*var2[17] + (-0.045*(0.930418*t1404*t5855 - 0.366501*t1404*t5917 - 1.000000637725*t4824*t53*t740) - 0.046986*(0.366501*t1404*t4824*t53 + 0.340999127418*t5855*t740 - 0.134322983001*t5917*t740) - 0.109508*(-0.930418*t1404*t4824*t53 - 0.8656776547239999*t5855*t740 + 0.340999127418*t5917*t740) + t4824*t53*t7567 + t5855*t7573 + t5917*t7578)*var2[18];
  p_output1[55]=t5974*var2[3] + t6540*var2[4] + t7126*var2[5] + t7517*var2[17] + (t53*t638*t7567 + t7461*t7573 + t7578*t7646 - 0.045*(-1.000000637725*t53*t638*t740 + 0.930418*t1404*t7461 - 0.366501*t1404*t7646) - 0.046986*(0.366501*t1404*t53*t638 + 0.340999127418*t740*t7461 - 0.134322983001*t740*t7646) - 0.109508*(-0.930418*t1404*t53*t638 - 0.8656776547239999*t740*t7461 + 0.340999127418*t740*t7646))*var2[18];
  p_output1[56]=t6810*var2[4] + t7274*var2[5] + t7547*var2[17] + (-0.045*(0.930418*t1404*t7188 - 0.366501*t1404*t7197 + 1.000000637725*t1787*t740) - 0.046986*(-0.366501*t1404*t1787 + 0.340999127418*t7188*t740 - 0.134322983001*t7197*t740) - 0.109508*(0.930418*t1404*t1787 - 0.8656776547239999*t7188*t740 + 0.340999127418*t7197*t740) - 1.*t1787*t7567 + t7188*t7573 + t7197*t7578)*var2[18];
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void dJp_hip_rotation_right_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
