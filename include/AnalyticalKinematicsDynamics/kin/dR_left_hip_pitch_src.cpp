/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:56:44 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dR_left_hip_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t598;
  double t1087;
  double t286;
  double t307;
  double t487;
  double t1746;
  double t1106;
  double t1327;
  double t2010;
  double t58;
  double t114;
  double t250;
  double t1569;
  double t2073;
  double t2190;
  double t2670;
  double t2686;
  double t2714;
  double t2826;
  double t2830;
  double t3305;
  double t3330;
  double t3345;
  double t3347;
  double t3352;
  double t3361;
  double t3364;
  double t3365;
  double t3386;
  double t3388;
  double t2403;
  double t2525;
  double t2636;
  double t2821;
  double t2912;
  double t2915;
  double t2920;
  double t3017;
  double t3396;
  double t3134;
  double t3139;
  double t3156;
  double t3168;
  double t3184;
  double t3245;
  double t3276;
  double t3295;
  double t3093;
  double t3112;
  double t3634;
  double t3682;
  double t3710;
  double t3712;
  double t3643;
  double t3670;
  double t3671;
  double t3675;
  double t3715;
  double t3727;
  double t3732;
  double t3735;
  double t3737;
  double t3400;
  double t3408;
  double t3453;
  double t3456;
  double t3813;
  double t3817;
  double t3827;
  double t3764;
  double t3776;
  double t3785;
  double t3463;
  double t3481;
  double t3731;
  double t3746;
  double t3758;
  double t3502;
  double t3506;
  double t3550;
  double t3554;
  double t3566;
  double t3569;
  double t3936;
  double t3937;
  double t3945;
  double t3952;
  double t3954;
  double t3962;
  double t3965;
  double t3966;
  double t3970;
  double t4006;
  double t4017;
  double t4026;
  double t3980;
  double t3987;
  double t3989;
  double t3964;
  double t3971;
  double t3972;
  double t4167;
  double t4168;
  double t4169;
  double t4140;
  double t4157;
  double t4158;
  double t4160;
  double t4171;
  double t4176;
  double t4184;
  double t4205;
  double t4226;
  double t4313;
  double t4317;
  double t4322;
  double t4323;
  double t4179;
  double t4231;
  double t4233;
  double t4235;
  double t4261;
  double t4264;
  double t4276;
  double t4303;
  double t4403;
  double t4404;
  double t4442;
  double t4455;
  double t4463;
  double t4464;
  double t4414;
  double t4418;
  double t4424;
  double t4431;
  double t4397;
  double t4398;
  double t4407;
  double t4409;
  double t4575;
  double t4579;
  double t4580;
  double t4588;
  double t4529;
  double t4537;
  double t4540;
  double t4560;
  double t4563;
  double t4564;
  double t4565;
  double t4653;
  double t4656;
  double t4660;
  double t4668;
  double t4676;
  double t4679;
  double t4738;
  double t4749;
  double t4756;
  double t4762;
  double t4663;
  double t4701;
  double t4706;
  double t4712;
  double t4720;
  double t4724;
  double t4729;
  double t4730;
  double t4827;
  double t4836;
  double t4838;
  double t4816;
  double t4819;
  double t4820;
  double t4825;
  double t4841;
  double t4845;
  double t4860;
  double t4875;
  double t4877;
  double t4971;
  double t4973;
  double t4987;
  double t4914;
  double t4952;
  double t4959;
  double t4846;
  double t4887;
  double t4889;
  double t5120;
  double t5134;
  double t5160;
  double t5165;
  double t5172;
  double t5231;
  double t5233;
  double t5234;
  double t5200;
  double t5209;
  double t5227;
  double t5141;
  double t5181;
  double t5184;
  double t5457;
  double t5462;
  double t5509;
  double t5516;
  double t5519;
  double t5521;
  double t5489;
  double t5496;
  double t5498;
  double t5501;
  double t5408;
  double t5425;
  double t5470;
  double t5476;
  double t5657;
  double t5658;
  double t5659;
  double t5668;
  double t5588;
  double t5591;
  double t5596;
  double t5611;
  double t5613;
  double t5620;
  double t5635;
  double t5730;
  double t5731;
  double t5732;
  double t5742;
  double t5762;
  double t5776;
  double t5796;
  double t5797;
  double t5803;
  double t5784;
  double t5785;
  double t5786;
  double t5737;
  double t5781;
  double t5782;
  double t5863;
  double t5875;
  double t5876;
  double t5886;
  double t5892;
  double t5903;
  double t5955;
  double t5963;
  double t5966;
  double t5934;
  double t5942;
  double t5943;
  double t5881;
  double t5904;
  double t5907;
  double t6012;
  double t6015;
  double t6021;
  double t6025;
  double t6029;
  double t6033;
  double t6096;
  double t6105;
  double t6107;
  double t6108;
  double t6023;
  double t6039;
  double t6040;
  double t6042;
  double t6066;
  double t6071;
  double t6078;
  double t6090;
  double t6289;
  double t6294;
  double t6301;
  double t6304;
  double t6265;
  double t6274;
  double t6279;
  double t6283;
  double t6232;
  double t6239;
  double t6242;
  double t6251;
  double t6425;
  double t6435;
  double t6437;
  double t6443;
  double t6407;
  double t6411;
  double t6413;
  double t6416;
  double t6421;
  double t6422;
  double t3032;
  double t3296;
  double t3436;
  double t3439;
  double t3459;
  double t3491;
  double t3524;
  double t3541;
  double t3542;
  double t3555;
  double t3564;
  double t3574;
  double t3593;
  double t3763;
  double t3787;
  double t3834;
  double t3839;
  double t3842;
  double t3845;
  double t3850;
  double t3857;
  double t3877;
  double t3879;
  double t3883;
  double t3888;
  double t3890;
  double t3975;
  double t3996;
  double t4027;
  double t4032;
  double t4037;
  double t4058;
  double t4073;
  double t4099;
  double t4102;
  double t4109;
  double t4111;
  double t4118;
  double t4120;
  double t4247;
  double t4304;
  double t4328;
  double t4334;
  double t4343;
  double t4344;
  double t4345;
  double t4352;
  double t4356;
  double t4369;
  double t4373;
  double t4374;
  double t4378;
  double t4413;
  double t4432;
  double t4465;
  double t4468;
  double t4477;
  double t4478;
  double t4480;
  double t4482;
  double t4484;
  double t4488;
  double t4493;
  double t4502;
  double t4514;
  double t4559;
  double t4566;
  double t4589;
  double t4592;
  double t4594;
  double t4601;
  double t4605;
  double t4619;
  double t4621;
  double t4630;
  double t4638;
  double t4640;
  double t4642;
  double t4719;
  double t4737;
  double t4771;
  double t4772;
  double t4784;
  double t4786;
  double t4788;
  double t4789;
  double t4791;
  double t4793;
  double t4795;
  double t4799;
  double t4801;
  double t4910;
  double t4967;
  double t4995;
  double t5004;
  double t5009;
  double t5016;
  double t5035;
  double t5049;
  double t5050;
  double t5068;
  double t5084;
  double t5092;
  double t5102;
  double t5196;
  double t5228;
  double t5235;
  double t5239;
  double t5246;
  double t5247;
  double t5249;
  double t5266;
  double t5269;
  double t5270;
  double t5278;
  double t5283;
  double t5285;
  double t5309;
  double t5310;
  double t5316;
  double t5317;
  double t5327;
  double t5339;
  double t5344;
  double t5349;
  double t5350;
  double t5352;
  double t5359;
  double t5376;
  double t5391;
  double t5482;
  double t5503;
  double t5527;
  double t5537;
  double t5546;
  double t5550;
  double t5552;
  double t5553;
  double t5561;
  double t5564;
  double t5570;
  double t5576;
  double t5578;
  double t5602;
  double t5642;
  double t5670;
  double t5673;
  double t5675;
  double t5683;
  double t5684;
  double t5685;
  double t5686;
  double t5694;
  double t5702;
  double t5704;
  double t5717;
  double t5783;
  double t5787;
  double t5808;
  double t5809;
  double t5820;
  double t5825;
  double t5828;
  double t5830;
  double t5833;
  double t5837;
  double t5841;
  double t5842;
  double t5843;
  double t5929;
  double t5952;
  double t5968;
  double t5969;
  double t5981;
  double t5983;
  double t5986;
  double t5988;
  double t5989;
  double t5993;
  double t5994;
  double t5995;
  double t5996;
  double t6065;
  double t6095;
  double t6117;
  double t6118;
  double t6122;
  double t6134;
  double t6159;
  double t6164;
  double t6165;
  double t6171;
  double t6173;
  double t6207;
  double t6213;
  double t6262;
  double t6284;
  double t6312;
  double t6315;
  double t6318;
  double t6322;
  double t6325;
  double t6332;
  double t6333;
  double t6340;
  double t6342;
  double t6352;
  double t6359;
  double t6415;
  double t6423;
  double t6459;
  double t6461;
  double t6462;
  double t6468;
  double t6471;
  double t6482;
  double t6484;
  double t6506;
  double t6507;
  double t6515;
  double t6517;
  t598 = Cos(var1[3]);
  t1087 = Cos(var1[4]);
  t286 = Cos(var1[7]);
  t307 = -1.*t286;
  t487 = 1. + t307;
  t1746 = Cos(var1[5]);
  t1106 = Cos(var1[6]);
  t1327 = Sin(var1[5]);
  t2010 = Sin(var1[6]);
  t58 = Cos(var1[8]);
  t114 = -1.*t58;
  t250 = 1. + t114;
  t1569 = t598*t1087*t1106*t1327;
  t2073 = -1.*t598*t1087*t1746*t2010;
  t2190 = t1569 + t2073;
  t2670 = t598*t1087*t1746*t1106;
  t2686 = t598*t1087*t1327*t2010;
  t2714 = t2670 + t2686;
  t2826 = Sin(var1[4]);
  t2830 = Sin(var1[7]);
  t3305 = -1.000000637725*t487;
  t3330 = 1. + t3305;
  t3345 = -1.*t598*t3330*t2826;
  t3347 = -0.930418*t2830;
  t3352 = 0. + t3347;
  t3361 = t2190*t3352;
  t3364 = -0.366501*t2830;
  t3365 = 0. + t3364;
  t3386 = t2714*t3365;
  t3388 = t3345 + t3361 + t3386;
  t2403 = -0.340999127418*t487*t2190;
  t2525 = -0.134322983001*t487;
  t2636 = 1. + t2525;
  t2821 = t2636*t2714;
  t2912 = 0.366501*t2830;
  t2915 = 0. + t2912;
  t2920 = -1.*t598*t2826*t2915;
  t3017 = t2403 + t2821 + t2920;
  t3396 = Sin(var1[8]);
  t3134 = -0.8656776547239999*t487;
  t3139 = 1. + t3134;
  t3156 = t3139*t2190;
  t3168 = -0.340999127418*t487*t2714;
  t3184 = 0.930418*t2830;
  t3245 = 0. + t3184;
  t3276 = -1.*t598*t2826*t3245;
  t3295 = t3156 + t3168 + t3276;
  t3093 = -0.134322983001*t250;
  t3112 = 1. + t3093;
  t3634 = Sin(var1[3]);
  t3682 = t598*t1746*t2826;
  t3710 = t3634*t1327;
  t3712 = t3682 + t3710;
  t3643 = -1.*t1746*t3634;
  t3670 = t598*t2826*t1327;
  t3671 = t3643 + t3670;
  t3675 = t1106*t3671;
  t3715 = -1.*t3712*t2010;
  t3727 = t3675 + t3715;
  t3732 = -1.*t1106*t3712;
  t3735 = -1.*t3671*t2010;
  t3737 = t3732 + t3735;
  t3400 = -0.366501*t3396;
  t3408 = 0. + t3400;
  t3453 = -1.000000637725*t250;
  t3456 = 1. + t3453;
  t3813 = t3737*t3352;
  t3817 = t3727*t3365;
  t3827 = t3813 + t3817;
  t3764 = t2636*t3727;
  t3776 = -0.340999127418*t487*t3737;
  t3785 = t3764 + t3776;
  t3463 = -0.930418*t3396;
  t3481 = 0. + t3463;
  t3731 = -0.340999127418*t487*t3727;
  t3746 = t3139*t3737;
  t3758 = t3731 + t3746;
  t3502 = 0.366501*t3396;
  t3506 = 0. + t3502;
  t3550 = -0.8656776547239999*t250;
  t3554 = 1. + t3550;
  t3566 = 0.930418*t3396;
  t3569 = 0. + t3566;
  t3936 = t1746*t3634;
  t3937 = -1.*t598*t2826*t1327;
  t3945 = t3936 + t3937;
  t3952 = t1106*t3945;
  t3954 = t3712*t2010;
  t3962 = t3952 + t3954;
  t3965 = t1106*t3712;
  t3966 = -1.*t3945*t2010;
  t3970 = t3965 + t3966;
  t4006 = t3970*t3352;
  t4017 = t3962*t3365;
  t4026 = t4006 + t4017;
  t3980 = t2636*t3962;
  t3987 = -0.340999127418*t487*t3970;
  t3989 = t3980 + t3987;
  t3964 = -0.340999127418*t487*t3962;
  t3971 = t3139*t3970;
  t3972 = t3964 + t3971;
  t4167 = -1.*t1746*t3634*t2826;
  t4168 = t598*t1327;
  t4169 = t4167 + t4168;
  t4140 = -1.*t598*t1746;
  t4157 = -1.*t3634*t2826*t1327;
  t4158 = t4140 + t4157;
  t4160 = t1106*t4158;
  t4171 = -1.*t4169*t2010;
  t4176 = t4160 + t4171;
  t4184 = t1106*t4169;
  t4205 = t4158*t2010;
  t4226 = t4184 + t4205;
  t4313 = -1.*t1087*t3330*t3634;
  t4317 = t4176*t3352;
  t4322 = t4226*t3365;
  t4323 = t4313 + t4317 + t4322;
  t4179 = -0.340999127418*t487*t4176;
  t4231 = t2636*t4226;
  t4233 = -1.*t1087*t3634*t2915;
  t4235 = t4179 + t4231 + t4233;
  t4261 = t3139*t4176;
  t4264 = -0.340999127418*t487*t4226;
  t4276 = -1.*t1087*t3634*t3245;
  t4303 = t4261 + t4264 + t4276;
  t4403 = t3671*t2010;
  t4404 = t3965 + t4403;
  t4442 = -0.930418*t286*t3727;
  t4455 = -0.366501*t286*t4404;
  t4463 = -1.000000637725*t598*t1087*t2830;
  t4464 = t4442 + t4455 + t4463;
  t4414 = 0.366501*t598*t1087*t286;
  t4418 = -0.340999127418*t3727*t2830;
  t4424 = -0.134322983001*t4404*t2830;
  t4431 = t4414 + t4418 + t4424;
  t4397 = 0.930418*t598*t1087*t286;
  t4398 = -0.8656776547239999*t3727*t2830;
  t4407 = -0.340999127418*t4404*t2830;
  t4409 = t4397 + t4398 + t4407;
  t4575 = t598*t1087*t3330;
  t4579 = t3727*t3352;
  t4580 = t4404*t3365;
  t4588 = t4575 + t4579 + t4580;
  t4529 = t2636*t4404;
  t4537 = t598*t1087*t2915;
  t4540 = t3731 + t4529 + t4537;
  t4560 = t3139*t3727;
  t4563 = -0.340999127418*t487*t4404;
  t4564 = t598*t1087*t3245;
  t4565 = t4560 + t4563 + t4564;
  t4653 = t1087*t1106*t3634*t1327;
  t4656 = -1.*t1087*t1746*t3634*t2010;
  t4660 = t4653 + t4656;
  t4668 = t1087*t1746*t1106*t3634;
  t4676 = t1087*t3634*t1327*t2010;
  t4679 = t4668 + t4676;
  t4738 = -1.*t3330*t3634*t2826;
  t4749 = t4660*t3352;
  t4756 = t4679*t3365;
  t4762 = t4738 + t4749 + t4756;
  t4663 = -0.340999127418*t487*t4660;
  t4701 = t2636*t4679;
  t4706 = -1.*t3634*t2826*t2915;
  t4712 = t4663 + t4701 + t4706;
  t4720 = t3139*t4660;
  t4724 = -0.340999127418*t487*t4679;
  t4729 = -1.*t3634*t2826*t3245;
  t4730 = t4720 + t4724 + t4729;
  t4827 = t1746*t3634*t2826;
  t4836 = -1.*t598*t1327;
  t4838 = t4827 + t4836;
  t4816 = t598*t1746;
  t4819 = t3634*t2826*t1327;
  t4820 = t4816 + t4819;
  t4825 = t1106*t4820;
  t4841 = -1.*t4838*t2010;
  t4845 = t4825 + t4841;
  t4860 = -1.*t1106*t4838;
  t4875 = -1.*t4820*t2010;
  t4877 = t4860 + t4875;
  t4971 = t4877*t3352;
  t4973 = t4845*t3365;
  t4987 = t4971 + t4973;
  t4914 = t2636*t4845;
  t4952 = -0.340999127418*t487*t4877;
  t4959 = t4914 + t4952;
  t4846 = -0.340999127418*t487*t4845;
  t4887 = t3139*t4877;
  t4889 = t4846 + t4887;
  t5120 = t4838*t2010;
  t5134 = t4160 + t5120;
  t5160 = t1106*t4838;
  t5165 = -1.*t4158*t2010;
  t5172 = t5160 + t5165;
  t5231 = t5172*t3352;
  t5233 = t5134*t3365;
  t5234 = t5231 + t5233;
  t5200 = t2636*t5134;
  t5209 = -0.340999127418*t487*t5172;
  t5227 = t5200 + t5209;
  t5141 = -0.340999127418*t487*t5134;
  t5181 = t3139*t5172;
  t5184 = t5141 + t5181;
  t5457 = t4820*t2010;
  t5462 = t5160 + t5457;
  t5509 = -0.930418*t286*t4845;
  t5516 = -0.366501*t286*t5462;
  t5519 = -1.000000637725*t1087*t3634*t2830;
  t5521 = t5509 + t5516 + t5519;
  t5489 = 0.366501*t1087*t286*t3634;
  t5496 = -0.340999127418*t4845*t2830;
  t5498 = -0.134322983001*t5462*t2830;
  t5501 = t5489 + t5496 + t5498;
  t5408 = 0.930418*t1087*t286*t3634;
  t5425 = -0.8656776547239999*t4845*t2830;
  t5470 = -0.340999127418*t5462*t2830;
  t5476 = t5408 + t5425 + t5470;
  t5657 = t1087*t3330*t3634;
  t5658 = t4845*t3352;
  t5659 = t5462*t3365;
  t5668 = t5657 + t5658 + t5659;
  t5588 = t2636*t5462;
  t5591 = t1087*t3634*t2915;
  t5596 = t4846 + t5588 + t5591;
  t5611 = t3139*t4845;
  t5613 = -0.340999127418*t487*t5462;
  t5620 = t1087*t3634*t3245;
  t5635 = t5611 + t5613 + t5620;
  t5730 = t1087*t1106*t1327;
  t5731 = -1.*t1087*t1746*t2010;
  t5732 = t5730 + t5731;
  t5742 = -1.*t1087*t1746*t1106;
  t5762 = -1.*t1087*t1327*t2010;
  t5776 = t5742 + t5762;
  t5796 = t5776*t3352;
  t5797 = t5732*t3365;
  t5803 = t5796 + t5797;
  t5784 = t2636*t5732;
  t5785 = -0.340999127418*t487*t5776;
  t5786 = t5784 + t5785;
  t5737 = -0.340999127418*t487*t5732;
  t5781 = t3139*t5776;
  t5782 = t5737 + t5781;
  t5863 = -1.*t1087*t1106*t1327;
  t5875 = t1087*t1746*t2010;
  t5876 = t5863 + t5875;
  t5886 = t1087*t1746*t1106;
  t5892 = t1087*t1327*t2010;
  t5903 = t5886 + t5892;
  t5955 = t5903*t3352;
  t5963 = t5876*t3365;
  t5966 = t5955 + t5963;
  t5934 = t2636*t5876;
  t5942 = -0.340999127418*t487*t5903;
  t5943 = t5934 + t5942;
  t5881 = -0.340999127418*t487*t5876;
  t5904 = t3139*t5903;
  t5907 = t5881 + t5904;
  t6012 = -1.*t1106*t2826*t1327;
  t6015 = t1746*t2826*t2010;
  t6021 = t6012 + t6015;
  t6025 = -1.*t1746*t1106*t2826;
  t6029 = -1.*t2826*t1327*t2010;
  t6033 = t6025 + t6029;
  t6096 = -1.*t1087*t3330;
  t6105 = t6021*t3352;
  t6107 = t6033*t3365;
  t6108 = t6096 + t6105 + t6107;
  t6023 = -0.340999127418*t487*t6021;
  t6039 = t2636*t6033;
  t6040 = -1.*t1087*t2915;
  t6042 = t6023 + t6039 + t6040;
  t6066 = t3139*t6021;
  t6071 = -0.340999127418*t487*t6033;
  t6078 = -1.*t1087*t3245;
  t6090 = t6066 + t6071 + t6078;
  t6289 = -0.930418*t286*t5732;
  t6294 = -0.366501*t286*t5903;
  t6301 = 1.000000637725*t2826*t2830;
  t6304 = t6289 + t6294 + t6301;
  t6265 = -0.366501*t286*t2826;
  t6274 = -0.340999127418*t5732*t2830;
  t6279 = -0.134322983001*t5903*t2830;
  t6283 = t6265 + t6274 + t6279;
  t6232 = -0.930418*t286*t2826;
  t6239 = -0.8656776547239999*t5732*t2830;
  t6242 = -0.340999127418*t5903*t2830;
  t6251 = t6232 + t6239 + t6242;
  t6425 = -1.*t3330*t2826;
  t6435 = t5732*t3352;
  t6437 = t5903*t3365;
  t6443 = t6425 + t6435 + t6437;
  t6407 = t2636*t5903;
  t6411 = -1.*t2826*t2915;
  t6413 = t5737 + t6407 + t6411;
  t6416 = t3139*t5732;
  t6421 = -1.*t2826*t3245;
  t6422 = t6416 + t5942 + t6421;
  t3032 = 0.340999127418*t250*t3017;
  t3296 = t3112*t3295;
  t3436 = t3388*t3408;
  t3439 = t3032 + t3296 + t3436;
  t3459 = t3456*t3388;
  t3491 = t3017*t3481;
  t3524 = t3295*t3506;
  t3541 = t3459 + t3491 + t3524;
  t3542 = 0.707107*t3541;
  t3555 = t3554*t3017;
  t3564 = 0.340999127418*t250*t3295;
  t3574 = t3388*t3569;
  t3593 = t3555 + t3564 + t3574;
  t3763 = t3112*t3758;
  t3787 = 0.340999127418*t250*t3785;
  t3834 = t3827*t3408;
  t3839 = t3763 + t3787 + t3834;
  t3842 = t3456*t3827;
  t3845 = t3785*t3481;
  t3850 = t3758*t3506;
  t3857 = t3842 + t3845 + t3850;
  t3877 = 0.707107*t3857;
  t3879 = 0.340999127418*t250*t3758;
  t3883 = t3554*t3785;
  t3888 = t3827*t3569;
  t3890 = t3879 + t3883 + t3888;
  t3975 = t3112*t3972;
  t3996 = 0.340999127418*t250*t3989;
  t4027 = t4026*t3408;
  t4032 = t3975 + t3996 + t4027;
  t4037 = t3456*t4026;
  t4058 = t3989*t3481;
  t4073 = t3972*t3506;
  t4099 = t4037 + t4058 + t4073;
  t4102 = 0.707107*t4099;
  t4109 = 0.340999127418*t250*t3972;
  t4111 = t3554*t3989;
  t4118 = t4026*t3569;
  t4120 = t4109 + t4111 + t4118;
  t4247 = 0.340999127418*t250*t4235;
  t4304 = t3112*t4303;
  t4328 = t4323*t3408;
  t4334 = t4247 + t4304 + t4328;
  t4343 = t3456*t4323;
  t4344 = t4235*t3481;
  t4345 = t4303*t3506;
  t4352 = t4343 + t4344 + t4345;
  t4356 = 0.707107*t4352;
  t4369 = t3554*t4235;
  t4373 = 0.340999127418*t250*t4303;
  t4374 = t4323*t3569;
  t4378 = t4369 + t4373 + t4374;
  t4413 = t3112*t4409;
  t4432 = 0.340999127418*t250*t4431;
  t4465 = t4464*t3408;
  t4468 = t4413 + t4432 + t4465;
  t4477 = t3456*t4464;
  t4478 = t4431*t3481;
  t4480 = t4409*t3506;
  t4482 = t4477 + t4478 + t4480;
  t4484 = 0.707107*t4482;
  t4488 = 0.340999127418*t250*t4409;
  t4493 = t3554*t4431;
  t4502 = t4464*t3569;
  t4514 = t4488 + t4493 + t4502;
  t4559 = -0.930418*t58*t4540;
  t4566 = 0.366501*t58*t4565;
  t4589 = -1.000000637725*t4588*t3396;
  t4592 = t4559 + t4566 + t4589;
  t4594 = 0.707107*t4592;
  t4601 = -0.366501*t58*t4588;
  t4605 = 0.340999127418*t4540*t3396;
  t4619 = -0.134322983001*t4565*t3396;
  t4621 = t4601 + t4605 + t4619;
  t4630 = 0.930418*t58*t4588;
  t4638 = -0.8656776547239999*t4540*t3396;
  t4640 = 0.340999127418*t4565*t3396;
  t4642 = t4630 + t4638 + t4640;
  t4719 = 0.340999127418*t250*t4712;
  t4737 = t3112*t4730;
  t4771 = t4762*t3408;
  t4772 = t4719 + t4737 + t4771;
  t4784 = t3456*t4762;
  t4786 = t4712*t3481;
  t4788 = t4730*t3506;
  t4789 = t4784 + t4786 + t4788;
  t4791 = 0.707107*t4789;
  t4793 = t3554*t4712;
  t4795 = 0.340999127418*t250*t4730;
  t4799 = t4762*t3569;
  t4801 = t4793 + t4795 + t4799;
  t4910 = t3112*t4889;
  t4967 = 0.340999127418*t250*t4959;
  t4995 = t4987*t3408;
  t5004 = t4910 + t4967 + t4995;
  t5009 = t3456*t4987;
  t5016 = t4959*t3481;
  t5035 = t4889*t3506;
  t5049 = t5009 + t5016 + t5035;
  t5050 = 0.707107*t5049;
  t5068 = 0.340999127418*t250*t4889;
  t5084 = t3554*t4959;
  t5092 = t4987*t3569;
  t5102 = t5068 + t5084 + t5092;
  t5196 = t3112*t5184;
  t5228 = 0.340999127418*t250*t5227;
  t5235 = t5234*t3408;
  t5239 = t5196 + t5228 + t5235;
  t5246 = t3456*t5234;
  t5247 = t5227*t3481;
  t5249 = t5184*t3506;
  t5266 = t5246 + t5247 + t5249;
  t5269 = 0.707107*t5266;
  t5270 = 0.340999127418*t250*t5184;
  t5278 = t3554*t5227;
  t5283 = t5234*t3569;
  t5285 = t5270 + t5278 + t5283;
  t5309 = 0.340999127418*t250*t4540;
  t5310 = t3112*t4565;
  t5316 = t4588*t3408;
  t5317 = t5309 + t5310 + t5316;
  t5327 = t3456*t4588;
  t5339 = t4540*t3481;
  t5344 = t4565*t3506;
  t5349 = t5327 + t5339 + t5344;
  t5350 = 0.707107*t5349;
  t5352 = t3554*t4540;
  t5359 = 0.340999127418*t250*t4565;
  t5376 = t4588*t3569;
  t5391 = t5352 + t5359 + t5376;
  t5482 = t3112*t5476;
  t5503 = 0.340999127418*t250*t5501;
  t5527 = t5521*t3408;
  t5537 = t5482 + t5503 + t5527;
  t5546 = t3456*t5521;
  t5550 = t5501*t3481;
  t5552 = t5476*t3506;
  t5553 = t5546 + t5550 + t5552;
  t5561 = 0.707107*t5553;
  t5564 = 0.340999127418*t250*t5476;
  t5570 = t3554*t5501;
  t5576 = t5521*t3569;
  t5578 = t5564 + t5570 + t5576;
  t5602 = -0.930418*t58*t5596;
  t5642 = 0.366501*t58*t5635;
  t5670 = -1.000000637725*t5668*t3396;
  t5673 = t5602 + t5642 + t5670;
  t5675 = 0.707107*t5673;
  t5683 = -0.366501*t58*t5668;
  t5684 = 0.340999127418*t5596*t3396;
  t5685 = -0.134322983001*t5635*t3396;
  t5686 = t5683 + t5684 + t5685;
  t5694 = 0.930418*t58*t5668;
  t5702 = -0.8656776547239999*t5596*t3396;
  t5704 = 0.340999127418*t5635*t3396;
  t5717 = t5694 + t5702 + t5704;
  t5783 = t3112*t5782;
  t5787 = 0.340999127418*t250*t5786;
  t5808 = t5803*t3408;
  t5809 = t5783 + t5787 + t5808;
  t5820 = t3456*t5803;
  t5825 = t5786*t3481;
  t5828 = t5782*t3506;
  t5830 = t5820 + t5825 + t5828;
  t5833 = 0.707107*t5830;
  t5837 = 0.340999127418*t250*t5782;
  t5841 = t3554*t5786;
  t5842 = t5803*t3569;
  t5843 = t5837 + t5841 + t5842;
  t5929 = t3112*t5907;
  t5952 = 0.340999127418*t250*t5943;
  t5968 = t5966*t3408;
  t5969 = t5929 + t5952 + t5968;
  t5981 = t3456*t5966;
  t5983 = t5943*t3481;
  t5986 = t5907*t3506;
  t5988 = t5981 + t5983 + t5986;
  t5989 = 0.707107*t5988;
  t5993 = 0.340999127418*t250*t5907;
  t5994 = t3554*t5943;
  t5995 = t5966*t3569;
  t5996 = t5993 + t5994 + t5995;
  t6065 = 0.340999127418*t250*t6042;
  t6095 = t3112*t6090;
  t6117 = t6108*t3408;
  t6118 = t6065 + t6095 + t6117;
  t6122 = t3456*t6108;
  t6134 = t6042*t3481;
  t6159 = t6090*t3506;
  t6164 = t6122 + t6134 + t6159;
  t6165 = 0.707107*t6164;
  t6171 = t3554*t6042;
  t6173 = 0.340999127418*t250*t6090;
  t6207 = t6108*t3569;
  t6213 = t6171 + t6173 + t6207;
  t6262 = t3112*t6251;
  t6284 = 0.340999127418*t250*t6283;
  t6312 = t6304*t3408;
  t6315 = t6262 + t6284 + t6312;
  t6318 = t3456*t6304;
  t6322 = t6283*t3481;
  t6325 = t6251*t3506;
  t6332 = t6318 + t6322 + t6325;
  t6333 = 0.707107*t6332;
  t6340 = 0.340999127418*t250*t6251;
  t6342 = t3554*t6283;
  t6352 = t6304*t3569;
  t6359 = t6340 + t6342 + t6352;
  t6415 = -0.930418*t58*t6413;
  t6423 = 0.366501*t58*t6422;
  t6459 = -1.000000637725*t6443*t3396;
  t6461 = t6415 + t6423 + t6459;
  t6462 = 0.707107*t6461;
  t6468 = -0.366501*t58*t6443;
  t6471 = 0.340999127418*t6413*t3396;
  t6482 = -0.134322983001*t6422*t3396;
  t6484 = t6468 + t6471 + t6482;
  t6506 = 0.930418*t58*t6443;
  t6507 = -0.8656776547239999*t6413*t3396;
  t6515 = 0.340999127418*t6422*t3396;
  t6517 = t6506 + t6507 + t6515;
  p_output1[0]=(0.259155*t4334 + t4356 - 0.657905*t4378)*var2[3] + (0.259155*t3439 + t3542 - 0.657905*t3593)*var2[4] + (0.259155*t4032 + t4102 - 0.657905*t4120)*var2[5] + (0.259155*t3839 + t3877 - 0.657905*t3890)*var2[6] + (0.259155*t4468 + t4484 - 0.657905*t4514)*var2[7] + (t4594 + 0.259155*t4621 - 0.657905*t4642)*var2[8];
  p_output1[1]=(0.259155*t5317 + t5350 - 0.657905*t5391)*var2[3] + (0.259155*t4772 + t4791 - 0.657905*t4801)*var2[4] + (0.259155*t5239 + t5269 - 0.657905*t5285)*var2[5] + (0.259155*t5004 + t5050 - 0.657905*t5102)*var2[6] + (0.259155*t5537 + t5561 - 0.657905*t5578)*var2[7] + (t5675 + 0.259155*t5686 - 0.657905*t5717)*var2[8];
  p_output1[2]=(0.259155*t6118 + t6165 - 0.657905*t6213)*var2[4] + (0.259155*t5969 + t5989 - 0.657905*t5996)*var2[5] + (0.259155*t5809 + t5833 - 0.657905*t5843)*var2[6] + (0.259155*t6315 + t6333 - 0.657905*t6359)*var2[7] + (t6462 + 0.259155*t6484 - 0.657905*t6517)*var2[8];
  p_output1[3]=(-0.259155*t4334 + t4356 + 0.657905*t4378)*var2[3] + (-0.259155*t3439 + t3542 + 0.657905*t3593)*var2[4] + (-0.259155*t4032 + t4102 + 0.657905*t4120)*var2[5] + (-0.259155*t3839 + t3877 + 0.657905*t3890)*var2[6] + (-0.259155*t4468 + t4484 + 0.657905*t4514)*var2[7] + (t4594 - 0.259155*t4621 + 0.657905*t4642)*var2[8];
  p_output1[4]=(-0.259155*t5317 + t5350 + 0.657905*t5391)*var2[3] + (-0.259155*t4772 + t4791 + 0.657905*t4801)*var2[4] + (-0.259155*t5239 + t5269 + 0.657905*t5285)*var2[5] + (-0.259155*t5004 + t5050 + 0.657905*t5102)*var2[6] + (-0.259155*t5537 + t5561 + 0.657905*t5578)*var2[7] + (t5675 - 0.259155*t5686 + 0.657905*t5717)*var2[8];
  p_output1[5]=(-0.259155*t6118 + t6165 + 0.657905*t6213)*var2[4] + (-0.259155*t5969 + t5989 + 0.657905*t5996)*var2[5] + (-0.259155*t5809 + t5833 + 0.657905*t5843)*var2[6] + (-0.259155*t6315 + t6333 + 0.657905*t6359)*var2[7] + (t6462 - 0.259155*t6484 + 0.657905*t6517)*var2[8];
  p_output1[6]=(-0.930418*t4334 - 0.366501*t4378)*var2[3] + (-0.930418*t3439 - 0.366501*t3593)*var2[4] + (-0.930418*t4032 - 0.366501*t4120)*var2[5] + (-0.930418*t3839 - 0.366501*t3890)*var2[6] + (-0.930418*t4468 - 0.366501*t4514)*var2[7] + (-0.930418*t4621 - 0.366501*t4642)*var2[8];
  p_output1[7]=(-0.930418*t5317 - 0.366501*t5391)*var2[3] + (-0.930418*t4772 - 0.366501*t4801)*var2[4] + (-0.930418*t5239 - 0.366501*t5285)*var2[5] + (-0.930418*t5004 - 0.366501*t5102)*var2[6] + (-0.930418*t5537 - 0.366501*t5578)*var2[7] + (-0.930418*t5686 - 0.366501*t5717)*var2[8];
  p_output1[8]=(-0.930418*t6118 - 0.366501*t6213)*var2[4] + (-0.930418*t5969 - 0.366501*t5996)*var2[5] + (-0.930418*t5809 - 0.366501*t5843)*var2[6] + (-0.930418*t6315 - 0.366501*t6359)*var2[7] + (-0.930418*t6484 - 0.366501*t6517)*var2[8];
}



void dR_left_hip_pitch_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
