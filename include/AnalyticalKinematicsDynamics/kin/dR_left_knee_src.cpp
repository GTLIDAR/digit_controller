/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:57:05 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dR_left_knee_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1459;
  double t1501;
  double t1125;
  double t1160;
  double t1406;
  double t2247;
  double t2004;
  double t2021;
  double t2403;
  double t372;
  double t420;
  double t739;
  double t2040;
  double t2501;
  double t2610;
  double t2748;
  double t2810;
  double t2905;
  double t2958;
  double t2960;
  double t3196;
  double t3203;
  double t3206;
  double t3236;
  double t3243;
  double t3244;
  double t3257;
  double t3260;
  double t3262;
  double t3263;
  double t2665;
  double t2688;
  double t2727;
  double t2906;
  double t2972;
  double t2973;
  double t2999;
  double t3002;
  double t3267;
  double t3128;
  double t3131;
  double t3157;
  double t3161;
  double t3165;
  double t3173;
  double t3175;
  double t3181;
  double t80;
  double t284;
  double t318;
  double t3058;
  double t3064;
  double t3068;
  double t3192;
  double t3284;
  double t3288;
  double t3289;
  double t3293;
  double t3301;
  double t3316;
  double t3361;
  double t3364;
  double t3386;
  double t3395;
  double t3404;
  double t3408;
  double t3411;
  double t3422;
  double t3423;
  double t3455;
  double t3456;
  double t3457;
  double t3459;
  double t3462;
  double t3463;
  double t3465;
  double t3479;
  double t3641;
  double t3677;
  double t3680;
  double t3682;
  double t3642;
  double t3657;
  double t3661;
  double t3665;
  double t3684;
  double t3685;
  double t3691;
  double t3696;
  double t3704;
  double t3307;
  double t3315;
  double t3723;
  double t3725;
  double t3727;
  double t3717;
  double t3719;
  double t3720;
  double t3687;
  double t3713;
  double t3715;
  double t3443;
  double t3453;
  double t3509;
  double t3516;
  double t3716;
  double t3721;
  double t3729;
  double t3731;
  double t3519;
  double t3520;
  double t3741;
  double t3742;
  double t3743;
  double t3746;
  double t3751;
  double t3756;
  double t3758;
  double t3783;
  double t3563;
  double t3567;
  double t3573;
  double t3581;
  double t3601;
  double t3604;
  double t3852;
  double t3859;
  double t3861;
  double t3875;
  double t3881;
  double t3882;
  double t3903;
  double t3905;
  double t3906;
  double t3954;
  double t3955;
  double t3957;
  double t3931;
  double t3942;
  double t3951;
  double t3893;
  double t3924;
  double t3927;
  double t3928;
  double t3953;
  double t3962;
  double t3967;
  double t3975;
  double t3978;
  double t3980;
  double t3981;
  double t3986;
  double t3987;
  double t3991;
  double t3993;
  double t4040;
  double t4043;
  double t4077;
  double t4080;
  double t4085;
  double t4087;
  double t4046;
  double t4047;
  double t4048;
  double t4053;
  double t4062;
  double t4064;
  double t4066;
  double t4051;
  double t4070;
  double t4094;
  double t4096;
  double t4108;
  double t4109;
  double t4111;
  double t4116;
  double t4132;
  double t4144;
  double t4153;
  double t4163;
  double t4252;
  double t4259;
  double t4266;
  double t4225;
  double t4237;
  double t4239;
  double t4245;
  double t4271;
  double t4273;
  double t4283;
  double t4285;
  double t4293;
  double t4329;
  double t4345;
  double t4353;
  double t4359;
  double t4281;
  double t4295;
  double t4306;
  double t4308;
  double t4311;
  double t4313;
  double t4315;
  double t4318;
  double t4310;
  double t4326;
  double t4363;
  double t4374;
  double t4377;
  double t4381;
  double t4393;
  double t4394;
  double t4399;
  double t4405;
  double t4406;
  double t4407;
  double t4520;
  double t4524;
  double t4529;
  double t4530;
  double t4497;
  double t4498;
  double t4501;
  double t4502;
  double t4477;
  double t4478;
  double t4482;
  double t4486;
  double t4492;
  double t4513;
  double t4532;
  double t4537;
  double t4546;
  double t4548;
  double t4549;
  double t4564;
  double t4572;
  double t4579;
  double t4584;
  double t4588;
  double t4660;
  double t4663;
  double t4666;
  double t4669;
  double t4676;
  double t4677;
  double t4685;
  double t4688;
  double t4698;
  double t4707;
  double t4710;
  double t4719;
  double t4809;
  double t4821;
  double t4822;
  double t4827;
  double t4832;
  double t4839;
  double t4887;
  double t4894;
  double t4897;
  double t4911;
  double t4826;
  double t4844;
  double t4852;
  double t4863;
  double t4868;
  double t4870;
  double t4873;
  double t4876;
  double t4867;
  double t4886;
  double t4914;
  double t4916;
  double t4921;
  double t4926;
  double t4927;
  double t4949;
  double t4955;
  double t4956;
  double t4969;
  double t4972;
  double t5091;
  double t5092;
  double t5094;
  double t5061;
  double t5063;
  double t5068;
  double t5086;
  double t5103;
  double t5110;
  double t5114;
  double t5115;
  double t5118;
  double t5164;
  double t5166;
  double t5172;
  double t5135;
  double t5142;
  double t5149;
  double t5113;
  double t5125;
  double t5127;
  double t5131;
  double t5160;
  double t5173;
  double t5177;
  double t5181;
  double t5186;
  double t5187;
  double t5192;
  double t5199;
  double t5200;
  double t5203;
  double t5205;
  double t5290;
  double t5309;
  double t5314;
  double t5315;
  double t5319;
  double t5354;
  double t5357;
  double t5362;
  double t5334;
  double t5343;
  double t5346;
  double t5310;
  double t5320;
  double t5327;
  double t5332;
  double t5353;
  double t5367;
  double t5376;
  double t5378;
  double t5384;
  double t5385;
  double t5392;
  double t5400;
  double t5409;
  double t5410;
  double t5428;
  double t5588;
  double t5589;
  double t5641;
  double t5644;
  double t5647;
  double t5656;
  double t5597;
  double t5598;
  double t5599;
  double t5609;
  double t5616;
  double t5621;
  double t5625;
  double t5607;
  double t5640;
  double t5663;
  double t5664;
  double t5670;
  double t5675;
  double t5678;
  double t5682;
  double t5693;
  double t5699;
  double t5706;
  double t5707;
  double t5861;
  double t5867;
  double t5870;
  double t5872;
  double t5828;
  double t5830;
  double t5840;
  double t5842;
  double t5784;
  double t5790;
  double t5804;
  double t5811;
  double t5819;
  double t5843;
  double t5878;
  double t5879;
  double t5885;
  double t5892;
  double t5895;
  double t5896;
  double t5919;
  double t5926;
  double t5938;
  double t5943;
  double t6000;
  double t6004;
  double t6007;
  double t6013;
  double t6025;
  double t6026;
  double t6033;
  double t6035;
  double t6052;
  double t6053;
  double t6079;
  double t6082;
  double t6145;
  double t6146;
  double t6148;
  double t6159;
  double t6160;
  double t6161;
  double t6180;
  double t6184;
  double t6186;
  double t6172;
  double t6174;
  double t6177;
  double t6152;
  double t6162;
  double t6164;
  double t6170;
  double t6178;
  double t6188;
  double t6189;
  double t6191;
  double t6192;
  double t6193;
  double t6203;
  double t6212;
  double t6213;
  double t6215;
  double t6218;
  double t6284;
  double t6288;
  double t6291;
  double t6301;
  double t6302;
  double t6304;
  double t6342;
  double t6346;
  double t6348;
  double t6319;
  double t6338;
  double t6340;
  double t6296;
  double t6308;
  double t6310;
  double t6317;
  double t6341;
  double t6352;
  double t6355;
  double t6360;
  double t6369;
  double t6370;
  double t6377;
  double t6387;
  double t6397;
  double t6402;
  double t6407;
  double t6467;
  double t6471;
  double t6473;
  double t6476;
  double t6454;
  double t6456;
  double t6458;
  double t6462;
  double t6463;
  double t6465;
  double t6459;
  double t6466;
  double t6486;
  double t6487;
  double t6492;
  double t6505;
  double t6514;
  double t6518;
  double t6524;
  double t6525;
  double t6527;
  double t6533;
  double t6579;
  double t6581;
  double t6582;
  double t6591;
  double t6592;
  double t6594;
  double t6622;
  double t6626;
  double t6628;
  double t6630;
  double t6584;
  double t6595;
  double t6596;
  double t6603;
  double t6607;
  double t6609;
  double t6615;
  double t6619;
  double t6605;
  double t6620;
  double t6632;
  double t6633;
  double t6645;
  double t6647;
  double t6655;
  double t6657;
  double t6659;
  double t6663;
  double t6667;
  double t6669;
  double t6774;
  double t6776;
  double t6777;
  double t6782;
  double t6764;
  double t6765;
  double t6766;
  double t6768;
  double t6732;
  double t6745;
  double t6747;
  double t6758;
  double t6762;
  double t6769;
  double t6784;
  double t6786;
  double t6793;
  double t6800;
  double t6806;
  double t6807;
  double t6828;
  double t6830;
  double t6832;
  double t6844;
  double t6914;
  double t6916;
  double t6917;
  double t6921;
  double t6924;
  double t6925;
  double t6929;
  double t6930;
  double t6934;
  double t6935;
  double t6936;
  double t6939;
  double t3296;
  double t3434;
  double t3489;
  double t3490;
  double t3498;
  double t3518;
  double t3528;
  double t3529;
  double t3535;
  double t3557;
  double t3570;
  double t3583;
  double t3606;
  double t3622;
  double t3733;
  double t3749;
  double t3784;
  double t3786;
  double t3788;
  double t3794;
  double t3800;
  double t3807;
  double t3808;
  double t3811;
  double t3813;
  double t3815;
  double t3817;
  double t3819;
  double t3968;
  double t3983;
  double t3994;
  double t3996;
  double t3999;
  double t4001;
  double t4004;
  double t4006;
  double t4007;
  double t4008;
  double t4009;
  double t4010;
  double t4013;
  double t4014;
  double t4107;
  double t4126;
  double t4166;
  double t4169;
  double t4175;
  double t4179;
  double t4181;
  double t4188;
  double t4191;
  double t4194;
  double t4197;
  double t4198;
  double t4204;
  double t4212;
  double t4376;
  double t4396;
  double t4409;
  double t4410;
  double t4415;
  double t4419;
  double t4424;
  double t4429;
  double t4431;
  double t4437;
  double t4451;
  double t4455;
  double t4456;
  double t4459;
  double t4544;
  double t4570;
  double t4594;
  double t4601;
  double t4611;
  double t4621;
  double t4626;
  double t4627;
  double t4629;
  double t4638;
  double t4645;
  double t4646;
  double t4647;
  double t4648;
  double t4673;
  double t4692;
  double t4720;
  double t4727;
  double t4728;
  double t4730;
  double t4733;
  double t4739;
  double t4743;
  double t4754;
  double t4762;
  double t4767;
  double t4776;
  double t4781;
  double t4920;
  double t4950;
  double t4974;
  double t4979;
  double t4984;
  double t4987;
  double t4993;
  double t5000;
  double t5015;
  double t5018;
  double t5022;
  double t5026;
  double t5032;
  double t5051;
  double t5179;
  double t5198;
  double t5209;
  double t5212;
  double t5213;
  double t5220;
  double t5221;
  double t5222;
  double t5224;
  double t5225;
  double t5232;
  double t5236;
  double t5251;
  double t5257;
  double t5377;
  double t5393;
  double t5429;
  double t5438;
  double t5442;
  double t5449;
  double t5455;
  double t5456;
  double t5465;
  double t5468;
  double t5469;
  double t5474;
  double t5481;
  double t5483;
  double t5494;
  double t5500;
  double t5501;
  double t5507;
  double t5525;
  double t5526;
  double t5533;
  double t5536;
  double t5544;
  double t5545;
  double t5556;
  double t5561;
  double t5562;
  double t5565;
  double t5667;
  double t5689;
  double t5731;
  double t5732;
  double t5741;
  double t5746;
  double t5750;
  double t5751;
  double t5762;
  double t5764;
  double t5765;
  double t5772;
  double t5775;
  double t5777;
  double t5881;
  double t5902;
  double t5948;
  double t5951;
  double t5956;
  double t5960;
  double t5961;
  double t5962;
  double t5966;
  double t5967;
  double t5972;
  double t5973;
  double t5983;
  double t5987;
  double t6016;
  double t6044;
  double t6093;
  double t6098;
  double t6102;
  double t6103;
  double t6108;
  double t6109;
  double t6112;
  double t6113;
  double t6116;
  double t6121;
  double t6122;
  double t6126;
  double t6190;
  double t6207;
  double t6220;
  double t6221;
  double t6225;
  double t6226;
  double t6233;
  double t6235;
  double t6239;
  double t6247;
  double t6251;
  double t6267;
  double t6268;
  double t6269;
  double t6358;
  double t6378;
  double t6409;
  double t6410;
  double t6411;
  double t6412;
  double t6423;
  double t6425;
  double t6429;
  double t6434;
  double t6436;
  double t6437;
  double t6440;
  double t6443;
  double t6491;
  double t6521;
  double t6536;
  double t6538;
  double t6548;
  double t6549;
  double t6550;
  double t6553;
  double t6556;
  double t6564;
  double t6567;
  double t6569;
  double t6571;
  double t6575;
  double t6640;
  double t6658;
  double t6670;
  double t6676;
  double t6679;
  double t6681;
  double t6683;
  double t6684;
  double t6692;
  double t6695;
  double t6699;
  double t6701;
  double t6702;
  double t6710;
  double t6790;
  double t6817;
  double t6847;
  double t6849;
  double t6850;
  double t6852;
  double t6854;
  double t6855;
  double t6861;
  double t6865;
  double t6866;
  double t6877;
  double t6886;
  double t6892;
  double t6923;
  double t6931;
  double t6942;
  double t6949;
  double t6952;
  double t6956;
  double t6958;
  double t6963;
  double t6964;
  double t6975;
  double t6982;
  double t6985;
  double t6990;
  double t6993;
  t1459 = Cos(var1[3]);
  t1501 = Cos(var1[4]);
  t1125 = Cos(var1[7]);
  t1160 = -1.*t1125;
  t1406 = 1. + t1160;
  t2247 = Cos(var1[5]);
  t2004 = Cos(var1[6]);
  t2021 = Sin(var1[5]);
  t2403 = Sin(var1[6]);
  t372 = Cos(var1[8]);
  t420 = -1.*t372;
  t739 = 1. + t420;
  t2040 = t1459*t1501*t2004*t2021;
  t2501 = -1.*t1459*t1501*t2247*t2403;
  t2610 = t2040 + t2501;
  t2748 = t1459*t1501*t2247*t2004;
  t2810 = t1459*t1501*t2021*t2403;
  t2905 = t2748 + t2810;
  t2958 = Sin(var1[4]);
  t2960 = Sin(var1[7]);
  t3196 = -1.000000637725*t1406;
  t3203 = 1. + t3196;
  t3206 = -1.*t1459*t3203*t2958;
  t3236 = -0.930418*t2960;
  t3243 = 0. + t3236;
  t3244 = t2610*t3243;
  t3257 = -0.366501*t2960;
  t3260 = 0. + t3257;
  t3262 = t2905*t3260;
  t3263 = t3206 + t3244 + t3262;
  t2665 = -0.340999127418*t1406*t2610;
  t2688 = -0.134322983001*t1406;
  t2727 = 1. + t2688;
  t2906 = t2727*t2905;
  t2972 = 0.366501*t2960;
  t2973 = 0. + t2972;
  t2999 = -1.*t1459*t2958*t2973;
  t3002 = t2665 + t2906 + t2999;
  t3267 = Sin(var1[8]);
  t3128 = -0.8656776547239999*t1406;
  t3131 = 1. + t3128;
  t3157 = t3131*t2610;
  t3161 = -0.340999127418*t1406*t2905;
  t3165 = 0.930418*t2960;
  t3173 = 0. + t3165;
  t3175 = -1.*t1459*t2958*t3173;
  t3181 = t3157 + t3161 + t3175;
  t80 = Cos(var1[9]);
  t284 = -1.*t80;
  t318 = 1. + t284;
  t3058 = 0.340999127418*t739*t3002;
  t3064 = -0.134322983001*t739;
  t3068 = 1. + t3064;
  t3192 = t3068*t3181;
  t3284 = -0.366501*t3267;
  t3288 = 0. + t3284;
  t3289 = t3263*t3288;
  t3293 = t3058 + t3192 + t3289;
  t3301 = Sin(var1[9]);
  t3316 = -1.000000637725*t739;
  t3361 = 1. + t3316;
  t3364 = t3361*t3263;
  t3386 = -0.930418*t3267;
  t3395 = 0. + t3386;
  t3404 = t3002*t3395;
  t3408 = 0.366501*t3267;
  t3411 = 0. + t3408;
  t3422 = t3181*t3411;
  t3423 = t3364 + t3404 + t3422;
  t3455 = -0.8656776547239999*t739;
  t3456 = 1. + t3455;
  t3457 = t3456*t3002;
  t3459 = 0.340999127418*t739*t3181;
  t3462 = 0.930418*t3267;
  t3463 = 0. + t3462;
  t3465 = t3263*t3463;
  t3479 = t3457 + t3459 + t3465;
  t3641 = Sin(var1[3]);
  t3677 = t1459*t2247*t2958;
  t3680 = t3641*t2021;
  t3682 = t3677 + t3680;
  t3642 = -1.*t2247*t3641;
  t3657 = t1459*t2958*t2021;
  t3661 = t3642 + t3657;
  t3665 = t2004*t3661;
  t3684 = -1.*t3682*t2403;
  t3685 = t3665 + t3684;
  t3691 = -1.*t2004*t3682;
  t3696 = -1.*t3661*t2403;
  t3704 = t3691 + t3696;
  t3307 = -0.930418*t3301;
  t3315 = 0. + t3307;
  t3723 = t3704*t3243;
  t3725 = t3685*t3260;
  t3727 = t3723 + t3725;
  t3717 = t2727*t3685;
  t3719 = -0.340999127418*t1406*t3704;
  t3720 = t3717 + t3719;
  t3687 = -0.340999127418*t1406*t3685;
  t3713 = t3131*t3704;
  t3715 = t3687 + t3713;
  t3443 = -0.8656776547239999*t318;
  t3453 = 1. + t3443;
  t3509 = -0.134322983001*t318;
  t3516 = 1. + t3509;
  t3716 = t3068*t3715;
  t3721 = 0.340999127418*t739*t3720;
  t3729 = t3727*t3288;
  t3731 = t3716 + t3721 + t3729;
  t3519 = 0.366501*t3301;
  t3520 = 0. + t3519;
  t3741 = t3361*t3727;
  t3742 = t3720*t3395;
  t3743 = t3715*t3411;
  t3746 = t3741 + t3742 + t3743;
  t3751 = 0.340999127418*t739*t3715;
  t3756 = t3456*t3720;
  t3758 = t3727*t3463;
  t3783 = t3751 + t3756 + t3758;
  t3563 = -0.366501*t3301;
  t3567 = 0. + t3563;
  t3573 = -1.000000637725*t318;
  t3581 = 1. + t3573;
  t3601 = 0.930418*t3301;
  t3604 = 0. + t3601;
  t3852 = t2247*t3641;
  t3859 = -1.*t1459*t2958*t2021;
  t3861 = t3852 + t3859;
  t3875 = t2004*t3861;
  t3881 = t3682*t2403;
  t3882 = t3875 + t3881;
  t3903 = t2004*t3682;
  t3905 = -1.*t3861*t2403;
  t3906 = t3903 + t3905;
  t3954 = t3906*t3243;
  t3955 = t3882*t3260;
  t3957 = t3954 + t3955;
  t3931 = t2727*t3882;
  t3942 = -0.340999127418*t1406*t3906;
  t3951 = t3931 + t3942;
  t3893 = -0.340999127418*t1406*t3882;
  t3924 = t3131*t3906;
  t3927 = t3893 + t3924;
  t3928 = t3068*t3927;
  t3953 = 0.340999127418*t739*t3951;
  t3962 = t3957*t3288;
  t3967 = t3928 + t3953 + t3962;
  t3975 = t3361*t3957;
  t3978 = t3951*t3395;
  t3980 = t3927*t3411;
  t3981 = t3975 + t3978 + t3980;
  t3986 = 0.340999127418*t739*t3927;
  t3987 = t3456*t3951;
  t3991 = t3957*t3463;
  t3993 = t3986 + t3987 + t3991;
  t4040 = t3661*t2403;
  t4043 = t3903 + t4040;
  t4077 = t1459*t1501*t3203;
  t4080 = t3685*t3243;
  t4085 = t4043*t3260;
  t4087 = t4077 + t4080 + t4085;
  t4046 = t2727*t4043;
  t4047 = t1459*t1501*t2973;
  t4048 = t3687 + t4046 + t4047;
  t4053 = t3131*t3685;
  t4062 = -0.340999127418*t1406*t4043;
  t4064 = t1459*t1501*t3173;
  t4066 = t4053 + t4062 + t4064;
  t4051 = 0.340999127418*t739*t4048;
  t4070 = t3068*t4066;
  t4094 = t4087*t3288;
  t4096 = t4051 + t4070 + t4094;
  t4108 = t3361*t4087;
  t4109 = t4048*t3395;
  t4111 = t4066*t3411;
  t4116 = t4108 + t4109 + t4111;
  t4132 = t3456*t4048;
  t4144 = 0.340999127418*t739*t4066;
  t4153 = t4087*t3463;
  t4163 = t4132 + t4144 + t4153;
  t4252 = -1.*t2247*t3641*t2958;
  t4259 = t1459*t2021;
  t4266 = t4252 + t4259;
  t4225 = -1.*t1459*t2247;
  t4237 = -1.*t3641*t2958*t2021;
  t4239 = t4225 + t4237;
  t4245 = t2004*t4239;
  t4271 = -1.*t4266*t2403;
  t4273 = t4245 + t4271;
  t4283 = t2004*t4266;
  t4285 = t4239*t2403;
  t4293 = t4283 + t4285;
  t4329 = -1.*t1501*t3203*t3641;
  t4345 = t4273*t3243;
  t4353 = t4293*t3260;
  t4359 = t4329 + t4345 + t4353;
  t4281 = -0.340999127418*t1406*t4273;
  t4295 = t2727*t4293;
  t4306 = -1.*t1501*t3641*t2973;
  t4308 = t4281 + t4295 + t4306;
  t4311 = t3131*t4273;
  t4313 = -0.340999127418*t1406*t4293;
  t4315 = -1.*t1501*t3641*t3173;
  t4318 = t4311 + t4313 + t4315;
  t4310 = 0.340999127418*t739*t4308;
  t4326 = t3068*t4318;
  t4363 = t4359*t3288;
  t4374 = t4310 + t4326 + t4363;
  t4377 = t3361*t4359;
  t4381 = t4308*t3395;
  t4393 = t4318*t3411;
  t4394 = t4377 + t4381 + t4393;
  t4399 = t3456*t4308;
  t4405 = 0.340999127418*t739*t4318;
  t4406 = t4359*t3463;
  t4407 = t4399 + t4405 + t4406;
  t4520 = -0.930418*t1125*t3685;
  t4524 = -0.366501*t1125*t4043;
  t4529 = -1.000000637725*t1459*t1501*t2960;
  t4530 = t4520 + t4524 + t4529;
  t4497 = 0.366501*t1459*t1501*t1125;
  t4498 = -0.340999127418*t3685*t2960;
  t4501 = -0.134322983001*t4043*t2960;
  t4502 = t4497 + t4498 + t4501;
  t4477 = 0.930418*t1459*t1501*t1125;
  t4478 = -0.8656776547239999*t3685*t2960;
  t4482 = -0.340999127418*t4043*t2960;
  t4486 = t4477 + t4478 + t4482;
  t4492 = t3068*t4486;
  t4513 = 0.340999127418*t739*t4502;
  t4532 = t4530*t3288;
  t4537 = t4492 + t4513 + t4532;
  t4546 = t3361*t4530;
  t4548 = t4502*t3395;
  t4549 = t4486*t3411;
  t4564 = t4546 + t4548 + t4549;
  t4572 = 0.340999127418*t739*t4486;
  t4579 = t3456*t4502;
  t4584 = t4530*t3463;
  t4588 = t4572 + t4579 + t4584;
  t4660 = -0.930418*t372*t4048;
  t4663 = 0.366501*t372*t4066;
  t4666 = -1.000000637725*t4087*t3267;
  t4669 = t4660 + t4663 + t4666;
  t4676 = -0.366501*t372*t4087;
  t4677 = 0.340999127418*t4048*t3267;
  t4685 = -0.134322983001*t4066*t3267;
  t4688 = t4676 + t4677 + t4685;
  t4698 = 0.930418*t372*t4087;
  t4707 = -0.8656776547239999*t4048*t3267;
  t4710 = 0.340999127418*t4066*t3267;
  t4719 = t4698 + t4707 + t4710;
  t4809 = t1501*t2004*t3641*t2021;
  t4821 = -1.*t1501*t2247*t3641*t2403;
  t4822 = t4809 + t4821;
  t4827 = t1501*t2247*t2004*t3641;
  t4832 = t1501*t3641*t2021*t2403;
  t4839 = t4827 + t4832;
  t4887 = -1.*t3203*t3641*t2958;
  t4894 = t4822*t3243;
  t4897 = t4839*t3260;
  t4911 = t4887 + t4894 + t4897;
  t4826 = -0.340999127418*t1406*t4822;
  t4844 = t2727*t4839;
  t4852 = -1.*t3641*t2958*t2973;
  t4863 = t4826 + t4844 + t4852;
  t4868 = t3131*t4822;
  t4870 = -0.340999127418*t1406*t4839;
  t4873 = -1.*t3641*t2958*t3173;
  t4876 = t4868 + t4870 + t4873;
  t4867 = 0.340999127418*t739*t4863;
  t4886 = t3068*t4876;
  t4914 = t4911*t3288;
  t4916 = t4867 + t4886 + t4914;
  t4921 = t3361*t4911;
  t4926 = t4863*t3395;
  t4927 = t4876*t3411;
  t4949 = t4921 + t4926 + t4927;
  t4955 = t3456*t4863;
  t4956 = 0.340999127418*t739*t4876;
  t4969 = t4911*t3463;
  t4972 = t4955 + t4956 + t4969;
  t5091 = t2247*t3641*t2958;
  t5092 = -1.*t1459*t2021;
  t5094 = t5091 + t5092;
  t5061 = t1459*t2247;
  t5063 = t3641*t2958*t2021;
  t5068 = t5061 + t5063;
  t5086 = t2004*t5068;
  t5103 = -1.*t5094*t2403;
  t5110 = t5086 + t5103;
  t5114 = -1.*t2004*t5094;
  t5115 = -1.*t5068*t2403;
  t5118 = t5114 + t5115;
  t5164 = t5118*t3243;
  t5166 = t5110*t3260;
  t5172 = t5164 + t5166;
  t5135 = t2727*t5110;
  t5142 = -0.340999127418*t1406*t5118;
  t5149 = t5135 + t5142;
  t5113 = -0.340999127418*t1406*t5110;
  t5125 = t3131*t5118;
  t5127 = t5113 + t5125;
  t5131 = t3068*t5127;
  t5160 = 0.340999127418*t739*t5149;
  t5173 = t5172*t3288;
  t5177 = t5131 + t5160 + t5173;
  t5181 = t3361*t5172;
  t5186 = t5149*t3395;
  t5187 = t5127*t3411;
  t5192 = t5181 + t5186 + t5187;
  t5199 = 0.340999127418*t739*t5127;
  t5200 = t3456*t5149;
  t5203 = t5172*t3463;
  t5205 = t5199 + t5200 + t5203;
  t5290 = t5094*t2403;
  t5309 = t4245 + t5290;
  t5314 = t2004*t5094;
  t5315 = -1.*t4239*t2403;
  t5319 = t5314 + t5315;
  t5354 = t5319*t3243;
  t5357 = t5309*t3260;
  t5362 = t5354 + t5357;
  t5334 = t2727*t5309;
  t5343 = -0.340999127418*t1406*t5319;
  t5346 = t5334 + t5343;
  t5310 = -0.340999127418*t1406*t5309;
  t5320 = t3131*t5319;
  t5327 = t5310 + t5320;
  t5332 = t3068*t5327;
  t5353 = 0.340999127418*t739*t5346;
  t5367 = t5362*t3288;
  t5376 = t5332 + t5353 + t5367;
  t5378 = t3361*t5362;
  t5384 = t5346*t3395;
  t5385 = t5327*t3411;
  t5392 = t5378 + t5384 + t5385;
  t5400 = 0.340999127418*t739*t5327;
  t5409 = t3456*t5346;
  t5410 = t5362*t3463;
  t5428 = t5400 + t5409 + t5410;
  t5588 = t5068*t2403;
  t5589 = t5314 + t5588;
  t5641 = t1501*t3203*t3641;
  t5644 = t5110*t3243;
  t5647 = t5589*t3260;
  t5656 = t5641 + t5644 + t5647;
  t5597 = t2727*t5589;
  t5598 = t1501*t3641*t2973;
  t5599 = t5113 + t5597 + t5598;
  t5609 = t3131*t5110;
  t5616 = -0.340999127418*t1406*t5589;
  t5621 = t1501*t3641*t3173;
  t5625 = t5609 + t5616 + t5621;
  t5607 = 0.340999127418*t739*t5599;
  t5640 = t3068*t5625;
  t5663 = t5656*t3288;
  t5664 = t5607 + t5640 + t5663;
  t5670 = t3361*t5656;
  t5675 = t5599*t3395;
  t5678 = t5625*t3411;
  t5682 = t5670 + t5675 + t5678;
  t5693 = t3456*t5599;
  t5699 = 0.340999127418*t739*t5625;
  t5706 = t5656*t3463;
  t5707 = t5693 + t5699 + t5706;
  t5861 = -0.930418*t1125*t5110;
  t5867 = -0.366501*t1125*t5589;
  t5870 = -1.000000637725*t1501*t3641*t2960;
  t5872 = t5861 + t5867 + t5870;
  t5828 = 0.366501*t1501*t1125*t3641;
  t5830 = -0.340999127418*t5110*t2960;
  t5840 = -0.134322983001*t5589*t2960;
  t5842 = t5828 + t5830 + t5840;
  t5784 = 0.930418*t1501*t1125*t3641;
  t5790 = -0.8656776547239999*t5110*t2960;
  t5804 = -0.340999127418*t5589*t2960;
  t5811 = t5784 + t5790 + t5804;
  t5819 = t3068*t5811;
  t5843 = 0.340999127418*t739*t5842;
  t5878 = t5872*t3288;
  t5879 = t5819 + t5843 + t5878;
  t5885 = t3361*t5872;
  t5892 = t5842*t3395;
  t5895 = t5811*t3411;
  t5896 = t5885 + t5892 + t5895;
  t5919 = 0.340999127418*t739*t5811;
  t5926 = t3456*t5842;
  t5938 = t5872*t3463;
  t5943 = t5919 + t5926 + t5938;
  t6000 = -0.930418*t372*t5599;
  t6004 = 0.366501*t372*t5625;
  t6007 = -1.000000637725*t5656*t3267;
  t6013 = t6000 + t6004 + t6007;
  t6025 = -0.366501*t372*t5656;
  t6026 = 0.340999127418*t5599*t3267;
  t6033 = -0.134322983001*t5625*t3267;
  t6035 = t6025 + t6026 + t6033;
  t6052 = 0.930418*t372*t5656;
  t6053 = -0.8656776547239999*t5599*t3267;
  t6079 = 0.340999127418*t5625*t3267;
  t6082 = t6052 + t6053 + t6079;
  t6145 = t1501*t2004*t2021;
  t6146 = -1.*t1501*t2247*t2403;
  t6148 = t6145 + t6146;
  t6159 = -1.*t1501*t2247*t2004;
  t6160 = -1.*t1501*t2021*t2403;
  t6161 = t6159 + t6160;
  t6180 = t6161*t3243;
  t6184 = t6148*t3260;
  t6186 = t6180 + t6184;
  t6172 = t2727*t6148;
  t6174 = -0.340999127418*t1406*t6161;
  t6177 = t6172 + t6174;
  t6152 = -0.340999127418*t1406*t6148;
  t6162 = t3131*t6161;
  t6164 = t6152 + t6162;
  t6170 = t3068*t6164;
  t6178 = 0.340999127418*t739*t6177;
  t6188 = t6186*t3288;
  t6189 = t6170 + t6178 + t6188;
  t6191 = t3361*t6186;
  t6192 = t6177*t3395;
  t6193 = t6164*t3411;
  t6203 = t6191 + t6192 + t6193;
  t6212 = 0.340999127418*t739*t6164;
  t6213 = t3456*t6177;
  t6215 = t6186*t3463;
  t6218 = t6212 + t6213 + t6215;
  t6284 = -1.*t1501*t2004*t2021;
  t6288 = t1501*t2247*t2403;
  t6291 = t6284 + t6288;
  t6301 = t1501*t2247*t2004;
  t6302 = t1501*t2021*t2403;
  t6304 = t6301 + t6302;
  t6342 = t6304*t3243;
  t6346 = t6291*t3260;
  t6348 = t6342 + t6346;
  t6319 = t2727*t6291;
  t6338 = -0.340999127418*t1406*t6304;
  t6340 = t6319 + t6338;
  t6296 = -0.340999127418*t1406*t6291;
  t6308 = t3131*t6304;
  t6310 = t6296 + t6308;
  t6317 = t3068*t6310;
  t6341 = 0.340999127418*t739*t6340;
  t6352 = t6348*t3288;
  t6355 = t6317 + t6341 + t6352;
  t6360 = t3361*t6348;
  t6369 = t6340*t3395;
  t6370 = t6310*t3411;
  t6377 = t6360 + t6369 + t6370;
  t6387 = 0.340999127418*t739*t6310;
  t6397 = t3456*t6340;
  t6402 = t6348*t3463;
  t6407 = t6387 + t6397 + t6402;
  t6467 = -1.*t3203*t2958;
  t6471 = t6148*t3243;
  t6473 = t6304*t3260;
  t6476 = t6467 + t6471 + t6473;
  t6454 = t2727*t6304;
  t6456 = -1.*t2958*t2973;
  t6458 = t6152 + t6454 + t6456;
  t6462 = t3131*t6148;
  t6463 = -1.*t2958*t3173;
  t6465 = t6462 + t6338 + t6463;
  t6459 = 0.340999127418*t739*t6458;
  t6466 = t3068*t6465;
  t6486 = t6476*t3288;
  t6487 = t6459 + t6466 + t6486;
  t6492 = t3361*t6476;
  t6505 = t6458*t3395;
  t6514 = t6465*t3411;
  t6518 = t6492 + t6505 + t6514;
  t6524 = t3456*t6458;
  t6525 = 0.340999127418*t739*t6465;
  t6527 = t6476*t3463;
  t6533 = t6524 + t6525 + t6527;
  t6579 = -1.*t2004*t2958*t2021;
  t6581 = t2247*t2958*t2403;
  t6582 = t6579 + t6581;
  t6591 = -1.*t2247*t2004*t2958;
  t6592 = -1.*t2958*t2021*t2403;
  t6594 = t6591 + t6592;
  t6622 = -1.*t1501*t3203;
  t6626 = t6582*t3243;
  t6628 = t6594*t3260;
  t6630 = t6622 + t6626 + t6628;
  t6584 = -0.340999127418*t1406*t6582;
  t6595 = t2727*t6594;
  t6596 = -1.*t1501*t2973;
  t6603 = t6584 + t6595 + t6596;
  t6607 = t3131*t6582;
  t6609 = -0.340999127418*t1406*t6594;
  t6615 = -1.*t1501*t3173;
  t6619 = t6607 + t6609 + t6615;
  t6605 = 0.340999127418*t739*t6603;
  t6620 = t3068*t6619;
  t6632 = t6630*t3288;
  t6633 = t6605 + t6620 + t6632;
  t6645 = t3361*t6630;
  t6647 = t6603*t3395;
  t6655 = t6619*t3411;
  t6657 = t6645 + t6647 + t6655;
  t6659 = t3456*t6603;
  t6663 = 0.340999127418*t739*t6619;
  t6667 = t6630*t3463;
  t6669 = t6659 + t6663 + t6667;
  t6774 = -0.930418*t1125*t6148;
  t6776 = -0.366501*t1125*t6304;
  t6777 = 1.000000637725*t2958*t2960;
  t6782 = t6774 + t6776 + t6777;
  t6764 = -0.366501*t1125*t2958;
  t6765 = -0.340999127418*t6148*t2960;
  t6766 = -0.134322983001*t6304*t2960;
  t6768 = t6764 + t6765 + t6766;
  t6732 = -0.930418*t1125*t2958;
  t6745 = -0.8656776547239999*t6148*t2960;
  t6747 = -0.340999127418*t6304*t2960;
  t6758 = t6732 + t6745 + t6747;
  t6762 = t3068*t6758;
  t6769 = 0.340999127418*t739*t6768;
  t6784 = t6782*t3288;
  t6786 = t6762 + t6769 + t6784;
  t6793 = t3361*t6782;
  t6800 = t6768*t3395;
  t6806 = t6758*t3411;
  t6807 = t6793 + t6800 + t6806;
  t6828 = 0.340999127418*t739*t6758;
  t6830 = t3456*t6768;
  t6832 = t6782*t3463;
  t6844 = t6828 + t6830 + t6832;
  t6914 = -0.930418*t372*t6458;
  t6916 = 0.366501*t372*t6465;
  t6917 = -1.000000637725*t6476*t3267;
  t6921 = t6914 + t6916 + t6917;
  t6924 = -0.366501*t372*t6476;
  t6925 = 0.340999127418*t6458*t3267;
  t6929 = -0.134322983001*t6465*t3267;
  t6930 = t6924 + t6925 + t6929;
  t6934 = 0.930418*t372*t6476;
  t6935 = -0.8656776547239999*t6458*t3267;
  t6936 = 0.340999127418*t6465*t3267;
  t6939 = t6934 + t6935 + t6936;
  t3296 = 0.340999127418*t318*t3293;
  t3434 = t3315*t3423;
  t3489 = t3453*t3479;
  t3490 = t3296 + t3434 + t3489;
  t3498 = -0.657905*t3490;
  t3518 = t3516*t3293;
  t3528 = t3520*t3423;
  t3529 = 0.340999127418*t318*t3479;
  t3535 = t3518 + t3528 + t3529;
  t3557 = 0.259155*t3535;
  t3570 = t3567*t3293;
  t3583 = t3581*t3423;
  t3606 = t3604*t3479;
  t3622 = t3570 + t3583 + t3606;
  t3733 = 0.340999127418*t318*t3731;
  t3749 = t3315*t3746;
  t3784 = t3453*t3783;
  t3786 = t3733 + t3749 + t3784;
  t3788 = -0.657905*t3786;
  t3794 = t3516*t3731;
  t3800 = t3520*t3746;
  t3807 = 0.340999127418*t318*t3783;
  t3808 = t3794 + t3800 + t3807;
  t3811 = 0.259155*t3808;
  t3813 = t3567*t3731;
  t3815 = t3581*t3746;
  t3817 = t3604*t3783;
  t3819 = t3813 + t3815 + t3817;
  t3968 = 0.340999127418*t318*t3967;
  t3983 = t3315*t3981;
  t3994 = t3453*t3993;
  t3996 = t3968 + t3983 + t3994;
  t3999 = -0.657905*t3996;
  t4001 = t3516*t3967;
  t4004 = t3520*t3981;
  t4006 = 0.340999127418*t318*t3993;
  t4007 = t4001 + t4004 + t4006;
  t4008 = 0.259155*t4007;
  t4009 = t3567*t3967;
  t4010 = t3581*t3981;
  t4013 = t3604*t3993;
  t4014 = t4009 + t4010 + t4013;
  t4107 = -0.366501*t80*t4096;
  t4126 = -1.000000637725*t3301*t4116;
  t4166 = 0.930418*t80*t4163;
  t4169 = t4107 + t4126 + t4166;
  t4175 = 0.340999127418*t3301*t4096;
  t4179 = -0.930418*t80*t4116;
  t4181 = -0.8656776547239999*t3301*t4163;
  t4188 = t4175 + t4179 + t4181;
  t4191 = -0.657905*t4188;
  t4194 = -0.134322983001*t3301*t4096;
  t4197 = 0.366501*t80*t4116;
  t4198 = 0.340999127418*t3301*t4163;
  t4204 = t4194 + t4197 + t4198;
  t4212 = 0.259155*t4204;
  t4376 = 0.340999127418*t318*t4374;
  t4396 = t3315*t4394;
  t4409 = t3453*t4407;
  t4410 = t4376 + t4396 + t4409;
  t4415 = -0.657905*t4410;
  t4419 = t3516*t4374;
  t4424 = t3520*t4394;
  t4429 = 0.340999127418*t318*t4407;
  t4431 = t4419 + t4424 + t4429;
  t4437 = 0.259155*t4431;
  t4451 = t3567*t4374;
  t4455 = t3581*t4394;
  t4456 = t3604*t4407;
  t4459 = t4451 + t4455 + t4456;
  t4544 = 0.340999127418*t318*t4537;
  t4570 = t3315*t4564;
  t4594 = t3453*t4588;
  t4601 = t4544 + t4570 + t4594;
  t4611 = -0.657905*t4601;
  t4621 = t3516*t4537;
  t4626 = t3520*t4564;
  t4627 = 0.340999127418*t318*t4588;
  t4629 = t4621 + t4626 + t4627;
  t4638 = 0.259155*t4629;
  t4645 = t3567*t4537;
  t4646 = t3581*t4564;
  t4647 = t3604*t4588;
  t4648 = t4645 + t4646 + t4647;
  t4673 = t3315*t4669;
  t4692 = 0.340999127418*t318*t4688;
  t4720 = t3453*t4719;
  t4727 = t4673 + t4692 + t4720;
  t4728 = -0.657905*t4727;
  t4730 = t3520*t4669;
  t4733 = t3516*t4688;
  t4739 = 0.340999127418*t318*t4719;
  t4743 = t4730 + t4733 + t4739;
  t4754 = 0.259155*t4743;
  t4762 = t3581*t4669;
  t4767 = t3567*t4688;
  t4776 = t3604*t4719;
  t4781 = t4762 + t4767 + t4776;
  t4920 = 0.340999127418*t318*t4916;
  t4950 = t3315*t4949;
  t4974 = t3453*t4972;
  t4979 = t4920 + t4950 + t4974;
  t4984 = -0.657905*t4979;
  t4987 = t3516*t4916;
  t4993 = t3520*t4949;
  t5000 = 0.340999127418*t318*t4972;
  t5015 = t4987 + t4993 + t5000;
  t5018 = 0.259155*t5015;
  t5022 = t3567*t4916;
  t5026 = t3581*t4949;
  t5032 = t3604*t4972;
  t5051 = t5022 + t5026 + t5032;
  t5179 = 0.340999127418*t318*t5177;
  t5198 = t3315*t5192;
  t5209 = t3453*t5205;
  t5212 = t5179 + t5198 + t5209;
  t5213 = -0.657905*t5212;
  t5220 = t3516*t5177;
  t5221 = t3520*t5192;
  t5222 = 0.340999127418*t318*t5205;
  t5224 = t5220 + t5221 + t5222;
  t5225 = 0.259155*t5224;
  t5232 = t3567*t5177;
  t5236 = t3581*t5192;
  t5251 = t3604*t5205;
  t5257 = t5232 + t5236 + t5251;
  t5377 = 0.340999127418*t318*t5376;
  t5393 = t3315*t5392;
  t5429 = t3453*t5428;
  t5438 = t5377 + t5393 + t5429;
  t5442 = -0.657905*t5438;
  t5449 = t3516*t5376;
  t5455 = t3520*t5392;
  t5456 = 0.340999127418*t318*t5428;
  t5465 = t5449 + t5455 + t5456;
  t5468 = 0.259155*t5465;
  t5469 = t3567*t5376;
  t5474 = t3581*t5392;
  t5481 = t3604*t5428;
  t5483 = t5469 + t5474 + t5481;
  t5494 = 0.340999127418*t318*t4096;
  t5500 = t3315*t4116;
  t5501 = t3453*t4163;
  t5507 = t5494 + t5500 + t5501;
  t5525 = -0.657905*t5507;
  t5526 = t3516*t4096;
  t5533 = t3520*t4116;
  t5536 = 0.340999127418*t318*t4163;
  t5544 = t5526 + t5533 + t5536;
  t5545 = 0.259155*t5544;
  t5556 = t3567*t4096;
  t5561 = t3581*t4116;
  t5562 = t3604*t4163;
  t5565 = t5556 + t5561 + t5562;
  t5667 = -0.366501*t80*t5664;
  t5689 = -1.000000637725*t3301*t5682;
  t5731 = 0.930418*t80*t5707;
  t5732 = t5667 + t5689 + t5731;
  t5741 = 0.340999127418*t3301*t5664;
  t5746 = -0.930418*t80*t5682;
  t5750 = -0.8656776547239999*t3301*t5707;
  t5751 = t5741 + t5746 + t5750;
  t5762 = -0.657905*t5751;
  t5764 = -0.134322983001*t3301*t5664;
  t5765 = 0.366501*t80*t5682;
  t5772 = 0.340999127418*t3301*t5707;
  t5775 = t5764 + t5765 + t5772;
  t5777 = 0.259155*t5775;
  t5881 = 0.340999127418*t318*t5879;
  t5902 = t3315*t5896;
  t5948 = t3453*t5943;
  t5951 = t5881 + t5902 + t5948;
  t5956 = -0.657905*t5951;
  t5960 = t3516*t5879;
  t5961 = t3520*t5896;
  t5962 = 0.340999127418*t318*t5943;
  t5966 = t5960 + t5961 + t5962;
  t5967 = 0.259155*t5966;
  t5972 = t3567*t5879;
  t5973 = t3581*t5896;
  t5983 = t3604*t5943;
  t5987 = t5972 + t5973 + t5983;
  t6016 = t3315*t6013;
  t6044 = 0.340999127418*t318*t6035;
  t6093 = t3453*t6082;
  t6098 = t6016 + t6044 + t6093;
  t6102 = -0.657905*t6098;
  t6103 = t3520*t6013;
  t6108 = t3516*t6035;
  t6109 = 0.340999127418*t318*t6082;
  t6112 = t6103 + t6108 + t6109;
  t6113 = 0.259155*t6112;
  t6116 = t3581*t6013;
  t6121 = t3567*t6035;
  t6122 = t3604*t6082;
  t6126 = t6116 + t6121 + t6122;
  t6190 = 0.340999127418*t318*t6189;
  t6207 = t3315*t6203;
  t6220 = t3453*t6218;
  t6221 = t6190 + t6207 + t6220;
  t6225 = -0.657905*t6221;
  t6226 = t3516*t6189;
  t6233 = t3520*t6203;
  t6235 = 0.340999127418*t318*t6218;
  t6239 = t6226 + t6233 + t6235;
  t6247 = 0.259155*t6239;
  t6251 = t3567*t6189;
  t6267 = t3581*t6203;
  t6268 = t3604*t6218;
  t6269 = t6251 + t6267 + t6268;
  t6358 = 0.340999127418*t318*t6355;
  t6378 = t3315*t6377;
  t6409 = t3453*t6407;
  t6410 = t6358 + t6378 + t6409;
  t6411 = -0.657905*t6410;
  t6412 = t3516*t6355;
  t6423 = t3520*t6377;
  t6425 = 0.340999127418*t318*t6407;
  t6429 = t6412 + t6423 + t6425;
  t6434 = 0.259155*t6429;
  t6436 = t3567*t6355;
  t6437 = t3581*t6377;
  t6440 = t3604*t6407;
  t6443 = t6436 + t6437 + t6440;
  t6491 = -0.366501*t80*t6487;
  t6521 = -1.000000637725*t3301*t6518;
  t6536 = 0.930418*t80*t6533;
  t6538 = t6491 + t6521 + t6536;
  t6548 = 0.340999127418*t3301*t6487;
  t6549 = -0.930418*t80*t6518;
  t6550 = -0.8656776547239999*t3301*t6533;
  t6553 = t6548 + t6549 + t6550;
  t6556 = -0.657905*t6553;
  t6564 = -0.134322983001*t3301*t6487;
  t6567 = 0.366501*t80*t6518;
  t6569 = 0.340999127418*t3301*t6533;
  t6571 = t6564 + t6567 + t6569;
  t6575 = 0.259155*t6571;
  t6640 = 0.340999127418*t318*t6633;
  t6658 = t3315*t6657;
  t6670 = t3453*t6669;
  t6676 = t6640 + t6658 + t6670;
  t6679 = -0.657905*t6676;
  t6681 = t3516*t6633;
  t6683 = t3520*t6657;
  t6684 = 0.340999127418*t318*t6669;
  t6692 = t6681 + t6683 + t6684;
  t6695 = 0.259155*t6692;
  t6699 = t3567*t6633;
  t6701 = t3581*t6657;
  t6702 = t3604*t6669;
  t6710 = t6699 + t6701 + t6702;
  t6790 = 0.340999127418*t318*t6786;
  t6817 = t3315*t6807;
  t6847 = t3453*t6844;
  t6849 = t6790 + t6817 + t6847;
  t6850 = -0.657905*t6849;
  t6852 = t3516*t6786;
  t6854 = t3520*t6807;
  t6855 = 0.340999127418*t318*t6844;
  t6861 = t6852 + t6854 + t6855;
  t6865 = 0.259155*t6861;
  t6866 = t3567*t6786;
  t6877 = t3581*t6807;
  t6886 = t3604*t6844;
  t6892 = t6866 + t6877 + t6886;
  t6923 = t3315*t6921;
  t6931 = 0.340999127418*t318*t6930;
  t6942 = t3453*t6939;
  t6949 = t6923 + t6931 + t6942;
  t6952 = -0.657905*t6949;
  t6956 = t3520*t6921;
  t6958 = t3516*t6930;
  t6963 = 0.340999127418*t318*t6939;
  t6964 = t6956 + t6958 + t6963;
  t6975 = 0.259155*t6964;
  t6982 = t3581*t6921;
  t6985 = t3567*t6930;
  t6990 = t3604*t6939;
  t6993 = t6982 + t6985 + t6990;
  p_output1[0]=(t4415 + t4437 - 0.707107*t4459)*var2[3] + (t3498 + t3557 - 0.707107*t3622)*var2[4] + (t3999 + t4008 - 0.707107*t4014)*var2[5] + (t3788 + t3811 - 0.707107*t3819)*var2[6] + (t4611 + t4638 - 0.707107*t4648)*var2[7] + (t4728 + t4754 - 0.707107*t4781)*var2[8] + (-0.707107*t4169 + t4191 + t4212)*var2[9];
  p_output1[1]=(t5525 + t5545 - 0.707107*t5565)*var2[3] + (t4984 + t5018 - 0.707107*t5051)*var2[4] + (t5442 + t5468 - 0.707107*t5483)*var2[5] + (t5213 + t5225 - 0.707107*t5257)*var2[6] + (t5956 + t5967 - 0.707107*t5987)*var2[7] + (t6102 + t6113 - 0.707107*t6126)*var2[8] + (-0.707107*t5732 + t5762 + t5777)*var2[9];
  p_output1[2]=(t6679 + t6695 - 0.707107*t6710)*var2[4] + (t6411 + t6434 - 0.707107*t6443)*var2[5] + (t6225 + t6247 - 0.707107*t6269)*var2[6] + (t6850 + t6865 - 0.707107*t6892)*var2[7] + (t6952 + t6975 - 0.707107*t6993)*var2[8] + (-0.707107*t6538 + t6556 + t6575)*var2[9];
  p_output1[3]=(t4415 + t4437 + 0.707107*t4459)*var2[3] + (t3498 + t3557 + 0.707107*t3622)*var2[4] + (t3999 + t4008 + 0.707107*t4014)*var2[5] + (t3788 + t3811 + 0.707107*t3819)*var2[6] + (t4611 + t4638 + 0.707107*t4648)*var2[7] + (t4728 + t4754 + 0.707107*t4781)*var2[8] + (0.707107*t4169 + t4191 + t4212)*var2[9];
  p_output1[4]=(t5525 + t5545 + 0.707107*t5565)*var2[3] + (t4984 + t5018 + 0.707107*t5051)*var2[4] + (t5442 + t5468 + 0.707107*t5483)*var2[5] + (t5213 + t5225 + 0.707107*t5257)*var2[6] + (t5956 + t5967 + 0.707107*t5987)*var2[7] + (t6102 + t6113 + 0.707107*t6126)*var2[8] + (0.707107*t5732 + t5762 + t5777)*var2[9];
  p_output1[5]=(t6679 + t6695 + 0.707107*t6710)*var2[4] + (t6411 + t6434 + 0.707107*t6443)*var2[5] + (t6225 + t6247 + 0.707107*t6269)*var2[6] + (t6850 + t6865 + 0.707107*t6892)*var2[7] + (t6952 + t6975 + 0.707107*t6993)*var2[8] + (0.707107*t6538 + t6556 + t6575)*var2[9];
  p_output1[6]=(-0.366501*t4410 - 0.930418*t4431)*var2[3] + (-0.366501*t3490 - 0.930418*t3535)*var2[4] + (-0.366501*t3996 - 0.930418*t4007)*var2[5] + (-0.366501*t3786 - 0.930418*t3808)*var2[6] + (-0.366501*t4601 - 0.930418*t4629)*var2[7] + (-0.366501*t4727 - 0.930418*t4743)*var2[8] + (-0.366501*t4188 - 0.930418*t4204)*var2[9];
  p_output1[7]=(-0.366501*t5507 - 0.930418*t5544)*var2[3] + (-0.366501*t4979 - 0.930418*t5015)*var2[4] + (-0.366501*t5438 - 0.930418*t5465)*var2[5] + (-0.366501*t5212 - 0.930418*t5224)*var2[6] + (-0.366501*t5951 - 0.930418*t5966)*var2[7] + (-0.366501*t6098 - 0.930418*t6112)*var2[8] + (-0.366501*t5751 - 0.930418*t5775)*var2[9];
  p_output1[8]=(-0.366501*t6676 - 0.930418*t6692)*var2[4] + (-0.366501*t6410 - 0.930418*t6429)*var2[5] + (-0.366501*t6221 - 0.930418*t6239)*var2[6] + (-0.366501*t6849 - 0.930418*t6861)*var2[7] + (-0.366501*t6949 - 0.930418*t6964)*var2[8] + (-0.366501*t6553 - 0.930418*t6571)*var2[9];
}



void dR_left_knee_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
