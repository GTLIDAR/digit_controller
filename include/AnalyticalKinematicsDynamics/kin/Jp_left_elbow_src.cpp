/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:08:56 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_left_elbow_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t857;
  double t1193;
  double t1219;
  double t1251;
  double t1271;
  double t1382;
  double t2069;
  double t1745;
  double t1776;
  double t2305;
  double t123;
  double t128;
  double t781;
  double t2065;
  double t2352;
  double t2355;
  double t2660;
  double t2673;
  double t2925;
  double t3869;
  double t3915;
  double t3939;
  double t4062;
  double t50;
  double t3470;
  double t3535;
  double t3190;
  double t3214;
  double t3256;
  double t3599;
  double t3702;
  double t3820;
  double t4011;
  double t3054;
  double t3097;
  double t4485;
  double t4172;
  double t876;
  double t992;
  double t858;
  double t860;
  double t5660;
  double t5172;
  double t4220;
  double t4270;
  double t4277;
  double t4317;
  double t4325;
  double t4374;
  double t5066;
  double t4653;
  double t4712;
  double t4750;
  double t4801;
  double t4931;
  double t4947;
  double t5223;
  double t5262;
  double t5303;
  double t5358;
  double t5362;
  double t5377;
  double t5482;
  double t5549;
  double t5576;
  double t4135;
  double t5834;
  double t4177;
  double t6187;
  double t4588;
  double t5886;
  double t4526;
  double t6287;
  double t6288;
  double t5884;
  double t5885;
  double t5891;
  double t5954;
  double t5981;
  double t5986;
  double t6001;
  double t6012;
  double t6175;
  double t6181;
  double t6184;
  double t6191;
  double t6192;
  double t6230;
  double t6237;
  double t6238;
  double t6303;
  double t6316;
  double t6317;
  double t6351;
  double t6353;
  double t6355;
  double t6366;
  double t6373;
  double t6100;
  double t6121;
  double t5677;
  double t5727;
  double t5801;
  double t5810;
  double t824;
  double t861;
  double t1049;
  double t1165;
  double t1369;
  double t1418;
  double t1589;
  double t2372;
  double t2422;
  double t2561;
  double t2969;
  double t3009;
  double t3111;
  double t3178;
  double t6679;
  double t6686;
  double t6701;
  double t6731;
  double t6778;
  double t6796;
  double t3331;
  double t3397;
  double t3537;
  double t3581;
  double t3864;
  double t3941;
  double t4156;
  double t4157;
  double t4179;
  double t4188;
  double t4200;
  double t6843;
  double t6852;
  double t6853;
  double t6877;
  double t6879;
  double t6882;
  double t4433;
  double t4477;
  double t4552;
  double t4582;
  double t4600;
  double t4602;
  double t4624;
  double t5033;
  double t5045;
  double t5074;
  double t5131;
  double t5197;
  double t5214;
  double t5217;
  double t5619;
  double t5798;
  double t5813;
  double t5818;
  double t6908;
  double t6915;
  double t6916;
  double t6919;
  double t6939;
  double t6945;
  double t6965;
  double t6966;
  double t7002;
  double t7013;
  double t7019;
  double t7024;
  double t6080;
  double t6082;
  double t6134;
  double t6143;
  double t6258;
  double t6266;
  double t6291;
  double t6295;
  double t7028;
  double t7041;
  double t7058;
  double t7062;
  double t7079;
  double t7082;
  double t7084;
  double t7103;
  double t6446;
  double t6457;
  double t7113;
  double t7115;
  double t7116;
  double t7125;
  double t6526;
  double t6528;
  double t6593;
  double t6598;
  double t7321;
  double t7329;
  double t7340;
  double t7389;
  double t7395;
  double t7400;
  double t7428;
  double t7430;
  double t7432;
  double t7448;
  double t7455;
  double t7462;
  double t7467;
  double t7480;
  double t7484;
  double t7489;
  double t7495;
  double t7498;
  double t7506;
  double t7514;
  double t7515;
  double t7518;
  double t7524;
  double t7529;
  double t7534;
  double t7535;
  double t7539;
  double t7544;
  double t7546;
  double t7549;
  double t7614;
  double t7615;
  double t7630;
  double t7636;
  double t7638;
  double t7641;
  double t7651;
  double t7653;
  double t7660;
  double t7662;
  double t7685;
  double t7690;
  double t7693;
  double t7703;
  double t7714;
  double t7716;
  double t7720;
  double t7722;
  double t7726;
  double t7732;
  double t7734;
  double t7735;
  double t7738;
  double t7753;
  double t7754;
  double t7755;
  double t7759;
  double t7763;
  double t7765;
  double t7767;
  double t7851;
  double t7852;
  double t7853;
  double t7858;
  double t7865;
  double t7866;
  double t7881;
  double t7893;
  double t7909;
  double t7913;
  double t7927;
  double t7933;
  double t7934;
  double t7935;
  double t7943;
  double t7944;
  double t7947;
  double t7948;
  double t7952;
  double t7953;
  double t7955;
  double t7956;
  double t7967;
  double t7969;
  double t7975;
  double t7976;
  double t7983;
  double t7987;
  double t7988;
  double t7995;
  double t8080;
  double t8085;
  double t8089;
  double t8091;
  double t8092;
  double t8093;
  double t8097;
  double t8098;
  double t8100;
  double t8108;
  double t8109;
  double t8114;
  double t8121;
  double t8124;
  double t8131;
  double t8132;
  double t8136;
  double t8143;
  double t8151;
  double t8154;
  double t8156;
  double t8163;
  double t8183;
  double t8193;
  double t8195;
  double t8205;
  double t8207;
  double t8210;
  double t8213;
  double t8270;
  double t8271;
  double t8281;
  double t8289;
  double t8290;
  double t8295;
  double t8297;
  double t8301;
  double t8311;
  double t8316;
  double t8317;
  double t8324;
  double t8325;
  double t8329;
  double t8332;
  double t8335;
  double t8338;
  double t8342;
  double t8351;
  double t8352;
  double t8357;
  double t8360;
  double t8362;
  double t8363;
  double t8364;
  double t8373;
  double t8374;
  double t8381;
  double t8388;
  double t8448;
  double t8452;
  double t8455;
  double t8459;
  double t8466;
  double t8467;
  double t8474;
  double t8478;
  double t8479;
  double t8486;
  double t8487;
  double t8493;
  double t8499;
  double t8504;
  double t8505;
  double t8508;
  double t8511;
  double t8512;
  double t8518;
  double t8520;
  double t8521;
  double t8524;
  double t8525;
  double t8529;
  double t8530;
  double t8531;
  double t8536;
  double t8591;
  double t8596;
  double t8597;
  double t8602;
  double t8603;
  double t8608;
  double t8613;
  double t8619;
  double t8621;
  double t8622;
  double t8623;
  double t8630;
  double t8631;
  double t8632;
  double t8636;
  double t8644;
  double t8645;
  double t8646;
  double t8647;
  double t8649;
  double t8650;
  double t8652;
  double t8653;
  double t8573;
  double t8576;
  double t8577;
  double t8584;
  double t8585;
  double t8706;
  double t8707;
  double t8709;
  double t8721;
  double t8723;
  double t8724;
  double t8726;
  double t8727;
  double t8732;
  double t8734;
  double t8735;
  double t8736;
  double t8746;
  double t8747;
  double t8748;
  double t8750;
  double t8752;
  double t8755;
  double t8757;
  double t8758;
  double t8759;
  double t8760;
  double t8762;
  double t8763;
  double t8769;
  double t8770;
  double t8778;
  double t8779;
  double t8780;
  double t8781;
  double t8811;
  double t8812;
  double t8814;
  double t8816;
  double t8817;
  double t8818;
  double t8822;
  double t8827;
  double t8828;
  double t8830;
  double t8831;
  double t8832;
  double t8834;
  double t8835;
  double t8836;
  double t8843;
  double t8844;
  double t8845;
  double t8846;
  double t8848;
  double t8849;
  double t8850;
  double t8855;
  double t8859;
  double t8866;
  double t8870;
  double t8871;
  double t8934;
  double t8940;
  double t8941;
  double t8944;
  double t8946;
  double t8947;
  double t8948;
  double t8949;
  double t8953;
  double t8955;
  double t8956;
  double t8957;
  double t8960;
  double t8961;
  double t8962;
  double t8963;
  double t8966;
  double t8968;
  double t8970;
  double t8977;
  double t8981;
  double t8982;
  double t8983;
  double t8984;
  double t8902;
  double t8903;
  double t8904;
  double t8908;
  double t8912;
  double t8913;
  double t8920;
  double t8925;
  double t8930;
  double t9014;
  double t9016;
  double t9025;
  double t9027;
  double t9028;
  double t9029;
  double t9043;
  double t9045;
  double t9046;
  double t9047;
  double t9049;
  double t9051;
  double t9052;
  double t9054;
  double t9056;
  double t9057;
  double t9058;
  double t9059;
  double t9061;
  double t9062;
  double t9069;
  double t9070;
  double t9072;
  double t9073;
  double t9074;
  double t9075;
  double t9127;
  double t9128;
  double t9129;
  double t9130;
  double t9132;
  double t9134;
  double t9138;
  double t9139;
  double t9144;
  double t9145;
  double t9146;
  double t9147;
  double t9149;
  double t9150;
  double t9151;
  double t9152;
  double t9154;
  double t9155;
  double t9156;
  double t9160;
  double t9162;
  double t9163;
  double t9164;
  double t9166;
  double t9186;
  double t9197;
  double t9190;
  double t9185;
  double t9189;
  double t9200;
  double t9216;
  double t9196;
  double t9209;
  double t9219;
  double t9206;
  double t9229;
  double t9215;
  double t9217;
  double t9218;
  double t9220;
  double t9222;
  double t9223;
  double t9225;
  double t9226;
  double t9227;
  double t9230;
  double t9231;
  double t9232;
  double t9234;
  double t9239;
  double t9240;
  double t9241;
  double t9242;
  double t9243;
  double t9187;
  double t9188;
  double t9191;
  double t9192;
  double t9193;
  double t9194;
  double t9198;
  double t9199;
  double t9201;
  double t9202;
  double t9203;
  double t9204;
  double t9207;
  double t9208;
  double t9210;
  double t9211;
  double t9212;
  double t9213;
  double t9274;
  double t9276;
  double t9277;
  double t9281;
  double t9283;
  double t9284;
  double t9289;
  double t9297;
  double t9298;
  double t9299;
  double t9301;
  double t9305;
  double t9306;
  double t9307;
  double t9308;
  double t9318;
  double t9320;
  double t9321;
  double t9325;
  double t9329;
  double t9331;
  double t9333;
  double t9334;
  double t9383;
  double t9384;
  double t9385;
  double t9390;
  double t9391;
  double t9393;
  double t9400;
  double t9402;
  double t9404;
  double t9405;
  double t9407;
  double t9409;
  double t9410;
  double t9411;
  double t9414;
  double t9415;
  double t9417;
  double t9418;
  double t9424;
  double t9425;
  double t9428;
  double t9429;
  double t9459;
  double t9460;
  double t9461;
  double t9463;
  double t9465;
  double t9468;
  double t9471;
  double t9472;
  double t9473;
  double t9494;
  double t9495;
  double t9496;
  double t9497;
  double t9499;
  double t9500;
  double t9501;
  double t9502;
  double t9504;
  double t9505;
  double t9506;
  double t9507;
  double t9525;
  double t9526;
  double t9527;
  double t9528;
  double t9530;
  double t9531;
  double t9532;
  double t9533;
  double t9535;
  double t9536;
  double t9537;
  double t9538;
  t857 = Sin(var1[14]);
  t1193 = Sin(var1[3]);
  t1219 = Cos(var1[13]);
  t1251 = -1.*t1219;
  t1271 = 1. + t1251;
  t1382 = Sin(var1[13]);
  t2069 = Cos(var1[3]);
  t1745 = Cos(var1[5]);
  t1776 = Sin(var1[4]);
  t2305 = Sin(var1[5]);
  t123 = Cos(var1[14]);
  t128 = -1.*t123;
  t781 = 1. + t128;
  t2065 = -1.*t1745*t1193*t1776;
  t2352 = t2069*t2305;
  t2355 = t2065 + t2352;
  t2660 = -1.*t2069*t1745;
  t2673 = -1.*t1193*t1776*t2305;
  t2925 = t2660 + t2673;
  t3869 = Cos(var1[15]);
  t3915 = -1.*t3869;
  t3939 = 1. + t3915;
  t4062 = Sin(var1[15]);
  t50 = Cos(var1[4]);
  t3470 = 0.994522*t857;
  t3535 = 0. + t3470;
  t3190 = -1.*t1382*t2355;
  t3214 = t1219*t2925;
  t3256 = t3190 + t3214;
  t3599 = t1219*t2355;
  t3702 = t1382*t2925;
  t3820 = t3599 + t3702;
  t4011 = 0.051978134642000004*t3939;
  t3054 = -0.104528*t857;
  t3097 = 0. + t3054;
  t4485 = -0.05226439969100001*t3939;
  t4172 = 0.49726168403800003*t3939;
  t876 = 0.104528*t857;
  t992 = 0. + t876;
  t858 = -0.994522*t857;
  t860 = 0. + t858;
  t5660 = Sin(var1[16]);
  t5172 = -0.073913*t4062;
  t4220 = -1.*t50*t3535*t1193;
  t4270 = 0.103955395616*t781*t3256;
  t4277 = -0.9890740084840001*t781;
  t4317 = 1. + t4277;
  t4325 = t4317*t3820;
  t4374 = t4220 + t4270 + t4325;
  t5066 = -0.703234*t4062;
  t4653 = -1.*t50*t3097*t1193;
  t4712 = -0.010926102783999999*t781;
  t4750 = 1. + t4712;
  t4801 = t4750*t3256;
  t4931 = 0.103955395616*t781*t3820;
  t4947 = t4653 + t4801 + t4931;
  t5223 = -1.0000001112680001*t781;
  t5262 = 1. + t5223;
  t5303 = -1.*t5262*t50*t1193;
  t5358 = t992*t3256;
  t5362 = t860*t3820;
  t5377 = t5303 + t5358 + t5362;
  t5482 = Cos(var1[16]);
  t5549 = -1.*t5482;
  t5576 = 1. + t5549;
  t4135 = -0.707107*t4062;
  t5834 = -0.49726168403800003*t3939;
  t4177 = 0.073913*t4062;
  t6187 = -0.051978134642000004*t3939;
  t4588 = 0.707107*t4062;
  t5886 = 0.05226439969100001*t3939;
  t4526 = 0.703234*t4062;
  t6287 = -0.104528*t5660;
  t6288 = 0. + t6287;
  t5884 = t5834 + t5172;
  t5885 = t5884*t4374;
  t5891 = t5886 + t5066;
  t5954 = t5891*t4947;
  t5981 = -0.500001190325*t3939;
  t5986 = 1. + t5981;
  t6001 = t5986*t5377;
  t6012 = t5885 + t5954 + t6001;
  t6175 = -0.5054634410180001*t3939;
  t6181 = 1. + t6175;
  t6184 = t6181*t4374;
  t6191 = t6187 + t4135;
  t6192 = t6191*t4947;
  t6230 = t5834 + t4177;
  t6237 = t6230*t5377;
  t6238 = t6184 + t6192 + t6237;
  t6303 = t6187 + t4588;
  t6316 = t6303*t4374;
  t6317 = -0.9945383682050002*t3939;
  t6351 = 1. + t6317;
  t6353 = t6351*t4947;
  t6355 = t5886 + t4526;
  t6366 = t6355*t5377;
  t6373 = t6316 + t6353 + t6366;
  t6100 = 0.994522*t5660;
  t6121 = 0. + t6100;
  t5677 = -0.994522*t5660;
  t5727 = 0. + t5677;
  t5801 = 0.104528*t5660;
  t5810 = 0. + t5801;
  t824 = -0.056500534356700764*t781;
  t861 = 0.38315650737400003*t860;
  t1049 = -0.040271188976*t992;
  t1165 = 0. + t824 + t861 + t1049;
  t1369 = 0.4*t1271;
  t1418 = 0.12*t1382;
  t1589 = 0. + t1369 + t1418;
  t2372 = 0.12*t1271;
  t2422 = -0.4*t1382;
  t2561 = 0. + t2372 + t2422;
  t2969 = 1.1345904784751044e-7*var1[14];
  t3009 = -0.04027119345689465*t781;
  t3111 = -0.05650052807*t3097;
  t3178 = t2969 + t3009 + t3111;
  t6679 = t2069*t1745*t1776;
  t6686 = t1193*t2305;
  t6701 = t6679 + t6686;
  t6731 = -1.*t1745*t1193;
  t6778 = t2069*t1776*t2305;
  t6796 = t6731 + t6778;
  t3331 = 1.1924972351948546e-8*var1[14];
  t3397 = 0.38315655000705834*t781;
  t3537 = -0.05650052807*t3535;
  t3581 = t3331 + t3397 + t3537;
  t3864 = -1.5601527583902087e-7*var1[15];
  t3941 = 0.09582494577057615*t3939;
  t4156 = t4011 + t4135;
  t4157 = 0.231098203479*t4156;
  t4179 = t4172 + t4177;
  t4188 = 0.164383620275*t4179;
  t4200 = t3864 + t3941 + t4157 + t4188;
  t6843 = -1.*t1382*t6701;
  t6852 = t1219*t6796;
  t6853 = t6843 + t6852;
  t6877 = t1219*t6701;
  t6879 = t1382*t6796;
  t6882 = t6877 + t6879;
  t4433 = 1.639789470231751e-8*var1[15];
  t4477 = 0.22983603018311177*t3939;
  t4552 = t4485 + t4526;
  t4582 = 0.164383620275*t4552;
  t4600 = t4011 + t4588;
  t4602 = 0.18957839082800002*t4600;
  t4624 = t4433 + t4477 + t4582 + t4602;
  t5033 = 1.568745163810375e-7*var1[15];
  t5045 = 0.08219200580743281*t3939;
  t5074 = t4485 + t5066;
  t5131 = 0.231098203479*t5074;
  t5197 = t4172 + t5172;
  t5214 = 0.18957839082800002*t5197;
  t5217 = t5033 + t5045 + t5131 + t5214;
  t5619 = 0.19098732144477495*t5576;
  t5798 = 0.137024246638*t5727;
  t5813 = -0.014401763312*t5810;
  t5818 = 0. + t5619 + t5798 + t5813;
  t6908 = t2069*t50*t3535;
  t6915 = 0.103955395616*t781*t6853;
  t6916 = t4317*t6882;
  t6919 = t6908 + t6915 + t6916;
  t6939 = t2069*t50*t3097;
  t6945 = t4750*t6853;
  t6965 = 0.103955395616*t781*t6882;
  t6966 = t6939 + t6945 + t6965;
  t7002 = t5262*t2069*t50;
  t7013 = t992*t6853;
  t7019 = t860*t6882;
  t7024 = t7002 + t7013 + t7019;
  t6080 = -5.06291820800569e-8*var1[16];
  t6082 = 0.13702426188441388*t5576;
  t6134 = 0.190987300194*t6121;
  t6143 = t6080 + t6082 + t6134;
  t6258 = -4.817066759205414e-7*var1[16];
  t6266 = -0.0144017649144554*t5576;
  t6291 = 0.190987300194*t6288;
  t6295 = t6258 + t6266 + t6291;
  t7028 = t5884*t6919;
  t7041 = t5891*t6966;
  t7058 = t5986*t7024;
  t7062 = t7028 + t7041 + t7058;
  t7079 = t6181*t6919;
  t7082 = t6191*t6966;
  t7084 = t6230*t7024;
  t7103 = t7079 + t7082 + t7084;
  t6446 = -0.010926102783999999*t5576;
  t6457 = 1. + t6446;
  t7113 = t6303*t6919;
  t7115 = t6351*t6966;
  t7116 = t6355*t7024;
  t7125 = t7113 + t7115 + t7116;
  t6526 = -0.9890740084840001*t5576;
  t6528 = 1. + t6526;
  t6593 = -1.0000001112680001*t5576;
  t6598 = 1. + t6593;
  t7321 = -1.*t2069*t50*t1745*t1382;
  t7329 = t1219*t2069*t50*t2305;
  t7340 = t7321 + t7329;
  t7389 = t1219*t2069*t50*t1745;
  t7395 = t2069*t50*t1382*t2305;
  t7400 = t7389 + t7395;
  t7428 = -1.*t2069*t3535*t1776;
  t7430 = 0.103955395616*t781*t7340;
  t7432 = t4317*t7400;
  t7448 = t7428 + t7430 + t7432;
  t7455 = -1.*t2069*t3097*t1776;
  t7462 = t4750*t7340;
  t7467 = 0.103955395616*t781*t7400;
  t7480 = t7455 + t7462 + t7467;
  t7484 = -1.*t5262*t2069*t1776;
  t7489 = t992*t7340;
  t7495 = t860*t7400;
  t7498 = t7484 + t7489 + t7495;
  t7506 = t5884*t7448;
  t7514 = t5891*t7480;
  t7515 = t5986*t7498;
  t7518 = t7506 + t7514 + t7515;
  t7524 = t6181*t7448;
  t7529 = t6191*t7480;
  t7534 = t6230*t7498;
  t7535 = t7524 + t7529 + t7534;
  t7539 = t6303*t7448;
  t7544 = t6351*t7480;
  t7546 = t6355*t7498;
  t7549 = t7539 + t7544 + t7546;
  t7614 = -1.*t50*t1745*t1382*t1193;
  t7615 = t1219*t50*t1193*t2305;
  t7630 = t7614 + t7615;
  t7636 = t1219*t50*t1745*t1193;
  t7638 = t50*t1382*t1193*t2305;
  t7641 = t7636 + t7638;
  t7651 = -1.*t3535*t1193*t1776;
  t7653 = 0.103955395616*t781*t7630;
  t7660 = t4317*t7641;
  t7662 = t7651 + t7653 + t7660;
  t7685 = -1.*t3097*t1193*t1776;
  t7690 = t4750*t7630;
  t7693 = 0.103955395616*t781*t7641;
  t7703 = t7685 + t7690 + t7693;
  t7714 = -1.*t5262*t1193*t1776;
  t7716 = t992*t7630;
  t7720 = t860*t7641;
  t7722 = t7714 + t7716 + t7720;
  t7726 = t5884*t7662;
  t7732 = t5891*t7703;
  t7734 = t5986*t7722;
  t7735 = t7726 + t7732 + t7734;
  t7738 = t6181*t7662;
  t7753 = t6191*t7703;
  t7754 = t6230*t7722;
  t7755 = t7738 + t7753 + t7754;
  t7759 = t6303*t7662;
  t7763 = t6351*t7703;
  t7765 = t6355*t7722;
  t7767 = t7759 + t7763 + t7765;
  t7851 = t1745*t1382*t1776;
  t7852 = -1.*t1219*t1776*t2305;
  t7853 = t7851 + t7852;
  t7858 = -1.*t1219*t1745*t1776;
  t7865 = -1.*t1382*t1776*t2305;
  t7866 = t7858 + t7865;
  t7881 = -1.*t50*t3535;
  t7893 = 0.103955395616*t781*t7853;
  t7909 = t4317*t7866;
  t7913 = t7881 + t7893 + t7909;
  t7927 = -1.*t50*t3097;
  t7933 = t4750*t7853;
  t7934 = 0.103955395616*t781*t7866;
  t7935 = t7927 + t7933 + t7934;
  t7943 = -1.*t5262*t50;
  t7944 = t992*t7853;
  t7947 = t860*t7866;
  t7948 = t7943 + t7944 + t7947;
  t7952 = t5884*t7913;
  t7953 = t5891*t7935;
  t7955 = t5986*t7948;
  t7956 = t7952 + t7953 + t7955;
  t7967 = t6181*t7913;
  t7969 = t6191*t7935;
  t7975 = t6230*t7948;
  t7976 = t7967 + t7969 + t7975;
  t7983 = t6303*t7913;
  t7987 = t6351*t7935;
  t7988 = t6355*t7948;
  t7995 = t7983 + t7987 + t7988;
  t8080 = t1745*t1193;
  t8085 = -1.*t2069*t1776*t2305;
  t8089 = t8080 + t8085;
  t8091 = t1382*t6701;
  t8092 = t1219*t8089;
  t8093 = t8091 + t8092;
  t8097 = -1.*t1382*t8089;
  t8098 = t6877 + t8097;
  t8100 = 0.103955395616*t781*t8093;
  t8108 = t4750*t8098;
  t8109 = t8100 + t8108;
  t8114 = t4317*t8093;
  t8121 = 0.103955395616*t781*t8098;
  t8124 = t8114 + t8121;
  t8131 = t860*t8093;
  t8132 = t992*t8098;
  t8136 = t8131 + t8132;
  t8143 = t5891*t8109;
  t8151 = t5884*t8124;
  t8154 = t5986*t8136;
  t8156 = t8143 + t8151 + t8154;
  t8163 = t6191*t8109;
  t8183 = t6181*t8124;
  t8193 = t6230*t8136;
  t8195 = t8163 + t8183 + t8193;
  t8205 = t6351*t8109;
  t8207 = t6303*t8124;
  t8210 = t6355*t8136;
  t8213 = t8205 + t8207 + t8210;
  t8270 = t1745*t1193*t1776;
  t8271 = -1.*t2069*t2305;
  t8281 = t8270 + t8271;
  t8289 = t1382*t8281;
  t8290 = t8289 + t3214;
  t8295 = t1219*t8281;
  t8297 = -1.*t1382*t2925;
  t8301 = t8295 + t8297;
  t8311 = 0.103955395616*t781*t8290;
  t8316 = t4750*t8301;
  t8317 = t8311 + t8316;
  t8324 = t4317*t8290;
  t8325 = 0.103955395616*t781*t8301;
  t8329 = t8324 + t8325;
  t8332 = t860*t8290;
  t8335 = t992*t8301;
  t8338 = t8332 + t8335;
  t8342 = t5891*t8317;
  t8351 = t5884*t8329;
  t8352 = t5986*t8338;
  t8357 = t8342 + t8351 + t8352;
  t8360 = t6191*t8317;
  t8362 = t6181*t8329;
  t8363 = t6230*t8338;
  t8364 = t8360 + t8362 + t8363;
  t8373 = t6351*t8317;
  t8374 = t6303*t8329;
  t8381 = t6355*t8338;
  t8388 = t8373 + t8374 + t8381;
  t8448 = t50*t1745*t1382;
  t8452 = -1.*t1219*t50*t2305;
  t8455 = t8448 + t8452;
  t8459 = t1219*t50*t1745;
  t8466 = t50*t1382*t2305;
  t8467 = t8459 + t8466;
  t8474 = 0.103955395616*t781*t8455;
  t8478 = t4750*t8467;
  t8479 = t8474 + t8478;
  t8486 = t4317*t8455;
  t8487 = 0.103955395616*t781*t8467;
  t8493 = t8486 + t8487;
  t8499 = t860*t8455;
  t8504 = t992*t8467;
  t8505 = t8499 + t8504;
  t8508 = t5891*t8479;
  t8511 = t5884*t8493;
  t8512 = t5986*t8505;
  t8518 = t8508 + t8511 + t8512;
  t8520 = t6191*t8479;
  t8521 = t6181*t8493;
  t8524 = t6230*t8505;
  t8525 = t8520 + t8521 + t8524;
  t8529 = t6351*t8479;
  t8530 = t6303*t8493;
  t8531 = t6355*t8505;
  t8536 = t8529 + t8530 + t8531;
  t8591 = -1.*t1219*t6701;
  t8596 = -1.*t1382*t6796;
  t8597 = t8591 + t8596;
  t8602 = t4750*t8597;
  t8603 = t6915 + t8602;
  t8608 = t4317*t6853;
  t8613 = 0.103955395616*t781*t8597;
  t8619 = t8608 + t8613;
  t8621 = t860*t6853;
  t8622 = t992*t8597;
  t8623 = t8621 + t8622;
  t8630 = t5891*t8603;
  t8631 = t5884*t8619;
  t8632 = t5986*t8623;
  t8636 = t8630 + t8631 + t8632;
  t8644 = t6191*t8603;
  t8645 = t6181*t8619;
  t8646 = t6230*t8623;
  t8647 = t8644 + t8645 + t8646;
  t8649 = t6351*t8603;
  t8650 = t6303*t8619;
  t8652 = t6355*t8623;
  t8653 = t8649 + t8650 + t8652;
  t8573 = 0.12*t1219;
  t8576 = 0.4*t1382;
  t8577 = t8573 + t8576;
  t8584 = -0.4*t1219;
  t8585 = t8584 + t1418;
  t8706 = t2069*t1745;
  t8707 = t1193*t1776*t2305;
  t8709 = t8706 + t8707;
  t8721 = -1.*t1382*t8281;
  t8723 = t1219*t8709;
  t8724 = t8721 + t8723;
  t8726 = -1.*t1219*t8281;
  t8727 = -1.*t1382*t8709;
  t8732 = t8726 + t8727;
  t8734 = 0.103955395616*t781*t8724;
  t8735 = t4750*t8732;
  t8736 = t8734 + t8735;
  t8746 = t4317*t8724;
  t8747 = 0.103955395616*t781*t8732;
  t8748 = t8746 + t8747;
  t8750 = t860*t8724;
  t8752 = t992*t8732;
  t8755 = t8750 + t8752;
  t8757 = t5891*t8736;
  t8758 = t5884*t8748;
  t8759 = t5986*t8755;
  t8760 = t8757 + t8758 + t8759;
  t8762 = t6191*t8736;
  t8763 = t6181*t8748;
  t8769 = t6230*t8755;
  t8770 = t8762 + t8763 + t8769;
  t8778 = t6351*t8736;
  t8779 = t6303*t8748;
  t8780 = t6355*t8755;
  t8781 = t8778 + t8779 + t8780;
  t8811 = -1.*t50*t1745*t1382;
  t8812 = t1219*t50*t2305;
  t8814 = t8811 + t8812;
  t8816 = -1.*t1219*t50*t1745;
  t8817 = -1.*t50*t1382*t2305;
  t8818 = t8816 + t8817;
  t8822 = 0.103955395616*t781*t8814;
  t8827 = t4750*t8818;
  t8828 = t8822 + t8827;
  t8830 = t4317*t8814;
  t8831 = 0.103955395616*t781*t8818;
  t8832 = t8830 + t8831;
  t8834 = t860*t8814;
  t8835 = t992*t8818;
  t8836 = t8834 + t8835;
  t8843 = t5891*t8828;
  t8844 = t5884*t8832;
  t8845 = t5986*t8836;
  t8846 = t8843 + t8844 + t8845;
  t8848 = t6191*t8828;
  t8849 = t6181*t8832;
  t8850 = t6230*t8836;
  t8855 = t8848 + t8849 + t8850;
  t8859 = t6351*t8828;
  t8866 = t6303*t8832;
  t8870 = t6355*t8836;
  t8871 = t8859 + t8866 + t8870;
  t8934 = -1.0000001112680001*t2069*t50*t857;
  t8940 = 0.104528*t123*t6853;
  t8941 = -0.994522*t123*t6882;
  t8944 = t8934 + t8940 + t8941;
  t8946 = 0.994522*t123*t2069*t50;
  t8947 = 0.103955395616*t857*t6853;
  t8948 = -0.9890740084840001*t857*t6882;
  t8949 = t8946 + t8947 + t8948;
  t8953 = -0.104528*t123*t2069*t50;
  t8955 = -0.010926102783999999*t857*t6853;
  t8956 = 0.103955395616*t857*t6882;
  t8957 = t8953 + t8955 + t8956;
  t8960 = t6355*t8944;
  t8961 = t6303*t8949;
  t8962 = t6351*t8957;
  t8963 = t8960 + t8961 + t8962;
  t8966 = t6230*t8944;
  t8968 = t6181*t8949;
  t8970 = t6191*t8957;
  t8977 = t8966 + t8968 + t8970;
  t8981 = t5986*t8944;
  t8982 = t5884*t8949;
  t8983 = t5891*t8957;
  t8984 = t8981 + t8982 + t8983;
  t8902 = -0.3852670428678886*t123;
  t8903 = -0.056500534356700764*t857;
  t8904 = t8902 + t8903;
  t8908 = 0.0059058871981009595*t123;
  t8912 = -0.04027119345689465*t857;
  t8913 = 1.1345904784751044e-7 + t8908 + t8912;
  t8920 = -0.05619101817723254*t123;
  t8925 = 0.38315655000705834*t857;
  t8930 = 1.1924972351948546e-8 + t8920 + t8925;
  t9014 = t1382*t8709;
  t9016 = t8295 + t9014;
  t9025 = -1.0000001112680001*t50*t857*t1193;
  t9027 = 0.104528*t123*t8724;
  t9028 = -0.994522*t123*t9016;
  t9029 = t9025 + t9027 + t9028;
  t9043 = 0.994522*t123*t50*t1193;
  t9045 = 0.103955395616*t857*t8724;
  t9046 = -0.9890740084840001*t857*t9016;
  t9047 = t9043 + t9045 + t9046;
  t9049 = -0.104528*t123*t50*t1193;
  t9051 = -0.010926102783999999*t857*t8724;
  t9052 = 0.103955395616*t857*t9016;
  t9054 = t9049 + t9051 + t9052;
  t9056 = t6355*t9029;
  t9057 = t6303*t9047;
  t9058 = t6351*t9054;
  t9059 = t9056 + t9057 + t9058;
  t9061 = t6230*t9029;
  t9062 = t6181*t9047;
  t9069 = t6191*t9054;
  t9070 = t9061 + t9062 + t9069;
  t9072 = t5986*t9029;
  t9073 = t5884*t9047;
  t9074 = t5891*t9054;
  t9075 = t9072 + t9073 + t9074;
  t9127 = 1.0000001112680001*t857*t1776;
  t9128 = 0.104528*t123*t8814;
  t9129 = -0.994522*t123*t8467;
  t9130 = t9127 + t9128 + t9129;
  t9132 = -0.994522*t123*t1776;
  t9134 = 0.103955395616*t857*t8814;
  t9138 = -0.9890740084840001*t857*t8467;
  t9139 = t9132 + t9134 + t9138;
  t9144 = 0.104528*t123*t1776;
  t9145 = -0.010926102783999999*t857*t8814;
  t9146 = 0.103955395616*t857*t8467;
  t9147 = t9144 + t9145 + t9146;
  t9149 = t6355*t9130;
  t9150 = t6303*t9139;
  t9151 = t6351*t9147;
  t9152 = t9149 + t9150 + t9151;
  t9154 = t6230*t9130;
  t9155 = t6181*t9139;
  t9156 = t6191*t9147;
  t9160 = t9154 + t9155 + t9156;
  t9162 = t5986*t9130;
  t9163 = t5884*t9139;
  t9164 = t5891*t9147;
  t9166 = t9162 + t9163 + t9164;
  t9186 = 0.051978134642000004*t4062;
  t9197 = -0.05226439969100001*t4062;
  t9190 = 0.49726168403800003*t4062;
  t9185 = -0.707107*t3869;
  t9189 = 0.073913*t3869;
  t9200 = 0.707107*t3869;
  t9216 = -0.051978134642000004*t4062;
  t9196 = 0.703234*t3869;
  t9209 = -0.073913*t3869;
  t9219 = -0.49726168403800003*t4062;
  t9206 = -0.703234*t3869;
  t9229 = 0.05226439969100001*t4062;
  t9215 = -0.5054634410180001*t4062*t6919;
  t9217 = t9185 + t9216;
  t9218 = t9217*t6966;
  t9220 = t9189 + t9219;
  t9222 = t9220*t7024;
  t9223 = t9215 + t9218 + t9222;
  t9225 = t9200 + t9216;
  t9226 = t9225*t6919;
  t9227 = -0.9945383682050002*t4062*t6966;
  t9230 = t9196 + t9229;
  t9231 = t9230*t7024;
  t9232 = t9226 + t9227 + t9231;
  t9234 = t9209 + t9219;
  t9239 = t9234*t6919;
  t9240 = t9206 + t9229;
  t9241 = t9240*t6966;
  t9242 = -0.500001190325*t4062*t7024;
  t9243 = t9239 + t9241 + t9242;
  t9187 = t9185 + t9186;
  t9188 = 0.231098203479*t9187;
  t9191 = t9189 + t9190;
  t9192 = 0.164383620275*t9191;
  t9193 = 0.09582494577057615*t4062;
  t9194 = -1.5601527583902087e-7 + t9188 + t9192 + t9193;
  t9198 = t9196 + t9197;
  t9199 = 0.164383620275*t9198;
  t9201 = t9200 + t9186;
  t9202 = 0.18957839082800002*t9201;
  t9203 = 0.22983603018311177*t4062;
  t9204 = 1.639789470231751e-8 + t9199 + t9202 + t9203;
  t9207 = t9206 + t9197;
  t9208 = 0.231098203479*t9207;
  t9210 = t9209 + t9190;
  t9211 = 0.18957839082800002*t9210;
  t9212 = 0.08219200580743281*t4062;
  t9213 = 1.568745163810375e-7 + t9208 + t9211 + t9212;
  t9274 = t50*t3535*t1193;
  t9276 = t4317*t9016;
  t9277 = t9274 + t8734 + t9276;
  t9281 = t50*t3097*t1193;
  t9283 = t4750*t8724;
  t9284 = 0.103955395616*t781*t9016;
  t9289 = t9281 + t9283 + t9284;
  t9297 = t5262*t50*t1193;
  t9298 = t992*t8724;
  t9299 = t860*t9016;
  t9301 = t9297 + t9298 + t9299;
  t9305 = -0.5054634410180001*t4062*t9277;
  t9306 = t9217*t9289;
  t9307 = t9220*t9301;
  t9308 = t9305 + t9306 + t9307;
  t9318 = t9225*t9277;
  t9320 = -0.9945383682050002*t4062*t9289;
  t9321 = t9230*t9301;
  t9325 = t9318 + t9320 + t9321;
  t9329 = t9234*t9277;
  t9331 = t9240*t9289;
  t9333 = -0.500001190325*t4062*t9301;
  t9334 = t9329 + t9331 + t9333;
  t9383 = -1.*t3535*t1776;
  t9384 = t4317*t8467;
  t9385 = t9383 + t8822 + t9384;
  t9390 = -1.*t3097*t1776;
  t9391 = t4750*t8814;
  t9393 = t9390 + t9391 + t8487;
  t9400 = -1.*t5262*t1776;
  t9402 = t992*t8814;
  t9404 = t860*t8467;
  t9405 = t9400 + t9402 + t9404;
  t9407 = -0.5054634410180001*t4062*t9385;
  t9409 = t9217*t9393;
  t9410 = t9220*t9405;
  t9411 = t9407 + t9409 + t9410;
  t9414 = t9225*t9385;
  t9415 = -0.9945383682050002*t4062*t9393;
  t9417 = t9230*t9405;
  t9418 = t9414 + t9415 + t9417;
  t9424 = t9234*t9385;
  t9425 = t9240*t9393;
  t9428 = -0.500001190325*t4062*t9405;
  t9429 = t9424 + t9425 + t9428;
  t9459 = -0.13777901533039377*t5482;
  t9460 = 0.19098732144477495*t5660;
  t9461 = t9459 + t9460;
  t9463 = 0.18994107176353728*t5482;
  t9465 = 0.13702426188441388*t5660;
  t9468 = -5.06291820800569e-8 + t9463 + t9465;
  t9471 = -0.019963520514678434*t5482;
  t9472 = -0.0144017649144554*t5660;
  t9473 = -4.817066759205414e-7 + t9471 + t9472;
  t9494 = t5884*t9277;
  t9495 = t5891*t9289;
  t9496 = t5986*t9301;
  t9497 = t9494 + t9495 + t9496;
  t9499 = t6181*t9277;
  t9500 = t6191*t9289;
  t9501 = t6230*t9301;
  t9502 = t9499 + t9500 + t9501;
  t9504 = t6303*t9277;
  t9505 = t6351*t9289;
  t9506 = t6355*t9301;
  t9507 = t9504 + t9505 + t9506;
  t9525 = t5884*t9385;
  t9526 = t5891*t9393;
  t9527 = t5986*t9405;
  t9528 = t9525 + t9526 + t9527;
  t9530 = t6181*t9385;
  t9531 = t6191*t9393;
  t9532 = t6230*t9405;
  t9533 = t9530 + t9531 + t9532;
  t9535 = t6303*t9385;
  t9536 = t6351*t9393;
  t9537 = t6355*t9405;
  t9538 = t9535 + t9536 + t9537;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1589*t2355 + t2561*t2925 + t3178*t3256 + t3581*t3820 + t4200*t4374 + t4624*t4947 - 1.*t1165*t1193*t50 + t5217*t5377 + t5818*t6012 + t6143*t6238 + t6295*t6373 + 0.250125*(0.103955395616*t5576*t6238 + t6012*t6288 + t6373*t6457) + 0.206868*(t6012*t6121 + 0.103955395616*t5576*t6373 + t6238*t6528) + 0.290567*(t5727*t6238 + t5810*t6373 + t6012*t6598);
  p_output1[10]=t1165*t2069*t50 + t1589*t6701 + t2561*t6796 + t3178*t6853 + t3581*t6882 + t4200*t6919 + t4624*t6966 + t5217*t7024 + t5818*t7062 + t6143*t7103 + t6295*t7125 + 0.206868*(t6121*t7062 + t6528*t7103 + 0.103955395616*t5576*t7125) + 0.290567*(t6598*t7062 + t5727*t7103 + t5810*t7125) + 0.250125*(t6288*t7062 + 0.103955395616*t5576*t7103 + t6457*t7125);
  p_output1[11]=0;
  p_output1[12]=-1.*t1165*t1776*t2069 + t1589*t1745*t2069*t50 + t2069*t2305*t2561*t50 + t3178*t7340 + t3581*t7400 + t4200*t7448 + t4624*t7480 + t5217*t7498 + t5818*t7518 + t6143*t7535 + t6295*t7549 + 0.206868*(t6121*t7518 + t6528*t7535 + 0.103955395616*t5576*t7549) + 0.290567*(t6598*t7518 + t5727*t7535 + t5810*t7549) + 0.250125*(t6288*t7518 + 0.103955395616*t5576*t7535 + t6457*t7549);
  p_output1[13]=-1.*t1165*t1193*t1776 + t1193*t1589*t1745*t50 + t1193*t2305*t2561*t50 + t3178*t7630 + t3581*t7641 + t4200*t7662 + t4624*t7703 + t5217*t7722 + t5818*t7735 + t6143*t7755 + t6295*t7767 + 0.206868*(t6121*t7735 + t6528*t7755 + 0.103955395616*t5576*t7767) + 0.290567*(t6598*t7735 + t5727*t7755 + t5810*t7767) + 0.250125*(t6288*t7735 + 0.103955395616*t5576*t7755 + t6457*t7767);
  p_output1[14]=-1.*t1589*t1745*t1776 - 1.*t1776*t2305*t2561 - 1.*t1165*t50 + t3178*t7853 + t3581*t7866 + t4200*t7913 + t4624*t7935 + t5217*t7948 + t5818*t7956 + t6143*t7976 + t6295*t7995 + 0.206868*(t6121*t7956 + t6528*t7976 + 0.103955395616*t5576*t7995) + 0.290567*(t6598*t7956 + t5727*t7976 + t5810*t7995) + 0.250125*(t6288*t7956 + 0.103955395616*t5576*t7976 + t6457*t7995);
  p_output1[15]=t2561*t6701 + t1589*t8089 + t3581*t8093 + t3178*t8098 + t4624*t8109 + t4200*t8124 + t5217*t8136 + t5818*t8156 + t6143*t8195 + t6295*t8213 + 0.206868*(t6121*t8156 + t6528*t8195 + 0.103955395616*t5576*t8213) + 0.290567*(t6598*t8156 + t5727*t8195 + t5810*t8213) + 0.250125*(t6288*t8156 + 0.103955395616*t5576*t8195 + t6457*t8213);
  p_output1[16]=t1589*t2925 + t2561*t8281 + t3581*t8290 + t3178*t8301 + t4624*t8317 + t4200*t8329 + t5217*t8338 + t5818*t8357 + t6143*t8364 + t6295*t8388 + 0.206868*(t6121*t8357 + t6528*t8364 + 0.103955395616*t5576*t8388) + 0.290567*(t6598*t8357 + t5727*t8364 + t5810*t8388) + 0.250125*(t6288*t8357 + 0.103955395616*t5576*t8364 + t6457*t8388);
  p_output1[17]=-1.*t1589*t2305*t50 + t1745*t2561*t50 + t3581*t8455 + t3178*t8467 + t4624*t8479 + t4200*t8493 + t5217*t8505 + t5818*t8518 + t6143*t8525 + t6295*t8536 + 0.206868*(t6121*t8518 + t6528*t8525 + 0.103955395616*t5576*t8536) + 0.290567*(t6598*t8518 + t5727*t8525 + t5810*t8536) + 0.250125*(t6288*t8518 + 0.103955395616*t5576*t8525 + t6457*t8536);
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t3581*t6853 + t6701*t8577 + t6796*t8585 + t3178*t8597 + t4624*t8603 + t4200*t8619 + t5217*t8623 + t5818*t8636 + t6143*t8647 + t6295*t8653 + 0.206868*(t6121*t8636 + t6528*t8647 + 0.103955395616*t5576*t8653) + 0.290567*(t6598*t8636 + t5727*t8647 + t5810*t8653) + 0.250125*(t6288*t8636 + 0.103955395616*t5576*t8647 + t6457*t8653);
  p_output1[40]=t8281*t8577 + t8585*t8709 + t3581*t8724 + t3178*t8732 + t4624*t8736 + t4200*t8748 + t5217*t8755 + t5818*t8760 + t6143*t8770 + t6295*t8781 + 0.206868*(t6121*t8760 + t6528*t8770 + 0.103955395616*t5576*t8781) + 0.290567*(t6598*t8760 + t5727*t8770 + t5810*t8781) + 0.250125*(t6288*t8760 + 0.103955395616*t5576*t8770 + t6457*t8781);
  p_output1[41]=t1745*t50*t8577 + t2305*t50*t8585 + t3581*t8814 + t3178*t8818 + t4624*t8828 + t4200*t8832 + t5217*t8836 + t5818*t8846 + t6143*t8855 + t6295*t8871 + 0.206868*(t6121*t8846 + t6528*t8855 + 0.103955395616*t5576*t8871) + 0.290567*(t6598*t8846 + t5727*t8855 + t5810*t8871) + 0.250125*(t6288*t8846 + 0.103955395616*t5576*t8855 + t6457*t8871);
  p_output1[42]=t2069*t50*t8904 + t6853*t8913 + t6882*t8930 + t5217*t8944 + t4200*t8949 + t4624*t8957 + t6295*t8963 + t6143*t8977 + t5818*t8984 + 0.206868*(0.103955395616*t5576*t8963 + t6528*t8977 + t6121*t8984) + 0.250125*(t6457*t8963 + 0.103955395616*t5576*t8977 + t6288*t8984) + 0.290567*(t5810*t8963 + t5727*t8977 + t6598*t8984);
  p_output1[43]=t1193*t50*t8904 + t8724*t8913 + t8930*t9016 + t5217*t9029 + t4200*t9047 + t4624*t9054 + t6295*t9059 + t6143*t9070 + t5818*t9075 + 0.206868*(0.103955395616*t5576*t9059 + t6528*t9070 + t6121*t9075) + 0.250125*(t6457*t9059 + 0.103955395616*t5576*t9070 + t6288*t9075) + 0.290567*(t5810*t9059 + t5727*t9070 + t6598*t9075);
  p_output1[44]=-1.*t1776*t8904 + t8814*t8913 + t8467*t8930 + t5217*t9130 + t4200*t9139 + t4624*t9147 + t6295*t9152 + t6143*t9160 + t5818*t9166 + 0.206868*(0.103955395616*t5576*t9152 + t6528*t9160 + t6121*t9166) + 0.250125*(t6457*t9152 + 0.103955395616*t5576*t9160 + t6288*t9166) + 0.290567*(t5810*t9152 + t5727*t9160 + t6598*t9166);
  p_output1[45]=t6919*t9194 + t6966*t9204 + t7024*t9213 + t6143*t9223 + t6295*t9232 + t5818*t9243 + 0.206868*(t6528*t9223 + 0.103955395616*t5576*t9232 + t6121*t9243) + 0.250125*(0.103955395616*t5576*t9223 + t6457*t9232 + t6288*t9243) + 0.290567*(t5727*t9223 + t5810*t9232 + t6598*t9243);
  p_output1[46]=t9194*t9277 + t9204*t9289 + t9213*t9301 + t6143*t9308 + t6295*t9325 + t5818*t9334 + 0.206868*(t6528*t9308 + 0.103955395616*t5576*t9325 + t6121*t9334) + 0.250125*(0.103955395616*t5576*t9308 + t6457*t9325 + t6288*t9334) + 0.290567*(t5727*t9308 + t5810*t9325 + t6598*t9334);
  p_output1[47]=t9194*t9385 + t9204*t9393 + t9213*t9405 + t6143*t9411 + t6295*t9418 + t5818*t9429 + 0.206868*(t6528*t9411 + 0.103955395616*t5576*t9418 + t6121*t9429) + 0.250125*(0.103955395616*t5576*t9411 + t6457*t9418 + t6288*t9429) + 0.290567*(t5727*t9411 + t5810*t9418 + t6598*t9429);
  p_output1[48]=0.290567*(-1.0000001112680001*t5660*t7062 - 0.994522*t5482*t7103 + 0.104528*t5482*t7125) + 0.250125*(-0.104528*t5482*t7062 + 0.103955395616*t5660*t7103 - 0.010926102783999999*t5660*t7125) + 0.206868*(0.994522*t5482*t7062 - 0.9890740084840001*t5660*t7103 + 0.103955395616*t5660*t7125) + t7062*t9461 + t7103*t9468 + t7125*t9473;
  p_output1[49]=t9461*t9497 + t9468*t9502 + t9473*t9507 + 0.290567*(-1.0000001112680001*t5660*t9497 - 0.994522*t5482*t9502 + 0.104528*t5482*t9507) + 0.250125*(-0.104528*t5482*t9497 + 0.103955395616*t5660*t9502 - 0.010926102783999999*t5660*t9507) + 0.206868*(0.994522*t5482*t9497 - 0.9890740084840001*t5660*t9502 + 0.103955395616*t5660*t9507);
  p_output1[50]=t9461*t9528 + t9468*t9533 + t9473*t9538 + 0.290567*(-1.0000001112680001*t5660*t9528 - 0.994522*t5482*t9533 + 0.104528*t5482*t9538) + 0.250125*(-0.104528*t5482*t9528 + 0.103955395616*t5660*t9533 - 0.010926102783999999*t5660*t9538) + 0.206868*(0.994522*t5482*t9528 - 0.9890740084840001*t5660*t9533 + 0.103955395616*t5660*t9538);
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jp_left_elbow_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
