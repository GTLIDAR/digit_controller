/*
 * Automatically Generated from Mathematica.
 * Thu 10 Nov 2022 14:52:15 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "R_LeftToeBottomFront_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1426;
  double t1351;
  double t1447;
  double t1390;
  double t1448;
  double t1211;
  double t1228;
  double t1290;
  double t1303;
  double t1554;
  double t1568;
  double t1575;
  double t1394;
  double t1466;
  double t1476;
  double t1576;
  double t1118;
  double t1133;
  double t1203;
  double t1507;
  double t1597;
  double t1611;
  double t1625;
  double t1629;
  double t1636;
  double t1656;
  double t1670;
  double t1804;
  double t1805;
  double t1808;
  double t1809;
  double t1864;
  double t1870;
  double t1874;
  double t1909;
  double t1911;
  double t1919;
  double t1612;
  double t1621;
  double t1622;
  double t1655;
  double t1671;
  double t1672;
  double t1673;
  double t1678;
  double t1933;
  double t1718;
  double t1719;
  double t1723;
  double t1763;
  double t1768;
  double t1784;
  double t1801;
  double t1802;
  double t873;
  double t876;
  double t941;
  double t510;
  double t1690;
  double t1702;
  double t1711;
  double t1803;
  double t1934;
  double t1940;
  double t1946;
  double t1953;
  double t1962;
  double t2001;
  double t2002;
  double t2003;
  double t2013;
  double t2028;
  double t2037;
  double t2049;
  double t2056;
  double t2061;
  double t2062;
  double t2077;
  double t2084;
  double t2104;
  double t2110;
  double t2111;
  double t2118;
  double t2120;
  double t2126;
  double t2205;
  double t2214;
  double t2231;
  double t1958;
  double t1964;
  double t1990;
  double t2065;
  double t2067;
  double t2072;
  double t2129;
  double t2139;
  double t2170;
  double t2172;
  double t2181;
  double t2182;
  double t2189;
  double t2190;
  double t2202;
  double t2203;
  double t2237;
  double t2251;
  double t2255;
  double t2258;
  double t2264;
  double t2274;
  double t2280;
  double t2281;
  double t2282;
  double t2284;
  double t2298;
  double t2302;
  double t2303;
  double t120;
  double t174;
  double t253;
  double t270;
  double t393;
  double t539;
  double t845;
  double t2143;
  double t2148;
  double t2166;
  double t2204;
  double t2232;
  double t2236;
  double t2285;
  double t2287;
  double t2304;
  double t2305;
  double t2306;
  double t2308;
  double t2310;
  double t2316;
  double t2317;
  double t2318;
  double t2331;
  double t2333;
  double t2336;
  double t2344;
  double t2348;
  double t2350;
  double t2357;
  double t2358;
  double t394;
  double t414;
  double t2291;
  double t2321;
  double t2326;
  double t2330;
  double t2362;
  double t2365;
  double t2387;
  double t2392;
  double t2397;
  double t2399;
  double t2401;
  double t2404;
  double t2405;
  double t2408;
  double t260;
  double t2416;
  double t2417;
  double t2425;
  double t2427;
  double t2428;
  double t2430;
  double t2434;
  double t2435;
  double t2437;
  double t2439;
  double t2471;
  double t2382;
  double t314;
  double t391;
  double t2565;
  double t2567;
  double t2568;
  double t2545;
  double t2546;
  double t2549;
  double t2555;
  double t2569;
  double t2581;
  double t2583;
  double t2584;
  double t2585;
  double t2618;
  double t2619;
  double t2621;
  double t2624;
  double t2582;
  double t2588;
  double t2592;
  double t2597;
  double t2603;
  double t2605;
  double t2606;
  double t2610;
  double t2600;
  double t2617;
  double t2625;
  double t2633;
  double t2638;
  double t2639;
  double t2640;
  double t2643;
  double t2647;
  double t2650;
  double t2651;
  double t2654;
  double t2634;
  double t2645;
  double t2663;
  double t2670;
  double t2679;
  double t2680;
  double t2682;
  double t2686;
  double t2699;
  double t2710;
  double t2718;
  double t2724;
  double t2383;
  double t2384;
  double t2676;
  double t2688;
  double t2731;
  double t2735;
  double t2750;
  double t2751;
  double t2754;
  double t2756;
  double t2758;
  double t2760;
  double t2762;
  double t2768;
  double t2413;
  double t2414;
  double t2456;
  double t2462;
  double t2736;
  double t2757;
  double t2772;
  double t2779;
  double t2476;
  double t2479;
  double t2785;
  double t2789;
  double t2795;
  double t2797;
  double t2484;
  double t2487;
  double t2803;
  double t2805;
  double t2807;
  double t2816;
  double t2509;
  double t2510;
  double t2512;
  double t2513;
  double t2517;
  double t2523;
  double t2851;
  double t2856;
  double t2860;
  double t2862;
  double t2866;
  double t2868;
  double t2903;
  double t2907;
  double t2908;
  double t2909;
  double t2861;
  double t2869;
  double t2879;
  double t2882;
  double t2892;
  double t2895;
  double t2897;
  double t2898;
  double t2889;
  double t2899;
  double t2911;
  double t2918;
  double t2921;
  double t2922;
  double t2923;
  double t2925;
  double t2929;
  double t2931;
  double t2932;
  double t2934;
  double t2920;
  double t2927;
  double t2938;
  double t2940;
  double t2943;
  double t2945;
  double t2950;
  double t2954;
  double t2956;
  double t2958;
  double t2962;
  double t2964;
  double t2942;
  double t2955;
  double t2965;
  double t2966;
  double t2970;
  double t2972;
  double t2977;
  double t2980;
  double t2993;
  double t2994;
  double t2997;
  double t2998;
  double t2967;
  double t2992;
  double t3000;
  double t3007;
  double t3010;
  double t3013;
  double t3022;
  double t3023;
  double t3028;
  double t3035;
  double t3037;
  double t3039;
  double t2466;
  double t2483;
  double t2488;
  double t2490;
  double t2511;
  double t2516;
  double t2526;
  double t2527;
  double t2828;
  double t2831;
  double t2832;
  double t2833;
  double t2842;
  double t2844;
  double t2845;
  double t2846;
  double t3047;
  double t3049;
  double t3051;
  double t3052;
  double t3054;
  double t3057;
  double t3058;
  double t3059;
  double t2381;
  double t2412;
  double t2442;
  double t2444;
  double t2782;
  double t2798;
  double t2817;
  double t2822;
  double t3008;
  double t3027;
  double t3044;
  double t3045;
  t1426 = Cos(var1[3]);
  t1351 = Cos(var1[5]);
  t1447 = Sin(var1[4]);
  t1390 = Sin(var1[3]);
  t1448 = Sin(var1[5]);
  t1211 = Cos(var1[7]);
  t1228 = -1.*t1211;
  t1290 = 1. + t1228;
  t1303 = Cos(var1[6]);
  t1554 = t1426*t1351*t1447;
  t1568 = t1390*t1448;
  t1575 = t1554 + t1568;
  t1394 = -1.*t1351*t1390;
  t1466 = t1426*t1447*t1448;
  t1476 = t1394 + t1466;
  t1576 = Sin(var1[6]);
  t1118 = Cos(var1[8]);
  t1133 = -1.*t1118;
  t1203 = 1. + t1133;
  t1507 = t1303*t1476;
  t1597 = -1.*t1575*t1576;
  t1611 = t1507 + t1597;
  t1625 = t1303*t1575;
  t1629 = t1476*t1576;
  t1636 = t1625 + t1629;
  t1656 = Cos(var1[4]);
  t1670 = Sin(var1[7]);
  t1804 = -1.000000637725*t1290;
  t1805 = 1. + t1804;
  t1808 = t1426*t1656*t1805;
  t1809 = -0.930418*t1670;
  t1864 = 0. + t1809;
  t1870 = t1611*t1864;
  t1874 = -0.366501*t1670;
  t1909 = 0. + t1874;
  t1911 = t1636*t1909;
  t1919 = t1808 + t1870 + t1911;
  t1612 = -0.340999127418*t1290*t1611;
  t1621 = -0.134322983001*t1290;
  t1622 = 1. + t1621;
  t1655 = t1622*t1636;
  t1671 = 0.366501*t1670;
  t1672 = 0. + t1671;
  t1673 = t1426*t1656*t1672;
  t1678 = t1612 + t1655 + t1673;
  t1933 = Sin(var1[8]);
  t1718 = -0.8656776547239999*t1290;
  t1719 = 1. + t1718;
  t1723 = t1719*t1611;
  t1763 = -0.340999127418*t1290*t1636;
  t1768 = 0.930418*t1670;
  t1784 = 0. + t1768;
  t1801 = t1426*t1656*t1784;
  t1802 = t1723 + t1763 + t1801;
  t873 = Cos(var1[9]);
  t876 = -1.*t873;
  t941 = 1. + t876;
  t510 = Sin(var1[10]);
  t1690 = 0.340999127418*t1203*t1678;
  t1702 = -0.134322983001*t1203;
  t1711 = 1. + t1702;
  t1803 = t1711*t1802;
  t1934 = -0.366501*t1933;
  t1940 = 0. + t1934;
  t1946 = t1919*t1940;
  t1953 = t1690 + t1803 + t1946;
  t1962 = Sin(var1[9]);
  t2001 = -1.000000637725*t1203;
  t2002 = 1. + t2001;
  t2003 = t2002*t1919;
  t2013 = -0.930418*t1933;
  t2028 = 0. + t2013;
  t2037 = t1678*t2028;
  t2049 = 0.366501*t1933;
  t2056 = 0. + t2049;
  t2061 = t1802*t2056;
  t2062 = t2003 + t2037 + t2061;
  t2077 = -0.8656776547239999*t1203;
  t2084 = 1. + t2077;
  t2104 = t2084*t1678;
  t2110 = 0.340999127418*t1203*t1802;
  t2111 = 0.930418*t1933;
  t2118 = 0. + t2111;
  t2120 = t1919*t2118;
  t2126 = t2104 + t2110 + t2120;
  t2205 = Cos(var1[10]);
  t2214 = -1.*t2205;
  t2231 = 1. + t2214;
  t1958 = 0.340999127418*t941*t1953;
  t1964 = -0.930418*t1962;
  t1990 = 0. + t1964;
  t2065 = t1990*t2062;
  t2067 = -0.8656776547239999*t941;
  t2072 = 1. + t2067;
  t2129 = t2072*t2126;
  t2139 = t1958 + t2065 + t2129;
  t2170 = -0.134322983001*t941;
  t2172 = 1. + t2170;
  t2181 = t2172*t1953;
  t2182 = 0.366501*t1962;
  t2189 = 0. + t2182;
  t2190 = t2189*t2062;
  t2202 = 0.340999127418*t941*t2126;
  t2203 = t2181 + t2190 + t2202;
  t2237 = -0.366501*t1962;
  t2251 = 0. + t2237;
  t2255 = t2251*t1953;
  t2258 = -1.000000637725*t941;
  t2264 = 1. + t2258;
  t2274 = t2264*t2062;
  t2280 = 0.930418*t1962;
  t2281 = 0. + t2280;
  t2282 = t2281*t2126;
  t2284 = t2255 + t2274 + t2282;
  t2298 = Cos(var1[11]);
  t2302 = -1.*t2298;
  t2303 = 1. + t2302;
  t120 = Cos(var1[12]);
  t174 = -1.*t120;
  t253 = 1. + t174;
  t270 = Sin(var1[12]);
  t393 = Sin(var1[11]);
  t539 = 0.930418*t510;
  t845 = 0. + t539;
  t2143 = t845*t2139;
  t2148 = -0.366501*t510;
  t2166 = 0. + t2148;
  t2204 = t2166*t2203;
  t2232 = -1.000000637725*t2231;
  t2236 = 1. + t2232;
  t2285 = t2236*t2284;
  t2287 = t2143 + t2204 + t2285;
  t2304 = -0.8656776547239999*t2231;
  t2305 = 1. + t2304;
  t2306 = t2305*t2139;
  t2308 = 0.340999127418*t2231*t2203;
  t2310 = -0.930418*t510;
  t2316 = 0. + t2310;
  t2317 = t2316*t2284;
  t2318 = t2306 + t2308 + t2317;
  t2331 = 0.340999127418*t2231*t2139;
  t2333 = -0.134322983001*t2231;
  t2336 = 1. + t2333;
  t2344 = t2336*t2203;
  t2348 = 0.366501*t510;
  t2350 = 0. + t2348;
  t2357 = t2350*t2284;
  t2358 = t2331 + t2344 + t2357;
  t394 = 0.366501*t393;
  t414 = 0. + t394;
  t2291 = t414*t2287;
  t2321 = 0.340999127418*t2303*t2318;
  t2326 = -0.134322983001*t2303;
  t2330 = 1. + t2326;
  t2362 = t2330*t2358;
  t2365 = t2291 + t2321 + t2362;
  t2387 = -0.930418*t393;
  t2392 = 0. + t2387;
  t2397 = t2392*t2287;
  t2399 = -0.8656776547239999*t2303;
  t2401 = 1. + t2399;
  t2404 = t2401*t2318;
  t2405 = 0.340999127418*t2303*t2358;
  t2408 = t2397 + t2404 + t2405;
  t260 = -0.175248972904*t253;
  t2416 = -1.000000637725*t2303;
  t2417 = 1. + t2416;
  t2425 = t2417*t2287;
  t2427 = 0.930418*t393;
  t2428 = 0. + t2427;
  t2430 = t2428*t2318;
  t2434 = -0.366501*t393;
  t2435 = 0. + t2434;
  t2437 = t2435*t2358;
  t2439 = t2425 + t2430 + t2437;
  t2471 = -0.120666640478*t253;
  t2382 = 0.444895486988*t253;
  t314 = 0.553471*t270;
  t391 = t260 + t314;
  t2565 = t1351*t1390*t1447;
  t2567 = -1.*t1426*t1448;
  t2568 = t2565 + t2567;
  t2545 = t1426*t1351;
  t2546 = t1390*t1447*t1448;
  t2549 = t2545 + t2546;
  t2555 = t1303*t2549;
  t2569 = -1.*t2568*t1576;
  t2581 = t2555 + t2569;
  t2583 = t1303*t2568;
  t2584 = t2549*t1576;
  t2585 = t2583 + t2584;
  t2618 = t1656*t1805*t1390;
  t2619 = t2581*t1864;
  t2621 = t2585*t1909;
  t2624 = t2618 + t2619 + t2621;
  t2582 = -0.340999127418*t1290*t2581;
  t2588 = t1622*t2585;
  t2592 = t1656*t1390*t1672;
  t2597 = t2582 + t2588 + t2592;
  t2603 = t1719*t2581;
  t2605 = -0.340999127418*t1290*t2585;
  t2606 = t1656*t1390*t1784;
  t2610 = t2603 + t2605 + t2606;
  t2600 = 0.340999127418*t1203*t2597;
  t2617 = t1711*t2610;
  t2625 = t2624*t1940;
  t2633 = t2600 + t2617 + t2625;
  t2638 = t2002*t2624;
  t2639 = t2597*t2028;
  t2640 = t2610*t2056;
  t2643 = t2638 + t2639 + t2640;
  t2647 = t2084*t2597;
  t2650 = 0.340999127418*t1203*t2610;
  t2651 = t2624*t2118;
  t2654 = t2647 + t2650 + t2651;
  t2634 = 0.340999127418*t941*t2633;
  t2645 = t1990*t2643;
  t2663 = t2072*t2654;
  t2670 = t2634 + t2645 + t2663;
  t2679 = t2172*t2633;
  t2680 = t2189*t2643;
  t2682 = 0.340999127418*t941*t2654;
  t2686 = t2679 + t2680 + t2682;
  t2699 = t2251*t2633;
  t2710 = t2264*t2643;
  t2718 = t2281*t2654;
  t2724 = t2699 + t2710 + t2718;
  t2383 = 0.218018*t270;
  t2384 = t2382 + t2383;
  t2676 = t845*t2670;
  t2688 = t2166*t2686;
  t2731 = t2236*t2724;
  t2735 = t2676 + t2688 + t2731;
  t2750 = t2305*t2670;
  t2751 = 0.340999127418*t2231*t2686;
  t2754 = t2316*t2724;
  t2756 = t2750 + t2751 + t2754;
  t2758 = 0.340999127418*t2231*t2670;
  t2760 = t2336*t2686;
  t2762 = t2350*t2724;
  t2768 = t2758 + t2760 + t2762;
  t2413 = -0.353861996165*t253;
  t2414 = 1. + t2413;
  t2456 = -0.952469601425*t253;
  t2462 = 1. + t2456;
  t2736 = t414*t2735;
  t2757 = 0.340999127418*t2303*t2756;
  t2772 = t2330*t2768;
  t2779 = t2736 + t2757 + t2772;
  t2476 = 0.803828*t270;
  t2479 = t2471 + t2476;
  t2785 = t2392*t2735;
  t2789 = t2401*t2756;
  t2795 = 0.340999127418*t2303*t2768;
  t2797 = t2785 + t2789 + t2795;
  t2484 = -0.553471*t270;
  t2487 = t260 + t2484;
  t2803 = t2417*t2735;
  t2805 = t2428*t2756;
  t2807 = t2435*t2768;
  t2816 = t2803 + t2805 + t2807;
  t2509 = -0.803828*t270;
  t2510 = t2471 + t2509;
  t2512 = -0.693671301908*t253;
  t2513 = 1. + t2512;
  t2517 = -0.218018*t270;
  t2523 = t2382 + t2517;
  t2851 = t1656*t1303*t1448;
  t2856 = -1.*t1656*t1351*t1576;
  t2860 = t2851 + t2856;
  t2862 = t1656*t1351*t1303;
  t2866 = t1656*t1448*t1576;
  t2868 = t2862 + t2866;
  t2903 = -1.*t1805*t1447;
  t2907 = t2860*t1864;
  t2908 = t2868*t1909;
  t2909 = t2903 + t2907 + t2908;
  t2861 = -0.340999127418*t1290*t2860;
  t2869 = t1622*t2868;
  t2879 = -1.*t1447*t1672;
  t2882 = t2861 + t2869 + t2879;
  t2892 = t1719*t2860;
  t2895 = -0.340999127418*t1290*t2868;
  t2897 = -1.*t1447*t1784;
  t2898 = t2892 + t2895 + t2897;
  t2889 = 0.340999127418*t1203*t2882;
  t2899 = t1711*t2898;
  t2911 = t2909*t1940;
  t2918 = t2889 + t2899 + t2911;
  t2921 = t2002*t2909;
  t2922 = t2882*t2028;
  t2923 = t2898*t2056;
  t2925 = t2921 + t2922 + t2923;
  t2929 = t2084*t2882;
  t2931 = 0.340999127418*t1203*t2898;
  t2932 = t2909*t2118;
  t2934 = t2929 + t2931 + t2932;
  t2920 = 0.340999127418*t941*t2918;
  t2927 = t1990*t2925;
  t2938 = t2072*t2934;
  t2940 = t2920 + t2927 + t2938;
  t2943 = t2172*t2918;
  t2945 = t2189*t2925;
  t2950 = 0.340999127418*t941*t2934;
  t2954 = t2943 + t2945 + t2950;
  t2956 = t2251*t2918;
  t2958 = t2264*t2925;
  t2962 = t2281*t2934;
  t2964 = t2956 + t2958 + t2962;
  t2942 = t845*t2940;
  t2955 = t2166*t2954;
  t2965 = t2236*t2964;
  t2966 = t2942 + t2955 + t2965;
  t2970 = t2305*t2940;
  t2972 = 0.340999127418*t2231*t2954;
  t2977 = t2316*t2964;
  t2980 = t2970 + t2972 + t2977;
  t2993 = 0.340999127418*t2231*t2940;
  t2994 = t2336*t2954;
  t2997 = t2350*t2964;
  t2998 = t2993 + t2994 + t2997;
  t2967 = t414*t2966;
  t2992 = 0.340999127418*t2303*t2980;
  t3000 = t2330*t2998;
  t3007 = t2967 + t2992 + t3000;
  t3010 = t2392*t2966;
  t3013 = t2401*t2980;
  t3022 = 0.340999127418*t2303*t2998;
  t3023 = t3010 + t3013 + t3022;
  t3028 = t2417*t2966;
  t3035 = t2428*t2980;
  t3037 = t2435*t2998;
  t3039 = t3028 + t3035 + t3037;
  t2466 = t2462*t2365;
  t2483 = t2479*t2408;
  t2488 = t2487*t2439;
  t2490 = t2466 + t2483 + t2488;
  t2511 = t2510*t2365;
  t2516 = t2513*t2408;
  t2526 = t2523*t2439;
  t2527 = t2511 + t2516 + t2526;
  t2828 = t2462*t2779;
  t2831 = t2479*t2797;
  t2832 = t2487*t2816;
  t2833 = t2828 + t2831 + t2832;
  t2842 = t2510*t2779;
  t2844 = t2513*t2797;
  t2845 = t2523*t2816;
  t2846 = t2842 + t2844 + t2845;
  t3047 = t2462*t3007;
  t3049 = t2479*t3023;
  t3051 = t2487*t3039;
  t3052 = t3047 + t3049 + t3051;
  t3054 = t2510*t3007;
  t3057 = t2513*t3023;
  t3058 = t2523*t3039;
  t3059 = t3054 + t3057 + t3058;
  t2381 = t391*t2365;
  t2412 = t2384*t2408;
  t2442 = t2414*t2439;
  t2444 = t2381 + t2412 + t2442;
  t2782 = t391*t2779;
  t2798 = t2384*t2797;
  t2817 = t2414*t2816;
  t2822 = t2782 + t2798 + t2817;
  t3008 = t391*t3007;
  t3027 = t2384*t3023;
  t3044 = t2414*t3039;
  t3045 = t3008 + t3027 + t3044;
  p_output1[0]=0.993567*t2444 - 0.041508*t2490 + 0.105375*t2527;
  p_output1[1]=0.993567*t2822 - 0.041508*t2833 + 0.105375*t2846;
  p_output1[2]=0.993567*t3045 - 0.041508*t3052 + 0.105375*t3059;
  p_output1[3]=0.930418*t2490 + 0.366501*t2527;
  p_output1[4]=0.930418*t2833 + 0.366501*t2846;
  p_output1[5]=0.930418*t3052 + 0.366501*t3059;
  p_output1[6]=-0.113255*t2444 - 0.364143*t2490 + 0.924432*t2527;
  p_output1[7]=-0.113255*t2822 - 0.364143*t2833 + 0.924432*t2846;
  p_output1[8]=-0.113255*t3045 - 0.364143*t3052 + 0.924432*t3059;
}



void R_LeftToeBottomFront_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
