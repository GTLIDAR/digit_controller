/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:55:15 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dJp_shoulder_pitch_joint_right_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1286;
  double t993;
  double t8;
  double t144;
  double t392;
  double t398;
  double t634;
  double t1152;
  double t1233;
  double t1255;
  double t22;
  double t2161;
  double t2990;
  double t3038;
  double t1669;
  double t2495;
  double t2621;
  double t2718;
  double t3153;
  double t3284;
  double t3368;
  double t2392;
  double t2393;
  double t1411;
  double t1426;
  double t1609;
  double t1627;
  double t1276;
  double t1605;
  double t1633;
  double t1664;
  double t609;
  double t798;
  double t905;
  double t4323;
  double t2010;
  double t2069;
  double t2076;
  double t2248;
  double t2376;
  double t2451;
  double t2473;
  double t4341;
  double t4359;
  double t4370;
  double t4467;
  double t4480;
  double t4516;
  double t2764;
  double t2955;
  double t3077;
  double t3152;
  double t4535;
  double t4536;
  double t4546;
  double t3456;
  double t3535;
  double t4560;
  double t4566;
  double t4569;
  double t3758;
  double t3812;
  double t4116;
  double t4148;
  double t4683;
  double t4684;
  double t4686;
  double t4696;
  double t4702;
  double t4704;
  double t4721;
  double t4723;
  double t4726;
  double t4735;
  double t4737;
  double t4741;
  double t4854;
  double t4855;
  double t4856;
  double t4922;
  double t4925;
  double t4930;
  double t4934;
  double t4936;
  double t4944;
  double t4950;
  double t4951;
  double t5010;
  double t5014;
  double t5022;
  double t5026;
  double t5027;
  double t5028;
  double t5085;
  double t5087;
  double t5089;
  double t5097;
  double t5101;
  double t5106;
  double t5107;
  double t5108;
  double t4677;
  double t4681;
  double t4682;
  double t4691;
  double t4695;
  double t5182;
  double t5186;
  double t5187;
  double t5192;
  double t5196;
  double t5201;
  double t5215;
  double t5218;
  double t5219;
  double t4798;
  double t4803;
  double t4805;
  double t4810;
  double t4812;
  double t4817;
  double t4823;
  double t4825;
  double t4844;
  double t5272;
  double t5273;
  double t4749;
  double t5047;
  double t5373;
  double t5374;
  double t5378;
  double t5434;
  double t5437;
  double t5440;
  double t5062;
  double t1114;
  double t1719;
  double t2173;
  double t2756;
  double t3400;
  double t3402;
  double t3447;
  double t3568;
  double t3668;
  double t3719;
  double t3734;
  double t3974;
  double t3981;
  double t3982;
  double t4044;
  double t4171;
  double t4176;
  double t4203;
  double t4225;
  double t4234;
  double t4290;
  double t4327;
  double t4582;
  double t5542;
  double t5543;
  double t5546;
  double t5549;
  double t5550;
  double t5555;
  double t4628;
  double t4642;
  double t4999;
  double t5007;
  double t5009;
  double t5023;
  double t5031;
  double t5040;
  double t5052;
  double t5053;
  double t5055;
  double t5060;
  double t5061;
  double t5064;
  double t5066;
  double t5068;
  double t5069;
  double t5072;
  double t5074;
  double t5075;
  double t5080;
  double t5595;
  double t5598;
  double t5601;
  double t5634;
  double t5636;
  double t5637;
  double t5315;
  double t5330;
  double t5721;
  double t5723;
  double t5726;
  double t5731;
  double t5732;
  double t5737;
  double t5337;
  double t5348;
  double t5805;
  double t5807;
  double t5808;
  double t5811;
  double t5812;
  double t5813;
  double t5868;
  double t5870;
  double t5873;
  double t5876;
  double t5881;
  double t5883;
  double t5915;
  double t5916;
  double t5923;
  double t5972;
  double t5974;
  double t5980;
  double t5431;
  double t5432;
  double t5442;
  double t5443;
  double t5446;
  double t5449;
  double t5453;
  double t5455;
  double t5456;
  double t5459;
  double t5460;
  double t5463;
  double t5464;
  double t5465;
  double t5470;
  double t5471;
  double t6018;
  double t6020;
  double t5148;
  double t4380;
  double t4520;
  double t4556;
  double t4581;
  double t4603;
  double t4604;
  double t4630;
  double t4637;
  double t4645;
  double t4649;
  double t4921;
  double t4931;
  double t4945;
  double t4952;
  double t4954;
  double t4963;
  double t4964;
  double t4968;
  double t4970;
  double t4972;
  double t4981;
  double t4983;
  double t4986;
  double t4987;
  double t4990;
  double t4993;
  double t4995;
  double t5630;
  double t5632;
  double t5633;
  double t5643;
  double t5645;
  double t5646;
  double t5648;
  double t5649;
  double t5655;
  double t5658;
  double t5659;
  double t5660;
  double t5662;
  double t5664;
  double t5670;
  double t5671;
  double t5094;
  double t5095;
  double t5103;
  double t5110;
  double t5116;
  double t5117;
  double t5123;
  double t5127;
  double t5130;
  double t5150;
  double t5152;
  double t5155;
  double t5158;
  double t5163;
  double t5166;
  double t5172;
  double t6102;
  double t6103;
  double t6106;
  double t6113;
  double t6114;
  double t6115;
  double t6120;
  double t6121;
  double t6151;
  double t6152;
  double t5316;
  double t5317;
  double t5325;
  double t5326;
  double t5331;
  double t5339;
  double t5341;
  double t5349;
  double t5353;
  double t5800;
  double t5803;
  double t5810;
  double t5815;
  double t5818;
  double t5819;
  double t5837;
  double t5841;
  double t5847;
  double t5848;
  double t6212;
  double t6214;
  double t6215;
  double t6220;
  double t6221;
  double t6222;
  double t5863;
  double t5865;
  double t5874;
  double t5884;
  double t5885;
  double t5886;
  double t5889;
  double t5891;
  double t5894;
  double t5896;
  double t5898;
  double t5902;
  double t5905;
  double t5906;
  double t5907;
  double t5908;
  double t5911;
  double t5363;
  double t5367;
  double t5372;
  double t5384;
  double t5388;
  double t5390;
  double t5391;
  double t5392;
  double t5393;
  double t5396;
  double t5404;
  double t5409;
  double t5411;
  double t5412;
  double t5413;
  double t5415;
  double t6015;
  double t6016;
  double t6022;
  double t6025;
  double t6026;
  double t6029;
  double t6033;
  double t6034;
  double t6035;
  double t6037;
  double t6038;
  double t6039;
  double t6040;
  double t6041;
  double t6042;
  double t6043;
  double t6289;
  double t6292;
  double t5250;
  double t5300;
  double t4690;
  double t4720;
  double t4733;
  double t4746;
  double t4750;
  double t4752;
  double t4757;
  double t4760;
  double t4761;
  double t4768;
  double t4769;
  double t4778;
  double t4784;
  double t4790;
  double t4793;
  double t4796;
  double t5592;
  double t5593;
  double t5603;
  double t5605;
  double t5607;
  double t5608;
  double t5609;
  double t5612;
  double t5613;
  double t5615;
  double t5618;
  double t5620;
  double t5622;
  double t5623;
  double t5625;
  double t5627;
  double t5178;
  double t5189;
  double t5207;
  double t5234;
  double t5236;
  double t5242;
  double t5243;
  double t5246;
  double t5248;
  double t5252;
  double t5253;
  double t5255;
  double t5257;
  double t5258;
  double t5260;
  double t5262;
  double t6109;
  double t6110;
  double t6116;
  double t6122;
  double t6123;
  double t6124;
  double t6125;
  double t6126;
  double t6132;
  double t6135;
  double t6139;
  double t6140;
  double t6141;
  double t6142;
  double t6143;
  double t6144;
  double t6148;
  double t6278;
  double t6279;
  double t6282;
  double t6383;
  double t6384;
  double t6387;
  double t6388;
  double t6421;
  double t6191;
  double t6195;
  double t6198;
  double t6199;
  double t6200;
  double t6201;
  double t6209;
  double t6211;
  double t6219;
  double t6223;
  double t6224;
  double t6225;
  double t6226;
  double t6227;
  double t6231;
  double t6233;
  double t6234;
  double t6236;
  double t6237;
  double t6238;
  double t6239;
  double t6240;
  double t6241;
  double t5968;
  double t5970;
  double t5971;
  double t5982;
  double t5983;
  double t5989;
  double t5991;
  double t5994;
  double t5995;
  double t5996;
  double t5997;
  double t5998;
  double t5999;
  double t6003;
  double t6005;
  double t6009;
  double t6010;
  double t5475;
  double t5480;
  double t5484;
  double t5485;
  double t5486;
  double t5487;
  double t5489;
  double t5490;
  double t5496;
  double t5499;
  double t5500;
  double t5503;
  double t5504;
  double t5506;
  double t5511;
  double t5514;
  double t5522;
  double t5523;
  double t5526;
  double t6048;
  double t6049;
  double t6050;
  double t6052;
  double t6053;
  double t6055;
  double t6057;
  double t6058;
  double t6059;
  double t6060;
  double t6065;
  double t6066;
  double t6071;
  double t6072;
  double t6073;
  double t6323;
  double t6325;
  double t6329;
  double t6333;
  double t6335;
  double t6336;
  double t6341;
  double t6342;
  double t6343;
  double t6347;
  double t6348;
  double t6350;
  double t6352;
  double t6354;
  double t4809;
  double t4821;
  double t4857;
  double t4858;
  double t4865;
  double t4870;
  double t4872;
  double t4873;
  double t4874;
  double t4875;
  double t4880;
  double t4882;
  double t4890;
  double t4905;
  double t4908;
  double t4909;
  double t4914;
  double t4915;
  double t4916;
  double t5677;
  double t5679;
  double t5681;
  double t5682;
  double t5683;
  double t5685;
  double t5687;
  double t5690;
  double t5691;
  double t5693;
  double t5696;
  double t5698;
  double t5700;
  double t5701;
  double t5702;
  double t5705;
  double t5706;
  double t5711;
  double t5713;
  double t5267;
  double t5268;
  double t5279;
  double t5283;
  double t5284;
  double t5288;
  double t5293;
  double t5296;
  double t5297;
  double t5301;
  double t5303;
  double t5304;
  double t5306;
  double t5307;
  double t5309;
  double t5310;
  double t5312;
  double t5313;
  double t6153;
  double t6154;
  double t6155;
  double t6156;
  double t6157;
  double t6158;
  double t6160;
  double t6161;
  double t6162;
  double t6163;
  double t6165;
  double t6168;
  double t6169;
  double t6170;
  double t6171;
  double t6422;
  double t6423;
  double t6424;
  double t6425;
  double t6426;
  double t6427;
  double t6428;
  double t6429;
  double t6430;
  double t6434;
  double t6435;
  double t6439;
  double t6441;
  double t6442;
  double t6446;
  double t6507;
  double t6510;
  double t6511;
  double t6515;
  double t6518;
  double t6519;
  double t6530;
  double t6537;
  double t6539;
  double t6584;
  double t6585;
  double t6462;
  double t6464;
  double t6466;
  double t6469;
  double t6472;
  double t6477;
  double t6478;
  double t6484;
  double t6485;
  double t6486;
  double t6487;
  double t6488;
  double t6490;
  double t6491;
  double t6492;
  double t6243;
  double t6249;
  double t6251;
  double t6253;
  double t6257;
  double t6258;
  double t6259;
  double t6261;
  double t6263;
  double t6264;
  double t6265;
  double t6268;
  double t6269;
  double t6271;
  double t6272;
  double t5914;
  double t5924;
  double t5926;
  double t5927;
  double t5930;
  double t5931;
  double t5933;
  double t5938;
  double t5941;
  double t5942;
  double t5944;
  double t5945;
  double t5950;
  double t5951;
  double t5952;
  double t5953;
  double t5954;
  double t5957;
  double t5964;
  t1286 = Sin(var1[25]);
  t993 = Sin(var1[3]);
  t8 = Cos(var1[4]);
  t144 = Cos(var1[24]);
  t392 = -1.*t144;
  t398 = 1. + t392;
  t634 = Sin(var1[24]);
  t1152 = Cos(var1[25]);
  t1233 = -1.*t1152;
  t1255 = 1. + t1233;
  t22 = Cos(var1[5]);
  t2161 = Sin(var1[5]);
  t2990 = -0.994522*t1286;
  t3038 = 0. + t2990;
  t1669 = Sin(var1[4]);
  t2495 = t8*t22*t634*t993;
  t2621 = -1.*t144*t8*t993*t2161;
  t2718 = t2495 + t2621;
  t3153 = -1.*t144*t8*t22*t993;
  t3284 = -1.*t8*t634*t993*t2161;
  t3368 = t3153 + t3284;
  t2392 = -0.104528*t1286;
  t2393 = 0. + t2392;
  t1411 = 0.104528*t1286;
  t1426 = 0. + t1411;
  t1609 = 0.994522*t1286;
  t1627 = 0. + t1609;
  t1276 = -0.056500534356700764*t1255;
  t1605 = 0.040271188976*t1426;
  t1633 = 0.38315650737400003*t1627;
  t1664 = 0. + t1276 + t1605 + t1633;
  t609 = 0.4*t398;
  t798 = -0.12*t634;
  t905 = 0. + t609 + t798;
  t4323 = Cos(var1[3]);
  t2010 = -0.12*t398;
  t2069 = -0.4*t634;
  t2076 = 0. + t2010 + t2069;
  t2248 = 1.1345904784751044e-7*var1[25];
  t2376 = 0.04027119345689465*t1255;
  t2451 = -0.05650052807*t2393;
  t2473 = t2248 + t2376 + t2451;
  t4341 = -1.*t4323*t22*t1669;
  t4359 = -1.*t993*t2161;
  t4370 = t4341 + t4359;
  t4467 = t22*t993;
  t4480 = -1.*t4323*t1669*t2161;
  t4516 = t4467 + t4480;
  t2764 = -1.1924972351948546e-8*var1[25];
  t2955 = 0.38315655000705834*t1255;
  t3077 = -0.05650052807*t3038;
  t3152 = t2764 + t2955 + t3077;
  t4535 = -1.*t634*t4370;
  t4536 = t144*t4516;
  t4546 = t4535 + t4536;
  t3456 = -0.9890740084840001*t1255;
  t3535 = 1. + t3456;
  t4560 = t144*t4370;
  t4566 = t634*t4516;
  t4569 = t4560 + t4566;
  t3758 = -0.010926102783999999*t1255;
  t3812 = 1. + t3758;
  t4116 = -1.0000001112680001*t1255;
  t4148 = 1. + t4116;
  t4683 = -1.*t22*t993*t1669;
  t4684 = t4323*t2161;
  t4686 = t4683 + t4684;
  t4696 = -1.*t4323*t22;
  t4702 = -1.*t993*t1669*t2161;
  t4704 = t4696 + t4702;
  t4721 = -1.*t634*t4686;
  t4723 = t144*t4704;
  t4726 = t4721 + t4723;
  t4735 = -1.*t144*t4686;
  t4737 = -1.*t634*t4704;
  t4741 = t4735 + t4737;
  t4854 = t144*t4686;
  t4855 = t634*t4704;
  t4856 = t4854 + t4855;
  t4922 = t4323*t22;
  t4925 = t993*t1669*t2161;
  t4930 = t4922 + t4925;
  t4934 = t634*t4686;
  t4936 = t144*t4930;
  t4944 = t4934 + t4936;
  t4950 = -1.*t634*t4930;
  t4951 = t4854 + t4950;
  t5010 = -1.*t4323*t8*t22*t634;
  t5014 = t144*t4323*t8*t2161;
  t5022 = t5010 + t5014;
  t5026 = t144*t4323*t8*t22;
  t5027 = t4323*t8*t634*t2161;
  t5028 = t5026 + t5027;
  t5085 = t4323*t22*t1669;
  t5087 = t993*t2161;
  t5089 = t5085 + t5087;
  t5097 = t634*t5089;
  t5101 = t5097 + t4536;
  t5106 = t144*t5089;
  t5107 = -1.*t634*t4516;
  t5108 = t5106 + t5107;
  t4677 = -0.12*t144;
  t4681 = 0.4*t634;
  t4682 = t4677 + t4681;
  t4691 = -0.4*t144;
  t4695 = t4691 + t798;
  t5182 = -1.*t22*t993;
  t5186 = t4323*t1669*t2161;
  t5187 = t5182 + t5186;
  t5192 = -1.*t634*t5089;
  t5196 = t144*t5187;
  t5201 = t5192 + t5196;
  t5215 = -1.*t144*t5089;
  t5218 = -1.*t634*t5187;
  t5219 = t5215 + t5218;
  t4798 = 0.3852670428678886*t1152;
  t4803 = -0.056500534356700764*t1286;
  t4805 = t4798 + t4803;
  t4810 = 0.0059058871981009595*t1152;
  t4812 = 0.04027119345689465*t1286;
  t4817 = 1.1345904784751044e-7 + t4810 + t4812;
  t4823 = 0.05619101817723254*t1152;
  t4825 = 0.38315655000705834*t1286;
  t4844 = -1.1924972351948546e-8 + t4823 + t4825;
  t5272 = t634*t5187;
  t5273 = t5106 + t5272;
  t4749 = -0.103955395616*t1255*t4726;
  t5047 = -0.103955395616*t1255*t5022;
  t5373 = -1.*t144*t4323*t8*t22;
  t5374 = -1.*t4323*t8*t634*t2161;
  t5378 = t5373 + t5374;
  t5434 = t4323*t8*t22*t634;
  t5437 = -1.*t144*t4323*t8*t2161;
  t5440 = t5434 + t5437;
  t5062 = -0.103955395616*t1255*t5028;
  t1114 = -1.*t8*t22*t905*t993;
  t1719 = t1664*t993*t1669;
  t2173 = -1.*t8*t2076*t993*t2161;
  t2756 = t2473*t2718;
  t3400 = t3152*t3368;
  t3402 = t3038*t993*t1669;
  t3447 = -0.103955395616*t1255*t2718;
  t3568 = t3535*t3368;
  t3668 = t3402 + t3447 + t3568;
  t3719 = 0.398799*t3668;
  t3734 = t2393*t993*t1669;
  t3974 = t3812*t2718;
  t3981 = -0.103955395616*t1255*t3368;
  t3982 = t3734 + t3974 + t3981;
  t4044 = -0.108558*t3982;
  t4171 = t4148*t993*t1669;
  t4176 = t1426*t2718;
  t4203 = t1627*t3368;
  t4225 = t4171 + t4176 + t4203;
  t4234 = -0.0565*t4225;
  t4290 = t1114 + t1719 + t2173 + t2756 + t3400 + t3719 + t4044 + t4234;
  t4327 = -1.*t4323*t8*t1664;
  t4582 = -1.*t4323*t8*t3038;
  t5542 = t4323*t22*t634*t1669;
  t5543 = -1.*t144*t4323*t1669*t2161;
  t5546 = t5542 + t5543;
  t5549 = -1.*t144*t4323*t22*t1669;
  t5550 = -1.*t4323*t634*t1669*t2161;
  t5555 = t5549 + t5550;
  t4628 = -1.*t4323*t8*t2393;
  t4642 = -1.*t4148*t4323*t8;
  t4999 = t4323*t8*t22*t905;
  t5007 = -1.*t4323*t1664*t1669;
  t5009 = t4323*t8*t2076*t2161;
  t5023 = t2473*t5022;
  t5031 = t3152*t5028;
  t5040 = -1.*t4323*t3038*t1669;
  t5052 = t3535*t5028;
  t5053 = t5040 + t5047 + t5052;
  t5055 = 0.398799*t5053;
  t5060 = -1.*t4323*t2393*t1669;
  t5061 = t3812*t5022;
  t5064 = t5060 + t5061 + t5062;
  t5066 = -0.108558*t5064;
  t5068 = -1.*t4148*t4323*t1669;
  t5069 = t1426*t5022;
  t5072 = t1627*t5028;
  t5074 = t5068 + t5069 + t5072;
  t5075 = -0.0565*t5074;
  t5080 = t4999 + t5007 + t5009 + t5023 + t5031 + t5055 + t5066 + t5075;
  t5595 = -1.*t8*t22*t634*t993;
  t5598 = t144*t8*t993*t2161;
  t5601 = t5595 + t5598;
  t5634 = t144*t8*t22*t993;
  t5636 = t8*t634*t993*t2161;
  t5637 = t5634 + t5636;
  t5315 = -1.*t8*t1664*t993;
  t5330 = -1.*t8*t3038*t993;
  t5721 = t22*t634*t993*t1669;
  t5723 = -1.*t144*t993*t1669*t2161;
  t5726 = t5721 + t5723;
  t5731 = -1.*t144*t22*t993*t1669;
  t5732 = -1.*t634*t993*t1669*t2161;
  t5737 = t5731 + t5732;
  t5337 = -1.*t8*t2393*t993;
  t5348 = -1.*t4148*t8*t993;
  t5805 = t8*t22*t634;
  t5807 = -1.*t144*t8*t2161;
  t5808 = t5805 + t5807;
  t5811 = -1.*t144*t8*t22;
  t5812 = -1.*t8*t634*t2161;
  t5813 = t5811 + t5812;
  t5868 = -1.*t22*t634*t1669;
  t5870 = t144*t1669*t2161;
  t5873 = t5868 + t5870;
  t5876 = -1.*t144*t22*t1669;
  t5881 = -1.*t634*t1669*t2161;
  t5883 = t5876 + t5881;
  t5915 = t22*t634*t1669;
  t5916 = -1.*t144*t1669*t2161;
  t5923 = t5915 + t5916;
  t5972 = t144*t22*t1669;
  t5974 = t634*t1669*t2161;
  t5980 = t5972 + t5974;
  t5431 = t4323*t8*t22*t2076;
  t5432 = -1.*t4323*t8*t905*t2161;
  t5442 = t3152*t5440;
  t5443 = t2473*t5028;
  t5446 = -0.103955395616*t1255*t5440;
  t5449 = t3812*t5028;
  t5453 = t5446 + t5449;
  t5455 = -0.108558*t5453;
  t5456 = t3535*t5440;
  t5459 = t5456 + t5062;
  t5460 = 0.398799*t5459;
  t5463 = t1627*t5440;
  t5464 = t1426*t5028;
  t5465 = t5463 + t5464;
  t5470 = -0.0565*t5465;
  t5471 = t5431 + t5432 + t5442 + t5443 + t5455 + t5460 + t5470;
  t6018 = -1.*t144*t4516;
  t6020 = t5192 + t6018;
  t5148 = -0.103955395616*t1255*t5108;
  t4380 = t905*t4370;
  t4520 = t2076*t4516;
  t4556 = t2473*t4546;
  t4581 = t3152*t4569;
  t4603 = -0.103955395616*t1255*t4546;
  t4604 = t3535*t4569;
  t4630 = t3812*t4546;
  t4637 = -0.103955395616*t1255*t4569;
  t4645 = t1426*t4546;
  t4649 = t1627*t4569;
  t4921 = t2076*t4686;
  t4931 = t905*t4930;
  t4945 = t3152*t4944;
  t4952 = t2473*t4951;
  t4954 = -0.103955395616*t1255*t4944;
  t4963 = t3812*t4951;
  t4964 = t4954 + t4963;
  t4968 = -0.108558*t4964;
  t4970 = t3535*t4944;
  t4972 = -0.103955395616*t1255*t4951;
  t4981 = t4970 + t4972;
  t4983 = 0.398799*t4981;
  t4986 = t1627*t4944;
  t4987 = t1426*t4951;
  t4990 = t4986 + t4987;
  t4993 = -0.0565*t4990;
  t4995 = t4921 + t4931 + t4945 + t4952 + t4968 + t4983 + t4993;
  t5630 = t8*t22*t2076*t993;
  t5632 = -1.*t8*t905*t993*t2161;
  t5633 = t3152*t2718;
  t5643 = t2473*t5637;
  t5645 = t3812*t5637;
  t5646 = t3447 + t5645;
  t5648 = -0.108558*t5646;
  t5649 = t3535*t2718;
  t5655 = -0.103955395616*t1255*t5637;
  t5658 = t5649 + t5655;
  t5659 = 0.398799*t5658;
  t5660 = t1627*t2718;
  t5662 = t1426*t5637;
  t5664 = t5660 + t5662;
  t5670 = -0.0565*t5664;
  t5671 = t5630 + t5632 + t5633 + t5643 + t5648 + t5659 + t5670;
  t5094 = t2076*t5089;
  t5095 = t905*t4516;
  t5103 = t3152*t5101;
  t5110 = t2473*t5108;
  t5116 = -0.103955395616*t1255*t5101;
  t5117 = t3812*t5108;
  t5123 = t5116 + t5117;
  t5127 = -0.108558*t5123;
  t5130 = t3535*t5101;
  t5150 = t5130 + t5148;
  t5152 = 0.398799*t5150;
  t5155 = t1627*t5101;
  t5158 = t1426*t5108;
  t5163 = t5155 + t5158;
  t5166 = -0.0565*t5163;
  t5172 = t5094 + t5095 + t5103 + t5110 + t5127 + t5152 + t5166;
  t6102 = t22*t993*t1669;
  t6103 = -1.*t4323*t2161;
  t6106 = t6102 + t6103;
  t6113 = -1.*t634*t6106;
  t6114 = -1.*t144*t4704;
  t6115 = t6113 + t6114;
  t6120 = t144*t6106;
  t6121 = t6120 + t4737;
  t6151 = t634*t6106;
  t6152 = t6151 + t4723;
  t5316 = t905*t4686;
  t5317 = t2076*t4704;
  t5325 = t2473*t4726;
  t5326 = t3152*t4856;
  t5331 = t3535*t4856;
  t5339 = t3812*t4726;
  t5341 = -0.103955395616*t1255*t4856;
  t5349 = t1426*t4726;
  t5353 = t1627*t4856;
  t5800 = -1.*t8*t22*t905;
  t5803 = -1.*t8*t2076*t2161;
  t5810 = t2473*t5808;
  t5815 = t3152*t5813;
  t5818 = -0.103955395616*t1255*t5808;
  t5819 = t3535*t5813;
  t5837 = t3812*t5808;
  t5841 = -0.103955395616*t1255*t5813;
  t5847 = t1426*t5808;
  t5848 = t1627*t5813;
  t6212 = -1.*t8*t22*t634;
  t6214 = t144*t8*t2161;
  t6215 = t6212 + t6214;
  t6220 = t144*t8*t22;
  t6221 = t8*t634*t2161;
  t6222 = t6220 + t6221;
  t5863 = -1.*t22*t2076*t1669;
  t5865 = t905*t1669*t2161;
  t5874 = t3152*t5873;
  t5884 = t2473*t5883;
  t5885 = -0.103955395616*t1255*t5873;
  t5886 = t3812*t5883;
  t5889 = t5885 + t5886;
  t5891 = -0.108558*t5889;
  t5894 = t3535*t5873;
  t5896 = -0.103955395616*t1255*t5883;
  t5898 = t5894 + t5896;
  t5902 = 0.398799*t5898;
  t5905 = t1627*t5873;
  t5906 = t1426*t5883;
  t5907 = t5905 + t5906;
  t5908 = -0.0565*t5907;
  t5911 = t5863 + t5865 + t5874 + t5884 + t5891 + t5902 + t5908;
  t5363 = t4323*t8*t22*t4682;
  t5367 = t4323*t8*t4695*t2161;
  t5372 = t3152*t5022;
  t5384 = t2473*t5378;
  t5388 = t3812*t5378;
  t5390 = t5047 + t5388;
  t5391 = -0.108558*t5390;
  t5392 = t3535*t5022;
  t5393 = -0.103955395616*t1255*t5378;
  t5396 = t5392 + t5393;
  t5404 = 0.398799*t5396;
  t5409 = t1627*t5022;
  t5411 = t1426*t5378;
  t5412 = t5409 + t5411;
  t5413 = -0.0565*t5412;
  t5415 = t5363 + t5367 + t5372 + t5384 + t5391 + t5404 + t5413;
  t6015 = t4695*t5089;
  t6016 = t4682*t4516;
  t6022 = t2473*t6020;
  t6025 = t3152*t5108;
  t6026 = -0.103955395616*t1255*t6020;
  t6029 = t3535*t5108;
  t6033 = t6026 + t6029;
  t6034 = 0.398799*t6033;
  t6035 = t3812*t6020;
  t6037 = t6035 + t5148;
  t6038 = -0.108558*t6037;
  t6039 = t1426*t6020;
  t6040 = t1627*t5108;
  t6041 = t6039 + t6040;
  t6042 = -0.0565*t6041;
  t6043 = t6015 + t6016 + t6022 + t6025 + t6034 + t6038 + t6042;
  t6289 = -1.*t144*t5187;
  t6292 = t5097 + t6289;
  t5250 = -0.103955395616*t1255*t5219;
  t5300 = -0.103955395616*t1286*t5201;
  t4690 = t4682*t4686;
  t4720 = t4695*t4704;
  t4733 = t3152*t4726;
  t4746 = t2473*t4741;
  t4750 = t3812*t4741;
  t4752 = t4749 + t4750;
  t4757 = -0.108558*t4752;
  t4760 = t3535*t4726;
  t4761 = -0.103955395616*t1255*t4741;
  t4768 = t4760 + t4761;
  t4769 = 0.398799*t4768;
  t4778 = t1627*t4726;
  t4784 = t1426*t4741;
  t4790 = t4778 + t4784;
  t4793 = -0.0565*t4790;
  t4796 = t4690 + t4720 + t4733 + t4746 + t4757 + t4769 + t4793;
  t5592 = t8*t22*t4682*t993;
  t5593 = t8*t4695*t993*t2161;
  t5603 = t3152*t5601;
  t5605 = t2473*t3368;
  t5607 = -0.103955395616*t1255*t5601;
  t5608 = t3812*t3368;
  t5609 = t5607 + t5608;
  t5612 = -0.108558*t5609;
  t5613 = t3535*t5601;
  t5615 = t5613 + t3981;
  t5618 = 0.398799*t5615;
  t5620 = t1627*t5601;
  t5622 = t1426*t3368;
  t5623 = t5620 + t5622;
  t5625 = -0.0565*t5623;
  t5627 = t5592 + t5593 + t5603 + t5605 + t5612 + t5618 + t5625;
  t5178 = t4682*t5089;
  t5189 = t4695*t5187;
  t5207 = t3152*t5201;
  t5234 = t2473*t5219;
  t5236 = -0.103955395616*t1255*t5201;
  t5242 = t3812*t5219;
  t5243 = t5236 + t5242;
  t5246 = -0.108558*t5243;
  t5248 = t3535*t5201;
  t5252 = t5248 + t5250;
  t5253 = 0.398799*t5252;
  t5255 = t1627*t5201;
  t5257 = t1426*t5219;
  t5258 = t5255 + t5257;
  t5260 = -0.0565*t5258;
  t5262 = t5178 + t5189 + t5207 + t5234 + t5246 + t5253 + t5260;
  t6109 = t4695*t6106;
  t6110 = t4682*t4704;
  t6116 = t2473*t6115;
  t6122 = t3152*t6121;
  t6123 = -0.103955395616*t1255*t6115;
  t6124 = t3535*t6121;
  t6125 = t6123 + t6124;
  t6126 = 0.398799*t6125;
  t6132 = t3812*t6115;
  t6135 = -0.103955395616*t1255*t6121;
  t6139 = t6132 + t6135;
  t6140 = -0.108558*t6139;
  t6141 = t1426*t6115;
  t6142 = t1627*t6121;
  t6143 = t6141 + t6142;
  t6144 = -0.0565*t6143;
  t6148 = t6109 + t6110 + t6116 + t6122 + t6126 + t6140 + t6144;
  t6278 = 0.4*t144;
  t6279 = 0.12*t634;
  t6282 = t6278 + t6279;
  t6383 = -1.*t144*t4930;
  t6384 = t6151 + t6383;
  t6387 = -1.*t144*t6106;
  t6388 = t6387 + t4950;
  t6421 = t6113 + t4936;
  t6191 = t5818 + t5819;
  t6195 = 0.398799*t6191;
  t6198 = t5837 + t5841;
  t6199 = -0.108558*t6198;
  t6200 = t5847 + t5848;
  t6201 = -0.0565*t6200;
  t6209 = t8*t22*t4695;
  t6211 = -1.*t8*t4682*t2161;
  t6219 = t2473*t6215;
  t6223 = t3152*t6222;
  t6224 = -0.103955395616*t1255*t6215;
  t6225 = t3535*t6222;
  t6226 = t6224 + t6225;
  t6227 = 0.398799*t6226;
  t6231 = t3812*t6215;
  t6233 = -0.103955395616*t1255*t6222;
  t6234 = t6231 + t6233;
  t6236 = -0.108558*t6234;
  t6237 = t1426*t6215;
  t6238 = t1627*t6222;
  t6239 = t6237 + t6238;
  t6240 = -0.0565*t6239;
  t6241 = t6209 + t6211 + t6219 + t6223 + t6227 + t6236 + t6240;
  t5968 = -1.*t22*t4682*t1669;
  t5970 = -1.*t4695*t1669*t2161;
  t5971 = t3152*t5923;
  t5982 = t2473*t5980;
  t5983 = -0.103955395616*t1255*t5923;
  t5989 = t3812*t5980;
  t5991 = t5983 + t5989;
  t5994 = -0.108558*t5991;
  t5995 = t3535*t5923;
  t5996 = -0.103955395616*t1255*t5980;
  t5997 = t5995 + t5996;
  t5998 = 0.398799*t5997;
  t5999 = t1627*t5923;
  t6003 = t1426*t5980;
  t6005 = t5999 + t6003;
  t6009 = -0.0565*t6005;
  t6010 = t5968 + t5970 + t5971 + t5982 + t5994 + t5998 + t6009;
  t5475 = -1.*t4323*t4805*t1669;
  t5480 = t4817*t5022;
  t5484 = t4844*t5028;
  t5485 = 1.0000001112680001*t4323*t1286*t1669;
  t5486 = 0.104528*t1152*t5022;
  t5487 = 0.994522*t1152*t5028;
  t5489 = t5485 + t5486 + t5487;
  t5490 = -0.0565*t5489;
  t5496 = 0.994522*t1152*t4323*t1669;
  t5499 = -0.103955395616*t1286*t5022;
  t5500 = -0.9890740084840001*t1286*t5028;
  t5503 = t5496 + t5499 + t5500;
  t5504 = 0.398799*t5503;
  t5506 = 0.104528*t1152*t4323*t1669;
  t5511 = -0.010926102783999999*t1286*t5022;
  t5514 = -0.103955395616*t1286*t5028;
  t5522 = t5506 + t5511 + t5514;
  t5523 = -0.108558*t5522;
  t5526 = t5475 + t5480 + t5484 + t5490 + t5504 + t5523;
  t6048 = t4844*t5101;
  t6049 = t4817*t5108;
  t6050 = 0.994522*t1152*t5101;
  t6052 = 0.104528*t1152*t5108;
  t6053 = t6050 + t6052;
  t6055 = -0.0565*t6053;
  t6057 = -0.9890740084840001*t1286*t5101;
  t6058 = -0.103955395616*t1286*t5108;
  t6059 = t6057 + t6058;
  t6060 = 0.398799*t6059;
  t6065 = -0.103955395616*t1286*t5101;
  t6066 = -0.010926102783999999*t1286*t5108;
  t6071 = t6065 + t6066;
  t6072 = -0.108558*t6071;
  t6073 = t6048 + t6049 + t6055 + t6060 + t6072;
  t6323 = t4844*t5201;
  t6325 = t4817*t5219;
  t6329 = 0.994522*t1152*t5201;
  t6333 = 0.104528*t1152*t5219;
  t6335 = t6329 + t6333;
  t6336 = -0.0565*t6335;
  t6341 = -0.9890740084840001*t1286*t5201;
  t6342 = -0.103955395616*t1286*t5219;
  t6343 = t6341 + t6342;
  t6347 = 0.398799*t6343;
  t6348 = -0.010926102783999999*t1286*t5219;
  t6350 = t5300 + t6348;
  t6352 = -0.108558*t6350;
  t6354 = t6323 + t6325 + t6336 + t6347 + t6352;
  t4809 = -1.*t8*t4805*t993;
  t4821 = t4817*t4726;
  t4857 = t4844*t4856;
  t4858 = 1.0000001112680001*t8*t1286*t993;
  t4865 = 0.104528*t1152*t4726;
  t4870 = 0.994522*t1152*t4856;
  t4872 = t4858 + t4865 + t4870;
  t4873 = -0.0565*t4872;
  t4874 = 0.994522*t1152*t8*t993;
  t4875 = -0.103955395616*t1286*t4726;
  t4880 = -0.9890740084840001*t1286*t4856;
  t4882 = t4874 + t4875 + t4880;
  t4890 = 0.398799*t4882;
  t4905 = 0.104528*t1152*t8*t993;
  t4908 = -0.010926102783999999*t1286*t4726;
  t4909 = -0.103955395616*t1286*t4856;
  t4914 = t4905 + t4908 + t4909;
  t4915 = -0.108558*t4914;
  t4916 = t4809 + t4821 + t4857 + t4873 + t4890 + t4915;
  t5677 = -1.*t4805*t993*t1669;
  t5679 = t4817*t5601;
  t5681 = t4844*t5637;
  t5682 = 1.0000001112680001*t1286*t993*t1669;
  t5683 = 0.104528*t1152*t5601;
  t5685 = 0.994522*t1152*t5637;
  t5687 = t5682 + t5683 + t5685;
  t5690 = -0.0565*t5687;
  t5691 = 0.994522*t1152*t993*t1669;
  t5693 = -0.103955395616*t1286*t5601;
  t5696 = -0.9890740084840001*t1286*t5637;
  t5698 = t5691 + t5693 + t5696;
  t5700 = 0.398799*t5698;
  t5701 = 0.104528*t1152*t993*t1669;
  t5702 = -0.010926102783999999*t1286*t5601;
  t5705 = -0.103955395616*t1286*t5637;
  t5706 = t5701 + t5702 + t5705;
  t5711 = -0.108558*t5706;
  t5713 = t5677 + t5679 + t5681 + t5690 + t5700 + t5711;
  t5267 = t4323*t8*t4805;
  t5268 = t4817*t5201;
  t5279 = t4844*t5273;
  t5283 = -1.0000001112680001*t4323*t8*t1286;
  t5284 = 0.104528*t1152*t5201;
  t5288 = 0.994522*t1152*t5273;
  t5293 = t5283 + t5284 + t5288;
  t5296 = -0.0565*t5293;
  t5297 = -0.994522*t1152*t4323*t8;
  t5301 = -0.9890740084840001*t1286*t5273;
  t5303 = t5297 + t5300 + t5301;
  t5304 = 0.398799*t5303;
  t5306 = -0.104528*t1152*t4323*t8;
  t5307 = -0.010926102783999999*t1286*t5201;
  t5309 = -0.103955395616*t1286*t5273;
  t5310 = t5306 + t5307 + t5309;
  t5312 = -0.108558*t5310;
  t5313 = t5267 + t5268 + t5279 + t5296 + t5304 + t5312;
  t6153 = t4844*t6152;
  t6154 = t4817*t6121;
  t6155 = 0.994522*t1152*t6152;
  t6156 = 0.104528*t1152*t6121;
  t6157 = t6155 + t6156;
  t6158 = -0.0565*t6157;
  t6160 = -0.9890740084840001*t1286*t6152;
  t6161 = -0.103955395616*t1286*t6121;
  t6162 = t6160 + t6161;
  t6163 = 0.398799*t6162;
  t6165 = -0.103955395616*t1286*t6152;
  t6168 = -0.010926102783999999*t1286*t6121;
  t6169 = t6165 + t6168;
  t6170 = -0.108558*t6169;
  t6171 = t6153 + t6154 + t6158 + t6163 + t6170;
  t6422 = t4844*t6421;
  t6423 = t4817*t6388;
  t6424 = 0.994522*t1152*t6421;
  t6425 = 0.104528*t1152*t6388;
  t6426 = t6424 + t6425;
  t6427 = -0.0565*t6426;
  t6428 = -0.9890740084840001*t1286*t6421;
  t6429 = -0.103955395616*t1286*t6388;
  t6430 = t6428 + t6429;
  t6434 = 0.398799*t6430;
  t6435 = -0.103955395616*t1286*t6421;
  t6439 = -0.010926102783999999*t1286*t6388;
  t6441 = t6435 + t6439;
  t6442 = -0.108558*t6441;
  t6446 = t6422 + t6423 + t6427 + t6434 + t6442;
  t6507 = -0.056500534356700764*t1152;
  t6510 = -0.3852670428678886*t1286;
  t6511 = t6507 + t6510;
  t6515 = 0.04027119345689465*t1152;
  t6518 = -0.0059058871981009595*t1286;
  t6519 = t6515 + t6518;
  t6530 = 0.38315655000705834*t1152;
  t6537 = -0.05619101817723254*t1286;
  t6539 = t6530 + t6537;
  t6584 = t634*t4930;
  t6585 = t6120 + t6584;
  t6462 = t4844*t6215;
  t6464 = t4817*t5813;
  t6466 = 0.994522*t1152*t6215;
  t6469 = 0.104528*t1152*t5813;
  t6472 = t6466 + t6469;
  t6477 = -0.0565*t6472;
  t6478 = -0.9890740084840001*t1286*t6215;
  t6484 = -0.103955395616*t1286*t5813;
  t6485 = t6478 + t6484;
  t6486 = 0.398799*t6485;
  t6487 = -0.103955395616*t1286*t6215;
  t6488 = -0.010926102783999999*t1286*t5813;
  t6490 = t6487 + t6488;
  t6491 = -0.108558*t6490;
  t6492 = t6462 + t6464 + t6477 + t6486 + t6491;
  t6243 = t4844*t5808;
  t6249 = t4817*t6222;
  t6251 = 0.994522*t1152*t5808;
  t6253 = 0.104528*t1152*t6222;
  t6257 = t6251 + t6253;
  t6258 = -0.0565*t6257;
  t6259 = -0.9890740084840001*t1286*t5808;
  t6261 = -0.103955395616*t1286*t6222;
  t6263 = t6259 + t6261;
  t6264 = 0.398799*t6263;
  t6265 = -0.103955395616*t1286*t5808;
  t6268 = -0.010926102783999999*t1286*t6222;
  t6269 = t6265 + t6268;
  t6271 = -0.108558*t6269;
  t6272 = t6243 + t6249 + t6258 + t6264 + t6271;
  t5914 = -1.*t8*t4805;
  t5924 = t4817*t5923;
  t5926 = t4844*t5883;
  t5927 = 1.0000001112680001*t8*t1286;
  t5930 = 0.104528*t1152*t5923;
  t5931 = 0.994522*t1152*t5883;
  t5933 = t5927 + t5930 + t5931;
  t5938 = -0.0565*t5933;
  t5941 = 0.994522*t1152*t8;
  t5942 = -0.103955395616*t1286*t5923;
  t5944 = -0.9890740084840001*t1286*t5883;
  t5945 = t5941 + t5942 + t5944;
  t5950 = 0.398799*t5945;
  t5951 = 0.104528*t1152*t8;
  t5952 = -0.010926102783999999*t1286*t5923;
  t5953 = -0.103955395616*t1286*t5883;
  t5954 = t5951 + t5952 + t5953;
  t5957 = -0.108558*t5954;
  t5964 = t5914 + t5924 + t5926 + t5938 + t5950 + t5957;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(t4327 + t4380 + t4520 + t4556 + t4581 + 0.398799*(t4582 + t4603 + t4604) - 0.108558*(t4628 + t4630 + t4637) - 0.0565*(t4642 + t4645 + t4649))*var2[3] + t4290*var2[4] + t4995*var2[5] + t4796*var2[24] + t4916*var2[25];
  p_output1[10]=(t5315 + t5316 + t5317 + t5325 + t5326 + 0.398799*(t4749 + t5330 + t5331) - 0.108558*(t5337 + t5339 + t5341) - 0.0565*(t5348 + t5349 + t5353))*var2[3] + t5080*var2[4] + t5172*var2[5] + t5262*var2[24] + t5313*var2[25];
  p_output1[11]=0;
  p_output1[12]=t4290*var2[3] + (-1.*t1669*t2076*t2161*t4323 + t4327 + t2473*t5546 + t3152*t5555 - 0.108558*(t4628 + t3812*t5546 - 0.103955395616*t1255*t5555) - 0.0565*(t4642 + t1426*t5546 + t1627*t5555) + 0.398799*(t4582 - 0.103955395616*t1255*t5546 + t3535*t5555) - 1.*t1669*t22*t4323*t905)*var2[4] + t5471*var2[5] + t5415*var2[24] + t5526*var2[25];
  p_output1[13]=t5080*var2[3] + (t5315 + t2473*t5726 + t3152*t5737 - 0.108558*(t5337 + t3812*t5726 - 0.103955395616*t1255*t5737) - 0.0565*(t5348 + t1426*t5726 + t1627*t5737) + 0.398799*(t5330 - 0.103955395616*t1255*t5726 + t3535*t5737) - 1.*t1669*t2076*t2161*t993 - 1.*t1669*t22*t905*t993)*var2[4] + t5671*var2[5] + t5627*var2[24] + t5713*var2[25];
  p_output1[14]=(t1664*t1669 + t5800 + t5803 + t5810 + t5815 + 0.398799*(t1669*t3038 + t5818 + t5819) - 0.108558*(t1669*t2393 + t5837 + t5841) - 0.0565*(t1669*t4148 + t5847 + t5848))*var2[4] + t5911*var2[5] + t6010*var2[24] + t5964*var2[25];
  p_output1[15]=t4995*var2[3] + t5471*var2[4] + (t4380 + t4520 + t4556 + t4581 + 0.398799*(t4603 + t4604) - 0.108558*(t4630 + t4637) - 0.0565*(t4645 + t4649))*var2[5] + t6043*var2[24] + t6073*var2[25];
  p_output1[16]=t5172*var2[3] + t5671*var2[4] + (t5316 + t5317 + t5325 + t5326 + 0.398799*(t4749 + t5331) - 0.108558*(t5339 + t5341) - 0.0565*(t5349 + t5353))*var2[5] + t6148*var2[24] + t6171*var2[25];
  p_output1[17]=t5911*var2[4] + (t5800 + t5803 + t5810 + t5815 + t6195 + t6199 + t6201)*var2[5] + t6241*var2[24] + t6272*var2[25];
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=t4796*var2[3] + t5415*var2[4] + t6043*var2[5] + (t4682*t5187 + t3152*t5219 + t5089*t6282 + t2473*t6292 + 0.398799*(t3535*t5219 - 0.103955395616*t1255*t6292) - 0.0565*(t1627*t5219 + t1426*t6292) - 0.108558*(t5250 + t3812*t6292))*var2[24] + t6354*var2[25];
  p_output1[73]=t5262*var2[3] + t5627*var2[4] + t6148*var2[5] + (t4682*t4930 + t6106*t6282 + t2473*t6384 + t3152*t6388 - 0.108558*(t3812*t6384 - 0.103955395616*t1255*t6388) - 0.0565*(t1426*t6384 + t1627*t6388) + 0.398799*(-0.103955395616*t1255*t6384 + t3535*t6388))*var2[24] + t6446*var2[25];
  p_output1[74]=t6010*var2[4] + t6241*var2[5] + (t5810 + t5815 + t6195 + t6199 + t6201 + t2161*t4682*t8 + t22*t6282*t8)*var2[24] + t6492*var2[25];
  p_output1[75]=t4916*var2[3] + t5526*var2[4] + t6073*var2[5] + t6354*var2[24] + (t5201*t6519 + t5273*t6539 + t4323*t6511*t8 - 0.0565*(-0.104528*t1286*t5201 - 0.994522*t1286*t5273 - 1.0000001112680001*t1152*t4323*t8) - 0.108558*(-0.010926102783999999*t1152*t5201 - 0.103955395616*t1152*t5273 + 0.104528*t1286*t4323*t8) + 0.398799*(-0.103955395616*t1152*t5201 - 0.9890740084840001*t1152*t5273 + 0.994522*t1286*t4323*t8))*var2[25];
  p_output1[76]=t5313*var2[3] + t5713*var2[4] + t6171*var2[5] + t6446*var2[24] + (t6421*t6519 + t6539*t6585 + t6511*t8*t993 - 0.0565*(-0.104528*t1286*t6421 - 0.994522*t1286*t6585 - 1.0000001112680001*t1152*t8*t993) - 0.108558*(-0.010926102783999999*t1152*t6421 - 0.103955395616*t1152*t6585 + 0.104528*t1286*t8*t993) + 0.398799*(-0.103955395616*t1152*t6421 - 0.9890740084840001*t1152*t6585 + 0.994522*t1286*t8*t993))*var2[25];
  p_output1[77]=t5964*var2[4] + t6272*var2[5] + t6492*var2[24] + (0.398799*(-0.994522*t1286*t1669 - 0.103955395616*t1152*t6215 - 0.9890740084840001*t1152*t6222) - 0.108558*(-0.104528*t1286*t1669 - 0.010926102783999999*t1152*t6215 - 0.103955395616*t1152*t6222) - 0.0565*(1.0000001112680001*t1152*t1669 - 0.104528*t1286*t6215 - 0.994522*t1286*t6222) - 1.*t1669*t6511 + t6215*t6519 + t6222*t6539)*var2[25];
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void dJp_shoulder_pitch_joint_right_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
