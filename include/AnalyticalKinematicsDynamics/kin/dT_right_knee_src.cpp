/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:10:12 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dT_right_knee_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t133;
  double t903;
  double t878;
  double t891;
  double t902;
  double t1040;
  double t932;
  double t960;
  double t1075;
  double t64;
  double t264;
  double t837;
  double t981;
  double t1077;
  double t1080;
  double t1172;
  double t1286;
  double t1294;
  double t1549;
  double t1558;
  double t1565;
  double t312;
  double t835;
  double t838;
  double t1134;
  double t1137;
  double t1148;
  double t1319;
  double t1329;
  double t1393;
  double t1399;
  double t1406;
  double t1421;
  double t1450;
  double t1490;
  double t1497;
  double t1510;
  double t1585;
  double t1602;
  double t1610;
  double t1612;
  double t1613;
  double t1622;
  double t1681;
  double t1691;
  double t1694;
  double t1705;
  double t1770;
  double t1772;
  double t1847;
  double t25;
  double t82;
  double t108;
  double t1332;
  double t1339;
  double t1358;
  double t1524;
  double t1578;
  double t1584;
  double t1720;
  double t1741;
  double t1858;
  double t1873;
  double t1885;
  double t1913;
  double t1922;
  double t1923;
  double t1933;
  double t1982;
  double t2013;
  double t2017;
  double t2018;
  double t2020;
  double t2038;
  double t2046;
  double t2062;
  double t2094;
  double t51;
  double t63;
  double t2393;
  double t2383;
  double t2404;
  double t2425;
  double t2431;
  double t2433;
  double t2442;
  double t2429;
  double t2467;
  double t2470;
  double t2478;
  double t2494;
  double t2500;
  double t2472;
  double t2502;
  double t2505;
  double t2530;
  double t2558;
  double t2559;
  double t2586;
  double t2592;
  double t2594;
  double t2006;
  double t2008;
  double t2133;
  double t2158;
  double t2518;
  double t2560;
  double t2601;
  double t2605;
  double t2171;
  double t2183;
  double t2610;
  double t2613;
  double t2614;
  double t2618;
  double t2627;
  double t2643;
  double t2655;
  double t2662;
  double t2228;
  double t2231;
  double t2273;
  double t2277;
  double t2290;
  double t2303;
  double t2824;
  double t2838;
  double t2849;
  double t2820;
  double t2851;
  double t2860;
  double t2875;
  double t2885;
  double t2889;
  double t2868;
  double t2909;
  double t2911;
  double t2931;
  double t2939;
  double t2946;
  double t2957;
  double t2962;
  double t2963;
  double t2912;
  double t2949;
  double t2968;
  double t2971;
  double t2986;
  double t3001;
  double t3002;
  double t3004;
  double t3018;
  double t3022;
  double t3044;
  double t3052;
  double t3120;
  double t3123;
  double t3117;
  double t3149;
  double t3150;
  double t3167;
  double t3168;
  double t3176;
  double t3182;
  double t3189;
  double t3201;
  double t3211;
  double t3213;
  double t3163;
  double t3187;
  double t3221;
  double t3222;
  double t3236;
  double t3240;
  double t3242;
  double t3244;
  double t3249;
  double t3251;
  double t3253;
  double t3254;
  double t3310;
  double t3311;
  double t3317;
  double t3318;
  double t3322;
  double t3324;
  double t3325;
  double t3328;
  double t3348;
  double t3349;
  double t3351;
  double t3353;
  double t3444;
  double t3445;
  double t3449;
  double t3451;
  double t3485;
  double t3498;
  double t3499;
  double t3502;
  double t3510;
  double t3525;
  double t3527;
  double t3535;
  double t3463;
  double t3505;
  double t3537;
  double t3543;
  double t3557;
  double t3559;
  double t3560;
  double t3562;
  double t3570;
  double t3571;
  double t3583;
  double t3584;
  double t3667;
  double t3671;
  double t3676;
  double t3687;
  double t3691;
  double t3693;
  double t3683;
  double t3698;
  double t3699;
  double t3701;
  double t3704;
  double t3709;
  double t3651;
  double t3700;
  double t3710;
  double t3714;
  double t3717;
  double t3723;
  double t3727;
  double t3729;
  double t3734;
  double t3736;
  double t3747;
  double t3763;
  double t3715;
  double t3732;
  double t3767;
  double t3768;
  double t3774;
  double t3775;
  double t3779;
  double t3784;
  double t3786;
  double t3787;
  double t3790;
  double t3791;
  double t3854;
  double t3856;
  double t3859;
  double t3861;
  double t3866;
  double t3878;
  double t3852;
  double t3860;
  double t3879;
  double t3881;
  double t3886;
  double t3887;
  double t3891;
  double t3894;
  double t3913;
  double t3922;
  double t3923;
  double t3927;
  double t3882;
  double t3899;
  double t3928;
  double t3931;
  double t3939;
  double t3944;
  double t3945;
  double t3951;
  double t3953;
  double t3954;
  double t3956;
  double t3958;
  double t4077;
  double t4081;
  double t4106;
  double t4107;
  double t4119;
  double t4138;
  double t4142;
  double t4145;
  double t4132;
  double t4164;
  double t4174;
  double t4182;
  double t4184;
  double t4185;
  double t4197;
  double t4203;
  double t4205;
  double t4176;
  double t4187;
  double t4215;
  double t4225;
  double t4235;
  double t4237;
  double t4238;
  double t4240;
  double t4254;
  double t4258;
  double t4260;
  double t4263;
  double t4387;
  double t4388;
  double t4391;
  double t4377;
  double t4400;
  double t4412;
  double t4418;
  double t4424;
  double t4427;
  double t4415;
  double t4433;
  double t4434;
  double t4442;
  double t4446;
  double t4450;
  double t4455;
  double t4462;
  double t4485;
  double t4436;
  double t4451;
  double t4489;
  double t4493;
  double t4499;
  double t4504;
  double t4515;
  double t4519;
  double t4531;
  double t4539;
  double t4540;
  double t4549;
  double t4621;
  double t4623;
  double t4620;
  double t4629;
  double t4633;
  double t4639;
  double t4643;
  double t4645;
  double t4651;
  double t4654;
  double t4656;
  double t4658;
  double t4662;
  double t4638;
  double t4653;
  double t4665;
  double t4669;
  double t4678;
  double t4684;
  double t4688;
  double t4689;
  double t4696;
  double t4703;
  double t4709;
  double t4717;
  double t4788;
  double t4802;
  double t4806;
  double t4808;
  double t4821;
  double t4824;
  double t4830;
  double t4835;
  double t4837;
  double t4841;
  double t4843;
  double t4847;
  double t4916;
  double t4918;
  double t4932;
  double t4935;
  double t4943;
  double t4948;
  double t4952;
  double t4964;
  double t4981;
  double t4982;
  double t4983;
  double t4992;
  double t4938;
  double t4970;
  double t4999;
  double t5012;
  double t5028;
  double t5030;
  double t5032;
  double t5033;
  double t5041;
  double t5045;
  double t5046;
  double t5051;
  double t5137;
  double t5141;
  double t5150;
  double t5160;
  double t5161;
  double t5167;
  double t5157;
  double t5171;
  double t5192;
  double t5205;
  double t5215;
  double t5226;
  double t5239;
  double t5256;
  double t5263;
  double t5194;
  double t5227;
  double t5268;
  double t5269;
  double t5290;
  double t5295;
  double t5300;
  double t5304;
  double t5319;
  double t5327;
  double t5330;
  double t5336;
  double t5415;
  double t5416;
  double t5419;
  double t5439;
  double t5441;
  double t5456;
  double t5436;
  double t5457;
  double t5458;
  double t5486;
  double t5492;
  double t5493;
  double t5504;
  double t5505;
  double t5511;
  double t5485;
  double t5501;
  double t5513;
  double t5526;
  double t5535;
  double t5544;
  double t5550;
  double t5551;
  double t5559;
  double t5568;
  double t5569;
  double t5570;
  double t5649;
  double t5652;
  double t5655;
  double t5665;
  double t5671;
  double t5674;
  double t5699;
  double t5700;
  double t5704;
  double t5706;
  double t5664;
  double t5694;
  double t5709;
  double t5711;
  double t5716;
  double t5719;
  double t5720;
  double t5724;
  double t5727;
  double t5728;
  double t5731;
  double t5733;
  double t5779;
  double t5785;
  double t5798;
  double t5809;
  double t5833;
  double t5837;
  double t5838;
  double t5841;
  double t5851;
  double t5853;
  double t5854;
  double t5861;
  double t5960;
  double t5973;
  double t5980;
  double t5982;
  double t5995;
  double t5999;
  double t6000;
  double t6001;
  double t6015;
  double t6019;
  double t6021;
  double t6023;
  double t5990;
  double t6013;
  double t6024;
  double t6028;
  double t6043;
  double t6045;
  double t6047;
  double t6051;
  double t6057;
  double t6058;
  double t6065;
  double t6067;
  double t6120;
  double t6121;
  double t6122;
  double t6124;
  double t6139;
  double t6140;
  double t6118;
  double t6123;
  double t6143;
  double t6147;
  double t6151;
  double t6152;
  double t6157;
  double t6160;
  double t6167;
  double t6171;
  double t6183;
  double t6185;
  double t6149;
  double t6164;
  double t6192;
  double t6200;
  double t6204;
  double t6207;
  double t6209;
  double t6210;
  double t6237;
  double t6240;
  double t6247;
  double t6249;
  double t1756;
  double t2001;
  double t2096;
  double t2118;
  double t2168;
  double t2193;
  double t2195;
  double t2198;
  double t2254;
  double t2287;
  double t2318;
  double t2319;
  double t2334;
  double t2606;
  double t2622;
  double t2676;
  double t2688;
  double t2711;
  double t2735;
  double t2740;
  double t2741;
  double t2750;
  double t2755;
  double t2758;
  double t2773;
  double t2787;
  double t2984;
  double t3007;
  double t3057;
  double t3062;
  double t3086;
  double t3092;
  double t3094;
  double t3100;
  double t3102;
  double t3103;
  double t3104;
  double t3105;
  double t3108;
  double t3231;
  double t3245;
  double t3256;
  double t3260;
  double t3263;
  double t3269;
  double t3271;
  double t3272;
  double t3273;
  double t3282;
  double t3283;
  double t3290;
  double t3291;
  double t3319;
  double t3340;
  double t3354;
  double t3357;
  double t3358;
  double t3369;
  double t3375;
  double t3376;
  double t3378;
  double t3386;
  double t3391;
  double t3400;
  double t3412;
  double t3550;
  double t3567;
  double t3589;
  double t3591;
  double t3592;
  double t3595;
  double t3596;
  double t3599;
  double t3601;
  double t3604;
  double t3607;
  double t3610;
  double t3611;
  double t3770;
  double t3785;
  double t3798;
  double t3800;
  double t3809;
  double t3813;
  double t3814;
  double t3817;
  double t3828;
  double t3829;
  double t3831;
  double t3840;
  double t3841;
  double t3938;
  double t3952;
  double t3966;
  double t3972;
  double t3976;
  double t3979;
  double t3980;
  double t3982;
  double t3988;
  double t3991;
  double t3993;
  double t3996;
  double t4002;
  double t4009;
  double t4010;
  double t4011;
  double t4012;
  double t4018;
  double t4020;
  double t4022;
  double t4024;
  double t4035;
  double t4036;
  double t4037;
  double t4041;
  double t4043;
  double t4228;
  double t4247;
  double t4264;
  double t4272;
  double t4288;
  double t4295;
  double t4327;
  double t4330;
  double t4349;
  double t4354;
  double t4355;
  double t4361;
  double t4363;
  double t4494;
  double t4530;
  double t4555;
  double t4557;
  double t4570;
  double t4578;
  double t4583;
  double t4585;
  double t4597;
  double t4601;
  double t4606;
  double t4608;
  double t4609;
  double t4672;
  double t4690;
  double t4725;
  double t4734;
  double t4735;
  double t4736;
  double t4743;
  double t4746;
  double t4749;
  double t4754;
  double t4755;
  double t4757;
  double t4772;
  double t4810;
  double t4836;
  double t4851;
  double t4852;
  double t4857;
  double t4860;
  double t4862;
  double t4863;
  double t4874;
  double t4876;
  double t4881;
  double t4884;
  double t4888;
  double t5026;
  double t5035;
  double t5055;
  double t5066;
  double t5068;
  double t5074;
  double t5077;
  double t5079;
  double t5086;
  double t5095;
  double t5111;
  double t5115;
  double t5117;
  double t5281;
  double t5312;
  double t5339;
  double t5348;
  double t5351;
  double t5357;
  double t5358;
  double t5368;
  double t5379;
  double t5382;
  double t5383;
  double t5386;
  double t5396;
  double t5532;
  double t5555;
  double t5574;
  double t5576;
  double t5580;
  double t5582;
  double t5584;
  double t5585;
  double t5603;
  double t5605;
  double t5607;
  double t5611;
  double t5628;
  double t5714;
  double t5726;
  double t5737;
  double t5738;
  double t5739;
  double t5743;
  double t5745;
  double t5746;
  double t5747;
  double t5750;
  double t5752;
  double t5753;
  double t5756;
  double t5832;
  double t5847;
  double t5880;
  double t5882;
  double t5885;
  double t5892;
  double t5898;
  double t5902;
  double t5907;
  double t5917;
  double t5921;
  double t5927;
  double t5933;
  double t6038;
  double t6053;
  double t6071;
  double t6076;
  double t6077;
  double t6080;
  double t6087;
  double t6088;
  double t6096;
  double t6102;
  double t6107;
  double t6108;
  double t6110;
  double t6201;
  double t6222;
  double t6254;
  double t6256;
  double t6266;
  double t6268;
  double t6277;
  double t6279;
  double t6295;
  double t6305;
  double t6307;
  double t6310;
  double t6311;
  double t7025;
  double t7026;
  double t7028;
  double t7029;
  double t6997;
  double t7002;
  double t7048;
  double t7051;
  double t7052;
  double t7053;
  double t7033;
  double t7042;
  double t7044;
  double t7046;
  double t7093;
  double t7094;
  double t7098;
  double t7102;
  double t7071;
  double t7079;
  double t7084;
  double t7089;
  double t7109;
  double t7111;
  double t7112;
  double t7115;
  double t7117;
  double t7118;
  double t7120;
  double t7121;
  double t7137;
  double t7138;
  double t7144;
  double t7147;
  double t7162;
  double t7163;
  double t7169;
  double t7170;
  double t7006;
  double t7008;
  double t7011;
  double t7012;
  double t7277;
  double t7281;
  double t7293;
  double t7314;
  double t7317;
  double t7327;
  double t7340;
  double t7348;
  double t7351;
  double t7412;
  double t7413;
  double t7431;
  double t7435;
  double t7448;
  double t7453;
  double t7458;
  double t7471;
  double t7472;
  double t7507;
  double t7508;
  double t7510;
  double t7520;
  double t7522;
  double t7523;
  double t7531;
  double t7534;
  double t7535;
  t133 = Cos(var1[3]);
  t903 = Cos(var1[4]);
  t878 = Cos(var1[18]);
  t891 = -1.*t878;
  t902 = 1. + t891;
  t1040 = Cos(var1[17]);
  t932 = Cos(var1[5]);
  t960 = Sin(var1[17]);
  t1075 = Sin(var1[5]);
  t64 = Sin(var1[19]);
  t264 = Sin(var1[18]);
  t837 = Sin(var1[4]);
  t981 = -1.*t133*t903*t932*t960;
  t1077 = t1040*t133*t903*t1075;
  t1080 = t981 + t1077;
  t1172 = t1040*t133*t903*t932;
  t1286 = t133*t903*t960*t1075;
  t1294 = t1172 + t1286;
  t1549 = Cos(var1[19]);
  t1558 = -1.*t1549;
  t1565 = 1. + t1558;
  t312 = -0.366501*t264;
  t835 = 0. + t312;
  t838 = -1.*t133*t835*t837;
  t1134 = 0.340999127418*t902*t1080;
  t1137 = -0.134322983001*t902;
  t1148 = 1. + t1137;
  t1319 = t1148*t1294;
  t1329 = t838 + t1134 + t1319;
  t1393 = 0.930418*t264;
  t1399 = 0. + t1393;
  t1406 = -1.*t133*t1399*t837;
  t1421 = -0.8656776547239999*t902;
  t1450 = 1. + t1421;
  t1490 = t1450*t1080;
  t1497 = 0.340999127418*t902*t1294;
  t1510 = t1406 + t1490 + t1497;
  t1585 = -1.000000637725*t902;
  t1602 = 1. + t1585;
  t1610 = -1.*t1602*t133*t837;
  t1612 = -0.930418*t264;
  t1613 = 0. + t1612;
  t1622 = t1613*t1080;
  t1681 = 0.366501*t264;
  t1691 = 0. + t1681;
  t1694 = t1691*t1294;
  t1705 = t1610 + t1622 + t1694;
  t1770 = Cos(var1[20]);
  t1772 = -1.*t1770;
  t1847 = 1. + t1772;
  t25 = Sin(var1[20]);
  t82 = 0.930418*t64;
  t108 = 0. + t82;
  t1332 = t108*t1329;
  t1339 = 0.366501*t64;
  t1358 = 0. + t1339;
  t1524 = t1358*t1510;
  t1578 = -1.000000637725*t1565;
  t1584 = 1. + t1578;
  t1720 = t1584*t1705;
  t1741 = t1332 + t1524 + t1720;
  t1858 = -0.8656776547239999*t1565;
  t1873 = 1. + t1858;
  t1885 = t1873*t1329;
  t1913 = -0.340999127418*t1565*t1510;
  t1922 = -0.930418*t64;
  t1923 = 0. + t1922;
  t1933 = t1923*t1705;
  t1982 = t1885 + t1913 + t1933;
  t2013 = -0.340999127418*t1565*t1329;
  t2017 = -0.134322983001*t1565;
  t2018 = 1. + t2017;
  t2020 = t2018*t1510;
  t2038 = -0.366501*t64;
  t2046 = 0. + t2038;
  t2062 = t2046*t1705;
  t2094 = t2013 + t2020 + t2062;
  t51 = 0.366501*t25;
  t63 = 0. + t51;
  t2393 = Sin(var1[3]);
  t2383 = t133*t932*t837;
  t2404 = t2393*t1075;
  t2425 = t2383 + t2404;
  t2431 = t932*t2393;
  t2433 = -1.*t133*t837*t1075;
  t2442 = t2431 + t2433;
  t2429 = t960*t2425;
  t2467 = t1040*t2442;
  t2470 = t2429 + t2467;
  t2478 = t1040*t2425;
  t2494 = -1.*t960*t2442;
  t2500 = t2478 + t2494;
  t2472 = 0.340999127418*t902*t2470;
  t2502 = t1450*t2500;
  t2505 = t2472 + t2502;
  t2530 = t1148*t2470;
  t2558 = 0.340999127418*t902*t2500;
  t2559 = t2530 + t2558;
  t2586 = t1691*t2470;
  t2592 = t1613*t2500;
  t2594 = t2586 + t2592;
  t2006 = -0.134322983001*t1847;
  t2008 = 1. + t2006;
  t2133 = 0.930418*t25;
  t2158 = 0. + t2133;
  t2518 = t1358*t2505;
  t2560 = t108*t2559;
  t2601 = t1584*t2594;
  t2605 = t2518 + t2560 + t2601;
  t2171 = -0.8656776547239999*t1847;
  t2183 = 1. + t2171;
  t2610 = -0.340999127418*t1565*t2505;
  t2613 = t1873*t2559;
  t2614 = t1923*t2594;
  t2618 = t2610 + t2613 + t2614;
  t2627 = t2018*t2505;
  t2643 = -0.340999127418*t1565*t2559;
  t2655 = t2046*t2594;
  t2662 = t2627 + t2643 + t2655;
  t2228 = -1.000000637725*t1847;
  t2231 = 1. + t2228;
  t2273 = -0.930418*t25;
  t2277 = 0. + t2273;
  t2290 = -0.366501*t25;
  t2303 = 0. + t2290;
  t2824 = -1.*t932*t2393;
  t2838 = t133*t837*t1075;
  t2849 = t2824 + t2838;
  t2820 = -1.*t960*t2425;
  t2851 = t1040*t2849;
  t2860 = t2820 + t2851;
  t2875 = -1.*t1040*t2425;
  t2885 = -1.*t960*t2849;
  t2889 = t2875 + t2885;
  t2868 = 0.340999127418*t902*t2860;
  t2909 = t1450*t2889;
  t2911 = t2868 + t2909;
  t2931 = t1148*t2860;
  t2939 = 0.340999127418*t902*t2889;
  t2946 = t2931 + t2939;
  t2957 = t1691*t2860;
  t2962 = t1613*t2889;
  t2963 = t2957 + t2962;
  t2912 = t1358*t2911;
  t2949 = t108*t2946;
  t2968 = t1584*t2963;
  t2971 = t2912 + t2949 + t2968;
  t2986 = -0.340999127418*t1565*t2911;
  t3001 = t1873*t2946;
  t3002 = t1923*t2963;
  t3004 = t2986 + t3001 + t3002;
  t3018 = t2018*t2911;
  t3022 = -0.340999127418*t1565*t2946;
  t3044 = t2046*t2963;
  t3052 = t3018 + t3022 + t3044;
  t3120 = t960*t2849;
  t3123 = t2478 + t3120;
  t3117 = t133*t903*t835;
  t3149 = t1148*t3123;
  t3150 = t3117 + t2868 + t3149;
  t3167 = t133*t903*t1399;
  t3168 = t1450*t2860;
  t3176 = 0.340999127418*t902*t3123;
  t3182 = t3167 + t3168 + t3176;
  t3189 = t1602*t133*t903;
  t3201 = t1613*t2860;
  t3211 = t1691*t3123;
  t3213 = t3189 + t3201 + t3211;
  t3163 = t108*t3150;
  t3187 = t1358*t3182;
  t3221 = t1584*t3213;
  t3222 = t3163 + t3187 + t3221;
  t3236 = t1873*t3150;
  t3240 = -0.340999127418*t1565*t3182;
  t3242 = t1923*t3213;
  t3244 = t3236 + t3240 + t3242;
  t3249 = -0.340999127418*t1565*t3150;
  t3251 = t2018*t3182;
  t3253 = t2046*t3213;
  t3254 = t3249 + t3251 + t3253;
  t3310 = -0.8656776547239999*t64*t3150;
  t3311 = -0.340999127418*t64*t3182;
  t3317 = -0.930418*t1549*t3213;
  t3318 = t3310 + t3311 + t3317;
  t3322 = -0.340999127418*t64*t3150;
  t3324 = -0.134322983001*t64*t3182;
  t3325 = -0.366501*t1549*t3213;
  t3328 = t3322 + t3324 + t3325;
  t3348 = 0.930418*t1549*t3150;
  t3349 = 0.366501*t1549*t3182;
  t3351 = -1.000000637725*t64*t3213;
  t3353 = t3348 + t3349 + t3351;
  t3444 = -1.000000637725*t133*t903*t264;
  t3445 = -0.930418*t878*t2860;
  t3449 = 0.366501*t878*t3123;
  t3451 = t3444 + t3445 + t3449;
  t3485 = -0.366501*t878*t133*t903;
  t3498 = 0.340999127418*t264*t2860;
  t3499 = -0.134322983001*t264*t3123;
  t3502 = t3485 + t3498 + t3499;
  t3510 = 0.930418*t878*t133*t903;
  t3525 = -0.8656776547239999*t264*t2860;
  t3527 = 0.340999127418*t264*t3123;
  t3535 = t3510 + t3525 + t3527;
  t3463 = t2046*t3451;
  t3505 = -0.340999127418*t1565*t3502;
  t3537 = t2018*t3535;
  t3543 = t3463 + t3505 + t3537;
  t3557 = t1923*t3451;
  t3559 = t1873*t3502;
  t3560 = -0.340999127418*t1565*t3535;
  t3562 = t3557 + t3559 + t3560;
  t3570 = t1584*t3451;
  t3571 = t108*t3502;
  t3583 = t1358*t3535;
  t3584 = t3570 + t3571 + t3583;
  t3667 = -1.*t932*t2393*t837;
  t3671 = t133*t1075;
  t3676 = t3667 + t3671;
  t3687 = -1.*t133*t932;
  t3691 = -1.*t2393*t837*t1075;
  t3693 = t3687 + t3691;
  t3683 = -1.*t960*t3676;
  t3698 = t1040*t3693;
  t3699 = t3683 + t3698;
  t3701 = t1040*t3676;
  t3704 = t960*t3693;
  t3709 = t3701 + t3704;
  t3651 = -1.*t903*t835*t2393;
  t3700 = 0.340999127418*t902*t3699;
  t3710 = t1148*t3709;
  t3714 = t3651 + t3700 + t3710;
  t3717 = -1.*t903*t1399*t2393;
  t3723 = t1450*t3699;
  t3727 = 0.340999127418*t902*t3709;
  t3729 = t3717 + t3723 + t3727;
  t3734 = -1.*t1602*t903*t2393;
  t3736 = t1613*t3699;
  t3747 = t1691*t3709;
  t3763 = t3734 + t3736 + t3747;
  t3715 = t108*t3714;
  t3732 = t1358*t3729;
  t3767 = t1584*t3763;
  t3768 = t3715 + t3732 + t3767;
  t3774 = t1873*t3714;
  t3775 = -0.340999127418*t1565*t3729;
  t3779 = t1923*t3763;
  t3784 = t3774 + t3775 + t3779;
  t3786 = -0.340999127418*t1565*t3714;
  t3787 = t2018*t3729;
  t3790 = t2046*t3763;
  t3791 = t3786 + t3787 + t3790;
  t3854 = -1.*t903*t932*t960*t2393;
  t3856 = t1040*t903*t2393*t1075;
  t3859 = t3854 + t3856;
  t3861 = t1040*t903*t932*t2393;
  t3866 = t903*t960*t2393*t1075;
  t3878 = t3861 + t3866;
  t3852 = -1.*t835*t2393*t837;
  t3860 = 0.340999127418*t902*t3859;
  t3879 = t1148*t3878;
  t3881 = t3852 + t3860 + t3879;
  t3886 = -1.*t1399*t2393*t837;
  t3887 = t1450*t3859;
  t3891 = 0.340999127418*t902*t3878;
  t3894 = t3886 + t3887 + t3891;
  t3913 = -1.*t1602*t2393*t837;
  t3922 = t1613*t3859;
  t3923 = t1691*t3878;
  t3927 = t3913 + t3922 + t3923;
  t3882 = t108*t3881;
  t3899 = t1358*t3894;
  t3928 = t1584*t3927;
  t3931 = t3882 + t3899 + t3928;
  t3939 = t1873*t3881;
  t3944 = -0.340999127418*t1565*t3894;
  t3945 = t1923*t3927;
  t3951 = t3939 + t3944 + t3945;
  t3953 = -0.340999127418*t1565*t3881;
  t3954 = t2018*t3894;
  t3956 = t2046*t3927;
  t3958 = t3953 + t3954 + t3956;
  t4077 = t932*t2393*t837;
  t4081 = -1.*t133*t1075;
  t4106 = t4077 + t4081;
  t4107 = t960*t4106;
  t4119 = t4107 + t3698;
  t4138 = t1040*t4106;
  t4142 = -1.*t960*t3693;
  t4145 = t4138 + t4142;
  t4132 = 0.340999127418*t902*t4119;
  t4164 = t1450*t4145;
  t4174 = t4132 + t4164;
  t4182 = t1148*t4119;
  t4184 = 0.340999127418*t902*t4145;
  t4185 = t4182 + t4184;
  t4197 = t1691*t4119;
  t4203 = t1613*t4145;
  t4205 = t4197 + t4203;
  t4176 = t1358*t4174;
  t4187 = t108*t4185;
  t4215 = t1584*t4205;
  t4225 = t4176 + t4187 + t4215;
  t4235 = -0.340999127418*t1565*t4174;
  t4237 = t1873*t4185;
  t4238 = t1923*t4205;
  t4240 = t4235 + t4237 + t4238;
  t4254 = t2018*t4174;
  t4258 = -0.340999127418*t1565*t4185;
  t4260 = t2046*t4205;
  t4263 = t4254 + t4258 + t4260;
  t4387 = t133*t932;
  t4388 = t2393*t837*t1075;
  t4391 = t4387 + t4388;
  t4377 = -1.*t960*t4106;
  t4400 = t1040*t4391;
  t4412 = t4377 + t4400;
  t4418 = -1.*t1040*t4106;
  t4424 = -1.*t960*t4391;
  t4427 = t4418 + t4424;
  t4415 = 0.340999127418*t902*t4412;
  t4433 = t1450*t4427;
  t4434 = t4415 + t4433;
  t4442 = t1148*t4412;
  t4446 = 0.340999127418*t902*t4427;
  t4450 = t4442 + t4446;
  t4455 = t1691*t4412;
  t4462 = t1613*t4427;
  t4485 = t4455 + t4462;
  t4436 = t1358*t4434;
  t4451 = t108*t4450;
  t4489 = t1584*t4485;
  t4493 = t4436 + t4451 + t4489;
  t4499 = -0.340999127418*t1565*t4434;
  t4504 = t1873*t4450;
  t4515 = t1923*t4485;
  t4519 = t4499 + t4504 + t4515;
  t4531 = t2018*t4434;
  t4539 = -0.340999127418*t1565*t4450;
  t4540 = t2046*t4485;
  t4549 = t4531 + t4539 + t4540;
  t4621 = t960*t4391;
  t4623 = t4138 + t4621;
  t4620 = t903*t835*t2393;
  t4629 = t1148*t4623;
  t4633 = t4620 + t4415 + t4629;
  t4639 = t903*t1399*t2393;
  t4643 = t1450*t4412;
  t4645 = 0.340999127418*t902*t4623;
  t4651 = t4639 + t4643 + t4645;
  t4654 = t1602*t903*t2393;
  t4656 = t1613*t4412;
  t4658 = t1691*t4623;
  t4662 = t4654 + t4656 + t4658;
  t4638 = t108*t4633;
  t4653 = t1358*t4651;
  t4665 = t1584*t4662;
  t4669 = t4638 + t4653 + t4665;
  t4678 = t1873*t4633;
  t4684 = -0.340999127418*t1565*t4651;
  t4688 = t1923*t4662;
  t4689 = t4678 + t4684 + t4688;
  t4696 = -0.340999127418*t1565*t4633;
  t4703 = t2018*t4651;
  t4709 = t2046*t4662;
  t4717 = t4696 + t4703 + t4709;
  t4788 = -0.8656776547239999*t64*t4633;
  t4802 = -0.340999127418*t64*t4651;
  t4806 = -0.930418*t1549*t4662;
  t4808 = t4788 + t4802 + t4806;
  t4821 = -0.340999127418*t64*t4633;
  t4824 = -0.134322983001*t64*t4651;
  t4830 = -0.366501*t1549*t4662;
  t4835 = t4821 + t4824 + t4830;
  t4837 = 0.930418*t1549*t4633;
  t4841 = 0.366501*t1549*t4651;
  t4843 = -1.000000637725*t64*t4662;
  t4847 = t4837 + t4841 + t4843;
  t4916 = -1.000000637725*t903*t264*t2393;
  t4918 = -0.930418*t878*t4412;
  t4932 = 0.366501*t878*t4623;
  t4935 = t4916 + t4918 + t4932;
  t4943 = -0.366501*t878*t903*t2393;
  t4948 = 0.340999127418*t264*t4412;
  t4952 = -0.134322983001*t264*t4623;
  t4964 = t4943 + t4948 + t4952;
  t4981 = 0.930418*t878*t903*t2393;
  t4982 = -0.8656776547239999*t264*t4412;
  t4983 = 0.340999127418*t264*t4623;
  t4992 = t4981 + t4982 + t4983;
  t4938 = t2046*t4935;
  t4970 = -0.340999127418*t1565*t4964;
  t4999 = t2018*t4992;
  t5012 = t4938 + t4970 + t4999;
  t5028 = t1923*t4935;
  t5030 = t1873*t4964;
  t5032 = -0.340999127418*t1565*t4992;
  t5033 = t5028 + t5030 + t5032;
  t5041 = t1584*t4935;
  t5045 = t108*t4964;
  t5046 = t1358*t4992;
  t5051 = t5041 + t5045 + t5046;
  t5137 = -1.*t903*t932*t960;
  t5141 = t1040*t903*t1075;
  t5150 = t5137 + t5141;
  t5160 = -1.*t1040*t903*t932;
  t5161 = -1.*t903*t960*t1075;
  t5167 = t5160 + t5161;
  t5157 = 0.340999127418*t902*t5150;
  t5171 = t1450*t5167;
  t5192 = t5157 + t5171;
  t5205 = t1148*t5150;
  t5215 = 0.340999127418*t902*t5167;
  t5226 = t5205 + t5215;
  t5239 = t1691*t5150;
  t5256 = t1613*t5167;
  t5263 = t5239 + t5256;
  t5194 = t1358*t5192;
  t5227 = t108*t5226;
  t5268 = t1584*t5263;
  t5269 = t5194 + t5227 + t5268;
  t5290 = -0.340999127418*t1565*t5192;
  t5295 = t1873*t5226;
  t5300 = t1923*t5263;
  t5304 = t5290 + t5295 + t5300;
  t5319 = t2018*t5192;
  t5327 = -0.340999127418*t1565*t5226;
  t5330 = t2046*t5263;
  t5336 = t5319 + t5327 + t5330;
  t5415 = t903*t932*t960;
  t5416 = -1.*t1040*t903*t1075;
  t5419 = t5415 + t5416;
  t5439 = t1040*t903*t932;
  t5441 = t903*t960*t1075;
  t5456 = t5439 + t5441;
  t5436 = 0.340999127418*t902*t5419;
  t5457 = t1450*t5456;
  t5458 = t5436 + t5457;
  t5486 = t1148*t5419;
  t5492 = 0.340999127418*t902*t5456;
  t5493 = t5486 + t5492;
  t5504 = t1691*t5419;
  t5505 = t1613*t5456;
  t5511 = t5504 + t5505;
  t5485 = t1358*t5458;
  t5501 = t108*t5493;
  t5513 = t1584*t5511;
  t5526 = t5485 + t5501 + t5513;
  t5535 = -0.340999127418*t1565*t5458;
  t5544 = t1873*t5493;
  t5550 = t1923*t5511;
  t5551 = t5535 + t5544 + t5550;
  t5559 = t2018*t5458;
  t5568 = -0.340999127418*t1565*t5493;
  t5569 = t2046*t5511;
  t5570 = t5559 + t5568 + t5569;
  t5649 = -1.*t835*t837;
  t5652 = t1148*t5456;
  t5655 = t5649 + t5157 + t5652;
  t5665 = -1.*t1399*t837;
  t5671 = t1450*t5150;
  t5674 = t5665 + t5671 + t5492;
  t5699 = -1.*t1602*t837;
  t5700 = t1613*t5150;
  t5704 = t1691*t5456;
  t5706 = t5699 + t5700 + t5704;
  t5664 = t108*t5655;
  t5694 = t1358*t5674;
  t5709 = t1584*t5706;
  t5711 = t5664 + t5694 + t5709;
  t5716 = t1873*t5655;
  t5719 = -0.340999127418*t1565*t5674;
  t5720 = t1923*t5706;
  t5724 = t5716 + t5719 + t5720;
  t5727 = -0.340999127418*t1565*t5655;
  t5728 = t2018*t5674;
  t5731 = t2046*t5706;
  t5733 = t5727 + t5728 + t5731;
  t5779 = -0.8656776547239999*t64*t5655;
  t5785 = -0.340999127418*t64*t5674;
  t5798 = -0.930418*t1549*t5706;
  t5809 = t5779 + t5785 + t5798;
  t5833 = -0.340999127418*t64*t5655;
  t5837 = -0.134322983001*t64*t5674;
  t5838 = -0.366501*t1549*t5706;
  t5841 = t5833 + t5837 + t5838;
  t5851 = 0.930418*t1549*t5655;
  t5853 = 0.366501*t1549*t5674;
  t5854 = -1.000000637725*t64*t5706;
  t5861 = t5851 + t5853 + t5854;
  t5960 = 1.000000637725*t264*t837;
  t5973 = -0.930418*t878*t5150;
  t5980 = 0.366501*t878*t5456;
  t5982 = t5960 + t5973 + t5980;
  t5995 = 0.366501*t878*t837;
  t5999 = 0.340999127418*t264*t5150;
  t6000 = -0.134322983001*t264*t5456;
  t6001 = t5995 + t5999 + t6000;
  t6015 = -0.930418*t878*t837;
  t6019 = -0.8656776547239999*t264*t5150;
  t6021 = 0.340999127418*t264*t5456;
  t6023 = t6015 + t6019 + t6021;
  t5990 = t2046*t5982;
  t6013 = -0.340999127418*t1565*t6001;
  t6024 = t2018*t6023;
  t6028 = t5990 + t6013 + t6024;
  t6043 = t1923*t5982;
  t6045 = t1873*t6001;
  t6047 = -0.340999127418*t1565*t6023;
  t6051 = t6043 + t6045 + t6047;
  t6057 = t1584*t5982;
  t6058 = t108*t6001;
  t6065 = t1358*t6023;
  t6067 = t6057 + t6058 + t6065;
  t6120 = t932*t960*t837;
  t6121 = -1.*t1040*t837*t1075;
  t6122 = t6120 + t6121;
  t6124 = -1.*t1040*t932*t837;
  t6139 = -1.*t960*t837*t1075;
  t6140 = t6124 + t6139;
  t6118 = -1.*t903*t835;
  t6123 = 0.340999127418*t902*t6122;
  t6143 = t1148*t6140;
  t6147 = t6118 + t6123 + t6143;
  t6151 = -1.*t903*t1399;
  t6152 = t1450*t6122;
  t6157 = 0.340999127418*t902*t6140;
  t6160 = t6151 + t6152 + t6157;
  t6167 = -1.*t1602*t903;
  t6171 = t1613*t6122;
  t6183 = t1691*t6140;
  t6185 = t6167 + t6171 + t6183;
  t6149 = t108*t6147;
  t6164 = t1358*t6160;
  t6192 = t1584*t6185;
  t6200 = t6149 + t6164 + t6192;
  t6204 = t1873*t6147;
  t6207 = -0.340999127418*t1565*t6160;
  t6209 = t1923*t6185;
  t6210 = t6204 + t6207 + t6209;
  t6237 = -0.340999127418*t1565*t6147;
  t6240 = t2018*t6160;
  t6247 = t2046*t6185;
  t6249 = t6237 + t6240 + t6247;
  t1756 = t63*t1741;
  t2001 = -0.340999127418*t1847*t1982;
  t2096 = t2008*t2094;
  t2118 = t1756 + t2001 + t2096;
  t2168 = t2158*t1741;
  t2193 = t2183*t1982;
  t2195 = -0.340999127418*t1847*t2094;
  t2198 = t2168 + t2193 + t2195;
  t2254 = t2231*t1741;
  t2287 = t2277*t1982;
  t2318 = t2303*t2094;
  t2319 = t2254 + t2287 + t2318;
  t2334 = -0.707107*t2319;
  t2606 = t63*t2605;
  t2622 = -0.340999127418*t1847*t2618;
  t2676 = t2008*t2662;
  t2688 = t2606 + t2622 + t2676;
  t2711 = t2158*t2605;
  t2735 = t2183*t2618;
  t2740 = -0.340999127418*t1847*t2662;
  t2741 = t2711 + t2735 + t2740;
  t2750 = t2231*t2605;
  t2755 = t2277*t2618;
  t2758 = t2303*t2662;
  t2773 = t2750 + t2755 + t2758;
  t2787 = -0.707107*t2773;
  t2984 = t63*t2971;
  t3007 = -0.340999127418*t1847*t3004;
  t3057 = t2008*t3052;
  t3062 = t2984 + t3007 + t3057;
  t3086 = t2158*t2971;
  t3092 = t2183*t3004;
  t3094 = -0.340999127418*t1847*t3052;
  t3100 = t3086 + t3092 + t3094;
  t3102 = t2231*t2971;
  t3103 = t2277*t3004;
  t3104 = t2303*t3052;
  t3105 = t3102 + t3103 + t3104;
  t3108 = -0.707107*t3105;
  t3231 = -1.000000637725*t25*t3222;
  t3245 = -0.930418*t1770*t3244;
  t3256 = -0.366501*t1770*t3254;
  t3260 = t3231 + t3245 + t3256;
  t3263 = -0.707107*t3260;
  t3269 = 0.930418*t1770*t3222;
  t3271 = -0.8656776547239999*t25*t3244;
  t3272 = -0.340999127418*t25*t3254;
  t3273 = t3269 + t3271 + t3272;
  t3282 = 0.366501*t1770*t3222;
  t3283 = -0.340999127418*t25*t3244;
  t3290 = -0.134322983001*t25*t3254;
  t3291 = t3282 + t3283 + t3290;
  t3319 = t2277*t3318;
  t3340 = t2303*t3328;
  t3354 = t2231*t3353;
  t3357 = t3319 + t3340 + t3354;
  t3358 = -0.707107*t3357;
  t3369 = -0.340999127418*t1847*t3318;
  t3375 = t2008*t3328;
  t3376 = t63*t3353;
  t3378 = t3369 + t3375 + t3376;
  t3386 = t2183*t3318;
  t3391 = -0.340999127418*t1847*t3328;
  t3400 = t2158*t3353;
  t3412 = t3386 + t3391 + t3400;
  t3550 = t2303*t3543;
  t3567 = t2277*t3562;
  t3589 = t2231*t3584;
  t3591 = t3550 + t3567 + t3589;
  t3592 = -0.707107*t3591;
  t3595 = t2008*t3543;
  t3596 = -0.340999127418*t1847*t3562;
  t3599 = t63*t3584;
  t3601 = t3595 + t3596 + t3599;
  t3604 = -0.340999127418*t1847*t3543;
  t3607 = t2183*t3562;
  t3610 = t2158*t3584;
  t3611 = t3604 + t3607 + t3610;
  t3770 = t63*t3768;
  t3785 = -0.340999127418*t1847*t3784;
  t3798 = t2008*t3791;
  t3800 = t3770 + t3785 + t3798;
  t3809 = t2158*t3768;
  t3813 = t2183*t3784;
  t3814 = -0.340999127418*t1847*t3791;
  t3817 = t3809 + t3813 + t3814;
  t3828 = t2231*t3768;
  t3829 = t2277*t3784;
  t3831 = t2303*t3791;
  t3840 = t3828 + t3829 + t3831;
  t3841 = -0.707107*t3840;
  t3938 = t63*t3931;
  t3952 = -0.340999127418*t1847*t3951;
  t3966 = t2008*t3958;
  t3972 = t3938 + t3952 + t3966;
  t3976 = t2158*t3931;
  t3979 = t2183*t3951;
  t3980 = -0.340999127418*t1847*t3958;
  t3982 = t3976 + t3979 + t3980;
  t3988 = t2231*t3931;
  t3991 = t2277*t3951;
  t3993 = t2303*t3958;
  t3996 = t3988 + t3991 + t3993;
  t4002 = -0.707107*t3996;
  t4009 = t63*t3222;
  t4010 = -0.340999127418*t1847*t3244;
  t4011 = t2008*t3254;
  t4012 = t4009 + t4010 + t4011;
  t4018 = t2158*t3222;
  t4020 = t2183*t3244;
  t4022 = -0.340999127418*t1847*t3254;
  t4024 = t4018 + t4020 + t4022;
  t4035 = t2231*t3222;
  t4036 = t2277*t3244;
  t4037 = t2303*t3254;
  t4041 = t4035 + t4036 + t4037;
  t4043 = -0.707107*t4041;
  t4228 = t63*t4225;
  t4247 = -0.340999127418*t1847*t4240;
  t4264 = t2008*t4263;
  t4272 = t4228 + t4247 + t4264;
  t4288 = t2158*t4225;
  t4295 = t2183*t4240;
  t4327 = -0.340999127418*t1847*t4263;
  t4330 = t4288 + t4295 + t4327;
  t4349 = t2231*t4225;
  t4354 = t2277*t4240;
  t4355 = t2303*t4263;
  t4361 = t4349 + t4354 + t4355;
  t4363 = -0.707107*t4361;
  t4494 = t63*t4493;
  t4530 = -0.340999127418*t1847*t4519;
  t4555 = t2008*t4549;
  t4557 = t4494 + t4530 + t4555;
  t4570 = t2158*t4493;
  t4578 = t2183*t4519;
  t4583 = -0.340999127418*t1847*t4549;
  t4585 = t4570 + t4578 + t4583;
  t4597 = t2231*t4493;
  t4601 = t2277*t4519;
  t4606 = t2303*t4549;
  t4608 = t4597 + t4601 + t4606;
  t4609 = -0.707107*t4608;
  t4672 = -1.000000637725*t25*t4669;
  t4690 = -0.930418*t1770*t4689;
  t4725 = -0.366501*t1770*t4717;
  t4734 = t4672 + t4690 + t4725;
  t4735 = -0.707107*t4734;
  t4736 = 0.930418*t1770*t4669;
  t4743 = -0.8656776547239999*t25*t4689;
  t4746 = -0.340999127418*t25*t4717;
  t4749 = t4736 + t4743 + t4746;
  t4754 = 0.366501*t1770*t4669;
  t4755 = -0.340999127418*t25*t4689;
  t4757 = -0.134322983001*t25*t4717;
  t4772 = t4754 + t4755 + t4757;
  t4810 = t2277*t4808;
  t4836 = t2303*t4835;
  t4851 = t2231*t4847;
  t4852 = t4810 + t4836 + t4851;
  t4857 = -0.707107*t4852;
  t4860 = -0.340999127418*t1847*t4808;
  t4862 = t2008*t4835;
  t4863 = t63*t4847;
  t4874 = t4860 + t4862 + t4863;
  t4876 = t2183*t4808;
  t4881 = -0.340999127418*t1847*t4835;
  t4884 = t2158*t4847;
  t4888 = t4876 + t4881 + t4884;
  t5026 = t2303*t5012;
  t5035 = t2277*t5033;
  t5055 = t2231*t5051;
  t5066 = t5026 + t5035 + t5055;
  t5068 = -0.707107*t5066;
  t5074 = t2008*t5012;
  t5077 = -0.340999127418*t1847*t5033;
  t5079 = t63*t5051;
  t5086 = t5074 + t5077 + t5079;
  t5095 = -0.340999127418*t1847*t5012;
  t5111 = t2183*t5033;
  t5115 = t2158*t5051;
  t5117 = t5095 + t5111 + t5115;
  t5281 = t63*t5269;
  t5312 = -0.340999127418*t1847*t5304;
  t5339 = t2008*t5336;
  t5348 = t5281 + t5312 + t5339;
  t5351 = t2158*t5269;
  t5357 = t2183*t5304;
  t5358 = -0.340999127418*t1847*t5336;
  t5368 = t5351 + t5357 + t5358;
  t5379 = t2231*t5269;
  t5382 = t2277*t5304;
  t5383 = t2303*t5336;
  t5386 = t5379 + t5382 + t5383;
  t5396 = -0.707107*t5386;
  t5532 = t63*t5526;
  t5555 = -0.340999127418*t1847*t5551;
  t5574 = t2008*t5570;
  t5576 = t5532 + t5555 + t5574;
  t5580 = t2158*t5526;
  t5582 = t2183*t5551;
  t5584 = -0.340999127418*t1847*t5570;
  t5585 = t5580 + t5582 + t5584;
  t5603 = t2231*t5526;
  t5605 = t2277*t5551;
  t5607 = t2303*t5570;
  t5611 = t5603 + t5605 + t5607;
  t5628 = -0.707107*t5611;
  t5714 = -1.000000637725*t25*t5711;
  t5726 = -0.930418*t1770*t5724;
  t5737 = -0.366501*t1770*t5733;
  t5738 = t5714 + t5726 + t5737;
  t5739 = -0.707107*t5738;
  t5743 = 0.930418*t1770*t5711;
  t5745 = -0.8656776547239999*t25*t5724;
  t5746 = -0.340999127418*t25*t5733;
  t5747 = t5743 + t5745 + t5746;
  t5750 = 0.366501*t1770*t5711;
  t5752 = -0.340999127418*t25*t5724;
  t5753 = -0.134322983001*t25*t5733;
  t5756 = t5750 + t5752 + t5753;
  t5832 = t2277*t5809;
  t5847 = t2303*t5841;
  t5880 = t2231*t5861;
  t5882 = t5832 + t5847 + t5880;
  t5885 = -0.707107*t5882;
  t5892 = -0.340999127418*t1847*t5809;
  t5898 = t2008*t5841;
  t5902 = t63*t5861;
  t5907 = t5892 + t5898 + t5902;
  t5917 = t2183*t5809;
  t5921 = -0.340999127418*t1847*t5841;
  t5927 = t2158*t5861;
  t5933 = t5917 + t5921 + t5927;
  t6038 = t2303*t6028;
  t6053 = t2277*t6051;
  t6071 = t2231*t6067;
  t6076 = t6038 + t6053 + t6071;
  t6077 = -0.707107*t6076;
  t6080 = t2008*t6028;
  t6087 = -0.340999127418*t1847*t6051;
  t6088 = t63*t6067;
  t6096 = t6080 + t6087 + t6088;
  t6102 = -0.340999127418*t1847*t6028;
  t6107 = t2183*t6051;
  t6108 = t2158*t6067;
  t6110 = t6102 + t6107 + t6108;
  t6201 = t63*t6200;
  t6222 = -0.340999127418*t1847*t6210;
  t6254 = t2008*t6249;
  t6256 = t6201 + t6222 + t6254;
  t6266 = t2158*t6200;
  t6268 = t2183*t6210;
  t6277 = -0.340999127418*t1847*t6249;
  t6279 = t6266 + t6268 + t6277;
  t6295 = t2231*t6200;
  t6305 = t2277*t6210;
  t6307 = t2303*t6249;
  t6310 = t6295 + t6305 + t6307;
  t6311 = -0.707107*t6310;
  t7025 = -1.*t1040;
  t7026 = 1. + t7025;
  t7028 = -0.091*t7026;
  t7029 = 0. + t7028;
  t6997 = -0.091*t960;
  t7002 = 0. + t6997;
  t7048 = 3.2909349868922137e-7*var1[18];
  t7051 = 0.03103092645718495*t902;
  t7052 = -0.045000372235*t835;
  t7053 = t7048 + t7051 + t7052;
  t7033 = 1.296332362046933e-7*var1[18];
  t7042 = -0.07877668146182712*t902;
  t7044 = -0.045000372235*t1399;
  t7046 = t7033 + t7042 + t7044;
  t7093 = 3.2909349868922137e-7*var1[19];
  t7094 = -0.055653945343889656*t1565;
  t7098 = -0.045000372235*t2046;
  t7102 = t7093 + t7094 + t7098;
  t7071 = -1.296332362046933e-7*var1[19];
  t7079 = -0.14128592423750855*t1565;
  t7084 = -0.045000372235*t1923;
  t7089 = t7071 + t7079 + t7084;
  t7109 = -0.04500040093286238*t1565;
  t7111 = -0.055653909852*t1358;
  t7112 = -0.141285834136*t108;
  t7115 = 0. + t7109 + t7111 + t7112;
  t7117 = 0.039853038461262744*t1847;
  t7118 = -0.22023459268999998*t2277;
  t7120 = -0.086752619205*t2303;
  t7121 = 0. + t7117 + t7118 + t7120;
  t7137 = 6.295460977284962e-8*var1[20];
  t7138 = -0.22023473313910558*t1847;
  t7144 = 0.039853013046*t2158;
  t7147 = t7137 + t7138 + t7144;
  t7162 = -1.5981976069815686e-7*var1[20];
  t7163 = -0.08675267452931407*t1847;
  t7169 = 0.039853013046*t63;
  t7170 = t7162 + t7163 + t7169;
  t7006 = -0.04500040093286238*t902;
  t7008 = -0.07877663122399998*t1613;
  t7011 = 0.031030906668*t1691;
  t7012 = 0. + t7006 + t7008 + t7011;
  t7277 = 0.23670515095269612*t1770;
  t7281 = 0.039853038461262744*t25;
  t7293 = t7277 + t7281;
  t7314 = 0.03707996069223323*t1770;
  t7317 = -0.22023473313910558*t25;
  t7327 = 6.295460977284962e-8 + t7314 + t7317;
  t7340 = 0.014606169134372047*t1770;
  t7348 = -0.08675267452931407*t25;
  t7351 = -1.5981976069815686e-7 + t7340 + t7348;
  t7412 = 0.04186915633414423*t1549;
  t7413 = -0.14128592423750855*t64;
  t7431 = -1.296332362046933e-7 + t7412 + t7413;
  t7435 = 0.016492681424499736*t1549;
  t7448 = -0.055653945343889656*t64;
  t7453 = 3.2909349868922137e-7 + t7435 + t7448;
  t7458 = -0.15185209683981668*t1549;
  t7471 = -0.04500040093286238*t64;
  t7472 = t7458 + t7471;
  t7507 = 0.0846680539949003*t878;
  t7508 = -0.04500040093286238*t264;
  t7510 = t7507 + t7508;
  t7520 = -0.04186915633414423*t878;
  t7522 = -0.07877668146182712*t264;
  t7523 = 1.296332362046933e-7 + t7520 + t7522;
  t7531 = 0.016492681424499736*t878;
  t7534 = 0.03103092645718495*t264;
  t7535 = 3.2909349868922137e-7 + t7531 + t7534;
  p_output1[0]=(-0.259155*t3800 - 0.657905*t3817 + t3841)*var2[3] + (-0.259155*t2118 - 0.657905*t2198 + t2334)*var2[4] + (-0.259155*t2688 - 0.657905*t2741 + t2787)*var2[5] + (-0.259155*t3062 - 0.657905*t3100 + t3108)*var2[17] + (t3592 - 0.259155*t3601 - 0.657905*t3611)*var2[18] + (t3358 - 0.259155*t3378 - 0.657905*t3412)*var2[19] + (t3263 - 0.657905*t3273 - 0.259155*t3291)*var2[20];
  p_output1[1]=(-0.259155*t4012 - 0.657905*t4024 + t4043)*var2[3] + (-0.259155*t3972 - 0.657905*t3982 + t4002)*var2[4] + (-0.259155*t4272 - 0.657905*t4330 + t4363)*var2[5] + (-0.259155*t4557 - 0.657905*t4585 + t4609)*var2[17] + (t5068 - 0.259155*t5086 - 0.657905*t5117)*var2[18] + (t4857 - 0.259155*t4874 - 0.657905*t4888)*var2[19] + (t4735 - 0.657905*t4749 - 0.259155*t4772)*var2[20];
  p_output1[2]=(-0.259155*t6256 - 0.657905*t6279 + t6311)*var2[4] + (-0.259155*t5576 - 0.657905*t5585 + t5628)*var2[5] + (-0.259155*t5348 - 0.657905*t5368 + t5396)*var2[17] + (t6077 - 0.259155*t6096 - 0.657905*t6110)*var2[18] + (t5885 - 0.259155*t5907 - 0.657905*t5933)*var2[19] + (t5739 - 0.657905*t5747 - 0.259155*t5756)*var2[20];
  p_output1[3]=0;
  p_output1[4]=(0.259155*t3800 + 0.657905*t3817 + t3841)*var2[3] + (0.259155*t2118 + 0.657905*t2198 + t2334)*var2[4] + (0.259155*t2688 + 0.657905*t2741 + t2787)*var2[5] + (0.259155*t3062 + 0.657905*t3100 + t3108)*var2[17] + (t3592 + 0.259155*t3601 + 0.657905*t3611)*var2[18] + (t3358 + 0.259155*t3378 + 0.657905*t3412)*var2[19] + (t3263 + 0.657905*t3273 + 0.259155*t3291)*var2[20];
  p_output1[5]=(0.259155*t4012 + 0.657905*t4024 + t4043)*var2[3] + (0.259155*t3972 + 0.657905*t3982 + t4002)*var2[4] + (0.259155*t4272 + 0.657905*t4330 + t4363)*var2[5] + (0.259155*t4557 + 0.657905*t4585 + t4609)*var2[17] + (t5068 + 0.259155*t5086 + 0.657905*t5117)*var2[18] + (t4857 + 0.259155*t4874 + 0.657905*t4888)*var2[19] + (t4735 + 0.657905*t4749 + 0.259155*t4772)*var2[20];
  p_output1[6]=(0.259155*t6256 + 0.657905*t6279 + t6311)*var2[4] + (0.259155*t5576 + 0.657905*t5585 + t5628)*var2[5] + (0.259155*t5348 + 0.657905*t5368 + t5396)*var2[17] + (t6077 + 0.259155*t6096 + 0.657905*t6110)*var2[18] + (t5885 + 0.259155*t5907 + 0.657905*t5933)*var2[19] + (t5739 + 0.657905*t5747 + 0.259155*t5756)*var2[20];
  p_output1[7]=0;
  p_output1[8]=(0.930418*t3800 - 0.366501*t3817)*var2[3] + (0.930418*t2118 - 0.366501*t2198)*var2[4] + (0.930418*t2688 - 0.366501*t2741)*var2[5] + (0.930418*t3062 - 0.366501*t3100)*var2[17] + (0.930418*t3601 - 0.366501*t3611)*var2[18] + (0.930418*t3378 - 0.366501*t3412)*var2[19] + (-0.366501*t3273 + 0.930418*t3291)*var2[20];
  p_output1[9]=(0.930418*t4012 - 0.366501*t4024)*var2[3] + (0.930418*t3972 - 0.366501*t3982)*var2[4] + (0.930418*t4272 - 0.366501*t4330)*var2[5] + (0.930418*t4557 - 0.366501*t4585)*var2[17] + (0.930418*t5086 - 0.366501*t5117)*var2[18] + (0.930418*t4874 - 0.366501*t4888)*var2[19] + (-0.366501*t4749 + 0.930418*t4772)*var2[20];
  p_output1[10]=(0.930418*t6256 - 0.366501*t6279)*var2[4] + (0.930418*t5576 - 0.366501*t5585)*var2[5] + (0.930418*t5348 - 0.366501*t5368)*var2[17] + (0.930418*t6096 - 0.366501*t6110)*var2[18] + (0.930418*t5907 - 0.366501*t5933)*var2[19] + (-0.366501*t5747 + 0.930418*t5756)*var2[20];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (-0.197083*t3800 - 0.274521*t3817 - 0.010507*t3840 + t3676*t7002 + t3693*t7029 + t3699*t7046 + t3709*t7053 + t3714*t7089 + t3729*t7102 + t3763*t7115 + t3768*t7121 + t3784*t7147 + t3791*t7170 - 1.*t2393*t7012*t903)*var2[3] + (-0.197083*t2118 - 0.274521*t2198 - 0.010507*t2319 + t1080*t7046 + t1294*t7053 + t1329*t7089 + t1510*t7102 + t1705*t7115 + t1741*t7121 + t1982*t7147 + t2094*t7170 - 1.*t133*t7012*t837 + t1075*t133*t7029*t903 + t133*t7002*t903*t932)*var2[4] + (-0.197083*t2688 - 0.274521*t2741 - 0.010507*t2773 + t2442*t7002 + t2425*t7029 + t2500*t7046 + t2470*t7053 + t2559*t7089 + t2505*t7102 + t2594*t7115 + t2605*t7121 + t2618*t7147 + t2662*t7170)*var2[5] + (-0.091*t1040*t2425 - 0.197083*t3062 - 0.274521*t3100 - 0.010507*t3105 + t2889*t7046 + t2860*t7053 + t2946*t7089 + t2911*t7102 + t2963*t7115 + t2971*t7121 + t3004*t7147 + t3052*t7170 - 0.091*t2849*t960)*var2[17] + (-0.010507*t3591 - 0.197083*t3601 - 0.274521*t3611 + t3502*t7089 + t3535*t7102 + t3451*t7115 + t3584*t7121 + t3562*t7147 + t3543*t7170 + t2860*t7523 + t3123*t7535 + t133*t7510*t903)*var2[18] + (-0.010507*t3357 - 0.197083*t3378 - 0.274521*t3412 + t3353*t7121 + t3318*t7147 + t3328*t7170 + t3150*t7431 + t3182*t7453 + t3213*t7472)*var2[19] + (-0.010507*t3260 - 0.274521*t3273 - 0.197083*t3291 + t3222*t7293 + t3244*t7327 + t3254*t7351)*var2[20];
  p_output1[13]=var2[1] + (-0.197083*t4012 - 0.274521*t4024 - 0.010507*t4041 + t2425*t7002 + t2849*t7029 + t2860*t7046 + t3123*t7053 + t3150*t7089 + t3182*t7102 + t3213*t7115 + t3222*t7121 + t3244*t7147 + t3254*t7170 + t133*t7012*t903)*var2[3] + (-0.197083*t3972 - 0.274521*t3982 - 0.010507*t3996 + t3859*t7046 + t3878*t7053 + t3881*t7089 + t3894*t7102 + t3927*t7115 + t3931*t7121 + t3951*t7147 + t3958*t7170 - 1.*t2393*t7012*t837 + t1075*t2393*t7029*t903 + t2393*t7002*t903*t932)*var2[4] + (-0.197083*t4272 - 0.274521*t4330 - 0.010507*t4361 + t3693*t7002 + t4106*t7029 + t4145*t7046 + t4119*t7053 + t4185*t7089 + t4174*t7102 + t4205*t7115 + t4225*t7121 + t4240*t7147 + t4263*t7170)*var2[5] + (-0.091*t1040*t4106 - 0.197083*t4557 - 0.274521*t4585 - 0.010507*t4608 + t4427*t7046 + t4412*t7053 + t4450*t7089 + t4434*t7102 + t4485*t7115 + t4493*t7121 + t4519*t7147 + t4549*t7170 - 0.091*t4391*t960)*var2[17] + (-0.010507*t5066 - 0.197083*t5086 - 0.274521*t5117 + t4964*t7089 + t4992*t7102 + t4935*t7115 + t5051*t7121 + t5033*t7147 + t5012*t7170 + t4412*t7523 + t4623*t7535 + t2393*t7510*t903)*var2[18] + (-0.010507*t4852 - 0.197083*t4874 - 0.274521*t4888 + t4847*t7121 + t4808*t7147 + t4835*t7170 + t4633*t7431 + t4651*t7453 + t4662*t7472)*var2[19] + (-0.010507*t4734 - 0.274521*t4749 - 0.197083*t4772 + t4669*t7293 + t4689*t7327 + t4717*t7351)*var2[20];
  p_output1[14]=var2[2] + (-0.197083*t6256 - 0.274521*t6279 - 0.010507*t6310 + t6122*t7046 + t6140*t7053 + t6147*t7089 + t6160*t7102 + t6185*t7115 + t6200*t7121 + t6210*t7147 + t6249*t7170 - 1.*t1075*t7029*t837 - 1.*t7012*t903 - 1.*t7002*t837*t932)*var2[4] + (-0.197083*t5576 - 0.274521*t5585 - 0.010507*t5611 + t5456*t7046 + t5419*t7053 + t5493*t7089 + t5458*t7102 + t5511*t7115 + t5526*t7121 + t5551*t7147 + t5570*t7170 - 1.*t1075*t7002*t903 + t7029*t903*t932)*var2[5] + (-0.197083*t5348 - 0.274521*t5368 - 0.010507*t5386 + t5167*t7046 + t5150*t7053 + t5226*t7089 + t5192*t7102 + t5263*t7115 + t5269*t7121 + t5304*t7147 + t5336*t7170 - 0.091*t1040*t903*t932 - 0.091*t1075*t903*t960)*var2[17] + (-0.010507*t6076 - 0.197083*t6096 - 0.274521*t6110 + t6001*t7089 + t6023*t7102 + t5982*t7115 + t6067*t7121 + t6051*t7147 + t6028*t7170 + t5150*t7523 + t5456*t7535 - 1.*t7510*t837)*var2[18] + (-0.010507*t5882 - 0.197083*t5907 - 0.274521*t5933 + t5861*t7121 + t5809*t7147 + t5841*t7170 + t5655*t7431 + t5674*t7453 + t5706*t7472)*var2[19] + (-0.010507*t5738 - 0.274521*t5747 - 0.197083*t5756 + t5711*t7293 + t5724*t7327 + t5733*t7351)*var2[20];
  p_output1[15]=0;
}



void dT_right_knee_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
