/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:35:51 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "R_toe_pitch_joint_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1303;
  double t1234;
  double t1306;
  double t1254;
  double t1330;
  double t1114;
  double t1119;
  double t1148;
  double t1165;
  double t1380;
  double t1390;
  double t1527;
  double t1302;
  double t1336;
  double t1348;
  double t1557;
  double t875;
  double t954;
  double t1040;
  double t1370;
  double t1560;
  double t1562;
  double t1646;
  double t1658;
  double t1700;
  double t1730;
  double t1737;
  double t1980;
  double t1998;
  double t2022;
  double t2026;
  double t2027;
  double t2031;
  double t2044;
  double t2112;
  double t2113;
  double t2116;
  double t1593;
  double t1607;
  double t1616;
  double t1725;
  double t1761;
  double t1772;
  double t1773;
  double t1789;
  double t2117;
  double t1840;
  double t1867;
  double t1873;
  double t1882;
  double t1884;
  double t1888;
  double t1897;
  double t1936;
  double t211;
  double t297;
  double t325;
  double t44;
  double t1790;
  double t1823;
  double t1839;
  double t1961;
  double t2131;
  double t2133;
  double t2141;
  double t2165;
  double t2175;
  double t2223;
  double t2227;
  double t2229;
  double t2231;
  double t2235;
  double t2237;
  double t2260;
  double t2261;
  double t2262;
  double t2274;
  double t2284;
  double t2293;
  double t2294;
  double t2308;
  double t2362;
  double t2366;
  double t2377;
  double t2383;
  double t2477;
  double t2478;
  double t2484;
  double t2169;
  double t2177;
  double t2194;
  double t2275;
  double t2278;
  double t2281;
  double t2397;
  double t2398;
  double t2431;
  double t2446;
  double t2449;
  double t2460;
  double t2465;
  double t2467;
  double t2468;
  double t2472;
  double t2488;
  double t2492;
  double t2494;
  double t2496;
  double t2498;
  double t2501;
  double t2507;
  double t2509;
  double t2513;
  double t2514;
  double t2529;
  double t2532;
  double t2537;
  double t7;
  double t54;
  double t78;
  double t2402;
  double t2410;
  double t2427;
  double t2473;
  double t2486;
  double t2487;
  double t2520;
  double t2523;
  double t2546;
  double t2560;
  double t2563;
  double t2566;
  double t2573;
  double t2574;
  double t2575;
  double t2578;
  double t2593;
  double t2595;
  double t2598;
  double t2603;
  double t2605;
  double t2611;
  double t2614;
  double t2615;
  double t16;
  double t37;
  double t2704;
  double t2705;
  double t2710;
  double t2691;
  double t2692;
  double t2696;
  double t2698;
  double t2713;
  double t2714;
  double t2727;
  double t2728;
  double t2730;
  double t2774;
  double t2780;
  double t2781;
  double t2787;
  double t2724;
  double t2732;
  double t2733;
  double t2734;
  double t2742;
  double t2743;
  double t2766;
  double t2771;
  double t2737;
  double t2772;
  double t2791;
  double t2793;
  double t2797;
  double t2806;
  double t2808;
  double t2809;
  double t2815;
  double t2822;
  double t2823;
  double t2827;
  double t2795;
  double t2814;
  double t2831;
  double t2848;
  double t2864;
  double t2866;
  double t2871;
  double t2872;
  double t2878;
  double t2880;
  double t2882;
  double t2883;
  double t2588;
  double t2590;
  double t2622;
  double t2626;
  double t2854;
  double t2877;
  double t2890;
  double t2891;
  double t2629;
  double t2630;
  double t2895;
  double t2897;
  double t2900;
  double t2901;
  double t2903;
  double t2904;
  double t2909;
  double t2912;
  double t2643;
  double t2646;
  double t2661;
  double t2664;
  double t2671;
  double t2679;
  double t2974;
  double t2975;
  double t2980;
  double t2985;
  double t2988;
  double t2991;
  double t3010;
  double t3011;
  double t3014;
  double t3023;
  double t2982;
  double t2994;
  double t2995;
  double t2997;
  double t3003;
  double t3006;
  double t3007;
  double t3008;
  double t3002;
  double t3009;
  double t3027;
  double t3029;
  double t3031;
  double t3032;
  double t3033;
  double t3035;
  double t3038;
  double t3039;
  double t3043;
  double t3044;
  double t3030;
  double t3036;
  double t3045;
  double t3052;
  double t3055;
  double t3056;
  double t3057;
  double t3060;
  double t3063;
  double t3066;
  double t3067;
  double t3069;
  double t3054;
  double t3061;
  double t3072;
  double t3073;
  double t3080;
  double t3083;
  double t3090;
  double t3100;
  double t3104;
  double t3111;
  double t3112;
  double t3114;
  double t2526;
  double t2586;
  double t2616;
  double t2619;
  double t2628;
  double t2634;
  double t2636;
  double t2638;
  double t2653;
  double t2668;
  double t2680;
  double t2685;
  double t2893;
  double t2902;
  double t2914;
  double t2916;
  double t2925;
  double t2928;
  double t2930;
  double t2936;
  double t2946;
  double t2956;
  double t2957;
  double t2960;
  double t3077;
  double t3103;
  double t3116;
  double t3118;
  double t3132;
  double t3137;
  double t3140;
  double t3146;
  double t3156;
  double t3157;
  double t3162;
  double t3165;
  t1303 = Cos(var1[3]);
  t1234 = Cos(var1[5]);
  t1306 = Sin(var1[4]);
  t1254 = Sin(var1[3]);
  t1330 = Sin(var1[5]);
  t1114 = Cos(var1[7]);
  t1119 = -1.*t1114;
  t1148 = 1. + t1119;
  t1165 = Cos(var1[6]);
  t1380 = t1303*t1234*t1306;
  t1390 = t1254*t1330;
  t1527 = t1380 + t1390;
  t1302 = -1.*t1234*t1254;
  t1336 = t1303*t1306*t1330;
  t1348 = t1302 + t1336;
  t1557 = Sin(var1[6]);
  t875 = Cos(var1[8]);
  t954 = -1.*t875;
  t1040 = 1. + t954;
  t1370 = t1165*t1348;
  t1560 = -1.*t1527*t1557;
  t1562 = t1370 + t1560;
  t1646 = t1165*t1527;
  t1658 = t1348*t1557;
  t1700 = t1646 + t1658;
  t1730 = Cos(var1[4]);
  t1737 = Sin(var1[7]);
  t1980 = -1.000000637725*t1148;
  t1998 = 1. + t1980;
  t2022 = t1303*t1730*t1998;
  t2026 = -0.930418*t1737;
  t2027 = 0. + t2026;
  t2031 = t1562*t2027;
  t2044 = -0.366501*t1737;
  t2112 = 0. + t2044;
  t2113 = t1700*t2112;
  t2116 = t2022 + t2031 + t2113;
  t1593 = -0.340999127418*t1148*t1562;
  t1607 = -0.134322983001*t1148;
  t1616 = 1. + t1607;
  t1725 = t1616*t1700;
  t1761 = 0.366501*t1737;
  t1772 = 0. + t1761;
  t1773 = t1303*t1730*t1772;
  t1789 = t1593 + t1725 + t1773;
  t2117 = Sin(var1[8]);
  t1840 = -0.8656776547239999*t1148;
  t1867 = 1. + t1840;
  t1873 = t1867*t1562;
  t1882 = -0.340999127418*t1148*t1700;
  t1884 = 0.930418*t1737;
  t1888 = 0. + t1884;
  t1897 = t1303*t1730*t1888;
  t1936 = t1873 + t1882 + t1897;
  t211 = Cos(var1[9]);
  t297 = -1.*t211;
  t325 = 1. + t297;
  t44 = Sin(var1[10]);
  t1790 = 0.340999127418*t1040*t1789;
  t1823 = -0.134322983001*t1040;
  t1839 = 1. + t1823;
  t1961 = t1839*t1936;
  t2131 = -0.366501*t2117;
  t2133 = 0. + t2131;
  t2141 = t2116*t2133;
  t2165 = t1790 + t1961 + t2141;
  t2175 = Sin(var1[9]);
  t2223 = -1.000000637725*t1040;
  t2227 = 1. + t2223;
  t2229 = t2227*t2116;
  t2231 = -0.930418*t2117;
  t2235 = 0. + t2231;
  t2237 = t1789*t2235;
  t2260 = 0.366501*t2117;
  t2261 = 0. + t2260;
  t2262 = t1936*t2261;
  t2274 = t2229 + t2237 + t2262;
  t2284 = -0.8656776547239999*t1040;
  t2293 = 1. + t2284;
  t2294 = t2293*t1789;
  t2308 = 0.340999127418*t1040*t1936;
  t2362 = 0.930418*t2117;
  t2366 = 0. + t2362;
  t2377 = t2116*t2366;
  t2383 = t2294 + t2308 + t2377;
  t2477 = Cos(var1[10]);
  t2478 = -1.*t2477;
  t2484 = 1. + t2478;
  t2169 = 0.340999127418*t325*t2165;
  t2177 = -0.930418*t2175;
  t2194 = 0. + t2177;
  t2275 = t2194*t2274;
  t2278 = -0.8656776547239999*t325;
  t2281 = 1. + t2278;
  t2397 = t2281*t2383;
  t2398 = t2169 + t2275 + t2397;
  t2431 = -0.134322983001*t325;
  t2446 = 1. + t2431;
  t2449 = t2446*t2165;
  t2460 = 0.366501*t2175;
  t2465 = 0. + t2460;
  t2467 = t2465*t2274;
  t2468 = 0.340999127418*t325*t2383;
  t2472 = t2449 + t2467 + t2468;
  t2488 = -0.366501*t2175;
  t2492 = 0. + t2488;
  t2494 = t2492*t2165;
  t2496 = -1.000000637725*t325;
  t2498 = 1. + t2496;
  t2501 = t2498*t2274;
  t2507 = 0.930418*t2175;
  t2509 = 0. + t2507;
  t2513 = t2509*t2383;
  t2514 = t2494 + t2501 + t2513;
  t2529 = Cos(var1[11]);
  t2532 = -1.*t2529;
  t2537 = 1. + t2532;
  t7 = Sin(var1[11]);
  t54 = 0.930418*t44;
  t78 = 0. + t54;
  t2402 = t78*t2398;
  t2410 = -0.366501*t44;
  t2427 = 0. + t2410;
  t2473 = t2427*t2472;
  t2486 = -1.000000637725*t2484;
  t2487 = 1. + t2486;
  t2520 = t2487*t2514;
  t2523 = t2402 + t2473 + t2520;
  t2546 = -0.8656776547239999*t2484;
  t2560 = 1. + t2546;
  t2563 = t2560*t2398;
  t2566 = 0.340999127418*t2484*t2472;
  t2573 = -0.930418*t44;
  t2574 = 0. + t2573;
  t2575 = t2574*t2514;
  t2578 = t2563 + t2566 + t2575;
  t2593 = 0.340999127418*t2484*t2398;
  t2595 = -0.134322983001*t2484;
  t2598 = 1. + t2595;
  t2603 = t2598*t2472;
  t2605 = 0.366501*t44;
  t2611 = 0. + t2605;
  t2614 = t2611*t2514;
  t2615 = t2593 + t2603 + t2614;
  t16 = 0.366501*t7;
  t37 = 0. + t16;
  t2704 = t1234*t1254*t1306;
  t2705 = -1.*t1303*t1330;
  t2710 = t2704 + t2705;
  t2691 = t1303*t1234;
  t2692 = t1254*t1306*t1330;
  t2696 = t2691 + t2692;
  t2698 = t1165*t2696;
  t2713 = -1.*t2710*t1557;
  t2714 = t2698 + t2713;
  t2727 = t1165*t2710;
  t2728 = t2696*t1557;
  t2730 = t2727 + t2728;
  t2774 = t1730*t1998*t1254;
  t2780 = t2714*t2027;
  t2781 = t2730*t2112;
  t2787 = t2774 + t2780 + t2781;
  t2724 = -0.340999127418*t1148*t2714;
  t2732 = t1616*t2730;
  t2733 = t1730*t1254*t1772;
  t2734 = t2724 + t2732 + t2733;
  t2742 = t1867*t2714;
  t2743 = -0.340999127418*t1148*t2730;
  t2766 = t1730*t1254*t1888;
  t2771 = t2742 + t2743 + t2766;
  t2737 = 0.340999127418*t1040*t2734;
  t2772 = t1839*t2771;
  t2791 = t2787*t2133;
  t2793 = t2737 + t2772 + t2791;
  t2797 = t2227*t2787;
  t2806 = t2734*t2235;
  t2808 = t2771*t2261;
  t2809 = t2797 + t2806 + t2808;
  t2815 = t2293*t2734;
  t2822 = 0.340999127418*t1040*t2771;
  t2823 = t2787*t2366;
  t2827 = t2815 + t2822 + t2823;
  t2795 = 0.340999127418*t325*t2793;
  t2814 = t2194*t2809;
  t2831 = t2281*t2827;
  t2848 = t2795 + t2814 + t2831;
  t2864 = t2446*t2793;
  t2866 = t2465*t2809;
  t2871 = 0.340999127418*t325*t2827;
  t2872 = t2864 + t2866 + t2871;
  t2878 = t2492*t2793;
  t2880 = t2498*t2809;
  t2882 = t2509*t2827;
  t2883 = t2878 + t2880 + t2882;
  t2588 = -0.134322983001*t2537;
  t2590 = 1. + t2588;
  t2622 = -0.930418*t7;
  t2626 = 0. + t2622;
  t2854 = t78*t2848;
  t2877 = t2427*t2872;
  t2890 = t2487*t2883;
  t2891 = t2854 + t2877 + t2890;
  t2629 = -0.8656776547239999*t2537;
  t2630 = 1. + t2629;
  t2895 = t2560*t2848;
  t2897 = 0.340999127418*t2484*t2872;
  t2900 = t2574*t2883;
  t2901 = t2895 + t2897 + t2900;
  t2903 = 0.340999127418*t2484*t2848;
  t2904 = t2598*t2872;
  t2909 = t2611*t2883;
  t2912 = t2903 + t2904 + t2909;
  t2643 = -1.000000637725*t2537;
  t2646 = 1. + t2643;
  t2661 = 0.930418*t7;
  t2664 = 0. + t2661;
  t2671 = -0.366501*t7;
  t2679 = 0. + t2671;
  t2974 = t1730*t1165*t1330;
  t2975 = -1.*t1730*t1234*t1557;
  t2980 = t2974 + t2975;
  t2985 = t1730*t1234*t1165;
  t2988 = t1730*t1330*t1557;
  t2991 = t2985 + t2988;
  t3010 = -1.*t1998*t1306;
  t3011 = t2980*t2027;
  t3014 = t2991*t2112;
  t3023 = t3010 + t3011 + t3014;
  t2982 = -0.340999127418*t1148*t2980;
  t2994 = t1616*t2991;
  t2995 = -1.*t1306*t1772;
  t2997 = t2982 + t2994 + t2995;
  t3003 = t1867*t2980;
  t3006 = -0.340999127418*t1148*t2991;
  t3007 = -1.*t1306*t1888;
  t3008 = t3003 + t3006 + t3007;
  t3002 = 0.340999127418*t1040*t2997;
  t3009 = t1839*t3008;
  t3027 = t3023*t2133;
  t3029 = t3002 + t3009 + t3027;
  t3031 = t2227*t3023;
  t3032 = t2997*t2235;
  t3033 = t3008*t2261;
  t3035 = t3031 + t3032 + t3033;
  t3038 = t2293*t2997;
  t3039 = 0.340999127418*t1040*t3008;
  t3043 = t3023*t2366;
  t3044 = t3038 + t3039 + t3043;
  t3030 = 0.340999127418*t325*t3029;
  t3036 = t2194*t3035;
  t3045 = t2281*t3044;
  t3052 = t3030 + t3036 + t3045;
  t3055 = t2446*t3029;
  t3056 = t2465*t3035;
  t3057 = 0.340999127418*t325*t3044;
  t3060 = t3055 + t3056 + t3057;
  t3063 = t2492*t3029;
  t3066 = t2498*t3035;
  t3067 = t2509*t3044;
  t3069 = t3063 + t3066 + t3067;
  t3054 = t78*t3052;
  t3061 = t2427*t3060;
  t3072 = t2487*t3069;
  t3073 = t3054 + t3061 + t3072;
  t3080 = t2560*t3052;
  t3083 = 0.340999127418*t2484*t3060;
  t3090 = t2574*t3069;
  t3100 = t3080 + t3083 + t3090;
  t3104 = 0.340999127418*t2484*t3052;
  t3111 = t2598*t3060;
  t3112 = t2611*t3069;
  t3114 = t3104 + t3111 + t3112;
  t2526 = t37*t2523;
  t2586 = 0.340999127418*t2537*t2578;
  t2616 = t2590*t2615;
  t2619 = t2526 + t2586 + t2616;
  t2628 = t2626*t2523;
  t2634 = t2630*t2578;
  t2636 = 0.340999127418*t2537*t2615;
  t2638 = t2628 + t2634 + t2636;
  t2653 = t2646*t2523;
  t2668 = t2664*t2578;
  t2680 = t2679*t2615;
  t2685 = t2653 + t2668 + t2680;
  t2893 = t37*t2891;
  t2902 = 0.340999127418*t2537*t2901;
  t2914 = t2590*t2912;
  t2916 = t2893 + t2902 + t2914;
  t2925 = t2626*t2891;
  t2928 = t2630*t2901;
  t2930 = 0.340999127418*t2537*t2912;
  t2936 = t2925 + t2928 + t2930;
  t2946 = t2646*t2891;
  t2956 = t2664*t2901;
  t2957 = t2679*t2912;
  t2960 = t2946 + t2956 + t2957;
  t3077 = t37*t3073;
  t3103 = 0.340999127418*t2537*t3100;
  t3116 = t2590*t3114;
  t3118 = t3077 + t3103 + t3116;
  t3132 = t2626*t3073;
  t3137 = t2630*t3100;
  t3140 = 0.340999127418*t2537*t3114;
  t3146 = t3132 + t3137 + t3140;
  t3156 = t2646*t3073;
  t3157 = t2664*t3100;
  t3162 = t2679*t3114;
  t3165 = t3156 + t3157 + t3162;
  p_output1[0]=-0.218018*t2619 + 0.553471*t2638 + 0.803828*t2685;
  p_output1[1]=-0.218018*t2916 + 0.553471*t2936 + 0.803828*t2960;
  p_output1[2]=-0.218018*t3118 + 0.553471*t3146 + 0.803828*t3165;
  p_output1[3]=-0.294604*t2619 + 0.747896*t2638 - 0.594863*t2685;
  p_output1[4]=-0.294604*t2916 + 0.747896*t2936 - 0.594863*t2960;
  p_output1[5]=-0.294604*t3118 + 0.747896*t3146 - 0.594863*t3165;
  p_output1[6]=-0.930418*t2619 - 0.366501*t2638;
  p_output1[7]=-0.930418*t2916 - 0.366501*t2936;
  p_output1[8]=-0.930418*t3118 - 0.366501*t3146;
}



void R_toe_pitch_joint_left_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
