/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:12:13 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "p_right_toe_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t273;
  double t61;
  double t930;
  double t1127;
  double t1099;
  double t1137;
  double t131;
  double t150;
  double t209;
  double t764;
  double t1122;
  double t1154;
  double t1177;
  double t1245;
  double t1309;
  double t1311;
  double t1399;
  double t111;
  double t1855;
  double t1879;
  double t1632;
  double t1636;
  double t1776;
  double t2040;
  double t2043;
  double t2108;
  double t2205;
  double t2236;
  double t2243;
  double t2285;
  double t1519;
  double t1524;
  double t282;
  double t293;
  double t463;
  double t549;
  double t3508;
  double t3304;
  double t3313;
  double t2592;
  double t2603;
  double t2641;
  double t2808;
  double t2809;
  double t2840;
  double t3293;
  double t3294;
  double t3065;
  double t3083;
  double t3106;
  double t3186;
  double t3200;
  double t3203;
  double t3392;
  double t3396;
  double t3400;
  double t3404;
  double t3412;
  double t3421;
  double t3443;
  double t3461;
  double t3466;
  double t2522;
  double t2524;
  double t2880;
  double t2921;
  double t4132;
  double t4147;
  double t3599;
  double t3615;
  double t3625;
  double t3643;
  double t3662;
  double t3709;
  double t3871;
  double t3892;
  double t3919;
  double t3965;
  double t4003;
  double t4025;
  double t4178;
  double t4190;
  double t4214;
  double t4216;
  double t4221;
  double t4288;
  double t4320;
  double t4323;
  double t4328;
  double t4354;
  double t3779;
  double t3832;
  double t3509;
  double t3517;
  double t3553;
  double t3566;
  double t4998;
  double t4798;
  double t4812;
  double t4413;
  double t4418;
  double t4428;
  double t4439;
  double t4455;
  double t4522;
  double t4776;
  double t4794;
  double t4673;
  double t4675;
  double t4686;
  double t4714;
  double t4730;
  double t4736;
  double t4832;
  double t4838;
  double t4846;
  double t4848;
  double t4854;
  double t4859;
  double t4897;
  double t4922;
  double t4977;
  double t4356;
  double t4368;
  double t4605;
  double t4616;
  double t5318;
  double t5322;
  double t5081;
  double t5085;
  double t5093;
  double t5097;
  double t5109;
  double t5117;
  double t5186;
  double t5212;
  double t5216;
  double t5233;
  double t5249;
  double t5266;
  double t5329;
  double t5333;
  double t5337;
  double t5342;
  double t5349;
  double t5354;
  double t5136;
  double t5150;
  double t5019;
  double t5022;
  double t5002;
  double t5003;
  double t229;
  double t353;
  double t557;
  double t594;
  double t817;
  double t825;
  double t1268;
  double t1277;
  double t1288;
  double t1296;
  double t1494;
  double t1518;
  double t1595;
  double t1629;
  double t5480;
  double t5484;
  double t5490;
  double t5505;
  double t5511;
  double t5524;
  double t1837;
  double t1849;
  double t1898;
  double t1997;
  double t2190;
  double t2263;
  double t2586;
  double t2587;
  double t5530;
  double t5535;
  double t5536;
  double t5593;
  double t5599;
  double t5600;
  double t2851;
  double t2855;
  double t2989;
  double t3028;
  double t3260;
  double t3301;
  double t3325;
  double t3387;
  double t3506;
  double t3551;
  double t3567;
  double t3572;
  double t5612;
  double t5627;
  double t5631;
  double t5636;
  double t5639;
  double t5657;
  double t5663;
  double t5670;
  double t5680;
  double t5688;
  double t5692;
  double t5693;
  double t3714;
  double t3748;
  double t3848;
  double t3850;
  double t4088;
  double t4089;
  double t4166;
  double t4173;
  double t4319;
  double t4346;
  double t4386;
  double t4395;
  double t5702;
  double t5706;
  double t5708;
  double t5723;
  double t5734;
  double t5736;
  double t5740;
  double t5741;
  double t5743;
  double t5744;
  double t5748;
  double t5750;
  double t4581;
  double t4598;
  double t4629;
  double t4665;
  double t4769;
  double t4795;
  double t4821;
  double t4828;
  double t4979;
  double t5006;
  double t5023;
  double t5024;
  double t5754;
  double t5760;
  double t5762;
  double t5766;
  double t5799;
  double t5807;
  double t5822;
  double t5823;
  double t5828;
  double t5831;
  double t5833;
  double t5835;
  double t5131;
  double t5134;
  double t5159;
  double t5169;
  double t5289;
  double t5297;
  double t5323;
  double t5328;
  double t5851;
  double t5853;
  double t5855;
  double t5867;
  double t5879;
  double t5883;
  double t5901;
  double t5904;
  double t5367;
  double t5390;
  double t5907;
  double t5910;
  double t5913;
  double t5914;
  double t5418;
  double t5421;
  double t5433;
  double t5434;
  double t6034;
  double t6037;
  double t6041;
  double t6049;
  double t6056;
  double t6057;
  double t6062;
  double t6063;
  double t6064;
  double t6065;
  double t6068;
  double t6069;
  double t6074;
  double t6075;
  double t6086;
  double t6092;
  double t6094;
  double t6107;
  double t6121;
  double t6130;
  double t6139;
  double t6147;
  double t6152;
  double t6158;
  double t6162;
  double t6163;
  double t6168;
  double t6173;
  double t6176;
  double t6180;
  double t6202;
  double t6214;
  double t6222;
  double t6228;
  double t6232;
  double t6238;
  double t6239;
  double t6242;
  double t6246;
  double t6247;
  double t6248;
  double t6255;
  double t6260;
  double t6262;
  double t6265;
  double t6268;
  double t6271;
  double t6279;
  double t6282;
  double t6283;
  double t6288;
  double t6290;
  double t6291;
  double t6292;
  t273 = Sin(var1[18]);
  t61 = Cos(var1[3]);
  t930 = Cos(var1[5]);
  t1127 = Sin(var1[3]);
  t1099 = Sin(var1[4]);
  t1137 = Sin(var1[5]);
  t131 = Cos(var1[18]);
  t150 = -1.*t131;
  t209 = 1. + t150;
  t764 = Sin(var1[17]);
  t1122 = t61*t930*t1099;
  t1154 = t1127*t1137;
  t1177 = t1122 + t1154;
  t1245 = Cos(var1[17]);
  t1309 = -1.*t930*t1127;
  t1311 = t61*t1099*t1137;
  t1399 = t1309 + t1311;
  t111 = Cos(var1[4]);
  t1855 = -0.366501*t273;
  t1879 = 0. + t1855;
  t1632 = -1.*t764*t1177;
  t1636 = t1245*t1399;
  t1776 = t1632 + t1636;
  t2040 = t1245*t1177;
  t2043 = t764*t1399;
  t2108 = t2040 + t2043;
  t2205 = Cos(var1[19]);
  t2236 = -1.*t2205;
  t2243 = 1. + t2236;
  t2285 = Sin(var1[19]);
  t1519 = 0.930418*t273;
  t1524 = 0. + t1519;
  t282 = -0.930418*t273;
  t293 = 0. + t282;
  t463 = 0.366501*t273;
  t549 = 0. + t463;
  t3508 = Sin(var1[20]);
  t3304 = 0.930418*t2285;
  t3313 = 0. + t3304;
  t2592 = t61*t111*t1879;
  t2603 = 0.340999127418*t209*t1776;
  t2641 = -0.134322983001*t209;
  t2808 = 1. + t2641;
  t2809 = t2808*t2108;
  t2840 = t2592 + t2603 + t2809;
  t3293 = 0.366501*t2285;
  t3294 = 0. + t3293;
  t3065 = t61*t111*t1524;
  t3083 = -0.8656776547239999*t209;
  t3106 = 1. + t3083;
  t3186 = t3106*t1776;
  t3200 = 0.340999127418*t209*t2108;
  t3203 = t3065 + t3186 + t3200;
  t3392 = -1.000000637725*t209;
  t3396 = 1. + t3392;
  t3400 = t3396*t61*t111;
  t3404 = t293*t1776;
  t3412 = t549*t2108;
  t3421 = t3400 + t3404 + t3412;
  t3443 = Cos(var1[20]);
  t3461 = -1.*t3443;
  t3466 = 1. + t3461;
  t2522 = -0.930418*t2285;
  t2524 = 0. + t2522;
  t2880 = -0.366501*t2285;
  t2921 = 0. + t2880;
  t4132 = 0.366501*t3508;
  t4147 = 0. + t4132;
  t3599 = t3313*t2840;
  t3615 = t3294*t3203;
  t3625 = -1.000000637725*t2243;
  t3643 = 1. + t3625;
  t3662 = t3643*t3421;
  t3709 = t3599 + t3615 + t3662;
  t3871 = -0.8656776547239999*t2243;
  t3892 = 1. + t3871;
  t3919 = t3892*t2840;
  t3965 = -0.340999127418*t2243*t3203;
  t4003 = t2524*t3421;
  t4025 = t3919 + t3965 + t4003;
  t4178 = -0.340999127418*t2243*t2840;
  t4190 = -0.134322983001*t2243;
  t4214 = 1. + t4190;
  t4216 = t4214*t3203;
  t4221 = t2921*t3421;
  t4288 = t4178 + t4216 + t4221;
  t4320 = Cos(var1[21]);
  t4323 = -1.*t4320;
  t4328 = 1. + t4323;
  t4354 = Sin(var1[21]);
  t3779 = 0.930418*t3508;
  t3832 = 0. + t3779;
  t3509 = -0.930418*t3508;
  t3517 = 0. + t3509;
  t3553 = -0.366501*t3508;
  t3566 = 0. + t3553;
  t4998 = Sin(var1[22]);
  t4798 = -0.366501*t4354;
  t4812 = 0. + t4798;
  t4413 = t4147*t3709;
  t4418 = -0.340999127418*t3466*t4025;
  t4428 = -0.134322983001*t3466;
  t4439 = 1. + t4428;
  t4455 = t4439*t4288;
  t4522 = t4413 + t4418 + t4455;
  t4776 = -0.930418*t4354;
  t4794 = 0. + t4776;
  t4673 = t3832*t3709;
  t4675 = -0.8656776547239999*t3466;
  t4686 = 1. + t4675;
  t4714 = t4686*t4025;
  t4730 = -0.340999127418*t3466*t4288;
  t4736 = t4673 + t4714 + t4730;
  t4832 = -1.000000637725*t3466;
  t4838 = 1. + t4832;
  t4846 = t4838*t3709;
  t4848 = t3517*t4025;
  t4854 = t3566*t4288;
  t4859 = t4846 + t4848 + t4854;
  t4897 = Cos(var1[22]);
  t4922 = -1.*t4897;
  t4977 = 1. + t4922;
  t4356 = 0.366501*t4354;
  t4368 = 0. + t4356;
  t4605 = 0.930418*t4354;
  t4616 = 0. + t4605;
  t5318 = 0.930418*t4998;
  t5322 = 0. + t5318;
  t5081 = t4812*t4522;
  t5085 = t4794*t4736;
  t5093 = -1.000000637725*t4328;
  t5097 = 1. + t5093;
  t5109 = t5097*t4859;
  t5117 = t5081 + t5085 + t5109;
  t5186 = -0.134322983001*t4328;
  t5212 = 1. + t5186;
  t5216 = t5212*t4522;
  t5233 = -0.340999127418*t4328*t4736;
  t5249 = t4368*t4859;
  t5266 = t5216 + t5233 + t5249;
  t5329 = -0.340999127418*t4328*t4522;
  t5333 = -0.8656776547239999*t4328;
  t5337 = 1. + t5333;
  t5342 = t5337*t4736;
  t5349 = t4616*t4859;
  t5354 = t5329 + t5342 + t5349;
  t5136 = 0.366501*t4998;
  t5150 = 0. + t5136;
  t5019 = -0.366501*t4998;
  t5022 = 0. + t5019;
  t5002 = -0.930418*t4998;
  t5003 = 0. + t5002;
  t229 = -0.04500040093286238*t209;
  t353 = -0.07877663122399998*t293;
  t557 = 0.031030906668*t549;
  t594 = 0. + t229 + t353 + t557;
  t817 = -0.091*t764;
  t825 = 0. + t817;
  t1268 = -1.*t1245;
  t1277 = 1. + t1268;
  t1288 = -0.091*t1277;
  t1296 = 0. + t1288;
  t1494 = 1.296332362046933e-7*var1[18];
  t1518 = -0.07877668146182712*t209;
  t1595 = -0.045000372235*t1524;
  t1629 = t1494 + t1518 + t1595;
  t5480 = t930*t1127*t1099;
  t5484 = -1.*t61*t1137;
  t5490 = t5480 + t5484;
  t5505 = t61*t930;
  t5511 = t1127*t1099*t1137;
  t5524 = t5505 + t5511;
  t1837 = 3.2909349868922137e-7*var1[18];
  t1849 = 0.03103092645718495*t209;
  t1898 = -0.045000372235*t1879;
  t1997 = t1837 + t1849 + t1898;
  t2190 = -1.296332362046933e-7*var1[19];
  t2263 = -0.14128592423750855*t2243;
  t2586 = -0.045000372235*t2524;
  t2587 = t2190 + t2263 + t2586;
  t5530 = -1.*t764*t5490;
  t5535 = t1245*t5524;
  t5536 = t5530 + t5535;
  t5593 = t1245*t5490;
  t5599 = t764*t5524;
  t5600 = t5593 + t5599;
  t2851 = 3.2909349868922137e-7*var1[19];
  t2855 = -0.055653945343889656*t2243;
  t2989 = -0.045000372235*t2921;
  t3028 = t2851 + t2855 + t2989;
  t3260 = -0.04500040093286238*t2243;
  t3301 = -0.055653909852*t3294;
  t3325 = -0.141285834136*t3313;
  t3387 = 0. + t3260 + t3301 + t3325;
  t3506 = 0.039853038461262744*t3466;
  t3551 = -0.22023459268999998*t3517;
  t3567 = -0.086752619205*t3566;
  t3572 = 0. + t3506 + t3551 + t3567;
  t5612 = t111*t1879*t1127;
  t5627 = 0.340999127418*t209*t5536;
  t5631 = t2808*t5600;
  t5636 = t5612 + t5627 + t5631;
  t5639 = t111*t1524*t1127;
  t5657 = t3106*t5536;
  t5663 = 0.340999127418*t209*t5600;
  t5670 = t5639 + t5657 + t5663;
  t5680 = t3396*t111*t1127;
  t5688 = t293*t5536;
  t5692 = t549*t5600;
  t5693 = t5680 + t5688 + t5692;
  t3714 = 6.295460977284962e-8*var1[20];
  t3748 = -0.22023473313910558*t3466;
  t3848 = 0.039853013046*t3832;
  t3850 = t3714 + t3748 + t3848;
  t4088 = -1.5981976069815686e-7*var1[20];
  t4089 = -0.08675267452931407*t3466;
  t4166 = 0.039853013046*t4147;
  t4173 = t4088 + t4089 + t4166;
  t4319 = 5.7930615939377813e-8*var1[21];
  t4346 = -0.23261833304643187*t4328;
  t4386 = -0.262809976934*t4368;
  t4395 = t4319 + t4346 + t4386;
  t5702 = t3313*t5636;
  t5706 = t3294*t5670;
  t5708 = t3643*t5693;
  t5723 = t5702 + t5706 + t5708;
  t5734 = t3892*t5636;
  t5736 = -0.340999127418*t2243*t5670;
  t5740 = t2524*t5693;
  t5741 = t5734 + t5736 + t5740;
  t5743 = -0.340999127418*t2243*t5636;
  t5744 = t4214*t5670;
  t5748 = t2921*t5693;
  t5750 = t5743 + t5744 + t5748;
  t4581 = -2.281945176511838e-8*var1[21];
  t4598 = -0.5905366811997648*t4328;
  t4629 = -0.262809976934*t4616;
  t4665 = t4581 + t4598 + t4629;
  t4769 = -0.26281014453449253*t4328;
  t4795 = -0.5905363046000001*t4794;
  t4821 = -0.23261818470000004*t4812;
  t4828 = 0. + t4769 + t4795 + t4821;
  t4979 = 0.06199697675299678*t4977;
  t5006 = -0.823260828522*t5003;
  t5023 = -0.324290713329*t5022;
  t5024 = 0. + t4979 + t5006 + t5023;
  t5754 = t4147*t5723;
  t5760 = -0.340999127418*t3466*t5741;
  t5762 = t4439*t5750;
  t5766 = t5754 + t5760 + t5762;
  t5799 = t3832*t5723;
  t5807 = t4686*t5741;
  t5822 = -0.340999127418*t3466*t5750;
  t5823 = t5799 + t5807 + t5822;
  t5828 = t4838*t5723;
  t5831 = t3517*t5741;
  t5833 = t3566*t5750;
  t5835 = t5828 + t5831 + t5833;
  t5131 = 7.500378623168247e-8*var1[22];
  t5134 = -0.32429092013729516*t4977;
  t5159 = 0.061996937216*t5150;
  t5169 = t5131 + t5134 + t5159;
  t5289 = -2.95447451120871e-8*var1[22];
  t5297 = -0.8232613535360118*t4977;
  t5323 = 0.061996937216*t5322;
  t5328 = t5289 + t5297 + t5323;
  t5851 = t4812*t5766;
  t5853 = t4794*t5823;
  t5855 = t5097*t5835;
  t5867 = t5851 + t5853 + t5855;
  t5879 = t5212*t5766;
  t5883 = -0.340999127418*t4328*t5823;
  t5901 = t4368*t5835;
  t5904 = t5879 + t5883 + t5901;
  t5367 = -0.8656776547239999*t4977;
  t5390 = 1. + t5367;
  t5907 = -0.340999127418*t4328*t5766;
  t5910 = t5337*t5823;
  t5913 = t4616*t5835;
  t5914 = t5907 + t5910 + t5913;
  t5418 = -0.134322983001*t4977;
  t5421 = 1. + t5418;
  t5433 = -1.000000637725*t4977;
  t5434 = 1. + t5433;
  t6034 = -1.*t111*t930*t764;
  t6037 = t1245*t111*t1137;
  t6041 = t6034 + t6037;
  t6049 = t1245*t111*t930;
  t6056 = t111*t764*t1137;
  t6057 = t6049 + t6056;
  t6062 = -1.*t1879*t1099;
  t6063 = 0.340999127418*t209*t6041;
  t6064 = t2808*t6057;
  t6065 = t6062 + t6063 + t6064;
  t6068 = -1.*t1524*t1099;
  t6069 = t3106*t6041;
  t6074 = 0.340999127418*t209*t6057;
  t6075 = t6068 + t6069 + t6074;
  t6086 = -1.*t3396*t1099;
  t6092 = t293*t6041;
  t6094 = t549*t6057;
  t6107 = t6086 + t6092 + t6094;
  t6121 = t3313*t6065;
  t6130 = t3294*t6075;
  t6139 = t3643*t6107;
  t6147 = t6121 + t6130 + t6139;
  t6152 = t3892*t6065;
  t6158 = -0.340999127418*t2243*t6075;
  t6162 = t2524*t6107;
  t6163 = t6152 + t6158 + t6162;
  t6168 = -0.340999127418*t2243*t6065;
  t6173 = t4214*t6075;
  t6176 = t2921*t6107;
  t6180 = t6168 + t6173 + t6176;
  t6202 = t4147*t6147;
  t6214 = -0.340999127418*t3466*t6163;
  t6222 = t4439*t6180;
  t6228 = t6202 + t6214 + t6222;
  t6232 = t3832*t6147;
  t6238 = t4686*t6163;
  t6239 = -0.340999127418*t3466*t6180;
  t6242 = t6232 + t6238 + t6239;
  t6246 = t4838*t6147;
  t6247 = t3517*t6163;
  t6248 = t3566*t6180;
  t6255 = t6246 + t6247 + t6248;
  t6260 = t4812*t6228;
  t6262 = t4794*t6242;
  t6265 = t5097*t6255;
  t6268 = t6260 + t6262 + t6265;
  t6271 = t5212*t6228;
  t6279 = -0.340999127418*t4328*t6242;
  t6282 = t4368*t6255;
  t6283 = t6271 + t6279 + t6282;
  t6288 = -0.340999127418*t4328*t6228;
  t6290 = t5337*t6242;
  t6291 = t4616*t6255;
  t6292 = t6288 + t6290 + t6291;
  p_output1[0]=0. + t1296*t1399 + t1629*t1776 + t1997*t2108 + t2587*t2840 + t3028*t3203 + t3387*t3421 + t3572*t3709 + t3850*t4025 + t4173*t4288 + t4395*t4522 + t4665*t4736 + t4828*t4859 + t5024*t5117 + t5169*t5266 + t5328*t5354 - 0.79249*(-0.340999127418*t4977*t5266 + t5117*t5322 + t5354*t5390) - 0.402633*(t5117*t5150 - 0.340999127418*t4977*t5354 + t5266*t5421) + 0.061884*(t5022*t5266 + t5003*t5354 + t5117*t5434) + t111*t594*t61 + t1177*t825 + var1[0];
  p_output1[1]=0. + t1296*t5524 + t1629*t5536 + t1997*t5600 + t2587*t5636 + t3028*t5670 + t3387*t5693 + t3572*t5723 + t3850*t5741 + t4173*t5750 + t4395*t5766 + t4665*t5823 + t4828*t5835 + t5024*t5867 + t5169*t5904 + t5328*t5914 - 0.402633*(t5150*t5867 + t5421*t5904 - 0.340999127418*t4977*t5914) + 0.061884*(t5434*t5867 + t5022*t5904 + t5003*t5914) - 0.79249*(t5322*t5867 - 0.340999127418*t4977*t5904 + t5390*t5914) + t111*t1127*t594 + t5490*t825 + var1[1];
  p_output1[2]=0. + t111*t1137*t1296 - 1.*t1099*t594 + t1629*t6041 + t1997*t6057 + t2587*t6065 + t3028*t6075 + t3387*t6107 + t3572*t6147 + t3850*t6163 + t4173*t6180 + t4395*t6228 + t4665*t6242 + t4828*t6255 + t5024*t6268 + t5169*t6283 + t5328*t6292 - 0.402633*(t5150*t6268 + t5421*t6283 - 0.340999127418*t4977*t6292) + 0.061884*(t5434*t6268 + t5022*t6283 + t5003*t6292) - 0.79249*(t5322*t6268 - 0.340999127418*t4977*t6283 + t5390*t6292) + t111*t825*t930 + var1[2];
}



void p_right_toe_pitch_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
