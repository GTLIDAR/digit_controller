/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:10:05 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_right_knee_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t980;
  double t1169;
  double t2103;
  double t1394;
  double t1405;
  double t2108;
  double t284;
  double t296;
  double t447;
  double t1214;
  double t1606;
  double t2237;
  double t2275;
  double t2341;
  double t2846;
  double t2867;
  double t2883;
  double t140;
  double t3393;
  double t3401;
  double t3198;
  double t3218;
  double t3264;
  double t3456;
  double t3478;
  double t3511;
  double t3523;
  double t3561;
  double t3580;
  double t3608;
  double t3070;
  double t3079;
  double t989;
  double t1030;
  double t1044;
  double t1086;
  double t4846;
  double t4443;
  double t4469;
  double t3782;
  double t3784;
  double t3789;
  double t3867;
  double t3874;
  double t3943;
  double t4408;
  double t4428;
  double t4029;
  double t4034;
  double t4090;
  double t4186;
  double t4204;
  double t4241;
  double t4603;
  double t4635;
  double t4702;
  double t4738;
  double t4752;
  double t4754;
  double t4805;
  double t4807;
  double t4815;
  double t3626;
  double t3667;
  double t3977;
  double t3984;
  double t5623;
  double t5637;
  double t5135;
  double t5188;
  double t5195;
  double t5215;
  double t5217;
  double t5228;
  double t5358;
  double t5366;
  double t5391;
  double t5392;
  double t5468;
  double t5520;
  double t5697;
  double t5719;
  double t5743;
  double t5750;
  double t5752;
  double t5768;
  double t5287;
  double t5309;
  double t4865;
  double t4887;
  double t4969;
  double t5086;
  double t911;
  double t1033;
  double t1102;
  double t1120;
  double t1326;
  double t1335;
  double t2364;
  double t2696;
  double t2698;
  double t2836;
  double t2910;
  double t2937;
  double t3181;
  double t3184;
  double t6241;
  double t6251;
  double t6273;
  double t6301;
  double t6311;
  double t6312;
  double t3320;
  double t3388;
  double t3432;
  double t3455;
  double t3522;
  double t3598;
  double t3707;
  double t3708;
  double t6353;
  double t6362;
  double t6377;
  double t6385;
  double t6391;
  double t6399;
  double t3970;
  double t3975;
  double t4021;
  double t4026;
  double t4321;
  double t4439;
  double t4544;
  double t4561;
  double t4828;
  double t4896;
  double t5121;
  double t5125;
  double t6404;
  double t6412;
  double t6422;
  double t6423;
  double t6439;
  double t6441;
  double t6448;
  double t6450;
  double t6478;
  double t6491;
  double t6496;
  double t6526;
  double t5256;
  double t5258;
  double t5331;
  double t5336;
  double t5581;
  double t5619;
  double t5640;
  double t5668;
  double t6563;
  double t6574;
  double t6610;
  double t6613;
  double t6649;
  double t6653;
  double t6666;
  double t6674;
  double t5926;
  double t5945;
  double t6731;
  double t6732;
  double t6759;
  double t6762;
  double t6008;
  double t6031;
  double t6093;
  double t6111;
  double t6928;
  double t6934;
  double t6935;
  double t6941;
  double t6950;
  double t6955;
  double t6968;
  double t6972;
  double t6977;
  double t6981;
  double t6993;
  double t6994;
  double t6995;
  double t7004;
  double t7009;
  double t7010;
  double t7017;
  double t7021;
  double t7027;
  double t7029;
  double t7047;
  double t7054;
  double t7065;
  double t7066;
  double t7080;
  double t7083;
  double t7093;
  double t7094;
  double t7095;
  double t7098;
  double t7172;
  double t7173;
  double t7174;
  double t7176;
  double t7180;
  double t7182;
  double t7194;
  double t7199;
  double t7200;
  double t7207;
  double t7220;
  double t7223;
  double t7228;
  double t7230;
  double t7238;
  double t7239;
  double t7241;
  double t7245;
  double t7249;
  double t7253;
  double t7254;
  double t7266;
  double t7270;
  double t7271;
  double t7273;
  double t7282;
  double t7286;
  double t7287;
  double t7292;
  double t7293;
  double t7353;
  double t7356;
  double t7359;
  double t7392;
  double t7397;
  double t7398;
  double t7431;
  double t7432;
  double t7439;
  double t7440;
  double t7444;
  double t7452;
  double t7458;
  double t7465;
  double t7473;
  double t7474;
  double t7478;
  double t7479;
  double t7484;
  double t7490;
  double t7498;
  double t7499;
  double t7505;
  double t7511;
  double t7514;
  double t7515;
  double t7522;
  double t7524;
  double t7525;
  double t7528;
  double t7613;
  double t7614;
  double t7616;
  double t7624;
  double t7625;
  double t7627;
  double t7637;
  double t7640;
  double t7646;
  double t7651;
  double t7652;
  double t7655;
  double t7657;
  double t7660;
  double t7664;
  double t7666;
  double t7680;
  double t7688;
  double t7689;
  double t7692;
  double t7694;
  double t7701;
  double t7702;
  double t7704;
  double t7708;
  double t7719;
  double t7728;
  double t7730;
  double t7731;
  double t7790;
  double t7799;
  double t7802;
  double t7807;
  double t7813;
  double t7830;
  double t7836;
  double t7837;
  double t7845;
  double t7846;
  double t7847;
  double t7850;
  double t7852;
  double t7856;
  double t7871;
  double t7879;
  double t7880;
  double t7888;
  double t7889;
  double t7890;
  double t7892;
  double t7909;
  double t7911;
  double t7912;
  double t7914;
  double t7935;
  double t7937;
  double t7939;
  double t7945;
  double t8014;
  double t8016;
  double t8020;
  double t8022;
  double t8023;
  double t8026;
  double t8037;
  double t8038;
  double t8046;
  double t8056;
  double t8069;
  double t8071;
  double t8073;
  double t8074;
  double t8076;
  double t8080;
  double t8087;
  double t8089;
  double t8096;
  double t8105;
  double t8113;
  double t8115;
  double t8119;
  double t8123;
  double t8124;
  double t8126;
  double t8132;
  double t8197;
  double t8198;
  double t8199;
  double t8201;
  double t8203;
  double t8205;
  double t8207;
  double t8212;
  double t8215;
  double t8216;
  double t8217;
  double t8225;
  double t8229;
  double t8235;
  double t8236;
  double t8238;
  double t8242;
  double t8245;
  double t8246;
  double t8248;
  double t8249;
  double t8252;
  double t8256;
  double t8301;
  double t8305;
  double t8314;
  double t8316;
  double t8322;
  double t8326;
  double t8328;
  double t8333;
  double t8337;
  double t8346;
  double t8361;
  double t8365;
  double t8369;
  double t8370;
  double t8378;
  double t8381;
  double t8386;
  double t8388;
  double t8399;
  double t8401;
  double t8402;
  double t8403;
  double t8406;
  double t8407;
  double t8408;
  double t8413;
  double t8418;
  double t8420;
  double t8422;
  double t8423;
  double t8485;
  double t8487;
  double t8493;
  double t8499;
  double t8500;
  double t8501;
  double t8506;
  double t8509;
  double t8513;
  double t8531;
  double t8532;
  double t8535;
  double t8539;
  double t8540;
  double t8543;
  double t8548;
  double t8550;
  double t8568;
  double t8569;
  double t8576;
  double t8577;
  double t8578;
  double t8581;
  double t8586;
  double t8591;
  double t8599;
  double t8603;
  double t8652;
  double t8653;
  double t8654;
  double t8655;
  double t8657;
  double t8659;
  double t8660;
  double t8663;
  double t8665;
  double t8669;
  double t8670;
  double t8673;
  double t8688;
  double t8689;
  double t8691;
  double t8695;
  double t8697;
  double t8699;
  double t8704;
  double t8705;
  double t8707;
  double t8708;
  double t8711;
  double t8715;
  double t8638;
  double t8639;
  double t8640;
  double t8643;
  double t8644;
  double t8645;
  double t8647;
  double t8649;
  double t8650;
  double t8751;
  double t8754;
  double t8756;
  double t8757;
  double t8759;
  double t8763;
  double t8773;
  double t8774;
  double t8775;
  double t8777;
  double t8781;
  double t8785;
  double t8789;
  double t8792;
  double t8794;
  double t8799;
  double t8802;
  double t8803;
  double t8810;
  double t8811;
  double t8812;
  double t8813;
  double t8816;
  double t8817;
  double t8818;
  double t8826;
  double t8867;
  double t8868;
  double t8869;
  double t8871;
  double t8877;
  double t8881;
  double t8884;
  double t8886;
  double t8892;
  double t8894;
  double t8898;
  double t8900;
  double t8903;
  double t8907;
  double t8911;
  double t8913;
  double t8915;
  double t8916;
  double t8917;
  double t8918;
  double t8920;
  double t8922;
  double t8923;
  double t8924;
  double t8969;
  double t8973;
  double t8975;
  double t8976;
  double t8978;
  double t8979;
  double t8980;
  double t8981;
  double t8983;
  double t8984;
  double t8985;
  double t8986;
  double t8947;
  double t8948;
  double t8949;
  double t8951;
  double t8952;
  double t8954;
  double t8959;
  double t8960;
  double t8963;
  double t9005;
  double t9006;
  double t9007;
  double t9009;
  double t9010;
  double t9011;
  double t9012;
  double t9014;
  double t9016;
  double t9017;
  double t9021;
  double t9029;
  double t9030;
  double t9031;
  double t9032;
  double t9034;
  double t9035;
  double t9036;
  double t9037;
  double t9040;
  double t9041;
  double t9042;
  double t9043;
  double t9067;
  double t9068;
  double t9071;
  double t9073;
  double t9074;
  double t9075;
  double t9085;
  double t9088;
  double t9089;
  double t9090;
  double t9095;
  double t9096;
  double t9097;
  double t9098;
  double t9100;
  double t9101;
  double t9102;
  double t9103;
  double t9107;
  double t9109;
  double t9110;
  double t9118;
  double t9181;
  double t9184;
  double t9188;
  double t9203;
  double t9204;
  double t9206;
  double t9209;
  double t9210;
  double t9211;
  double t9263;
  double t9264;
  double t9265;
  double t9272;
  double t9285;
  double t9288;
  double t9289;
  double t9290;
  double t9292;
  double t9295;
  double t9297;
  double t9298;
  double t9328;
  double t9329;
  double t9330;
  double t9334;
  double t9336;
  double t9337;
  double t9338;
  double t9339;
  double t9341;
  double t9343;
  double t9345;
  double t9348;
  t980 = Sin(var1[18]);
  t1169 = Sin(var1[3]);
  t2103 = Cos(var1[3]);
  t1394 = Cos(var1[5]);
  t1405 = Sin(var1[4]);
  t2108 = Sin(var1[5]);
  t284 = Cos(var1[18]);
  t296 = -1.*t284;
  t447 = 1. + t296;
  t1214 = Sin(var1[17]);
  t1606 = -1.*t1394*t1169*t1405;
  t2237 = t2103*t2108;
  t2275 = t1606 + t2237;
  t2341 = Cos(var1[17]);
  t2846 = -1.*t2103*t1394;
  t2867 = -1.*t1169*t1405*t2108;
  t2883 = t2846 + t2867;
  t140 = Cos(var1[4]);
  t3393 = -0.366501*t980;
  t3401 = 0. + t3393;
  t3198 = -1.*t1214*t2275;
  t3218 = t2341*t2883;
  t3264 = t3198 + t3218;
  t3456 = t2341*t2275;
  t3478 = t1214*t2883;
  t3511 = t3456 + t3478;
  t3523 = Cos(var1[19]);
  t3561 = -1.*t3523;
  t3580 = 1. + t3561;
  t3608 = Sin(var1[19]);
  t3070 = 0.930418*t980;
  t3079 = 0. + t3070;
  t989 = -0.930418*t980;
  t1030 = 0. + t989;
  t1044 = 0.366501*t980;
  t1086 = 0. + t1044;
  t4846 = Sin(var1[20]);
  t4443 = 0.930418*t3608;
  t4469 = 0. + t4443;
  t3782 = -1.*t140*t3401*t1169;
  t3784 = 0.340999127418*t447*t3264;
  t3789 = -0.134322983001*t447;
  t3867 = 1. + t3789;
  t3874 = t3867*t3511;
  t3943 = t3782 + t3784 + t3874;
  t4408 = 0.366501*t3608;
  t4428 = 0. + t4408;
  t4029 = -1.*t140*t3079*t1169;
  t4034 = -0.8656776547239999*t447;
  t4090 = 1. + t4034;
  t4186 = t4090*t3264;
  t4204 = 0.340999127418*t447*t3511;
  t4241 = t4029 + t4186 + t4204;
  t4603 = -1.000000637725*t447;
  t4635 = 1. + t4603;
  t4702 = -1.*t4635*t140*t1169;
  t4738 = t1030*t3264;
  t4752 = t1086*t3511;
  t4754 = t4702 + t4738 + t4752;
  t4805 = Cos(var1[20]);
  t4807 = -1.*t4805;
  t4815 = 1. + t4807;
  t3626 = -0.930418*t3608;
  t3667 = 0. + t3626;
  t3977 = -0.366501*t3608;
  t3984 = 0. + t3977;
  t5623 = 0.366501*t4846;
  t5637 = 0. + t5623;
  t5135 = t4469*t3943;
  t5188 = t4428*t4241;
  t5195 = -1.000000637725*t3580;
  t5215 = 1. + t5195;
  t5217 = t5215*t4754;
  t5228 = t5135 + t5188 + t5217;
  t5358 = -0.8656776547239999*t3580;
  t5366 = 1. + t5358;
  t5391 = t5366*t3943;
  t5392 = -0.340999127418*t3580*t4241;
  t5468 = t3667*t4754;
  t5520 = t5391 + t5392 + t5468;
  t5697 = -0.340999127418*t3580*t3943;
  t5719 = -0.134322983001*t3580;
  t5743 = 1. + t5719;
  t5750 = t5743*t4241;
  t5752 = t3984*t4754;
  t5768 = t5697 + t5750 + t5752;
  t5287 = 0.930418*t4846;
  t5309 = 0. + t5287;
  t4865 = -0.930418*t4846;
  t4887 = 0. + t4865;
  t4969 = -0.366501*t4846;
  t5086 = 0. + t4969;
  t911 = -0.04500040093286238*t447;
  t1033 = -0.07877663122399998*t1030;
  t1102 = 0.031030906668*t1086;
  t1120 = 0. + t911 + t1033 + t1102;
  t1326 = -0.091*t1214;
  t1335 = 0. + t1326;
  t2364 = -1.*t2341;
  t2696 = 1. + t2364;
  t2698 = -0.091*t2696;
  t2836 = 0. + t2698;
  t2910 = 1.296332362046933e-7*var1[18];
  t2937 = -0.07877668146182712*t447;
  t3181 = -0.045000372235*t3079;
  t3184 = t2910 + t2937 + t3181;
  t6241 = t2103*t1394*t1405;
  t6251 = t1169*t2108;
  t6273 = t6241 + t6251;
  t6301 = -1.*t1394*t1169;
  t6311 = t2103*t1405*t2108;
  t6312 = t6301 + t6311;
  t3320 = 3.2909349868922137e-7*var1[18];
  t3388 = 0.03103092645718495*t447;
  t3432 = -0.045000372235*t3401;
  t3455 = t3320 + t3388 + t3432;
  t3522 = -1.296332362046933e-7*var1[19];
  t3598 = -0.14128592423750855*t3580;
  t3707 = -0.045000372235*t3667;
  t3708 = t3522 + t3598 + t3707;
  t6353 = -1.*t1214*t6273;
  t6362 = t2341*t6312;
  t6377 = t6353 + t6362;
  t6385 = t2341*t6273;
  t6391 = t1214*t6312;
  t6399 = t6385 + t6391;
  t3970 = 3.2909349868922137e-7*var1[19];
  t3975 = -0.055653945343889656*t3580;
  t4021 = -0.045000372235*t3984;
  t4026 = t3970 + t3975 + t4021;
  t4321 = -0.04500040093286238*t3580;
  t4439 = -0.055653909852*t4428;
  t4544 = -0.141285834136*t4469;
  t4561 = 0. + t4321 + t4439 + t4544;
  t4828 = 0.039853038461262744*t4815;
  t4896 = -0.22023459268999998*t4887;
  t5121 = -0.086752619205*t5086;
  t5125 = 0. + t4828 + t4896 + t5121;
  t6404 = t2103*t140*t3401;
  t6412 = 0.340999127418*t447*t6377;
  t6422 = t3867*t6399;
  t6423 = t6404 + t6412 + t6422;
  t6439 = t2103*t140*t3079;
  t6441 = t4090*t6377;
  t6448 = 0.340999127418*t447*t6399;
  t6450 = t6439 + t6441 + t6448;
  t6478 = t4635*t2103*t140;
  t6491 = t1030*t6377;
  t6496 = t1086*t6399;
  t6526 = t6478 + t6491 + t6496;
  t5256 = 6.295460977284962e-8*var1[20];
  t5258 = -0.22023473313910558*t4815;
  t5331 = 0.039853013046*t5309;
  t5336 = t5256 + t5258 + t5331;
  t5581 = -1.5981976069815686e-7*var1[20];
  t5619 = -0.08675267452931407*t4815;
  t5640 = 0.039853013046*t5637;
  t5668 = t5581 + t5619 + t5640;
  t6563 = t4469*t6423;
  t6574 = t4428*t6450;
  t6610 = t5215*t6526;
  t6613 = t6563 + t6574 + t6610;
  t6649 = t5366*t6423;
  t6653 = -0.340999127418*t3580*t6450;
  t6666 = t3667*t6526;
  t6674 = t6649 + t6653 + t6666;
  t5926 = -0.134322983001*t4815;
  t5945 = 1. + t5926;
  t6731 = -0.340999127418*t3580*t6423;
  t6732 = t5743*t6450;
  t6759 = t3984*t6526;
  t6762 = t6731 + t6732 + t6759;
  t6008 = -0.8656776547239999*t4815;
  t6031 = 1. + t6008;
  t6093 = -1.000000637725*t4815;
  t6111 = 1. + t6093;
  t6928 = -1.*t2103*t140*t1394*t1214;
  t6934 = t2341*t2103*t140*t2108;
  t6935 = t6928 + t6934;
  t6941 = t2341*t2103*t140*t1394;
  t6950 = t2103*t140*t1214*t2108;
  t6955 = t6941 + t6950;
  t6968 = -1.*t2103*t3401*t1405;
  t6972 = 0.340999127418*t447*t6935;
  t6977 = t3867*t6955;
  t6981 = t6968 + t6972 + t6977;
  t6993 = -1.*t2103*t3079*t1405;
  t6994 = t4090*t6935;
  t6995 = 0.340999127418*t447*t6955;
  t7004 = t6993 + t6994 + t6995;
  t7009 = -1.*t4635*t2103*t1405;
  t7010 = t1030*t6935;
  t7017 = t1086*t6955;
  t7021 = t7009 + t7010 + t7017;
  t7027 = t4469*t6981;
  t7029 = t4428*t7004;
  t7047 = t5215*t7021;
  t7054 = t7027 + t7029 + t7047;
  t7065 = t5366*t6981;
  t7066 = -0.340999127418*t3580*t7004;
  t7080 = t3667*t7021;
  t7083 = t7065 + t7066 + t7080;
  t7093 = -0.340999127418*t3580*t6981;
  t7094 = t5743*t7004;
  t7095 = t3984*t7021;
  t7098 = t7093 + t7094 + t7095;
  t7172 = -1.*t140*t1394*t1214*t1169;
  t7173 = t2341*t140*t1169*t2108;
  t7174 = t7172 + t7173;
  t7176 = t2341*t140*t1394*t1169;
  t7180 = t140*t1214*t1169*t2108;
  t7182 = t7176 + t7180;
  t7194 = -1.*t3401*t1169*t1405;
  t7199 = 0.340999127418*t447*t7174;
  t7200 = t3867*t7182;
  t7207 = t7194 + t7199 + t7200;
  t7220 = -1.*t3079*t1169*t1405;
  t7223 = t4090*t7174;
  t7228 = 0.340999127418*t447*t7182;
  t7230 = t7220 + t7223 + t7228;
  t7238 = -1.*t4635*t1169*t1405;
  t7239 = t1030*t7174;
  t7241 = t1086*t7182;
  t7245 = t7238 + t7239 + t7241;
  t7249 = t4469*t7207;
  t7253 = t4428*t7230;
  t7254 = t5215*t7245;
  t7266 = t7249 + t7253 + t7254;
  t7270 = t5366*t7207;
  t7271 = -0.340999127418*t3580*t7230;
  t7273 = t3667*t7245;
  t7282 = t7270 + t7271 + t7273;
  t7286 = -0.340999127418*t3580*t7207;
  t7287 = t5743*t7230;
  t7292 = t3984*t7245;
  t7293 = t7286 + t7287 + t7292;
  t7353 = t1394*t1214*t1405;
  t7356 = -1.*t2341*t1405*t2108;
  t7359 = t7353 + t7356;
  t7392 = -1.*t2341*t1394*t1405;
  t7397 = -1.*t1214*t1405*t2108;
  t7398 = t7392 + t7397;
  t7431 = -1.*t140*t3401;
  t7432 = 0.340999127418*t447*t7359;
  t7439 = t3867*t7398;
  t7440 = t7431 + t7432 + t7439;
  t7444 = -1.*t140*t3079;
  t7452 = t4090*t7359;
  t7458 = 0.340999127418*t447*t7398;
  t7465 = t7444 + t7452 + t7458;
  t7473 = -1.*t4635*t140;
  t7474 = t1030*t7359;
  t7478 = t1086*t7398;
  t7479 = t7473 + t7474 + t7478;
  t7484 = t4469*t7440;
  t7490 = t4428*t7465;
  t7498 = t5215*t7479;
  t7499 = t7484 + t7490 + t7498;
  t7505 = t5366*t7440;
  t7511 = -0.340999127418*t3580*t7465;
  t7514 = t3667*t7479;
  t7515 = t7505 + t7511 + t7514;
  t7522 = -0.340999127418*t3580*t7440;
  t7524 = t5743*t7465;
  t7525 = t3984*t7479;
  t7528 = t7522 + t7524 + t7525;
  t7613 = t1394*t1169;
  t7614 = -1.*t2103*t1405*t2108;
  t7616 = t7613 + t7614;
  t7624 = t1214*t6273;
  t7625 = t2341*t7616;
  t7627 = t7624 + t7625;
  t7637 = -1.*t1214*t7616;
  t7640 = t6385 + t7637;
  t7646 = 0.340999127418*t447*t7627;
  t7651 = t4090*t7640;
  t7652 = t7646 + t7651;
  t7655 = t3867*t7627;
  t7657 = 0.340999127418*t447*t7640;
  t7660 = t7655 + t7657;
  t7664 = t1086*t7627;
  t7666 = t1030*t7640;
  t7680 = t7664 + t7666;
  t7688 = t4428*t7652;
  t7689 = t4469*t7660;
  t7692 = t5215*t7680;
  t7694 = t7688 + t7689 + t7692;
  t7701 = -0.340999127418*t3580*t7652;
  t7702 = t5366*t7660;
  t7704 = t3667*t7680;
  t7708 = t7701 + t7702 + t7704;
  t7719 = t5743*t7652;
  t7728 = -0.340999127418*t3580*t7660;
  t7730 = t3984*t7680;
  t7731 = t7719 + t7728 + t7730;
  t7790 = t1394*t1169*t1405;
  t7799 = -1.*t2103*t2108;
  t7802 = t7790 + t7799;
  t7807 = t1214*t7802;
  t7813 = t7807 + t3218;
  t7830 = t2341*t7802;
  t7836 = -1.*t1214*t2883;
  t7837 = t7830 + t7836;
  t7845 = 0.340999127418*t447*t7813;
  t7846 = t4090*t7837;
  t7847 = t7845 + t7846;
  t7850 = t3867*t7813;
  t7852 = 0.340999127418*t447*t7837;
  t7856 = t7850 + t7852;
  t7871 = t1086*t7813;
  t7879 = t1030*t7837;
  t7880 = t7871 + t7879;
  t7888 = t4428*t7847;
  t7889 = t4469*t7856;
  t7890 = t5215*t7880;
  t7892 = t7888 + t7889 + t7890;
  t7909 = -0.340999127418*t3580*t7847;
  t7911 = t5366*t7856;
  t7912 = t3667*t7880;
  t7914 = t7909 + t7911 + t7912;
  t7935 = t5743*t7847;
  t7937 = -0.340999127418*t3580*t7856;
  t7939 = t3984*t7880;
  t7945 = t7935 + t7937 + t7939;
  t8014 = t140*t1394*t1214;
  t8016 = -1.*t2341*t140*t2108;
  t8020 = t8014 + t8016;
  t8022 = t2341*t140*t1394;
  t8023 = t140*t1214*t2108;
  t8026 = t8022 + t8023;
  t8037 = 0.340999127418*t447*t8020;
  t8038 = t4090*t8026;
  t8046 = t8037 + t8038;
  t8056 = t3867*t8020;
  t8069 = 0.340999127418*t447*t8026;
  t8071 = t8056 + t8069;
  t8073 = t1086*t8020;
  t8074 = t1030*t8026;
  t8076 = t8073 + t8074;
  t8080 = t4428*t8046;
  t8087 = t4469*t8071;
  t8089 = t5215*t8076;
  t8096 = t8080 + t8087 + t8089;
  t8105 = -0.340999127418*t3580*t8046;
  t8113 = t5366*t8071;
  t8115 = t3667*t8076;
  t8119 = t8105 + t8113 + t8115;
  t8123 = t5743*t8046;
  t8124 = -0.340999127418*t3580*t8071;
  t8126 = t3984*t8076;
  t8132 = t8123 + t8124 + t8126;
  t8197 = -1.*t2341*t6273;
  t8198 = -1.*t1214*t6312;
  t8199 = t8197 + t8198;
  t8201 = t4090*t8199;
  t8203 = t6412 + t8201;
  t8205 = t3867*t6377;
  t8207 = 0.340999127418*t447*t8199;
  t8212 = t8205 + t8207;
  t8215 = t1086*t6377;
  t8216 = t1030*t8199;
  t8217 = t8215 + t8216;
  t8225 = t4428*t8203;
  t8229 = t4469*t8212;
  t8235 = t5215*t8217;
  t8236 = t8225 + t8229 + t8235;
  t8238 = -0.340999127418*t3580*t8203;
  t8242 = t5366*t8212;
  t8245 = t3667*t8217;
  t8246 = t8238 + t8242 + t8245;
  t8248 = t5743*t8203;
  t8249 = -0.340999127418*t3580*t8212;
  t8252 = t3984*t8217;
  t8256 = t8248 + t8249 + t8252;
  t8301 = t2103*t1394;
  t8305 = t1169*t1405*t2108;
  t8314 = t8301 + t8305;
  t8316 = -1.*t1214*t7802;
  t8322 = t2341*t8314;
  t8326 = t8316 + t8322;
  t8328 = -1.*t2341*t7802;
  t8333 = -1.*t1214*t8314;
  t8337 = t8328 + t8333;
  t8346 = 0.340999127418*t447*t8326;
  t8361 = t4090*t8337;
  t8365 = t8346 + t8361;
  t8369 = t3867*t8326;
  t8370 = 0.340999127418*t447*t8337;
  t8378 = t8369 + t8370;
  t8381 = t1086*t8326;
  t8386 = t1030*t8337;
  t8388 = t8381 + t8386;
  t8399 = t4428*t8365;
  t8401 = t4469*t8378;
  t8402 = t5215*t8388;
  t8403 = t8399 + t8401 + t8402;
  t8406 = -0.340999127418*t3580*t8365;
  t8407 = t5366*t8378;
  t8408 = t3667*t8388;
  t8413 = t8406 + t8407 + t8408;
  t8418 = t5743*t8365;
  t8420 = -0.340999127418*t3580*t8378;
  t8422 = t3984*t8388;
  t8423 = t8418 + t8420 + t8422;
  t8485 = -1.*t140*t1394*t1214;
  t8487 = t2341*t140*t2108;
  t8493 = t8485 + t8487;
  t8499 = -1.*t2341*t140*t1394;
  t8500 = -1.*t140*t1214*t2108;
  t8501 = t8499 + t8500;
  t8506 = 0.340999127418*t447*t8493;
  t8509 = t4090*t8501;
  t8513 = t8506 + t8509;
  t8531 = t3867*t8493;
  t8532 = 0.340999127418*t447*t8501;
  t8535 = t8531 + t8532;
  t8539 = t1086*t8493;
  t8540 = t1030*t8501;
  t8543 = t8539 + t8540;
  t8548 = t4428*t8513;
  t8550 = t4469*t8535;
  t8568 = t5215*t8543;
  t8569 = t8548 + t8550 + t8568;
  t8576 = -0.340999127418*t3580*t8513;
  t8577 = t5366*t8535;
  t8578 = t3667*t8543;
  t8581 = t8576 + t8577 + t8578;
  t8586 = t5743*t8513;
  t8591 = -0.340999127418*t3580*t8535;
  t8599 = t3984*t8543;
  t8603 = t8586 + t8591 + t8599;
  t8652 = -1.000000637725*t2103*t140*t980;
  t8653 = -0.930418*t284*t6377;
  t8654 = 0.366501*t284*t6399;
  t8655 = t8652 + t8653 + t8654;
  t8657 = -0.366501*t284*t2103*t140;
  t8659 = 0.340999127418*t980*t6377;
  t8660 = -0.134322983001*t980*t6399;
  t8663 = t8657 + t8659 + t8660;
  t8665 = 0.930418*t284*t2103*t140;
  t8669 = -0.8656776547239999*t980*t6377;
  t8670 = 0.340999127418*t980*t6399;
  t8673 = t8665 + t8669 + t8670;
  t8688 = t3984*t8655;
  t8689 = -0.340999127418*t3580*t8663;
  t8691 = t5743*t8673;
  t8695 = t8688 + t8689 + t8691;
  t8697 = t3667*t8655;
  t8699 = t5366*t8663;
  t8704 = -0.340999127418*t3580*t8673;
  t8705 = t8697 + t8699 + t8704;
  t8707 = t5215*t8655;
  t8708 = t4469*t8663;
  t8711 = t4428*t8673;
  t8715 = t8707 + t8708 + t8711;
  t8638 = 0.0846680539949003*t284;
  t8639 = -0.04500040093286238*t980;
  t8640 = t8638 + t8639;
  t8643 = -0.04186915633414423*t284;
  t8644 = -0.07877668146182712*t980;
  t8645 = 1.296332362046933e-7 + t8643 + t8644;
  t8647 = 0.016492681424499736*t284;
  t8649 = 0.03103092645718495*t980;
  t8650 = 3.2909349868922137e-7 + t8647 + t8649;
  t8751 = t1214*t8314;
  t8754 = t7830 + t8751;
  t8756 = -1.000000637725*t140*t980*t1169;
  t8757 = -0.930418*t284*t8326;
  t8759 = 0.366501*t284*t8754;
  t8763 = t8756 + t8757 + t8759;
  t8773 = -0.366501*t284*t140*t1169;
  t8774 = 0.340999127418*t980*t8326;
  t8775 = -0.134322983001*t980*t8754;
  t8777 = t8773 + t8774 + t8775;
  t8781 = 0.930418*t284*t140*t1169;
  t8785 = -0.8656776547239999*t980*t8326;
  t8789 = 0.340999127418*t980*t8754;
  t8792 = t8781 + t8785 + t8789;
  t8794 = t3984*t8763;
  t8799 = -0.340999127418*t3580*t8777;
  t8802 = t5743*t8792;
  t8803 = t8794 + t8799 + t8802;
  t8810 = t3667*t8763;
  t8811 = t5366*t8777;
  t8812 = -0.340999127418*t3580*t8792;
  t8813 = t8810 + t8811 + t8812;
  t8816 = t5215*t8763;
  t8817 = t4469*t8777;
  t8818 = t4428*t8792;
  t8826 = t8816 + t8817 + t8818;
  t8867 = 1.000000637725*t980*t1405;
  t8868 = -0.930418*t284*t8493;
  t8869 = 0.366501*t284*t8026;
  t8871 = t8867 + t8868 + t8869;
  t8877 = 0.366501*t284*t1405;
  t8881 = 0.340999127418*t980*t8493;
  t8884 = -0.134322983001*t980*t8026;
  t8886 = t8877 + t8881 + t8884;
  t8892 = -0.930418*t284*t1405;
  t8894 = -0.8656776547239999*t980*t8493;
  t8898 = 0.340999127418*t980*t8026;
  t8900 = t8892 + t8894 + t8898;
  t8903 = t3984*t8871;
  t8907 = -0.340999127418*t3580*t8886;
  t8911 = t5743*t8900;
  t8913 = t8903 + t8907 + t8911;
  t8915 = t3667*t8871;
  t8916 = t5366*t8886;
  t8917 = -0.340999127418*t3580*t8900;
  t8918 = t8915 + t8916 + t8917;
  t8920 = t5215*t8871;
  t8922 = t4469*t8886;
  t8923 = t4428*t8900;
  t8924 = t8920 + t8922 + t8923;
  t8969 = -0.8656776547239999*t3608*t6423;
  t8973 = -0.340999127418*t3608*t6450;
  t8975 = -0.930418*t3523*t6526;
  t8976 = t8969 + t8973 + t8975;
  t8978 = -0.340999127418*t3608*t6423;
  t8979 = -0.134322983001*t3608*t6450;
  t8980 = -0.366501*t3523*t6526;
  t8981 = t8978 + t8979 + t8980;
  t8983 = 0.930418*t3523*t6423;
  t8984 = 0.366501*t3523*t6450;
  t8985 = -1.000000637725*t3608*t6526;
  t8986 = t8983 + t8984 + t8985;
  t8947 = 0.04186915633414423*t3523;
  t8948 = -0.14128592423750855*t3608;
  t8949 = -1.296332362046933e-7 + t8947 + t8948;
  t8951 = 0.016492681424499736*t3523;
  t8952 = -0.055653945343889656*t3608;
  t8954 = 3.2909349868922137e-7 + t8951 + t8952;
  t8959 = -0.15185209683981668*t3523;
  t8960 = -0.04500040093286238*t3608;
  t8963 = t8959 + t8960;
  t9005 = t140*t3401*t1169;
  t9006 = t3867*t8754;
  t9007 = t9005 + t8346 + t9006;
  t9009 = t140*t3079*t1169;
  t9010 = t4090*t8326;
  t9011 = 0.340999127418*t447*t8754;
  t9012 = t9009 + t9010 + t9011;
  t9014 = t4635*t140*t1169;
  t9016 = t1030*t8326;
  t9017 = t1086*t8754;
  t9021 = t9014 + t9016 + t9017;
  t9029 = -0.8656776547239999*t3608*t9007;
  t9030 = -0.340999127418*t3608*t9012;
  t9031 = -0.930418*t3523*t9021;
  t9032 = t9029 + t9030 + t9031;
  t9034 = -0.340999127418*t3608*t9007;
  t9035 = -0.134322983001*t3608*t9012;
  t9036 = -0.366501*t3523*t9021;
  t9037 = t9034 + t9035 + t9036;
  t9040 = 0.930418*t3523*t9007;
  t9041 = 0.366501*t3523*t9012;
  t9042 = -1.000000637725*t3608*t9021;
  t9043 = t9040 + t9041 + t9042;
  t9067 = -1.*t3401*t1405;
  t9068 = t3867*t8026;
  t9071 = t9067 + t8506 + t9068;
  t9073 = -1.*t3079*t1405;
  t9074 = t4090*t8493;
  t9075 = t9073 + t9074 + t8069;
  t9085 = -1.*t4635*t1405;
  t9088 = t1030*t8493;
  t9089 = t1086*t8026;
  t9090 = t9085 + t9088 + t9089;
  t9095 = -0.8656776547239999*t3608*t9071;
  t9096 = -0.340999127418*t3608*t9075;
  t9097 = -0.930418*t3523*t9090;
  t9098 = t9095 + t9096 + t9097;
  t9100 = -0.340999127418*t3608*t9071;
  t9101 = -0.134322983001*t3608*t9075;
  t9102 = -0.366501*t3523*t9090;
  t9103 = t9100 + t9101 + t9102;
  t9107 = 0.930418*t3523*t9071;
  t9109 = 0.366501*t3523*t9075;
  t9110 = -1.000000637725*t3608*t9090;
  t9118 = t9107 + t9109 + t9110;
  t9181 = 0.23670515095269612*t4805;
  t9184 = 0.039853038461262744*t4846;
  t9188 = t9181 + t9184;
  t9203 = 0.03707996069223323*t4805;
  t9204 = -0.22023473313910558*t4846;
  t9206 = 6.295460977284962e-8 + t9203 + t9204;
  t9209 = 0.014606169134372047*t4805;
  t9210 = -0.08675267452931407*t4846;
  t9211 = -1.5981976069815686e-7 + t9209 + t9210;
  t9263 = t4469*t9007;
  t9264 = t4428*t9012;
  t9265 = t5215*t9021;
  t9272 = t9263 + t9264 + t9265;
  t9285 = t5366*t9007;
  t9288 = -0.340999127418*t3580*t9012;
  t9289 = t3667*t9021;
  t9290 = t9285 + t9288 + t9289;
  t9292 = -0.340999127418*t3580*t9007;
  t9295 = t5743*t9012;
  t9297 = t3984*t9021;
  t9298 = t9292 + t9295 + t9297;
  t9328 = t4469*t9071;
  t9329 = t4428*t9075;
  t9330 = t5215*t9090;
  t9334 = t9328 + t9329 + t9330;
  t9336 = t5366*t9071;
  t9337 = -0.340999127418*t3580*t9075;
  t9338 = t3667*t9090;
  t9339 = t9336 + t9337 + t9338;
  t9341 = -0.340999127418*t3580*t9071;
  t9343 = t5743*t9075;
  t9345 = t3984*t9090;
  t9348 = t9341 + t9343 + t9345;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=-1.*t1120*t1169*t140 + t1335*t2275 + t2836*t2883 + t3184*t3264 + t3455*t3511 + t3708*t3943 + t4026*t4241 + t4561*t4754 + t5125*t5228 + t5336*t5520 + t5668*t5768 - 0.197083*(-0.340999127418*t4815*t5520 + t5228*t5637 + t5768*t5945) - 0.274521*(t5228*t5309 - 0.340999127418*t4815*t5768 + t5520*t6031) - 0.010507*(t4887*t5520 + t5086*t5768 + t5228*t6111);
  p_output1[10]=t1120*t140*t2103 + t1335*t6273 + t2836*t6312 + t3184*t6377 + t3455*t6399 + t3708*t6423 + t4026*t6450 + t4561*t6526 + t5125*t6613 + t5336*t6674 + t5668*t6762 - 0.274521*(t5309*t6613 + t6031*t6674 - 0.340999127418*t4815*t6762) - 0.010507*(t6111*t6613 + t4887*t6674 + t5086*t6762) - 0.197083*(t5637*t6613 - 0.340999127418*t4815*t6674 + t5945*t6762);
  p_output1[11]=0;
  p_output1[12]=t1335*t1394*t140*t2103 - 1.*t1120*t1405*t2103 + t140*t2103*t2108*t2836 + t3184*t6935 + t3455*t6955 + t3708*t6981 + t4026*t7004 + t4561*t7021 + t5125*t7054 + t5336*t7083 + t5668*t7098 - 0.274521*(t5309*t7054 + t6031*t7083 - 0.340999127418*t4815*t7098) - 0.010507*(t6111*t7054 + t4887*t7083 + t5086*t7098) - 0.197083*(t5637*t7054 - 0.340999127418*t4815*t7083 + t5945*t7098);
  p_output1[13]=t1169*t1335*t1394*t140 - 1.*t1120*t1169*t1405 + t1169*t140*t2108*t2836 + t3184*t7174 + t3455*t7182 + t3708*t7207 + t4026*t7230 + t4561*t7245 + t5125*t7266 + t5336*t7282 + t5668*t7293 - 0.274521*(t5309*t7266 + t6031*t7282 - 0.340999127418*t4815*t7293) - 0.010507*(t6111*t7266 + t4887*t7282 + t5086*t7293) - 0.197083*(t5637*t7266 - 0.340999127418*t4815*t7282 + t5945*t7293);
  p_output1[14]=-1.*t1120*t140 - 1.*t1335*t1394*t1405 - 1.*t1405*t2108*t2836 + t3184*t7359 + t3455*t7398 + t3708*t7440 + t4026*t7465 + t4561*t7479 + t5125*t7499 + t5336*t7515 + t5668*t7528 - 0.274521*(t5309*t7499 + t6031*t7515 - 0.340999127418*t4815*t7528) - 0.010507*(t6111*t7499 + t4887*t7515 + t5086*t7528) - 0.197083*(t5637*t7499 - 0.340999127418*t4815*t7515 + t5945*t7528);
  p_output1[15]=t2836*t6273 + t1335*t7616 + t3455*t7627 + t3184*t7640 + t4026*t7652 + t3708*t7660 + t4561*t7680 + t5125*t7694 + t5336*t7708 + t5668*t7731 - 0.274521*(t5309*t7694 + t6031*t7708 - 0.340999127418*t4815*t7731) - 0.010507*(t6111*t7694 + t4887*t7708 + t5086*t7731) - 0.197083*(t5637*t7694 - 0.340999127418*t4815*t7708 + t5945*t7731);
  p_output1[16]=t1335*t2883 + t2836*t7802 + t3455*t7813 + t3184*t7837 + t4026*t7847 + t3708*t7856 + t4561*t7880 + t5125*t7892 + t5336*t7914 + t5668*t7945 - 0.274521*(t5309*t7892 + t6031*t7914 - 0.340999127418*t4815*t7945) - 0.010507*(t6111*t7892 + t4887*t7914 + t5086*t7945) - 0.197083*(t5637*t7892 - 0.340999127418*t4815*t7914 + t5945*t7945);
  p_output1[17]=-1.*t1335*t140*t2108 + t1394*t140*t2836 + t3455*t8020 + t3184*t8026 + t4026*t8046 + t3708*t8071 + t4561*t8076 + t5125*t8096 + t5336*t8119 + t5668*t8132 - 0.274521*(t5309*t8096 + t6031*t8119 - 0.340999127418*t4815*t8132) - 0.010507*(t6111*t8096 + t4887*t8119 + t5086*t8132) - 0.197083*(t5637*t8096 - 0.340999127418*t4815*t8119 + t5945*t8132);
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=-0.091*t2341*t6273 - 0.091*t1214*t6312 + t3455*t6377 + t3184*t8199 + t4026*t8203 + t3708*t8212 + t4561*t8217 + t5125*t8236 + t5336*t8246 + t5668*t8256 - 0.274521*(t5309*t8236 + t6031*t8246 - 0.340999127418*t4815*t8256) - 0.010507*(t6111*t8236 + t4887*t8246 + t5086*t8256) - 0.197083*(t5637*t8236 - 0.340999127418*t4815*t8246 + t5945*t8256);
  p_output1[52]=-0.091*t2341*t7802 - 0.091*t1214*t8314 + t3455*t8326 + t3184*t8337 + t4026*t8365 + t3708*t8378 + t4561*t8388 + t5125*t8403 + t5336*t8413 + t5668*t8423 - 0.274521*(t5309*t8403 + t6031*t8413 - 0.340999127418*t4815*t8423) - 0.010507*(t6111*t8403 + t4887*t8413 + t5086*t8423) - 0.197083*(t5637*t8403 - 0.340999127418*t4815*t8413 + t5945*t8423);
  p_output1[53]=-0.091*t1214*t140*t2108 - 0.091*t1394*t140*t2341 + t3455*t8493 + t3184*t8501 + t4026*t8513 + t3708*t8535 + t4561*t8543 + t5125*t8569 + t5336*t8581 + t5668*t8603 - 0.274521*(t5309*t8569 + t6031*t8581 - 0.340999127418*t4815*t8603) - 0.010507*(t6111*t8569 + t4887*t8581 + t5086*t8603) - 0.197083*(t5637*t8569 - 0.340999127418*t4815*t8581 + t5945*t8603);
  p_output1[54]=t140*t2103*t8640 + t6377*t8645 + t6399*t8650 + t4561*t8655 + t3708*t8663 + t4026*t8673 + t5668*t8695 + t5336*t8705 + t5125*t8715 - 0.274521*(-0.340999127418*t4815*t8695 + t6031*t8705 + t5309*t8715) - 0.197083*(t5945*t8695 - 0.340999127418*t4815*t8705 + t5637*t8715) - 0.010507*(t5086*t8695 + t4887*t8705 + t6111*t8715);
  p_output1[55]=t1169*t140*t8640 + t8326*t8645 + t8650*t8754 + t4561*t8763 + t3708*t8777 + t4026*t8792 + t5668*t8803 + t5336*t8813 + t5125*t8826 - 0.274521*(-0.340999127418*t4815*t8803 + t6031*t8813 + t5309*t8826) - 0.197083*(t5945*t8803 - 0.340999127418*t4815*t8813 + t5637*t8826) - 0.010507*(t5086*t8803 + t4887*t8813 + t6111*t8826);
  p_output1[56]=-1.*t1405*t8640 + t8493*t8645 + t8026*t8650 + t4561*t8871 + t3708*t8886 + t4026*t8900 + t5668*t8913 + t5336*t8918 + t5125*t8924 - 0.274521*(-0.340999127418*t4815*t8913 + t6031*t8918 + t5309*t8924) - 0.197083*(t5945*t8913 - 0.340999127418*t4815*t8918 + t5637*t8924) - 0.010507*(t5086*t8913 + t4887*t8918 + t6111*t8924);
  p_output1[57]=t6423*t8949 + t6450*t8954 + t6526*t8963 + t5336*t8976 + t5668*t8981 + t5125*t8986 - 0.274521*(t6031*t8976 - 0.340999127418*t4815*t8981 + t5309*t8986) - 0.197083*(-0.340999127418*t4815*t8976 + t5945*t8981 + t5637*t8986) - 0.010507*(t4887*t8976 + t5086*t8981 + t6111*t8986);
  p_output1[58]=t8949*t9007 + t8954*t9012 + t8963*t9021 + t5336*t9032 + t5668*t9037 + t5125*t9043 - 0.274521*(t6031*t9032 - 0.340999127418*t4815*t9037 + t5309*t9043) - 0.197083*(-0.340999127418*t4815*t9032 + t5945*t9037 + t5637*t9043) - 0.010507*(t4887*t9032 + t5086*t9037 + t6111*t9043);
  p_output1[59]=t8949*t9071 + t8954*t9075 + t8963*t9090 + t5336*t9098 + t5668*t9103 + t5125*t9118 - 0.274521*(t6031*t9098 - 0.340999127418*t4815*t9103 + t5309*t9118) - 0.197083*(-0.340999127418*t4815*t9098 + t5945*t9103 + t5637*t9118) - 0.010507*(t4887*t9098 + t5086*t9103 + t6111*t9118);
  p_output1[60]=-0.010507*(-1.000000637725*t4846*t6613 - 0.930418*t4805*t6674 - 0.366501*t4805*t6762) - 0.274521*(0.930418*t4805*t6613 - 0.8656776547239999*t4846*t6674 - 0.340999127418*t4846*t6762) - 0.197083*(0.366501*t4805*t6613 - 0.340999127418*t4846*t6674 - 0.134322983001*t4846*t6762) + t6613*t9188 + t6674*t9206 + t6762*t9211;
  p_output1[61]=t9188*t9272 + t9206*t9290 + t9211*t9298 - 0.010507*(-1.000000637725*t4846*t9272 - 0.930418*t4805*t9290 - 0.366501*t4805*t9298) - 0.274521*(0.930418*t4805*t9272 - 0.8656776547239999*t4846*t9290 - 0.340999127418*t4846*t9298) - 0.197083*(0.366501*t4805*t9272 - 0.340999127418*t4846*t9290 - 0.134322983001*t4846*t9298);
  p_output1[62]=t9188*t9334 + t9206*t9339 + t9211*t9348 - 0.010507*(-1.000000637725*t4846*t9334 - 0.930418*t4805*t9339 - 0.366501*t4805*t9348) - 0.274521*(0.930418*t4805*t9334 - 0.8656776547239999*t4846*t9339 - 0.340999127418*t4846*t9348) - 0.197083*(0.366501*t4805*t9334 - 0.340999127418*t4846*t9339 - 0.134322983001*t4846*t9348);
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jp_right_knee_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
