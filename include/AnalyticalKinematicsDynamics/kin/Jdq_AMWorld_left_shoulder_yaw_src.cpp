/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:08:48 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jdq_AMWorld_left_shoulder_yaw_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t403;
  double t572;
  double t595;
  double t674;
  double t17;
  double t624;
  double t938;
  double t1017;
  double t1021;
  double t603;
  double t605;
  double t615;
  double t807;
  double t824;
  double t860;
  double t868;
  double t1268;
  double t1271;
  double t1344;
  double t1354;
  double t1373;
  double t1402;
  double t1442;
  double t1467;
  double t1623;
  double t1698;
  double t1752;
  double t1754;
  double t1769;
  double t1797;
  double t1801;
  double t1816;
  double t2324;
  double t1925;
  double t1972;
  double t2104;
  double t2124;
  double t2141;
  double t2147;
  double t2186;
  double t2221;
  double t1902;
  double t2331;
  double t2338;
  double t2355;
  double t2363;
  double t2427;
  double t2488;
  double t2507;
  double t2636;
  double t32;
  double t205;
  double t1071;
  double t1073;
  double t1692;
  double t1695;
  double t1869;
  double t1881;
  double t1883;
  double t3054;
  double t3131;
  double t3143;
  double t3148;
  double t3214;
  double t3224;
  double t3253;
  double t3267;
  double t3315;
  double t3331;
  double t3397;
  double t3460;
  double t3514;
  double t3529;
  double t3533;
  double t3537;
  double t3551;
  double t3583;
  double t3766;
  double t3776;
  double t3820;
  double t3839;
  double t3939;
  double t3992;
  double t4007;
  double t4015;
  double t2964;
  double t4197;
  double t4263;
  double t4244;
  double t4305;
  double t4314;
  double t4319;
  double t4330;
  double t4331;
  double t4316;
  double t4336;
  double t4366;
  double t4440;
  double t4474;
  double t4477;
  double t4220;
  double t4408;
  double t4496;
  double t4501;
  double t4557;
  double t4582;
  double t4602;
  double t4614;
  double t4668;
  double t4699;
  double t4738;
  double t4745;
  double t5027;
  double t5066;
  double t5091;
  double t5133;
  double t5135;
  double t5137;
  double t5214;
  double t5217;
  double t5220;
  double t5315;
  double t5319;
  double t5355;
  double t5356;
  double t5362;
  double t5378;
  double t5404;
  double t5406;
  double t4526;
  double t4624;
  double t4750;
  double t4801;
  double t4837;
  double t4838;
  double t4910;
  double t4917;
  double t926;
  double t1682;
  double t1838;
  double t1860;
  double t1871;
  double t2254;
  double t2730;
  double t2785;
  double t2827;
  double t2888;
  double t2910;
  double t2925;
  double t2993;
  double t2998;
  double t3034;
  double t3039;
  double t3248;
  double t3470;
  double t3599;
  double t3646;
  double t3764;
  double t3864;
  double t4019;
  double t4042;
  double t4059;
  double t4065;
  double t4089;
  double t4098;
  double t4135;
  double t4143;
  double t4156;
  double t4157;
  double t5672;
  double t5677;
  double t5682;
  double t5713;
  double t5737;
  double t3044;
  double t4179;
  double t4188;
  double t5886;
  double t5901;
  double t5932;
  double t5981;
  double t5986;
  double t6012;
  double t5946;
  double t6013;
  double t6025;
  double t6064;
  double t6080;
  double t6082;
  double t5885;
  double t6062;
  double t6102;
  double t6113;
  double t6175;
  double t6187;
  double t6188;
  double t6199;
  double t6209;
  double t6229;
  double t6230;
  double t6238;
  double t5131;
  double t5154;
  double t5223;
  double t5242;
  double t5310;
  double t5358;
  double t5407;
  double t5417;
  double t5423;
  double t5455;
  double t5504;
  double t5526;
  double t5528;
  double t5566;
  double t5571;
  double t5630;
  double t6154;
  double t6206;
  double t6254;
  double t6257;
  double t6260;
  double t6261;
  double t6266;
  double t6295;
  double t5810;
  double t5813;
  double t5818;
  double t6313;
  double t6316;
  double t6317;
  double t6318;
  double t6321;
  double t6433;
  double t6434;
  double t6439;
  double t6446;
  double t6457;
  double t6460;
  double t6428;
  double t6440;
  double t6474;
  double t6475;
  double t6510;
  double t6518;
  double t6520;
  double t6524;
  double t6527;
  double t6528;
  double t6530;
  double t6544;
  double t6480;
  double t6526;
  double t6548;
  double t6550;
  double t6576;
  double t6578;
  double t6586;
  double t6588;
  double t6607;
  double t6612;
  double t6613;
  double t6627;
  double t6631;
  double t4835;
  double t4930;
  double t5012;
  double t5738;
  double t5768;
  double t5798;
  double t6750;
  double t6758;
  double t6767;
  double t6796;
  double t6808;
  double t6809;
  double t5821;
  double t5836;
  double t5849;
  double t6791;
  double t6852;
  double t6853;
  double t6258;
  double t6298;
  double t6300;
  double t6871;
  double t6875;
  double t6877;
  double t6348;
  double t6349;
  double t6351;
  double t6882;
  double t6892;
  double t6901;
  double t6355;
  double t6388;
  double t6402;
  double t6557;
  double t6593;
  double t6598;
  double t6644;
  double t6659;
  double t6671;
  double t6701;
  double t6702;
  double t6703;
  double t6988;
  double t7002;
  double t7005;
  double t7028;
  double t7058;
  double t7062;
  double t7145;
  double t7150;
  double t7157;
  double t7159;
  double t7164;
  double t7166;
  double t7170;
  double t7189;
  double t7162;
  double t7203;
  double t7208;
  double t7254;
  double t7256;
  double t7274;
  double t7283;
  double t7288;
  double t7296;
  double t7300;
  double t7382;
  double t7385;
  double t7387;
  double t7395;
  double t7400;
  double t7404;
  double t7389;
  double t7406;
  double t7415;
  double t7428;
  double t7430;
  double t7432;
  double t7448;
  double t7455;
  double t7462;
  t403 = Cos(var1[15]);
  t572 = -1.*t403;
  t595 = 1. + t572;
  t674 = Sin(var1[15]);
  t17 = Sin(var1[14]);
  t624 = -0.051978134642000004*t595;
  t938 = Cos(var1[14]);
  t1017 = -1.*t938;
  t1021 = 1. + t1017;
  t603 = -0.9945383682050002*t595;
  t605 = 1. + t603;
  t615 = -0.994522*t605;
  t807 = -0.707107*t674;
  t824 = t624 + t807;
  t860 = -0.104528*t824;
  t868 = t615 + t860;
  t1268 = -0.49726168403800003*t595;
  t1271 = 0.073913*t674;
  t1344 = t1268 + t1271;
  t1354 = -0.104528*t1344;
  t1373 = 0.05226439969100001*t595;
  t1402 = 0.703234*t674;
  t1442 = t1373 + t1402;
  t1467 = -0.994522*t1442;
  t1623 = t1354 + t1467;
  t1698 = -0.5054634410180001*t595;
  t1752 = 1. + t1698;
  t1754 = -0.104528*t1752;
  t1769 = 0.707107*t674;
  t1797 = t624 + t1769;
  t1801 = -0.994522*t1797;
  t1816 = t1754 + t1801;
  t2324 = Sin(var1[13]);
  t1925 = 0.103955395616*t1021*t868;
  t1972 = -0.994522*t17;
  t2104 = 0. + t1972;
  t2124 = t2104*t1623;
  t2141 = -0.9890740084840001*t1021;
  t2147 = 1. + t2141;
  t2186 = t2147*t1816;
  t2221 = 0. + t1925 + t2124 + t2186;
  t1902 = Cos(var1[13]);
  t2331 = -0.010926102783999999*t1021;
  t2338 = 1. + t2331;
  t2355 = t2338*t868;
  t2363 = 0.104528*t17;
  t2427 = 0. + t2363;
  t2488 = t2427*t1623;
  t2507 = 0.103955395616*t1021*t1816;
  t2636 = 0. + t2355 + t2488 + t2507;
  t32 = -0.104528*t17;
  t205 = 0. + t32;
  t1071 = -1.0000001112680001*t1021;
  t1073 = 1. + t1071;
  t1692 = 0.994522*t17;
  t1695 = 0. + t1692;
  t1869 = Sin(var1[4]);
  t1881 = Cos(var1[4]);
  t1883 = Cos(var1[5]);
  t3054 = 0.073913*t605;
  t3131 = -0.703234*t824;
  t3143 = -0.703234*t674;
  t3148 = t1373 + t3143;
  t3214 = 0.707107*t3148;
  t3224 = t3054 + t3131 + t3214;
  t3253 = -0.500001190325*t595;
  t3267 = 1. + t3253;
  t3315 = 0.707107*t3267;
  t3331 = -0.703234*t1344;
  t3397 = 0.073913*t1442;
  t3460 = t3315 + t3331 + t3397;
  t3514 = -0.703234*t1752;
  t3529 = -0.073913*t674;
  t3533 = t1268 + t3529;
  t3537 = 0.707107*t3533;
  t3551 = 0.073913*t1797;
  t3583 = t3514 + t3537 + t3551;
  t3766 = 0.103955395616*t1021*t3224;
  t3776 = t2104*t3460;
  t3820 = t2147*t3583;
  t3839 = 0. + t3766 + t3776 + t3820;
  t3939 = t2338*t3224;
  t3992 = t2427*t3460;
  t4007 = 0.103955395616*t1021*t3583;
  t4015 = 0. + t3939 + t3992 + t4007;
  t2964 = Sin(var1[5]);
  t4197 = Cos(var1[3]);
  t4263 = Sin(var1[3]);
  t4244 = t4197*t1883*t1869;
  t4305 = t4263*t2964;
  t4314 = t4244 + t4305;
  t4319 = -1.*t1883*t4263;
  t4330 = t4197*t1869*t2964;
  t4331 = t4319 + t4330;
  t4316 = -1.*t2324*t4314;
  t4336 = t1902*t4331;
  t4366 = t4316 + t4336;
  t4440 = t1902*t4314;
  t4474 = t2324*t4331;
  t4477 = t4440 + t4474;
  t4220 = t4197*t1881*t1695;
  t4408 = 0.103955395616*t1021*t4366;
  t4496 = t2147*t4477;
  t4501 = t4220 + t4408 + t4496;
  t4557 = t4197*t1881*t205;
  t4582 = t2338*t4366;
  t4602 = 0.103955395616*t1021*t4477;
  t4614 = t4557 + t4582 + t4602;
  t4668 = t1073*t4197*t1881;
  t4699 = t2427*t4366;
  t4738 = t2104*t4477;
  t4745 = t4668 + t4699 + t4738;
  t5027 = -0.073913*t605;
  t5066 = 0.703234*t824;
  t5091 = t5027 + t5066 + t3214;
  t5133 = 0.703234*t1344;
  t5135 = -0.073913*t1442;
  t5137 = t3315 + t5133 + t5135;
  t5214 = 0.703234*t1752;
  t5217 = -0.073913*t1797;
  t5220 = t5214 + t3537 + t5217;
  t5315 = 0.103955395616*t1021*t5091;
  t5319 = t2104*t5137;
  t5355 = t2147*t5220;
  t5356 = 0. + t5315 + t5319 + t5355;
  t5362 = t2338*t5091;
  t5378 = t2427*t5137;
  t5404 = 0.103955395616*t1021*t5220;
  t5406 = 0. + t5362 + t5378 + t5404;
  t4526 = t1752*t4501;
  t4624 = t824*t4614;
  t4750 = t1344*t4745;
  t4801 = t4526 + t4624 + t4750;
  t4837 = t1797*t4501;
  t4838 = t605*t4614;
  t4910 = t1442*t4745;
  t4917 = t4837 + t4838 + t4910;
  t926 = t205*t868;
  t1682 = t1073*t1623;
  t1838 = t1695*t1816;
  t1860 = 0. + t926 + t1682 + t1838;
  t1871 = -1.*t1860*t1869;
  t2254 = t1902*t2221;
  t2730 = -1.*t2324*t2636;
  t2785 = 0. + t2254 + t2730;
  t2827 = t1883*t2785;
  t2888 = t2324*t2221;
  t2910 = t1902*t2636;
  t2925 = 0. + t2888 + t2910;
  t2993 = t2925*t2964;
  t2998 = 0. + t2827 + t2993;
  t3034 = t1881*t2998;
  t3039 = 0. + t1871 + t3034;
  t3248 = t205*t3224;
  t3470 = t1073*t3460;
  t3599 = t1695*t3583;
  t3646 = 0. + t3248 + t3470 + t3599;
  t3764 = -1.*t3646*t1869;
  t3864 = t1902*t3839;
  t4019 = -1.*t2324*t4015;
  t4042 = 0. + t3864 + t4019;
  t4059 = t1883*t4042;
  t4065 = t2324*t3839;
  t4089 = t1902*t4015;
  t4098 = 0. + t4065 + t4089;
  t4135 = t4098*t2964;
  t4143 = 0. + t4059 + t4135;
  t4156 = t1881*t4143;
  t4157 = 0. + t3764 + t4156;
  t5672 = t3533*t4501;
  t5677 = t3148*t4614;
  t5682 = t3267*t4745;
  t5713 = t5672 + t5677 + t5682;
  t5737 = 0.707107*t5713;
  t3044 = 0.007*t3039;
  t4179 = 0.00002*t4157;
  t4188 = t3044 + t4179;
  t5886 = t1883*t4263*t1869;
  t5901 = -1.*t4197*t2964;
  t5932 = t5886 + t5901;
  t5981 = t4197*t1883;
  t5986 = t4263*t1869*t2964;
  t6012 = t5981 + t5986;
  t5946 = -1.*t2324*t5932;
  t6013 = t1902*t6012;
  t6025 = t5946 + t6013;
  t6064 = t1902*t5932;
  t6080 = t2324*t6012;
  t6082 = t6064 + t6080;
  t5885 = t1881*t1695*t4263;
  t6062 = 0.103955395616*t1021*t6025;
  t6102 = t2147*t6082;
  t6113 = t5885 + t6062 + t6102;
  t6175 = t1881*t205*t4263;
  t6187 = t2338*t6025;
  t6188 = 0.103955395616*t1021*t6082;
  t6199 = t6175 + t6187 + t6188;
  t6209 = t1073*t1881*t4263;
  t6229 = t2427*t6025;
  t6230 = t2104*t6082;
  t6238 = t6209 + t6229 + t6230;
  t5131 = t205*t5091;
  t5154 = t1073*t5137;
  t5223 = t1695*t5220;
  t5242 = 0. + t5131 + t5154 + t5223;
  t5310 = -1.*t5242*t1869;
  t5358 = t1902*t5356;
  t5407 = -1.*t2324*t5406;
  t5417 = 0. + t5358 + t5407;
  t5423 = t1883*t5417;
  t5455 = t2324*t5356;
  t5504 = t1902*t5406;
  t5526 = 0. + t5455 + t5504;
  t5528 = t5526*t2964;
  t5566 = 0. + t5423 + t5528;
  t5571 = t1881*t5566;
  t5630 = 0. + t5310 + t5571;
  t6154 = t1752*t6113;
  t6206 = t824*t6199;
  t6254 = t1344*t6238;
  t6257 = t6154 + t6206 + t6254;
  t6260 = t1797*t6113;
  t6261 = t605*t6199;
  t6266 = t1442*t6238;
  t6295 = t6260 + t6261 + t6266;
  t5810 = 0.00002*t3039;
  t5813 = 0.00067*t4157;
  t5818 = t5810 + t5813;
  t6313 = t3533*t6113;
  t6316 = t3148*t6199;
  t6317 = t3267*t6238;
  t6318 = t6313 + t6316 + t6317;
  t6321 = 0.707107*t6318;
  t6433 = -1.*t1881*t1883*t2324;
  t6434 = t1902*t1881*t2964;
  t6439 = t6433 + t6434;
  t6446 = t1902*t1881*t1883;
  t6457 = t1881*t2324*t2964;
  t6460 = t6446 + t6457;
  t6428 = -1.*t1695*t1869;
  t6440 = 0.103955395616*t1021*t6439;
  t6474 = t2147*t6460;
  t6475 = t6428 + t6440 + t6474;
  t6510 = -1.*t205*t1869;
  t6518 = t2338*t6439;
  t6520 = 0.103955395616*t1021*t6460;
  t6524 = t6510 + t6518 + t6520;
  t6527 = -1.*t1073*t1869;
  t6528 = t2427*t6439;
  t6530 = t2104*t6460;
  t6544 = t6527 + t6528 + t6530;
  t6480 = t1752*t6475;
  t6526 = t824*t6524;
  t6548 = t1344*t6544;
  t6550 = t6480 + t6526 + t6548;
  t6576 = t1797*t6475;
  t6578 = t605*t6524;
  t6586 = t1442*t6544;
  t6588 = t6576 + t6578 + t6586;
  t6607 = t3533*t6475;
  t6612 = t3148*t6524;
  t6613 = t3267*t6544;
  t6627 = t6607 + t6612 + t6613;
  t6631 = 0.707107*t6627;
  t4835 = -0.104528*t4801;
  t4930 = -0.994522*t4917;
  t5012 = t4835 + t4930;
  t5738 = 0.703234*t4801;
  t5768 = -0.073913*t4917;
  t5798 = t5737 + t5738 + t5768;
  t6750 = t1883*t2925;
  t6758 = -1.*t2785*t2964;
  t6767 = 0. + t6750 + t6758;
  t6796 = t1883*t4098;
  t6808 = -1.*t4042*t2964;
  t6809 = 0. + t6796 + t6808;
  t5821 = -0.703234*t4801;
  t5836 = 0.073913*t4917;
  t5849 = t5737 + t5821 + t5836;
  t6791 = 0.007*t6767;
  t6852 = 0.00002*t6809;
  t6853 = t6791 + t6852;
  t6258 = -0.104528*t6257;
  t6298 = -0.994522*t6295;
  t6300 = t6258 + t6298;
  t6871 = t1883*t5526;
  t6875 = -1.*t5417*t2964;
  t6877 = 0. + t6871 + t6875;
  t6348 = 0.703234*t6257;
  t6349 = -0.073913*t6295;
  t6351 = t6321 + t6348 + t6349;
  t6882 = 0.00002*t6767;
  t6892 = 0.00067*t6809;
  t6901 = t6882 + t6892;
  t6355 = -0.703234*t6257;
  t6388 = 0.073913*t6295;
  t6402 = t6321 + t6355 + t6388;
  t6557 = -0.104528*t6550;
  t6593 = -0.994522*t6588;
  t6598 = t6557 + t6593;
  t6644 = 0.703234*t6550;
  t6659 = -0.073913*t6588;
  t6671 = t6631 + t6644 + t6659;
  t6701 = -0.703234*t6550;
  t6702 = 0.073913*t6588;
  t6703 = t6631 + t6701 + t6702;
  t6988 = 0.007*t1860;
  t7002 = 0.00002*t3646;
  t7005 = t6988 + t7002;
  t7028 = 0.00002*t1860;
  t7058 = 0.00067*t3646;
  t7062 = t7028 + t7058;
  t7145 = -1.*t205*t868;
  t7150 = -1.*t1073*t1623;
  t7157 = -1.*t1695*t1816;
  t7159 = 0. + t7145 + t7150 + t7157;
  t7164 = -1.*t205*t3224;
  t7166 = -1.*t1073*t3460;
  t7170 = -1.*t1695*t3583;
  t7189 = 0. + t7164 + t7166 + t7170;
  t7162 = 0.007*t7159;
  t7203 = 0.00002*t7189;
  t7208 = t7162 + t7203;
  t7254 = -1.*t205*t5091;
  t7256 = -1.*t1073*t5137;
  t7274 = -1.*t1695*t5220;
  t7283 = 0. + t7254 + t7256 + t7274;
  t7288 = 0.00002*t7159;
  t7296 = 0.00067*t7189;
  t7300 = t7288 + t7296;
  t7382 = 0.994522*t868;
  t7385 = 0.104528*t1816;
  t7387 = 0. + t7382 + t7385;
  t7395 = 0.994522*t3224;
  t7400 = 0.104528*t3583;
  t7404 = 0. + t7395 + t7400;
  t7389 = 0.007*t7387;
  t7406 = 0.00002*t7404;
  t7415 = t7389 + t7406;
  t7428 = 0.994522*t5091;
  t7430 = 0.104528*t5220;
  t7432 = 0. + t7428 + t7430;
  t7448 = 0.00002*t7387;
  t7455 = 0.00067*t7404;
  t7462 = t7448 + t7455;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=t4188*t5012 + 0.00697*t5630*t5798 + t5818*t5849;
  p_output1[10]=t4188*t6300 + 0.00697*t5630*t6351 + t5818*t6402;
  p_output1[11]=t4188*t6598 + 0.00697*t5630*t6671 + t5818*t6703;
  p_output1[12]=t5012*t6853 + 0.00697*t5798*t6877 + t5849*t6901;
  p_output1[13]=t6300*t6853 + 0.00697*t6351*t6877 + t6402*t6901;
  p_output1[14]=t6598*t6853 + 0.00697*t6671*t6877 + t6703*t6901;
  p_output1[15]=0.00697*t5242*t5798 + t5012*t7005 + t5849*t7062;
  p_output1[16]=0.00697*t5242*t6351 + t6300*t7005 + t6402*t7062;
  p_output1[17]=0.00697*t5242*t6671 + t6598*t7005 + t6703*t7062;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t5012*t7208 + 0.00697*t5798*t7283 + t5849*t7300;
  p_output1[40]=t6300*t7208 + 0.00697*t6351*t7283 + t6402*t7300;
  p_output1[41]=t6598*t7208 + 0.00697*t6671*t7283 + t6703*t7300;
  p_output1[42]=t5012*t7415 + 0.00697*t5798*t7432 + t5849*t7462;
  p_output1[43]=t6300*t7415 + 0.00697*t6351*t7432 + t6402*t7462;
  p_output1[44]=t6598*t7415 + 0.00697*t6671*t7432 + t6703*t7462;
  p_output1[45]=0.000019996802757479972*t5012 - 6.139705719830357e-9*t5798 + 0.0006700009956279001*t5849;
  p_output1[46]=0.000019996802757479972*t6300 - 6.139705719830357e-9*t6351 + 0.0006700009956279001*t6402;
  p_output1[47]=0.000019996802757479972*t6598 - 6.139705719830357e-9*t6671 + 0.0006700009956279001*t6703;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jdq_AMWorld_left_shoulder_yaw_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
