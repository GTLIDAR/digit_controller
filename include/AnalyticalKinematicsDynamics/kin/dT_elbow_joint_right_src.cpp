/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:55:49 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dT_elbow_joint_right_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t498;
  double t772;
  double t655;
  double t671;
  double t748;
  double t945;
  double t892;
  double t914;
  double t953;
  double t83;
  double t87;
  double t365;
  double t377;
  double t499;
  double t594;
  double t922;
  double t996;
  double t1049;
  double t1107;
  double t1108;
  double t1110;
  double t508;
  double t515;
  double t596;
  double t1078;
  double t1079;
  double t1101;
  double t1175;
  double t1177;
  double t1295;
  double t1301;
  double t1372;
  double t1373;
  double t1398;
  double t1402;
  double t1415;
  double t1417;
  double t371;
  double t1441;
  double t1455;
  double t1538;
  double t1545;
  double t1548;
  double t1551;
  double t1554;
  double t1576;
  double t1591;
  double t1597;
  double t1637;
  double t1653;
  double t1697;
  double t1740;
  double t1246;
  double t10;
  double t456;
  double t470;
  double t1215;
  double t1292;
  double t1293;
  double t1419;
  double t1427;
  double t1429;
  double t1609;
  double t1627;
  double t1709;
  double t1710;
  double t1731;
  double t1745;
  double t1747;
  double t1768;
  double t1775;
  double t1786;
  double t1790;
  double t1814;
  double t1859;
  double t1873;
  double t1876;
  double t1886;
  double t1906;
  double t1912;
  double t1941;
  double t1944;
  double t1976;
  double t1978;
  double t45;
  double t64;
  double t2322;
  double t2281;
  double t2328;
  double t2339;
  double t2352;
  double t2353;
  double t2359;
  double t2351;
  double t2365;
  double t2374;
  double t2389;
  double t2401;
  double t2404;
  double t2380;
  double t2408;
  double t2410;
  double t2429;
  double t2430;
  double t2431;
  double t2435;
  double t2458;
  double t2459;
  double t1853;
  double t1858;
  double t2009;
  double t2024;
  double t2422;
  double t2434;
  double t2461;
  double t2489;
  double t2033;
  double t2041;
  double t2555;
  double t2569;
  double t2586;
  double t2589;
  double t2628;
  double t2630;
  double t2633;
  double t2638;
  double t2148;
  double t2155;
  double t2204;
  double t2225;
  double t2241;
  double t2243;
  double t2797;
  double t2799;
  double t2809;
  double t2788;
  double t2810;
  double t2811;
  double t2822;
  double t2825;
  double t2827;
  double t2820;
  double t2828;
  double t2829;
  double t2845;
  double t2859;
  double t2866;
  double t2907;
  double t2913;
  double t2914;
  double t2832;
  double t2899;
  double t2918;
  double t2922;
  double t2940;
  double t2944;
  double t2948;
  double t2949;
  double t2962;
  double t3010;
  double t3021;
  double t3035;
  double t3159;
  double t3169;
  double t3153;
  double t3170;
  double t3180;
  double t3187;
  double t3189;
  double t3197;
  double t3215;
  double t3227;
  double t3229;
  double t3239;
  double t3242;
  double t3186;
  double t3219;
  double t3262;
  double t3267;
  double t3284;
  double t3297;
  double t3299;
  double t3303;
  double t3308;
  double t3323;
  double t3328;
  double t3329;
  double t3445;
  double t3458;
  double t3488;
  double t3439;
  double t3444;
  double t3450;
  double t3454;
  double t3457;
  double t3461;
  double t3462;
  double t3469;
  double t3472;
  double t3475;
  double t3477;
  double t3479;
  double t3481;
  double t3493;
  double t3495;
  double t3504;
  double t3517;
  double t3518;
  double t3528;
  double t3532;
  double t3539;
  double t3543;
  double t3544;
  double t3550;
  double t3626;
  double t3629;
  double t3636;
  double t3638;
  double t3652;
  double t3653;
  double t3655;
  double t3656;
  double t3661;
  double t3668;
  double t3670;
  double t3673;
  double t3645;
  double t3660;
  double t3676;
  double t3679;
  double t3688;
  double t3690;
  double t3696;
  double t3699;
  double t3712;
  double t3719;
  double t3724;
  double t3729;
  double t3859;
  double t3861;
  double t3866;
  double t3882;
  double t3887;
  double t3889;
  double t3870;
  double t3908;
  double t3911;
  double t3917;
  double t3918;
  double t3919;
  double t3854;
  double t3914;
  double t3920;
  double t3923;
  double t3926;
  double t3943;
  double t3946;
  double t3947;
  double t3955;
  double t3957;
  double t3959;
  double t3971;
  double t3925;
  double t3950;
  double t3978;
  double t3991;
  double t3997;
  double t4013;
  double t4015;
  double t4017;
  double t4022;
  double t4029;
  double t4032;
  double t4035;
  double t4126;
  double t4131;
  double t4132;
  double t4138;
  double t4140;
  double t4148;
  double t4122;
  double t4137;
  double t4149;
  double t4150;
  double t4155;
  double t4162;
  double t4165;
  double t4168;
  double t4179;
  double t4180;
  double t4183;
  double t4187;
  double t4154;
  double t4175;
  double t4190;
  double t4194;
  double t4198;
  double t4204;
  double t4206;
  double t4209;
  double t4216;
  double t4221;
  double t4222;
  double t4229;
  double t4382;
  double t4385;
  double t4386;
  double t4390;
  double t4392;
  double t4398;
  double t4399;
  double t4400;
  double t4397;
  double t4403;
  double t4407;
  double t4414;
  double t4417;
  double t4418;
  double t4424;
  double t4425;
  double t4440;
  double t4412;
  double t4420;
  double t4451;
  double t4465;
  double t4483;
  double t4512;
  double t4526;
  double t4541;
  double t4562;
  double t4566;
  double t4586;
  double t4595;
  double t4661;
  double t4663;
  double t4664;
  double t4659;
  double t4669;
  double t4676;
  double t4692;
  double t4699;
  double t4705;
  double t4689;
  double t4706;
  double t4715;
  double t4724;
  double t4726;
  double t4736;
  double t4744;
  double t4747;
  double t4761;
  double t4720;
  double t4739;
  double t4765;
  double t4766;
  double t4785;
  double t4801;
  double t4812;
  double t4833;
  double t4843;
  double t4848;
  double t4854;
  double t4862;
  double t4956;
  double t4960;
  double t4953;
  double t4964;
  double t4965;
  double t4988;
  double t4994;
  double t4997;
  double t5002;
  double t5026;
  double t5034;
  double t5035;
  double t5038;
  double t4984;
  double t5007;
  double t5040;
  double t5048;
  double t5057;
  double t5060;
  double t5062;
  double t5070;
  double t5076;
  double t5081;
  double t5085;
  double t5095;
  double t5167;
  double t5168;
  double t5171;
  double t5174;
  double t5178;
  double t5180;
  double t5184;
  double t5189;
  double t5192;
  double t5194;
  double t5199;
  double t5203;
  double t5260;
  double t5262;
  double t5269;
  double t5276;
  double t5283;
  double t5287;
  double t5291;
  double t5292;
  double t5301;
  double t5302;
  double t5304;
  double t5313;
  double t5280;
  double t5300;
  double t5332;
  double t5333;
  double t5351;
  double t5353;
  double t5355;
  double t5362;
  double t5371;
  double t5375;
  double t5402;
  double t5403;
  double t5491;
  double t5502;
  double t5510;
  double t5515;
  double t5530;
  double t5537;
  double t5513;
  double t5541;
  double t5545;
  double t5555;
  double t5559;
  double t5561;
  double t5568;
  double t5598;
  double t5604;
  double t5553;
  double t5567;
  double t5611;
  double t5622;
  double t5627;
  double t5630;
  double t5639;
  double t5645;
  double t5655;
  double t5670;
  double t5673;
  double t5678;
  double t5780;
  double t5786;
  double t5796;
  double t5816;
  double t5822;
  double t5828;
  double t5803;
  double t5831;
  double t5846;
  double t5860;
  double t5863;
  double t5870;
  double t5875;
  double t5891;
  double t5898;
  double t5847;
  double t5873;
  double t5918;
  double t5921;
  double t5943;
  double t5947;
  double t5953;
  double t5959;
  double t5968;
  double t5974;
  double t5988;
  double t5989;
  double t6059;
  double t6061;
  double t6068;
  double t6076;
  double t6081;
  double t6086;
  double t6089;
  double t6094;
  double t6099;
  double t6106;
  double t6073;
  double t6087;
  double t6108;
  double t6109;
  double t6116;
  double t6128;
  double t6131;
  double t6132;
  double t6140;
  double t6150;
  double t6155;
  double t6158;
  double t6229;
  double t6245;
  double t6248;
  double t6252;
  double t6263;
  double t6267;
  double t6268;
  double t6270;
  double t6280;
  double t6284;
  double t6285;
  double t6286;
  double t6382;
  double t6384;
  double t6385;
  double t6388;
  double t6408;
  double t6410;
  double t6413;
  double t6415;
  double t6418;
  double t6427;
  double t6431;
  double t6434;
  double t6404;
  double t6416;
  double t6439;
  double t6450;
  double t6465;
  double t6467;
  double t6468;
  double t6470;
  double t6478;
  double t6479;
  double t6486;
  double t6488;
  double t6547;
  double t6548;
  double t6563;
  double t6567;
  double t6569;
  double t6581;
  double t6546;
  double t6566;
  double t6583;
  double t6584;
  double t6589;
  double t6590;
  double t6604;
  double t6607;
  double t6616;
  double t6617;
  double t6621;
  double t6628;
  double t6585;
  double t6615;
  double t6632;
  double t6633;
  double t6636;
  double t6638;
  double t6643;
  double t6667;
  double t6672;
  double t6674;
  double t6685;
  double t6688;
  double t1633;
  double t1848;
  double t1991;
  double t1993;
  double t2030;
  double t2070;
  double t2127;
  double t2132;
  double t2168;
  double t2239;
  double t2245;
  double t2247;
  double t2500;
  double t2600;
  double t2644;
  double t2659;
  double t2662;
  double t2669;
  double t2683;
  double t2704;
  double t2724;
  double t2739;
  double t2741;
  double t2744;
  double t2926;
  double t2952;
  double t3046;
  double t3052;
  double t3071;
  double t3074;
  double t3075;
  double t3077;
  double t3086;
  double t3100;
  double t3102;
  double t3106;
  double t3269;
  double t3304;
  double t3335;
  double t3345;
  double t3369;
  double t3376;
  double t3380;
  double t3391;
  double t3394;
  double t3415;
  double t3424;
  double t3425;
  double t3471;
  double t3514;
  double t3554;
  double t3558;
  double t3563;
  double t3564;
  double t3565;
  double t3574;
  double t3586;
  double t3605;
  double t3609;
  double t3614;
  double t3681;
  double t3709;
  double t3762;
  double t3770;
  double t3784;
  double t3790;
  double t3794;
  double t3807;
  double t3810;
  double t3823;
  double t3824;
  double t3825;
  double t3996;
  double t4019;
  double t4046;
  double t4052;
  double t4068;
  double t4072;
  double t4073;
  double t4076;
  double t4085;
  double t4091;
  double t4099;
  double t4102;
  double t4195;
  double t4213;
  double t4231;
  double t4245;
  double t4255;
  double t4257;
  double t4268;
  double t4269;
  double t4288;
  double t4290;
  double t4292;
  double t4306;
  double t4328;
  double t4334;
  double t4337;
  double t4338;
  double t4355;
  double t4360;
  double t4362;
  double t4363;
  double t4365;
  double t4368;
  double t4370;
  double t4372;
  double t4466;
  double t4545;
  double t4597;
  double t4599;
  double t4609;
  double t4610;
  double t4621;
  double t4623;
  double t4628;
  double t4630;
  double t4641;
  double t4642;
  double t4777;
  double t4841;
  double t4880;
  double t4881;
  double t4893;
  double t4899;
  double t4911;
  double t4919;
  double t4927;
  double t4929;
  double t4931;
  double t4937;
  double t5049;
  double t5071;
  double t5098;
  double t5103;
  double t5113;
  double t5115;
  double t5120;
  double t5123;
  double t5127;
  double t5128;
  double t5147;
  double t5149;
  double t5177;
  double t5190;
  double t5210;
  double t5213;
  double t5218;
  double t5220;
  double t5224;
  double t5225;
  double t5235;
  double t5238;
  double t5240;
  double t5243;
  double t5334;
  double t5363;
  double t5406;
  double t5416;
  double t5427;
  double t5431;
  double t5435;
  double t5439;
  double t5445;
  double t5451;
  double t5462;
  double t5466;
  double t5625;
  double t5654;
  double t5688;
  double t5692;
  double t5698;
  double t5702;
  double t5713;
  double t5714;
  double t5725;
  double t5732;
  double t5736;
  double t5761;
  double t5940;
  double t5962;
  double t5993;
  double t5994;
  double t5999;
  double t6014;
  double t6015;
  double t6016;
  double t6031;
  double t6033;
  double t6036;
  double t6039;
  double t6110;
  double t6133;
  double t6161;
  double t6162;
  double t6170;
  double t6171;
  double t6184;
  double t6188;
  double t6193;
  double t6195;
  double t6201;
  double t6209;
  double t6259;
  double t6279;
  double t6293;
  double t6296;
  double t6316;
  double t6317;
  double t6320;
  double t6323;
  double t6329;
  double t6338;
  double t6340;
  double t6342;
  double t6458;
  double t6477;
  double t6493;
  double t6494;
  double t6498;
  double t6499;
  double t6503;
  double t6506;
  double t6511;
  double t6513;
  double t6514;
  double t6532;
  double t6634;
  double t6669;
  double t6690;
  double t6691;
  double t6697;
  double t6698;
  double t6699;
  double t6703;
  double t6707;
  double t6709;
  double t6711;
  double t6715;
  double t7575;
  double t7578;
  double t7670;
  double t7707;
  double t7674;
  double t7620;
  double t7624;
  double t7625;
  double t7581;
  double t7582;
  double t7584;
  double t7646;
  double t7649;
  double t7651;
  double t7660;
  double t7628;
  double t7635;
  double t7637;
  double t7640;
  double t7694;
  double t7702;
  double t7712;
  double t7713;
  double t7715;
  double t7717;
  double t7718;
  double t7663;
  double t7666;
  double t7671;
  double t7673;
  double t7681;
  double t7686;
  double t7688;
  double t7725;
  double t7739;
  double t7741;
  double t7748;
  double t7751;
  double t7767;
  double t7774;
  double t7778;
  double t7780;
  double t7782;
  double t7789;
  double t7798;
  double t7802;
  double t7803;
  double t7804;
  double t7809;
  double t7812;
  double t7814;
  double t7816;
  double t7999;
  double t8032;
  double t8014;
  double t7595;
  double t7600;
  double t7610;
  double t7616;
  double t7886;
  double t7888;
  double t7891;
  double t7894;
  double t7896;
  double t7967;
  double t7969;
  double t7971;
  double t7974;
  double t7975;
  double t7976;
  double t7981;
  double t7984;
  double t7985;
  double t8011;
  double t8013;
  double t8019;
  double t8021;
  double t8022;
  double t8023;
  double t8029;
  double t8031;
  double t8033;
  double t8040;
  double t8041;
  double t8043;
  double t8046;
  double t8047;
  double t8050;
  double t8051;
  double t8052;
  double t8054;
  double t8086;
  double t8087;
  double t8091;
  double t8096;
  double t8097;
  double t8105;
  double t8110;
  double t8111;
  double t8112;
  t498 = Cos(var1[3]);
  t772 = Cos(var1[4]);
  t655 = Cos(var1[25]);
  t671 = -1.*t655;
  t748 = 1. + t671;
  t945 = Cos(var1[24]);
  t892 = Cos(var1[5]);
  t914 = Sin(var1[24]);
  t953 = Sin(var1[5]);
  t83 = Cos(var1[26]);
  t87 = -1.*t83;
  t365 = 1. + t87;
  t377 = Sin(var1[26]);
  t499 = Sin(var1[25]);
  t594 = Sin(var1[4]);
  t922 = -1.*t498*t772*t892*t914;
  t996 = t945*t498*t772*t953;
  t1049 = t922 + t996;
  t1107 = t945*t498*t772*t892;
  t1108 = t498*t772*t914*t953;
  t1110 = t1107 + t1108;
  t508 = -0.994522*t499;
  t515 = 0. + t508;
  t596 = -1.*t498*t515*t594;
  t1078 = -0.103955395616*t748*t1049;
  t1079 = -0.9890740084840001*t748;
  t1101 = 1. + t1079;
  t1175 = t1101*t1110;
  t1177 = t596 + t1078 + t1175;
  t1295 = -0.104528*t499;
  t1301 = 0. + t1295;
  t1372 = -1.*t498*t1301*t594;
  t1373 = -0.010926102783999999*t748;
  t1398 = 1. + t1373;
  t1402 = t1398*t1049;
  t1415 = -0.103955395616*t748*t1110;
  t1417 = t1372 + t1402 + t1415;
  t371 = -0.49726168403800003*t365;
  t1441 = -1.0000001112680001*t748;
  t1455 = 1. + t1441;
  t1538 = -1.*t1455*t498*t594;
  t1545 = 0.104528*t499;
  t1548 = 0. + t1545;
  t1551 = t1548*t1049;
  t1554 = 0.994522*t499;
  t1576 = 0. + t1554;
  t1591 = t1576*t1110;
  t1597 = t1538 + t1551 + t1591;
  t1637 = Cos(var1[27]);
  t1653 = -1.*t1637;
  t1697 = 1. + t1653;
  t1740 = 0.051978134642000004*t365;
  t1246 = -0.05226439969100001*t365;
  t10 = Sin(var1[27]);
  t456 = 0.073913*t377;
  t470 = t371 + t456;
  t1215 = t470*t1177;
  t1292 = -0.703234*t377;
  t1293 = t1246 + t1292;
  t1419 = t1293*t1417;
  t1427 = -0.500001190325*t365;
  t1429 = 1. + t1427;
  t1609 = t1429*t1597;
  t1627 = t1215 + t1419 + t1609;
  t1709 = -0.5054634410180001*t365;
  t1710 = 1. + t1709;
  t1731 = t1710*t1177;
  t1745 = -0.707107*t377;
  t1747 = t1740 + t1745;
  t1768 = t1747*t1417;
  t1775 = -0.073913*t377;
  t1786 = t371 + t1775;
  t1790 = t1786*t1597;
  t1814 = t1731 + t1768 + t1790;
  t1859 = 0.707107*t377;
  t1873 = t1740 + t1859;
  t1876 = t1873*t1177;
  t1886 = -0.9945383682050002*t365;
  t1906 = 1. + t1886;
  t1912 = t1906*t1417;
  t1941 = 0.703234*t377;
  t1944 = t1246 + t1941;
  t1976 = t1944*t1597;
  t1978 = t1876 + t1912 + t1976;
  t45 = -0.104528*t10;
  t64 = 0. + t45;
  t2322 = Sin(var1[3]);
  t2281 = t498*t892*t594;
  t2328 = t2322*t953;
  t2339 = t2281 + t2328;
  t2352 = t892*t2322;
  t2353 = -1.*t498*t594*t953;
  t2359 = t2352 + t2353;
  t2351 = t914*t2339;
  t2365 = t945*t2359;
  t2374 = t2351 + t2365;
  t2389 = t945*t2339;
  t2401 = -1.*t914*t2359;
  t2404 = t2389 + t2401;
  t2380 = -0.103955395616*t748*t2374;
  t2408 = t1398*t2404;
  t2410 = t2380 + t2408;
  t2429 = t1101*t2374;
  t2430 = -0.103955395616*t748*t2404;
  t2431 = t2429 + t2430;
  t2435 = t1576*t2374;
  t2458 = t1548*t2404;
  t2459 = t2435 + t2458;
  t1853 = -0.010926102783999999*t1697;
  t1858 = 1. + t1853;
  t2009 = -0.994522*t10;
  t2024 = 0. + t2009;
  t2422 = t1293*t2410;
  t2434 = t470*t2431;
  t2461 = t1429*t2459;
  t2489 = t2422 + t2434 + t2461;
  t2033 = -0.9890740084840001*t1697;
  t2041 = 1. + t2033;
  t2555 = t1747*t2410;
  t2569 = t1710*t2431;
  t2586 = t1786*t2459;
  t2589 = t2555 + t2569 + t2586;
  t2628 = t1906*t2410;
  t2630 = t1873*t2431;
  t2633 = t1944*t2459;
  t2638 = t2628 + t2630 + t2633;
  t2148 = -1.0000001112680001*t1697;
  t2155 = 1. + t2148;
  t2204 = 0.994522*t10;
  t2225 = 0. + t2204;
  t2241 = 0.104528*t10;
  t2243 = 0. + t2241;
  t2797 = -1.*t892*t2322;
  t2799 = t498*t594*t953;
  t2809 = t2797 + t2799;
  t2788 = -1.*t914*t2339;
  t2810 = t945*t2809;
  t2811 = t2788 + t2810;
  t2822 = -1.*t945*t2339;
  t2825 = -1.*t914*t2809;
  t2827 = t2822 + t2825;
  t2820 = -0.103955395616*t748*t2811;
  t2828 = t1398*t2827;
  t2829 = t2820 + t2828;
  t2845 = t1101*t2811;
  t2859 = -0.103955395616*t748*t2827;
  t2866 = t2845 + t2859;
  t2907 = t1576*t2811;
  t2913 = t1548*t2827;
  t2914 = t2907 + t2913;
  t2832 = t1293*t2829;
  t2899 = t470*t2866;
  t2918 = t1429*t2914;
  t2922 = t2832 + t2899 + t2918;
  t2940 = t1747*t2829;
  t2944 = t1710*t2866;
  t2948 = t1786*t2914;
  t2949 = t2940 + t2944 + t2948;
  t2962 = t1906*t2829;
  t3010 = t1873*t2866;
  t3021 = t1944*t2914;
  t3035 = t2962 + t3010 + t3021;
  t3159 = t914*t2809;
  t3169 = t2389 + t3159;
  t3153 = t498*t772*t515;
  t3170 = t1101*t3169;
  t3180 = t3153 + t2820 + t3170;
  t3187 = t498*t772*t1301;
  t3189 = t1398*t2811;
  t3197 = -0.103955395616*t748*t3169;
  t3215 = t3187 + t3189 + t3197;
  t3227 = t1455*t498*t772;
  t3229 = t1548*t2811;
  t3239 = t1576*t3169;
  t3242 = t3227 + t3229 + t3239;
  t3186 = t470*t3180;
  t3219 = t1293*t3215;
  t3262 = t1429*t3242;
  t3267 = t3186 + t3219 + t3262;
  t3284 = t1710*t3180;
  t3297 = t1747*t3215;
  t3299 = t1786*t3242;
  t3303 = t3284 + t3297 + t3299;
  t3308 = t1873*t3180;
  t3323 = t1906*t3215;
  t3328 = t1944*t3242;
  t3329 = t3308 + t3323 + t3328;
  t3445 = 0.051978134642000004*t377;
  t3458 = -0.49726168403800003*t377;
  t3488 = -0.05226439969100001*t377;
  t3439 = -0.5054634410180001*t377*t3180;
  t3444 = -0.707107*t83;
  t3450 = t3444 + t3445;
  t3454 = t3450*t3215;
  t3457 = -0.073913*t83;
  t3461 = t3457 + t3458;
  t3462 = t3461*t3242;
  t3469 = t3439 + t3454 + t3462;
  t3472 = 0.707107*t83;
  t3475 = t3472 + t3445;
  t3477 = t3475*t3180;
  t3479 = -0.9945383682050002*t377*t3215;
  t3481 = 0.703234*t83;
  t3493 = t3481 + t3488;
  t3495 = t3493*t3242;
  t3504 = t3477 + t3479 + t3495;
  t3517 = 0.073913*t83;
  t3518 = t3517 + t3458;
  t3528 = t3518*t3180;
  t3532 = -0.703234*t83;
  t3539 = t3532 + t3488;
  t3543 = t3539*t3215;
  t3544 = -0.500001190325*t377*t3242;
  t3550 = t3528 + t3543 + t3544;
  t3626 = -1.0000001112680001*t498*t772*t499;
  t3629 = 0.104528*t655*t2811;
  t3636 = 0.994522*t655*t3169;
  t3638 = t3626 + t3629 + t3636;
  t3652 = -0.994522*t655*t498*t772;
  t3653 = -0.103955395616*t499*t2811;
  t3655 = -0.9890740084840001*t499*t3169;
  t3656 = t3652 + t3653 + t3655;
  t3661 = -0.104528*t655*t498*t772;
  t3668 = -0.010926102783999999*t499*t2811;
  t3670 = -0.103955395616*t499*t3169;
  t3673 = t3661 + t3668 + t3670;
  t3645 = t1944*t3638;
  t3660 = t1873*t3656;
  t3676 = t1906*t3673;
  t3679 = t3645 + t3660 + t3676;
  t3688 = t1786*t3638;
  t3690 = t1710*t3656;
  t3696 = t1747*t3673;
  t3699 = t3688 + t3690 + t3696;
  t3712 = t1429*t3638;
  t3719 = t470*t3656;
  t3724 = t1293*t3673;
  t3729 = t3712 + t3719 + t3724;
  t3859 = -1.*t892*t2322*t594;
  t3861 = t498*t953;
  t3866 = t3859 + t3861;
  t3882 = -1.*t498*t892;
  t3887 = -1.*t2322*t594*t953;
  t3889 = t3882 + t3887;
  t3870 = -1.*t914*t3866;
  t3908 = t945*t3889;
  t3911 = t3870 + t3908;
  t3917 = t945*t3866;
  t3918 = t914*t3889;
  t3919 = t3917 + t3918;
  t3854 = -1.*t772*t515*t2322;
  t3914 = -0.103955395616*t748*t3911;
  t3920 = t1101*t3919;
  t3923 = t3854 + t3914 + t3920;
  t3926 = -1.*t772*t1301*t2322;
  t3943 = t1398*t3911;
  t3946 = -0.103955395616*t748*t3919;
  t3947 = t3926 + t3943 + t3946;
  t3955 = -1.*t1455*t772*t2322;
  t3957 = t1548*t3911;
  t3959 = t1576*t3919;
  t3971 = t3955 + t3957 + t3959;
  t3925 = t470*t3923;
  t3950 = t1293*t3947;
  t3978 = t1429*t3971;
  t3991 = t3925 + t3950 + t3978;
  t3997 = t1710*t3923;
  t4013 = t1747*t3947;
  t4015 = t1786*t3971;
  t4017 = t3997 + t4013 + t4015;
  t4022 = t1873*t3923;
  t4029 = t1906*t3947;
  t4032 = t1944*t3971;
  t4035 = t4022 + t4029 + t4032;
  t4126 = -1.*t772*t892*t914*t2322;
  t4131 = t945*t772*t2322*t953;
  t4132 = t4126 + t4131;
  t4138 = t945*t772*t892*t2322;
  t4140 = t772*t914*t2322*t953;
  t4148 = t4138 + t4140;
  t4122 = -1.*t515*t2322*t594;
  t4137 = -0.103955395616*t748*t4132;
  t4149 = t1101*t4148;
  t4150 = t4122 + t4137 + t4149;
  t4155 = -1.*t1301*t2322*t594;
  t4162 = t1398*t4132;
  t4165 = -0.103955395616*t748*t4148;
  t4168 = t4155 + t4162 + t4165;
  t4179 = -1.*t1455*t2322*t594;
  t4180 = t1548*t4132;
  t4183 = t1576*t4148;
  t4187 = t4179 + t4180 + t4183;
  t4154 = t470*t4150;
  t4175 = t1293*t4168;
  t4190 = t1429*t4187;
  t4194 = t4154 + t4175 + t4190;
  t4198 = t1710*t4150;
  t4204 = t1747*t4168;
  t4206 = t1786*t4187;
  t4209 = t4198 + t4204 + t4206;
  t4216 = t1873*t4150;
  t4221 = t1906*t4168;
  t4222 = t1944*t4187;
  t4229 = t4216 + t4221 + t4222;
  t4382 = t892*t2322*t594;
  t4385 = -1.*t498*t953;
  t4386 = t4382 + t4385;
  t4390 = t914*t4386;
  t4392 = t4390 + t3908;
  t4398 = t945*t4386;
  t4399 = -1.*t914*t3889;
  t4400 = t4398 + t4399;
  t4397 = -0.103955395616*t748*t4392;
  t4403 = t1398*t4400;
  t4407 = t4397 + t4403;
  t4414 = t1101*t4392;
  t4417 = -0.103955395616*t748*t4400;
  t4418 = t4414 + t4417;
  t4424 = t1576*t4392;
  t4425 = t1548*t4400;
  t4440 = t4424 + t4425;
  t4412 = t1293*t4407;
  t4420 = t470*t4418;
  t4451 = t1429*t4440;
  t4465 = t4412 + t4420 + t4451;
  t4483 = t1747*t4407;
  t4512 = t1710*t4418;
  t4526 = t1786*t4440;
  t4541 = t4483 + t4512 + t4526;
  t4562 = t1906*t4407;
  t4566 = t1873*t4418;
  t4586 = t1944*t4440;
  t4595 = t4562 + t4566 + t4586;
  t4661 = t498*t892;
  t4663 = t2322*t594*t953;
  t4664 = t4661 + t4663;
  t4659 = -1.*t914*t4386;
  t4669 = t945*t4664;
  t4676 = t4659 + t4669;
  t4692 = -1.*t945*t4386;
  t4699 = -1.*t914*t4664;
  t4705 = t4692 + t4699;
  t4689 = -0.103955395616*t748*t4676;
  t4706 = t1398*t4705;
  t4715 = t4689 + t4706;
  t4724 = t1101*t4676;
  t4726 = -0.103955395616*t748*t4705;
  t4736 = t4724 + t4726;
  t4744 = t1576*t4676;
  t4747 = t1548*t4705;
  t4761 = t4744 + t4747;
  t4720 = t1293*t4715;
  t4739 = t470*t4736;
  t4765 = t1429*t4761;
  t4766 = t4720 + t4739 + t4765;
  t4785 = t1747*t4715;
  t4801 = t1710*t4736;
  t4812 = t1786*t4761;
  t4833 = t4785 + t4801 + t4812;
  t4843 = t1906*t4715;
  t4848 = t1873*t4736;
  t4854 = t1944*t4761;
  t4862 = t4843 + t4848 + t4854;
  t4956 = t914*t4664;
  t4960 = t4398 + t4956;
  t4953 = t772*t515*t2322;
  t4964 = t1101*t4960;
  t4965 = t4953 + t4689 + t4964;
  t4988 = t772*t1301*t2322;
  t4994 = t1398*t4676;
  t4997 = -0.103955395616*t748*t4960;
  t5002 = t4988 + t4994 + t4997;
  t5026 = t1455*t772*t2322;
  t5034 = t1548*t4676;
  t5035 = t1576*t4960;
  t5038 = t5026 + t5034 + t5035;
  t4984 = t470*t4965;
  t5007 = t1293*t5002;
  t5040 = t1429*t5038;
  t5048 = t4984 + t5007 + t5040;
  t5057 = t1710*t4965;
  t5060 = t1747*t5002;
  t5062 = t1786*t5038;
  t5070 = t5057 + t5060 + t5062;
  t5076 = t1873*t4965;
  t5081 = t1906*t5002;
  t5085 = t1944*t5038;
  t5095 = t5076 + t5081 + t5085;
  t5167 = -0.5054634410180001*t377*t4965;
  t5168 = t3450*t5002;
  t5171 = t3461*t5038;
  t5174 = t5167 + t5168 + t5171;
  t5178 = t3475*t4965;
  t5180 = -0.9945383682050002*t377*t5002;
  t5184 = t3493*t5038;
  t5189 = t5178 + t5180 + t5184;
  t5192 = t3518*t4965;
  t5194 = t3539*t5002;
  t5199 = -0.500001190325*t377*t5038;
  t5203 = t5192 + t5194 + t5199;
  t5260 = -1.0000001112680001*t772*t499*t2322;
  t5262 = 0.104528*t655*t4676;
  t5269 = 0.994522*t655*t4960;
  t5276 = t5260 + t5262 + t5269;
  t5283 = -0.994522*t655*t772*t2322;
  t5287 = -0.103955395616*t499*t4676;
  t5291 = -0.9890740084840001*t499*t4960;
  t5292 = t5283 + t5287 + t5291;
  t5301 = -0.104528*t655*t772*t2322;
  t5302 = -0.010926102783999999*t499*t4676;
  t5304 = -0.103955395616*t499*t4960;
  t5313 = t5301 + t5302 + t5304;
  t5280 = t1944*t5276;
  t5300 = t1873*t5292;
  t5332 = t1906*t5313;
  t5333 = t5280 + t5300 + t5332;
  t5351 = t1786*t5276;
  t5353 = t1710*t5292;
  t5355 = t1747*t5313;
  t5362 = t5351 + t5353 + t5355;
  t5371 = t1429*t5276;
  t5375 = t470*t5292;
  t5402 = t1293*t5313;
  t5403 = t5371 + t5375 + t5402;
  t5491 = -1.*t772*t892*t914;
  t5502 = t945*t772*t953;
  t5510 = t5491 + t5502;
  t5515 = -1.*t945*t772*t892;
  t5530 = -1.*t772*t914*t953;
  t5537 = t5515 + t5530;
  t5513 = -0.103955395616*t748*t5510;
  t5541 = t1398*t5537;
  t5545 = t5513 + t5541;
  t5555 = t1101*t5510;
  t5559 = -0.103955395616*t748*t5537;
  t5561 = t5555 + t5559;
  t5568 = t1576*t5510;
  t5598 = t1548*t5537;
  t5604 = t5568 + t5598;
  t5553 = t1293*t5545;
  t5567 = t470*t5561;
  t5611 = t1429*t5604;
  t5622 = t5553 + t5567 + t5611;
  t5627 = t1747*t5545;
  t5630 = t1710*t5561;
  t5639 = t1786*t5604;
  t5645 = t5627 + t5630 + t5639;
  t5655 = t1906*t5545;
  t5670 = t1873*t5561;
  t5673 = t1944*t5604;
  t5678 = t5655 + t5670 + t5673;
  t5780 = t772*t892*t914;
  t5786 = -1.*t945*t772*t953;
  t5796 = t5780 + t5786;
  t5816 = t945*t772*t892;
  t5822 = t772*t914*t953;
  t5828 = t5816 + t5822;
  t5803 = -0.103955395616*t748*t5796;
  t5831 = t1398*t5828;
  t5846 = t5803 + t5831;
  t5860 = t1101*t5796;
  t5863 = -0.103955395616*t748*t5828;
  t5870 = t5860 + t5863;
  t5875 = t1576*t5796;
  t5891 = t1548*t5828;
  t5898 = t5875 + t5891;
  t5847 = t1293*t5846;
  t5873 = t470*t5870;
  t5918 = t1429*t5898;
  t5921 = t5847 + t5873 + t5918;
  t5943 = t1747*t5846;
  t5947 = t1710*t5870;
  t5953 = t1786*t5898;
  t5959 = t5943 + t5947 + t5953;
  t5968 = t1906*t5846;
  t5974 = t1873*t5870;
  t5988 = t1944*t5898;
  t5989 = t5968 + t5974 + t5988;
  t6059 = -1.*t515*t594;
  t6061 = t1101*t5828;
  t6068 = t6059 + t5513 + t6061;
  t6076 = -1.*t1301*t594;
  t6081 = t1398*t5510;
  t6086 = t6076 + t6081 + t5863;
  t6089 = -1.*t1455*t594;
  t6094 = t1548*t5510;
  t6099 = t1576*t5828;
  t6106 = t6089 + t6094 + t6099;
  t6073 = t470*t6068;
  t6087 = t1293*t6086;
  t6108 = t1429*t6106;
  t6109 = t6073 + t6087 + t6108;
  t6116 = t1710*t6068;
  t6128 = t1747*t6086;
  t6131 = t1786*t6106;
  t6132 = t6116 + t6128 + t6131;
  t6140 = t1873*t6068;
  t6150 = t1906*t6086;
  t6155 = t1944*t6106;
  t6158 = t6140 + t6150 + t6155;
  t6229 = -0.5054634410180001*t377*t6068;
  t6245 = t3450*t6086;
  t6248 = t3461*t6106;
  t6252 = t6229 + t6245 + t6248;
  t6263 = t3475*t6068;
  t6267 = -0.9945383682050002*t377*t6086;
  t6268 = t3493*t6106;
  t6270 = t6263 + t6267 + t6268;
  t6280 = t3518*t6068;
  t6284 = t3539*t6086;
  t6285 = -0.500001190325*t377*t6106;
  t6286 = t6280 + t6284 + t6285;
  t6382 = 1.0000001112680001*t499*t594;
  t6384 = 0.104528*t655*t5510;
  t6385 = 0.994522*t655*t5828;
  t6388 = t6382 + t6384 + t6385;
  t6408 = 0.994522*t655*t594;
  t6410 = -0.103955395616*t499*t5510;
  t6413 = -0.9890740084840001*t499*t5828;
  t6415 = t6408 + t6410 + t6413;
  t6418 = 0.104528*t655*t594;
  t6427 = -0.010926102783999999*t499*t5510;
  t6431 = -0.103955395616*t499*t5828;
  t6434 = t6418 + t6427 + t6431;
  t6404 = t1944*t6388;
  t6416 = t1873*t6415;
  t6439 = t1906*t6434;
  t6450 = t6404 + t6416 + t6439;
  t6465 = t1786*t6388;
  t6467 = t1710*t6415;
  t6468 = t1747*t6434;
  t6470 = t6465 + t6467 + t6468;
  t6478 = t1429*t6388;
  t6479 = t470*t6415;
  t6486 = t1293*t6434;
  t6488 = t6478 + t6479 + t6486;
  t6547 = t892*t914*t594;
  t6548 = -1.*t945*t594*t953;
  t6563 = t6547 + t6548;
  t6567 = -1.*t945*t892*t594;
  t6569 = -1.*t914*t594*t953;
  t6581 = t6567 + t6569;
  t6546 = -1.*t772*t515;
  t6566 = -0.103955395616*t748*t6563;
  t6583 = t1101*t6581;
  t6584 = t6546 + t6566 + t6583;
  t6589 = -1.*t772*t1301;
  t6590 = t1398*t6563;
  t6604 = -0.103955395616*t748*t6581;
  t6607 = t6589 + t6590 + t6604;
  t6616 = -1.*t1455*t772;
  t6617 = t1548*t6563;
  t6621 = t1576*t6581;
  t6628 = t6616 + t6617 + t6621;
  t6585 = t470*t6584;
  t6615 = t1293*t6607;
  t6632 = t1429*t6628;
  t6633 = t6585 + t6615 + t6632;
  t6636 = t1710*t6584;
  t6638 = t1747*t6607;
  t6643 = t1786*t6628;
  t6667 = t6636 + t6638 + t6643;
  t6672 = t1873*t6584;
  t6674 = t1906*t6607;
  t6685 = t1944*t6628;
  t6688 = t6672 + t6674 + t6685;
  t1633 = t64*t1627;
  t1848 = -0.103955395616*t1697*t1814;
  t1991 = t1858*t1978;
  t1993 = t1633 + t1848 + t1991;
  t2030 = t2024*t1627;
  t2070 = t2041*t1814;
  t2127 = -0.103955395616*t1697*t1978;
  t2132 = t2030 + t2070 + t2127;
  t2168 = t2155*t1627;
  t2239 = t2225*t1814;
  t2245 = t2243*t1978;
  t2247 = t2168 + t2239 + t2245;
  t2500 = t64*t2489;
  t2600 = -0.103955395616*t1697*t2589;
  t2644 = t1858*t2638;
  t2659 = t2500 + t2600 + t2644;
  t2662 = t2024*t2489;
  t2669 = t2041*t2589;
  t2683 = -0.103955395616*t1697*t2638;
  t2704 = t2662 + t2669 + t2683;
  t2724 = t2155*t2489;
  t2739 = t2225*t2589;
  t2741 = t2243*t2638;
  t2744 = t2724 + t2739 + t2741;
  t2926 = t64*t2922;
  t2952 = -0.103955395616*t1697*t2949;
  t3046 = t1858*t3035;
  t3052 = t2926 + t2952 + t3046;
  t3071 = t2024*t2922;
  t3074 = t2041*t2949;
  t3075 = -0.103955395616*t1697*t3035;
  t3077 = t3071 + t3074 + t3075;
  t3086 = t2155*t2922;
  t3100 = t2225*t2949;
  t3102 = t2243*t3035;
  t3106 = t3086 + t3100 + t3102;
  t3269 = -1.0000001112680001*t10*t3267;
  t3304 = 0.994522*t1637*t3303;
  t3335 = 0.104528*t1637*t3329;
  t3345 = t3269 + t3304 + t3335;
  t3369 = -0.994522*t1637*t3267;
  t3376 = -0.9890740084840001*t10*t3303;
  t3380 = -0.103955395616*t10*t3329;
  t3391 = t3369 + t3376 + t3380;
  t3394 = -0.104528*t1637*t3267;
  t3415 = -0.103955395616*t10*t3303;
  t3424 = -0.010926102783999999*t10*t3329;
  t3425 = t3394 + t3415 + t3424;
  t3471 = t2225*t3469;
  t3514 = t2243*t3504;
  t3554 = t2155*t3550;
  t3558 = t3471 + t3514 + t3554;
  t3563 = t2041*t3469;
  t3564 = -0.103955395616*t1697*t3504;
  t3565 = t2024*t3550;
  t3574 = t3563 + t3564 + t3565;
  t3586 = -0.103955395616*t1697*t3469;
  t3605 = t1858*t3504;
  t3609 = t64*t3550;
  t3614 = t3586 + t3605 + t3609;
  t3681 = t2243*t3679;
  t3709 = t2225*t3699;
  t3762 = t2155*t3729;
  t3770 = t3681 + t3709 + t3762;
  t3784 = -0.103955395616*t1697*t3679;
  t3790 = t2041*t3699;
  t3794 = t2024*t3729;
  t3807 = t3784 + t3790 + t3794;
  t3810 = t1858*t3679;
  t3823 = -0.103955395616*t1697*t3699;
  t3824 = t64*t3729;
  t3825 = t3810 + t3823 + t3824;
  t3996 = t64*t3991;
  t4019 = -0.103955395616*t1697*t4017;
  t4046 = t1858*t4035;
  t4052 = t3996 + t4019 + t4046;
  t4068 = t2024*t3991;
  t4072 = t2041*t4017;
  t4073 = -0.103955395616*t1697*t4035;
  t4076 = t4068 + t4072 + t4073;
  t4085 = t2155*t3991;
  t4091 = t2225*t4017;
  t4099 = t2243*t4035;
  t4102 = t4085 + t4091 + t4099;
  t4195 = t64*t4194;
  t4213 = -0.103955395616*t1697*t4209;
  t4231 = t1858*t4229;
  t4245 = t4195 + t4213 + t4231;
  t4255 = t2024*t4194;
  t4257 = t2041*t4209;
  t4268 = -0.103955395616*t1697*t4229;
  t4269 = t4255 + t4257 + t4268;
  t4288 = t2155*t4194;
  t4290 = t2225*t4209;
  t4292 = t2243*t4229;
  t4306 = t4288 + t4290 + t4292;
  t4328 = t64*t3267;
  t4334 = -0.103955395616*t1697*t3303;
  t4337 = t1858*t3329;
  t4338 = t4328 + t4334 + t4337;
  t4355 = t2024*t3267;
  t4360 = t2041*t3303;
  t4362 = -0.103955395616*t1697*t3329;
  t4363 = t4355 + t4360 + t4362;
  t4365 = t2155*t3267;
  t4368 = t2225*t3303;
  t4370 = t2243*t3329;
  t4372 = t4365 + t4368 + t4370;
  t4466 = t64*t4465;
  t4545 = -0.103955395616*t1697*t4541;
  t4597 = t1858*t4595;
  t4599 = t4466 + t4545 + t4597;
  t4609 = t2024*t4465;
  t4610 = t2041*t4541;
  t4621 = -0.103955395616*t1697*t4595;
  t4623 = t4609 + t4610 + t4621;
  t4628 = t2155*t4465;
  t4630 = t2225*t4541;
  t4641 = t2243*t4595;
  t4642 = t4628 + t4630 + t4641;
  t4777 = t64*t4766;
  t4841 = -0.103955395616*t1697*t4833;
  t4880 = t1858*t4862;
  t4881 = t4777 + t4841 + t4880;
  t4893 = t2024*t4766;
  t4899 = t2041*t4833;
  t4911 = -0.103955395616*t1697*t4862;
  t4919 = t4893 + t4899 + t4911;
  t4927 = t2155*t4766;
  t4929 = t2225*t4833;
  t4931 = t2243*t4862;
  t4937 = t4927 + t4929 + t4931;
  t5049 = -1.0000001112680001*t10*t5048;
  t5071 = 0.994522*t1637*t5070;
  t5098 = 0.104528*t1637*t5095;
  t5103 = t5049 + t5071 + t5098;
  t5113 = -0.994522*t1637*t5048;
  t5115 = -0.9890740084840001*t10*t5070;
  t5120 = -0.103955395616*t10*t5095;
  t5123 = t5113 + t5115 + t5120;
  t5127 = -0.104528*t1637*t5048;
  t5128 = -0.103955395616*t10*t5070;
  t5147 = -0.010926102783999999*t10*t5095;
  t5149 = t5127 + t5128 + t5147;
  t5177 = t2225*t5174;
  t5190 = t2243*t5189;
  t5210 = t2155*t5203;
  t5213 = t5177 + t5190 + t5210;
  t5218 = t2041*t5174;
  t5220 = -0.103955395616*t1697*t5189;
  t5224 = t2024*t5203;
  t5225 = t5218 + t5220 + t5224;
  t5235 = -0.103955395616*t1697*t5174;
  t5238 = t1858*t5189;
  t5240 = t64*t5203;
  t5243 = t5235 + t5238 + t5240;
  t5334 = t2243*t5333;
  t5363 = t2225*t5362;
  t5406 = t2155*t5403;
  t5416 = t5334 + t5363 + t5406;
  t5427 = -0.103955395616*t1697*t5333;
  t5431 = t2041*t5362;
  t5435 = t2024*t5403;
  t5439 = t5427 + t5431 + t5435;
  t5445 = t1858*t5333;
  t5451 = -0.103955395616*t1697*t5362;
  t5462 = t64*t5403;
  t5466 = t5445 + t5451 + t5462;
  t5625 = t64*t5622;
  t5654 = -0.103955395616*t1697*t5645;
  t5688 = t1858*t5678;
  t5692 = t5625 + t5654 + t5688;
  t5698 = t2024*t5622;
  t5702 = t2041*t5645;
  t5713 = -0.103955395616*t1697*t5678;
  t5714 = t5698 + t5702 + t5713;
  t5725 = t2155*t5622;
  t5732 = t2225*t5645;
  t5736 = t2243*t5678;
  t5761 = t5725 + t5732 + t5736;
  t5940 = t64*t5921;
  t5962 = -0.103955395616*t1697*t5959;
  t5993 = t1858*t5989;
  t5994 = t5940 + t5962 + t5993;
  t5999 = t2024*t5921;
  t6014 = t2041*t5959;
  t6015 = -0.103955395616*t1697*t5989;
  t6016 = t5999 + t6014 + t6015;
  t6031 = t2155*t5921;
  t6033 = t2225*t5959;
  t6036 = t2243*t5989;
  t6039 = t6031 + t6033 + t6036;
  t6110 = -1.0000001112680001*t10*t6109;
  t6133 = 0.994522*t1637*t6132;
  t6161 = 0.104528*t1637*t6158;
  t6162 = t6110 + t6133 + t6161;
  t6170 = -0.994522*t1637*t6109;
  t6171 = -0.9890740084840001*t10*t6132;
  t6184 = -0.103955395616*t10*t6158;
  t6188 = t6170 + t6171 + t6184;
  t6193 = -0.104528*t1637*t6109;
  t6195 = -0.103955395616*t10*t6132;
  t6201 = -0.010926102783999999*t10*t6158;
  t6209 = t6193 + t6195 + t6201;
  t6259 = t2225*t6252;
  t6279 = t2243*t6270;
  t6293 = t2155*t6286;
  t6296 = t6259 + t6279 + t6293;
  t6316 = t2041*t6252;
  t6317 = -0.103955395616*t1697*t6270;
  t6320 = t2024*t6286;
  t6323 = t6316 + t6317 + t6320;
  t6329 = -0.103955395616*t1697*t6252;
  t6338 = t1858*t6270;
  t6340 = t64*t6286;
  t6342 = t6329 + t6338 + t6340;
  t6458 = t2243*t6450;
  t6477 = t2225*t6470;
  t6493 = t2155*t6488;
  t6494 = t6458 + t6477 + t6493;
  t6498 = -0.103955395616*t1697*t6450;
  t6499 = t2041*t6470;
  t6503 = t2024*t6488;
  t6506 = t6498 + t6499 + t6503;
  t6511 = t1858*t6450;
  t6513 = -0.103955395616*t1697*t6470;
  t6514 = t64*t6488;
  t6532 = t6511 + t6513 + t6514;
  t6634 = t64*t6633;
  t6669 = -0.103955395616*t1697*t6667;
  t6690 = t1858*t6688;
  t6691 = t6634 + t6669 + t6690;
  t6697 = t2024*t6633;
  t6698 = t2041*t6667;
  t6699 = -0.103955395616*t1697*t6688;
  t6703 = t6697 + t6698 + t6699;
  t6707 = t2155*t6633;
  t6709 = t2225*t6667;
  t6711 = t2243*t6688;
  t6715 = t6707 + t6709 + t6711;
  t7575 = -1.*t945;
  t7578 = 1. + t7575;
  t7670 = -0.051978134642000004*t365;
  t7707 = 0.05226439969100001*t365;
  t7674 = 0.49726168403800003*t365;
  t7620 = -0.12*t7578;
  t7624 = -0.4*t914;
  t7625 = 0. + t7620 + t7624;
  t7581 = 0.4*t7578;
  t7582 = -0.12*t914;
  t7584 = 0. + t7581 + t7582;
  t7646 = -1.1924972351948546e-8*var1[25];
  t7649 = 0.38315655000705834*t748;
  t7651 = -0.05650052807*t515;
  t7660 = t7646 + t7649 + t7651;
  t7628 = 1.1345904784751044e-7*var1[25];
  t7635 = 0.04027119345689465*t748;
  t7637 = -0.05650052807*t1301;
  t7640 = t7628 + t7635 + t7637;
  t7694 = 1.639789470231751e-8*var1[26];
  t7702 = -0.22983603018311177*t365;
  t7712 = t7707 + t1941;
  t7713 = 0.164383620275*t7712;
  t7715 = t7670 + t1859;
  t7717 = 0.18957839082800002*t7715;
  t7718 = t7694 + t7702 + t7713 + t7717;
  t7663 = 1.5601527583902087e-7*var1[26];
  t7666 = 0.09582494577057615*t365;
  t7671 = t7670 + t1745;
  t7673 = -0.231098203479*t7671;
  t7681 = t7674 + t1775;
  t7686 = 0.164383620275*t7681;
  t7688 = t7663 + t7666 + t7673 + t7686;
  t7725 = -1.568745163810375e-7*var1[26];
  t7739 = 0.08219200580743281*t365;
  t7741 = t7707 + t1292;
  t7748 = -0.231098203479*t7741;
  t7751 = t7674 + t456;
  t7767 = 0.18957839082800002*t7751;
  t7774 = t7725 + t7739 + t7748 + t7767;
  t7778 = 0.19098732144477495*t1697;
  t7780 = 0.014401763312*t2243;
  t7782 = 0.137024246638*t2225;
  t7789 = 0. + t7778 + t7780 + t7782;
  t7798 = 5.06291820800569e-8*var1[27];
  t7802 = 0.13702426188441388*t1697;
  t7803 = 0.190987300194*t2024;
  t7804 = t7798 + t7802 + t7803;
  t7809 = -4.817066759205414e-7*var1[27];
  t7812 = 0.0144017649144554*t1697;
  t7814 = 0.190987300194*t64;
  t7816 = t7809 + t7812 + t7814;
  t7999 = -0.051978134642000004*t377;
  t8032 = 0.05226439969100001*t377;
  t8014 = 0.49726168403800003*t377;
  t7595 = -0.056500534356700764*t748;
  t7600 = 0.040271188976*t1548;
  t7610 = 0.38315650737400003*t1576;
  t7616 = 0. + t7595 + t7600 + t7610;
  t7886 = -0.12*t945;
  t7888 = 0.4*t914;
  t7891 = t7886 + t7888;
  t7894 = -0.4*t945;
  t7896 = t7894 + t7582;
  t7967 = 0.13777901533039377*t1637;
  t7969 = 0.19098732144477495*t10;
  t7971 = t7967 + t7969;
  t7974 = -0.18994107176353728*t1637;
  t7975 = 0.13702426188441388*t10;
  t7976 = 5.06291820800569e-8 + t7974 + t7975;
  t7981 = -0.019963520514678434*t1637;
  t7984 = 0.0144017649144554*t10;
  t7985 = -4.817066759205414e-7 + t7981 + t7984;
  t8011 = t3444 + t7999;
  t8013 = -0.231098203479*t8011;
  t8019 = t3457 + t8014;
  t8021 = 0.164383620275*t8019;
  t8022 = 0.09582494577057615*t377;
  t8023 = 1.5601527583902087e-7 + t8013 + t8021 + t8022;
  t8029 = t3472 + t7999;
  t8031 = 0.18957839082800002*t8029;
  t8033 = t3481 + t8032;
  t8040 = 0.164383620275*t8033;
  t8041 = -0.22983603018311177*t377;
  t8043 = 1.639789470231751e-8 + t8031 + t8040 + t8041;
  t8046 = t3532 + t8032;
  t8047 = -0.231098203479*t8046;
  t8050 = t3517 + t8014;
  t8051 = 0.18957839082800002*t8050;
  t8052 = 0.08219200580743281*t377;
  t8054 = -1.568745163810375e-7 + t8047 + t8051 + t8052;
  t8086 = 0.3852670428678886*t655;
  t8087 = -0.056500534356700764*t499;
  t8091 = t8086 + t8087;
  t8096 = 0.0059058871981009595*t655;
  t8097 = 0.04027119345689465*t499;
  t8105 = 1.1345904784751044e-7 + t8096 + t8097;
  t8110 = 0.05619101817723254*t655;
  t8111 = 0.38315655000705834*t499;
  t8112 = -1.1924972351948546e-8 + t8110 + t8111;
  p_output1[0]=(0.040001*t4052 + 0.380588*t4076 + 0.92388*t4102)*var2[3] + (0.040001*t1993 + 0.380588*t2132 + 0.92388*t2247)*var2[4] + (0.040001*t2659 + 0.380588*t2704 + 0.92388*t2744)*var2[5] + (0.040001*t3052 + 0.380588*t3077 + 0.92388*t3106)*var2[24] + (0.92388*t3770 + 0.380588*t3807 + 0.040001*t3825)*var2[25] + (0.92388*t3558 + 0.380588*t3574 + 0.040001*t3614)*var2[26] + (0.92388*t3345 + 0.380588*t3391 + 0.040001*t3425)*var2[27];
  p_output1[1]=(0.040001*t4338 + 0.380588*t4363 + 0.92388*t4372)*var2[3] + (0.040001*t4245 + 0.380588*t4269 + 0.92388*t4306)*var2[4] + (0.040001*t4599 + 0.380588*t4623 + 0.92388*t4642)*var2[5] + (0.040001*t4881 + 0.380588*t4919 + 0.92388*t4937)*var2[24] + (0.92388*t5416 + 0.380588*t5439 + 0.040001*t5466)*var2[25] + (0.92388*t5213 + 0.380588*t5225 + 0.040001*t5243)*var2[26] + (0.92388*t5103 + 0.380588*t5123 + 0.040001*t5149)*var2[27];
  p_output1[2]=(0.040001*t6691 + 0.380588*t6703 + 0.92388*t6715)*var2[4] + (0.040001*t5994 + 0.380588*t6016 + 0.92388*t6039)*var2[5] + (0.040001*t5692 + 0.380588*t5714 + 0.92388*t5761)*var2[24] + (0.92388*t6494 + 0.380588*t6506 + 0.040001*t6532)*var2[25] + (0.92388*t6296 + 0.380588*t6323 + 0.040001*t6342)*var2[26] + (0.92388*t6162 + 0.380588*t6188 + 0.040001*t6209)*var2[27];
  p_output1[3]=0;
  p_output1[4]=(0.096572*t4052 + 0.918819*t4076 - 0.382684*t4102)*var2[3] + (0.096572*t1993 + 0.918819*t2132 - 0.382684*t2247)*var2[4] + (0.096572*t2659 + 0.918819*t2704 - 0.382684*t2744)*var2[5] + (0.096572*t3052 + 0.918819*t3077 - 0.382684*t3106)*var2[24] + (-0.382684*t3770 + 0.918819*t3807 + 0.096572*t3825)*var2[25] + (-0.382684*t3558 + 0.918819*t3574 + 0.096572*t3614)*var2[26] + (-0.382684*t3345 + 0.918819*t3391 + 0.096572*t3425)*var2[27];
  p_output1[5]=(0.096572*t4338 + 0.918819*t4363 - 0.382684*t4372)*var2[3] + (0.096572*t4245 + 0.918819*t4269 - 0.382684*t4306)*var2[4] + (0.096572*t4599 + 0.918819*t4623 - 0.382684*t4642)*var2[5] + (0.096572*t4881 + 0.918819*t4919 - 0.382684*t4937)*var2[24] + (-0.382684*t5416 + 0.918819*t5439 + 0.096572*t5466)*var2[25] + (-0.382684*t5213 + 0.918819*t5225 + 0.096572*t5243)*var2[26] + (-0.382684*t5103 + 0.918819*t5123 + 0.096572*t5149)*var2[27];
  p_output1[6]=(0.096572*t6691 + 0.918819*t6703 - 0.382684*t6715)*var2[4] + (0.096572*t5994 + 0.918819*t6016 - 0.382684*t6039)*var2[5] + (0.096572*t5692 + 0.918819*t5714 - 0.382684*t5761)*var2[24] + (-0.382684*t6494 + 0.918819*t6506 + 0.096572*t6532)*var2[25] + (-0.382684*t6296 + 0.918819*t6323 + 0.096572*t6342)*var2[26] + (-0.382684*t6162 + 0.918819*t6188 + 0.096572*t6209)*var2[27];
  p_output1[7]=0;
  p_output1[8]=(-0.994522*t4052 + 0.104528*t4076)*var2[3] + (-0.994522*t1993 + 0.104528*t2132)*var2[4] + (-0.994522*t2659 + 0.104528*t2704)*var2[5] + (-0.994522*t3052 + 0.104528*t3077)*var2[24] + (0.104528*t3807 - 0.994522*t3825)*var2[25] + (0.104528*t3574 - 0.994522*t3614)*var2[26] + (0.104528*t3391 - 0.994522*t3425)*var2[27];
  p_output1[9]=(-0.994522*t4338 + 0.104528*t4363)*var2[3] + (-0.994522*t4245 + 0.104528*t4269)*var2[4] + (-0.994522*t4599 + 0.104528*t4623)*var2[5] + (-0.994522*t4881 + 0.104528*t4919)*var2[24] + (0.104528*t5439 - 0.994522*t5466)*var2[25] + (0.104528*t5225 - 0.994522*t5243)*var2[26] + (0.104528*t5123 - 0.994522*t5149)*var2[27];
  p_output1[10]=(-0.994522*t6691 + 0.104528*t6703)*var2[4] + (-0.994522*t5994 + 0.104528*t6016)*var2[5] + (-0.994522*t5692 + 0.104528*t5714)*var2[24] + (0.104528*t6506 - 0.994522*t6532)*var2[25] + (0.104528*t6323 - 0.994522*t6342)*var2[26] + (0.104528*t6188 - 0.994522*t6209)*var2[27];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (-0.272168*t4052 + 0.167144*t4076 + 0.190987*t4102 + t3866*t7584 + t3889*t7625 + t3911*t7640 + t3919*t7660 + t3923*t7688 + t3947*t7718 - 1.*t2322*t7616*t772 + t3971*t7774 + t3991*t7789 + t4017*t7804 + t4035*t7816)*var2[3] + (-0.272168*t1993 + 0.167144*t2132 + 0.190987*t2247 - 1.*t498*t594*t7616 + t1049*t7640 + t1110*t7660 + t1177*t7688 + t1417*t7718 + t1597*t7774 + t1627*t7789 + t1814*t7804 + t1978*t7816 + t498*t7584*t772*t892 + t498*t7625*t772*t953)*var2[4] + (-0.272168*t2659 + 0.167144*t2704 + 0.190987*t2744 + t2359*t7584 + t2339*t7625 + t2404*t7640 + t2374*t7660 + t2431*t7688 + t2410*t7718 + t2459*t7774 + t2489*t7789 + t2589*t7804 + t2638*t7816)*var2[5] + (-0.272168*t3052 + 0.167144*t3077 + 0.190987*t3106 + t2827*t7640 + t2811*t7660 + t2866*t7688 + t2829*t7718 + t2914*t7774 + t2922*t7789 + t2949*t7804 + t3035*t7816 + t2339*t7891 + t2809*t7896)*var2[24] + (0.190987*t3770 + 0.167144*t3807 - 0.272168*t3825 + t3656*t7688 + t3673*t7718 + t3638*t7774 + t3729*t7789 + t3699*t7804 + t3679*t7816 + t498*t772*t8091 + t2811*t8105 + t3169*t8112)*var2[25] + (0.190987*t3558 + 0.167144*t3574 - 0.272168*t3614 + t3550*t7789 + t3469*t7804 + t3504*t7816 + t3180*t8023 + t3215*t8043 + t3242*t8054)*var2[26] + (0.190987*t3345 + 0.167144*t3391 - 0.272168*t3425 + t3267*t7971 + t3303*t7976 + t3329*t7985)*var2[27];
  p_output1[13]=var2[1] + (-0.272168*t4338 + 0.167144*t4363 + 0.190987*t4372 + t2339*t7584 + t2809*t7625 + t2811*t7640 + t3169*t7660 + t3180*t7688 + t3215*t7718 + t498*t7616*t772 + t3242*t7774 + t3267*t7789 + t3303*t7804 + t3329*t7816)*var2[3] + (-0.272168*t4245 + 0.167144*t4269 + 0.190987*t4306 - 1.*t2322*t594*t7616 + t4132*t7640 + t4148*t7660 + t4150*t7688 + t4168*t7718 + t4187*t7774 + t4194*t7789 + t4209*t7804 + t4229*t7816 + t2322*t7584*t772*t892 + t2322*t7625*t772*t953)*var2[4] + (-0.272168*t4599 + 0.167144*t4623 + 0.190987*t4642 + t3889*t7584 + t4386*t7625 + t4400*t7640 + t4392*t7660 + t4418*t7688 + t4407*t7718 + t4440*t7774 + t4465*t7789 + t4541*t7804 + t4595*t7816)*var2[5] + (-0.272168*t4881 + 0.167144*t4919 + 0.190987*t4937 + t4705*t7640 + t4676*t7660 + t4736*t7688 + t4715*t7718 + t4761*t7774 + t4766*t7789 + t4833*t7804 + t4862*t7816 + t4386*t7891 + t4664*t7896)*var2[24] + (0.190987*t5416 + 0.167144*t5439 - 0.272168*t5466 + t5292*t7688 + t5313*t7718 + t5276*t7774 + t5403*t7789 + t5362*t7804 + t5333*t7816 + t2322*t772*t8091 + t4676*t8105 + t4960*t8112)*var2[25] + (0.190987*t5213 + 0.167144*t5225 - 0.272168*t5243 + t5203*t7789 + t5174*t7804 + t5189*t7816 + t4965*t8023 + t5002*t8043 + t5038*t8054)*var2[26] + (0.190987*t5103 + 0.167144*t5123 - 0.272168*t5149 + t5048*t7971 + t5070*t7976 + t5095*t7985)*var2[27];
  p_output1[14]=var2[2] + (-0.272168*t6691 + 0.167144*t6703 + 0.190987*t6715 + t6563*t7640 + t6581*t7660 + t6584*t7688 + t6607*t7718 - 1.*t7616*t772 + t6628*t7774 + t6633*t7789 + t6667*t7804 + t6688*t7816 - 1.*t594*t7584*t892 - 1.*t594*t7625*t953)*var2[4] + (-0.272168*t5994 + 0.167144*t6016 + 0.190987*t6039 + t5828*t7640 + t5796*t7660 + t5870*t7688 + t5846*t7718 + t5898*t7774 + t5921*t7789 + t5959*t7804 + t5989*t7816 + t7625*t772*t892 - 1.*t7584*t772*t953)*var2[5] + (-0.272168*t5692 + 0.167144*t5714 + 0.190987*t5761 + t5537*t7640 + t5510*t7660 + t5561*t7688 + t5545*t7718 + t5604*t7774 + t5622*t7789 + t5645*t7804 + t5678*t7816 + t772*t7891*t892 + t772*t7896*t953)*var2[24] + (0.190987*t6494 + 0.167144*t6506 - 0.272168*t6532 + t6415*t7688 + t6434*t7718 + t6388*t7774 + t6488*t7789 + t6470*t7804 + t6450*t7816 - 1.*t594*t8091 + t5510*t8105 + t5828*t8112)*var2[25] + (0.190987*t6296 + 0.167144*t6323 - 0.272168*t6342 + t6286*t7789 + t6252*t7804 + t6270*t7816 + t6068*t8023 + t6086*t8043 + t6106*t8054)*var2[26] + (0.190987*t6162 + 0.167144*t6188 - 0.272168*t6209 + t6109*t7971 + t6132*t7976 + t6158*t7985)*var2[27];
  p_output1[15]=0;
}



void dT_elbow_joint_right_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
