/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:09:12 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jdq_AMWorld_left_elbow_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t437;
  double t452;
  double t466;
  double t272;
  double t322;
  double t373;
  double t397;
  double t628;
  double t471;
  double t501;
  double t532;
  double t584;
  double t631;
  double t861;
  double t933;
  double t951;
  double t989;
  double t1033;
  double t1055;
  double t1070;
  double t1083;
  double t1096;
  double t1101;
  double t1104;
  double t973;
  double t1121;
  double t1160;
  double t1175;
  double t1186;
  double t1236;
  double t1342;
  double t1346;
  double t1348;
  double t1352;
  double t1371;
  double t1407;
  double t1586;
  double t396;
  double t410;
  double t421;
  double t953;
  double t975;
  double t983;
  double t1110;
  double t1111;
  double t1113;
  double t1384;
  double t1397;
  double t209;
  double t215;
  double t220;
  double t1603;
  double t1628;
  double t1649;
  double t1683;
  double t1688;
  double t1744;
  double t1799;
  double t1853;
  double t1901;
  double t1930;
  double t2086;
  double t2110;
  double t2130;
  double t2157;
  double t2166;
  double t2167;
  double t2198;
  double t2208;
  double t2215;
  double t2222;
  double t2611;
  double t2502;
  double t2514;
  double t2515;
  double t2519;
  double t2523;
  double t2536;
  double t2558;
  double t2569;
  double t2434;
  double t2621;
  double t2637;
  double t2651;
  double t2661;
  double t2665;
  double t2676;
  double t2729;
  double t2743;
  double t228;
  double t240;
  double t1456;
  double t1528;
  double t3269;
  double t3277;
  double t3280;
  double t3187;
  double t3205;
  double t3216;
  double t3415;
  double t3422;
  double t3431;
  double t1956;
  double t1976;
  double t2372;
  double t2396;
  double t2406;
  double t3248;
  double t3281;
  double t3432;
  double t3481;
  double t3499;
  double t3501;
  double t3530;
  double t3574;
  double t3703;
  double t3712;
  double t3789;
  double t3822;
  double t3912;
  double t3959;
  double t3976;
  double t4041;
  double t4091;
  double t4109;
  double t4127;
  double t4161;
  double t3034;
  double t4344;
  double t4346;
  double t4349;
  double t4354;
  double t4444;
  double t4473;
  double t4490;
  double t4528;
  double t4608;
  double t4622;
  double t4629;
  double t4656;
  double t4408;
  double t4580;
  double t4661;
  double t4671;
  double t4731;
  double t4734;
  double t4736;
  double t4787;
  double t4810;
  double t4884;
  double t4900;
  double t4920;
  double t4989;
  double t4996;
  double t5006;
  double t5008;
  double t5040;
  double t5052;
  double t5058;
  double t5081;
  double t5150;
  double t5229;
  double t5191;
  double t5232;
  double t5248;
  double t5257;
  double t5261;
  double t5267;
  double t5249;
  double t5280;
  double t5287;
  double t5361;
  double t5372;
  double t5380;
  double t5174;
  double t5336;
  double t5382;
  double t5396;
  double t5399;
  double t5424;
  double t5431;
  double t5436;
  double t5452;
  double t5453;
  double t5457;
  double t5469;
  double t5397;
  double t5449;
  double t5476;
  double t5480;
  double t5501;
  double t5506;
  double t5518;
  double t5528;
  double t5553;
  double t5557;
  double t5561;
  double t5571;
  double t1398;
  double t1932;
  double t2260;
  double t2329;
  double t2394;
  double t2584;
  double t2792;
  double t2864;
  double t2893;
  double t2924;
  double t2972;
  double t2999;
  double t3060;
  double t3073;
  double t3092;
  double t3177;
  double t3497;
  double t3617;
  double t3825;
  double t3852;
  double t3903;
  double t4087;
  double t4171;
  double t4174;
  double t4181;
  double t4207;
  double t4249;
  double t4254;
  double t4255;
  double t4287;
  double t4295;
  double t4299;
  double t4677;
  double t4796;
  double t4963;
  double t4966;
  double t4980;
  double t5039;
  double t5101;
  double t5105;
  double t5111;
  double t5114;
  double t5117;
  double t5120;
  double t5123;
  double t5132;
  double t5133;
  double t5135;
  double t5490;
  double t5538;
  double t5580;
  double t5587;
  double t5629;
  double t5633;
  double t5638;
  double t5643;
  double t5753;
  double t5810;
  double t5826;
  double t5831;
  double t3184;
  double t4312;
  double t5141;
  double t5142;
  double t6002;
  double t6013;
  double t6023;
  double t6027;
  double t6029;
  double t6037;
  double t6026;
  double t6043;
  double t6054;
  double t6096;
  double t6099;
  double t6105;
  double t5999;
  double t6066;
  double t6108;
  double t6113;
  double t6121;
  double t6124;
  double t6126;
  double t6130;
  double t6134;
  double t6157;
  double t6159;
  double t6161;
  double t6120;
  double t6132;
  double t6173;
  double t6179;
  double t6198;
  double t6213;
  double t6215;
  double t6217;
  double t6234;
  double t6242;
  double t6257;
  double t6261;
  double t5705;
  double t5711;
  double t5727;
  double t5737;
  double t6189;
  double t6221;
  double t6266;
  double t6283;
  double t6294;
  double t6296;
  double t6314;
  double t6317;
  double t5861;
  double t5879;
  double t5895;
  double t5899;
  double t6331;
  double t6347;
  double t6351;
  double t6362;
  double t6394;
  double t6395;
  double t6412;
  double t6414;
  double t6415;
  double t6423;
  double t6389;
  double t6413;
  double t6425;
  double t6433;
  double t6445;
  double t6447;
  double t6448;
  double t6451;
  double t6458;
  double t6469;
  double t6472;
  double t6478;
  double t6443;
  double t6456;
  double t6479;
  double t6490;
  double t6496;
  double t6515;
  double t6517;
  double t6523;
  double t6536;
  double t6537;
  double t6538;
  double t6540;
  double t6494;
  double t6533;
  double t6542;
  double t6553;
  double t6561;
  double t6562;
  double t6564;
  double t6567;
  double t6585;
  double t6586;
  double t6589;
  double t6597;
  double t5628;
  double t5655;
  double t5675;
  double t6630;
  double t6633;
  double t6634;
  double t6638;
  double t6643;
  double t6651;
  double t6660;
  double t6670;
  double t6675;
  double t5738;
  double t5746;
  double t5849;
  double t5853;
  double t5913;
  double t5936;
  double t5939;
  double t5940;
  double t6637;
  double t6652;
  double t6694;
  double t6706;
  double t6290;
  double t6320;
  double t6321;
  double t6709;
  double t6713;
  double t6718;
  double t6719;
  double t6326;
  double t6327;
  double t6363;
  double t6367;
  double t6738;
  double t6750;
  double t6753;
  double t6777;
  double t6371;
  double t6372;
  double t6376;
  double t6385;
  double t6558;
  double t6568;
  double t6569;
  double t6571;
  double t6583;
  double t6600;
  double t6603;
  double t6608;
  double t6609;
  double t6611;
  double t6616;
  double t6825;
  double t6826;
  double t6837;
  double t6841;
  double t6857;
  double t6874;
  double t6876;
  double t6880;
  double t6886;
  double t6894;
  double t6896;
  double t6897;
  double t6950;
  double t6955;
  double t6957;
  double t6961;
  double t6963;
  double t6966;
  double t6969;
  double t6973;
  double t6978;
  double t7008;
  double t7010;
  double t7015;
  double t6962;
  double t6974;
  double t7017;
  double t7018;
  double t7024;
  double t7026;
  double t7027;
  double t7029;
  double t7032;
  double t7033;
  double t7035;
  double t7038;
  double t7063;
  double t7064;
  double t7065;
  double t7077;
  double t7078;
  double t7081;
  double t7088;
  double t7089;
  double t7090;
  double t7074;
  double t7087;
  double t7094;
  double t7095;
  double t7100;
  double t7102;
  double t7106;
  double t7108;
  double t7116;
  double t7119;
  double t7129;
  double t7133;
  double t7161;
  double t7163;
  double t7164;
  double t7167;
  double t7169;
  double t7170;
  double t7173;
  double t7175;
  double t7185;
  double t7186;
  double t7190;
  double t7194;
  double t7168;
  double t7180;
  double t7195;
  double t7197;
  double t7214;
  double t7218;
  double t7219;
  double t7221;
  double t7224;
  double t7225;
  double t7226;
  double t7228;
  t437 = Cos(var1[16]);
  t452 = -1.*t437;
  t466 = 1. + t452;
  t272 = Cos(var1[15]);
  t322 = -1.*t272;
  t373 = 1. + t322;
  t397 = Sin(var1[15]);
  t628 = Sin(var1[16]);
  t471 = -0.9890740084840001*t466;
  t501 = 1. + t471;
  t532 = -0.918819*t501;
  t584 = 0.010039180465428352*t466;
  t631 = -0.994522*t628;
  t861 = 0. + t631;
  t933 = 0.382684*t861;
  t951 = t532 + t584 + t933;
  t989 = -0.010926102783999999*t466;
  t1033 = 1. + t989;
  t1055 = 0.096572*t1033;
  t1070 = -0.0955161926444975*t466;
  t1083 = 0.104528*t628;
  t1096 = 0. + t1083;
  t1101 = 0.382684*t1096;
  t1104 = t1055 + t1070 + t1101;
  t973 = 0.05226439969100001*t373;
  t1121 = -1.0000001112680001*t466;
  t1160 = 1. + t1121;
  t1175 = 0.382684*t1160;
  t1186 = -0.104528*t628;
  t1236 = 0. + t1186;
  t1342 = 0.096572*t1236;
  t1346 = 0.994522*t628;
  t1348 = 0. + t1346;
  t1352 = -0.918819*t1348;
  t1371 = t1175 + t1342 + t1352;
  t1407 = Sin(var1[14]);
  t1586 = -0.051978134642000004*t373;
  t396 = -0.49726168403800003*t373;
  t410 = 0.073913*t397;
  t421 = t396 + t410;
  t953 = t421*t951;
  t975 = 0.703234*t397;
  t983 = t973 + t975;
  t1110 = t983*t1104;
  t1111 = -0.500001190325*t373;
  t1113 = 1. + t1111;
  t1384 = t1113*t1371;
  t1397 = 0. + t953 + t1110 + t1384;
  t209 = Cos(var1[14]);
  t215 = -1.*t209;
  t220 = 1. + t215;
  t1603 = -0.707107*t397;
  t1628 = t1586 + t1603;
  t1649 = t1628*t951;
  t1683 = -0.9945383682050002*t373;
  t1688 = 1. + t1683;
  t1744 = t1688*t1104;
  t1799 = -0.703234*t397;
  t1853 = t973 + t1799;
  t1901 = t1853*t1371;
  t1930 = 0. + t1649 + t1744 + t1901;
  t2086 = -0.5054634410180001*t373;
  t2110 = 1. + t2086;
  t2130 = t2110*t951;
  t2157 = 0.707107*t397;
  t2166 = t1586 + t2157;
  t2167 = t2166*t1104;
  t2198 = -0.073913*t397;
  t2208 = t396 + t2198;
  t2215 = t2208*t1371;
  t2222 = 0. + t2130 + t2167 + t2215;
  t2611 = Sin(var1[13]);
  t2502 = -0.994522*t1407;
  t2514 = 0. + t2502;
  t2515 = t2514*t1397;
  t2519 = 0.103955395616*t220*t1930;
  t2523 = -0.9890740084840001*t220;
  t2536 = 1. + t2523;
  t2558 = t2536*t2222;
  t2569 = 0. + t2515 + t2519 + t2558;
  t2434 = Cos(var1[13]);
  t2621 = 0.104528*t1407;
  t2637 = 0. + t2621;
  t2651 = t2637*t1397;
  t2661 = -0.010926102783999999*t220;
  t2665 = 1. + t2661;
  t2676 = t2665*t1930;
  t2729 = 0.103955395616*t220*t2222;
  t2743 = 0. + t2651 + t2676 + t2729;
  t228 = -1.0000001112680001*t220;
  t240 = 1. + t228;
  t1456 = -0.104528*t1407;
  t1528 = 0. + t1456;
  t3269 = 0.994522*t1033;
  t3277 = 0.010866249592949247*t466;
  t3280 = t3269 + t3277;
  t3187 = 0.104528*t501;
  t3205 = 0.10338592795881554*t466;
  t3216 = t3187 + t3205;
  t3415 = 0.994522*t1236;
  t3422 = 0.104528*t1348;
  t3431 = t3415 + t3422;
  t1956 = 0.994522*t1407;
  t1976 = 0. + t1956;
  t2372 = Sin(var1[4]);
  t2396 = Cos(var1[4]);
  t2406 = Cos(var1[5]);
  t3248 = t3216*t421;
  t3281 = t3280*t983;
  t3432 = t1113*t3431;
  t3481 = 0. + t3248 + t3281 + t3432;
  t3499 = t1688*t3280;
  t3501 = t3216*t1628;
  t3530 = t1853*t3431;
  t3574 = 0. + t3499 + t3501 + t3530;
  t3703 = t2110*t3216;
  t3712 = t3280*t2166;
  t3789 = t2208*t3431;
  t3822 = 0. + t3703 + t3712 + t3789;
  t3912 = t2514*t3481;
  t3959 = 0.103955395616*t220*t3574;
  t3976 = t2536*t3822;
  t4041 = 0. + t3912 + t3959 + t3976;
  t4091 = t2637*t3481;
  t4109 = t2665*t3574;
  t4127 = 0.103955395616*t220*t3822;
  t4161 = 0. + t4091 + t4109 + t4127;
  t3034 = Sin(var1[5]);
  t4344 = 0.380588*t501;
  t4346 = -0.004158319780035616*t466;
  t4349 = 0.92388*t861;
  t4354 = t4344 + t4346 + t4349;
  t4444 = -0.040001*t1033;
  t4473 = 0.0395641761067022*t466;
  t4490 = 0.92388*t1096;
  t4528 = t4444 + t4473 + t4490;
  t4608 = 0.92388*t1160;
  t4622 = -0.040001*t1236;
  t4629 = 0.380588*t1348;
  t4656 = t4608 + t4622 + t4629;
  t4408 = t421*t4354;
  t4580 = t983*t4528;
  t4661 = t1113*t4656;
  t4671 = 0. + t4408 + t4580 + t4661;
  t4731 = t1628*t4354;
  t4734 = t1688*t4528;
  t4736 = t1853*t4656;
  t4787 = 0. + t4731 + t4734 + t4736;
  t4810 = t2110*t4354;
  t4884 = t2166*t4528;
  t4900 = t2208*t4656;
  t4920 = 0. + t4810 + t4884 + t4900;
  t4989 = t2514*t4671;
  t4996 = 0.103955395616*t220*t4787;
  t5006 = t2536*t4920;
  t5008 = 0. + t4989 + t4996 + t5006;
  t5040 = t2637*t4671;
  t5052 = t2665*t4787;
  t5058 = 0.103955395616*t220*t4920;
  t5081 = 0. + t5040 + t5052 + t5058;
  t5150 = Cos(var1[3]);
  t5229 = Sin(var1[3]);
  t5191 = t5150*t2406*t2372;
  t5232 = t5229*t3034;
  t5248 = t5191 + t5232;
  t5257 = -1.*t2406*t5229;
  t5261 = t5150*t2372*t3034;
  t5267 = t5257 + t5261;
  t5249 = -1.*t2611*t5248;
  t5280 = t2434*t5267;
  t5287 = t5249 + t5280;
  t5361 = t2434*t5248;
  t5372 = t2611*t5267;
  t5380 = t5361 + t5372;
  t5174 = t5150*t2396*t1976;
  t5336 = 0.103955395616*t220*t5287;
  t5382 = t2536*t5380;
  t5396 = t5174 + t5336 + t5382;
  t5399 = t5150*t2396*t1528;
  t5424 = t2665*t5287;
  t5431 = 0.103955395616*t220*t5380;
  t5436 = t5399 + t5424 + t5431;
  t5452 = t240*t5150*t2396;
  t5453 = t2637*t5287;
  t5457 = t2514*t5380;
  t5469 = t5452 + t5453 + t5457;
  t5397 = t2208*t5396;
  t5449 = t1853*t5436;
  t5476 = t1113*t5469;
  t5480 = t5397 + t5449 + t5476;
  t5501 = t2110*t5396;
  t5506 = t1628*t5436;
  t5518 = t421*t5469;
  t5528 = t5501 + t5506 + t5518;
  t5553 = t2166*t5396;
  t5557 = t1688*t5436;
  t5561 = t983*t5469;
  t5571 = t5553 + t5557 + t5561;
  t1398 = t240*t1397;
  t1932 = t1528*t1930;
  t2260 = t1976*t2222;
  t2329 = 0. + t1398 + t1932 + t2260;
  t2394 = -1.*t2329*t2372;
  t2584 = t2434*t2569;
  t2792 = -1.*t2611*t2743;
  t2864 = 0. + t2584 + t2792;
  t2893 = t2406*t2864;
  t2924 = t2611*t2569;
  t2972 = t2434*t2743;
  t2999 = 0. + t2924 + t2972;
  t3060 = t2999*t3034;
  t3073 = 0. + t2893 + t3060;
  t3092 = t2396*t3073;
  t3177 = 0. + t2394 + t3092;
  t3497 = t240*t3481;
  t3617 = t1528*t3574;
  t3825 = t1976*t3822;
  t3852 = 0. + t3497 + t3617 + t3825;
  t3903 = -1.*t3852*t2372;
  t4087 = t2434*t4041;
  t4171 = -1.*t2611*t4161;
  t4174 = 0. + t4087 + t4171;
  t4181 = t2406*t4174;
  t4207 = t2611*t4041;
  t4249 = t2434*t4161;
  t4254 = 0. + t4207 + t4249;
  t4255 = t4254*t3034;
  t4287 = 0. + t4181 + t4255;
  t4295 = t2396*t4287;
  t4299 = 0. + t3903 + t4295;
  t4677 = t240*t4671;
  t4796 = t1528*t4787;
  t4963 = t1976*t4920;
  t4966 = 0. + t4677 + t4796 + t4963;
  t4980 = -1.*t4966*t2372;
  t5039 = t2434*t5008;
  t5101 = -1.*t2611*t5081;
  t5105 = 0. + t5039 + t5101;
  t5111 = t2406*t5105;
  t5114 = t2611*t5008;
  t5117 = t2434*t5081;
  t5120 = 0. + t5114 + t5117;
  t5123 = t5120*t3034;
  t5132 = 0. + t5111 + t5123;
  t5133 = t2396*t5132;
  t5135 = 0. + t4980 + t5133;
  t5490 = t1236*t5480;
  t5538 = 0.103955395616*t466*t5528;
  t5580 = t1033*t5571;
  t5587 = t5490 + t5538 + t5580;
  t5629 = t1348*t5480;
  t5633 = t501*t5528;
  t5638 = 0.103955395616*t466*t5571;
  t5643 = t5629 + t5633 + t5638;
  t5753 = t1160*t5480;
  t5810 = t861*t5528;
  t5826 = t1096*t5571;
  t5831 = t5753 + t5810 + t5826;
  t3184 = 0.00002*t3177;
  t4312 = -0.00001*t4299;
  t5141 = 0.0014*t5135;
  t5142 = t3184 + t4312 + t5141;
  t6002 = t2406*t5229*t2372;
  t6013 = -1.*t5150*t3034;
  t6023 = t6002 + t6013;
  t6027 = t5150*t2406;
  t6029 = t5229*t2372*t3034;
  t6037 = t6027 + t6029;
  t6026 = -1.*t2611*t6023;
  t6043 = t2434*t6037;
  t6054 = t6026 + t6043;
  t6096 = t2434*t6023;
  t6099 = t2611*t6037;
  t6105 = t6096 + t6099;
  t5999 = t2396*t1976*t5229;
  t6066 = 0.103955395616*t220*t6054;
  t6108 = t2536*t6105;
  t6113 = t5999 + t6066 + t6108;
  t6121 = t2396*t1528*t5229;
  t6124 = t2665*t6054;
  t6126 = 0.103955395616*t220*t6105;
  t6130 = t6121 + t6124 + t6126;
  t6134 = t240*t2396*t5229;
  t6157 = t2637*t6054;
  t6159 = t2514*t6105;
  t6161 = t6134 + t6157 + t6159;
  t6120 = t2208*t6113;
  t6132 = t1853*t6130;
  t6173 = t1113*t6161;
  t6179 = t6120 + t6132 + t6173;
  t6198 = t2110*t6113;
  t6213 = t1628*t6130;
  t6215 = t421*t6161;
  t6217 = t6198 + t6213 + t6215;
  t6234 = t2166*t6113;
  t6242 = t1688*t6130;
  t6257 = t983*t6161;
  t6261 = t6234 + t6242 + t6257;
  t5705 = 0.00956*t3177;
  t5711 = 0.00002*t4299;
  t5727 = 0.00003*t5135;
  t5737 = t5705 + t5711 + t5727;
  t6189 = t1236*t6179;
  t6221 = 0.103955395616*t466*t6217;
  t6266 = t1033*t6261;
  t6283 = t6189 + t6221 + t6266;
  t6294 = t1348*t6179;
  t6296 = t501*t6217;
  t6314 = 0.103955395616*t466*t6261;
  t6317 = t6294 + t6296 + t6314;
  t5861 = 0.00003*t3177;
  t5879 = 0.0014*t4299;
  t5895 = 0.00048*t5135;
  t5899 = t5861 + t5879 + t5895;
  t6331 = t1160*t6179;
  t6347 = t861*t6217;
  t6351 = t1096*t6261;
  t6362 = t6331 + t6347 + t6351;
  t6394 = -1.*t2396*t2406*t2611;
  t6395 = t2434*t2396*t3034;
  t6412 = t6394 + t6395;
  t6414 = t2434*t2396*t2406;
  t6415 = t2396*t2611*t3034;
  t6423 = t6414 + t6415;
  t6389 = -1.*t1976*t2372;
  t6413 = 0.103955395616*t220*t6412;
  t6425 = t2536*t6423;
  t6433 = t6389 + t6413 + t6425;
  t6445 = -1.*t1528*t2372;
  t6447 = t2665*t6412;
  t6448 = 0.103955395616*t220*t6423;
  t6451 = t6445 + t6447 + t6448;
  t6458 = -1.*t240*t2372;
  t6469 = t2637*t6412;
  t6472 = t2514*t6423;
  t6478 = t6458 + t6469 + t6472;
  t6443 = t2208*t6433;
  t6456 = t1853*t6451;
  t6479 = t1113*t6478;
  t6490 = t6443 + t6456 + t6479;
  t6496 = t2110*t6433;
  t6515 = t1628*t6451;
  t6517 = t421*t6478;
  t6523 = t6496 + t6515 + t6517;
  t6536 = t2166*t6433;
  t6537 = t1688*t6451;
  t6538 = t983*t6478;
  t6540 = t6536 + t6537 + t6538;
  t6494 = t1236*t6490;
  t6533 = 0.103955395616*t466*t6523;
  t6542 = t1033*t6540;
  t6553 = t6494 + t6533 + t6542;
  t6561 = t1348*t6490;
  t6562 = t501*t6523;
  t6564 = 0.103955395616*t466*t6540;
  t6567 = t6561 + t6562 + t6564;
  t6585 = t1160*t6490;
  t6586 = t861*t6523;
  t6589 = t1096*t6540;
  t6597 = t6585 + t6586 + t6589;
  t5628 = 0.994522*t5587;
  t5655 = 0.104528*t5643;
  t5675 = t5628 + t5655;
  t6630 = t2406*t2999;
  t6633 = -1.*t2864*t3034;
  t6634 = 0. + t6630 + t6633;
  t6638 = t2406*t4254;
  t6643 = -1.*t4174*t3034;
  t6651 = 0. + t6638 + t6643;
  t6660 = t2406*t5120;
  t6670 = -1.*t5105*t3034;
  t6675 = 0. + t6660 + t6670;
  t5738 = 0.096572*t5587;
  t5746 = -0.918819*t5643;
  t5849 = 0.382684*t5831;
  t5853 = t5738 + t5746 + t5849;
  t5913 = -0.040001*t5587;
  t5936 = 0.380588*t5643;
  t5939 = 0.92388*t5831;
  t5940 = t5913 + t5936 + t5939;
  t6637 = 0.00002*t6634;
  t6652 = -0.00001*t6651;
  t6694 = 0.0014*t6675;
  t6706 = t6637 + t6652 + t6694;
  t6290 = 0.994522*t6283;
  t6320 = 0.104528*t6317;
  t6321 = t6290 + t6320;
  t6709 = 0.00956*t6634;
  t6713 = 0.00002*t6651;
  t6718 = 0.00003*t6675;
  t6719 = t6709 + t6713 + t6718;
  t6326 = 0.096572*t6283;
  t6327 = -0.918819*t6317;
  t6363 = 0.382684*t6362;
  t6367 = t6326 + t6327 + t6363;
  t6738 = 0.00003*t6634;
  t6750 = 0.0014*t6651;
  t6753 = 0.00048*t6675;
  t6777 = t6738 + t6750 + t6753;
  t6371 = -0.040001*t6283;
  t6372 = 0.380588*t6317;
  t6376 = 0.92388*t6362;
  t6385 = t6371 + t6372 + t6376;
  t6558 = 0.994522*t6553;
  t6568 = 0.104528*t6567;
  t6569 = t6558 + t6568;
  t6571 = 0.096572*t6553;
  t6583 = -0.918819*t6567;
  t6600 = 0.382684*t6597;
  t6603 = t6571 + t6583 + t6600;
  t6608 = -0.040001*t6553;
  t6609 = 0.380588*t6567;
  t6611 = 0.92388*t6597;
  t6616 = t6608 + t6609 + t6611;
  t6825 = 0.00002*t2329;
  t6826 = -0.00001*t3852;
  t6837 = 0.0014*t4966;
  t6841 = t6825 + t6826 + t6837;
  t6857 = 0.00956*t2329;
  t6874 = 0.00002*t3852;
  t6876 = 0.00003*t4966;
  t6880 = t6857 + t6874 + t6876;
  t6886 = 0.00003*t2329;
  t6894 = 0.0014*t3852;
  t6896 = 0.00048*t4966;
  t6897 = t6886 + t6894 + t6896;
  t6950 = -1.*t240*t1397;
  t6955 = -1.*t1528*t1930;
  t6957 = -1.*t1976*t2222;
  t6961 = 0. + t6950 + t6955 + t6957;
  t6963 = -1.*t240*t3481;
  t6966 = -1.*t1528*t3574;
  t6969 = -1.*t1976*t3822;
  t6973 = 0. + t6963 + t6966 + t6969;
  t6978 = -1.*t240*t4671;
  t7008 = -1.*t1528*t4787;
  t7010 = -1.*t1976*t4920;
  t7015 = 0. + t6978 + t7008 + t7010;
  t6962 = 0.00002*t6961;
  t6974 = -0.00001*t6973;
  t7017 = 0.0014*t7015;
  t7018 = t6962 + t6974 + t7017;
  t7024 = 0.00956*t6961;
  t7026 = 0.00002*t6973;
  t7027 = 0.00003*t7015;
  t7029 = t7024 + t7026 + t7027;
  t7032 = 0.00003*t6961;
  t7033 = 0.0014*t6973;
  t7035 = 0.00048*t7015;
  t7038 = t7032 + t7033 + t7035;
  t7063 = 0.994522*t1930;
  t7064 = 0.104528*t2222;
  t7065 = 0. + t7063 + t7064;
  t7077 = 0.994522*t3574;
  t7078 = 0.104528*t3822;
  t7081 = 0. + t7077 + t7078;
  t7088 = 0.994522*t4787;
  t7089 = 0.104528*t4920;
  t7090 = 0. + t7088 + t7089;
  t7074 = 0.00002*t7065;
  t7087 = -0.00001*t7081;
  t7094 = 0.0014*t7090;
  t7095 = t7074 + t7087 + t7094;
  t7100 = 0.00956*t7065;
  t7102 = 0.00002*t7081;
  t7106 = 0.00003*t7090;
  t7108 = t7100 + t7102 + t7106;
  t7116 = 0.00003*t7065;
  t7119 = 0.0014*t7081;
  t7129 = 0.00048*t7090;
  t7133 = t7116 + t7119 + t7129;
  t7161 = -0.703234*t951;
  t7163 = 0.073913*t1104;
  t7164 = 0.707107*t1371;
  t7167 = 0. + t7161 + t7163 + t7164;
  t7169 = 0.073913*t3280;
  t7170 = -0.703234*t3216;
  t7173 = 0.707107*t3431;
  t7175 = 0. + t7169 + t7170 + t7173;
  t7185 = -0.703234*t4354;
  t7186 = 0.073913*t4528;
  t7190 = 0.707107*t4656;
  t7194 = 0. + t7185 + t7186 + t7190;
  t7168 = 0.00002*t7167;
  t7180 = -0.00001*t7175;
  t7195 = 0.0014*t7194;
  t7197 = t7168 + t7180 + t7195;
  t7214 = 0.00956*t7167;
  t7218 = 0.00002*t7175;
  t7219 = 0.00003*t7194;
  t7221 = t7214 + t7218 + t7219;
  t7224 = 0.00003*t7167;
  t7225 = 0.0014*t7175;
  t7226 = 0.00048*t7194;
  t7228 = t7224 + t7225 + t7226;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=t5142*t5675 + t5737*t5853 + t5899*t5940;
  p_output1[10]=t5142*t6321 + t5737*t6367 + t5899*t6385;
  p_output1[11]=t5142*t6569 + t5737*t6603 + t5899*t6616;
  p_output1[12]=t5675*t6706 + t5853*t6719 + t5940*t6777;
  p_output1[13]=t6321*t6706 + t6367*t6719 + t6385*t6777;
  p_output1[14]=t6569*t6706 + t6603*t6719 + t6616*t6777;
  p_output1[15]=t5675*t6841 + t5853*t6880 + t5940*t6897;
  p_output1[16]=t6321*t6841 + t6367*t6880 + t6385*t6897;
  p_output1[17]=t6569*t6841 + t6603*t6880 + t6616*t6897;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t5675*t7018 + t5853*t7029 + t5940*t7038;
  p_output1[40]=t6321*t7018 + t6367*t7029 + t6385*t7038;
  p_output1[41]=t6569*t7018 + t6603*t7029 + t6616*t7038;
  p_output1[42]=t5675*t7095 + t5853*t7108 + t5940*t7133;
  p_output1[43]=t6321*t7095 + t6367*t7108 + t6385*t7133;
  p_output1[44]=t6569*t7095 + t6603*t7108 + t6616*t7133;
  p_output1[45]=t5675*t7197 + t5853*t7221 + t5940*t7228;
  p_output1[46]=t6321*t7197 + t6367*t7221 + t6385*t7228;
  p_output1[47]=t6569*t7197 + t6603*t7221 + t6616*t7228;
  p_output1[48]=-9.999668670840007e-6*t5675 + 0.000020006377476740062*t5853 + 0.0014000002851719201*t5940;
  p_output1[49]=-9.999668670840007e-6*t6321 + 0.000020006377476740062*t6367 + 0.0014000002851719201*t6385;
  p_output1[50]=-9.999668670840007e-6*t6569 + 0.000020006377476740062*t6603 + 0.0014000002851719201*t6616;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jdq_AMWorld_left_elbow_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
