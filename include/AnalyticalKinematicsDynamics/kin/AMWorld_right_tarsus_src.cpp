/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:11:00 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "AMWorld_right_tarsus_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t304;
  double t349;
  double t371;
  double t109;
  double t425;
  double t709;
  double t778;
  double t790;
  double t373;
  double t384;
  double t391;
  double t398;
  double t444;
  double t453;
  double t455;
  double t458;
  double t480;
  double t483;
  double t628;
  double t656;
  double t660;
  double t672;
  double t698;
  double t699;
  double t1244;
  double t1462;
  double t1468;
  double t1482;
  double t1485;
  double t1522;
  double t1610;
  double t1614;
  double t1632;
  double t1637;
  double t1949;
  double t1956;
  double t1967;
  double t39;
  double t113;
  double t116;
  double t463;
  double t467;
  double t479;
  double t700;
  double t950;
  double t1194;
  double t1747;
  double t1757;
  double t2006;
  double t2087;
  double t2150;
  double t2252;
  double t2263;
  double t2277;
  double t2291;
  double t2298;
  double t2444;
  double t2497;
  double t2509;
  double t2530;
  double t2557;
  double t2738;
  double t2745;
  double t2747;
  double t79;
  double t92;
  double t1877;
  double t2379;
  double t2394;
  double t2424;
  double t2780;
  double t2789;
  double t3282;
  double t2809;
  double t2870;
  double t2975;
  double t2993;
  double t3003;
  double t3011;
  double t3064;
  double t3087;
  double t3294;
  double t3299;
  double t3333;
  double t3351;
  double t3410;
  double t3528;
  double t3532;
  double t3545;
  double t3550;
  double t3560;
  double t3612;
  double t3616;
  double t3674;
  double t3675;
  double t3676;
  double t3678;
  double t3680;
  double t3688;
  double t3691;
  double t4039;
  double t3845;
  double t3846;
  double t3853;
  double t3863;
  double t3881;
  double t3894;
  double t3993;
  double t3995;
  double t3842;
  double t4043;
  double t4044;
  double t4054;
  double t4055;
  double t4056;
  double t4058;
  double t4059;
  double t4071;
  double t3702;
  double t3703;
  double t3704;
  double t3717;
  double t3839;
  double t4129;
  double t4132;
  double t4152;
  double t4032;
  double t4087;
  double t4107;
  double t4155;
  double t4327;
  double t4329;
  double t4336;
  double t4338;
  double t4340;
  double t4343;
  double t4352;
  double t4356;
  double t4373;
  double t4409;
  double t4414;
  double t4416;
  double t4339;
  double t4357;
  double t4427;
  double t4459;
  double t4519;
  double t4554;
  double t4555;
  double t4564;
  double t4583;
  double t4598;
  double t4606;
  double t4619;
  double t4502;
  double t4565;
  double t4621;
  double t4628;
  double t4645;
  double t4646;
  double t4656;
  double t4658;
  double t4673;
  double t4675;
  double t4680;
  double t4692;
  double t4804;
  double t4806;
  double t4812;
  double t4816;
  double t4824;
  double t4832;
  double t4837;
  double t4843;
  double t4714;
  double t4719;
  double t4720;
  double t4726;
  double t4217;
  double t4265;
  double t4850;
  double t4851;
  double t4852;
  double t4818;
  double t4844;
  double t4846;
  double t4973;
  double t4977;
  double t4979;
  double t4940;
  double t4946;
  double t4948;
  double t4998;
  double t5004;
  double t5008;
  double t4993;
  double t4995;
  double t5012;
  double t5022;
  double t5031;
  double t5040;
  double t5041;
  double t5042;
  double t5051;
  double t5067;
  double t5079;
  double t5093;
  double t5023;
  double t5048;
  double t5097;
  double t5099;
  double t5101;
  double t5102;
  double t5116;
  double t5122;
  double t5136;
  double t5159;
  double t5164;
  double t5165;
  double t5263;
  double t5264;
  double t5267;
  double t5269;
  double t5274;
  double t5281;
  double t5283;
  double t5284;
  double t5188;
  double t5212;
  double t5213;
  double t5215;
  double t5295;
  double t5303;
  double t5312;
  double t5270;
  double t5285;
  double t5286;
  double t5369;
  double t5379;
  double t5378;
  double t5380;
  double t5382;
  double t5389;
  double t5390;
  double t5398;
  double t5383;
  double t5399;
  double t5403;
  double t5405;
  double t5417;
  double t5422;
  double t5371;
  double t5404;
  double t5423;
  double t5429;
  double t5433;
  double t5434;
  double t5440;
  double t5445;
  double t5453;
  double t5454;
  double t5457;
  double t5460;
  double t5430;
  double t5447;
  double t5467;
  double t5469;
  double t5472;
  double t5480;
  double t5486;
  double t5491;
  double t5499;
  double t5505;
  double t5510;
  double t5514;
  double t5471;
  double t5496;
  double t5524;
  double t5525;
  double t5531;
  double t5534;
  double t5538;
  double t5539;
  double t5543;
  double t5546;
  double t5549;
  double t5550;
  double t36;
  double t2792;
  double t3136;
  double t3206;
  double t3270;
  double t3310;
  double t3354;
  double t3692;
  double t3693;
  double t3696;
  double t3728;
  double t3743;
  double t3745;
  double t3769;
  double t3771;
  double t3783;
  double t3810;
  double t3816;
  double t3836;
  double t4115;
  double t4159;
  double t4188;
  double t4208;
  double t4242;
  double t4279;
  double t4285;
  double t4287;
  double t4291;
  double t4309;
  double t4315;
  double t4319;
  double t4321;
  double t4644;
  double t4659;
  double t4662;
  double t4664;
  double t4668;
  double t4670;
  double t4693;
  double t4704;
  double t4713;
  double t4730;
  double t4732;
  double t4753;
  double t4768;
  double t4769;
  double t4776;
  double t4789;
  double t4791;
  double t4794;
  double t4848;
  double t4853;
  double t4858;
  double t4861;
  double t4862;
  double t4869;
  double t4873;
  double t4874;
  double t4882;
  double t4883;
  double t4892;
  double t4898;
  double t4933;
  double t4964;
  double t4981;
  double t4982;
  double t4990;
  double t5100;
  double t5124;
  double t5128;
  double t5129;
  double t5133;
  double t5135;
  double t5176;
  double t5180;
  double t5186;
  double t5216;
  double t5217;
  double t5233;
  double t5234;
  double t5249;
  double t5289;
  double t5314;
  double t5319;
  double t5323;
  double t5330;
  double t5331;
  double t5333;
  double t5336;
  double t5340;
  double t5342;
  double t5344;
  double t5349;
  double t5530;
  double t5540;
  double t5552;
  double t5555;
  double t5564;
  double t5565;
  double t5575;
  double t5578;
  double t5585;
  double t5588;
  double t5590;
  double t5598;
  double t4320;
  double t4907;
  double t5354;
  double t5367;
  double t5683;
  double t5685;
  double t5686;
  double t5691;
  double t5693;
  double t5699;
  double t5690;
  double t5700;
  double t5702;
  double t5708;
  double t5712;
  double t5713;
  double t5681;
  double t5706;
  double t5718;
  double t5719;
  double t5724;
  double t5726;
  double t5730;
  double t5731;
  double t5736;
  double t5740;
  double t5741;
  double t5742;
  double t5723;
  double t5733;
  double t5744;
  double t5748;
  double t5751;
  double t5754;
  double t5757;
  double t5760;
  double t5769;
  double t5775;
  double t5777;
  double t5786;
  double t5750;
  double t5762;
  double t5794;
  double t5799;
  double t5807;
  double t5813;
  double t5823;
  double t5826;
  double t5831;
  double t5833;
  double t5835;
  double t5844;
  double t5622;
  double t5627;
  double t5628;
  double t5631;
  double t5804;
  double t5828;
  double t5859;
  double t5863;
  double t5870;
  double t5875;
  double t5878;
  double t5879;
  double t5904;
  double t5906;
  double t5907;
  double t5910;
  double t5656;
  double t5657;
  double t5661;
  double t5663;
  double t5964;
  double t5979;
  double t5985;
  double t5987;
  double t5994;
  double t6018;
  double t5963;
  double t5986;
  double t6019;
  double t6020;
  double t6024;
  double t6031;
  double t6033;
  double t6037;
  double t6044;
  double t6049;
  double t6056;
  double t6057;
  double t6021;
  double t6041;
  double t6059;
  double t6062;
  double t6066;
  double t6068;
  double t6069;
  double t6074;
  double t6076;
  double t6079;
  double t6080;
  double t6086;
  double t6064;
  double t6075;
  double t6087;
  double t6090;
  double t6094;
  double t6107;
  double t6117;
  double t6130;
  double t6147;
  double t6148;
  double t6151;
  double t6152;
  double t6092;
  double t6141;
  double t6160;
  double t6162;
  double t6165;
  double t6168;
  double t6170;
  double t6171;
  double t6176;
  double t6180;
  double t6182;
  double t6186;
  t304 = Cos(var1[21]);
  t349 = -1.*t304;
  t371 = 1. + t349;
  t109 = Sin(var1[20]);
  t425 = Sin(var1[21]);
  t709 = Cos(var1[20]);
  t778 = -1.*t709;
  t790 = 1. + t778;
  t373 = -0.8656776547239999*t371;
  t384 = 1. + t373;
  t391 = -0.789039*t384;
  t398 = 0.105986279791916*t371;
  t444 = -0.930418*t425;
  t453 = 0. + t444;
  t455 = -0.529919*t453;
  t458 = t391 + t398 + t455;
  t480 = -0.134322983001*t371;
  t483 = 1. + t480;
  t628 = -0.310811*t483;
  t656 = 0.2690616104987713*t371;
  t660 = -0.366501*t425;
  t672 = 0. + t660;
  t698 = -0.529919*t672;
  t699 = t628 + t656 + t698;
  t1244 = -1.000000637725*t371;
  t1462 = 1. + t1244;
  t1468 = -0.529919*t1462;
  t1482 = 0.366501*t425;
  t1485 = 0. + t1482;
  t1522 = -0.310811*t1485;
  t1610 = 0.930418*t425;
  t1614 = 0. + t1610;
  t1632 = -0.789039*t1614;
  t1637 = t1468 + t1522 + t1632;
  t1949 = Cos(var1[19]);
  t1956 = -1.*t1949;
  t1967 = 1. + t1956;
  t39 = Sin(var1[19]);
  t113 = 0.930418*t109;
  t116 = 0. + t113;
  t463 = t116*t458;
  t467 = 0.366501*t109;
  t479 = 0. + t467;
  t700 = t479*t699;
  t950 = -1.000000637725*t790;
  t1194 = 1. + t950;
  t1747 = t1194*t1637;
  t1757 = 0. + t463 + t700 + t1747;
  t2006 = -0.8656776547239999*t790;
  t2087 = 1. + t2006;
  t2150 = t2087*t458;
  t2252 = -0.340999127418*t790*t699;
  t2263 = -0.930418*t109;
  t2277 = 0. + t2263;
  t2291 = t2277*t1637;
  t2298 = 0. + t2150 + t2252 + t2291;
  t2444 = -0.340999127418*t790*t458;
  t2497 = -0.134322983001*t790;
  t2509 = 1. + t2497;
  t2530 = t2509*t699;
  t2557 = -0.366501*t109;
  t2738 = 0. + t2557;
  t2745 = t2738*t1637;
  t2747 = 0. + t2444 + t2530 + t2745;
  t79 = 0.366501*t39;
  t92 = 0. + t79;
  t1877 = t92*t1757;
  t2379 = -0.340999127418*t1967*t2298;
  t2394 = -0.134322983001*t1967;
  t2424 = 1. + t2394;
  t2780 = t2424*t2747;
  t2789 = 0. + t1877 + t2379 + t2780;
  t3282 = Sin(var1[18]);
  t2809 = 0.930418*t39;
  t2870 = 0. + t2809;
  t2975 = t2870*t1757;
  t2993 = -0.8656776547239999*t1967;
  t3003 = 1. + t2993;
  t3011 = t3003*t2298;
  t3064 = -0.340999127418*t1967*t2747;
  t3087 = 0. + t2975 + t3011 + t3064;
  t3294 = 0.930418*t3282;
  t3299 = 0. + t3294;
  t3333 = -0.366501*t3282;
  t3351 = 0. + t3333;
  t3410 = Cos(var1[18]);
  t3528 = -1.*t3410;
  t3532 = 1. + t3528;
  t3545 = -1.000000637725*t3532;
  t3550 = 1. + t3545;
  t3560 = -1.000000637725*t1967;
  t3612 = 1. + t3560;
  t3616 = t3612*t1757;
  t3674 = -0.930418*t39;
  t3675 = 0. + t3674;
  t3676 = t3675*t2298;
  t3678 = -0.366501*t39;
  t3680 = 0. + t3678;
  t3688 = t3680*t2747;
  t3691 = 0. + t3616 + t3676 + t3688;
  t4039 = Sin(var1[17]);
  t3845 = -0.8656776547239999*t3532;
  t3846 = 1. + t3845;
  t3853 = t3846*t2789;
  t3863 = 0.340999127418*t3532*t3087;
  t3881 = -0.930418*t3282;
  t3894 = 0. + t3881;
  t3993 = t3894*t3691;
  t3995 = 0. + t3853 + t3863 + t3993;
  t3842 = Cos(var1[17]);
  t4043 = 0.340999127418*t3532*t2789;
  t4044 = -0.134322983001*t3532;
  t4054 = 1. + t4044;
  t4055 = t4054*t3087;
  t4056 = 0.366501*t3282;
  t4058 = 0. + t4056;
  t4059 = t4058*t3691;
  t4071 = 0. + t4043 + t4055 + t4059;
  t3702 = t3299*t2789;
  t3703 = t3351*t3087;
  t3704 = t3550*t3691;
  t3717 = 0. + t3702 + t3703 + t3704;
  t3839 = Cos(var1[5]);
  t4129 = -1.*t4039*t3995;
  t4132 = t3842*t4071;
  t4152 = 0. + t4129 + t4132;
  t4032 = t3842*t3995;
  t4087 = t4039*t4071;
  t4107 = 0. + t4032 + t4087;
  t4155 = Sin(var1[5]);
  t4327 = -0.493047*t384;
  t4329 = 0.06622748653061429*t371;
  t4336 = 0.848048*t453;
  t4338 = t4327 + t4329 + t4336;
  t4340 = -0.194216*t483;
  t4343 = 0.16812859677606265*t371;
  t4352 = 0.848048*t672;
  t4356 = t4340 + t4343 + t4352;
  t4373 = 0.848048*t1462;
  t4409 = -0.194216*t1485;
  t4414 = -0.493047*t1614;
  t4416 = t4373 + t4409 + t4414;
  t4339 = t116*t4338;
  t4357 = t479*t4356;
  t4427 = t1194*t4416;
  t4459 = 0. + t4339 + t4357 + t4427;
  t4519 = t2087*t4338;
  t4554 = -0.340999127418*t790*t4356;
  t4555 = t2277*t4416;
  t4564 = 0. + t4519 + t4554 + t4555;
  t4583 = -0.340999127418*t790*t4338;
  t4598 = t2509*t4356;
  t4606 = t2738*t4416;
  t4619 = 0. + t4583 + t4598 + t4606;
  t4502 = t92*t4459;
  t4565 = -0.340999127418*t1967*t4564;
  t4621 = t2424*t4619;
  t4628 = 0. + t4502 + t4565 + t4621;
  t4645 = t2870*t4459;
  t4646 = t3003*t4564;
  t4656 = -0.340999127418*t1967*t4619;
  t4658 = 0. + t4645 + t4646 + t4656;
  t4673 = t3612*t4459;
  t4675 = t3675*t4564;
  t4680 = t3680*t4619;
  t4692 = 0. + t4673 + t4675 + t4680;
  t4804 = t3846*t4628;
  t4806 = 0.340999127418*t3532*t4658;
  t4812 = t3894*t4692;
  t4816 = 0. + t4804 + t4806 + t4812;
  t4824 = 0.340999127418*t3532*t4628;
  t4832 = t4054*t4658;
  t4837 = t4058*t4692;
  t4843 = 0. + t4824 + t4832 + t4837;
  t4714 = t3299*t4628;
  t4719 = t3351*t4658;
  t4720 = t3550*t4692;
  t4726 = 0. + t4714 + t4719 + t4720;
  t4217 = Sin(var1[4]);
  t4265 = Cos(var1[4]);
  t4850 = -1.*t4039*t4816;
  t4851 = t3842*t4843;
  t4852 = 0. + t4850 + t4851;
  t4818 = t3842*t4816;
  t4844 = t4039*t4843;
  t4846 = 0. + t4818 + t4844;
  t4973 = 0.930418*t483;
  t4977 = 0.12497652119782442*t371;
  t4979 = t4973 + t4977;
  t4940 = -0.366501*t384;
  t4946 = -0.3172717261340007*t371;
  t4948 = t4940 + t4946;
  t4998 = 0.930418*t1485;
  t5004 = -0.366501*t1614;
  t5008 = t4998 + t5004;
  t4993 = t4979*t479;
  t4995 = t4948*t116;
  t5012 = t1194*t5008;
  t5022 = 0. + t4993 + t4995 + t5012;
  t5031 = t2087*t4948;
  t5040 = -0.340999127418*t790*t4979;
  t5041 = t2277*t5008;
  t5042 = 0. + t5031 + t5040 + t5041;
  t5051 = -0.340999127418*t790*t4948;
  t5067 = t2509*t4979;
  t5079 = t2738*t5008;
  t5093 = 0. + t5051 + t5067 + t5079;
  t5023 = t92*t5022;
  t5048 = -0.340999127418*t1967*t5042;
  t5097 = t2424*t5093;
  t5099 = 0. + t5023 + t5048 + t5097;
  t5101 = t2870*t5022;
  t5102 = t3003*t5042;
  t5116 = -0.340999127418*t1967*t5093;
  t5122 = 0. + t5101 + t5102 + t5116;
  t5136 = t3612*t5022;
  t5159 = t3675*t5042;
  t5164 = t3680*t5093;
  t5165 = 0. + t5136 + t5159 + t5164;
  t5263 = t3846*t5099;
  t5264 = 0.340999127418*t3532*t5122;
  t5267 = t3894*t5165;
  t5269 = 0. + t5263 + t5264 + t5267;
  t5274 = 0.340999127418*t3532*t5099;
  t5281 = t4054*t5122;
  t5283 = t4058*t5165;
  t5284 = 0. + t5274 + t5281 + t5283;
  t5188 = t3299*t5099;
  t5212 = t3351*t5122;
  t5213 = t3550*t5165;
  t5215 = 0. + t5188 + t5212 + t5213;
  t5295 = -1.*t4039*t5269;
  t5303 = t3842*t5284;
  t5312 = 0. + t5295 + t5303;
  t5270 = t3842*t5269;
  t5285 = t4039*t5284;
  t5286 = 0. + t5270 + t5285;
  t5369 = Cos(var1[3]);
  t5379 = Sin(var1[3]);
  t5378 = t5369*t3839*t4217;
  t5380 = t5379*t4155;
  t5382 = t5378 + t5380;
  t5389 = -1.*t3839*t5379;
  t5390 = t5369*t4217*t4155;
  t5398 = t5389 + t5390;
  t5383 = -1.*t4039*t5382;
  t5399 = t3842*t5398;
  t5403 = t5383 + t5399;
  t5405 = t3842*t5382;
  t5417 = t4039*t5398;
  t5422 = t5405 + t5417;
  t5371 = t5369*t4265*t3351;
  t5404 = 0.340999127418*t3532*t5403;
  t5423 = t4054*t5422;
  t5429 = t5371 + t5404 + t5423;
  t5433 = t5369*t4265*t3299;
  t5434 = t3846*t5403;
  t5440 = 0.340999127418*t3532*t5422;
  t5445 = t5433 + t5434 + t5440;
  t5453 = t3550*t5369*t4265;
  t5454 = t3894*t5403;
  t5457 = t4058*t5422;
  t5460 = t5453 + t5454 + t5457;
  t5430 = t2870*t5429;
  t5447 = t92*t5445;
  t5467 = t3612*t5460;
  t5469 = t5430 + t5447 + t5467;
  t5472 = t3003*t5429;
  t5480 = -0.340999127418*t1967*t5445;
  t5486 = t3675*t5460;
  t5491 = t5472 + t5480 + t5486;
  t5499 = -0.340999127418*t1967*t5429;
  t5505 = t2424*t5445;
  t5510 = t3680*t5460;
  t5514 = t5499 + t5505 + t5510;
  t5471 = t479*t5469;
  t5496 = -0.340999127418*t790*t5491;
  t5524 = t2509*t5514;
  t5525 = t5471 + t5496 + t5524;
  t5531 = t116*t5469;
  t5534 = t2087*t5491;
  t5538 = -0.340999127418*t790*t5514;
  t5539 = t5531 + t5534 + t5538;
  t5543 = t1194*t5469;
  t5546 = t2277*t5491;
  t5549 = t2738*t5514;
  t5550 = t5543 + t5546 + t5549;
  t36 = -5.664589999843095e-7*var2[21];
  t2792 = -0.366501*t2789;
  t3136 = -0.930418*t3087;
  t3206 = 0. + t2792 + t3136;
  t3270 = var2[18]*t3206;
  t3310 = -1.*t3299*t2789;
  t3354 = -1.*t3351*t3087;
  t3692 = -1.*t3550*t3691;
  t3693 = 0. + t3310 + t3354 + t3692;
  t3696 = var2[17]*t3693;
  t3728 = var2[5]*t3717;
  t3743 = 0.366501*t2298;
  t3745 = -0.930418*t2747;
  t3769 = 0. + t3743 + t3745;
  t3771 = var2[19]*t3769;
  t3783 = -0.366501*t458;
  t3810 = 0.930418*t699;
  t3816 = 0. + t3783 + t3810;
  t3836 = var2[20]*t3816;
  t4115 = t3839*t4107;
  t4159 = -1.*t4152*t4155;
  t4188 = 0. + t4115 + t4159;
  t4208 = var2[4]*t4188;
  t4242 = -1.*t3717*t4217;
  t4279 = t3839*t4152;
  t4285 = t4107*t4155;
  t4287 = 0. + t4279 + t4285;
  t4291 = t4265*t4287;
  t4309 = 0. + t4242 + t4291;
  t4315 = var2[3]*t4309;
  t4319 = t36 + t3270 + t3696 + t3728 + t3771 + t3836 + t4208 + t4315;
  t4321 = 1.5625900004478943e-7*var2[21];
  t4644 = -0.366501*t4628;
  t4659 = -0.930418*t4658;
  t4662 = 0. + t4644 + t4659;
  t4664 = var2[18]*t4662;
  t4668 = -1.*t3299*t4628;
  t4670 = -1.*t3351*t4658;
  t4693 = -1.*t3550*t4692;
  t4704 = 0. + t4668 + t4670 + t4693;
  t4713 = var2[17]*t4704;
  t4730 = var2[5]*t4726;
  t4732 = 0.366501*t4564;
  t4753 = -0.930418*t4619;
  t4768 = 0. + t4732 + t4753;
  t4769 = var2[19]*t4768;
  t4776 = -0.366501*t4338;
  t4789 = 0.930418*t4356;
  t4791 = 0. + t4776 + t4789;
  t4794 = var2[20]*t4791;
  t4848 = t3839*t4846;
  t4853 = -1.*t4852*t4155;
  t4858 = 0. + t4848 + t4853;
  t4861 = var2[4]*t4858;
  t4862 = -1.*t4726*t4217;
  t4869 = t3839*t4852;
  t4873 = t4846*t4155;
  t4874 = 0. + t4869 + t4873;
  t4882 = t4265*t4874;
  t4883 = 0. + t4862 + t4882;
  t4892 = var2[3]*t4883;
  t4898 = t4321 + t4664 + t4713 + t4730 + t4769 + t4794 + t4861 + t4892;
  t4933 = 1.000000637725*var2[21];
  t4964 = -0.366501*t4948;
  t4981 = 0.930418*t4979;
  t4982 = 0. + t4964 + t4981;
  t4990 = var2[20]*t4982;
  t5100 = -0.366501*t5099;
  t5124 = -0.930418*t5122;
  t5128 = 0. + t5100 + t5124;
  t5129 = var2[18]*t5128;
  t5133 = -1.*t3299*t5099;
  t5135 = -1.*t3351*t5122;
  t5176 = -1.*t3550*t5165;
  t5180 = 0. + t5133 + t5135 + t5176;
  t5186 = var2[17]*t5180;
  t5216 = var2[5]*t5215;
  t5217 = 0.366501*t5042;
  t5233 = -0.930418*t5093;
  t5234 = 0. + t5217 + t5233;
  t5249 = var2[19]*t5234;
  t5289 = t3839*t5286;
  t5314 = -1.*t5312*t4155;
  t5319 = 0. + t5289 + t5314;
  t5323 = var2[4]*t5319;
  t5330 = -1.*t5215*t4217;
  t5331 = t3839*t5312;
  t5333 = t5286*t4155;
  t5336 = 0. + t5331 + t5333;
  t5340 = t4265*t5336;
  t5342 = 0. + t5330 + t5340;
  t5344 = var2[3]*t5342;
  t5349 = t4933 + t4990 + t5129 + t5186 + t5216 + t5249 + t5323 + t5344;
  t5530 = t672*t5525;
  t5540 = t453*t5539;
  t5552 = t1462*t5550;
  t5555 = t5530 + t5540 + t5552;
  t5564 = t483*t5525;
  t5565 = -0.340999127418*t371*t5539;
  t5575 = t1485*t5550;
  t5578 = t5564 + t5565 + t5575;
  t5585 = -0.340999127418*t371*t5525;
  t5588 = t384*t5539;
  t5590 = t1614*t5550;
  t5598 = t5585 + t5588 + t5590;
  t4320 = 0.01641*t4319;
  t4907 = -0.00061*t4898;
  t5354 = -0.00001*t5349;
  t5367 = t4320 + t4907 + t5354;
  t5683 = t3839*t5379*t4217;
  t5685 = -1.*t5369*t4155;
  t5686 = t5683 + t5685;
  t5691 = t5369*t3839;
  t5693 = t5379*t4217*t4155;
  t5699 = t5691 + t5693;
  t5690 = -1.*t4039*t5686;
  t5700 = t3842*t5699;
  t5702 = t5690 + t5700;
  t5708 = t3842*t5686;
  t5712 = t4039*t5699;
  t5713 = t5708 + t5712;
  t5681 = t4265*t3351*t5379;
  t5706 = 0.340999127418*t3532*t5702;
  t5718 = t4054*t5713;
  t5719 = t5681 + t5706 + t5718;
  t5724 = t4265*t3299*t5379;
  t5726 = t3846*t5702;
  t5730 = 0.340999127418*t3532*t5713;
  t5731 = t5724 + t5726 + t5730;
  t5736 = t3550*t4265*t5379;
  t5740 = t3894*t5702;
  t5741 = t4058*t5713;
  t5742 = t5736 + t5740 + t5741;
  t5723 = t2870*t5719;
  t5733 = t92*t5731;
  t5744 = t3612*t5742;
  t5748 = t5723 + t5733 + t5744;
  t5751 = t3003*t5719;
  t5754 = -0.340999127418*t1967*t5731;
  t5757 = t3675*t5742;
  t5760 = t5751 + t5754 + t5757;
  t5769 = -0.340999127418*t1967*t5719;
  t5775 = t2424*t5731;
  t5777 = t3680*t5742;
  t5786 = t5769 + t5775 + t5777;
  t5750 = t479*t5748;
  t5762 = -0.340999127418*t790*t5760;
  t5794 = t2509*t5786;
  t5799 = t5750 + t5762 + t5794;
  t5807 = t116*t5748;
  t5813 = t2087*t5760;
  t5823 = -0.340999127418*t790*t5786;
  t5826 = t5807 + t5813 + t5823;
  t5831 = t1194*t5748;
  t5833 = t2277*t5760;
  t5835 = t2738*t5786;
  t5844 = t5831 + t5833 + t5835;
  t5622 = -0.00061*t4319;
  t5627 = 0.00093*t4898;
  t5628 = 0.0001*t5349;
  t5631 = t5622 + t5627 + t5628;
  t5804 = t672*t5799;
  t5828 = t453*t5826;
  t5859 = t1462*t5844;
  t5863 = t5804 + t5828 + t5859;
  t5870 = t483*t5799;
  t5875 = -0.340999127418*t371*t5826;
  t5878 = t1485*t5844;
  t5879 = t5870 + t5875 + t5878;
  t5904 = -0.340999127418*t371*t5799;
  t5906 = t384*t5826;
  t5907 = t1614*t5844;
  t5910 = t5904 + t5906 + t5907;
  t5656 = -0.00001*t4319;
  t5657 = 0.0001*t4898;
  t5661 = 0.0165*t5349;
  t5663 = t5656 + t5657 + t5661;
  t5964 = -1.*t4265*t3839*t4039;
  t5979 = t3842*t4265*t4155;
  t5985 = t5964 + t5979;
  t5987 = t3842*t4265*t3839;
  t5994 = t4265*t4039*t4155;
  t6018 = t5987 + t5994;
  t5963 = -1.*t3351*t4217;
  t5986 = 0.340999127418*t3532*t5985;
  t6019 = t4054*t6018;
  t6020 = t5963 + t5986 + t6019;
  t6024 = -1.*t3299*t4217;
  t6031 = t3846*t5985;
  t6033 = 0.340999127418*t3532*t6018;
  t6037 = t6024 + t6031 + t6033;
  t6044 = -1.*t3550*t4217;
  t6049 = t3894*t5985;
  t6056 = t4058*t6018;
  t6057 = t6044 + t6049 + t6056;
  t6021 = t2870*t6020;
  t6041 = t92*t6037;
  t6059 = t3612*t6057;
  t6062 = t6021 + t6041 + t6059;
  t6066 = t3003*t6020;
  t6068 = -0.340999127418*t1967*t6037;
  t6069 = t3675*t6057;
  t6074 = t6066 + t6068 + t6069;
  t6076 = -0.340999127418*t1967*t6020;
  t6079 = t2424*t6037;
  t6080 = t3680*t6057;
  t6086 = t6076 + t6079 + t6080;
  t6064 = t479*t6062;
  t6075 = -0.340999127418*t790*t6074;
  t6087 = t2509*t6086;
  t6090 = t6064 + t6075 + t6087;
  t6094 = t116*t6062;
  t6107 = t2087*t6074;
  t6117 = -0.340999127418*t790*t6086;
  t6130 = t6094 + t6107 + t6117;
  t6147 = t1194*t6062;
  t6148 = t2277*t6074;
  t6151 = t2738*t6086;
  t6152 = t6147 + t6148 + t6151;
  t6092 = t672*t6090;
  t6141 = t453*t6130;
  t6160 = t1462*t6152;
  t6162 = t6092 + t6141 + t6160;
  t6165 = t483*t6090;
  t6168 = -0.340999127418*t371*t6130;
  t6170 = t1485*t6152;
  t6171 = t6165 + t6168 + t6170;
  t6176 = -0.340999127418*t371*t6090;
  t6180 = t384*t6130;
  t6182 = t1614*t6152;
  t6186 = t6176 + t6180 + t6182;
  p_output1[0]=t5367*(-0.529919*t5555 - 0.310811*t5578 - 0.789039*t5598) + (0.848048*t5555 - 0.194216*t5578 - 0.493047*t5598)*t5631 + (0.930418*t5578 - 0.366501*t5598)*t5663;
  p_output1[1]=t5367*(-0.529919*t5863 - 0.310811*t5879 - 0.789039*t5910) + t5631*(0.848048*t5863 - 0.194216*t5879 - 0.493047*t5910) + t5663*(0.930418*t5879 - 0.366501*t5910);
  p_output1[2]=t5367*(-0.529919*t6162 - 0.310811*t6171 - 0.789039*t6186) + t5631*(0.848048*t6162 - 0.194216*t6171 - 0.493047*t6186) + t5663*(0.930418*t6171 - 0.366501*t6186);
}



void AMWorld_right_tarsus_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
