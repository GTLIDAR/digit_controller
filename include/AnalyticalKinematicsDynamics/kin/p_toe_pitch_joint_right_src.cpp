/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:46:46 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "p_toe_pitch_joint_right_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t112;
  double t44;
  double t929;
  double t1039;
  double t1010;
  double t1051;
  double t59;
  double t78;
  double t90;
  double t900;
  double t1036;
  double t1234;
  double t1255;
  double t1409;
  double t1669;
  double t1679;
  double t1725;
  double t56;
  double t2438;
  double t2441;
  double t2175;
  double t2363;
  double t2371;
  double t2510;
  double t2521;
  double t2582;
  double t2772;
  double t2812;
  double t2826;
  double t2832;
  double t2046;
  double t2100;
  double t195;
  double t240;
  double t427;
  double t430;
  double t3343;
  double t3211;
  double t3212;
  double t2978;
  double t2984;
  double t2989;
  double t2990;
  double t2993;
  double t3009;
  double t3185;
  double t3189;
  double t3123;
  double t3149;
  double t3150;
  double t3171;
  double t3173;
  double t3174;
  double t3257;
  double t3259;
  double t3263;
  double t3266;
  double t3283;
  double t3303;
  double t3312;
  double t3315;
  double t3318;
  double t2868;
  double t2873;
  double t3062;
  double t3107;
  double t3476;
  double t3477;
  double t3381;
  double t3399;
  double t3400;
  double t3401;
  double t3406;
  double t3408;
  double t3442;
  double t3447;
  double t3448;
  double t3449;
  double t3455;
  double t3468;
  double t3499;
  double t3510;
  double t3520;
  double t3522;
  double t3524;
  double t3533;
  double t3543;
  double t3544;
  double t3560;
  double t3566;
  double t3416;
  double t3425;
  double t3351;
  double t3356;
  double t3362;
  double t3370;
  double t3829;
  double t3738;
  double t3744;
  double t3591;
  double t3595;
  double t3597;
  double t3599;
  double t3604;
  double t3611;
  double t3712;
  double t3731;
  double t3670;
  double t3673;
  double t3679;
  double t3683;
  double t3684;
  double t3699;
  double t3764;
  double t3774;
  double t3775;
  double t3777;
  double t3778;
  double t3789;
  double t3817;
  double t3818;
  double t3821;
  double t3568;
  double t3570;
  double t3649;
  double t3660;
  double t4043;
  double t4044;
  double t3879;
  double t3884;
  double t3892;
  double t3897;
  double t3905;
  double t3922;
  double t4002;
  double t4003;
  double t4009;
  double t4014;
  double t4018;
  double t4021;
  double t4061;
  double t4064;
  double t4067;
  double t4068;
  double t4069;
  double t4072;
  double t3959;
  double t3963;
  double t3845;
  double t3847;
  double t3833;
  double t3835;
  double t92;
  double t297;
  double t817;
  double t838;
  double t901;
  double t928;
  double t1579;
  double t1610;
  double t1648;
  double t1653;
  double t1783;
  double t2027;
  double t2136;
  double t2170;
  double t4183;
  double t4190;
  double t4194;
  double t4206;
  double t4208;
  double t4212;
  double t2426;
  double t2434;
  double t2481;
  double t2503;
  double t2713;
  double t2831;
  double t2876;
  double t2903;
  double t4216;
  double t4219;
  double t4223;
  double t4230;
  double t4231;
  double t4232;
  double t3044;
  double t3047;
  double t3114;
  double t3122;
  double t3177;
  double t3203;
  double t3224;
  double t3241;
  double t3335;
  double t3358;
  double t3375;
  double t3378;
  double t4247;
  double t4253;
  double t4255;
  double t4256;
  double t4270;
  double t4272;
  double t4274;
  double t4287;
  double t4290;
  double t4291;
  double t4292;
  double t4296;
  double t3414;
  double t3415;
  double t3430;
  double t3433;
  double t3471;
  double t3474;
  double t3485;
  double t3486;
  double t3536;
  double t3564;
  double t3572;
  double t3573;
  double t4298;
  double t4300;
  double t4302;
  double t4304;
  double t4311;
  double t4316;
  double t4321;
  double t4325;
  double t4328;
  double t4332;
  double t4333;
  double t4334;
  double t3647;
  double t3648;
  double t3664;
  double t3665;
  double t3706;
  double t3736;
  double t3754;
  double t3761;
  double t3825;
  double t3840;
  double t3868;
  double t3878;
  double t4348;
  double t4349;
  double t4351;
  double t4353;
  double t4359;
  double t4370;
  double t4371;
  double t4378;
  double t4381;
  double t4383;
  double t4386;
  double t4390;
  double t3926;
  double t3954;
  double t3967;
  double t3989;
  double t4026;
  double t4029;
  double t4048;
  double t4049;
  double t4401;
  double t4405;
  double t4413;
  double t4416;
  double t4424;
  double t4426;
  double t4432;
  double t4437;
  double t4087;
  double t4101;
  double t4448;
  double t4449;
  double t4459;
  double t4466;
  double t4120;
  double t4123;
  double t4135;
  double t4152;
  double t4567;
  double t4579;
  double t4587;
  double t4604;
  double t4605;
  double t4606;
  double t4611;
  double t4612;
  double t4619;
  double t4629;
  double t4647;
  double t4651;
  double t4652;
  double t4659;
  double t4668;
  double t4676;
  double t4694;
  double t4706;
  double t4723;
  double t4729;
  double t4732;
  double t4733;
  double t4749;
  double t4754;
  double t4761;
  double t4762;
  double t4775;
  double t4789;
  double t4805;
  double t4806;
  double t4817;
  double t4819;
  double t4822;
  double t4825;
  double t4846;
  double t4851;
  double t4852;
  double t4854;
  double t4881;
  double t4891;
  double t4894;
  double t4906;
  double t4912;
  double t4934;
  double t4935;
  double t4937;
  double t4943;
  double t4959;
  double t4962;
  double t4966;
  double t4971;
  double t4973;
  double t4979;
  double t4981;
  t112 = Sin(var1[18]);
  t44 = Cos(var1[3]);
  t929 = Cos(var1[5]);
  t1039 = Sin(var1[3]);
  t1010 = Sin(var1[4]);
  t1051 = Sin(var1[5]);
  t59 = Cos(var1[18]);
  t78 = -1.*t59;
  t90 = 1. + t78;
  t900 = Sin(var1[17]);
  t1036 = t44*t929*t1010;
  t1234 = t1039*t1051;
  t1255 = t1036 + t1234;
  t1409 = Cos(var1[17]);
  t1669 = -1.*t929*t1039;
  t1679 = t44*t1010*t1051;
  t1725 = t1669 + t1679;
  t56 = Cos(var1[4]);
  t2438 = -0.366501*t112;
  t2441 = 0. + t2438;
  t2175 = -1.*t900*t1255;
  t2363 = t1409*t1725;
  t2371 = t2175 + t2363;
  t2510 = t1409*t1255;
  t2521 = t900*t1725;
  t2582 = t2510 + t2521;
  t2772 = Cos(var1[19]);
  t2812 = -1.*t2772;
  t2826 = 1. + t2812;
  t2832 = Sin(var1[19]);
  t2046 = 0.930418*t112;
  t2100 = 0. + t2046;
  t195 = -0.930418*t112;
  t240 = 0. + t195;
  t427 = 0.366501*t112;
  t430 = 0. + t427;
  t3343 = Sin(var1[20]);
  t3211 = 0.930418*t2832;
  t3212 = 0. + t3211;
  t2978 = t44*t56*t2441;
  t2984 = 0.340999127418*t90*t2371;
  t2989 = -0.134322983001*t90;
  t2990 = 1. + t2989;
  t2993 = t2990*t2582;
  t3009 = t2978 + t2984 + t2993;
  t3185 = 0.366501*t2832;
  t3189 = 0. + t3185;
  t3123 = t44*t56*t2100;
  t3149 = -0.8656776547239999*t90;
  t3150 = 1. + t3149;
  t3171 = t3150*t2371;
  t3173 = 0.340999127418*t90*t2582;
  t3174 = t3123 + t3171 + t3173;
  t3257 = -1.000000637725*t90;
  t3259 = 1. + t3257;
  t3263 = t3259*t44*t56;
  t3266 = t240*t2371;
  t3283 = t430*t2582;
  t3303 = t3263 + t3266 + t3283;
  t3312 = Cos(var1[20]);
  t3315 = -1.*t3312;
  t3318 = 1. + t3315;
  t2868 = -0.930418*t2832;
  t2873 = 0. + t2868;
  t3062 = -0.366501*t2832;
  t3107 = 0. + t3062;
  t3476 = 0.366501*t3343;
  t3477 = 0. + t3476;
  t3381 = t3212*t3009;
  t3399 = t3189*t3174;
  t3400 = -1.000000637725*t2826;
  t3401 = 1. + t3400;
  t3406 = t3401*t3303;
  t3408 = t3381 + t3399 + t3406;
  t3442 = -0.8656776547239999*t2826;
  t3447 = 1. + t3442;
  t3448 = t3447*t3009;
  t3449 = -0.340999127418*t2826*t3174;
  t3455 = t2873*t3303;
  t3468 = t3448 + t3449 + t3455;
  t3499 = -0.340999127418*t2826*t3009;
  t3510 = -0.134322983001*t2826;
  t3520 = 1. + t3510;
  t3522 = t3520*t3174;
  t3524 = t3107*t3303;
  t3533 = t3499 + t3522 + t3524;
  t3543 = Cos(var1[21]);
  t3544 = -1.*t3543;
  t3560 = 1. + t3544;
  t3566 = Sin(var1[21]);
  t3416 = 0.930418*t3343;
  t3425 = 0. + t3416;
  t3351 = -0.930418*t3343;
  t3356 = 0. + t3351;
  t3362 = -0.366501*t3343;
  t3370 = 0. + t3362;
  t3829 = Sin(var1[22]);
  t3738 = -0.366501*t3566;
  t3744 = 0. + t3738;
  t3591 = t3477*t3408;
  t3595 = -0.340999127418*t3318*t3468;
  t3597 = -0.134322983001*t3318;
  t3599 = 1. + t3597;
  t3604 = t3599*t3533;
  t3611 = t3591 + t3595 + t3604;
  t3712 = -0.930418*t3566;
  t3731 = 0. + t3712;
  t3670 = t3425*t3408;
  t3673 = -0.8656776547239999*t3318;
  t3679 = 1. + t3673;
  t3683 = t3679*t3468;
  t3684 = -0.340999127418*t3318*t3533;
  t3699 = t3670 + t3683 + t3684;
  t3764 = -1.000000637725*t3318;
  t3774 = 1. + t3764;
  t3775 = t3774*t3408;
  t3777 = t3356*t3468;
  t3778 = t3370*t3533;
  t3789 = t3775 + t3777 + t3778;
  t3817 = Cos(var1[22]);
  t3818 = -1.*t3817;
  t3821 = 1. + t3818;
  t3568 = 0.366501*t3566;
  t3570 = 0. + t3568;
  t3649 = 0.930418*t3566;
  t3660 = 0. + t3649;
  t4043 = 0.930418*t3829;
  t4044 = 0. + t4043;
  t3879 = t3744*t3611;
  t3884 = t3731*t3699;
  t3892 = -1.000000637725*t3560;
  t3897 = 1. + t3892;
  t3905 = t3897*t3789;
  t3922 = t3879 + t3884 + t3905;
  t4002 = -0.134322983001*t3560;
  t4003 = 1. + t4002;
  t4009 = t4003*t3611;
  t4014 = -0.340999127418*t3560*t3699;
  t4018 = t3570*t3789;
  t4021 = t4009 + t4014 + t4018;
  t4061 = -0.340999127418*t3560*t3611;
  t4064 = -0.8656776547239999*t3560;
  t4067 = 1. + t4064;
  t4068 = t4067*t3699;
  t4069 = t3660*t3789;
  t4072 = t4061 + t4068 + t4069;
  t3959 = 0.366501*t3829;
  t3963 = 0. + t3959;
  t3845 = -0.366501*t3829;
  t3847 = 0. + t3845;
  t3833 = -0.930418*t3829;
  t3835 = 0. + t3833;
  t92 = -0.04500040093286238*t90;
  t297 = -0.07877663122399998*t240;
  t817 = 0.031030906668*t430;
  t838 = 0. + t92 + t297 + t817;
  t901 = -0.091*t900;
  t928 = 0. + t901;
  t1579 = -1.*t1409;
  t1610 = 1. + t1579;
  t1648 = -0.091*t1610;
  t1653 = 0. + t1648;
  t1783 = 1.296332362046933e-7*var1[18];
  t2027 = -0.07877668146182712*t90;
  t2136 = -0.045000372235*t2100;
  t2170 = t1783 + t2027 + t2136;
  t4183 = t929*t1039*t1010;
  t4190 = -1.*t44*t1051;
  t4194 = t4183 + t4190;
  t4206 = t44*t929;
  t4208 = t1039*t1010*t1051;
  t4212 = t4206 + t4208;
  t2426 = 3.2909349868922137e-7*var1[18];
  t2434 = 0.03103092645718495*t90;
  t2481 = -0.045000372235*t2441;
  t2503 = t2426 + t2434 + t2481;
  t2713 = -1.296332362046933e-7*var1[19];
  t2831 = -0.14128592423750855*t2826;
  t2876 = -0.045000372235*t2873;
  t2903 = t2713 + t2831 + t2876;
  t4216 = -1.*t900*t4194;
  t4219 = t1409*t4212;
  t4223 = t4216 + t4219;
  t4230 = t1409*t4194;
  t4231 = t900*t4212;
  t4232 = t4230 + t4231;
  t3044 = 3.2909349868922137e-7*var1[19];
  t3047 = -0.055653945343889656*t2826;
  t3114 = -0.045000372235*t3107;
  t3122 = t3044 + t3047 + t3114;
  t3177 = -0.04500040093286238*t2826;
  t3203 = -0.055653909852*t3189;
  t3224 = -0.141285834136*t3212;
  t3241 = 0. + t3177 + t3203 + t3224;
  t3335 = 0.039853038461262744*t3318;
  t3358 = -0.22023459268999998*t3356;
  t3375 = -0.086752619205*t3370;
  t3378 = 0. + t3335 + t3358 + t3375;
  t4247 = t56*t2441*t1039;
  t4253 = 0.340999127418*t90*t4223;
  t4255 = t2990*t4232;
  t4256 = t4247 + t4253 + t4255;
  t4270 = t56*t2100*t1039;
  t4272 = t3150*t4223;
  t4274 = 0.340999127418*t90*t4232;
  t4287 = t4270 + t4272 + t4274;
  t4290 = t3259*t56*t1039;
  t4291 = t240*t4223;
  t4292 = t430*t4232;
  t4296 = t4290 + t4291 + t4292;
  t3414 = 6.295460977284962e-8*var1[20];
  t3415 = -0.22023473313910558*t3318;
  t3430 = 0.039853013046*t3425;
  t3433 = t3414 + t3415 + t3430;
  t3471 = -1.5981976069815686e-7*var1[20];
  t3474 = -0.08675267452931407*t3318;
  t3485 = 0.039853013046*t3477;
  t3486 = t3471 + t3474 + t3485;
  t3536 = 5.7930615939377813e-8*var1[21];
  t3564 = -0.23261833304643187*t3560;
  t3572 = -0.262809976934*t3570;
  t3573 = t3536 + t3564 + t3572;
  t4298 = t3212*t4256;
  t4300 = t3189*t4287;
  t4302 = t3401*t4296;
  t4304 = t4298 + t4300 + t4302;
  t4311 = t3447*t4256;
  t4316 = -0.340999127418*t2826*t4287;
  t4321 = t2873*t4296;
  t4325 = t4311 + t4316 + t4321;
  t4328 = -0.340999127418*t2826*t4256;
  t4332 = t3520*t4287;
  t4333 = t3107*t4296;
  t4334 = t4328 + t4332 + t4333;
  t3647 = -2.281945176511838e-8*var1[21];
  t3648 = -0.5905366811997648*t3560;
  t3664 = -0.262809976934*t3660;
  t3665 = t3647 + t3648 + t3664;
  t3706 = -0.26281014453449253*t3560;
  t3736 = -0.5905363046000001*t3731;
  t3754 = -0.23261818470000004*t3744;
  t3761 = 0. + t3706 + t3736 + t3754;
  t3825 = 0.06199697675299678*t3821;
  t3840 = -0.823260828522*t3835;
  t3868 = -0.324290713329*t3847;
  t3878 = 0. + t3825 + t3840 + t3868;
  t4348 = t3477*t4304;
  t4349 = -0.340999127418*t3318*t4325;
  t4351 = t3599*t4334;
  t4353 = t4348 + t4349 + t4351;
  t4359 = t3425*t4304;
  t4370 = t3679*t4325;
  t4371 = -0.340999127418*t3318*t4334;
  t4378 = t4359 + t4370 + t4371;
  t4381 = t3774*t4304;
  t4383 = t3356*t4325;
  t4386 = t3370*t4334;
  t4390 = t4381 + t4383 + t4386;
  t3926 = 7.500378623168247e-8*var1[22];
  t3954 = -0.32429092013729516*t3821;
  t3967 = 0.061996937216*t3963;
  t3989 = t3926 + t3954 + t3967;
  t4026 = -2.95447451120871e-8*var1[22];
  t4029 = -0.8232613535360118*t3821;
  t4048 = 0.061996937216*t4044;
  t4049 = t4026 + t4029 + t4048;
  t4401 = t3744*t4353;
  t4405 = t3731*t4378;
  t4413 = t3897*t4390;
  t4416 = t4401 + t4405 + t4413;
  t4424 = t4003*t4353;
  t4426 = -0.340999127418*t3560*t4378;
  t4432 = t3570*t4390;
  t4437 = t4424 + t4426 + t4432;
  t4087 = -0.8656776547239999*t3821;
  t4101 = 1. + t4087;
  t4448 = -0.340999127418*t3560*t4353;
  t4449 = t4067*t4378;
  t4459 = t3660*t4390;
  t4466 = t4448 + t4449 + t4459;
  t4120 = -0.134322983001*t3821;
  t4123 = 1. + t4120;
  t4135 = -1.000000637725*t3821;
  t4152 = 1. + t4135;
  t4567 = -1.*t56*t929*t900;
  t4579 = t1409*t56*t1051;
  t4587 = t4567 + t4579;
  t4604 = t1409*t56*t929;
  t4605 = t56*t900*t1051;
  t4606 = t4604 + t4605;
  t4611 = -1.*t2441*t1010;
  t4612 = 0.340999127418*t90*t4587;
  t4619 = t2990*t4606;
  t4629 = t4611 + t4612 + t4619;
  t4647 = -1.*t2100*t1010;
  t4651 = t3150*t4587;
  t4652 = 0.340999127418*t90*t4606;
  t4659 = t4647 + t4651 + t4652;
  t4668 = -1.*t3259*t1010;
  t4676 = t240*t4587;
  t4694 = t430*t4606;
  t4706 = t4668 + t4676 + t4694;
  t4723 = t3212*t4629;
  t4729 = t3189*t4659;
  t4732 = t3401*t4706;
  t4733 = t4723 + t4729 + t4732;
  t4749 = t3447*t4629;
  t4754 = -0.340999127418*t2826*t4659;
  t4761 = t2873*t4706;
  t4762 = t4749 + t4754 + t4761;
  t4775 = -0.340999127418*t2826*t4629;
  t4789 = t3520*t4659;
  t4805 = t3107*t4706;
  t4806 = t4775 + t4789 + t4805;
  t4817 = t3477*t4733;
  t4819 = -0.340999127418*t3318*t4762;
  t4822 = t3599*t4806;
  t4825 = t4817 + t4819 + t4822;
  t4846 = t3425*t4733;
  t4851 = t3679*t4762;
  t4852 = -0.340999127418*t3318*t4806;
  t4854 = t4846 + t4851 + t4852;
  t4881 = t3774*t4733;
  t4891 = t3356*t4762;
  t4894 = t3370*t4806;
  t4906 = t4881 + t4891 + t4894;
  t4912 = t3744*t4825;
  t4934 = t3731*t4854;
  t4935 = t3897*t4906;
  t4937 = t4912 + t4934 + t4935;
  t4943 = t4003*t4825;
  t4959 = -0.340999127418*t3560*t4854;
  t4962 = t3570*t4906;
  t4966 = t4943 + t4959 + t4962;
  t4971 = -0.340999127418*t3560*t4825;
  t4973 = t4067*t4854;
  t4979 = t3660*t4906;
  t4981 = t4971 + t4973 + t4979;
  p_output1[0]=0. + t1653*t1725 + t2170*t2371 + t2503*t2582 + t2903*t3009 + t3122*t3174 + t3241*t3303 + t3378*t3408 + t3433*t3468 + t3486*t3533 + t3573*t3611 + t3665*t3699 + t3761*t3789 + t3878*t3922 + t3989*t4021 + t4049*t4072 - 0.792413*(-0.340999127418*t3821*t4021 + t3922*t4044 + t4072*t4101) - 0.402602*(t3922*t3963 - 0.340999127418*t3821*t4072 + t4021*t4123) + 0.061997*(t3847*t4021 + t3835*t4072 + t3922*t4152) + t44*t56*t838 + t1255*t928 + var1[0];
  p_output1[1]=0. + t1653*t4212 + t2170*t4223 + t2503*t4232 + t2903*t4256 + t3122*t4287 + t3241*t4296 + t3378*t4304 + t3433*t4325 + t3486*t4334 + t3573*t4353 + t3665*t4378 + t3761*t4390 + t3878*t4416 + t3989*t4437 + t4049*t4466 - 0.402602*(t3963*t4416 + t4123*t4437 - 0.340999127418*t3821*t4466) + 0.061997*(t4152*t4416 + t3847*t4437 + t3835*t4466) - 0.792413*(t4044*t4416 - 0.340999127418*t3821*t4437 + t4101*t4466) + t1039*t56*t838 + t4194*t928 + var1[1];
  p_output1[2]=0. + t2170*t4587 + t2503*t4606 + t2903*t4629 + t3122*t4659 + t3241*t4706 + t3378*t4733 + t3433*t4762 + t3486*t4806 + t3573*t4825 + t3665*t4854 + t3761*t4906 + t3878*t4937 + t3989*t4966 + t4049*t4981 - 0.402602*(t3963*t4937 + t4123*t4966 - 0.340999127418*t3821*t4981) + 0.061997*(t4152*t4937 + t3847*t4966 + t3835*t4981) - 0.792413*(t4044*t4937 - 0.340999127418*t3821*t4966 + t4101*t4981) + t1051*t1653*t56 - 1.*t1010*t838 + t56*t928*t929 + var1[2];
}



void p_toe_pitch_joint_right_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
