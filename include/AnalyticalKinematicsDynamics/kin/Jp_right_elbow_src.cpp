/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:22:14 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_right_elbow_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t788;
  double t1137;
  double t1158;
  double t1163;
  double t1185;
  double t1242;
  double t1501;
  double t1343;
  double t1388;
  double t1626;
  double t101;
  double t332;
  double t376;
  double t1464;
  double t1631;
  double t1851;
  double t2422;
  double t2423;
  double t2496;
  double t3636;
  double t3688;
  double t3702;
  double t3870;
  double t39;
  double t3438;
  double t3454;
  double t3054;
  double t3137;
  double t3217;
  double t3584;
  double t3592;
  double t3601;
  double t3867;
  double t2760;
  double t2767;
  double t4295;
  double t3941;
  double t791;
  double t927;
  double t1037;
  double t1049;
  double t4982;
  double t4766;
  double t4052;
  double t4059;
  double t4064;
  double t4077;
  double t4080;
  double t4085;
  double t4731;
  double t4488;
  double t4493;
  double t4500;
  double t4505;
  double t4507;
  double t4540;
  double t4810;
  double t4814;
  double t4828;
  double t4853;
  double t4858;
  double t4860;
  double t4869;
  double t4913;
  double t4937;
  double t3872;
  double t5128;
  double t3953;
  double t5461;
  double t4340;
  double t5151;
  double t4303;
  double t5662;
  double t5711;
  double t5147;
  double t5148;
  double t5160;
  double t5190;
  double t5200;
  double t5290;
  double t5301;
  double t5308;
  double t5433;
  double t5453;
  double t5457;
  double t5476;
  double t5484;
  double t5525;
  double t5561;
  double t5630;
  double t5726;
  double t5728;
  double t5733;
  double t5754;
  double t5758;
  double t5813;
  double t5821;
  double t5838;
  double t5393;
  double t5395;
  double t5049;
  double t5081;
  double t4988;
  double t5039;
  double t516;
  double t966;
  double t1064;
  double t1128;
  double t1208;
  double t1251;
  double t1282;
  double t2081;
  double t2294;
  double t2307;
  double t2511;
  double t2667;
  double t2806;
  double t2892;
  double t6195;
  double t6208;
  double t6211;
  double t6275;
  double t6276;
  double t6280;
  double t3275;
  double t3300;
  double t3455;
  double t3456;
  double t3625;
  double t3752;
  double t3883;
  double t3926;
  double t4003;
  double t4026;
  double t4048;
  double t6313;
  double t6316;
  double t6320;
  double t6357;
  double t6420;
  double t6424;
  double t4234;
  double t4242;
  double t4321;
  double t4331;
  double t4356;
  double t4383;
  double t4440;
  double t4626;
  double t4723;
  double t4732;
  double t4762;
  double t4773;
  double t4794;
  double t4796;
  double t4979;
  double t5041;
  double t5120;
  double t5126;
  double t6442;
  double t6468;
  double t6478;
  double t6483;
  double t6551;
  double t6557;
  double t6573;
  double t6577;
  double t6595;
  double t6599;
  double t6629;
  double t6638;
  double t5333;
  double t5390;
  double t5397;
  double t5408;
  double t5649;
  double t5654;
  double t5715;
  double t5723;
  double t6655;
  double t6657;
  double t6662;
  double t6667;
  double t6686;
  double t6687;
  double t6693;
  double t6709;
  double t5862;
  double t5864;
  double t6717;
  double t6719;
  double t6721;
  double t6726;
  double t5957;
  double t5968;
  double t6043;
  double t6053;
  double t6851;
  double t6853;
  double t6867;
  double t6871;
  double t6872;
  double t6873;
  double t6886;
  double t6887;
  double t6893;
  double t6900;
  double t6910;
  double t6911;
  double t6912;
  double t6919;
  double t6921;
  double t6922;
  double t6924;
  double t6925;
  double t6927;
  double t6929;
  double t6931;
  double t6932;
  double t6939;
  double t6949;
  double t6950;
  double t6963;
  double t6981;
  double t6982;
  double t6984;
  double t6989;
  double t7061;
  double t7062;
  double t7067;
  double t7071;
  double t7076;
  double t7077;
  double t7086;
  double t7088;
  double t7089;
  double t7090;
  double t7095;
  double t7097;
  double t7098;
  double t7104;
  double t7108;
  double t7113;
  double t7116;
  double t7117;
  double t7121;
  double t7126;
  double t7130;
  double t7133;
  double t7140;
  double t7141;
  double t7145;
  double t7152;
  double t7159;
  double t7161;
  double t7162;
  double t7164;
  double t7239;
  double t7250;
  double t7251;
  double t7254;
  double t7255;
  double t7256;
  double t7266;
  double t7267;
  double t7268;
  double t7273;
  double t7276;
  double t7277;
  double t7288;
  double t7289;
  double t7301;
  double t7310;
  double t7315;
  double t7317;
  double t7334;
  double t7336;
  double t7340;
  double t7347;
  double t7353;
  double t7355;
  double t7358;
  double t7362;
  double t7368;
  double t7370;
  double t7379;
  double t7380;
  double t7454;
  double t7459;
  double t7466;
  double t7470;
  double t7475;
  double t7476;
  double t7484;
  double t7490;
  double t7514;
  double t7517;
  double t7518;
  double t7526;
  double t7528;
  double t7529;
  double t7532;
  double t7533;
  double t7535;
  double t7541;
  double t7545;
  double t7552;
  double t7553;
  double t7555;
  double t7561;
  double t7565;
  double t7569;
  double t7583;
  double t7586;
  double t7588;
  double t7589;
  double t7685;
  double t7689;
  double t7693;
  double t7697;
  double t7703;
  double t7705;
  double t7711;
  double t7712;
  double t7714;
  double t7715;
  double t7727;
  double t7739;
  double t7740;
  double t7744;
  double t7746;
  double t7747;
  double t7748;
  double t7750;
  double t7751;
  double t7756;
  double t7758;
  double t7765;
  double t7766;
  double t7767;
  double t7771;
  double t7774;
  double t7776;
  double t7779;
  double t7781;
  double t7869;
  double t7871;
  double t7872;
  double t7875;
  double t7887;
  double t7888;
  double t7900;
  double t7901;
  double t7902;
  double t7921;
  double t7925;
  double t7930;
  double t7946;
  double t7951;
  double t7953;
  double t7960;
  double t7961;
  double t7964;
  double t7966;
  double t7968;
  double t7969;
  double t7970;
  double t7971;
  double t7981;
  double t7982;
  double t7984;
  double t7985;
  double t8038;
  double t8039;
  double t8044;
  double t8047;
  double t8049;
  double t8060;
  double t8062;
  double t8072;
  double t8084;
  double t8085;
  double t8091;
  double t8104;
  double t8105;
  double t8106;
  double t8109;
  double t8122;
  double t8132;
  double t8133;
  double t8137;
  double t8143;
  double t8147;
  double t8148;
  double t8149;
  double t8015;
  double t8020;
  double t8022;
  double t8025;
  double t8027;
  double t8222;
  double t8225;
  double t8230;
  double t8237;
  double t8239;
  double t8241;
  double t8246;
  double t8247;
  double t8256;
  double t8273;
  double t8274;
  double t8277;
  double t8283;
  double t8284;
  double t8288;
  double t8315;
  double t8316;
  double t8317;
  double t8319;
  double t8320;
  double t8321;
  double t8338;
  double t8340;
  double t8341;
  double t8344;
  double t8345;
  double t8356;
  double t8357;
  double t8364;
  double t8365;
  double t8440;
  double t8445;
  double t8448;
  double t8452;
  double t8457;
  double t8458;
  double t8464;
  double t8465;
  double t8468;
  double t8470;
  double t8471;
  double t8474;
  double t8477;
  double t8478;
  double t8479;
  double t8481;
  double t8482;
  double t8483;
  double t8484;
  double t8492;
  double t8493;
  double t8494;
  double t8496;
  double t8502;
  double t8503;
  double t8504;
  double t8505;
  double t8574;
  double t8575;
  double t8577;
  double t8579;
  double t8581;
  double t8582;
  double t8583;
  double t8585;
  double t8587;
  double t8588;
  double t8589;
  double t8590;
  double t8595;
  double t8597;
  double t8604;
  double t8605;
  double t8619;
  double t8622;
  double t8623;
  double t8626;
  double t8628;
  double t8630;
  double t8634;
  double t8635;
  double t8546;
  double t8547;
  double t8550;
  double t8557;
  double t8558;
  double t8559;
  double t8566;
  double t8569;
  double t8570;
  double t8674;
  double t8676;
  double t8679;
  double t8681;
  double t8682;
  double t8685;
  double t8687;
  double t8688;
  double t8689;
  double t8690;
  double t8692;
  double t8694;
  double t8695;
  double t8696;
  double t8698;
  double t8703;
  double t8704;
  double t8708;
  double t8714;
  double t8715;
  double t8717;
  double t8719;
  double t8723;
  double t8724;
  double t8726;
  double t8727;
  double t8765;
  double t8766;
  double t8767;
  double t8768;
  double t8770;
  double t8772;
  double t8773;
  double t8774;
  double t8776;
  double t8777;
  double t8778;
  double t8780;
  double t8782;
  double t8783;
  double t8784;
  double t8785;
  double t8787;
  double t8788;
  double t8789;
  double t8790;
  double t8794;
  double t8795;
  double t8796;
  double t8797;
  double t8821;
  double t8838;
  double t8826;
  double t8820;
  double t8824;
  double t8834;
  double t8862;
  double t8837;
  double t8853;
  double t8866;
  double t8850;
  double t8874;
  double t8861;
  double t8864;
  double t8865;
  double t8867;
  double t8868;
  double t8869;
  double t8871;
  double t8872;
  double t8873;
  double t8876;
  double t8877;
  double t8878;
  double t8880;
  double t8882;
  double t8883;
  double t8885;
  double t8886;
  double t8887;
  double t8822;
  double t8823;
  double t8828;
  double t8829;
  double t8830;
  double t8831;
  double t8835;
  double t8836;
  double t8839;
  double t8843;
  double t8847;
  double t8848;
  double t8851;
  double t8852;
  double t8854;
  double t8856;
  double t8858;
  double t8859;
  double t8913;
  double t8914;
  double t8915;
  double t8917;
  double t8918;
  double t8919;
  double t8920;
  double t8922;
  double t8923;
  double t8924;
  double t8926;
  double t8931;
  double t8934;
  double t8935;
  double t8936;
  double t8939;
  double t8941;
  double t8942;
  double t8943;
  double t8950;
  double t8951;
  double t8962;
  double t8963;
  double t9014;
  double t9018;
  double t9027;
  double t9033;
  double t9038;
  double t9042;
  double t9046;
  double t9053;
  double t9057;
  double t9059;
  double t9065;
  double t9066;
  double t9071;
  double t9074;
  double t9085;
  double t9086;
  double t9088;
  double t9096;
  double t9108;
  double t9115;
  double t9116;
  double t9118;
  double t9167;
  double t9168;
  double t9169;
  double t9171;
  double t9172;
  double t9173;
  double t9175;
  double t9176;
  double t9177;
  double t9209;
  double t9212;
  double t9215;
  double t9216;
  double t9220;
  double t9221;
  double t9222;
  double t9223;
  double t9225;
  double t9226;
  double t9227;
  double t9229;
  double t9250;
  double t9251;
  double t9252;
  double t9253;
  double t9255;
  double t9256;
  double t9257;
  double t9258;
  double t9260;
  double t9261;
  double t9262;
  double t9263;
  t788 = Sin(var1[25]);
  t1137 = Sin(var1[3]);
  t1158 = Cos(var1[24]);
  t1163 = -1.*t1158;
  t1185 = 1. + t1163;
  t1242 = Sin(var1[24]);
  t1501 = Cos(var1[3]);
  t1343 = Cos(var1[5]);
  t1388 = Sin(var1[4]);
  t1626 = Sin(var1[5]);
  t101 = Cos(var1[25]);
  t332 = -1.*t101;
  t376 = 1. + t332;
  t1464 = -1.*t1343*t1137*t1388;
  t1631 = t1501*t1626;
  t1851 = t1464 + t1631;
  t2422 = -1.*t1501*t1343;
  t2423 = -1.*t1137*t1388*t1626;
  t2496 = t2422 + t2423;
  t3636 = Cos(var1[26]);
  t3688 = -1.*t3636;
  t3702 = 1. + t3688;
  t3870 = Sin(var1[26]);
  t39 = Cos(var1[4]);
  t3438 = -0.994522*t788;
  t3454 = 0. + t3438;
  t3054 = -1.*t1242*t1851;
  t3137 = t1158*t2496;
  t3217 = t3054 + t3137;
  t3584 = t1158*t1851;
  t3592 = t1242*t2496;
  t3601 = t3584 + t3592;
  t3867 = -0.051978134642000004*t3702;
  t2760 = -0.104528*t788;
  t2767 = 0. + t2760;
  t4295 = 0.05226439969100001*t3702;
  t3941 = 0.49726168403800003*t3702;
  t791 = 0.104528*t788;
  t927 = 0. + t791;
  t1037 = 0.994522*t788;
  t1049 = 0. + t1037;
  t4982 = Sin(var1[27]);
  t4766 = 0.073913*t3870;
  t4052 = -1.*t39*t3454*t1137;
  t4059 = -0.103955395616*t376*t3217;
  t4064 = -0.9890740084840001*t376;
  t4077 = 1. + t4064;
  t4080 = t4077*t3601;
  t4085 = t4052 + t4059 + t4080;
  t4731 = -0.703234*t3870;
  t4488 = -1.*t39*t2767*t1137;
  t4493 = -0.010926102783999999*t376;
  t4500 = 1. + t4493;
  t4505 = t4500*t3217;
  t4507 = -0.103955395616*t376*t3601;
  t4540 = t4488 + t4505 + t4507;
  t4810 = -1.0000001112680001*t376;
  t4814 = 1. + t4810;
  t4828 = -1.*t4814*t39*t1137;
  t4853 = t927*t3217;
  t4858 = t1049*t3601;
  t4860 = t4828 + t4853 + t4858;
  t4869 = Cos(var1[27]);
  t4913 = -1.*t4869;
  t4937 = 1. + t4913;
  t3872 = -0.707107*t3870;
  t5128 = -0.49726168403800003*t3702;
  t3953 = -0.073913*t3870;
  t5461 = 0.051978134642000004*t3702;
  t4340 = 0.707107*t3870;
  t5151 = -0.05226439969100001*t3702;
  t4303 = 0.703234*t3870;
  t5662 = -0.104528*t4982;
  t5711 = 0. + t5662;
  t5147 = t5128 + t4766;
  t5148 = t5147*t4085;
  t5160 = t5151 + t4731;
  t5190 = t5160*t4540;
  t5200 = -0.500001190325*t3702;
  t5290 = 1. + t5200;
  t5301 = t5290*t4860;
  t5308 = t5148 + t5190 + t5301;
  t5433 = -0.5054634410180001*t3702;
  t5453 = 1. + t5433;
  t5457 = t5453*t4085;
  t5476 = t5461 + t3872;
  t5484 = t5476*t4540;
  t5525 = t5128 + t3953;
  t5561 = t5525*t4860;
  t5630 = t5457 + t5484 + t5561;
  t5726 = t5461 + t4340;
  t5728 = t5726*t4085;
  t5733 = -0.9945383682050002*t3702;
  t5754 = 1. + t5733;
  t5758 = t5754*t4540;
  t5813 = t5151 + t4303;
  t5821 = t5813*t4860;
  t5838 = t5728 + t5758 + t5821;
  t5393 = -0.994522*t4982;
  t5395 = 0. + t5393;
  t5049 = 0.994522*t4982;
  t5081 = 0. + t5049;
  t4988 = 0.104528*t4982;
  t5039 = 0. + t4988;
  t516 = -0.056500534356700764*t376;
  t966 = 0.040271188976*t927;
  t1064 = 0.38315650737400003*t1049;
  t1128 = 0. + t516 + t966 + t1064;
  t1208 = 0.4*t1185;
  t1251 = -0.12*t1242;
  t1282 = 0. + t1208 + t1251;
  t2081 = -0.12*t1185;
  t2294 = -0.4*t1242;
  t2307 = 0. + t2081 + t2294;
  t2511 = 1.1345904784751044e-7*var1[25];
  t2667 = 0.04027119345689465*t376;
  t2806 = -0.05650052807*t2767;
  t2892 = t2511 + t2667 + t2806;
  t6195 = t1501*t1343*t1388;
  t6208 = t1137*t1626;
  t6211 = t6195 + t6208;
  t6275 = -1.*t1343*t1137;
  t6276 = t1501*t1388*t1626;
  t6280 = t6275 + t6276;
  t3275 = -1.1924972351948546e-8*var1[25];
  t3300 = 0.38315655000705834*t376;
  t3455 = -0.05650052807*t3454;
  t3456 = t3275 + t3300 + t3455;
  t3625 = 1.5601527583902087e-7*var1[26];
  t3752 = 0.09582494577057615*t3702;
  t3883 = t3867 + t3872;
  t3926 = -0.231098203479*t3883;
  t4003 = t3941 + t3953;
  t4026 = 0.164383620275*t4003;
  t4048 = t3625 + t3752 + t3926 + t4026;
  t6313 = -1.*t1242*t6211;
  t6316 = t1158*t6280;
  t6320 = t6313 + t6316;
  t6357 = t1158*t6211;
  t6420 = t1242*t6280;
  t6424 = t6357 + t6420;
  t4234 = 1.639789470231751e-8*var1[26];
  t4242 = -0.22983603018311177*t3702;
  t4321 = t4295 + t4303;
  t4331 = 0.164383620275*t4321;
  t4356 = t3867 + t4340;
  t4383 = 0.18957839082800002*t4356;
  t4440 = t4234 + t4242 + t4331 + t4383;
  t4626 = -1.568745163810375e-7*var1[26];
  t4723 = 0.08219200580743281*t3702;
  t4732 = t4295 + t4731;
  t4762 = -0.231098203479*t4732;
  t4773 = t3941 + t4766;
  t4794 = 0.18957839082800002*t4773;
  t4796 = t4626 + t4723 + t4762 + t4794;
  t4979 = 0.19098732144477495*t4937;
  t5041 = 0.014401763312*t5039;
  t5120 = 0.137024246638*t5081;
  t5126 = 0. + t4979 + t5041 + t5120;
  t6442 = t1501*t39*t3454;
  t6468 = -0.103955395616*t376*t6320;
  t6478 = t4077*t6424;
  t6483 = t6442 + t6468 + t6478;
  t6551 = t1501*t39*t2767;
  t6557 = t4500*t6320;
  t6573 = -0.103955395616*t376*t6424;
  t6577 = t6551 + t6557 + t6573;
  t6595 = t4814*t1501*t39;
  t6599 = t927*t6320;
  t6629 = t1049*t6424;
  t6638 = t6595 + t6599 + t6629;
  t5333 = 5.06291820800569e-8*var1[27];
  t5390 = 0.13702426188441388*t4937;
  t5397 = 0.190987300194*t5395;
  t5408 = t5333 + t5390 + t5397;
  t5649 = -4.817066759205414e-7*var1[27];
  t5654 = 0.0144017649144554*t4937;
  t5715 = 0.190987300194*t5711;
  t5723 = t5649 + t5654 + t5715;
  t6655 = t5147*t6483;
  t6657 = t5160*t6577;
  t6662 = t5290*t6638;
  t6667 = t6655 + t6657 + t6662;
  t6686 = t5453*t6483;
  t6687 = t5476*t6577;
  t6693 = t5525*t6638;
  t6709 = t6686 + t6687 + t6693;
  t5862 = -0.010926102783999999*t4937;
  t5864 = 1. + t5862;
  t6717 = t5726*t6483;
  t6719 = t5754*t6577;
  t6721 = t5813*t6638;
  t6726 = t6717 + t6719 + t6721;
  t5957 = -0.9890740084840001*t4937;
  t5968 = 1. + t5957;
  t6043 = -1.0000001112680001*t4937;
  t6053 = 1. + t6043;
  t6851 = -1.*t1501*t39*t1343*t1242;
  t6853 = t1158*t1501*t39*t1626;
  t6867 = t6851 + t6853;
  t6871 = t1158*t1501*t39*t1343;
  t6872 = t1501*t39*t1242*t1626;
  t6873 = t6871 + t6872;
  t6886 = -1.*t1501*t3454*t1388;
  t6887 = -0.103955395616*t376*t6867;
  t6893 = t4077*t6873;
  t6900 = t6886 + t6887 + t6893;
  t6910 = -1.*t1501*t2767*t1388;
  t6911 = t4500*t6867;
  t6912 = -0.103955395616*t376*t6873;
  t6919 = t6910 + t6911 + t6912;
  t6921 = -1.*t4814*t1501*t1388;
  t6922 = t927*t6867;
  t6924 = t1049*t6873;
  t6925 = t6921 + t6922 + t6924;
  t6927 = t5147*t6900;
  t6929 = t5160*t6919;
  t6931 = t5290*t6925;
  t6932 = t6927 + t6929 + t6931;
  t6939 = t5453*t6900;
  t6949 = t5476*t6919;
  t6950 = t5525*t6925;
  t6963 = t6939 + t6949 + t6950;
  t6981 = t5726*t6900;
  t6982 = t5754*t6919;
  t6984 = t5813*t6925;
  t6989 = t6981 + t6982 + t6984;
  t7061 = -1.*t39*t1343*t1242*t1137;
  t7062 = t1158*t39*t1137*t1626;
  t7067 = t7061 + t7062;
  t7071 = t1158*t39*t1343*t1137;
  t7076 = t39*t1242*t1137*t1626;
  t7077 = t7071 + t7076;
  t7086 = -1.*t3454*t1137*t1388;
  t7088 = -0.103955395616*t376*t7067;
  t7089 = t4077*t7077;
  t7090 = t7086 + t7088 + t7089;
  t7095 = -1.*t2767*t1137*t1388;
  t7097 = t4500*t7067;
  t7098 = -0.103955395616*t376*t7077;
  t7104 = t7095 + t7097 + t7098;
  t7108 = -1.*t4814*t1137*t1388;
  t7113 = t927*t7067;
  t7116 = t1049*t7077;
  t7117 = t7108 + t7113 + t7116;
  t7121 = t5147*t7090;
  t7126 = t5160*t7104;
  t7130 = t5290*t7117;
  t7133 = t7121 + t7126 + t7130;
  t7140 = t5453*t7090;
  t7141 = t5476*t7104;
  t7145 = t5525*t7117;
  t7152 = t7140 + t7141 + t7145;
  t7159 = t5726*t7090;
  t7161 = t5754*t7104;
  t7162 = t5813*t7117;
  t7164 = t7159 + t7161 + t7162;
  t7239 = t1343*t1242*t1388;
  t7250 = -1.*t1158*t1388*t1626;
  t7251 = t7239 + t7250;
  t7254 = -1.*t1158*t1343*t1388;
  t7255 = -1.*t1242*t1388*t1626;
  t7256 = t7254 + t7255;
  t7266 = -1.*t39*t3454;
  t7267 = -0.103955395616*t376*t7251;
  t7268 = t4077*t7256;
  t7273 = t7266 + t7267 + t7268;
  t7276 = -1.*t39*t2767;
  t7277 = t4500*t7251;
  t7288 = -0.103955395616*t376*t7256;
  t7289 = t7276 + t7277 + t7288;
  t7301 = -1.*t4814*t39;
  t7310 = t927*t7251;
  t7315 = t1049*t7256;
  t7317 = t7301 + t7310 + t7315;
  t7334 = t5147*t7273;
  t7336 = t5160*t7289;
  t7340 = t5290*t7317;
  t7347 = t7334 + t7336 + t7340;
  t7353 = t5453*t7273;
  t7355 = t5476*t7289;
  t7358 = t5525*t7317;
  t7362 = t7353 + t7355 + t7358;
  t7368 = t5726*t7273;
  t7370 = t5754*t7289;
  t7379 = t5813*t7317;
  t7380 = t7368 + t7370 + t7379;
  t7454 = t1343*t1137;
  t7459 = -1.*t1501*t1388*t1626;
  t7466 = t7454 + t7459;
  t7470 = t1242*t6211;
  t7475 = t1158*t7466;
  t7476 = t7470 + t7475;
  t7484 = -1.*t1242*t7466;
  t7490 = t6357 + t7484;
  t7514 = -0.103955395616*t376*t7476;
  t7517 = t4500*t7490;
  t7518 = t7514 + t7517;
  t7526 = t4077*t7476;
  t7528 = -0.103955395616*t376*t7490;
  t7529 = t7526 + t7528;
  t7532 = t1049*t7476;
  t7533 = t927*t7490;
  t7535 = t7532 + t7533;
  t7541 = t5160*t7518;
  t7545 = t5147*t7529;
  t7552 = t5290*t7535;
  t7553 = t7541 + t7545 + t7552;
  t7555 = t5476*t7518;
  t7561 = t5453*t7529;
  t7565 = t5525*t7535;
  t7569 = t7555 + t7561 + t7565;
  t7583 = t5754*t7518;
  t7586 = t5726*t7529;
  t7588 = t5813*t7535;
  t7589 = t7583 + t7586 + t7588;
  t7685 = t1343*t1137*t1388;
  t7689 = -1.*t1501*t1626;
  t7693 = t7685 + t7689;
  t7697 = t1242*t7693;
  t7703 = t7697 + t3137;
  t7705 = t1158*t7693;
  t7711 = -1.*t1242*t2496;
  t7712 = t7705 + t7711;
  t7714 = -0.103955395616*t376*t7703;
  t7715 = t4500*t7712;
  t7727 = t7714 + t7715;
  t7739 = t4077*t7703;
  t7740 = -0.103955395616*t376*t7712;
  t7744 = t7739 + t7740;
  t7746 = t1049*t7703;
  t7747 = t927*t7712;
  t7748 = t7746 + t7747;
  t7750 = t5160*t7727;
  t7751 = t5147*t7744;
  t7756 = t5290*t7748;
  t7758 = t7750 + t7751 + t7756;
  t7765 = t5476*t7727;
  t7766 = t5453*t7744;
  t7767 = t5525*t7748;
  t7771 = t7765 + t7766 + t7767;
  t7774 = t5754*t7727;
  t7776 = t5726*t7744;
  t7779 = t5813*t7748;
  t7781 = t7774 + t7776 + t7779;
  t7869 = t39*t1343*t1242;
  t7871 = -1.*t1158*t39*t1626;
  t7872 = t7869 + t7871;
  t7875 = t1158*t39*t1343;
  t7887 = t39*t1242*t1626;
  t7888 = t7875 + t7887;
  t7900 = -0.103955395616*t376*t7872;
  t7901 = t4500*t7888;
  t7902 = t7900 + t7901;
  t7921 = t4077*t7872;
  t7925 = -0.103955395616*t376*t7888;
  t7930 = t7921 + t7925;
  t7946 = t1049*t7872;
  t7951 = t927*t7888;
  t7953 = t7946 + t7951;
  t7960 = t5160*t7902;
  t7961 = t5147*t7930;
  t7964 = t5290*t7953;
  t7966 = t7960 + t7961 + t7964;
  t7968 = t5476*t7902;
  t7969 = t5453*t7930;
  t7970 = t5525*t7953;
  t7971 = t7968 + t7969 + t7970;
  t7981 = t5754*t7902;
  t7982 = t5726*t7930;
  t7984 = t5813*t7953;
  t7985 = t7981 + t7982 + t7984;
  t8038 = -1.*t1158*t6211;
  t8039 = -1.*t1242*t6280;
  t8044 = t8038 + t8039;
  t8047 = t4500*t8044;
  t8049 = t6468 + t8047;
  t8060 = t4077*t6320;
  t8062 = -0.103955395616*t376*t8044;
  t8072 = t8060 + t8062;
  t8084 = t1049*t6320;
  t8085 = t927*t8044;
  t8091 = t8084 + t8085;
  t8104 = t5160*t8049;
  t8105 = t5147*t8072;
  t8106 = t5290*t8091;
  t8109 = t8104 + t8105 + t8106;
  t8122 = t5476*t8049;
  t8132 = t5453*t8072;
  t8133 = t5525*t8091;
  t8137 = t8122 + t8132 + t8133;
  t8143 = t5754*t8049;
  t8147 = t5726*t8072;
  t8148 = t5813*t8091;
  t8149 = t8143 + t8147 + t8148;
  t8015 = -0.12*t1158;
  t8020 = 0.4*t1242;
  t8022 = t8015 + t8020;
  t8025 = -0.4*t1158;
  t8027 = t8025 + t1251;
  t8222 = t1501*t1343;
  t8225 = t1137*t1388*t1626;
  t8230 = t8222 + t8225;
  t8237 = -1.*t1242*t7693;
  t8239 = t1158*t8230;
  t8241 = t8237 + t8239;
  t8246 = -1.*t1158*t7693;
  t8247 = -1.*t1242*t8230;
  t8256 = t8246 + t8247;
  t8273 = -0.103955395616*t376*t8241;
  t8274 = t4500*t8256;
  t8277 = t8273 + t8274;
  t8283 = t4077*t8241;
  t8284 = -0.103955395616*t376*t8256;
  t8288 = t8283 + t8284;
  t8315 = t1049*t8241;
  t8316 = t927*t8256;
  t8317 = t8315 + t8316;
  t8319 = t5160*t8277;
  t8320 = t5147*t8288;
  t8321 = t5290*t8317;
  t8338 = t8319 + t8320 + t8321;
  t8340 = t5476*t8277;
  t8341 = t5453*t8288;
  t8344 = t5525*t8317;
  t8345 = t8340 + t8341 + t8344;
  t8356 = t5754*t8277;
  t8357 = t5726*t8288;
  t8364 = t5813*t8317;
  t8365 = t8356 + t8357 + t8364;
  t8440 = -1.*t39*t1343*t1242;
  t8445 = t1158*t39*t1626;
  t8448 = t8440 + t8445;
  t8452 = -1.*t1158*t39*t1343;
  t8457 = -1.*t39*t1242*t1626;
  t8458 = t8452 + t8457;
  t8464 = -0.103955395616*t376*t8448;
  t8465 = t4500*t8458;
  t8468 = t8464 + t8465;
  t8470 = t4077*t8448;
  t8471 = -0.103955395616*t376*t8458;
  t8474 = t8470 + t8471;
  t8477 = t1049*t8448;
  t8478 = t927*t8458;
  t8479 = t8477 + t8478;
  t8481 = t5160*t8468;
  t8482 = t5147*t8474;
  t8483 = t5290*t8479;
  t8484 = t8481 + t8482 + t8483;
  t8492 = t5476*t8468;
  t8493 = t5453*t8474;
  t8494 = t5525*t8479;
  t8496 = t8492 + t8493 + t8494;
  t8502 = t5754*t8468;
  t8503 = t5726*t8474;
  t8504 = t5813*t8479;
  t8505 = t8502 + t8503 + t8504;
  t8574 = -1.0000001112680001*t1501*t39*t788;
  t8575 = 0.104528*t101*t6320;
  t8577 = 0.994522*t101*t6424;
  t8579 = t8574 + t8575 + t8577;
  t8581 = -0.994522*t101*t1501*t39;
  t8582 = -0.103955395616*t788*t6320;
  t8583 = -0.9890740084840001*t788*t6424;
  t8585 = t8581 + t8582 + t8583;
  t8587 = -0.104528*t101*t1501*t39;
  t8588 = -0.010926102783999999*t788*t6320;
  t8589 = -0.103955395616*t788*t6424;
  t8590 = t8587 + t8588 + t8589;
  t8595 = t5813*t8579;
  t8597 = t5726*t8585;
  t8604 = t5754*t8590;
  t8605 = t8595 + t8597 + t8604;
  t8619 = t5525*t8579;
  t8622 = t5453*t8585;
  t8623 = t5476*t8590;
  t8626 = t8619 + t8622 + t8623;
  t8628 = t5290*t8579;
  t8630 = t5147*t8585;
  t8634 = t5160*t8590;
  t8635 = t8628 + t8630 + t8634;
  t8546 = 0.3852670428678886*t101;
  t8547 = -0.056500534356700764*t788;
  t8550 = t8546 + t8547;
  t8557 = 0.0059058871981009595*t101;
  t8558 = 0.04027119345689465*t788;
  t8559 = 1.1345904784751044e-7 + t8557 + t8558;
  t8566 = 0.05619101817723254*t101;
  t8569 = 0.38315655000705834*t788;
  t8570 = -1.1924972351948546e-8 + t8566 + t8569;
  t8674 = t1242*t8230;
  t8676 = t7705 + t8674;
  t8679 = -1.0000001112680001*t39*t788*t1137;
  t8681 = 0.104528*t101*t8241;
  t8682 = 0.994522*t101*t8676;
  t8685 = t8679 + t8681 + t8682;
  t8687 = -0.994522*t101*t39*t1137;
  t8688 = -0.103955395616*t788*t8241;
  t8689 = -0.9890740084840001*t788*t8676;
  t8690 = t8687 + t8688 + t8689;
  t8692 = -0.104528*t101*t39*t1137;
  t8694 = -0.010926102783999999*t788*t8241;
  t8695 = -0.103955395616*t788*t8676;
  t8696 = t8692 + t8694 + t8695;
  t8698 = t5813*t8685;
  t8703 = t5726*t8690;
  t8704 = t5754*t8696;
  t8708 = t8698 + t8703 + t8704;
  t8714 = t5525*t8685;
  t8715 = t5453*t8690;
  t8717 = t5476*t8696;
  t8719 = t8714 + t8715 + t8717;
  t8723 = t5290*t8685;
  t8724 = t5147*t8690;
  t8726 = t5160*t8696;
  t8727 = t8723 + t8724 + t8726;
  t8765 = 1.0000001112680001*t788*t1388;
  t8766 = 0.104528*t101*t8448;
  t8767 = 0.994522*t101*t7888;
  t8768 = t8765 + t8766 + t8767;
  t8770 = 0.994522*t101*t1388;
  t8772 = -0.103955395616*t788*t8448;
  t8773 = -0.9890740084840001*t788*t7888;
  t8774 = t8770 + t8772 + t8773;
  t8776 = 0.104528*t101*t1388;
  t8777 = -0.010926102783999999*t788*t8448;
  t8778 = -0.103955395616*t788*t7888;
  t8780 = t8776 + t8777 + t8778;
  t8782 = t5813*t8768;
  t8783 = t5726*t8774;
  t8784 = t5754*t8780;
  t8785 = t8782 + t8783 + t8784;
  t8787 = t5525*t8768;
  t8788 = t5453*t8774;
  t8789 = t5476*t8780;
  t8790 = t8787 + t8788 + t8789;
  t8794 = t5290*t8768;
  t8795 = t5147*t8774;
  t8796 = t5160*t8780;
  t8797 = t8794 + t8795 + t8796;
  t8821 = -0.051978134642000004*t3870;
  t8838 = 0.05226439969100001*t3870;
  t8826 = 0.49726168403800003*t3870;
  t8820 = -0.707107*t3636;
  t8824 = -0.073913*t3636;
  t8834 = 0.707107*t3636;
  t8862 = 0.051978134642000004*t3870;
  t8837 = 0.703234*t3636;
  t8853 = 0.073913*t3636;
  t8866 = -0.49726168403800003*t3870;
  t8850 = -0.703234*t3636;
  t8874 = -0.05226439969100001*t3870;
  t8861 = -0.5054634410180001*t3870*t6483;
  t8864 = t8820 + t8862;
  t8865 = t8864*t6577;
  t8867 = t8824 + t8866;
  t8868 = t8867*t6638;
  t8869 = t8861 + t8865 + t8868;
  t8871 = t8834 + t8862;
  t8872 = t8871*t6483;
  t8873 = -0.9945383682050002*t3870*t6577;
  t8876 = t8837 + t8874;
  t8877 = t8876*t6638;
  t8878 = t8872 + t8873 + t8877;
  t8880 = t8853 + t8866;
  t8882 = t8880*t6483;
  t8883 = t8850 + t8874;
  t8885 = t8883*t6577;
  t8886 = -0.500001190325*t3870*t6638;
  t8887 = t8882 + t8885 + t8886;
  t8822 = t8820 + t8821;
  t8823 = -0.231098203479*t8822;
  t8828 = t8824 + t8826;
  t8829 = 0.164383620275*t8828;
  t8830 = 0.09582494577057615*t3870;
  t8831 = 1.5601527583902087e-7 + t8823 + t8829 + t8830;
  t8835 = t8834 + t8821;
  t8836 = 0.18957839082800002*t8835;
  t8839 = t8837 + t8838;
  t8843 = 0.164383620275*t8839;
  t8847 = -0.22983603018311177*t3870;
  t8848 = 1.639789470231751e-8 + t8836 + t8843 + t8847;
  t8851 = t8850 + t8838;
  t8852 = -0.231098203479*t8851;
  t8854 = t8853 + t8826;
  t8856 = 0.18957839082800002*t8854;
  t8858 = 0.08219200580743281*t3870;
  t8859 = -1.568745163810375e-7 + t8852 + t8856 + t8858;
  t8913 = t39*t3454*t1137;
  t8914 = t4077*t8676;
  t8915 = t8913 + t8273 + t8914;
  t8917 = t39*t2767*t1137;
  t8918 = t4500*t8241;
  t8919 = -0.103955395616*t376*t8676;
  t8920 = t8917 + t8918 + t8919;
  t8922 = t4814*t39*t1137;
  t8923 = t927*t8241;
  t8924 = t1049*t8676;
  t8926 = t8922 + t8923 + t8924;
  t8931 = -0.5054634410180001*t3870*t8915;
  t8934 = t8864*t8920;
  t8935 = t8867*t8926;
  t8936 = t8931 + t8934 + t8935;
  t8939 = t8871*t8915;
  t8941 = -0.9945383682050002*t3870*t8920;
  t8942 = t8876*t8926;
  t8943 = t8939 + t8941 + t8942;
  t8950 = t8880*t8915;
  t8951 = t8883*t8920;
  t8962 = -0.500001190325*t3870*t8926;
  t8963 = t8950 + t8951 + t8962;
  t9014 = -1.*t3454*t1388;
  t9018 = t4077*t7888;
  t9027 = t9014 + t8464 + t9018;
  t9033 = -1.*t2767*t1388;
  t9038 = t4500*t8448;
  t9042 = t9033 + t9038 + t7925;
  t9046 = -1.*t4814*t1388;
  t9053 = t927*t8448;
  t9057 = t1049*t7888;
  t9059 = t9046 + t9053 + t9057;
  t9065 = -0.5054634410180001*t3870*t9027;
  t9066 = t8864*t9042;
  t9071 = t8867*t9059;
  t9074 = t9065 + t9066 + t9071;
  t9085 = t8871*t9027;
  t9086 = -0.9945383682050002*t3870*t9042;
  t9088 = t8876*t9059;
  t9096 = t9085 + t9086 + t9088;
  t9108 = t8880*t9027;
  t9115 = t8883*t9042;
  t9116 = -0.500001190325*t3870*t9059;
  t9118 = t9108 + t9115 + t9116;
  t9167 = 0.13777901533039377*t4869;
  t9168 = 0.19098732144477495*t4982;
  t9169 = t9167 + t9168;
  t9171 = -0.18994107176353728*t4869;
  t9172 = 0.13702426188441388*t4982;
  t9173 = 5.06291820800569e-8 + t9171 + t9172;
  t9175 = -0.019963520514678434*t4869;
  t9176 = 0.0144017649144554*t4982;
  t9177 = -4.817066759205414e-7 + t9175 + t9176;
  t9209 = t5147*t8915;
  t9212 = t5160*t8920;
  t9215 = t5290*t8926;
  t9216 = t9209 + t9212 + t9215;
  t9220 = t5453*t8915;
  t9221 = t5476*t8920;
  t9222 = t5525*t8926;
  t9223 = t9220 + t9221 + t9222;
  t9225 = t5726*t8915;
  t9226 = t5754*t8920;
  t9227 = t5813*t8926;
  t9229 = t9225 + t9226 + t9227;
  t9250 = t5147*t9027;
  t9251 = t5160*t9042;
  t9252 = t5290*t9059;
  t9253 = t9250 + t9251 + t9252;
  t9255 = t5453*t9027;
  t9256 = t5476*t9042;
  t9257 = t5525*t9059;
  t9258 = t9255 + t9256 + t9257;
  t9260 = t5726*t9027;
  t9261 = t5754*t9042;
  t9262 = t5813*t9059;
  t9263 = t9260 + t9261 + t9262;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1282*t1851 + t2307*t2496 + t2892*t3217 + t3456*t3601 - 1.*t1128*t1137*t39 + t4048*t4085 + t4440*t4540 + t4796*t4860 + t5126*t5308 + t5408*t5630 + t5723*t5838 - 0.250125*(-0.103955395616*t4937*t5630 + t5308*t5711 + t5838*t5864) + 0.206868*(t5308*t5395 - 0.103955395616*t4937*t5838 + t5630*t5968) + 0.290567*(t5081*t5630 + t5039*t5838 + t5308*t6053);
  p_output1[10]=t1128*t1501*t39 + t1282*t6211 + t2307*t6280 + t2892*t6320 + t3456*t6424 + t4048*t6483 + t4440*t6577 + t4796*t6638 + t5126*t6667 + t5408*t6709 + t5723*t6726 + 0.206868*(t5395*t6667 + t5968*t6709 - 0.103955395616*t4937*t6726) + 0.290567*(t6053*t6667 + t5081*t6709 + t5039*t6726) - 0.250125*(t5711*t6667 - 0.103955395616*t4937*t6709 + t5864*t6726);
  p_output1[11]=0;
  p_output1[12]=-1.*t1128*t1388*t1501 + t1282*t1343*t1501*t39 + t1501*t1626*t2307*t39 + t2892*t6867 + t3456*t6873 + t4048*t6900 + t4440*t6919 + t4796*t6925 + t5126*t6932 + t5408*t6963 + t5723*t6989 + 0.206868*(t5395*t6932 + t5968*t6963 - 0.103955395616*t4937*t6989) + 0.290567*(t6053*t6932 + t5081*t6963 + t5039*t6989) - 0.250125*(t5711*t6932 - 0.103955395616*t4937*t6963 + t5864*t6989);
  p_output1[13]=-1.*t1128*t1137*t1388 + t1137*t1282*t1343*t39 + t1137*t1626*t2307*t39 + t2892*t7067 + t3456*t7077 + t4048*t7090 + t4440*t7104 + t4796*t7117 + t5126*t7133 + t5408*t7152 + t5723*t7164 + 0.206868*(t5395*t7133 + t5968*t7152 - 0.103955395616*t4937*t7164) + 0.290567*(t6053*t7133 + t5081*t7152 + t5039*t7164) - 0.250125*(t5711*t7133 - 0.103955395616*t4937*t7152 + t5864*t7164);
  p_output1[14]=-1.*t1282*t1343*t1388 - 1.*t1388*t1626*t2307 - 1.*t1128*t39 + t2892*t7251 + t3456*t7256 + t4048*t7273 + t4440*t7289 + t4796*t7317 + t5126*t7347 + t5408*t7362 + t5723*t7380 + 0.206868*(t5395*t7347 + t5968*t7362 - 0.103955395616*t4937*t7380) + 0.290567*(t6053*t7347 + t5081*t7362 + t5039*t7380) - 0.250125*(t5711*t7347 - 0.103955395616*t4937*t7362 + t5864*t7380);
  p_output1[15]=t2307*t6211 + t1282*t7466 + t3456*t7476 + t2892*t7490 + t4440*t7518 + t4048*t7529 + t4796*t7535 + t5126*t7553 + t5408*t7569 + t5723*t7589 + 0.206868*(t5395*t7553 + t5968*t7569 - 0.103955395616*t4937*t7589) + 0.290567*(t6053*t7553 + t5081*t7569 + t5039*t7589) - 0.250125*(t5711*t7553 - 0.103955395616*t4937*t7569 + t5864*t7589);
  p_output1[16]=t1282*t2496 + t2307*t7693 + t3456*t7703 + t2892*t7712 + t4440*t7727 + t4048*t7744 + t4796*t7748 + t5126*t7758 + t5408*t7771 + t5723*t7781 + 0.206868*(t5395*t7758 + t5968*t7771 - 0.103955395616*t4937*t7781) + 0.290567*(t6053*t7758 + t5081*t7771 + t5039*t7781) - 0.250125*(t5711*t7758 - 0.103955395616*t4937*t7771 + t5864*t7781);
  p_output1[17]=-1.*t1282*t1626*t39 + t1343*t2307*t39 + t3456*t7872 + t2892*t7888 + t4440*t7902 + t4048*t7930 + t4796*t7953 + t5126*t7966 + t5408*t7971 + t5723*t7985 + 0.206868*(t5395*t7966 + t5968*t7971 - 0.103955395616*t4937*t7985) + 0.290567*(t6053*t7966 + t5081*t7971 + t5039*t7985) - 0.250125*(t5711*t7966 - 0.103955395616*t4937*t7971 + t5864*t7985);
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=t3456*t6320 + t6211*t8022 + t6280*t8027 + t2892*t8044 + t4440*t8049 + t4048*t8072 + t4796*t8091 + t5126*t8109 + t5408*t8137 + t5723*t8149 + 0.206868*(t5395*t8109 + t5968*t8137 - 0.103955395616*t4937*t8149) + 0.290567*(t6053*t8109 + t5081*t8137 + t5039*t8149) - 0.250125*(t5711*t8109 - 0.103955395616*t4937*t8137 + t5864*t8149);
  p_output1[73]=t7693*t8022 + t8027*t8230 + t3456*t8241 + t2892*t8256 + t4440*t8277 + t4048*t8288 + t4796*t8317 + t5126*t8338 + t5408*t8345 + t5723*t8365 + 0.206868*(t5395*t8338 + t5968*t8345 - 0.103955395616*t4937*t8365) + 0.290567*(t6053*t8338 + t5081*t8345 + t5039*t8365) - 0.250125*(t5711*t8338 - 0.103955395616*t4937*t8345 + t5864*t8365);
  p_output1[74]=t1343*t39*t8022 + t1626*t39*t8027 + t3456*t8448 + t2892*t8458 + t4440*t8468 + t4048*t8474 + t4796*t8479 + t5126*t8484 + t5408*t8496 + t5723*t8505 + 0.206868*(t5395*t8484 + t5968*t8496 - 0.103955395616*t4937*t8505) + 0.290567*(t6053*t8484 + t5081*t8496 + t5039*t8505) - 0.250125*(t5711*t8484 - 0.103955395616*t4937*t8496 + t5864*t8505);
  p_output1[75]=t1501*t39*t8550 + t6320*t8559 + t6424*t8570 + t4796*t8579 + t4048*t8585 + t4440*t8590 + t5723*t8605 + t5408*t8626 + t5126*t8635 + 0.206868*(-0.103955395616*t4937*t8605 + t5968*t8626 + t5395*t8635) - 0.250125*(t5864*t8605 - 0.103955395616*t4937*t8626 + t5711*t8635) + 0.290567*(t5039*t8605 + t5081*t8626 + t6053*t8635);
  p_output1[76]=t1137*t39*t8550 + t8241*t8559 + t8570*t8676 + t4796*t8685 + t4048*t8690 + t4440*t8696 + t5723*t8708 + t5408*t8719 + t5126*t8727 + 0.206868*(-0.103955395616*t4937*t8708 + t5968*t8719 + t5395*t8727) - 0.250125*(t5864*t8708 - 0.103955395616*t4937*t8719 + t5711*t8727) + 0.290567*(t5039*t8708 + t5081*t8719 + t6053*t8727);
  p_output1[77]=-1.*t1388*t8550 + t8448*t8559 + t7888*t8570 + t4796*t8768 + t4048*t8774 + t4440*t8780 + t5723*t8785 + t5408*t8790 + t5126*t8797 + 0.206868*(-0.103955395616*t4937*t8785 + t5968*t8790 + t5395*t8797) - 0.250125*(t5864*t8785 - 0.103955395616*t4937*t8790 + t5711*t8797) + 0.290567*(t5039*t8785 + t5081*t8790 + t6053*t8797);
  p_output1[78]=t6483*t8831 + t6577*t8848 + t6638*t8859 + t5408*t8869 + t5723*t8878 + t5126*t8887 + 0.206868*(t5968*t8869 - 0.103955395616*t4937*t8878 + t5395*t8887) - 0.250125*(-0.103955395616*t4937*t8869 + t5864*t8878 + t5711*t8887) + 0.290567*(t5081*t8869 + t5039*t8878 + t6053*t8887);
  p_output1[79]=t8831*t8915 + t8848*t8920 + t8859*t8926 + t5408*t8936 + t5723*t8943 + t5126*t8963 + 0.206868*(t5968*t8936 - 0.103955395616*t4937*t8943 + t5395*t8963) - 0.250125*(-0.103955395616*t4937*t8936 + t5864*t8943 + t5711*t8963) + 0.290567*(t5081*t8936 + t5039*t8943 + t6053*t8963);
  p_output1[80]=t8831*t9027 + t8848*t9042 + t8859*t9059 + t5408*t9074 + t5723*t9096 + t5126*t9118 + 0.206868*(t5968*t9074 - 0.103955395616*t4937*t9096 + t5395*t9118) - 0.250125*(-0.103955395616*t4937*t9074 + t5864*t9096 + t5711*t9118) + 0.290567*(t5081*t9074 + t5039*t9096 + t6053*t9118);
  p_output1[81]=0.290567*(-1.0000001112680001*t4982*t6667 + 0.994522*t4869*t6709 + 0.104528*t4869*t6726) + 0.206868*(-0.994522*t4869*t6667 - 0.9890740084840001*t4982*t6709 - 0.103955395616*t4982*t6726) - 0.250125*(-0.104528*t4869*t6667 - 0.103955395616*t4982*t6709 - 0.010926102783999999*t4982*t6726) + t6667*t9169 + t6709*t9173 + t6726*t9177;
  p_output1[82]=t9169*t9216 + t9173*t9223 + t9177*t9229 + 0.290567*(-1.0000001112680001*t4982*t9216 + 0.994522*t4869*t9223 + 0.104528*t4869*t9229) + 0.206868*(-0.994522*t4869*t9216 - 0.9890740084840001*t4982*t9223 - 0.103955395616*t4982*t9229) - 0.250125*(-0.104528*t4869*t9216 - 0.103955395616*t4982*t9223 - 0.010926102783999999*t4982*t9229);
  p_output1[83]=t9169*t9253 + t9173*t9258 + t9177*t9263 + 0.290567*(-1.0000001112680001*t4982*t9253 + 0.994522*t4869*t9258 + 0.104528*t4869*t9263) + 0.206868*(-0.994522*t4869*t9253 - 0.9890740084840001*t4982*t9258 - 0.103955395616*t4982*t9263) - 0.250125*(-0.104528*t4869*t9253 - 0.103955395616*t4982*t9258 - 0.010926102783999999*t4982*t9263);
}



void Jp_right_elbow_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
