/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:53:18 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "p_toe_roll_joint_right_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t37;
  double t18;
  double t432;
  double t611;
  double t435;
  double t824;
  double t20;
  double t21;
  double t22;
  double t355;
  double t473;
  double t913;
  double t1120;
  double t1238;
  double t1663;
  double t1675;
  double t1709;
  double t19;
  double t2047;
  double t2057;
  double t1957;
  double t1966;
  double t1984;
  double t2121;
  double t2122;
  double t2128;
  double t2262;
  double t2311;
  double t2319;
  double t2322;
  double t1836;
  double t1845;
  double t88;
  double t139;
  double t215;
  double t290;
  double t2944;
  double t2796;
  double t2800;
  double t2520;
  double t2521;
  double t2541;
  double t2542;
  double t2544;
  double t2579;
  double t2779;
  double t2789;
  double t2669;
  double t2671;
  double t2688;
  double t2706;
  double t2755;
  double t2756;
  double t2873;
  double t2874;
  double t2876;
  double t2878;
  double t2880;
  double t2882;
  double t2891;
  double t2893;
  double t2899;
  double t2358;
  double t2470;
  double t2625;
  double t2647;
  double t3104;
  double t3105;
  double t2998;
  double t3000;
  double t3002;
  double t3003;
  double t3004;
  double t3007;
  double t3048;
  double t3059;
  double t3069;
  double t3070;
  double t3077;
  double t3079;
  double t3127;
  double t3129;
  double t3131;
  double t3132;
  double t3136;
  double t3138;
  double t3145;
  double t3158;
  double t3162;
  double t3166;
  double t3025;
  double t3026;
  double t2945;
  double t2947;
  double t2962;
  double t2972;
  double t3336;
  double t3284;
  double t3285;
  double t3178;
  double t3179;
  double t3181;
  double t3186;
  double t3196;
  double t3199;
  double t3280;
  double t3281;
  double t3224;
  double t3229;
  double t3234;
  double t3240;
  double t3241;
  double t3245;
  double t3295;
  double t3301;
  double t3303;
  double t3305;
  double t3310;
  double t3311;
  double t3325;
  double t3326;
  double t3329;
  double t3167;
  double t3169;
  double t3219;
  double t3220;
  double t3529;
  double t3530;
  double t3535;
  double t3539;
  double t3456;
  double t3457;
  double t3375;
  double t3377;
  double t3387;
  double t3388;
  double t3394;
  double t3399;
  double t3435;
  double t3436;
  double t3438;
  double t3439;
  double t3440;
  double t3442;
  double t3465;
  double t3478;
  double t3482;
  double t3487;
  double t3492;
  double t3495;
  double t3538;
  double t3415;
  double t3417;
  double t3572;
  double t3627;
  double t3350;
  double t3362;
  double t3340;
  double t3346;
  double t3694;
  double t3597;
  double t3598;
  double t3599;
  double t3612;
  double t3616;
  double t3617;
  double t3706;
  double t3654;
  double t3659;
  double t3660;
  double t3672;
  double t3673;
  double t3677;
  double t3714;
  double t3716;
  double t3726;
  double t3729;
  double t3733;
  double t3735;
  double t3643;
  double t3753;
  double t3629;
  double t3779;
  double t3561;
  double t3740;
  double t3577;
  double t25;
  double t171;
  double t293;
  double t311;
  double t360;
  double t411;
  double t1308;
  double t1347;
  double t1364;
  double t1520;
  double t1773;
  double t1818;
  double t1874;
  double t1899;
  double t3855;
  double t3858;
  double t3859;
  double t3862;
  double t3866;
  double t3867;
  double t2037;
  double t2045;
  double t2060;
  double t2062;
  double t2259;
  double t2321;
  double t2499;
  double t2519;
  double t3869;
  double t3873;
  double t3876;
  double t3880;
  double t3883;
  double t3884;
  double t2604;
  double t2621;
  double t2650;
  double t2657;
  double t2777;
  double t2794;
  double t2827;
  double t2872;
  double t2940;
  double t2958;
  double t2979;
  double t2990;
  double t3890;
  double t3894;
  double t3901;
  double t3903;
  double t3908;
  double t3909;
  double t3910;
  double t3911;
  double t3915;
  double t3916;
  double t3917;
  double t3919;
  double t3011;
  double t3020;
  double t3028;
  double t3045;
  double t3097;
  double t3101;
  double t3110;
  double t3122;
  double t3140;
  double t3163;
  double t3170;
  double t3171;
  double t3923;
  double t3924;
  double t3925;
  double t3927;
  double t3937;
  double t3949;
  double t3950;
  double t3952;
  double t3956;
  double t3962;
  double t3963;
  double t3966;
  double t3205;
  double t3206;
  double t3221;
  double t3223;
  double t3275;
  double t3282;
  double t3287;
  double t3294;
  double t3334;
  double t3348;
  double t3363;
  double t3369;
  double t3972;
  double t3976;
  double t3978;
  double t3980;
  double t3985;
  double t3987;
  double t3989;
  double t3990;
  double t3998;
  double t3999;
  double t4002;
  double t4003;
  double t3412;
  double t3413;
  double t3420;
  double t3427;
  double t3447;
  double t3455;
  double t3458;
  double t3461;
  double t3504;
  double t3537;
  double t3567;
  double t3569;
  double t3579;
  double t3583;
  double t3593;
  double t4009;
  double t4012;
  double t4018;
  double t4019;
  double t4028;
  double t4029;
  double t4033;
  double t4041;
  double t4044;
  double t4046;
  double t4048;
  double t4051;
  double t3620;
  double t3622;
  double t3633;
  double t3634;
  double t3648;
  double t3651;
  double t3653;
  double t3690;
  double t3691;
  double t3700;
  double t3703;
  double t3707;
  double t3711;
  double t3713;
  double t3745;
  double t4062;
  double t4070;
  double t4071;
  double t4073;
  double t3754;
  double t4091;
  double t4092;
  double t4094;
  double t4095;
  double t3760;
  double t3761;
  double t4103;
  double t4105;
  double t4110;
  double t4112;
  double t3781;
  double t3784;
  double t3787;
  double t3791;
  double t3802;
  double t3803;
  double t3807;
  double t3826;
  double t4161;
  double t4167;
  double t4171;
  double t4177;
  double t4181;
  double t4192;
  double t4204;
  double t4205;
  double t4209;
  double t4211;
  double t4219;
  double t4222;
  double t4223;
  double t4228;
  double t4235;
  double t4237;
  double t4241;
  double t4242;
  double t4245;
  double t4246;
  double t4247;
  double t4248;
  double t4252;
  double t4253;
  double t4254;
  double t4256;
  double t4267;
  double t4269;
  double t4270;
  double t4272;
  double t4284;
  double t4286;
  double t4295;
  double t4308;
  double t4320;
  double t4326;
  double t4328;
  double t4329;
  double t4334;
  double t4337;
  double t4339;
  double t4342;
  double t4346;
  double t4352;
  double t4354;
  double t4357;
  double t4361;
  double t4362;
  double t4363;
  double t4366;
  double t4371;
  double t4373;
  double t4374;
  double t4381;
  double t4390;
  double t4391;
  double t4392;
  double t4396;
  double t4401;
  double t4405;
  double t4421;
  double t4424;
  double t4432;
  double t4436;
  double t4438;
  double t4440;
  t37 = Sin(var1[18]);
  t18 = Cos(var1[3]);
  t432 = Cos(var1[5]);
  t611 = Sin(var1[3]);
  t435 = Sin(var1[4]);
  t824 = Sin(var1[5]);
  t20 = Cos(var1[18]);
  t21 = -1.*t20;
  t22 = 1. + t21;
  t355 = Sin(var1[17]);
  t473 = t18*t432*t435;
  t913 = t611*t824;
  t1120 = t473 + t913;
  t1238 = Cos(var1[17]);
  t1663 = -1.*t432*t611;
  t1675 = t18*t435*t824;
  t1709 = t1663 + t1675;
  t19 = Cos(var1[4]);
  t2047 = -0.366501*t37;
  t2057 = 0. + t2047;
  t1957 = -1.*t355*t1120;
  t1966 = t1238*t1709;
  t1984 = t1957 + t1966;
  t2121 = t1238*t1120;
  t2122 = t355*t1709;
  t2128 = t2121 + t2122;
  t2262 = Cos(var1[19]);
  t2311 = -1.*t2262;
  t2319 = 1. + t2311;
  t2322 = Sin(var1[19]);
  t1836 = 0.930418*t37;
  t1845 = 0. + t1836;
  t88 = -0.930418*t37;
  t139 = 0. + t88;
  t215 = 0.366501*t37;
  t290 = 0. + t215;
  t2944 = Sin(var1[20]);
  t2796 = 0.930418*t2322;
  t2800 = 0. + t2796;
  t2520 = t18*t19*t2057;
  t2521 = 0.340999127418*t22*t1984;
  t2541 = -0.134322983001*t22;
  t2542 = 1. + t2541;
  t2544 = t2542*t2128;
  t2579 = t2520 + t2521 + t2544;
  t2779 = 0.366501*t2322;
  t2789 = 0. + t2779;
  t2669 = t18*t19*t1845;
  t2671 = -0.8656776547239999*t22;
  t2688 = 1. + t2671;
  t2706 = t2688*t1984;
  t2755 = 0.340999127418*t22*t2128;
  t2756 = t2669 + t2706 + t2755;
  t2873 = -1.000000637725*t22;
  t2874 = 1. + t2873;
  t2876 = t2874*t18*t19;
  t2878 = t139*t1984;
  t2880 = t290*t2128;
  t2882 = t2876 + t2878 + t2880;
  t2891 = Cos(var1[20]);
  t2893 = -1.*t2891;
  t2899 = 1. + t2893;
  t2358 = -0.930418*t2322;
  t2470 = 0. + t2358;
  t2625 = -0.366501*t2322;
  t2647 = 0. + t2625;
  t3104 = 0.366501*t2944;
  t3105 = 0. + t3104;
  t2998 = t2800*t2579;
  t3000 = t2789*t2756;
  t3002 = -1.000000637725*t2319;
  t3003 = 1. + t3002;
  t3004 = t3003*t2882;
  t3007 = t2998 + t3000 + t3004;
  t3048 = -0.8656776547239999*t2319;
  t3059 = 1. + t3048;
  t3069 = t3059*t2579;
  t3070 = -0.340999127418*t2319*t2756;
  t3077 = t2470*t2882;
  t3079 = t3069 + t3070 + t3077;
  t3127 = -0.340999127418*t2319*t2579;
  t3129 = -0.134322983001*t2319;
  t3131 = 1. + t3129;
  t3132 = t3131*t2756;
  t3136 = t2647*t2882;
  t3138 = t3127 + t3132 + t3136;
  t3145 = Cos(var1[21]);
  t3158 = -1.*t3145;
  t3162 = 1. + t3158;
  t3166 = Sin(var1[21]);
  t3025 = 0.930418*t2944;
  t3026 = 0. + t3025;
  t2945 = -0.930418*t2944;
  t2947 = 0. + t2945;
  t2962 = -0.366501*t2944;
  t2972 = 0. + t2962;
  t3336 = Sin(var1[22]);
  t3284 = -0.366501*t3166;
  t3285 = 0. + t3284;
  t3178 = t3105*t3007;
  t3179 = -0.340999127418*t2899*t3079;
  t3181 = -0.134322983001*t2899;
  t3186 = 1. + t3181;
  t3196 = t3186*t3138;
  t3199 = t3178 + t3179 + t3196;
  t3280 = -0.930418*t3166;
  t3281 = 0. + t3280;
  t3224 = t3026*t3007;
  t3229 = -0.8656776547239999*t2899;
  t3234 = 1. + t3229;
  t3240 = t3234*t3079;
  t3241 = -0.340999127418*t2899*t3138;
  t3245 = t3224 + t3240 + t3241;
  t3295 = -1.000000637725*t2899;
  t3301 = 1. + t3295;
  t3303 = t3301*t3007;
  t3305 = t2947*t3079;
  t3310 = t2972*t3138;
  t3311 = t3303 + t3305 + t3310;
  t3325 = Cos(var1[22]);
  t3326 = -1.*t3325;
  t3329 = 1. + t3326;
  t3167 = 0.366501*t3166;
  t3169 = 0. + t3167;
  t3219 = 0.930418*t3166;
  t3220 = 0. + t3219;
  t3529 = Cos(var1[23]);
  t3530 = -1.*t3529;
  t3535 = 1. + t3530;
  t3539 = Sin(var1[23]);
  t3456 = 0.930418*t3336;
  t3457 = 0. + t3456;
  t3375 = t3285*t3199;
  t3377 = t3281*t3245;
  t3387 = -1.000000637725*t3162;
  t3388 = 1. + t3387;
  t3394 = t3388*t3311;
  t3399 = t3375 + t3377 + t3394;
  t3435 = -0.134322983001*t3162;
  t3436 = 1. + t3435;
  t3438 = t3436*t3199;
  t3439 = -0.340999127418*t3162*t3245;
  t3440 = t3169*t3311;
  t3442 = t3438 + t3439 + t3440;
  t3465 = -0.340999127418*t3162*t3199;
  t3478 = -0.8656776547239999*t3162;
  t3482 = 1. + t3478;
  t3487 = t3482*t3245;
  t3492 = t3220*t3311;
  t3495 = t3465 + t3487 + t3492;
  t3538 = -0.120666640478*t3535;
  t3415 = 0.366501*t3336;
  t3417 = 0. + t3415;
  t3572 = -0.444895486988*t3535;
  t3627 = -0.175248972904*t3535;
  t3350 = -0.366501*t3336;
  t3362 = 0. + t3350;
  t3340 = -0.930418*t3336;
  t3346 = 0. + t3340;
  t3694 = -0.218018*t3539;
  t3597 = t3457*t3399;
  t3598 = -0.340999127418*t3329*t3442;
  t3599 = -0.8656776547239999*t3329;
  t3612 = 1. + t3599;
  t3616 = t3612*t3495;
  t3617 = t3597 + t3598 + t3616;
  t3706 = 0.553471*t3539;
  t3654 = t3417*t3399;
  t3659 = -0.134322983001*t3329;
  t3660 = 1. + t3659;
  t3672 = t3660*t3442;
  t3673 = -0.340999127418*t3329*t3495;
  t3677 = t3654 + t3672 + t3673;
  t3714 = -1.000000637725*t3329;
  t3716 = 1. + t3714;
  t3726 = t3716*t3399;
  t3729 = t3362*t3442;
  t3733 = t3346*t3495;
  t3735 = t3726 + t3729 + t3733;
  t3643 = 0.803828*t3539;
  t3753 = 0.175248972904*t3535;
  t3629 = -0.553471*t3539;
  t3779 = 0.120666640478*t3535;
  t3561 = -0.803828*t3539;
  t3740 = 0.444895486988*t3535;
  t3577 = 0.218018*t3539;
  t25 = -0.04500040093286238*t22;
  t171 = -0.07877663122399998*t139;
  t293 = 0.031030906668*t290;
  t311 = 0. + t25 + t171 + t293;
  t360 = -0.091*t355;
  t411 = 0. + t360;
  t1308 = -1.*t1238;
  t1347 = 1. + t1308;
  t1364 = -0.091*t1347;
  t1520 = 0. + t1364;
  t1773 = 1.296332362046933e-7*var1[18];
  t1818 = -0.07877668146182712*t22;
  t1874 = -0.045000372235*t1845;
  t1899 = t1773 + t1818 + t1874;
  t3855 = t432*t611*t435;
  t3858 = -1.*t18*t824;
  t3859 = t3855 + t3858;
  t3862 = t18*t432;
  t3866 = t611*t435*t824;
  t3867 = t3862 + t3866;
  t2037 = 3.2909349868922137e-7*var1[18];
  t2045 = 0.03103092645718495*t22;
  t2060 = -0.045000372235*t2057;
  t2062 = t2037 + t2045 + t2060;
  t2259 = -1.296332362046933e-7*var1[19];
  t2321 = -0.14128592423750855*t2319;
  t2499 = -0.045000372235*t2470;
  t2519 = t2259 + t2321 + t2499;
  t3869 = -1.*t355*t3859;
  t3873 = t1238*t3867;
  t3876 = t3869 + t3873;
  t3880 = t1238*t3859;
  t3883 = t355*t3867;
  t3884 = t3880 + t3883;
  t2604 = 3.2909349868922137e-7*var1[19];
  t2621 = -0.055653945343889656*t2319;
  t2650 = -0.045000372235*t2647;
  t2657 = t2604 + t2621 + t2650;
  t2777 = -0.04500040093286238*t2319;
  t2794 = -0.055653909852*t2789;
  t2827 = -0.141285834136*t2800;
  t2872 = 0. + t2777 + t2794 + t2827;
  t2940 = 0.039853038461262744*t2899;
  t2958 = -0.22023459268999998*t2947;
  t2979 = -0.086752619205*t2972;
  t2990 = 0. + t2940 + t2958 + t2979;
  t3890 = t19*t2057*t611;
  t3894 = 0.340999127418*t22*t3876;
  t3901 = t2542*t3884;
  t3903 = t3890 + t3894 + t3901;
  t3908 = t19*t1845*t611;
  t3909 = t2688*t3876;
  t3910 = 0.340999127418*t22*t3884;
  t3911 = t3908 + t3909 + t3910;
  t3915 = t2874*t19*t611;
  t3916 = t139*t3876;
  t3917 = t290*t3884;
  t3919 = t3915 + t3916 + t3917;
  t3011 = 6.295460977284962e-8*var1[20];
  t3020 = -0.22023473313910558*t2899;
  t3028 = 0.039853013046*t3026;
  t3045 = t3011 + t3020 + t3028;
  t3097 = -1.5981976069815686e-7*var1[20];
  t3101 = -0.08675267452931407*t2899;
  t3110 = 0.039853013046*t3105;
  t3122 = t3097 + t3101 + t3110;
  t3140 = 5.7930615939377813e-8*var1[21];
  t3163 = -0.23261833304643187*t3162;
  t3170 = -0.262809976934*t3169;
  t3171 = t3140 + t3163 + t3170;
  t3923 = t2800*t3903;
  t3924 = t2789*t3911;
  t3925 = t3003*t3919;
  t3927 = t3923 + t3924 + t3925;
  t3937 = t3059*t3903;
  t3949 = -0.340999127418*t2319*t3911;
  t3950 = t2470*t3919;
  t3952 = t3937 + t3949 + t3950;
  t3956 = -0.340999127418*t2319*t3903;
  t3962 = t3131*t3911;
  t3963 = t2647*t3919;
  t3966 = t3956 + t3962 + t3963;
  t3205 = -2.281945176511838e-8*var1[21];
  t3206 = -0.5905366811997648*t3162;
  t3221 = -0.262809976934*t3220;
  t3223 = t3205 + t3206 + t3221;
  t3275 = -0.26281014453449253*t3162;
  t3282 = -0.5905363046000001*t3281;
  t3287 = -0.23261818470000004*t3285;
  t3294 = 0. + t3275 + t3282 + t3287;
  t3334 = 0.06199697675299678*t3329;
  t3348 = -0.823260828522*t3346;
  t3363 = -0.324290713329*t3362;
  t3369 = 0. + t3334 + t3348 + t3363;
  t3972 = t3105*t3927;
  t3976 = -0.340999127418*t2899*t3952;
  t3978 = t3186*t3966;
  t3980 = t3972 + t3976 + t3978;
  t3985 = t3026*t3927;
  t3987 = t3234*t3952;
  t3989 = -0.340999127418*t2899*t3966;
  t3990 = t3985 + t3987 + t3989;
  t3998 = t3301*t3927;
  t3999 = t2947*t3952;
  t4002 = t2972*t3966;
  t4003 = t3998 + t3999 + t4002;
  t3412 = 7.500378623168247e-8*var1[22];
  t3413 = -0.32429092013729516*t3329;
  t3420 = 0.061996937216*t3417;
  t3427 = t3412 + t3413 + t3420;
  t3447 = -2.95447451120871e-8*var1[22];
  t3455 = -0.8232613535360118*t3329;
  t3458 = 0.061996937216*t3457;
  t3461 = t3447 + t3455 + t3458;
  t3504 = 7.20503013377005e-8*var1[23];
  t3537 = -0.3667270384178674*t3535;
  t3567 = t3538 + t3561;
  t3569 = -0.29871295412*t3567;
  t3579 = t3572 + t3577;
  t3583 = 0.44503472296900004*t3579;
  t3593 = t3504 + t3537 + t3569 + t3583;
  t4009 = t3285*t3980;
  t4012 = t3281*t3990;
  t4018 = t3388*t4003;
  t4019 = t4009 + t4012 + t4018;
  t4028 = t3436*t3980;
  t4029 = -0.340999127418*t3162*t3990;
  t4033 = t3169*t4003;
  t4041 = t4028 + t4029 + t4033;
  t4044 = -0.340999127418*t3162*t3980;
  t4046 = t3482*t3990;
  t4048 = t3220*t4003;
  t4051 = t4044 + t4046 + t4048;
  t3620 = 2.838136523330542e-8*var1[23];
  t3622 = -0.2845150083511607*t3535;
  t3633 = t3627 + t3629;
  t3634 = 0.44503472296900004*t3633;
  t3648 = t3538 + t3643;
  t3651 = -0.5286755231320001*t3648;
  t3653 = t3620 + t3622 + t3634 + t3651;
  t3690 = 1.0464152525368286e-7*var1[23];
  t3691 = 0.15748087543254813*t3535;
  t3700 = t3572 + t3694;
  t3703 = -0.5286755231320001*t3700;
  t3707 = t3627 + t3706;
  t3711 = -0.29871295412*t3707;
  t3713 = t3690 + t3691 + t3703 + t3711;
  t3745 = t3740 + t3694;
  t4062 = t3457*t4019;
  t4070 = -0.340999127418*t3329*t4041;
  t4071 = t3612*t4051;
  t4073 = t4062 + t4070 + t4071;
  t3754 = t3753 + t3706;
  t4091 = t3417*t4019;
  t4092 = t3660*t4041;
  t4094 = -0.340999127418*t3329*t4051;
  t4095 = t4091 + t4092 + t4094;
  t3760 = -0.353861996165*t3535;
  t3761 = 1. + t3760;
  t4103 = t3716*t4019;
  t4105 = t3362*t4041;
  t4110 = t3346*t4051;
  t4112 = t4103 + t4105 + t4110;
  t3781 = t3779 + t3643;
  t3784 = -0.952469601425*t3535;
  t3787 = 1. + t3784;
  t3791 = t3753 + t3629;
  t3802 = -0.693671301908*t3535;
  t3803 = 1. + t3802;
  t3807 = t3779 + t3561;
  t3826 = t3740 + t3577;
  t4161 = -1.*t19*t432*t355;
  t4167 = t1238*t19*t824;
  t4171 = t4161 + t4167;
  t4177 = t1238*t19*t432;
  t4181 = t19*t355*t824;
  t4192 = t4177 + t4181;
  t4204 = -1.*t2057*t435;
  t4205 = 0.340999127418*t22*t4171;
  t4209 = t2542*t4192;
  t4211 = t4204 + t4205 + t4209;
  t4219 = -1.*t1845*t435;
  t4222 = t2688*t4171;
  t4223 = 0.340999127418*t22*t4192;
  t4228 = t4219 + t4222 + t4223;
  t4235 = -1.*t2874*t435;
  t4237 = t139*t4171;
  t4241 = t290*t4192;
  t4242 = t4235 + t4237 + t4241;
  t4245 = t2800*t4211;
  t4246 = t2789*t4228;
  t4247 = t3003*t4242;
  t4248 = t4245 + t4246 + t4247;
  t4252 = t3059*t4211;
  t4253 = -0.340999127418*t2319*t4228;
  t4254 = t2470*t4242;
  t4256 = t4252 + t4253 + t4254;
  t4267 = -0.340999127418*t2319*t4211;
  t4269 = t3131*t4228;
  t4270 = t2647*t4242;
  t4272 = t4267 + t4269 + t4270;
  t4284 = t3105*t4248;
  t4286 = -0.340999127418*t2899*t4256;
  t4295 = t3186*t4272;
  t4308 = t4284 + t4286 + t4295;
  t4320 = t3026*t4248;
  t4326 = t3234*t4256;
  t4328 = -0.340999127418*t2899*t4272;
  t4329 = t4320 + t4326 + t4328;
  t4334 = t3301*t4248;
  t4337 = t2947*t4256;
  t4339 = t2972*t4272;
  t4342 = t4334 + t4337 + t4339;
  t4346 = t3285*t4308;
  t4352 = t3281*t4329;
  t4354 = t3388*t4342;
  t4357 = t4346 + t4352 + t4354;
  t4361 = t3436*t4308;
  t4362 = -0.340999127418*t3162*t4329;
  t4363 = t3169*t4342;
  t4366 = t4361 + t4362 + t4363;
  t4371 = -0.340999127418*t3162*t4308;
  t4373 = t3482*t4329;
  t4374 = t3220*t4342;
  t4381 = t4371 + t4373 + t4374;
  t4390 = t3457*t4357;
  t4391 = -0.340999127418*t3329*t4366;
  t4392 = t3612*t4381;
  t4396 = t4390 + t4391 + t4392;
  t4401 = t3417*t4357;
  t4405 = t3660*t4366;
  t4421 = -0.340999127418*t3329*t4381;
  t4424 = t4401 + t4405 + t4421;
  t4432 = t3716*t4357;
  t4436 = t3362*t4366;
  t4438 = t3346*t4381;
  t4440 = t4432 + t4436 + t4438;
  p_output1[0]=0. + t1520*t1709 + t1899*t1984 + t2062*t2128 + t2519*t2579 + t2657*t2756 + t2872*t2882 + t2990*t3007 + t3045*t3079 + t18*t19*t311 + t3122*t3138 + t3171*t3199 + t3223*t3245 + t3294*t3311 + t3369*t3399 + t3427*t3442 + t3461*t3495 + t3593*t3617 + t3653*t3677 + t3713*t3735 + 0.061997*(t3617*t3745 + t3677*t3754 + t3735*t3761) - 0.402602*(t3617*t3781 + t3677*t3787 + t3735*t3791) - 0.792413*(t3617*t3803 + t3677*t3807 + t3735*t3826) + t1120*t411 + var1[0];
  p_output1[1]=0. + t1520*t3867 + t1899*t3876 + t2062*t3884 + t2519*t3903 + t2657*t3911 + t2872*t3919 + t2990*t3927 + t3045*t3952 + t3122*t3966 + t3171*t3980 + t3223*t3990 + t3294*t4003 + t3369*t4019 + t3427*t4041 + t3461*t4051 + t3593*t4073 + t3653*t4095 + t3859*t411 + t3713*t4112 + 0.061997*(t3745*t4073 + t3754*t4095 + t3761*t4112) - 0.402602*(t3781*t4073 + t3787*t4095 + t3791*t4112) - 0.792413*(t3803*t4073 + t3807*t4095 + t3826*t4112) + t19*t311*t611 + var1[1];
  p_output1[2]=0. + t1899*t4171 + t2062*t4192 + t2519*t4211 + t2657*t4228 + t2872*t4242 + t2990*t4248 + t3045*t4256 + t3122*t4272 + t3171*t4308 + t19*t411*t432 + t3223*t4329 + t3294*t4342 - 1.*t311*t435 + t3369*t4357 + t3427*t4366 + t3461*t4381 + t3593*t4396 + t3653*t4424 + t3713*t4440 + 0.061997*(t3745*t4396 + t3754*t4424 + t3761*t4440) - 0.402602*(t3781*t4396 + t3787*t4424 + t3791*t4440) - 0.792413*(t3803*t4396 + t3807*t4424 + t3826*t4440) + t1520*t19*t824 + var1[2];
}



void p_toe_roll_joint_right_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
