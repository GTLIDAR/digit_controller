/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:35:49 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "T_toe_pitch_joint_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t252;
  double t234;
  double t253;
  double t238;
  double t258;
  double t216;
  double t227;
  double t231;
  double t232;
  double t303;
  double t306;
  double t307;
  double t241;
  double t277;
  double t291;
  double t329;
  double t199;
  double t202;
  double t214;
  double t296;
  double t330;
  double t337;
  double t357;
  double t360;
  double t365;
  double t371;
  double t374;
  double t500;
  double t501;
  double t504;
  double t508;
  double t513;
  double t515;
  double t529;
  double t539;
  double t547;
  double t583;
  double t351;
  double t355;
  double t356;
  double t367;
  double t375;
  double t380;
  double t385;
  double t386;
  double t585;
  double t413;
  double t415;
  double t417;
  double t427;
  double t430;
  double t448;
  double t454;
  double t492;
  double t193;
  double t196;
  double t198;
  double t78;
  double t393;
  double t403;
  double t407;
  double t495;
  double t589;
  double t598;
  double t600;
  double t606;
  double t613;
  double t663;
  double t673;
  double t674;
  double t679;
  double t680;
  double t682;
  double t684;
  double t689;
  double t697;
  double t739;
  double t751;
  double t755;
  double t760;
  double t761;
  double t765;
  double t795;
  double t801;
  double t807;
  double t889;
  double t901;
  double t905;
  double t608;
  double t655;
  double t662;
  double t740;
  double t746;
  double t750;
  double t820;
  double t821;
  double t833;
  double t837;
  double t840;
  double t851;
  double t852;
  double t856;
  double t858;
  double t875;
  double t932;
  double t935;
  double t941;
  double t942;
  double t948;
  double t958;
  double t960;
  double t962;
  double t1000;
  double t1016;
  double t1057;
  double t1058;
  double t1062;
  double t7;
  double t84;
  double t86;
  double t826;
  double t830;
  double t831;
  double t884;
  double t923;
  double t927;
  double t1034;
  double t1040;
  double t1073;
  double t1077;
  double t1078;
  double t1079;
  double t1102;
  double t1110;
  double t1112;
  double t1113;
  double t1152;
  double t1153;
  double t1154;
  double t1158;
  double t1163;
  double t1165;
  double t1170;
  double t1191;
  double t16;
  double t37;
  double t1344;
  double t1346;
  double t1349;
  double t1321;
  double t1335;
  double t1336;
  double t1339;
  double t1359;
  double t1370;
  double t1385;
  double t1397;
  double t1398;
  double t1459;
  double t1464;
  double t1465;
  double t1474;
  double t1374;
  double t1401;
  double t1403;
  double t1406;
  double t1422;
  double t1427;
  double t1436;
  double t1443;
  double t1421;
  double t1444;
  double t1475;
  double t1494;
  double t1507;
  double t1512;
  double t1513;
  double t1522;
  double t1540;
  double t1560;
  double t1561;
  double t1570;
  double t1504;
  double t1533;
  double t1583;
  double t1593;
  double t1608;
  double t1609;
  double t1613;
  double t1614;
  double t1624;
  double t1630;
  double t1638;
  double t1640;
  double t1142;
  double t1143;
  double t1216;
  double t1234;
  double t1607;
  double t1616;
  double t1657;
  double t1659;
  double t1241;
  double t1244;
  double t1666;
  double t1668;
  double t1670;
  double t1693;
  double t1725;
  double t1727;
  double t1732;
  double t1758;
  double t1250;
  double t1266;
  double t1279;
  double t1282;
  double t1298;
  double t1300;
  double t1858;
  double t1881;
  double t1882;
  double t1897;
  double t1904;
  double t1906;
  double t1934;
  double t1936;
  double t1937;
  double t1943;
  double t1884;
  double t1908;
  double t1913;
  double t1914;
  double t1920;
  double t1926;
  double t1929;
  double t1930;
  double t1915;
  double t1932;
  double t1946;
  double t1949;
  double t1953;
  double t1954;
  double t1960;
  double t1961;
  double t1965;
  double t1973;
  double t1980;
  double t1983;
  double t1951;
  double t1963;
  double t1986;
  double t1988;
  double t1998;
  double t2022;
  double t2026;
  double t2027;
  double t2044;
  double t2047;
  double t2055;
  double t2056;
  double t1992;
  double t2031;
  double t2059;
  double t2068;
  double t2087;
  double t2100;
  double t2105;
  double t2107;
  double t2113;
  double t2116;
  double t2117;
  double t2133;
  double t1041;
  double t1129;
  double t1193;
  double t1208;
  double t1237;
  double t1246;
  double t1247;
  double t1248;
  double t1269;
  double t1297;
  double t1302;
  double t1303;
  double t1665;
  double t1700;
  double t1761;
  double t1767;
  double t1772;
  double t1773;
  double t1790;
  double t1795;
  double t1818;
  double t1839;
  double t1840;
  double t1848;
  double t2082;
  double t2110;
  double t2135;
  double t2140;
  double t2148;
  double t2152;
  double t2153;
  double t2155;
  double t2169;
  double t2174;
  double t2175;
  double t2185;
  double t2297;
  double t2314;
  double t2315;
  double t2331;
  double t2344;
  double t2346;
  double t2351;
  double t2353;
  double t2362;
  double t2365;
  double t2368;
  double t2371;
  double t2376;
  double t2377;
  double t2394;
  double t2397;
  double t2398;
  double t2402;
  double t2431;
  double t2446;
  double t2460;
  double t2465;
  double t2468;
  double t2473;
  double t2477;
  double t2483;
  double t2486;
  double t2487;
  double t2488;
  double t2490;
  double t2494;
  double t2500;
  double t2501;
  double t2509;
  double t2515;
  double t2520;
  double t2523;
  double t2526;
  double t2532;
  double t2537;
  double t2538;
  double t2543;
  double t2548;
  double t2550;
  double t2559;
  double t2560;
  double t2573;
  double t2574;
  double t2575;
  double t2580;
  double t2588;
  double t2593;
  double t2595;
  double t2598;
  double t2605;
  double t2611;
  double t2614;
  double t2615;
  double t2619;
  double t2622;
  double t2625;
  double t2628;
  double t2630;
  double t2636;
  double t2638;
  double t2642;
  t252 = Cos(var1[3]);
  t234 = Cos(var1[5]);
  t253 = Sin(var1[4]);
  t238 = Sin(var1[3]);
  t258 = Sin(var1[5]);
  t216 = Cos(var1[7]);
  t227 = -1.*t216;
  t231 = 1. + t227;
  t232 = Cos(var1[6]);
  t303 = t252*t234*t253;
  t306 = t238*t258;
  t307 = t303 + t306;
  t241 = -1.*t234*t238;
  t277 = t252*t253*t258;
  t291 = t241 + t277;
  t329 = Sin(var1[6]);
  t199 = Cos(var1[8]);
  t202 = -1.*t199;
  t214 = 1. + t202;
  t296 = t232*t291;
  t330 = -1.*t307*t329;
  t337 = t296 + t330;
  t357 = t232*t307;
  t360 = t291*t329;
  t365 = t357 + t360;
  t371 = Cos(var1[4]);
  t374 = Sin(var1[7]);
  t500 = -1.000000637725*t231;
  t501 = 1. + t500;
  t504 = t252*t371*t501;
  t508 = -0.930418*t374;
  t513 = 0. + t508;
  t515 = t337*t513;
  t529 = -0.366501*t374;
  t539 = 0. + t529;
  t547 = t365*t539;
  t583 = t504 + t515 + t547;
  t351 = -0.340999127418*t231*t337;
  t355 = -0.134322983001*t231;
  t356 = 1. + t355;
  t367 = t356*t365;
  t375 = 0.366501*t374;
  t380 = 0. + t375;
  t385 = t252*t371*t380;
  t386 = t351 + t367 + t385;
  t585 = Sin(var1[8]);
  t413 = -0.8656776547239999*t231;
  t415 = 1. + t413;
  t417 = t415*t337;
  t427 = -0.340999127418*t231*t365;
  t430 = 0.930418*t374;
  t448 = 0. + t430;
  t454 = t252*t371*t448;
  t492 = t417 + t427 + t454;
  t193 = Cos(var1[9]);
  t196 = -1.*t193;
  t198 = 1. + t196;
  t78 = Sin(var1[10]);
  t393 = 0.340999127418*t214*t386;
  t403 = -0.134322983001*t214;
  t407 = 1. + t403;
  t495 = t407*t492;
  t589 = -0.366501*t585;
  t598 = 0. + t589;
  t600 = t583*t598;
  t606 = t393 + t495 + t600;
  t613 = Sin(var1[9]);
  t663 = -1.000000637725*t214;
  t673 = 1. + t663;
  t674 = t673*t583;
  t679 = -0.930418*t585;
  t680 = 0. + t679;
  t682 = t386*t680;
  t684 = 0.366501*t585;
  t689 = 0. + t684;
  t697 = t492*t689;
  t739 = t674 + t682 + t697;
  t751 = -0.8656776547239999*t214;
  t755 = 1. + t751;
  t760 = t755*t386;
  t761 = 0.340999127418*t214*t492;
  t765 = 0.930418*t585;
  t795 = 0. + t765;
  t801 = t583*t795;
  t807 = t760 + t761 + t801;
  t889 = Cos(var1[10]);
  t901 = -1.*t889;
  t905 = 1. + t901;
  t608 = 0.340999127418*t198*t606;
  t655 = -0.930418*t613;
  t662 = 0. + t655;
  t740 = t662*t739;
  t746 = -0.8656776547239999*t198;
  t750 = 1. + t746;
  t820 = t750*t807;
  t821 = t608 + t740 + t820;
  t833 = -0.134322983001*t198;
  t837 = 1. + t833;
  t840 = t837*t606;
  t851 = 0.366501*t613;
  t852 = 0. + t851;
  t856 = t852*t739;
  t858 = 0.340999127418*t198*t807;
  t875 = t840 + t856 + t858;
  t932 = -0.366501*t613;
  t935 = 0. + t932;
  t941 = t935*t606;
  t942 = -1.000000637725*t198;
  t948 = 1. + t942;
  t958 = t948*t739;
  t960 = 0.930418*t613;
  t962 = 0. + t960;
  t1000 = t962*t807;
  t1016 = t941 + t958 + t1000;
  t1057 = Cos(var1[11]);
  t1058 = -1.*t1057;
  t1062 = 1. + t1058;
  t7 = Sin(var1[11]);
  t84 = 0.930418*t78;
  t86 = 0. + t84;
  t826 = t86*t821;
  t830 = -0.366501*t78;
  t831 = 0. + t830;
  t884 = t831*t875;
  t923 = -1.000000637725*t905;
  t927 = 1. + t923;
  t1034 = t927*t1016;
  t1040 = t826 + t884 + t1034;
  t1073 = -0.8656776547239999*t905;
  t1077 = 1. + t1073;
  t1078 = t1077*t821;
  t1079 = 0.340999127418*t905*t875;
  t1102 = -0.930418*t78;
  t1110 = 0. + t1102;
  t1112 = t1110*t1016;
  t1113 = t1078 + t1079 + t1112;
  t1152 = 0.340999127418*t905*t821;
  t1153 = -0.134322983001*t905;
  t1154 = 1. + t1153;
  t1158 = t1154*t875;
  t1163 = 0.366501*t78;
  t1165 = 0. + t1163;
  t1170 = t1165*t1016;
  t1191 = t1152 + t1158 + t1170;
  t16 = 0.366501*t7;
  t37 = 0. + t16;
  t1344 = t234*t238*t253;
  t1346 = -1.*t252*t258;
  t1349 = t1344 + t1346;
  t1321 = t252*t234;
  t1335 = t238*t253*t258;
  t1336 = t1321 + t1335;
  t1339 = t232*t1336;
  t1359 = -1.*t1349*t329;
  t1370 = t1339 + t1359;
  t1385 = t232*t1349;
  t1397 = t1336*t329;
  t1398 = t1385 + t1397;
  t1459 = t371*t501*t238;
  t1464 = t1370*t513;
  t1465 = t1398*t539;
  t1474 = t1459 + t1464 + t1465;
  t1374 = -0.340999127418*t231*t1370;
  t1401 = t356*t1398;
  t1403 = t371*t238*t380;
  t1406 = t1374 + t1401 + t1403;
  t1422 = t415*t1370;
  t1427 = -0.340999127418*t231*t1398;
  t1436 = t371*t238*t448;
  t1443 = t1422 + t1427 + t1436;
  t1421 = 0.340999127418*t214*t1406;
  t1444 = t407*t1443;
  t1475 = t1474*t598;
  t1494 = t1421 + t1444 + t1475;
  t1507 = t673*t1474;
  t1512 = t1406*t680;
  t1513 = t1443*t689;
  t1522 = t1507 + t1512 + t1513;
  t1540 = t755*t1406;
  t1560 = 0.340999127418*t214*t1443;
  t1561 = t1474*t795;
  t1570 = t1540 + t1560 + t1561;
  t1504 = 0.340999127418*t198*t1494;
  t1533 = t662*t1522;
  t1583 = t750*t1570;
  t1593 = t1504 + t1533 + t1583;
  t1608 = t837*t1494;
  t1609 = t852*t1522;
  t1613 = 0.340999127418*t198*t1570;
  t1614 = t1608 + t1609 + t1613;
  t1624 = t935*t1494;
  t1630 = t948*t1522;
  t1638 = t962*t1570;
  t1640 = t1624 + t1630 + t1638;
  t1142 = -0.134322983001*t1062;
  t1143 = 1. + t1142;
  t1216 = -0.930418*t7;
  t1234 = 0. + t1216;
  t1607 = t86*t1593;
  t1616 = t831*t1614;
  t1657 = t927*t1640;
  t1659 = t1607 + t1616 + t1657;
  t1241 = -0.8656776547239999*t1062;
  t1244 = 1. + t1241;
  t1666 = t1077*t1593;
  t1668 = 0.340999127418*t905*t1614;
  t1670 = t1110*t1640;
  t1693 = t1666 + t1668 + t1670;
  t1725 = 0.340999127418*t905*t1593;
  t1727 = t1154*t1614;
  t1732 = t1165*t1640;
  t1758 = t1725 + t1727 + t1732;
  t1250 = -1.000000637725*t1062;
  t1266 = 1. + t1250;
  t1279 = 0.930418*t7;
  t1282 = 0. + t1279;
  t1298 = -0.366501*t7;
  t1300 = 0. + t1298;
  t1858 = t371*t232*t258;
  t1881 = -1.*t371*t234*t329;
  t1882 = t1858 + t1881;
  t1897 = t371*t234*t232;
  t1904 = t371*t258*t329;
  t1906 = t1897 + t1904;
  t1934 = -1.*t501*t253;
  t1936 = t1882*t513;
  t1937 = t1906*t539;
  t1943 = t1934 + t1936 + t1937;
  t1884 = -0.340999127418*t231*t1882;
  t1908 = t356*t1906;
  t1913 = -1.*t253*t380;
  t1914 = t1884 + t1908 + t1913;
  t1920 = t415*t1882;
  t1926 = -0.340999127418*t231*t1906;
  t1929 = -1.*t253*t448;
  t1930 = t1920 + t1926 + t1929;
  t1915 = 0.340999127418*t214*t1914;
  t1932 = t407*t1930;
  t1946 = t1943*t598;
  t1949 = t1915 + t1932 + t1946;
  t1953 = t673*t1943;
  t1954 = t1914*t680;
  t1960 = t1930*t689;
  t1961 = t1953 + t1954 + t1960;
  t1965 = t755*t1914;
  t1973 = 0.340999127418*t214*t1930;
  t1980 = t1943*t795;
  t1983 = t1965 + t1973 + t1980;
  t1951 = 0.340999127418*t198*t1949;
  t1963 = t662*t1961;
  t1986 = t750*t1983;
  t1988 = t1951 + t1963 + t1986;
  t1998 = t837*t1949;
  t2022 = t852*t1961;
  t2026 = 0.340999127418*t198*t1983;
  t2027 = t1998 + t2022 + t2026;
  t2044 = t935*t1949;
  t2047 = t948*t1961;
  t2055 = t962*t1983;
  t2056 = t2044 + t2047 + t2055;
  t1992 = t86*t1988;
  t2031 = t831*t2027;
  t2059 = t927*t2056;
  t2068 = t1992 + t2031 + t2059;
  t2087 = t1077*t1988;
  t2100 = 0.340999127418*t905*t2027;
  t2105 = t1110*t2056;
  t2107 = t2087 + t2100 + t2105;
  t2113 = 0.340999127418*t905*t1988;
  t2116 = t1154*t2027;
  t2117 = t1165*t2056;
  t2133 = t2113 + t2116 + t2117;
  t1041 = t37*t1040;
  t1129 = 0.340999127418*t1062*t1113;
  t1193 = t1143*t1191;
  t1208 = t1041 + t1129 + t1193;
  t1237 = t1234*t1040;
  t1246 = t1244*t1113;
  t1247 = 0.340999127418*t1062*t1191;
  t1248 = t1237 + t1246 + t1247;
  t1269 = t1266*t1040;
  t1297 = t1282*t1113;
  t1302 = t1300*t1191;
  t1303 = t1269 + t1297 + t1302;
  t1665 = t37*t1659;
  t1700 = 0.340999127418*t1062*t1693;
  t1761 = t1143*t1758;
  t1767 = t1665 + t1700 + t1761;
  t1772 = t1234*t1659;
  t1773 = t1244*t1693;
  t1790 = 0.340999127418*t1062*t1758;
  t1795 = t1772 + t1773 + t1790;
  t1818 = t1266*t1659;
  t1839 = t1282*t1693;
  t1840 = t1300*t1758;
  t1848 = t1818 + t1839 + t1840;
  t2082 = t37*t2068;
  t2110 = 0.340999127418*t1062*t2107;
  t2135 = t1143*t2133;
  t2140 = t2082 + t2110 + t2135;
  t2148 = t1234*t2068;
  t2152 = t1244*t2107;
  t2153 = 0.340999127418*t1062*t2133;
  t2155 = t2148 + t2152 + t2153;
  t2169 = t1266*t2068;
  t2174 = t1282*t2107;
  t2175 = t1300*t2133;
  t2185 = t2169 + t2174 + t2175;
  t2297 = -1.*t232;
  t2314 = 1. + t2297;
  t2315 = 0.091*t2314;
  t2331 = 0. + t2315;
  t2344 = 0.091*t329;
  t2346 = 0. + t2344;
  t2351 = -0.04500040093286238*t231;
  t2353 = 0.07877663122399998*t513;
  t2362 = 0.031030906668*t539;
  t2365 = 0. + t2351 + t2353 + t2362;
  t2368 = -3.2909349868922137e-7*var1[7];
  t2371 = 0.03103092645718495*t231;
  t2376 = -0.045000372235*t380;
  t2377 = t2368 + t2371 + t2376;
  t2394 = 1.296332362046933e-7*var1[7];
  t2397 = 0.07877668146182712*t231;
  t2398 = -0.045000372235*t448;
  t2402 = t2394 + t2397 + t2398;
  t2431 = 0.06199697675299678*t1062;
  t2446 = 0.324290713329*t1300;
  t2460 = -0.823260828522*t1282;
  t2465 = 0. + t2431 + t2446 + t2460;
  t2468 = 2.95447451120871e-8*var1[11];
  t2473 = -0.8232613535360118*t1062;
  t2477 = 0.061996937216*t1234;
  t2483 = t2468 + t2473 + t2477;
  t2486 = 7.500378623168247e-8*var1[11];
  t2487 = 0.32429092013729516*t1062;
  t2488 = 0.061996937216*t37;
  t2490 = t2486 + t2487 + t2488;
  t2494 = 2.281945176511838e-8*var1[10];
  t2500 = -0.5905366811997648*t905;
  t2501 = -0.262809976934*t1110;
  t2509 = t2494 + t2500 + t2501;
  t2515 = 5.7930615939377813e-8*var1[10];
  t2520 = 0.23261833304643187*t905;
  t2523 = -0.262809976934*t1165;
  t2526 = t2515 + t2520 + t2523;
  t2532 = -0.26281014453449253*t905;
  t2537 = 0.23261818470000004*t831;
  t2538 = -0.5905363046000001*t86;
  t2543 = 0. + t2532 + t2537 + t2538;
  t2548 = 3.2909349868922137e-7*var1[8];
  t2550 = 0.055653945343889656*t214;
  t2559 = -0.045000372235*t598;
  t2560 = t2548 + t2550 + t2559;
  t2573 = -1.5981976069815686e-7*var1[9];
  t2574 = 0.08675267452931407*t198;
  t2575 = 0.039853013046*t852;
  t2580 = t2573 + t2574 + t2575;
  t2588 = -0.04500040093286238*t214;
  t2593 = -0.141285834136*t680;
  t2595 = 0.055653909852*t689;
  t2598 = 0. + t2588 + t2593 + t2595;
  t2605 = 0.039853038461262744*t198;
  t2611 = 0.086752619205*t935;
  t2614 = -0.22023459268999998*t962;
  t2615 = 0. + t2605 + t2611 + t2614;
  t2619 = 1.296332362046933e-7*var1[8];
  t2622 = -0.14128592423750855*t214;
  t2625 = -0.045000372235*t795;
  t2628 = t2619 + t2622 + t2625;
  t2630 = -6.295460977284962e-8*var1[9];
  t2636 = -0.22023473313910558*t198;
  t2638 = 0.039853013046*t662;
  t2642 = t2630 + t2636 + t2638;
  p_output1[0]=-0.218018*t1208 + 0.553471*t1248 + 0.803828*t1303;
  p_output1[1]=-0.218018*t1767 + 0.553471*t1795 + 0.803828*t1848;
  p_output1[2]=-0.218018*t2140 + 0.553471*t2155 + 0.803828*t2185;
  p_output1[3]=0.;
  p_output1[4]=-0.294604*t1208 + 0.747896*t1248 - 0.594863*t1303;
  p_output1[5]=-0.294604*t1767 + 0.747896*t1795 - 0.594863*t1848;
  p_output1[6]=-0.294604*t2140 + 0.747896*t2155 - 0.594863*t2185;
  p_output1[7]=0.;
  p_output1[8]=-0.930418*t1208 - 0.366501*t1248;
  p_output1[9]=-0.930418*t1767 - 0.366501*t1795;
  p_output1[10]=-0.930418*t2140 - 0.366501*t2155;
  p_output1[11]=0.;
  p_output1[12]=0. + 0.402602*t1208 - 0.792413*t1248 + 0.061997*t1303 + t1040*t2465 + t1113*t2483 + t1191*t2490 + t1016*t2543 + t2331*t291 + t2346*t307 + t2402*t337 + t2377*t365 + t2365*t252*t371 + t2628*t386 + t2560*t492 + t2598*t583 + t2580*t606 + t2615*t739 + t2642*t807 + t2509*t821 + t2526*t875 + var1[0];
  p_output1[13]=0. + 0.402602*t1767 - 0.792413*t1795 + 0.061997*t1848 + t1336*t2331 + t1349*t2346 + t1398*t2377 + t1370*t2402 + t1659*t2465 + t1693*t2483 + t1758*t2490 + t1593*t2509 + t1614*t2526 + t1640*t2543 + t1443*t2560 + t1494*t2580 + t1474*t2598 + t1522*t2615 + t1406*t2628 + t1570*t2642 + t2365*t238*t371 + var1[1];
  p_output1[14]=0. + 0.402602*t2140 - 0.792413*t2155 + 0.061997*t2185 + t1906*t2377 + t1882*t2402 + t2068*t2465 + t2107*t2483 + t2133*t2490 + t1988*t2509 + t2027*t2526 - 1.*t2365*t253 + t2056*t2543 + t1930*t2560 + t1949*t2580 + t1943*t2598 + t1961*t2615 + t1914*t2628 + t1983*t2642 + t234*t2346*t371 + t2331*t258*t371 + var1[2];
  p_output1[15]=1.;
}



void T_toe_pitch_joint_left_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
