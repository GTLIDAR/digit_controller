/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:10:57 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "AMBody_right_tarsus_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t122;
  double t149;
  double t172;
  double t39;
  double t327;
  double t941;
  double t977;
  double t1319;
  double t175;
  double t178;
  double t181;
  double t269;
  double t347;
  double t362;
  double t608;
  double t630;
  double t757;
  double t777;
  double t781;
  double t789;
  double t838;
  double t884;
  double t906;
  double t918;
  double t1370;
  double t1422;
  double t1439;
  double t1607;
  double t1620;
  double t1798;
  double t1811;
  double t1858;
  double t1873;
  double t2003;
  double t2084;
  double t2088;
  double t2109;
  double t28;
  double t46;
  double t47;
  double t645;
  double t665;
  double t671;
  double t922;
  double t1329;
  double t1368;
  double t2052;
  double t2058;
  double t2214;
  double t2274;
  double t2279;
  double t2491;
  double t2494;
  double t2499;
  double t2504;
  double t2510;
  double t2640;
  double t2645;
  double t2646;
  double t2661;
  double t2676;
  double t2797;
  double t2805;
  double t2806;
  double t29;
  double t30;
  double t2068;
  double t2534;
  double t2554;
  double t2629;
  double t2813;
  double t2814;
  double t3029;
  double t2859;
  double t2861;
  double t2891;
  double t2893;
  double t2905;
  double t2913;
  double t2967;
  double t3010;
  double t3030;
  double t3031;
  double t3052;
  double t3053;
  double t3056;
  double t3068;
  double t3069;
  double t3070;
  double t3074;
  double t3077;
  double t3079;
  double t3085;
  double t3087;
  double t3088;
  double t3093;
  double t3097;
  double t3117;
  double t3125;
  double t3130;
  double t3267;
  double t3228;
  double t3231;
  double t3235;
  double t3239;
  double t3241;
  double t3248;
  double t3252;
  double t3258;
  double t3225;
  double t3271;
  double t3272;
  double t3274;
  double t3276;
  double t3277;
  double t3278;
  double t3279;
  double t3280;
  double t3143;
  double t3155;
  double t3158;
  double t3160;
  double t3224;
  double t3311;
  double t3318;
  double t3321;
  double t3262;
  double t3281;
  double t3282;
  double t3323;
  double t3417;
  double t3420;
  double t3431;
  double t3432;
  double t3436;
  double t3440;
  double t3450;
  double t3453;
  double t3460;
  double t3476;
  double t3480;
  double t3481;
  double t3433;
  double t3456;
  double t3486;
  double t3488;
  double t3501;
  double t3525;
  double t3526;
  double t3529;
  double t3535;
  double t3537;
  double t3539;
  double t3541;
  double t3495;
  double t3533;
  double t3545;
  double t3557;
  double t3559;
  double t3560;
  double t3569;
  double t3587;
  double t3631;
  double t3633;
  double t3637;
  double t3640;
  double t3692;
  double t3693;
  double t3696;
  double t3701;
  double t3703;
  double t3711;
  double t3717;
  double t3719;
  double t3655;
  double t3667;
  double t3669;
  double t3672;
  double t3368;
  double t3379;
  double t3730;
  double t3735;
  double t3738;
  double t3702;
  double t3720;
  double t3728;
  double t3833;
  double t3845;
  double t3846;
  double t3816;
  double t3819;
  double t3829;
  double t3869;
  double t3873;
  double t3876;
  double t3864;
  double t3865;
  double t3883;
  double t3886;
  double t3893;
  double t3902;
  double t3903;
  double t3906;
  double t3908;
  double t3912;
  double t3921;
  double t3926;
  double t3889;
  double t3907;
  double t3928;
  double t3930;
  double t3941;
  double t3942;
  double t3944;
  double t3946;
  double t3968;
  double t3970;
  double t3971;
  double t3974;
  double t4047;
  double t4050;
  double t4054;
  double t4057;
  double t4059;
  double t4062;
  double t4069;
  double t4071;
  double t3989;
  double t3990;
  double t3998;
  double t4004;
  double t4083;
  double t4086;
  double t4090;
  double t4058;
  double t4077;
  double t4078;
  double t27;
  double t2858;
  double t3021;
  double t3022;
  double t3026;
  double t3050;
  double t3054;
  double t3131;
  double t3132;
  double t3139;
  double t3164;
  double t3166;
  double t3167;
  double t3169;
  double t3176;
  double t3182;
  double t3199;
  double t3212;
  double t3221;
  double t3291;
  double t3338;
  double t3346;
  double t3351;
  double t3375;
  double t3381;
  double t3382;
  double t3384;
  double t3386;
  double t3393;
  double t3395;
  double t3398;
  double t3409;
  double t3558;
  double t3588;
  double t3607;
  double t3612;
  double t3618;
  double t3623;
  double t3642;
  double t3644;
  double t3649;
  double t3673;
  double t3676;
  double t3678;
  double t3679;
  double t3680;
  double t3683;
  double t3684;
  double t3685;
  double t3691;
  double t3729;
  double t3741;
  double t3744;
  double t3746;
  double t3757;
  double t3758;
  double t3761;
  double t3769;
  double t3771;
  double t3783;
  double t3794;
  double t3801;
  double t3815;
  double t3830;
  double t3859;
  double t3860;
  double t3861;
  double t3931;
  double t3947;
  double t3956;
  double t3959;
  double t3966;
  double t3967;
  double t3981;
  double t3984;
  double t3988;
  double t4005;
  double t4013;
  double t4028;
  double t4034;
  double t4036;
  double t4079;
  double t4096;
  double t4107;
  double t4130;
  double t4133;
  double t4135;
  double t4138;
  double t4140;
  double t4142;
  double t4145;
  double t4154;
  double t4159;
  t122 = Cos(var1[21]);
  t149 = -1.*t122;
  t172 = 1. + t149;
  t39 = Sin(var1[20]);
  t327 = Sin(var1[21]);
  t941 = Cos(var1[20]);
  t977 = -1.*t941;
  t1319 = 1. + t977;
  t175 = -0.8656776547239999*t172;
  t178 = 1. + t175;
  t181 = -0.789039*t178;
  t269 = 0.105986279791916*t172;
  t347 = -0.930418*t327;
  t362 = 0. + t347;
  t608 = -0.529919*t362;
  t630 = t181 + t269 + t608;
  t757 = -0.134322983001*t172;
  t777 = 1. + t757;
  t781 = -0.310811*t777;
  t789 = 0.2690616104987713*t172;
  t838 = -0.366501*t327;
  t884 = 0. + t838;
  t906 = -0.529919*t884;
  t918 = t781 + t789 + t906;
  t1370 = -1.000000637725*t172;
  t1422 = 1. + t1370;
  t1439 = -0.529919*t1422;
  t1607 = 0.366501*t327;
  t1620 = 0. + t1607;
  t1798 = -0.310811*t1620;
  t1811 = 0.930418*t327;
  t1858 = 0. + t1811;
  t1873 = -0.789039*t1858;
  t2003 = t1439 + t1798 + t1873;
  t2084 = Cos(var1[19]);
  t2088 = -1.*t2084;
  t2109 = 1. + t2088;
  t28 = Sin(var1[19]);
  t46 = 0.930418*t39;
  t47 = 0. + t46;
  t645 = t47*t630;
  t665 = 0.366501*t39;
  t671 = 0. + t665;
  t922 = t671*t918;
  t1329 = -1.000000637725*t1319;
  t1368 = 1. + t1329;
  t2052 = t1368*t2003;
  t2058 = 0. + t645 + t922 + t2052;
  t2214 = -0.8656776547239999*t1319;
  t2274 = 1. + t2214;
  t2279 = t2274*t630;
  t2491 = -0.340999127418*t1319*t918;
  t2494 = -0.930418*t39;
  t2499 = 0. + t2494;
  t2504 = t2499*t2003;
  t2510 = 0. + t2279 + t2491 + t2504;
  t2640 = -0.340999127418*t1319*t630;
  t2645 = -0.134322983001*t1319;
  t2646 = 1. + t2645;
  t2661 = t2646*t918;
  t2676 = -0.366501*t39;
  t2797 = 0. + t2676;
  t2805 = t2797*t2003;
  t2806 = 0. + t2640 + t2661 + t2805;
  t29 = 0.366501*t28;
  t30 = 0. + t29;
  t2068 = t30*t2058;
  t2534 = -0.340999127418*t2109*t2510;
  t2554 = -0.134322983001*t2109;
  t2629 = 1. + t2554;
  t2813 = t2629*t2806;
  t2814 = 0. + t2068 + t2534 + t2813;
  t3029 = Sin(var1[18]);
  t2859 = 0.930418*t28;
  t2861 = 0. + t2859;
  t2891 = t2861*t2058;
  t2893 = -0.8656776547239999*t2109;
  t2905 = 1. + t2893;
  t2913 = t2905*t2510;
  t2967 = -0.340999127418*t2109*t2806;
  t3010 = 0. + t2891 + t2913 + t2967;
  t3030 = 0.930418*t3029;
  t3031 = 0. + t3030;
  t3052 = -0.366501*t3029;
  t3053 = 0. + t3052;
  t3056 = Cos(var1[18]);
  t3068 = -1.*t3056;
  t3069 = 1. + t3068;
  t3070 = -1.000000637725*t3069;
  t3074 = 1. + t3070;
  t3077 = -1.000000637725*t2109;
  t3079 = 1. + t3077;
  t3085 = t3079*t2058;
  t3087 = -0.930418*t28;
  t3088 = 0. + t3087;
  t3093 = t3088*t2510;
  t3097 = -0.366501*t28;
  t3117 = 0. + t3097;
  t3125 = t3117*t2806;
  t3130 = 0. + t3085 + t3093 + t3125;
  t3267 = Sin(var1[17]);
  t3228 = -0.8656776547239999*t3069;
  t3231 = 1. + t3228;
  t3235 = t3231*t2814;
  t3239 = 0.340999127418*t3069*t3010;
  t3241 = -0.930418*t3029;
  t3248 = 0. + t3241;
  t3252 = t3248*t3130;
  t3258 = 0. + t3235 + t3239 + t3252;
  t3225 = Cos(var1[17]);
  t3271 = 0.340999127418*t3069*t2814;
  t3272 = -0.134322983001*t3069;
  t3274 = 1. + t3272;
  t3276 = t3274*t3010;
  t3277 = 0.366501*t3029;
  t3278 = 0. + t3277;
  t3279 = t3278*t3130;
  t3280 = 0. + t3271 + t3276 + t3279;
  t3143 = t3031*t2814;
  t3155 = t3053*t3010;
  t3158 = t3074*t3130;
  t3160 = 0. + t3143 + t3155 + t3158;
  t3224 = Cos(var1[5]);
  t3311 = -1.*t3267*t3258;
  t3318 = t3225*t3280;
  t3321 = 0. + t3311 + t3318;
  t3262 = t3225*t3258;
  t3281 = t3267*t3280;
  t3282 = 0. + t3262 + t3281;
  t3323 = Sin(var1[5]);
  t3417 = -0.493047*t178;
  t3420 = 0.06622748653061429*t172;
  t3431 = 0.848048*t362;
  t3432 = t3417 + t3420 + t3431;
  t3436 = -0.194216*t777;
  t3440 = 0.16812859677606265*t172;
  t3450 = 0.848048*t884;
  t3453 = t3436 + t3440 + t3450;
  t3460 = 0.848048*t1422;
  t3476 = -0.194216*t1620;
  t3480 = -0.493047*t1858;
  t3481 = t3460 + t3476 + t3480;
  t3433 = t47*t3432;
  t3456 = t671*t3453;
  t3486 = t1368*t3481;
  t3488 = 0. + t3433 + t3456 + t3486;
  t3501 = t2274*t3432;
  t3525 = -0.340999127418*t1319*t3453;
  t3526 = t2499*t3481;
  t3529 = 0. + t3501 + t3525 + t3526;
  t3535 = -0.340999127418*t1319*t3432;
  t3537 = t2646*t3453;
  t3539 = t2797*t3481;
  t3541 = 0. + t3535 + t3537 + t3539;
  t3495 = t30*t3488;
  t3533 = -0.340999127418*t2109*t3529;
  t3545 = t2629*t3541;
  t3557 = 0. + t3495 + t3533 + t3545;
  t3559 = t2861*t3488;
  t3560 = t2905*t3529;
  t3569 = -0.340999127418*t2109*t3541;
  t3587 = 0. + t3559 + t3560 + t3569;
  t3631 = t3079*t3488;
  t3633 = t3088*t3529;
  t3637 = t3117*t3541;
  t3640 = 0. + t3631 + t3633 + t3637;
  t3692 = t3231*t3557;
  t3693 = 0.340999127418*t3069*t3587;
  t3696 = t3248*t3640;
  t3701 = 0. + t3692 + t3693 + t3696;
  t3703 = 0.340999127418*t3069*t3557;
  t3711 = t3274*t3587;
  t3717 = t3278*t3640;
  t3719 = 0. + t3703 + t3711 + t3717;
  t3655 = t3031*t3557;
  t3667 = t3053*t3587;
  t3669 = t3074*t3640;
  t3672 = 0. + t3655 + t3667 + t3669;
  t3368 = Sin(var1[4]);
  t3379 = Cos(var1[4]);
  t3730 = -1.*t3267*t3701;
  t3735 = t3225*t3719;
  t3738 = 0. + t3730 + t3735;
  t3702 = t3225*t3701;
  t3720 = t3267*t3719;
  t3728 = 0. + t3702 + t3720;
  t3833 = 0.930418*t777;
  t3845 = 0.12497652119782442*t172;
  t3846 = t3833 + t3845;
  t3816 = -0.366501*t178;
  t3819 = -0.3172717261340007*t172;
  t3829 = t3816 + t3819;
  t3869 = 0.930418*t1620;
  t3873 = -0.366501*t1858;
  t3876 = t3869 + t3873;
  t3864 = t3846*t671;
  t3865 = t3829*t47;
  t3883 = t1368*t3876;
  t3886 = 0. + t3864 + t3865 + t3883;
  t3893 = t2274*t3829;
  t3902 = -0.340999127418*t1319*t3846;
  t3903 = t2499*t3876;
  t3906 = 0. + t3893 + t3902 + t3903;
  t3908 = -0.340999127418*t1319*t3829;
  t3912 = t2646*t3846;
  t3921 = t2797*t3876;
  t3926 = 0. + t3908 + t3912 + t3921;
  t3889 = t30*t3886;
  t3907 = -0.340999127418*t2109*t3906;
  t3928 = t2629*t3926;
  t3930 = 0. + t3889 + t3907 + t3928;
  t3941 = t2861*t3886;
  t3942 = t2905*t3906;
  t3944 = -0.340999127418*t2109*t3926;
  t3946 = 0. + t3941 + t3942 + t3944;
  t3968 = t3079*t3886;
  t3970 = t3088*t3906;
  t3971 = t3117*t3926;
  t3974 = 0. + t3968 + t3970 + t3971;
  t4047 = t3231*t3930;
  t4050 = 0.340999127418*t3069*t3946;
  t4054 = t3248*t3974;
  t4057 = 0. + t4047 + t4050 + t4054;
  t4059 = 0.340999127418*t3069*t3930;
  t4062 = t3274*t3946;
  t4069 = t3278*t3974;
  t4071 = 0. + t4059 + t4062 + t4069;
  t3989 = t3031*t3930;
  t3990 = t3053*t3946;
  t3998 = t3074*t3974;
  t4004 = 0. + t3989 + t3990 + t3998;
  t4083 = -1.*t3267*t4057;
  t4086 = t3225*t4071;
  t4090 = 0. + t4083 + t4086;
  t4058 = t3225*t4057;
  t4077 = t3267*t4071;
  t4078 = 0. + t4058 + t4077;
  t27 = -5.664589999843095e-7*var2[21];
  t2858 = -0.366501*t2814;
  t3021 = -0.930418*t3010;
  t3022 = 0. + t2858 + t3021;
  t3026 = var2[18]*t3022;
  t3050 = -1.*t3031*t2814;
  t3054 = -1.*t3053*t3010;
  t3131 = -1.*t3074*t3130;
  t3132 = 0. + t3050 + t3054 + t3131;
  t3139 = var2[17]*t3132;
  t3164 = var2[5]*t3160;
  t3166 = 0.366501*t2510;
  t3167 = -0.930418*t2806;
  t3169 = 0. + t3166 + t3167;
  t3176 = var2[19]*t3169;
  t3182 = -0.366501*t630;
  t3199 = 0.930418*t918;
  t3212 = 0. + t3182 + t3199;
  t3221 = var2[20]*t3212;
  t3291 = t3224*t3282;
  t3338 = -1.*t3321*t3323;
  t3346 = 0. + t3291 + t3338;
  t3351 = var2[4]*t3346;
  t3375 = -1.*t3160*t3368;
  t3381 = t3224*t3321;
  t3382 = t3282*t3323;
  t3384 = 0. + t3381 + t3382;
  t3386 = t3379*t3384;
  t3393 = 0. + t3375 + t3386;
  t3395 = var2[3]*t3393;
  t3398 = t27 + t3026 + t3139 + t3164 + t3176 + t3221 + t3351 + t3395;
  t3409 = 1.5625900004478943e-7*var2[21];
  t3558 = -0.366501*t3557;
  t3588 = -0.930418*t3587;
  t3607 = 0. + t3558 + t3588;
  t3612 = var2[18]*t3607;
  t3618 = -1.*t3031*t3557;
  t3623 = -1.*t3053*t3587;
  t3642 = -1.*t3074*t3640;
  t3644 = 0. + t3618 + t3623 + t3642;
  t3649 = var2[17]*t3644;
  t3673 = var2[5]*t3672;
  t3676 = 0.366501*t3529;
  t3678 = -0.930418*t3541;
  t3679 = 0. + t3676 + t3678;
  t3680 = var2[19]*t3679;
  t3683 = -0.366501*t3432;
  t3684 = 0.930418*t3453;
  t3685 = 0. + t3683 + t3684;
  t3691 = var2[20]*t3685;
  t3729 = t3224*t3728;
  t3741 = -1.*t3738*t3323;
  t3744 = 0. + t3729 + t3741;
  t3746 = var2[4]*t3744;
  t3757 = -1.*t3672*t3368;
  t3758 = t3224*t3738;
  t3761 = t3728*t3323;
  t3769 = 0. + t3758 + t3761;
  t3771 = t3379*t3769;
  t3783 = 0. + t3757 + t3771;
  t3794 = var2[3]*t3783;
  t3801 = t3409 + t3612 + t3649 + t3673 + t3680 + t3691 + t3746 + t3794;
  t3815 = 1.000000637725*var2[21];
  t3830 = -0.366501*t3829;
  t3859 = 0.930418*t3846;
  t3860 = 0. + t3830 + t3859;
  t3861 = var2[20]*t3860;
  t3931 = -0.366501*t3930;
  t3947 = -0.930418*t3946;
  t3956 = 0. + t3931 + t3947;
  t3959 = var2[18]*t3956;
  t3966 = -1.*t3031*t3930;
  t3967 = -1.*t3053*t3946;
  t3981 = -1.*t3074*t3974;
  t3984 = 0. + t3966 + t3967 + t3981;
  t3988 = var2[17]*t3984;
  t4005 = var2[5]*t4004;
  t4013 = 0.366501*t3906;
  t4028 = -0.930418*t3926;
  t4034 = 0. + t4013 + t4028;
  t4036 = var2[19]*t4034;
  t4079 = t3224*t4078;
  t4096 = -1.*t4090*t3323;
  t4107 = 0. + t4079 + t4096;
  t4130 = var2[4]*t4107;
  t4133 = -1.*t4004*t3368;
  t4135 = t3224*t4090;
  t4138 = t4078*t3323;
  t4140 = 0. + t4135 + t4138;
  t4142 = t3379*t4140;
  t4145 = 0. + t4133 + t4142;
  t4154 = var2[3]*t4145;
  t4159 = t3815 + t3861 + t3959 + t3988 + t4005 + t4036 + t4130 + t4154;
  p_output1[0]=-0.00061*t3398 + 0.00093*t3801 + 0.0001*t4159;
  p_output1[1]=0.01641*t3398 - 0.00061*t3801 - 0.00001*t4159;
  p_output1[2]=-0.00001*t3398 + 0.0001*t3801 + 0.0165*t4159;
}



void AMBody_right_tarsus_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
