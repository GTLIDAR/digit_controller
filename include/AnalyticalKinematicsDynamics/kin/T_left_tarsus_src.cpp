/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:57:42 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "T_left_tarsus_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t279;
  double t263;
  double t281;
  double t272;
  double t293;
  double t214;
  double t217;
  double t239;
  double t240;
  double t307;
  double t333;
  double t337;
  double t276;
  double t295;
  double t298;
  double t340;
  double t197;
  double t202;
  double t208;
  double t305;
  double t346;
  double t347;
  double t378;
  double t381;
  double t383;
  double t389;
  double t392;
  double t466;
  double t471;
  double t475;
  double t511;
  double t527;
  double t539;
  double t549;
  double t550;
  double t564;
  double t565;
  double t348;
  double t361;
  double t372;
  double t386;
  double t394;
  double t395;
  double t399;
  double t406;
  double t594;
  double t425;
  double t432;
  double t433;
  double t449;
  double t453;
  double t454;
  double t455;
  double t461;
  double t154;
  double t188;
  double t189;
  double t32;
  double t408;
  double t412;
  double t414;
  double t462;
  double t602;
  double t609;
  double t617;
  double t640;
  double t650;
  double t674;
  double t678;
  double t707;
  double t728;
  double t743;
  double t755;
  double t765;
  double t766;
  double t772;
  double t777;
  double t826;
  double t827;
  double t830;
  double t835;
  double t838;
  double t845;
  double t848;
  double t852;
  double t1071;
  double t1074;
  double t1078;
  double t647;
  double t651;
  double t657;
  double t780;
  double t781;
  double t782;
  double t895;
  double t906;
  double t955;
  double t958;
  double t960;
  double t971;
  double t982;
  double t991;
  double t1008;
  double t1046;
  double t1096;
  double t1102;
  double t1125;
  double t1131;
  double t1142;
  double t1153;
  double t1166;
  double t1172;
  double t1194;
  double t1196;
  double t44;
  double t51;
  double t1429;
  double t1446;
  double t1454;
  double t1411;
  double t1412;
  double t1416;
  double t1426;
  double t1466;
  double t1469;
  double t1471;
  double t1472;
  double t1483;
  double t1598;
  double t1609;
  double t1625;
  double t1627;
  double t1470;
  double t1512;
  double t1530;
  double t1537;
  double t1565;
  double t1580;
  double t1581;
  double t1591;
  double t942;
  double t944;
  double t1541;
  double t1592;
  double t1632;
  double t1640;
  double t1660;
  double t1669;
  double t1685;
  double t1690;
  double t1705;
  double t1719;
  double t1724;
  double t1725;
  double t1079;
  double t1086;
  double t1224;
  double t1235;
  double t1658;
  double t1700;
  double t1726;
  double t1735;
  double t1764;
  double t1771;
  double t1772;
  double t1776;
  double t1247;
  double t1249;
  double t1797;
  double t1798;
  double t1801;
  double t1804;
  double t1323;
  double t1331;
  double t1351;
  double t1389;
  double t1921;
  double t1951;
  double t1980;
  double t1994;
  double t2005;
  double t2019;
  double t2084;
  double t2085;
  double t2086;
  double t2103;
  double t1989;
  double t2027;
  double t2037;
  double t2044;
  double t2052;
  double t2054;
  double t2057;
  double t2074;
  double t2049;
  double t2075;
  double t2104;
  double t2109;
  double t2112;
  double t2118;
  double t2123;
  double t2124;
  double t2145;
  double t2148;
  double t2175;
  double t2177;
  double t2110;
  double t2136;
  double t2183;
  double t2186;
  double t2199;
  double t2252;
  double t2263;
  double t2267;
  double t2320;
  double t2321;
  double t2326;
  double t2329;
  double t931;
  double t1063;
  double t1203;
  double t1205;
  double t1236;
  double t1241;
  double t1273;
  double t1276;
  double t1299;
  double t1333;
  double t1390;
  double t1393;
  double t1762;
  double t1794;
  double t1814;
  double t1819;
  double t1841;
  double t1848;
  double t1862;
  double t1863;
  double t1867;
  double t1877;
  double t1891;
  double t1897;
  double t2196;
  double t2317;
  double t2330;
  double t2332;
  double t2338;
  double t2342;
  double t2348;
  double t2349;
  double t2371;
  double t2373;
  double t2375;
  double t2377;
  double t2483;
  double t2499;
  double t2503;
  double t2508;
  double t2519;
  double t2522;
  double t2543;
  double t2557;
  double t2559;
  double t2578;
  double t2583;
  double t2592;
  double t2594;
  double t2597;
  double t2601;
  double t2603;
  double t2604;
  double t2605;
  double t2615;
  double t2620;
  double t2623;
  double t2625;
  double t2632;
  double t2633;
  double t2637;
  double t2638;
  double t2643;
  double t2647;
  double t2648;
  double t2658;
  double t2664;
  double t2666;
  double t2667;
  double t2671;
  double t2676;
  double t2678;
  double t2684;
  double t2685;
  double t2688;
  double t2700;
  double t2701;
  double t2702;
  double t2707;
  double t2709;
  double t2711;
  double t2712;
  double t2727;
  double t2731;
  double t2732;
  double t2737;
  double t2739;
  double t2742;
  double t2747;
  double t2755;
  t279 = Cos(var1[3]);
  t263 = Cos(var1[5]);
  t281 = Sin(var1[4]);
  t272 = Sin(var1[3]);
  t293 = Sin(var1[5]);
  t214 = Cos(var1[7]);
  t217 = -1.*t214;
  t239 = 1. + t217;
  t240 = Cos(var1[6]);
  t307 = t279*t263*t281;
  t333 = t272*t293;
  t337 = t307 + t333;
  t276 = -1.*t263*t272;
  t295 = t279*t281*t293;
  t298 = t276 + t295;
  t340 = Sin(var1[6]);
  t197 = Cos(var1[8]);
  t202 = -1.*t197;
  t208 = 1. + t202;
  t305 = t240*t298;
  t346 = -1.*t337*t340;
  t347 = t305 + t346;
  t378 = t240*t337;
  t381 = t298*t340;
  t383 = t378 + t381;
  t389 = Cos(var1[4]);
  t392 = Sin(var1[7]);
  t466 = -1.000000637725*t239;
  t471 = 1. + t466;
  t475 = t279*t389*t471;
  t511 = -0.930418*t392;
  t527 = 0. + t511;
  t539 = t347*t527;
  t549 = -0.366501*t392;
  t550 = 0. + t549;
  t564 = t383*t550;
  t565 = t475 + t539 + t564;
  t348 = -0.340999127418*t239*t347;
  t361 = -0.134322983001*t239;
  t372 = 1. + t361;
  t386 = t372*t383;
  t394 = 0.366501*t392;
  t395 = 0. + t394;
  t399 = t279*t389*t395;
  t406 = t348 + t386 + t399;
  t594 = Sin(var1[8]);
  t425 = -0.8656776547239999*t239;
  t432 = 1. + t425;
  t433 = t432*t347;
  t449 = -0.340999127418*t239*t383;
  t453 = 0.930418*t392;
  t454 = 0. + t453;
  t455 = t279*t389*t454;
  t461 = t433 + t449 + t455;
  t154 = Cos(var1[9]);
  t188 = -1.*t154;
  t189 = 1. + t188;
  t32 = Sin(var1[10]);
  t408 = 0.340999127418*t208*t406;
  t412 = -0.134322983001*t208;
  t414 = 1. + t412;
  t462 = t414*t461;
  t602 = -0.366501*t594;
  t609 = 0. + t602;
  t617 = t565*t609;
  t640 = t408 + t462 + t617;
  t650 = Sin(var1[9]);
  t674 = -1.000000637725*t208;
  t678 = 1. + t674;
  t707 = t678*t565;
  t728 = -0.930418*t594;
  t743 = 0. + t728;
  t755 = t406*t743;
  t765 = 0.366501*t594;
  t766 = 0. + t765;
  t772 = t461*t766;
  t777 = t707 + t755 + t772;
  t826 = -0.8656776547239999*t208;
  t827 = 1. + t826;
  t830 = t827*t406;
  t835 = 0.340999127418*t208*t461;
  t838 = 0.930418*t594;
  t845 = 0. + t838;
  t848 = t565*t845;
  t852 = t830 + t835 + t848;
  t1071 = Cos(var1[10]);
  t1074 = -1.*t1071;
  t1078 = 1. + t1074;
  t647 = 0.340999127418*t189*t640;
  t651 = -0.930418*t650;
  t657 = 0. + t651;
  t780 = t657*t777;
  t781 = -0.8656776547239999*t189;
  t782 = 1. + t781;
  t895 = t782*t852;
  t906 = t647 + t780 + t895;
  t955 = -0.134322983001*t189;
  t958 = 1. + t955;
  t960 = t958*t640;
  t971 = 0.366501*t650;
  t982 = 0. + t971;
  t991 = t982*t777;
  t1008 = 0.340999127418*t189*t852;
  t1046 = t960 + t991 + t1008;
  t1096 = -0.366501*t650;
  t1102 = 0. + t1096;
  t1125 = t1102*t640;
  t1131 = -1.000000637725*t189;
  t1142 = 1. + t1131;
  t1153 = t1142*t777;
  t1166 = 0.930418*t650;
  t1172 = 0. + t1166;
  t1194 = t1172*t852;
  t1196 = t1125 + t1153 + t1194;
  t44 = 0.930418*t32;
  t51 = 0. + t44;
  t1429 = t263*t272*t281;
  t1446 = -1.*t279*t293;
  t1454 = t1429 + t1446;
  t1411 = t279*t263;
  t1412 = t272*t281*t293;
  t1416 = t1411 + t1412;
  t1426 = t240*t1416;
  t1466 = -1.*t1454*t340;
  t1469 = t1426 + t1466;
  t1471 = t240*t1454;
  t1472 = t1416*t340;
  t1483 = t1471 + t1472;
  t1598 = t389*t471*t272;
  t1609 = t1469*t527;
  t1625 = t1483*t550;
  t1627 = t1598 + t1609 + t1625;
  t1470 = -0.340999127418*t239*t1469;
  t1512 = t372*t1483;
  t1530 = t389*t272*t395;
  t1537 = t1470 + t1512 + t1530;
  t1565 = t432*t1469;
  t1580 = -0.340999127418*t239*t1483;
  t1581 = t389*t272*t454;
  t1591 = t1565 + t1580 + t1581;
  t942 = -0.366501*t32;
  t944 = 0. + t942;
  t1541 = 0.340999127418*t208*t1537;
  t1592 = t414*t1591;
  t1632 = t1627*t609;
  t1640 = t1541 + t1592 + t1632;
  t1660 = t678*t1627;
  t1669 = t1537*t743;
  t1685 = t1591*t766;
  t1690 = t1660 + t1669 + t1685;
  t1705 = t827*t1537;
  t1719 = 0.340999127418*t208*t1591;
  t1724 = t1627*t845;
  t1725 = t1705 + t1719 + t1724;
  t1079 = -1.000000637725*t1078;
  t1086 = 1. + t1079;
  t1224 = -0.8656776547239999*t1078;
  t1235 = 1. + t1224;
  t1658 = 0.340999127418*t189*t1640;
  t1700 = t657*t1690;
  t1726 = t782*t1725;
  t1735 = t1658 + t1700 + t1726;
  t1764 = t958*t1640;
  t1771 = t982*t1690;
  t1772 = 0.340999127418*t189*t1725;
  t1776 = t1764 + t1771 + t1772;
  t1247 = -0.930418*t32;
  t1249 = 0. + t1247;
  t1797 = t1102*t1640;
  t1798 = t1142*t1690;
  t1801 = t1172*t1725;
  t1804 = t1797 + t1798 + t1801;
  t1323 = -0.134322983001*t1078;
  t1331 = 1. + t1323;
  t1351 = 0.366501*t32;
  t1389 = 0. + t1351;
  t1921 = t389*t240*t293;
  t1951 = -1.*t389*t263*t340;
  t1980 = t1921 + t1951;
  t1994 = t389*t263*t240;
  t2005 = t389*t293*t340;
  t2019 = t1994 + t2005;
  t2084 = -1.*t471*t281;
  t2085 = t1980*t527;
  t2086 = t2019*t550;
  t2103 = t2084 + t2085 + t2086;
  t1989 = -0.340999127418*t239*t1980;
  t2027 = t372*t2019;
  t2037 = -1.*t281*t395;
  t2044 = t1989 + t2027 + t2037;
  t2052 = t432*t1980;
  t2054 = -0.340999127418*t239*t2019;
  t2057 = -1.*t281*t454;
  t2074 = t2052 + t2054 + t2057;
  t2049 = 0.340999127418*t208*t2044;
  t2075 = t414*t2074;
  t2104 = t2103*t609;
  t2109 = t2049 + t2075 + t2104;
  t2112 = t678*t2103;
  t2118 = t2044*t743;
  t2123 = t2074*t766;
  t2124 = t2112 + t2118 + t2123;
  t2145 = t827*t2044;
  t2148 = 0.340999127418*t208*t2074;
  t2175 = t2103*t845;
  t2177 = t2145 + t2148 + t2175;
  t2110 = 0.340999127418*t189*t2109;
  t2136 = t657*t2124;
  t2183 = t782*t2177;
  t2186 = t2110 + t2136 + t2183;
  t2199 = t958*t2109;
  t2252 = t982*t2124;
  t2263 = 0.340999127418*t189*t2177;
  t2267 = t2199 + t2252 + t2263;
  t2320 = t1102*t2109;
  t2321 = t1142*t2124;
  t2326 = t1172*t2177;
  t2329 = t2320 + t2321 + t2326;
  t931 = t51*t906;
  t1063 = t944*t1046;
  t1203 = t1086*t1196;
  t1205 = t931 + t1063 + t1203;
  t1236 = t1235*t906;
  t1241 = 0.340999127418*t1078*t1046;
  t1273 = t1249*t1196;
  t1276 = t1236 + t1241 + t1273;
  t1299 = 0.340999127418*t1078*t906;
  t1333 = t1331*t1046;
  t1390 = t1389*t1196;
  t1393 = t1299 + t1333 + t1390;
  t1762 = t51*t1735;
  t1794 = t944*t1776;
  t1814 = t1086*t1804;
  t1819 = t1762 + t1794 + t1814;
  t1841 = t1235*t1735;
  t1848 = 0.340999127418*t1078*t1776;
  t1862 = t1249*t1804;
  t1863 = t1841 + t1848 + t1862;
  t1867 = 0.340999127418*t1078*t1735;
  t1877 = t1331*t1776;
  t1891 = t1389*t1804;
  t1897 = t1867 + t1877 + t1891;
  t2196 = t51*t2186;
  t2317 = t944*t2267;
  t2330 = t1086*t2329;
  t2332 = t2196 + t2317 + t2330;
  t2338 = t1235*t2186;
  t2342 = 0.340999127418*t1078*t2267;
  t2348 = t1249*t2329;
  t2349 = t2338 + t2342 + t2348;
  t2371 = 0.340999127418*t1078*t2186;
  t2373 = t1331*t2267;
  t2375 = t1389*t2329;
  t2377 = t2371 + t2373 + t2375;
  t2483 = -1.*t240;
  t2499 = 1. + t2483;
  t2503 = 0.091*t2499;
  t2508 = 0. + t2503;
  t2519 = 0.091*t340;
  t2522 = 0. + t2519;
  t2543 = -0.04500040093286238*t239;
  t2557 = 0.07877663122399998*t527;
  t2559 = 0.031030906668*t550;
  t2578 = 0. + t2543 + t2557 + t2559;
  t2583 = -3.2909349868922137e-7*var1[7];
  t2592 = 0.03103092645718495*t239;
  t2594 = -0.045000372235*t395;
  t2597 = t2583 + t2592 + t2594;
  t2601 = 1.296332362046933e-7*var1[7];
  t2603 = 0.07877668146182712*t239;
  t2604 = -0.045000372235*t454;
  t2605 = t2601 + t2603 + t2604;
  t2615 = 2.281945176511838e-8*var1[10];
  t2620 = -0.5905366811997648*t1078;
  t2623 = -0.262809976934*t1249;
  t2625 = t2615 + t2620 + t2623;
  t2632 = 5.7930615939377813e-8*var1[10];
  t2633 = 0.23261833304643187*t1078;
  t2637 = -0.262809976934*t1389;
  t2638 = t2632 + t2633 + t2637;
  t2643 = -0.26281014453449253*t1078;
  t2647 = 0.23261818470000004*t944;
  t2648 = -0.5905363046000001*t51;
  t2658 = 0. + t2643 + t2647 + t2648;
  t2664 = 3.2909349868922137e-7*var1[8];
  t2666 = 0.055653945343889656*t208;
  t2667 = -0.045000372235*t609;
  t2671 = t2664 + t2666 + t2667;
  t2676 = -1.5981976069815686e-7*var1[9];
  t2678 = 0.08675267452931407*t189;
  t2684 = 0.039853013046*t982;
  t2685 = t2676 + t2678 + t2684;
  t2688 = -0.04500040093286238*t208;
  t2700 = -0.141285834136*t743;
  t2701 = 0.055653909852*t766;
  t2702 = 0. + t2688 + t2700 + t2701;
  t2707 = 0.039853038461262744*t189;
  t2709 = 0.086752619205*t1102;
  t2711 = -0.22023459268999998*t1172;
  t2712 = 0. + t2707 + t2709 + t2711;
  t2727 = 1.296332362046933e-7*var1[8];
  t2731 = -0.14128592423750855*t208;
  t2732 = -0.045000372235*t845;
  t2737 = t2727 + t2731 + t2732;
  t2739 = -6.295460977284962e-8*var1[9];
  t2742 = -0.22023473313910558*t189;
  t2747 = 0.039853013046*t657;
  t2755 = t2739 + t2742 + t2747;
  p_output1[0]=0.848048*t1205 - 0.493047*t1276 + 0.194216*t1393;
  p_output1[1]=0.848048*t1819 - 0.493047*t1863 + 0.194216*t1897;
  p_output1[2]=0.848048*t2332 - 0.493047*t2349 + 0.194216*t2377;
  p_output1[3]=0.;
  p_output1[4]=0.529919*t1205 + 0.789039*t1276 - 0.310811*t1393;
  p_output1[5]=0.529919*t1819 + 0.789039*t1863 - 0.310811*t1897;
  p_output1[6]=0.529919*t2332 + 0.789039*t2349 - 0.310811*t2377;
  p_output1[7]=0.;
  p_output1[8]=-0.366501*t1276 - 0.930418*t1393;
  p_output1[9]=-0.366501*t1863 - 0.930418*t1897;
  p_output1[10]=-0.366501*t2349 - 0.930418*t2377;
  p_output1[11]=0.;
  p_output1[12]=0. - 0.277485*t1205 - 0.58342*t1276 + 0.319547*t1393 + t1046*t2638 + t1196*t2658 + t2508*t298 + t2522*t337 + t2605*t347 + t2597*t383 + t2578*t279*t389 + t2737*t406 + t2671*t461 + t2702*t565 + t2685*t640 + t2712*t777 + t2755*t852 + t2625*t906 + var1[0];
  p_output1[13]=0. - 0.277485*t1819 - 0.58342*t1863 + 0.319547*t1897 + t1416*t2508 + t1454*t2522 + t1483*t2597 + t1469*t2605 + t1735*t2625 + t1776*t2638 + t1804*t2658 + t1591*t2671 + t1640*t2685 + t1627*t2702 + t1690*t2712 + t1537*t2737 + t1725*t2755 + t2578*t272*t389 + var1[1];
  p_output1[14]=0. - 0.277485*t2332 - 0.58342*t2349 + 0.319547*t2377 + t2019*t2597 + t1980*t2605 + t2186*t2625 + t2267*t2638 + t2329*t2658 + t2074*t2671 + t2109*t2685 + t2103*t2702 + t2124*t2712 + t2044*t2737 + t2177*t2755 - 1.*t2578*t281 + t2522*t263*t389 + t2508*t293*t389 + var1[2];
  p_output1[15]=1.;
}



void T_left_tarsus_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
