/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:44:11 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jb_elbow_joint_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t534;
  double t648;
  double t649;
  double t272;
  double t370;
  double t393;
  double t467;
  double t845;
  double t672;
  double t744;
  double t769;
  double t825;
  double t855;
  double t879;
  double t979;
  double t998;
  double t1187;
  double t1195;
  double t1200;
  double t1208;
  double t1220;
  double t1226;
  double t1257;
  double t1260;
  double t1107;
  double t1658;
  double t1659;
  double t1722;
  double t1733;
  double t1751;
  double t1758;
  double t1767;
  double t1827;
  double t1850;
  double t1861;
  double t2018;
  double t2029;
  double t2059;
  double t2083;
  double t456;
  double t209;
  double t479;
  double t528;
  double t1033;
  double t1156;
  double t1181;
  double t1434;
  double t1449;
  double t1479;
  double t1953;
  double t1976;
  double t2085;
  double t2147;
  double t2194;
  double t2240;
  double t2247;
  double t2273;
  double t2277;
  double t2316;
  double t2325;
  double t2327;
  double t2359;
  double t2364;
  double t2368;
  double t2372;
  double t2376;
  double t2429;
  double t2513;
  double t2543;
  double t2546;
  double t2635;
  double t2723;
  double t215;
  double t267;
  double t2013;
  double t2335;
  double t2344;
  double t2353;
  double t2678;
  double t2681;
  double t195;
  double t2748;
  double t2843;
  double t2854;
  double t2857;
  double t2858;
  double t2878;
  double t2963;
  double t3088;
  double t31;
  double t3169;
  double t3205;
  double t3209;
  double t2717;
  double t3091;
  double t3094;
  double t3228;
  double t22;
  double t3738;
  double t3741;
  double t3759;
  double t3762;
  double t3788;
  double t3836;
  double t3869;
  double t3903;
  double t3923;
  double t3926;
  double t3934;
  double t3935;
  double t3780;
  double t3919;
  double t3946;
  double t3959;
  double t3979;
  double t3982;
  double t4009;
  double t4020;
  double t4031;
  double t4033;
  double t4046;
  double t4057;
  double t3970;
  double t4029;
  double t4060;
  double t4066;
  double t4083;
  double t4087;
  double t4113;
  double t4120;
  double t3284;
  double t3310;
  double t3336;
  double t3360;
  double t3373;
  double t3380;
  double t3486;
  double t3496;
  double t3554;
  double t4168;
  double t4172;
  double t4174;
  double t4067;
  double t4135;
  double t4141;
  double t4505;
  double t4506;
  double t4510;
  double t4456;
  double t4464;
  double t4469;
  double t4564;
  double t4578;
  double t4583;
  double t4494;
  double t4553;
  double t4591;
  double t4594;
  double t4644;
  double t4648;
  double t4691;
  double t4704;
  double t4715;
  double t4719;
  double t4750;
  double t4754;
  double t4637;
  double t4706;
  double t4755;
  double t4763;
  double t4832;
  double t4849;
  double t4885;
  double t4907;
  double t5054;
  double t5068;
  double t5071;
  double t4825;
  double t5009;
  double t5017;
  double t3113;
  double t3239;
  double t3254;
  double t3364;
  double t3462;
  double t3519;
  double t3521;
  double t3529;
  double t3555;
  double t3646;
  double t3672;
  double t3673;
  double t3696;
  double t4158;
  double t4185;
  double t4186;
  double t4211;
  double t4254;
  double t4256;
  double t4355;
  double t4365;
  double t4401;
  double t4403;
  double t4412;
  double t4414;
  double t4420;
  double t5020;
  double t5102;
  double t5104;
  double t5119;
  double t5120;
  double t5177;
  double t5209;
  double t5211;
  double t5217;
  double t5225;
  double t5271;
  double t5273;
  double t5276;
  double t5428;
  double t5435;
  double t5440;
  double t5554;
  double t5622;
  double t5632;
  double t5651;
  double t5667;
  double t5671;
  double t5688;
  double t5704;
  double t5706;
  double t5721;
  double t5734;
  double t5735;
  double t5738;
  double t5752;
  double t5765;
  double t5766;
  double t5772;
  double t5773;
  double t5774;
  double t5776;
  double t5799;
  double t5560;
  double t5519;
  double t5552;
  double t5555;
  double t5559;
  double t5600;
  double t5602;
  double t5695;
  double t5762;
  double t5779;
  double t5780;
  double t5784;
  double t5791;
  double t5827;
  double t5847;
  double t5855;
  double t5859;
  double t5865;
  double t5866;
  double t5869;
  double t5877;
  double t5921;
  double t5922;
  double t5923;
  double t5924;
  double t5975;
  double t5978;
  double t5983;
  double t5996;
  double t6003;
  double t6013;
  double t5442;
  double t5459;
  double t5485;
  double t5492;
  double t5512;
  double t5782;
  double t5898;
  double t6021;
  double t6055;
  double t6064;
  double t6080;
  double t6088;
  double t6099;
  double t6105;
  double t6113;
  double t6118;
  double t5412;
  double t5416;
  double t5421;
  double t6140;
  double t6142;
  double t6152;
  double t6160;
  double t6162;
  double t5465;
  double t5484;
  double t6059;
  double t6120;
  double t6134;
  double t6185;
  double t6189;
  double t6208;
  double t6218;
  double t6223;
  double t6238;
  double t6245;
  double t6253;
  double t6262;
  double t6275;
  double t6137;
  double t6165;
  double t6166;
  double t6248;
  double t6276;
  double t6286;
  double t6300;
  double t6303;
  double t6306;
  double t5399;
  double t5402;
  double t5411;
  double t6175;
  double t6343;
  double t6370;
  double t6385;
  double t6420;
  double t6430;
  double t6492;
  double t6467;
  double t6558;
  double t6539;
  double t6618;
  double t6604;
  double t6986;
  double t6987;
  double t6991;
  double t7004;
  double t7008;
  double t7009;
  double t7011;
  double t7022;
  double t7065;
  double t7068;
  double t7070;
  double t7072;
  double t7083;
  double t7095;
  double t7098;
  double t7100;
  double t7163;
  double t7164;
  double t7168;
  double t7169;
  double t7174;
  double t7175;
  double t7176;
  double t7178;
  double t7279;
  double t7294;
  double t7318;
  double t7320;
  double t7337;
  double t7342;
  double t7343;
  double t7345;
  double t7389;
  double t7390;
  double t7393;
  double t7394;
  double t7396;
  double t7407;
  double t7408;
  double t7420;
  double t7488;
  double t7492;
  double t7493;
  double t7494;
  double t7501;
  double t7502;
  double t7503;
  double t7507;
  t534 = Cos(var1[16]);
  t648 = -1.*t534;
  t649 = 1. + t648;
  t272 = Cos(var1[15]);
  t370 = -1.*t272;
  t393 = 1. + t370;
  t467 = Sin(var1[15]);
  t845 = Sin(var1[16]);
  t672 = -0.9890740084840001*t649;
  t744 = 1. + t672;
  t769 = 0.380588*t744;
  t825 = -0.004158319780035616*t649;
  t855 = -0.994522*t845;
  t879 = 0. + t855;
  t979 = 0.92388*t879;
  t998 = t769 + t825 + t979;
  t1187 = -0.010926102783999999*t649;
  t1195 = 1. + t1187;
  t1200 = -0.040001*t1195;
  t1208 = 0.0395641761067022*t649;
  t1220 = 0.104528*t845;
  t1226 = 0. + t1220;
  t1257 = 0.92388*t1226;
  t1260 = t1200 + t1208 + t1257;
  t1107 = 0.05226439969100001*t393;
  t1658 = -1.0000001112680001*t649;
  t1659 = 1. + t1658;
  t1722 = 0.92388*t1659;
  t1733 = -0.104528*t845;
  t1751 = 0. + t1733;
  t1758 = -0.040001*t1751;
  t1767 = 0.994522*t845;
  t1827 = 0. + t1767;
  t1850 = 0.380588*t1827;
  t1861 = t1722 + t1758 + t1850;
  t2018 = Cos(var1[14]);
  t2029 = -1.*t2018;
  t2059 = 1. + t2029;
  t2083 = -0.051978134642000004*t393;
  t456 = -0.49726168403800003*t393;
  t209 = Sin(var1[14]);
  t479 = 0.073913*t467;
  t528 = t456 + t479;
  t1033 = t528*t998;
  t1156 = 0.703234*t467;
  t1181 = t1107 + t1156;
  t1434 = t1181*t1260;
  t1449 = -0.500001190325*t393;
  t1479 = 1. + t1449;
  t1953 = t1479*t1861;
  t1976 = 0. + t1033 + t1434 + t1953;
  t2085 = -0.707107*t467;
  t2147 = t2083 + t2085;
  t2194 = t2147*t998;
  t2240 = -0.9945383682050002*t393;
  t2247 = 1. + t2240;
  t2273 = t2247*t1260;
  t2277 = -0.703234*t467;
  t2316 = t1107 + t2277;
  t2325 = t2316*t1861;
  t2327 = 0. + t2194 + t2273 + t2325;
  t2359 = -0.5054634410180001*t393;
  t2364 = 1. + t2359;
  t2368 = t2364*t998;
  t2372 = 0.707107*t467;
  t2376 = t2083 + t2372;
  t2429 = t2376*t1260;
  t2513 = -0.073913*t467;
  t2543 = t456 + t2513;
  t2546 = t2543*t1861;
  t2635 = 0. + t2368 + t2429 + t2546;
  t2723 = Cos(var1[13]);
  t215 = -0.994522*t209;
  t267 = 0. + t215;
  t2013 = t267*t1976;
  t2335 = 0.103955395616*t2059*t2327;
  t2344 = -0.9890740084840001*t2059;
  t2353 = 1. + t2344;
  t2678 = t2353*t2635;
  t2681 = 0. + t2013 + t2335 + t2678;
  t195 = Sin(var1[13]);
  t2748 = 0.104528*t209;
  t2843 = 0. + t2748;
  t2854 = t2843*t1976;
  t2857 = -0.010926102783999999*t2059;
  t2858 = 1. + t2857;
  t2878 = t2858*t2327;
  t2963 = 0.103955395616*t2059*t2635;
  t3088 = 0. + t2854 + t2878 + t2963;
  t31 = Cos(var1[5]);
  t3169 = t2723*t2681;
  t3205 = -1.*t195*t3088;
  t3209 = 0. + t3169 + t3205;
  t2717 = t195*t2681;
  t3091 = t2723*t3088;
  t3094 = 0. + t2717 + t3091;
  t3228 = Sin(var1[5]);
  t22 = Sin(var1[3]);
  t3738 = -0.918819*t744;
  t3741 = 0.010039180465428352*t649;
  t3759 = 0.382684*t879;
  t3762 = t3738 + t3741 + t3759;
  t3788 = 0.096572*t1195;
  t3836 = -0.0955161926444975*t649;
  t3869 = 0.382684*t1226;
  t3903 = t3788 + t3836 + t3869;
  t3923 = 0.382684*t1659;
  t3926 = 0.096572*t1751;
  t3934 = -0.918819*t1827;
  t3935 = t3923 + t3926 + t3934;
  t3780 = t528*t3762;
  t3919 = t1181*t3903;
  t3946 = t1479*t3935;
  t3959 = 0. + t3780 + t3919 + t3946;
  t3979 = t2147*t3762;
  t3982 = t2247*t3903;
  t4009 = t2316*t3935;
  t4020 = 0. + t3979 + t3982 + t4009;
  t4031 = t2364*t3762;
  t4033 = t2376*t3903;
  t4046 = t2543*t3935;
  t4057 = 0. + t4031 + t4033 + t4046;
  t3970 = t267*t3959;
  t4029 = 0.103955395616*t2059*t4020;
  t4060 = t2353*t4057;
  t4066 = 0. + t3970 + t4029 + t4060;
  t4083 = t2843*t3959;
  t4087 = t2858*t4020;
  t4113 = 0.103955395616*t2059*t4057;
  t4120 = 0. + t4083 + t4087 + t4113;
  t3284 = Cos(var1[3]);
  t3310 = Cos(var1[4]);
  t3336 = -1.0000001112680001*t2059;
  t3360 = 1. + t3336;
  t3373 = -0.104528*t209;
  t3380 = 0. + t3373;
  t3486 = 0.994522*t209;
  t3496 = 0. + t3486;
  t3554 = Sin(var1[4]);
  t4168 = t2723*t4066;
  t4172 = -1.*t195*t4120;
  t4174 = 0. + t4168 + t4172;
  t4067 = t195*t4066;
  t4135 = t2723*t4120;
  t4141 = 0. + t4067 + t4135;
  t4505 = 0.994522*t1195;
  t4506 = 0.010866249592949247*t649;
  t4510 = t4505 + t4506;
  t4456 = 0.104528*t744;
  t4464 = 0.10338592795881554*t649;
  t4469 = t4456 + t4464;
  t4564 = 0.994522*t1751;
  t4578 = 0.104528*t1827;
  t4583 = t4564 + t4578;
  t4494 = t4469*t528;
  t4553 = t4510*t1181;
  t4591 = t1479*t4583;
  t4594 = 0. + t4494 + t4553 + t4591;
  t4644 = t2247*t4510;
  t4648 = t4469*t2147;
  t4691 = t2316*t4583;
  t4704 = 0. + t4644 + t4648 + t4691;
  t4715 = t2364*t4469;
  t4719 = t4510*t2376;
  t4750 = t2543*t4583;
  t4754 = 0. + t4715 + t4719 + t4750;
  t4637 = t267*t4594;
  t4706 = 0.103955395616*t2059*t4704;
  t4755 = t2353*t4754;
  t4763 = 0. + t4637 + t4706 + t4755;
  t4832 = t2843*t4594;
  t4849 = t2858*t4704;
  t4885 = 0.103955395616*t2059*t4754;
  t4907 = 0. + t4832 + t4849 + t4885;
  t5054 = t2723*t4763;
  t5068 = -1.*t195*t4907;
  t5071 = 0. + t5054 + t5068;
  t4825 = t195*t4763;
  t5009 = t2723*t4907;
  t5017 = 0. + t4825 + t5009;
  t3113 = t31*t3094;
  t3239 = -1.*t3209*t3228;
  t3254 = 0. + t3113 + t3239;
  t3364 = t3360*t1976;
  t3462 = t3380*t2327;
  t3519 = t3496*t2635;
  t3521 = 0. + t3364 + t3462 + t3519;
  t3529 = t3310*t3521;
  t3555 = t31*t3209;
  t3646 = t3094*t3228;
  t3672 = 0. + t3555 + t3646;
  t3673 = t3554*t3672;
  t3696 = 0. + t3529 + t3673;
  t4158 = t31*t4141;
  t4185 = -1.*t4174*t3228;
  t4186 = 0. + t4158 + t4185;
  t4211 = t3360*t3959;
  t4254 = t3380*t4020;
  t4256 = t3496*t4057;
  t4355 = 0. + t4211 + t4254 + t4256;
  t4365 = t3310*t4355;
  t4401 = t31*t4174;
  t4403 = t4141*t3228;
  t4412 = 0. + t4401 + t4403;
  t4414 = t3554*t4412;
  t4420 = 0. + t4365 + t4414;
  t5020 = t31*t5017;
  t5102 = -1.*t5071*t3228;
  t5104 = 0. + t5020 + t5102;
  t5119 = t3360*t4594;
  t5120 = t3380*t4704;
  t5177 = t3496*t4754;
  t5209 = 0. + t5119 + t5120 + t5177;
  t5211 = t3310*t5209;
  t5217 = t31*t5071;
  t5225 = t5017*t3228;
  t5271 = 0. + t5217 + t5225;
  t5273 = t3554*t5271;
  t5276 = 0. + t5211 + t5273;
  t5428 = -1.*t5209*t3554;
  t5435 = t3310*t5271;
  t5440 = 0. + t5428 + t5435;
  t5554 = 0.051978134642000004*t393;
  t5622 = -4.817066759205414e-7*var1[16];
  t5632 = 0.272168*t1195;
  t5651 = 0.0029737557303853007*t649;
  t5667 = 0.190987300194*t1751;
  t5671 = 0.190987*t1226;
  t5688 = t5622 + t5632 + t5651 + t5667 + t5671;
  t5704 = 0.190987*t1659;
  t5706 = 0.19098732144477495*t649;
  t5721 = 0.137024246638*t879;
  t5734 = 0.272168*t1751;
  t5735 = -0.014401763312*t1226;
  t5738 = 0.167144*t1827;
  t5752 = 0. + t5704 + t5706 + t5721 + t5734 + t5735 + t5738;
  t5765 = -5.06291820800569e-8*var1[16];
  t5766 = 0.167144*t744;
  t5772 = 0.16531759399842938*t649;
  t5773 = 0.190987*t879;
  t5774 = 0.190987300194*t1827;
  t5776 = t5765 + t5766 + t5772 + t5773 + t5774;
  t5799 = -0.05226439969100001*t393;
  t5560 = 0.49726168403800003*t393;
  t5519 = -1.5601527583902087e-7*var1[15];
  t5552 = 0.09582494577057615*t393;
  t5555 = t5554 + t2085;
  t5559 = 0.231098203479*t5555;
  t5600 = t5560 + t479;
  t5602 = 0.164383620275*t5600;
  t5695 = t2376*t5688;
  t5762 = t2543*t5752;
  t5779 = t2364*t5776;
  t5780 = t5519 + t5552 + t5559 + t5602 + t5695 + t5762 + t5779;
  t5784 = 1.639789470231751e-8*var1[15];
  t5791 = 0.22983603018311177*t393;
  t5827 = t5799 + t1156;
  t5847 = 0.164383620275*t5827;
  t5855 = t5554 + t2372;
  t5859 = 0.18957839082800002*t5855;
  t5865 = t2247*t5688;
  t5866 = t2316*t5752;
  t5869 = t2147*t5776;
  t5877 = t5784 + t5791 + t5847 + t5859 + t5865 + t5866 + t5869;
  t5921 = 1.568745163810375e-7*var1[15];
  t5922 = 0.08219200580743281*t393;
  t5923 = t5799 + t2277;
  t5924 = 0.231098203479*t5923;
  t5975 = t5560 + t2513;
  t5978 = 0.18957839082800002*t5975;
  t5983 = t1181*t5688;
  t5996 = t1479*t5752;
  t6003 = t528*t5776;
  t6013 = t5921 + t5922 + t5924 + t5978 + t5983 + t5996 + t6003;
  t5442 = -1.*t2723;
  t5459 = 1. + t5442;
  t5485 = 1.1924972351948546e-8*var1[14];
  t5492 = 0.38315655000705834*t2059;
  t5512 = -0.05650052807*t3496;
  t5782 = t2353*t5780;
  t5898 = 0.103955395616*t2059*t5877;
  t6021 = t267*t6013;
  t6055 = t5485 + t5492 + t5512 + t5782 + t5898 + t6021;
  t6064 = 1.1345904784751044e-7*var1[14];
  t6080 = -0.04027119345689465*t2059;
  t6088 = -0.05650052807*t3380;
  t6099 = 0.103955395616*t2059*t5780;
  t6105 = t2858*t5877;
  t6113 = t2843*t6013;
  t6118 = t6064 + t6080 + t6088 + t6099 + t6105 + t6113;
  t5412 = -1.*t4355*t3554;
  t5416 = t3310*t4412;
  t5421 = 0. + t5412 + t5416;
  t6140 = 0.4*t5459;
  t6142 = 0.12*t195;
  t6152 = t2723*t6055;
  t6160 = -1.*t195*t6118;
  t6162 = 0. + t6140 + t6142 + t6152 + t6160;
  t5465 = 0.12*t5459;
  t5484 = -0.4*t195;
  t6059 = t195*t6055;
  t6120 = t2723*t6118;
  t6134 = 0. + t5465 + t5484 + t6059 + t6120;
  t6185 = -0.056500534356700764*t2059;
  t6189 = 0.38315650737400003*t267;
  t6208 = -0.040271188976*t2843;
  t6218 = t3496*t5780;
  t6223 = t3380*t5877;
  t6238 = t3360*t6013;
  t6245 = 0. + t6185 + t6189 + t6208 + t6218 + t6223 + t6238;
  t6253 = t31*t6162;
  t6262 = t6134*t3228;
  t6275 = 0. + t6253 + t6262;
  t6137 = t31*t6134;
  t6165 = -1.*t6162*t3228;
  t6166 = 0. + t6137 + t6165;
  t6248 = -1.*t6245*t3554;
  t6276 = t3310*t6275;
  t6286 = 0. + t6248 + t6276;
  t6300 = t3310*t6245;
  t6303 = t3554*t6275;
  t6306 = 0. + t6300 + t6303;
  t5399 = -1.*t3521*t3554;
  t5402 = t3310*t3672;
  t5411 = 0. + t5399 + t5402;
  t6175 = -1.*t4186*t6166;
  t6343 = t5104*t6166;
  t6370 = -1.*t5104*t6166;
  t6385 = t6166*t3254;
  t6420 = t4186*t6166;
  t6430 = -1.*t6166*t3254;
  t6492 = t5209*t6245;
  t6467 = -1.*t4355*t6245;
  t6558 = t6245*t3521;
  t6539 = -1.*t5209*t6245;
  t6618 = -1.*t6245*t3521;
  t6604 = t4355*t6245;
  t6986 = t4754*t5780;
  t6987 = t4704*t5877;
  t6991 = t4594*t6013;
  t7004 = t6986 + t6987 + t6991;
  t7008 = -1.*t4057*t5780;
  t7009 = -1.*t4020*t5877;
  t7011 = -1.*t3959*t6013;
  t7022 = t7008 + t7009 + t7011;
  t7065 = t6013*t1976;
  t7068 = t5877*t2327;
  t7070 = t5780*t2635;
  t7072 = t7065 + t7068 + t7070;
  t7083 = -1.*t4754*t5780;
  t7095 = -1.*t4704*t5877;
  t7098 = -1.*t4594*t6013;
  t7100 = t7083 + t7095 + t7098;
  t7163 = -1.*t6013*t1976;
  t7164 = -1.*t5877*t2327;
  t7168 = -1.*t5780*t2635;
  t7169 = t7163 + t7164 + t7168;
  t7174 = t4057*t5780;
  t7175 = t4020*t5877;
  t7176 = t3959*t6013;
  t7178 = t7174 + t7175 + t7176;
  t7279 = -1.*t5688*t3903;
  t7294 = -1.*t3935*t5752;
  t7318 = -1.*t3762*t5776;
  t7320 = t7279 + t7294 + t7318;
  t7337 = t4510*t5688;
  t7342 = t4583*t5752;
  t7343 = t4469*t5776;
  t7345 = t7337 + t7342 + t7343;
  t7389 = t5688*t1260;
  t7390 = t998*t5776;
  t7393 = t5752*t1861;
  t7394 = t7389 + t7390 + t7393;
  t7396 = -1.*t4510*t5688;
  t7407 = -1.*t4583*t5752;
  t7408 = -1.*t4469*t5776;
  t7420 = t7396 + t7407 + t7408;
  t7488 = -1.*t5688*t1260;
  t7492 = -1.*t998*t5776;
  t7493 = -1.*t5752*t1861;
  t7494 = t7488 + t7492 + t7493;
  t7501 = t5688*t3903;
  t7502 = t3935*t5752;
  t7503 = t3762*t5776;
  t7507 = t7501 + t7502 + t7503;
  p_output1[0]=0. - 1.*t22*t3254 + t3284*t3696;
  p_output1[1]=0. - 1.*t22*t4186 + t3284*t4420;
  p_output1[2]=0. - 1.*t22*t5104 + t3284*t5276;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0. + t3254*t3284 + t22*t3696;
  p_output1[7]=0. + t3284*t4186 + t22*t4420;
  p_output1[8]=0. + t3284*t5104 + t22*t5276;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t5411;
  p_output1[13]=t5421;
  p_output1[14]=t5440;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=t5440*(t6175 - 1.*t5421*t6286 - 1.*t4420*t6306) + t5421*(t5440*t6286 + t5276*t6306 + t6343);
  p_output1[19]=t5411*(-1.*t5440*t6286 - 1.*t5276*t6306 + t6370) + t5440*(t5411*t6286 + t3696*t6306 + t6385);
  p_output1[20]=t5411*(t5421*t6286 + t4420*t6306 + t6420) + t5421*(-1.*t5411*t6286 - 1.*t3696*t6306 + t6430);
  p_output1[21]=t5411;
  p_output1[22]=t5421;
  p_output1[23]=t5440;
  p_output1[24]=t5104*(t6175 - 1.*t4412*t6275 + t6467) + t4186*(t5271*t6275 + t6343 + t6492);
  p_output1[25]=t3254*(-1.*t5271*t6275 + t6370 + t6539) + t5104*(t3672*t6275 + t6385 + t6558);
  p_output1[26]=t3254*(t4412*t6275 + t6420 + t6604) + t4186*(-1.*t3672*t6275 + t6430 + t6618);
  p_output1[27]=t3254;
  p_output1[28]=t4186;
  p_output1[29]=t5104;
  p_output1[30]=t5209*(-1.*t4141*t6134 - 1.*t4174*t6162 + t6467) + t4355*(t5017*t6134 + t5071*t6162 + t6492);
  p_output1[31]=t3521*(-1.*t5017*t6134 - 1.*t5071*t6162 + t6539) + t5209*(t3094*t6134 + t3209*t6162 + t6558);
  p_output1[32]=t3521*(t4141*t6134 + t4174*t6162 + t6604) + t4355*(-1.*t3094*t6134 - 1.*t3209*t6162 + t6618);
  p_output1[33]=t3521;
  p_output1[34]=t4355;
  p_output1[35]=t5209;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0.12*t2681 - 0.4*t3088 - 1.*t5209*(-1.*t4066*t6055 - 1.*t4120*t6118 + t6467) - 1.*t4355*(t4763*t6055 + t4907*t6118 + t6492);
  p_output1[79]=0.12*t4066 - 0.4*t4120 - 1.*t3521*(-1.*t4763*t6055 - 1.*t4907*t6118 + t6539) - 1.*t5209*(t2681*t6055 + t3088*t6118 + t6558);
  p_output1[80]=0.12*t4763 - 0.4*t4907 - 1.*t3521*(t4066*t6055 + t4120*t6118 + t6604) - 1.*t4355*(-1.*t2681*t6055 - 1.*t3088*t6118 + t6618);
  p_output1[81]=0. - 1.*t1976*t3360 - 1.*t2327*t3380 - 1.*t2635*t3496;
  p_output1[82]=0. - 1.*t3360*t3959 - 1.*t3380*t4020 - 1.*t3496*t4057;
  p_output1[83]=0. - 1.*t3360*t4594 - 1.*t3380*t4704 - 1.*t3496*t4754;
  p_output1[84]=-0.385267*t1976 + 0.005906*t2327 - 0.056191*t2635 + 0.994522*(t4020*t7004 + t4704*t7022) + 0.104528*(t4057*t7004 + t4754*t7022);
  p_output1[85]=-0.385267*t3959 + 0.005906*t4020 - 0.056191*t4057 + 0.994522*(t4704*t7072 + t2327*t7100) + 0.104528*(t4754*t7072 + t2635*t7100);
  p_output1[86]=-0.385267*t4594 + 0.005906*t4704 - 0.056191*t4754 + 0.994522*(t4020*t7169 + t2327*t7178) + 0.104528*(t4057*t7169 + t2635*t7178);
  p_output1[87]=0. + 0.994522*t2327 + 0.104528*t2635;
  p_output1[88]=0. + 0.994522*t4020 + 0.104528*t4057;
  p_output1[89]=0. + 0.994522*t4704 + 0.104528*t4754;
  p_output1[90]=0.249652*t1260 - 0.176528*t1861 - 0.703234*(t4469*t7320 + t3762*t7345) + 0.073913*(t4510*t7320 + t3903*t7345) + 0.707107*(t4583*t7320 + t3935*t7345) - 0.151261*t998;
  p_output1[91]=-0.151261*t3762 + 0.249652*t3903 - 0.176528*t3935 + 0.073913*(t4510*t7394 + t1260*t7420) + 0.707107*(t4583*t7394 + t1861*t7420) - 0.703234*(t4469*t7394 + t7420*t998);
  p_output1[92]=-0.151261*t4469 + 0.249652*t4510 - 0.176528*t4583 + 0.073913*(t3903*t7494 + t1260*t7507) + 0.707107*(t3935*t7494 + t1861*t7507) - 0.703234*(t3762*t7494 + t7507*t998);
  p_output1[93]=0. + 0.073913*t1260 + 0.707107*t1861 - 0.703234*t998;
  p_output1[94]=0. - 0.703234*t3762 + 0.073913*t3903 + 0.707107*t3935;
  p_output1[95]=0. - 0.703234*t4469 + 0.073913*t4510 + 0.707107*t4583;
  p_output1[96]=3.86465687628873e-7;
  p_output1[97]=-1.4404024535792648e-7;
  p_output1[98]=-6.493807148989783e-7;
  p_output1[99]=2.2794199999731646e-7;
  p_output1[100]=6.661520000061927e-7;
  p_output1[101]=1.0000001112680001;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void Jb_elbow_joint_left_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
