/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:09:40 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jq_AMWorld_right_hip_yaw_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t18;
  double t167;
  double t252;
  double t884;
  double t1068;
  double t1040;
  double t1055;
  double t876;
  double t1127;
  double t1129;
  double t428;
  double t487;
  double t491;
  double t1275;
  double t1401;
  double t1519;
  double t1063;
  double t1191;
  double t1194;
  double t1585;
  double t329;
  double t1818;
  double t2125;
  double t1687;
  double t2326;
  double t2325;
  double t2400;
  double t2413;
  double t2476;
  double t2580;
  double t2892;
  double t4252;
  double t4401;
  double t4467;
  double t4484;
  double t4600;
  double t4110;
  double t4121;
  double t4159;
  double t4183;
  double t4217;
  double t3649;
  double t3888;
  double t3914;
  double t4880;
  double t4953;
  double t4981;
  double t4226;
  double t4611;
  double t4653;
  double t5755;
  double t5765;
  double t5778;
  double t5695;
  double t5701;
  double t5661;
  double t5684;
  double t5691;
  double t5810;
  double t5833;
  double t5848;
  double t5747;
  double t5789;
  double t5793;
  double t2441;
  double t2900;
  double t2916;
  double t3079;
  double t3196;
  double t3217;
  double t3466;
  double t3925;
  double t3944;
  double t4004;
  double t4058;
  double t4062;
  double t4842;
  double t4982;
  double t4983;
  double t5049;
  double t5086;
  double t5089;
  double t5118;
  double t5155;
  double t5170;
  double t5365;
  double t5420;
  double t5435;
  double t5452;
  double t5580;
  double t5586;
  double t5642;
  double t5694;
  double t5807;
  double t5851;
  double t5885;
  double t5889;
  double t5904;
  double t5950;
  double t5955;
  double t5960;
  double t5984;
  double t5986;
  double t6006;
  double t6015;
  double t6056;
  double t6088;
  double t6093;
  double t6114;
  double t6158;
  double t6162;
  double t6168;
  double t6181;
  double t335;
  double t385;
  double t489;
  double t1213;
  double t1660;
  double t1664;
  double t1673;
  double t1699;
  double t1867;
  double t1877;
  double t1896;
  double t1959;
  double t1989;
  double t2004;
  double t2012;
  double t2112;
  double t2158;
  double t2187;
  double t3017;
  double t3053;
  double t6289;
  double t6299;
  double t6300;
  double t6339;
  double t6347;
  double t6350;
  double t5447;
  double t6031;
  double t6032;
  double t6337;
  double t6357;
  double t6362;
  double t6384;
  double t6385;
  double t6387;
  double t6203;
  double t6206;
  double t6214;
  double t6403;
  double t6411;
  double t6417;
  double t6419;
  double t6436;
  double t6440;
  double t6446;
  double t6448;
  double t6283;
  double t6365;
  double t6393;
  double t6397;
  double t6488;
  double t6500;
  double t6503;
  double t6512;
  double t6514;
  double t6522;
  double t6556;
  double t6563;
  double t6566;
  double t6573;
  double t6579;
  double t6582;
  double t6587;
  double t6588;
  double t6421;
  double t6462;
  double t6463;
  double t6639;
  double t6642;
  double t6654;
  double t6662;
  double t6664;
  double t6665;
  double t6470;
  double t6471;
  double t6476;
  double t6546;
  double t6548;
  double t6550;
  double t6733;
  double t6739;
  double t6745;
  double t6757;
  double t6760;
  double t6767;
  double t6684;
  double t6685;
  double t6696;
  double t6701;
  double t6703;
  double t6705;
  double t6796;
  double t6808;
  double t6814;
  double t6820;
  double t6829;
  double t6831;
  double t6834;
  double t6843;
  double t6656;
  double t6666;
  double t6667;
  double t6750;
  double t6771;
  double t6774;
  double t6783;
  double t6785;
  double t6787;
  double t6675;
  double t6676;
  double t6678;
  double t6882;
  double t6884;
  double t6887;
  double t6888;
  double t6907;
  double t6908;
  double t6911;
  double t6912;
  double t6934;
  double t6935;
  double t6936;
  double t6941;
  double t6945;
  double t6946;
  double t6956;
  double t6959;
  double t6960;
  double t6962;
  double t6975;
  double t6982;
  double t6987;
  double t6996;
  double t7030;
  double t7034;
  double t7036;
  double t7047;
  double t7051;
  double t7054;
  double t7062;
  double t7063;
  double t7069;
  double t7071;
  double t7084;
  double t7090;
  double t7094;
  double t7102;
  double t7154;
  double t7155;
  double t7157;
  double t7149;
  double t7158;
  double t7165;
  double t7172;
  double t7179;
  double t7212;
  double t7214;
  double t7215;
  double t7218;
  double t7219;
  double t7223;
  double t7264;
  double t7265;
  double t7266;
  double t7285;
  double t7286;
  double t7290;
  double t7297;
  double t7301;
  double t7311;
  double t7314;
  double t7315;
  double t7316;
  double t7317;
  double t7328;
  double t7192;
  double t7203;
  double t7204;
  double t7205;
  double t7208;
  double t7210;
  double t6726;
  double t6777;
  double t6789;
  double t6790;
  double t7353;
  double t7361;
  double t7364;
  double t7365;
  double t7370;
  double t7371;
  double t7372;
  double t7374;
  double t7375;
  double t7377;
  double t7300;
  double t7330;
  double t7331;
  double t6897;
  double t6913;
  double t6914;
  double t7335;
  double t7337;
  double t7338;
  double t6921;
  double t6925;
  double t6927;
  double t6933;
  double t6938;
  double t6948;
  double t6951;
  double t6967;
  double t7002;
  double t7003;
  double t7012;
  double t7013;
  double t7020;
  double t7420;
  double t7421;
  double t7424;
  double t7438;
  double t7440;
  double t7441;
  double t7443;
  double t7445;
  double t7495;
  double t7498;
  double t7499;
  double t7480;
  double t7483;
  double t7484;
  double t7541;
  double t7543;
  double t7547;
  double t7549;
  double t7558;
  double t7592;
  double t7586;
  double t7587;
  double t7589;
  double t7650;
  double t7634;
  double t7645;
  double t7647;
  double t7590;
  double t7595;
  double t7607;
  double t7608;
  double t7609;
  double t7612;
  double t7615;
  double t7623;
  double t7624;
  double t7649;
  double t7660;
  double t7667;
  double t7668;
  double t7669;
  double t7672;
  double t7673;
  double t7674;
  double t7677;
  double t7501;
  double t7503;
  double t7504;
  double t7505;
  double t7506;
  double t7507;
  double t7512;
  double t7513;
  double t7709;
  double t7710;
  double t7711;
  double t7730;
  double t7731;
  double t7735;
  double t7736;
  double t7737;
  double t7628;
  double t7680;
  double t7681;
  double t7685;
  double t7686;
  double t7689;
  double t7768;
  double t7769;
  double t7770;
  double t7781;
  double t7782;
  double t7787;
  double t7788;
  double t7791;
  double t7830;
  double t7835;
  double t7836;
  double t7820;
  double t7824;
  double t7827;
  double t7870;
  double t7872;
  double t7873;
  double t7860;
  double t7862;
  double t7863;
  double t7909;
  double t7910;
  double t7911;
  double t7905;
  double t7906;
  double t7907;
  double t7869;
  double t7875;
  double t7877;
  double t7878;
  double t7881;
  double t7882;
  double t7887;
  double t7893;
  double t7896;
  double t7897;
  double t7898;
  double t7901;
  double t7904;
  double t7908;
  double t7912;
  double t7913;
  double t7914;
  double t7915;
  double t7917;
  double t7919;
  double t7920;
  double t7923;
  double t7924;
  double t7925;
  double t7926;
  double t7939;
  double t7940;
  double t7942;
  double t7943;
  double t7946;
  double t7948;
  double t7949;
  double t7951;
  double t7818;
  double t7819;
  double t7828;
  double t7837;
  double t7839;
  double t7842;
  double t7844;
  double t7845;
  double t7846;
  double t7847;
  double t7849;
  double t7850;
  double t7854;
  double t7857;
  double t7900;
  double t7927;
  double t7929;
  double t7934;
  double t7935;
  double t7937;
  double t7981;
  double t7982;
  double t7983;
  double t7984;
  double t7986;
  double t7988;
  double t7989;
  double t7990;
  double t8017;
  double t8019;
  double t8021;
  double t8023;
  double t8025;
  double t8029;
  double t8030;
  double t8032;
  t18 = Cos(var1[18]);
  t167 = -1.*t18;
  t252 = 1. + t167;
  t884 = Sin(var1[18]);
  t1068 = Cos(var1[17]);
  t1040 = -0.366501*t884;
  t1055 = 0. + t1040;
  t876 = Sin(var1[17]);
  t1127 = 0.930418*t884;
  t1129 = 0. + t1127;
  t428 = 1.000000637725*t252;
  t487 = -1. + t428;
  t491 = Cos(var1[5]);
  t1275 = t1068*t1055;
  t1401 = -1.*t876*t1129;
  t1519 = t1275 + t1401;
  t1063 = t876*t1055;
  t1191 = t1068*t1129;
  t1194 = t1063 + t1191;
  t1585 = Sin(var1[5]);
  t329 = -1.000000637725*t252;
  t1818 = Cos(var1[4]);
  t2125 = Sin(var1[3]);
  t1687 = Sin(var1[4]);
  t2326 = Cos(var1[3]);
  t2325 = -1.*t491*t2125*t1687;
  t2400 = t2326*t1585;
  t2413 = t2325 + t2400;
  t2476 = -1.*t2326*t491;
  t2580 = -1.*t2125*t1687*t1585;
  t2892 = t2476 + t2580;
  t4252 = -0.134322983001*t252;
  t4401 = 1. + t4252;
  t4467 = -0.930418*t4401;
  t4484 = -0.12497652119782442*t252;
  t4600 = t4467 + t4484;
  t4110 = -0.8656776547239999*t252;
  t4121 = 1. + t4110;
  t4159 = -0.366501*t4121;
  t4183 = -0.3172717261340007*t252;
  t4217 = t4159 + t4183;
  t3649 = -0.930418*t1055;
  t3888 = -0.366501*t1129;
  t3914 = 0. + t3649 + t3888;
  t4880 = t1068*t4600;
  t4953 = -1.*t4217*t876;
  t4981 = 0. + t4880 + t4953;
  t4226 = t1068*t4217;
  t4611 = t4600*t876;
  t4653 = 0. + t4226 + t4611;
  t5755 = -0.366501*t4401;
  t5765 = 0.3172717261340007*t252;
  t5778 = t5755 + t5765;
  t5695 = 0.930418*t4121;
  t5701 = t5695 + t4484;
  t5661 = -0.366501*t1055;
  t5684 = 0.930418*t1129;
  t5691 = 0. + t5661 + t5684;
  t5810 = t1068*t5778;
  t5833 = -1.*t5701*t876;
  t5848 = 0. + t5810 + t5833;
  t5747 = t1068*t5701;
  t5789 = t5778*t876;
  t5793 = 0. + t5747 + t5789;
  t2441 = -1.*t876*t2413;
  t2900 = t1068*t2892;
  t2916 = t2441 + t2900;
  t3079 = t1068*t2413;
  t3196 = t876*t2892;
  t3217 = t3079 + t3196;
  t3466 = 1.000000637725*var2[18];
  t3925 = var2[5]*t3914;
  t3944 = 0.930418*t1055;
  t4004 = 0.366501*t1129;
  t4058 = 0. + t3944 + t4004;
  t4062 = var2[17]*t4058;
  t4842 = t491*t4653;
  t4982 = -1.*t4981*t1585;
  t4983 = 0. + t4842 + t4982;
  t5049 = var2[4]*t4983;
  t5086 = -1.*t3914*t1687;
  t5089 = t491*t4981;
  t5118 = t4653*t1585;
  t5155 = 0. + t5089 + t5118;
  t5170 = t1818*t5155;
  t5365 = 0. + t5086 + t5170;
  t5420 = var2[3]*t5365;
  t5435 = t3466 + t3925 + t4062 + t5049 + t5420;
  t5452 = 0.366501*t1055;
  t5580 = -0.930418*t1129;
  t5586 = 0. + t5452 + t5580;
  t5642 = var2[17]*t5586;
  t5694 = var2[5]*t5691;
  t5807 = t491*t5793;
  t5851 = -1.*t5848*t1585;
  t5885 = 0. + t5807 + t5851;
  t5889 = var2[4]*t5885;
  t5904 = -1.*t5691*t1687;
  t5950 = t491*t5848;
  t5955 = t5793*t1585;
  t5960 = 0. + t5950 + t5955;
  t5984 = t1818*t5960;
  t5986 = 0. + t5904 + t5984;
  t6006 = var2[3]*t5986;
  t6015 = 0. + t5642 + t5694 + t5889 + t6006;
  t6056 = -1.*t1818*t1055*t2125;
  t6088 = 0.340999127418*t252*t2916;
  t6093 = t4401*t3217;
  t6114 = t6056 + t6088 + t6093;
  t6158 = -1.*t1818*t1129*t2125;
  t6162 = t4121*t2916;
  t6168 = 0.340999127418*t252*t3217;
  t6181 = t6158 + t6162 + t6168;
  t335 = 1. + t329;
  t385 = var2[17]*t335;
  t489 = var2[5]*t487;
  t1213 = t491*t1194;
  t1660 = -1.*t1519*t1585;
  t1664 = t1213 + t1660;
  t1673 = var2[4]*t1664;
  t1699 = -1.*t487*t1687;
  t1867 = t491*t1519;
  t1877 = t1194*t1585;
  t1896 = t1867 + t1877;
  t1959 = t1818*t1896;
  t1989 = t1699 + t1959;
  t2004 = var2[3]*t1989;
  t2012 = 0. + t385 + t489 + t1673 + t2004;
  t2112 = 1. + t329;
  t2158 = -0.930418*t884;
  t2187 = 0. + t2158;
  t3017 = 0.366501*t884;
  t3053 = 0. + t3017;
  t6289 = t2326*t491*t1687;
  t6299 = t2125*t1585;
  t6300 = t6289 + t6299;
  t6339 = -1.*t491*t2125;
  t6347 = t2326*t1687*t1585;
  t6350 = t6339 + t6347;
  t5447 = 0.00077*t5435;
  t6031 = -0.00005*t6015;
  t6032 = t5447 + t6031;
  t6337 = -1.*t876*t6300;
  t6357 = t1068*t6350;
  t6362 = t6337 + t6357;
  t6384 = t1068*t6300;
  t6385 = t876*t6350;
  t6387 = t6384 + t6385;
  t6203 = -0.00005*t5435;
  t6206 = 0.00193*t6015;
  t6214 = t6203 + t6206;
  t6403 = t2326*t1818*t1055;
  t6411 = 0.340999127418*t252*t6362;
  t6417 = t4401*t6387;
  t6419 = t6403 + t6411 + t6417;
  t6436 = t2326*t1818*t1129;
  t6440 = t4121*t6362;
  t6446 = 0.340999127418*t252*t6387;
  t6448 = t6436 + t6440 + t6446;
  t6283 = -1.*t2112*t2326*t1818;
  t6365 = -1.*t2187*t6362;
  t6393 = -1.*t3053*t6387;
  t6397 = t6283 + t6365 + t6393;
  t6488 = -1.*t2326*t1818*t491*t876;
  t6500 = t1068*t2326*t1818*t1585;
  t6503 = t6488 + t6500;
  t6512 = t1068*t2326*t1818*t491;
  t6514 = t2326*t1818*t876*t1585;
  t6522 = t6512 + t6514;
  t6556 = -1.*t2326*t1055*t1687;
  t6563 = 0.340999127418*t252*t6503;
  t6566 = t4401*t6522;
  t6573 = t6556 + t6563 + t6566;
  t6579 = -1.*t2326*t1129*t1687;
  t6582 = t4121*t6503;
  t6587 = 0.340999127418*t252*t6522;
  t6588 = t6579 + t6582 + t6587;
  t6421 = -0.930418*t6419;
  t6462 = -0.366501*t6448;
  t6463 = t6421 + t6462;
  t6639 = -1.*t1818*t3914;
  t6642 = -1.*t1687*t5155;
  t6654 = t6639 + t6642;
  t6662 = -1.*t1818*t5691;
  t6664 = -1.*t1687*t5960;
  t6665 = t6662 + t6664;
  t6470 = -0.366501*t6419;
  t6471 = 0.930418*t6448;
  t6476 = t6470 + t6471;
  t6546 = -1.*t487*t1818;
  t6548 = -1.*t1687*t1896;
  t6550 = t6546 + t6548;
  t6733 = t491*t2125*t1687;
  t6739 = -1.*t2326*t1585;
  t6745 = t6733 + t6739;
  t6757 = t2326*t491;
  t6760 = t2125*t1687*t1585;
  t6767 = t6757 + t6760;
  t6684 = -1.*t1818*t491*t876*t2125;
  t6685 = t1068*t1818*t2125*t1585;
  t6696 = t6684 + t6685;
  t6701 = t1068*t1818*t491*t2125;
  t6703 = t1818*t876*t2125*t1585;
  t6705 = t6701 + t6703;
  t6796 = -1.*t1055*t2125*t1687;
  t6808 = 0.340999127418*t252*t6696;
  t6814 = t4401*t6705;
  t6820 = t6796 + t6808 + t6814;
  t6829 = -1.*t1129*t2125*t1687;
  t6831 = t4121*t6696;
  t6834 = 0.340999127418*t252*t6705;
  t6843 = t6829 + t6831 + t6834;
  t6656 = 0.00077*var2[3]*t6654;
  t6666 = -0.00005*var2[3]*t6665;
  t6667 = t6656 + t6666;
  t6750 = -1.*t876*t6745;
  t6771 = t1068*t6767;
  t6774 = t6750 + t6771;
  t6783 = t1068*t6745;
  t6785 = t876*t6767;
  t6787 = t6783 + t6785;
  t6675 = -0.00005*var2[3]*t6654;
  t6676 = 0.00193*var2[3]*t6665;
  t6678 = t6675 + t6676;
  t6882 = t1818*t1055*t2125;
  t6884 = 0.340999127418*t252*t6774;
  t6887 = t4401*t6787;
  t6888 = t6882 + t6884 + t6887;
  t6907 = t1818*t1129*t2125;
  t6908 = t4121*t6774;
  t6911 = 0.340999127418*t252*t6787;
  t6912 = t6907 + t6908 + t6911;
  t6934 = -1.*t1818*t491*t876;
  t6935 = t1068*t1818*t1585;
  t6936 = t6934 + t6935;
  t6941 = t1068*t1818*t491;
  t6945 = t1818*t876*t1585;
  t6946 = t6941 + t6945;
  t6956 = -1.*t1055*t1687;
  t6959 = 0.340999127418*t252*t6936;
  t6960 = t4401*t6946;
  t6962 = t6956 + t6959 + t6960;
  t6975 = -1.*t1129*t1687;
  t6982 = t4121*t6936;
  t6987 = 0.340999127418*t252*t6946;
  t6996 = t6975 + t6982 + t6987;
  t7030 = t491*t876*t1687;
  t7034 = -1.*t1068*t1687*t1585;
  t7036 = t7030 + t7034;
  t7047 = -1.*t1068*t491*t1687;
  t7051 = -1.*t876*t1687*t1585;
  t7054 = t7047 + t7051;
  t7062 = -1.*t1818*t1055;
  t7063 = 0.340999127418*t252*t7036;
  t7069 = t4401*t7054;
  t7071 = t7062 + t7063 + t7069;
  t7084 = -1.*t1818*t1129;
  t7090 = t4121*t7036;
  t7094 = 0.340999127418*t252*t7054;
  t7102 = t7084 + t7090 + t7094;
  t7154 = t491*t2125;
  t7155 = -1.*t2326*t1687*t1585;
  t7157 = t7154 + t7155;
  t7149 = t876*t6300;
  t7158 = t1068*t7157;
  t7165 = t7149 + t7158;
  t7172 = -1.*t876*t7157;
  t7179 = t6384 + t7172;
  t7212 = 0.340999127418*t252*t7165;
  t7214 = t4121*t7179;
  t7215 = t7212 + t7214;
  t7218 = t4401*t7165;
  t7219 = 0.340999127418*t252*t7179;
  t7223 = t7218 + t7219;
  t7264 = t4842 + t4982;
  t7265 = var2[3]*t1818*t7264;
  t7266 = -1.*t491*t4981;
  t7285 = -1.*t4653*t1585;
  t7286 = t7266 + t7285;
  t7290 = var2[4]*t7286;
  t7297 = t7265 + t7290;
  t7301 = t5807 + t5851;
  t7311 = var2[3]*t1818*t7301;
  t7314 = -1.*t491*t5848;
  t7315 = -1.*t5793*t1585;
  t7316 = t7314 + t7315;
  t7317 = var2[4]*t7316;
  t7328 = t7311 + t7317;
  t7192 = -1.*t491*t1519;
  t7203 = -1.*t1194*t1585;
  t7204 = t7192 + t7203;
  t7205 = var2[4]*t7204;
  t7208 = var2[3]*t1818*t1664;
  t7210 = t7205 + t7208;
  t6726 = -1.*t2112*t1818*t2125;
  t6777 = -1.*t2187*t6774;
  t6789 = -1.*t3053*t6787;
  t6790 = t6726 + t6777 + t6789;
  t7353 = t876*t6745;
  t7361 = t7353 + t2900;
  t7364 = -1.*t876*t2892;
  t7365 = t6783 + t7364;
  t7370 = 0.340999127418*t252*t7361;
  t7371 = t4121*t7365;
  t7372 = t7370 + t7371;
  t7374 = t4401*t7361;
  t7375 = 0.340999127418*t252*t7365;
  t7377 = t7374 + t7375;
  t7300 = 0.00077*t7297;
  t7330 = -0.00005*t7328;
  t7331 = t7300 + t7330;
  t6897 = -0.930418*t6888;
  t6913 = -0.366501*t6912;
  t6914 = t6897 + t6913;
  t7335 = -0.00005*t7297;
  t7337 = 0.00193*t7328;
  t7338 = t7335 + t7337;
  t6921 = -0.366501*t6888;
  t6925 = 0.930418*t6912;
  t6927 = t6921 + t6925;
  t6933 = t2112*t1687;
  t6938 = -1.*t2187*t6936;
  t6948 = -1.*t3053*t6946;
  t6951 = t6933 + t6938 + t6948;
  t6967 = -0.930418*t6962;
  t7002 = -0.366501*t6996;
  t7003 = t6967 + t7002;
  t7012 = -0.366501*t6962;
  t7013 = 0.930418*t6996;
  t7020 = t7012 + t7013;
  t7420 = t1818*t491*t876;
  t7421 = -1.*t1068*t1818*t1585;
  t7424 = t7420 + t7421;
  t7438 = 0.340999127418*t252*t7424;
  t7440 = t4121*t6946;
  t7441 = t7438 + t7440;
  t7443 = t4401*t7424;
  t7445 = t7443 + t6987;
  t7495 = -1.*t876*t1055;
  t7498 = -1.*t1068*t1129;
  t7499 = t7495 + t7498;
  t7480 = -1.*t1068*t6300;
  t7483 = -1.*t876*t6350;
  t7484 = t7480 + t7483;
  t7541 = t4121*t7484;
  t7543 = t6411 + t7541;
  t7547 = t4401*t6362;
  t7549 = 0.340999127418*t252*t7484;
  t7558 = t7547 + t7549;
  t7592 = t4880 + t4953;
  t7586 = -1.*t1068*t4217;
  t7587 = -1.*t4600*t876;
  t7589 = t7586 + t7587;
  t7650 = t5810 + t5833;
  t7634 = -1.*t1068*t5701;
  t7645 = -1.*t5778*t876;
  t7647 = t7634 + t7645;
  t7590 = t491*t7589;
  t7595 = t7592*t1585;
  t7607 = t7590 + t7595;
  t7608 = var2[3]*t1818*t7607;
  t7609 = t491*t7592;
  t7612 = -1.*t7589*t1585;
  t7615 = t7609 + t7612;
  t7623 = var2[4]*t7615;
  t7624 = t7608 + t7623;
  t7649 = t491*t7647;
  t7660 = t7650*t1585;
  t7667 = t7649 + t7660;
  t7668 = var2[3]*t1818*t7667;
  t7669 = t491*t7650;
  t7672 = -1.*t7647*t1585;
  t7673 = t7669 + t7672;
  t7674 = var2[4]*t7673;
  t7677 = t7668 + t7674;
  t7501 = -1.*t7499*t1585;
  t7503 = t1867 + t7501;
  t7504 = var2[4]*t7503;
  t7505 = t491*t7499;
  t7506 = t1519*t1585;
  t7507 = t7505 + t7506;
  t7512 = var2[3]*t1818*t7507;
  t7513 = t7504 + t7512;
  t7709 = -1.*t1068*t6745;
  t7710 = -1.*t876*t6767;
  t7711 = t7709 + t7710;
  t7730 = t4121*t7711;
  t7731 = t6884 + t7730;
  t7735 = t4401*t6774;
  t7736 = 0.340999127418*t252*t7711;
  t7737 = t7735 + t7736;
  t7628 = 0.00077*t7624;
  t7680 = -0.00005*t7677;
  t7681 = t7628 + t7680;
  t7685 = -0.00005*t7624;
  t7686 = 0.00193*t7677;
  t7689 = t7685 + t7686;
  t7768 = -1.*t1068*t1818*t491;
  t7769 = -1.*t1818*t876*t1585;
  t7770 = t7768 + t7769;
  t7781 = t4121*t7770;
  t7782 = t6959 + t7781;
  t7787 = t4401*t6936;
  t7788 = 0.340999127418*t252*t7770;
  t7791 = t7787 + t7788;
  t7830 = -0.366501*t1068*t18;
  t7835 = -0.930418*t18*t876;
  t7836 = t7830 + t7835;
  t7820 = 0.930418*t1068*t18;
  t7824 = -0.366501*t18*t876;
  t7827 = t7820 + t7824;
  t7870 = 1.3877787807814457e-17*t1068*t884;
  t7872 = -5.551115123125783e-17*t876*t884;
  t7873 = t7870 + t7872;
  t7860 = 5.551115123125783e-17*t1068*t884;
  t7862 = 1.3877787807814457e-17*t876*t884;
  t7863 = t7860 + t7862;
  t7909 = 0.3665012337268502*t1068*t884;
  t7910 = 0.930418593350819*t876*t884;
  t7911 = t7909 + t7910;
  t7905 = -0.930418593350819*t1068*t884;
  t7906 = 0.3665012337268502*t876*t884;
  t7907 = t7905 + t7906;
  t7869 = t491*t7863;
  t7875 = -1.*t7873*t1585;
  t7877 = t7869 + t7875;
  t7878 = var2[4]*t7877;
  t7881 = t491*t7873;
  t7882 = t7863*t1585;
  t7887 = t7881 + t7882;
  t7893 = t1818*t7887;
  t7896 = 0. + t7893;
  t7897 = var2[3]*t7896;
  t7898 = 0. + t7878 + t7897;
  t7901 = -1.000000637725*var2[17]*t18;
  t7904 = 1.000000637725*var2[5]*t18;
  t7908 = t491*t7907;
  t7912 = -1.*t7911*t1585;
  t7913 = t7908 + t7912;
  t7914 = var2[4]*t7913;
  t7915 = -1.000000637725*t18*t1687;
  t7917 = t491*t7911;
  t7919 = t7907*t1585;
  t7920 = t7917 + t7919;
  t7923 = t1818*t7920;
  t7924 = t7915 + t7923;
  t7925 = var2[3]*t7924;
  t7926 = t7901 + t7904 + t7914 + t7925;
  t7939 = -0.366501*t18*t2326*t1818;
  t7940 = 0.340999127418*t884*t6362;
  t7942 = -0.134322983001*t884*t6387;
  t7943 = t7939 + t7940 + t7942;
  t7946 = 0.930418*t18*t2326*t1818;
  t7948 = -0.8656776547239999*t884*t6362;
  t7949 = 0.340999127418*t884*t6387;
  t7951 = t7946 + t7948 + t7949;
  t7818 = -1.000000637725*var2[17]*t884;
  t7819 = 1.000000637725*var2[5]*t884;
  t7828 = t491*t7827;
  t7837 = -1.*t7836*t1585;
  t7839 = t7828 + t7837;
  t7842 = var2[4]*t7839;
  t7844 = -1.000000637725*t884*t1687;
  t7845 = t491*t7836;
  t7846 = t7827*t1585;
  t7847 = t7845 + t7846;
  t7849 = t1818*t7847;
  t7850 = t7844 + t7849;
  t7854 = var2[3]*t7850;
  t7857 = t7818 + t7819 + t7842 + t7854;
  t7900 = 0.00077*t7898;
  t7927 = -0.00005*t7926;
  t7929 = t7900 + t7927;
  t7934 = -0.00005*t7898;
  t7935 = 0.00193*t7926;
  t7937 = t7934 + t7935;
  t7981 = -0.366501*t18*t1818*t2125;
  t7982 = 0.340999127418*t884*t6774;
  t7983 = -0.134322983001*t884*t6787;
  t7984 = t7981 + t7982 + t7983;
  t7986 = 0.930418*t18*t1818*t2125;
  t7988 = -0.8656776547239999*t884*t6774;
  t7989 = 0.340999127418*t884*t6787;
  t7990 = t7986 + t7988 + t7989;
  t8017 = 0.366501*t18*t1687;
  t8019 = 0.340999127418*t884*t6936;
  t8021 = -0.134322983001*t884*t6946;
  t8023 = t8017 + t8019 + t8021;
  t8025 = -0.930418*t18*t1687;
  t8029 = -0.8656776547239999*t884*t6936;
  t8030 = 0.340999127418*t884*t6946;
  t8032 = t8025 + t8029 + t8030;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0.00163*t2012*(t1818*t2112*t2125 - 1.*t2187*t2916 - 1.*t3053*t3217) + t6032*(-0.930418*t6114 - 0.366501*t6181) + (-0.366501*t6114 + 0.930418*t6181)*t6214;
  p_output1[10]=0.00163*t2012*t6397 + t6032*t6463 + t6214*t6476;
  p_output1[11]=0;
  p_output1[12]=0.00163*t2012*(t1687*t2112*t2326 - 1.*t2187*t6503 - 1.*t3053*t6522) + t6032*(-0.930418*t6573 - 0.366501*t6588) + t6214*(-0.366501*t6573 + 0.930418*t6588) + t6463*t6667 + t6476*t6678 + 0.00163*t6397*t6550*var2[3];
  p_output1[13]=0.00163*t2012*(t1687*t2112*t2125 - 1.*t2187*t6696 - 1.*t3053*t6705) + t6032*(-0.930418*t6820 - 0.366501*t6843) + t6214*(-0.366501*t6820 + 0.930418*t6843) + t6667*t6914 + t6678*t6927 + 0.00163*t6550*t6790*var2[3];
  p_output1[14]=t6667*t7003 + t6678*t7020 + 0.00163*t2012*(t1818*t2112 - 1.*t2187*t7036 - 1.*t3053*t7054) + t6032*(-0.930418*t7071 - 0.366501*t7102) + t6214*(-0.366501*t7071 + 0.930418*t7102) + 0.00163*t6550*t6951*var2[3];
  p_output1[15]=0.00163*t2012*(-1.*t3053*t7165 - 1.*t2187*t7179) + 0.00163*t6397*t7210 + t6032*(-0.366501*t7215 - 0.930418*t7223) + t6214*(0.930418*t7215 - 0.366501*t7223) + t6463*t7331 + t6476*t7338;
  p_output1[16]=0.00163*t6790*t7210 + t6914*t7331 + t6927*t7338 + 0.00163*t2012*(-1.*t3053*t7361 - 1.*t2187*t7365) + t6032*(-0.366501*t7372 - 0.930418*t7377) + t6214*(0.930418*t7372 - 0.366501*t7377);
  p_output1[17]=0.00163*t6951*t7210 + t7003*t7331 + t7020*t7338 + 0.00163*t2012*(-1.*t2187*t6946 - 1.*t3053*t7424) + t6032*(-0.366501*t7441 - 0.930418*t7445) + t6214*(0.930418*t7441 - 0.366501*t7445);
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0.00163*t2012*(-1.*t3053*t6362 - 1.*t2187*t7484) + 0.00163*t6397*t7513 + t6032*(-0.366501*t7543 - 0.930418*t7558) + t6214*(0.930418*t7543 - 0.366501*t7558) + t6463*t7681 + t6476*t7689;
  p_output1[52]=0.00163*t6790*t7513 + t6914*t7681 + t6927*t7689 + 0.00163*t2012*(-1.*t3053*t6774 - 1.*t2187*t7711) + t6032*(-0.366501*t7731 - 0.930418*t7737) + t6214*(0.930418*t7731 - 0.366501*t7737);
  p_output1[53]=0.00163*t6951*t7513 + t7003*t7681 + t7020*t7689 + 0.00163*t2012*(-1.*t3053*t6936 - 1.*t2187*t7770) + t6032*(-0.366501*t7782 - 0.930418*t7791) + t6214*(0.930418*t7782 - 0.366501*t7791);
  p_output1[54]=0.00163*t6397*t7857 + t6463*t7929 + t6476*t7937 + t6032*(-0.930418*t7943 - 0.366501*t7951) + t6214*(-0.366501*t7943 + 0.930418*t7951) + 0.00163*t2012*(0.930418*t18*t6362 - 0.366501*t18*t6387 + 1.000000637725*t1818*t2326*t884);
  p_output1[55]=0.00163*t6790*t7857 + t6914*t7929 + t6927*t7937 + t6032*(-0.930418*t7984 - 0.366501*t7990) + t6214*(-0.366501*t7984 + 0.930418*t7990) + 0.00163*t2012*(0.930418*t18*t6774 - 0.366501*t18*t6787 + 1.000000637725*t1818*t2125*t884);
  p_output1[56]=0.00163*t2012*(0.930418*t18*t6936 - 0.366501*t18*t6946 + t7844) + 0.00163*t6951*t7857 + t7003*t7929 + t7020*t7937 + t6032*(-0.930418*t8023 - 0.366501*t8032) + t6214*(-0.366501*t8023 + 0.930418*t8032);
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jq_AMWorld_right_hip_yaw_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
