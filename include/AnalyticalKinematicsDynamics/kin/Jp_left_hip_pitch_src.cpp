/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:56:36 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_left_hip_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1384;
  double t1536;
  double t1538;
  double t1378;
  double t1607;
  double t2822;
  double t155;
  double t1863;
  double t1934;
  double t1957;
  double t1403;
  double t1833;
  double t1853;
  double t2184;
  double t2487;
  double t2569;
  double t2673;
  double t3509;
  double t3629;
  double t3645;
  double t3277;
  double t3319;
  double t3322;
  double t2466;
  double t3824;
  double t3828;
  double t4371;
  double t4415;
  double t4449;
  double t3419;
  double t3423;
  double t4046;
  double t4062;
  double t4071;
  double t4081;
  double t4277;
  double t4327;
  double t3072;
  double t3103;
  double t3124;
  double t3131;
  double t4506;
  double t4512;
  double t4572;
  double t5341;
  double t5372;
  double t5375;
  double t5383;
  double t5390;
  double t5394;
  double t4761;
  double t4764;
  double t4808;
  double t4828;
  double t4849;
  double t4862;
  double t5448;
  double t5587;
  double t5878;
  double t5885;
  double t6278;
  double t6298;
  double t216;
  double t1014;
  double t1037;
  double t1161;
  double t2258;
  double t2412;
  double t2692;
  double t3107;
  double t3147;
  double t3175;
  double t6664;
  double t6669;
  double t6680;
  double t6620;
  double t6632;
  double t6642;
  double t3326;
  double t3344;
  double t3428;
  double t3485;
  double t3673;
  double t3734;
  double t3840;
  double t3845;
  double t6793;
  double t6841;
  double t6844;
  double t6705;
  double t6748;
  double t6752;
  double t4368;
  double t4467;
  double t4623;
  double t4751;
  double t5173;
  double t5178;
  double t6868;
  double t6891;
  double t6914;
  double t6917;
  double t6998;
  double t7001;
  double t7007;
  double t7017;
  double t5447;
  double t5619;
  double t5920;
  double t5942;
  double t6099;
  double t6110;
  double t6929;
  double t6935;
  double t6938;
  double t6967;
  double t6238;
  double t6243;
  double t6398;
  double t6425;
  double t6476;
  double t6515;
  double t7186;
  double t7197;
  double t7199;
  double t7167;
  double t7170;
  double t7176;
  double t7206;
  double t7214;
  double t7215;
  double t7218;
  double t7291;
  double t7296;
  double t7300;
  double t7301;
  double t7234;
  double t7235;
  double t7239;
  double t7254;
  double t7396;
  double t7402;
  double t7407;
  double t7382;
  double t7383;
  double t7385;
  double t7415;
  double t7417;
  double t7419;
  double t7437;
  double t7464;
  double t7475;
  double t7476;
  double t7478;
  double t7448;
  double t7451;
  double t7453;
  double t7455;
  double t7552;
  double t7556;
  double t7560;
  double t7537;
  double t7539;
  double t7545;
  double t7567;
  double t7576;
  double t7577;
  double t7578;
  double t7593;
  double t7598;
  double t7602;
  double t7603;
  double t7580;
  double t7583;
  double t7585;
  double t7587;
  double t7665;
  double t7671;
  double t7677;
  double t7684;
  double t7686;
  double t7688;
  double t7700;
  double t7701;
  double t7705;
  double t7706;
  double t7707;
  double t7746;
  double t7749;
  double t7750;
  double t7721;
  double t7730;
  double t7731;
  double t7791;
  double t7797;
  double t7809;
  double t7812;
  double t7814;
  double t7839;
  double t7840;
  double t7841;
  double t7846;
  double t7847;
  double t7848;
  double t7860;
  double t7861;
  double t7862;
  double t7856;
  double t7857;
  double t7858;
  double t7894;
  double t7895;
  double t7896;
  double t7901;
  double t7903;
  double t7904;
  double t7908;
  double t7909;
  double t7910;
  double t7926;
  double t7934;
  double t7935;
  double t7913;
  double t7918;
  double t7919;
  double t7973;
  double t7974;
  double t7975;
  double t7980;
  double t7981;
  double t7992;
  double t7993;
  double t7994;
  double t7985;
  double t7986;
  double t7987;
  double t8029;
  double t8032;
  double t8033;
  double t8036;
  double t8037;
  double t8038;
  double t8040;
  double t8041;
  double t8042;
  double t8045;
  double t8046;
  double t8047;
  double t8055;
  double t8056;
  double t8057;
  double t8050;
  double t8051;
  double t8052;
  double t8084;
  double t8085;
  double t8086;
  double t8090;
  double t8091;
  double t8092;
  double t8095;
  double t8096;
  double t8097;
  double t8106;
  double t8107;
  double t8108;
  double t8101;
  double t8102;
  double t8104;
  double t8163;
  double t8164;
  double t8165;
  double t8167;
  double t8177;
  double t8178;
  double t8179;
  double t8180;
  double t8170;
  double t8171;
  double t8173;
  double t8175;
  double t8140;
  double t8144;
  double t8146;
  double t8148;
  double t8150;
  double t8152;
  double t8157;
  double t8158;
  double t8160;
  double t8213;
  double t8215;
  double t8224;
  double t8225;
  double t8226;
  double t8229;
  double t8239;
  double t8240;
  double t8241;
  double t8243;
  double t8233;
  double t8234;
  double t8236;
  double t8237;
  double t8277;
  double t8279;
  double t8280;
  double t8281;
  double t8290;
  double t8291;
  double t8294;
  double t8295;
  double t8284;
  double t8285;
  double t8286;
  double t8288;
  double t8317;
  double t8318;
  double t8321;
  double t8323;
  double t8324;
  double t8325;
  double t8327;
  double t8328;
  double t8329;
  double t8359;
  double t8360;
  double t8362;
  double t8373;
  double t8374;
  double t8375;
  double t8377;
  double t8364;
  double t8365;
  double t8366;
  double t8368;
  double t8408;
  double t8409;
  double t8413;
  double t8422;
  double t8423;
  double t8428;
  double t8415;
  double t8417;
  double t8419;
  double t8420;
  t1384 = Cos(var1[5]);
  t1536 = Sin(var1[3]);
  t1538 = Sin(var1[4]);
  t1378 = Cos(var1[3]);
  t1607 = Sin(var1[5]);
  t2822 = Sin(var1[7]);
  t155 = Cos(var1[6]);
  t1863 = -1.*t1384*t1536*t1538;
  t1934 = t1378*t1607;
  t1957 = t1863 + t1934;
  t1403 = -1.*t1378*t1384;
  t1833 = -1.*t1536*t1538*t1607;
  t1853 = t1403 + t1833;
  t2184 = Sin(var1[6]);
  t2487 = Cos(var1[7]);
  t2569 = -1.*t2487;
  t2673 = 1. + t2569;
  t3509 = t155*t1853;
  t3629 = -1.*t1957*t2184;
  t3645 = t3509 + t3629;
  t3277 = t155*t1957;
  t3319 = t1853*t2184;
  t3322 = t3277 + t3319;
  t2466 = Cos(var1[4]);
  t3824 = 0.930418*t2822;
  t3828 = 0. + t3824;
  t4371 = Cos(var1[8]);
  t4415 = -1.*t4371;
  t4449 = 1. + t4415;
  t3419 = 0.366501*t2822;
  t3423 = 0. + t3419;
  t4046 = -0.8656776547239999*t2673;
  t4062 = 1. + t4046;
  t4071 = t4062*t3645;
  t4081 = -0.340999127418*t2673*t3322;
  t4277 = -1.*t2466*t1536*t3828;
  t4327 = t4071 + t4081 + t4277;
  t3072 = -0.930418*t2822;
  t3103 = 0. + t3072;
  t3124 = -0.366501*t2822;
  t3131 = 0. + t3124;
  t4506 = Sin(var1[8]);
  t4512 = -0.366501*t4506;
  t4572 = 0. + t4512;
  t5341 = -1.000000637725*t2673;
  t5372 = 1. + t5341;
  t5375 = -1.*t2466*t5372*t1536;
  t5383 = t3645*t3103;
  t5390 = t3322*t3131;
  t5394 = t5375 + t5383 + t5390;
  t4761 = -0.340999127418*t2673*t3645;
  t4764 = -0.134322983001*t2673;
  t4808 = 1. + t4764;
  t4828 = t4808*t3322;
  t4849 = -1.*t2466*t1536*t3423;
  t4862 = t4761 + t4828 + t4849;
  t5448 = -0.930418*t4506;
  t5587 = 0. + t5448;
  t5878 = 0.366501*t4506;
  t5885 = 0. + t5878;
  t6278 = 0.930418*t4506;
  t6298 = 0. + t6278;
  t216 = -1.*t155;
  t1014 = 1. + t216;
  t1037 = 0.091*t1014;
  t1161 = 0. + t1037;
  t2258 = 0.091*t2184;
  t2412 = 0. + t2258;
  t2692 = -0.04500040093286238*t2673;
  t3107 = 0.07877663122399998*t3103;
  t3147 = 0.031030906668*t3131;
  t3175 = 0. + t2692 + t3107 + t3147;
  t6664 = t1378*t1384*t1538;
  t6669 = t1536*t1607;
  t6680 = t6664 + t6669;
  t6620 = -1.*t1384*t1536;
  t6632 = t1378*t1538*t1607;
  t6642 = t6620 + t6632;
  t3326 = -3.2909349868922137e-7*var1[7];
  t3344 = 0.03103092645718495*t2673;
  t3428 = -0.045000372235*t3423;
  t3485 = t3326 + t3344 + t3428;
  t3673 = 1.296332362046933e-7*var1[7];
  t3734 = 0.07877668146182712*t2673;
  t3840 = -0.045000372235*t3828;
  t3845 = t3673 + t3734 + t3840;
  t6793 = t155*t6642;
  t6841 = -1.*t6680*t2184;
  t6844 = t6793 + t6841;
  t6705 = t155*t6680;
  t6748 = t6642*t2184;
  t6752 = t6705 + t6748;
  t4368 = 3.2909349868922137e-7*var1[8];
  t4467 = 0.055653945343889656*t4449;
  t4623 = -0.045000372235*t4572;
  t4751 = t4368 + t4467 + t4623;
  t5173 = -0.134322983001*t4449;
  t5178 = 1. + t5173;
  t6868 = t4062*t6844;
  t6891 = -0.340999127418*t2673*t6752;
  t6914 = t1378*t2466*t3828;
  t6917 = t6868 + t6891 + t6914;
  t6998 = t1378*t2466*t5372;
  t7001 = t6844*t3103;
  t7007 = t6752*t3131;
  t7017 = t6998 + t7001 + t7007;
  t5447 = -0.04500040093286238*t4449;
  t5619 = -0.141285834136*t5587;
  t5920 = 0.055653909852*t5885;
  t5942 = 0. + t5447 + t5619 + t5920;
  t6099 = -1.000000637725*t4449;
  t6110 = 1. + t6099;
  t6929 = -0.340999127418*t2673*t6844;
  t6935 = t4808*t6752;
  t6938 = t1378*t2466*t3423;
  t6967 = t6929 + t6935 + t6938;
  t6238 = 1.296332362046933e-7*var1[8];
  t6243 = -0.14128592423750855*t4449;
  t6398 = -0.045000372235*t6298;
  t6425 = t6238 + t6243 + t6398;
  t6476 = -0.8656776547239999*t4449;
  t6515 = 1. + t6476;
  t7186 = t1378*t2466*t155*t1607;
  t7197 = -1.*t1378*t2466*t1384*t2184;
  t7199 = t7186 + t7197;
  t7167 = t1378*t2466*t1384*t155;
  t7170 = t1378*t2466*t1607*t2184;
  t7176 = t7167 + t7170;
  t7206 = t4062*t7199;
  t7214 = -0.340999127418*t2673*t7176;
  t7215 = -1.*t1378*t1538*t3828;
  t7218 = t7206 + t7214 + t7215;
  t7291 = -1.*t1378*t5372*t1538;
  t7296 = t7199*t3103;
  t7300 = t7176*t3131;
  t7301 = t7291 + t7296 + t7300;
  t7234 = -0.340999127418*t2673*t7199;
  t7235 = t4808*t7176;
  t7239 = -1.*t1378*t1538*t3423;
  t7254 = t7234 + t7235 + t7239;
  t7396 = t2466*t155*t1536*t1607;
  t7402 = -1.*t2466*t1384*t1536*t2184;
  t7407 = t7396 + t7402;
  t7382 = t2466*t1384*t155*t1536;
  t7383 = t2466*t1536*t1607*t2184;
  t7385 = t7382 + t7383;
  t7415 = t4062*t7407;
  t7417 = -0.340999127418*t2673*t7385;
  t7419 = -1.*t1536*t1538*t3828;
  t7437 = t7415 + t7417 + t7419;
  t7464 = -1.*t5372*t1536*t1538;
  t7475 = t7407*t3103;
  t7476 = t7385*t3131;
  t7478 = t7464 + t7475 + t7476;
  t7448 = -0.340999127418*t2673*t7407;
  t7451 = t4808*t7385;
  t7453 = -1.*t1536*t1538*t3423;
  t7455 = t7448 + t7451 + t7453;
  t7552 = -1.*t155*t1538*t1607;
  t7556 = t1384*t1538*t2184;
  t7560 = t7552 + t7556;
  t7537 = -1.*t1384*t155*t1538;
  t7539 = -1.*t1538*t1607*t2184;
  t7545 = t7537 + t7539;
  t7567 = t4062*t7560;
  t7576 = -0.340999127418*t2673*t7545;
  t7577 = -1.*t2466*t3828;
  t7578 = t7567 + t7576 + t7577;
  t7593 = -1.*t2466*t5372;
  t7598 = t7560*t3103;
  t7602 = t7545*t3131;
  t7603 = t7593 + t7598 + t7602;
  t7580 = -0.340999127418*t2673*t7560;
  t7583 = t4808*t7545;
  t7585 = -1.*t2466*t3423;
  t7587 = t7580 + t7583 + t7585;
  t7665 = t1384*t1536;
  t7671 = -1.*t1378*t1538*t1607;
  t7677 = t7665 + t7671;
  t7684 = t155*t7677;
  t7686 = t6680*t2184;
  t7688 = t7684 + t7686;
  t7700 = -1.*t7677*t2184;
  t7701 = t6705 + t7700;
  t7705 = -0.340999127418*t2673*t7688;
  t7706 = t4062*t7701;
  t7707 = t7705 + t7706;
  t7746 = t7701*t3103;
  t7749 = t7688*t3131;
  t7750 = t7746 + t7749;
  t7721 = t4808*t7688;
  t7730 = -0.340999127418*t2673*t7701;
  t7731 = t7721 + t7730;
  t7791 = t1384*t1536*t1538;
  t7797 = -1.*t1378*t1607;
  t7809 = t7791 + t7797;
  t7812 = t7809*t2184;
  t7814 = t3509 + t7812;
  t7839 = t155*t7809;
  t7840 = -1.*t1853*t2184;
  t7841 = t7839 + t7840;
  t7846 = -0.340999127418*t2673*t7814;
  t7847 = t4062*t7841;
  t7848 = t7846 + t7847;
  t7860 = t7841*t3103;
  t7861 = t7814*t3131;
  t7862 = t7860 + t7861;
  t7856 = t4808*t7814;
  t7857 = -0.340999127418*t2673*t7841;
  t7858 = t7856 + t7857;
  t7894 = -1.*t2466*t155*t1607;
  t7895 = t2466*t1384*t2184;
  t7896 = t7894 + t7895;
  t7901 = t2466*t1384*t155;
  t7903 = t2466*t1607*t2184;
  t7904 = t7901 + t7903;
  t7908 = -0.340999127418*t2673*t7896;
  t7909 = t4062*t7904;
  t7910 = t7908 + t7909;
  t7926 = t7904*t3103;
  t7934 = t7896*t3131;
  t7935 = t7926 + t7934;
  t7913 = t4808*t7896;
  t7918 = -0.340999127418*t2673*t7904;
  t7919 = t7913 + t7918;
  t7973 = -1.*t155*t6680;
  t7974 = -1.*t6642*t2184;
  t7975 = t7973 + t7974;
  t7980 = t4062*t7975;
  t7981 = t6929 + t7980;
  t7992 = t7975*t3103;
  t7993 = t6844*t3131;
  t7994 = t7992 + t7993;
  t7985 = t4808*t6844;
  t7986 = -0.340999127418*t2673*t7975;
  t7987 = t7985 + t7986;
  t8029 = t1378*t1384;
  t8032 = t1536*t1538*t1607;
  t8033 = t8029 + t8032;
  t8036 = t155*t8033;
  t8037 = -1.*t7809*t2184;
  t8038 = t8036 + t8037;
  t8040 = -1.*t155*t7809;
  t8041 = -1.*t8033*t2184;
  t8042 = t8040 + t8041;
  t8045 = -0.340999127418*t2673*t8038;
  t8046 = t4062*t8042;
  t8047 = t8045 + t8046;
  t8055 = t8042*t3103;
  t8056 = t8038*t3131;
  t8057 = t8055 + t8056;
  t8050 = t4808*t8038;
  t8051 = -0.340999127418*t2673*t8042;
  t8052 = t8050 + t8051;
  t8084 = t2466*t155*t1607;
  t8085 = -1.*t2466*t1384*t2184;
  t8086 = t8084 + t8085;
  t8090 = -1.*t2466*t1384*t155;
  t8091 = -1.*t2466*t1607*t2184;
  t8092 = t8090 + t8091;
  t8095 = -0.340999127418*t2673*t8086;
  t8096 = t4062*t8092;
  t8097 = t8095 + t8096;
  t8106 = t8092*t3103;
  t8107 = t8086*t3131;
  t8108 = t8106 + t8107;
  t8101 = t4808*t8086;
  t8102 = -0.340999127418*t2673*t8092;
  t8104 = t8101 + t8102;
  t8163 = 0.930418*t1378*t2466*t2487;
  t8164 = -0.8656776547239999*t6844*t2822;
  t8165 = -0.340999127418*t6752*t2822;
  t8167 = t8163 + t8164 + t8165;
  t8177 = -0.930418*t2487*t6844;
  t8178 = -0.366501*t2487*t6752;
  t8179 = -1.000000637725*t1378*t2466*t2822;
  t8180 = t8177 + t8178 + t8179;
  t8170 = 0.366501*t1378*t2466*t2487;
  t8171 = -0.340999127418*t6844*t2822;
  t8173 = -0.134322983001*t6752*t2822;
  t8175 = t8170 + t8171 + t8173;
  t8140 = -0.0846680539949003*t2487;
  t8144 = -0.04500040093286238*t2822;
  t8146 = t8140 + t8144;
  t8148 = -0.016492681424499736*t2487;
  t8150 = 0.03103092645718495*t2822;
  t8152 = -3.2909349868922137e-7 + t8148 + t8150;
  t8157 = -0.04186915633414423*t2487;
  t8158 = 0.07877668146182712*t2822;
  t8160 = 1.296332362046933e-7 + t8157 + t8158;
  t8213 = t8033*t2184;
  t8215 = t7839 + t8213;
  t8224 = 0.930418*t2466*t2487*t1536;
  t8225 = -0.8656776547239999*t8038*t2822;
  t8226 = -0.340999127418*t8215*t2822;
  t8229 = t8224 + t8225 + t8226;
  t8239 = -0.930418*t2487*t8038;
  t8240 = -0.366501*t2487*t8215;
  t8241 = -1.000000637725*t2466*t1536*t2822;
  t8243 = t8239 + t8240 + t8241;
  t8233 = 0.366501*t2466*t2487*t1536;
  t8234 = -0.340999127418*t8038*t2822;
  t8236 = -0.134322983001*t8215*t2822;
  t8237 = t8233 + t8234 + t8236;
  t8277 = -0.930418*t2487*t1538;
  t8279 = -0.8656776547239999*t8086*t2822;
  t8280 = -0.340999127418*t7904*t2822;
  t8281 = t8277 + t8279 + t8280;
  t8290 = -0.930418*t2487*t8086;
  t8291 = -0.366501*t2487*t7904;
  t8294 = 1.000000637725*t1538*t2822;
  t8295 = t8290 + t8291 + t8294;
  t8284 = -0.366501*t2487*t1538;
  t8285 = -0.340999127418*t8086*t2822;
  t8286 = -0.134322983001*t7904*t2822;
  t8288 = t8284 + t8285 + t8286;
  t8317 = -0.04186915633414423*t4371;
  t8318 = -0.14128592423750855*t4506;
  t8321 = 1.296332362046933e-7 + t8317 + t8318;
  t8323 = 0.15185209683981668*t4371;
  t8324 = -0.04500040093286238*t4506;
  t8325 = t8323 + t8324;
  t8327 = 0.016492681424499736*t4371;
  t8328 = 0.055653945343889656*t4506;
  t8329 = 3.2909349868922137e-7 + t8327 + t8328;
  t8359 = t4808*t8215;
  t8360 = t2466*t1536*t3423;
  t8362 = t8045 + t8359 + t8360;
  t8373 = t4062*t8038;
  t8374 = -0.340999127418*t2673*t8215;
  t8375 = t2466*t1536*t3828;
  t8377 = t8373 + t8374 + t8375;
  t8364 = t2466*t5372*t1536;
  t8365 = t8038*t3103;
  t8366 = t8215*t3131;
  t8368 = t8364 + t8365 + t8366;
  t8408 = t4808*t7904;
  t8409 = -1.*t1538*t3423;
  t8413 = t8095 + t8408 + t8409;
  t8422 = t4062*t8086;
  t8423 = -1.*t1538*t3828;
  t8428 = t8422 + t7918 + t8423;
  t8415 = -1.*t5372*t1538;
  t8417 = t8086*t3103;
  t8419 = t7904*t3131;
  t8420 = t8415 + t8417 + t8419;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t1161*t1853 + t1957*t2412 - 1.*t1536*t2466*t3175 + t3322*t3485 + t3645*t3845 + t4327*t4751 + 0.189863*(0.340999127418*t4449*t4862 + t4327*t5178 + t4572*t5394) + t5394*t5942 - 0.001824*(t4862*t5587 + t4327*t5885 + t5394*t6110) + t4862*t6425 - 0.134034*(0.340999127418*t4327*t4449 + t5394*t6298 + t4862*t6515);
  p_output1[10]=t1378*t2466*t3175 + t1161*t6642 + t2412*t6680 + t3485*t6752 + t3845*t6844 + t4751*t6917 + t6425*t6967 + t5942*t7017 + 0.189863*(t5178*t6917 + 0.340999127418*t4449*t6967 + t4572*t7017) - 0.001824*(t5885*t6917 + t5587*t6967 + t6110*t7017) - 0.134034*(0.340999127418*t4449*t6917 + t6515*t6967 + t6298*t7017);
  p_output1[11]=0;
  p_output1[12]=t1161*t1378*t1607*t2466 + t1378*t1384*t2412*t2466 - 1.*t1378*t1538*t3175 + t3485*t7176 + t3845*t7199 + t4751*t7218 + t6425*t7254 + t5942*t7301 + 0.189863*(t5178*t7218 + 0.340999127418*t4449*t7254 + t4572*t7301) - 0.001824*(t5885*t7218 + t5587*t7254 + t6110*t7301) - 0.134034*(0.340999127418*t4449*t7218 + t6515*t7254 + t6298*t7301);
  p_output1[13]=t1161*t1536*t1607*t2466 + t1384*t1536*t2412*t2466 - 1.*t1536*t1538*t3175 + t3485*t7385 + t3845*t7407 + t4751*t7437 + t6425*t7455 + t5942*t7478 + 0.189863*(t5178*t7437 + 0.340999127418*t4449*t7455 + t4572*t7478) - 0.001824*(t5885*t7437 + t5587*t7455 + t6110*t7478) - 0.134034*(0.340999127418*t4449*t7437 + t6515*t7455 + t6298*t7478);
  p_output1[14]=-1.*t1161*t1538*t1607 - 1.*t1384*t1538*t2412 - 1.*t2466*t3175 + t3485*t7545 + t3845*t7560 + t4751*t7578 + t6425*t7587 + t5942*t7603 + 0.189863*(t5178*t7578 + 0.340999127418*t4449*t7587 + t4572*t7603) - 0.001824*(t5885*t7578 + t5587*t7587 + t6110*t7603) - 0.134034*(0.340999127418*t4449*t7578 + t6515*t7587 + t6298*t7603);
  p_output1[15]=t1161*t6680 + t2412*t7677 + t3485*t7688 + t3845*t7701 + t4751*t7707 + t6425*t7731 + t5942*t7750 + 0.189863*(t5178*t7707 + 0.340999127418*t4449*t7731 + t4572*t7750) - 0.001824*(t5885*t7707 + t5587*t7731 + t6110*t7750) - 0.134034*(0.340999127418*t4449*t7707 + t6515*t7731 + t6298*t7750);
  p_output1[16]=t1853*t2412 + t1161*t7809 + t3485*t7814 + t3845*t7841 + t4751*t7848 + t6425*t7858 + t5942*t7862 + 0.189863*(t5178*t7848 + 0.340999127418*t4449*t7858 + t4572*t7862) - 0.001824*(t5885*t7848 + t5587*t7858 + t6110*t7862) - 0.134034*(0.340999127418*t4449*t7848 + t6515*t7858 + t6298*t7862);
  p_output1[17]=t1161*t1384*t2466 - 1.*t1607*t2412*t2466 + t3485*t7896 + t3845*t7904 + t4751*t7910 + t6425*t7919 + t5942*t7935 + 0.189863*(t5178*t7910 + 0.340999127418*t4449*t7919 + t4572*t7935) - 0.001824*(t5885*t7910 + t5587*t7919 + t6110*t7935) - 0.134034*(0.340999127418*t4449*t7910 + t6515*t7919 + t6298*t7935);
  p_output1[18]=0.091*t2184*t6642 + 0.091*t155*t6680 + t3485*t6844 + t3845*t7975 + t4751*t7981 + t6425*t7987 + t5942*t7994 + 0.189863*(t5178*t7981 + 0.340999127418*t4449*t7987 + t4572*t7994) - 0.001824*(t5885*t7981 + t5587*t7987 + t6110*t7994) - 0.134034*(0.340999127418*t4449*t7981 + t6515*t7987 + t6298*t7994);
  p_output1[19]=0.091*t155*t7809 + 0.091*t2184*t8033 + t3485*t8038 + t3845*t8042 + t4751*t8047 + t6425*t8052 + t5942*t8057 + 0.189863*(t5178*t8047 + 0.340999127418*t4449*t8052 + t4572*t8057) - 0.001824*(t5885*t8047 + t5587*t8052 + t6110*t8057) - 0.134034*(0.340999127418*t4449*t8047 + t6515*t8052 + t6298*t8057);
  p_output1[20]=0.091*t1384*t155*t2466 + 0.091*t1607*t2184*t2466 + t3485*t8086 + t3845*t8092 + t4751*t8097 + t6425*t8104 + t5942*t8108 + 0.189863*(t5178*t8097 + 0.340999127418*t4449*t8104 + t4572*t8108) - 0.001824*(t5885*t8097 + t5587*t8104 + t6110*t8108) - 0.134034*(0.340999127418*t4449*t8097 + t6515*t8104 + t6298*t8108);
  p_output1[21]=t1378*t2466*t8146 + t6752*t8152 + t6844*t8160 + t4751*t8167 + t6425*t8175 + t5942*t8180 + 0.189863*(t5178*t8167 + 0.340999127418*t4449*t8175 + t4572*t8180) - 0.001824*(t5885*t8167 + t5587*t8175 + t6110*t8180) - 0.134034*(0.340999127418*t4449*t8167 + t6515*t8175 + t6298*t8180);
  p_output1[22]=t1536*t2466*t8146 + t8038*t8160 + t8152*t8215 + t4751*t8229 + t6425*t8237 + t5942*t8243 + 0.189863*(t5178*t8229 + 0.340999127418*t4449*t8237 + t4572*t8243) - 0.001824*(t5885*t8229 + t5587*t8237 + t6110*t8243) - 0.134034*(0.340999127418*t4449*t8229 + t6515*t8237 + t6298*t8243);
  p_output1[23]=-1.*t1538*t8146 + t7904*t8152 + t8086*t8160 + t4751*t8281 + t6425*t8288 + t5942*t8295 + 0.189863*(t5178*t8281 + 0.340999127418*t4449*t8288 + t4572*t8295) - 0.001824*(t5885*t8281 + t5587*t8288 + t6110*t8295) - 0.134034*(0.340999127418*t4449*t8281 + t6515*t8288 + t6298*t8295);
  p_output1[24]=0.189863*(-0.134322983001*t4506*t6917 + 0.340999127418*t4506*t6967 - 0.366501*t4371*t7017) - 0.134034*(0.340999127418*t4506*t6917 - 0.8656776547239999*t4506*t6967 + 0.930418*t4371*t7017) - 0.001824*(0.366501*t4371*t6917 - 0.930418*t4371*t6967 - 1.000000637725*t4506*t7017) + t6967*t8321 + t7017*t8325 + t6917*t8329;
  p_output1[25]=t8321*t8362 + t8325*t8368 + t8329*t8377 - 0.001824*(-0.930418*t4371*t8362 - 1.000000637725*t4506*t8368 + 0.366501*t4371*t8377) + 0.189863*(0.340999127418*t4506*t8362 - 0.366501*t4371*t8368 - 0.134322983001*t4506*t8377) - 0.134034*(-0.8656776547239999*t4506*t8362 + 0.930418*t4371*t8368 + 0.340999127418*t4506*t8377);
  p_output1[26]=t8321*t8413 + t8325*t8420 + t8329*t8428 - 0.001824*(-0.930418*t4371*t8413 - 1.000000637725*t4506*t8420 + 0.366501*t4371*t8428) + 0.189863*(0.340999127418*t4506*t8413 - 0.366501*t4371*t8420 - 0.134322983001*t4506*t8428) - 0.134034*(-0.8656776547239999*t4506*t8413 + 0.930418*t4371*t8420 + 0.340999127418*t4506*t8428);
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jp_left_hip_pitch_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
