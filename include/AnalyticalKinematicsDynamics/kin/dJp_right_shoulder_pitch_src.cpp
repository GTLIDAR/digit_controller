/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:21:35 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dJp_right_shoulder_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t705;
  double t563;
  double t27;
  double t100;
  double t140;
  double t305;
  double t465;
  double t606;
  double t611;
  double t629;
  double t70;
  double t1438;
  double t2179;
  double t2181;
  double t1118;
  double t1942;
  double t1973;
  double t2070;
  double t2200;
  double t2264;
  double t2265;
  double t1716;
  double t1806;
  double t807;
  double t1010;
  double t1051;
  double t1053;
  double t688;
  double t1029;
  double t1055;
  double t1108;
  double t309;
  double t470;
  double t541;
  double t3528;
  double t1422;
  double t1428;
  double t1429;
  double t1598;
  double t1713;
  double t1818;
  double t1864;
  double t3649;
  double t3664;
  double t3669;
  double t3706;
  double t3708;
  double t3768;
  double t2128;
  double t2150;
  double t2183;
  double t2199;
  double t3889;
  double t4045;
  double t4100;
  double t2466;
  double t2469;
  double t4121;
  double t4142;
  double t4160;
  double t2714;
  double t2759;
  double t3037;
  double t3085;
  double t4952;
  double t4989;
  double t4993;
  double t5224;
  double t5228;
  double t5243;
  double t5354;
  double t5362;
  double t5424;
  double t5441;
  double t5448;
  double t5508;
  double t5838;
  double t5852;
  double t5853;
  double t5941;
  double t5943;
  double t5946;
  double t5949;
  double t5951;
  double t5957;
  double t5964;
  double t5971;
  double t6062;
  double t6065;
  double t6069;
  double t6078;
  double t6087;
  double t6107;
  double t6163;
  double t6167;
  double t6168;
  double t6176;
  double t6177;
  double t6185;
  double t6195;
  double t6196;
  double t4899;
  double t4937;
  double t4938;
  double t5140;
  double t5141;
  double t6260;
  double t6263;
  double t6264;
  double t6268;
  double t6271;
  double t6272;
  double t6274;
  double t6280;
  double t6284;
  double t5759;
  double t5770;
  double t5771;
  double t5784;
  double t5785;
  double t5789;
  double t5824;
  double t5831;
  double t5837;
  double t6333;
  double t6341;
  double t5604;
  double t6116;
  double t6475;
  double t6476;
  double t6483;
  double t6519;
  double t6521;
  double t6522;
  double t6140;
  double t587;
  double t1403;
  double t1534;
  double t2114;
  double t2303;
  double t2396;
  double t2402;
  double t2514;
  double t2551;
  double t2670;
  double t2711;
  double t2886;
  double t2895;
  double t3007;
  double t3009;
  double t3141;
  double t3183;
  double t3223;
  double t3231;
  double t3384;
  double t3399;
  double t3550;
  double t4269;
  double t6606;
  double t6607;
  double t6611;
  double t6613;
  double t6615;
  double t6618;
  double t4319;
  double t4769;
  double t6051;
  double t6056;
  double t6057;
  double t6076;
  double t6108;
  double t6114;
  double t6117;
  double t6124;
  double t6125;
  double t6128;
  double t6139;
  double t6144;
  double t6146;
  double t6147;
  double t6152;
  double t6153;
  double t6158;
  double t6159;
  double t6161;
  double t6652;
  double t6653;
  double t6654;
  double t6694;
  double t6696;
  double t6697;
  double t6416;
  double t6427;
  double t6752;
  double t6753;
  double t6757;
  double t6759;
  double t6761;
  double t6762;
  double t6433;
  double t6439;
  double t6803;
  double t6804;
  double t6806;
  double t6808;
  double t6812;
  double t6813;
  double t6858;
  double t6859;
  double t6860;
  double t6871;
  double t6873;
  double t6874;
  double t6907;
  double t6911;
  double t6913;
  double t6954;
  double t6956;
  double t6957;
  double t6516;
  double t6517;
  double t6531;
  double t6532;
  double t6533;
  double t6534;
  double t6536;
  double t6537;
  double t6538;
  double t6540;
  double t6543;
  double t6544;
  double t6547;
  double t6548;
  double t6551;
  double t6552;
  double t6989;
  double t6990;
  double t6232;
  double t3694;
  double t3844;
  double t4115;
  double t4223;
  double t4291;
  double t4306;
  double t4332;
  double t4449;
  double t4778;
  double t4820;
  double t5940;
  double t5948;
  double t5960;
  double t5972;
  double t5973;
  double t5982;
  double t5983;
  double t5985;
  double t6000;
  double t6001;
  double t6002;
  double t6003;
  double t6006;
  double t6021;
  double t6023;
  double t6036;
  double t6039;
  double t6688;
  double t6689;
  double t6692;
  double t6698;
  double t6700;
  double t6701;
  double t6702;
  double t6703;
  double t6704;
  double t6705;
  double t6707;
  double t6708;
  double t6711;
  double t6713;
  double t6714;
  double t6715;
  double t6170;
  double t6174;
  double t6178;
  double t6197;
  double t6199;
  double t6202;
  double t6206;
  double t6209;
  double t6227;
  double t6233;
  double t6235;
  double t6241;
  double t6242;
  double t6244;
  double t6249;
  double t6251;
  double t7075;
  double t7076;
  double t7080;
  double t7091;
  double t7092;
  double t7095;
  double t7098;
  double t7099;
  double t7129;
  double t7130;
  double t6419;
  double t6424;
  double t6425;
  double t6426;
  double t6429;
  double t6434;
  double t6435;
  double t6441;
  double t6442;
  double t6796;
  double t6802;
  double t6807;
  double t6818;
  double t6825;
  double t6828;
  double t6837;
  double t6838;
  double t6846;
  double t6847;
  double t7198;
  double t7199;
  double t7200;
  double t7206;
  double t7208;
  double t7209;
  double t6853;
  double t6856;
  double t6865;
  double t6880;
  double t6881;
  double t6882;
  double t6883;
  double t6884;
  double t6886;
  double t6887;
  double t6889;
  double t6890;
  double t6891;
  double t6892;
  double t6896;
  double t6898;
  double t6902;
  double t6457;
  double t6471;
  double t6473;
  double t6485;
  double t6487;
  double t6489;
  double t6491;
  double t6492;
  double t6494;
  double t6496;
  double t6498;
  double t6502;
  double t6503;
  double t6504;
  double t6510;
  double t6512;
  double t6982;
  double t6988;
  double t6992;
  double t6993;
  double t6994;
  double t6998;
  double t6999;
  double t7000;
  double t7001;
  double t7004;
  double t7005;
  double t7007;
  double t7008;
  double t7010;
  double t7013;
  double t7014;
  double t7290;
  double t7291;
  double t6299;
  double t6378;
  double t5095;
  double t5312;
  double t5434;
  double t5542;
  double t5612;
  double t5613;
  double t5615;
  double t5666;
  double t5672;
  double t5675;
  double t5682;
  double t5686;
  double t5690;
  double t5699;
  double t5714;
  double t5716;
  double t6650;
  double t6651;
  double t6655;
  double t6656;
  double t6659;
  double t6660;
  double t6662;
  double t6664;
  double t6665;
  double t6666;
  double t6667;
  double t6671;
  double t6673;
  double t6675;
  double t6682;
  double t6686;
  double t6257;
  double t6265;
  double t6273;
  double t6285;
  double t6287;
  double t6288;
  double t6292;
  double t6293;
  double t6296;
  double t6301;
  double t6308;
  double t6309;
  double t6311;
  double t6313;
  double t6314;
  double t6316;
  double t7086;
  double t7089;
  double t7097;
  double t7100;
  double t7104;
  double t7105;
  double t7109;
  double t7110;
  double t7112;
  double t7113;
  double t7114;
  double t7116;
  double t7119;
  double t7120;
  double t7121;
  double t7125;
  double t7126;
  double t7282;
  double t7284;
  double t7286;
  double t7363;
  double t7364;
  double t7370;
  double t7371;
  double t7396;
  double t7179;
  double t7181;
  double t7182;
  double t7183;
  double t7184;
  double t7187;
  double t7192;
  double t7194;
  double t7205;
  double t7210;
  double t7212;
  double t7216;
  double t7218;
  double t7219;
  double t7220;
  double t7224;
  double t7226;
  double t7231;
  double t7233;
  double t7236;
  double t7237;
  double t7238;
  double t7241;
  double t6948;
  double t6952;
  double t6953;
  double t6959;
  double t6960;
  double t6961;
  double t6962;
  double t6963;
  double t6964;
  double t6965;
  double t6967;
  double t6968;
  double t6969;
  double t6970;
  double t6974;
  double t6975;
  double t6976;
  double t6556;
  double t6562;
  double t6564;
  double t6565;
  double t6566;
  double t6569;
  double t6571;
  double t6573;
  double t6575;
  double t6576;
  double t6579;
  double t6580;
  double t6581;
  double t6584;
  double t6585;
  double t6586;
  double t6588;
  double t6590;
  double t6591;
  double t7017;
  double t7020;
  double t7021;
  double t7023;
  double t7024;
  double t7025;
  double t7030;
  double t7031;
  double t7032;
  double t7033;
  double t7035;
  double t7041;
  double t7042;
  double t7043;
  double t7044;
  double t7310;
  double t7312;
  double t7313;
  double t7315;
  double t7316;
  double t7319;
  double t7321;
  double t7326;
  double t7330;
  double t7331;
  double t7336;
  double t7337;
  double t7341;
  double t7343;
  double t5778;
  double t5793;
  double t5854;
  double t5856;
  double t5859;
  double t5866;
  double t5871;
  double t5878;
  double t5879;
  double t5884;
  double t5887;
  double t5889;
  double t5897;
  double t5899;
  double t5910;
  double t5914;
  double t5915;
  double t5917;
  double t5923;
  double t6717;
  double t6719;
  double t6720;
  double t6722;
  double t6723;
  double t6727;
  double t6728;
  double t6729;
  double t6731;
  double t6732;
  double t6733;
  double t6734;
  double t6735;
  double t6736;
  double t6740;
  double t6741;
  double t6743;
  double t6744;
  double t6745;
  double t6324;
  double t6330;
  double t6346;
  double t6351;
  double t6361;
  double t6363;
  double t6365;
  double t6368;
  double t6377;
  double t6383;
  double t6384;
  double t6386;
  double t6389;
  double t6392;
  double t6396;
  double t6402;
  double t6405;
  double t6407;
  double t7133;
  double t7135;
  double t7136;
  double t7139;
  double t7141;
  double t7143;
  double t7144;
  double t7147;
  double t7148;
  double t7150;
  double t7152;
  double t7153;
  double t7154;
  double t7155;
  double t7156;
  double t7397;
  double t7399;
  double t7400;
  double t7401;
  double t7402;
  double t7403;
  double t7405;
  double t7408;
  double t7409;
  double t7413;
  double t7414;
  double t7417;
  double t7419;
  double t7420;
  double t7423;
  double t7476;
  double t7479;
  double t7480;
  double t7483;
  double t7484;
  double t7485;
  double t7487;
  double t7488;
  double t7489;
  double t7527;
  double t7528;
  double t7432;
  double t7433;
  double t7435;
  double t7437;
  double t7438;
  double t7440;
  double t7441;
  double t7442;
  double t7443;
  double t7445;
  double t7447;
  double t7449;
  double t7450;
  double t7451;
  double t7453;
  double t7244;
  double t7247;
  double t7251;
  double t7255;
  double t7256;
  double t7258;
  double t7260;
  double t7262;
  double t7267;
  double t7268;
  double t7269;
  double t7270;
  double t7271;
  double t7274;
  double t7275;
  double t6904;
  double t6914;
  double t6916;
  double t6918;
  double t6919;
  double t6922;
  double t6926;
  double t6927;
  double t6928;
  double t6929;
  double t6931;
  double t6935;
  double t6936;
  double t6938;
  double t6940;
  double t6941;
  double t6943;
  double t6944;
  double t6946;
  t705 = Sin(var1[25]);
  t563 = Sin(var1[3]);
  t27 = Cos(var1[4]);
  t100 = Cos(var1[24]);
  t140 = -1.*t100;
  t305 = 1. + t140;
  t465 = Sin(var1[24]);
  t606 = Cos(var1[25]);
  t611 = -1.*t606;
  t629 = 1. + t611;
  t70 = Cos(var1[5]);
  t1438 = Sin(var1[5]);
  t2179 = -0.994522*t705;
  t2181 = 0. + t2179;
  t1118 = Sin(var1[4]);
  t1942 = t27*t70*t465*t563;
  t1973 = -1.*t100*t27*t563*t1438;
  t2070 = t1942 + t1973;
  t2200 = -1.*t100*t27*t70*t563;
  t2264 = -1.*t27*t465*t563*t1438;
  t2265 = t2200 + t2264;
  t1716 = -0.104528*t705;
  t1806 = 0. + t1716;
  t807 = 0.104528*t705;
  t1010 = 0. + t807;
  t1051 = 0.994522*t705;
  t1053 = 0. + t1051;
  t688 = -0.056500534356700764*t629;
  t1029 = 0.040271188976*t1010;
  t1055 = 0.38315650737400003*t1053;
  t1108 = 0. + t688 + t1029 + t1055;
  t309 = 0.4*t305;
  t470 = -0.12*t465;
  t541 = 0. + t309 + t470;
  t3528 = Cos(var1[3]);
  t1422 = -0.12*t305;
  t1428 = -0.4*t465;
  t1429 = 0. + t1422 + t1428;
  t1598 = 1.1345904784751044e-7*var1[25];
  t1713 = 0.04027119345689465*t629;
  t1818 = -0.05650052807*t1806;
  t1864 = t1598 + t1713 + t1818;
  t3649 = -1.*t3528*t70*t1118;
  t3664 = -1.*t563*t1438;
  t3669 = t3649 + t3664;
  t3706 = t70*t563;
  t3708 = -1.*t3528*t1118*t1438;
  t3768 = t3706 + t3708;
  t2128 = -1.1924972351948546e-8*var1[25];
  t2150 = 0.38315655000705834*t629;
  t2183 = -0.05650052807*t2181;
  t2199 = t2128 + t2150 + t2183;
  t3889 = -1.*t465*t3669;
  t4045 = t100*t3768;
  t4100 = t3889 + t4045;
  t2466 = -0.9890740084840001*t629;
  t2469 = 1. + t2466;
  t4121 = t100*t3669;
  t4142 = t465*t3768;
  t4160 = t4121 + t4142;
  t2714 = -0.010926102783999999*t629;
  t2759 = 1. + t2714;
  t3037 = -1.0000001112680001*t629;
  t3085 = 1. + t3037;
  t4952 = -1.*t70*t563*t1118;
  t4989 = t3528*t1438;
  t4993 = t4952 + t4989;
  t5224 = -1.*t3528*t70;
  t5228 = -1.*t563*t1118*t1438;
  t5243 = t5224 + t5228;
  t5354 = -1.*t465*t4993;
  t5362 = t100*t5243;
  t5424 = t5354 + t5362;
  t5441 = -1.*t100*t4993;
  t5448 = -1.*t465*t5243;
  t5508 = t5441 + t5448;
  t5838 = t100*t4993;
  t5852 = t465*t5243;
  t5853 = t5838 + t5852;
  t5941 = t3528*t70;
  t5943 = t563*t1118*t1438;
  t5946 = t5941 + t5943;
  t5949 = t465*t4993;
  t5951 = t100*t5946;
  t5957 = t5949 + t5951;
  t5964 = -1.*t465*t5946;
  t5971 = t5838 + t5964;
  t6062 = -1.*t3528*t27*t70*t465;
  t6065 = t100*t3528*t27*t1438;
  t6069 = t6062 + t6065;
  t6078 = t100*t3528*t27*t70;
  t6087 = t3528*t27*t465*t1438;
  t6107 = t6078 + t6087;
  t6163 = t3528*t70*t1118;
  t6167 = t563*t1438;
  t6168 = t6163 + t6167;
  t6176 = t465*t6168;
  t6177 = t6176 + t4045;
  t6185 = t100*t6168;
  t6195 = -1.*t465*t3768;
  t6196 = t6185 + t6195;
  t4899 = -0.12*t100;
  t4937 = 0.4*t465;
  t4938 = t4899 + t4937;
  t5140 = -0.4*t100;
  t5141 = t5140 + t470;
  t6260 = -1.*t70*t563;
  t6263 = t3528*t1118*t1438;
  t6264 = t6260 + t6263;
  t6268 = -1.*t465*t6168;
  t6271 = t100*t6264;
  t6272 = t6268 + t6271;
  t6274 = -1.*t100*t6168;
  t6280 = -1.*t465*t6264;
  t6284 = t6274 + t6280;
  t5759 = 0.3852670428678886*t606;
  t5770 = -0.056500534356700764*t705;
  t5771 = t5759 + t5770;
  t5784 = 0.0059058871981009595*t606;
  t5785 = 0.04027119345689465*t705;
  t5789 = 1.1345904784751044e-7 + t5784 + t5785;
  t5824 = 0.05619101817723254*t606;
  t5831 = 0.38315655000705834*t705;
  t5837 = -1.1924972351948546e-8 + t5824 + t5831;
  t6333 = t465*t6264;
  t6341 = t6185 + t6333;
  t5604 = -0.103955395616*t629*t5424;
  t6116 = -0.103955395616*t629*t6069;
  t6475 = -1.*t100*t3528*t27*t70;
  t6476 = -1.*t3528*t27*t465*t1438;
  t6483 = t6475 + t6476;
  t6519 = t3528*t27*t70*t465;
  t6521 = -1.*t100*t3528*t27*t1438;
  t6522 = t6519 + t6521;
  t6140 = -0.103955395616*t629*t6107;
  t587 = -1.*t27*t70*t541*t563;
  t1403 = t1108*t563*t1118;
  t1534 = -1.*t27*t1429*t563*t1438;
  t2114 = t1864*t2070;
  t2303 = t2199*t2265;
  t2396 = t2181*t563*t1118;
  t2402 = -0.103955395616*t629*t2070;
  t2514 = t2469*t2265;
  t2551 = t2396 + t2402 + t2514;
  t2670 = 0.362968*t2551;
  t2711 = t1806*t563*t1118;
  t2886 = t2759*t2070;
  t2895 = -0.103955395616*t629*t2265;
  t3007 = t2711 + t2886 + t2895;
  t3009 = -0.18652*t3007;
  t3141 = t3085*t563*t1118;
  t3183 = t1010*t2070;
  t3223 = t1053*t2265;
  t3231 = t3141 + t3183 + t3223;
  t3384 = -0.012773*t3231;
  t3399 = t587 + t1403 + t1534 + t2114 + t2303 + t2670 + t3009 + t3384;
  t3550 = -1.*t3528*t27*t1108;
  t4269 = -1.*t3528*t27*t2181;
  t6606 = t3528*t70*t465*t1118;
  t6607 = -1.*t100*t3528*t1118*t1438;
  t6611 = t6606 + t6607;
  t6613 = -1.*t100*t3528*t70*t1118;
  t6615 = -1.*t3528*t465*t1118*t1438;
  t6618 = t6613 + t6615;
  t4319 = -1.*t3528*t27*t1806;
  t4769 = -1.*t3085*t3528*t27;
  t6051 = t3528*t27*t70*t541;
  t6056 = -1.*t3528*t1108*t1118;
  t6057 = t3528*t27*t1429*t1438;
  t6076 = t1864*t6069;
  t6108 = t2199*t6107;
  t6114 = -1.*t3528*t2181*t1118;
  t6117 = t2469*t6107;
  t6124 = t6114 + t6116 + t6117;
  t6125 = 0.362968*t6124;
  t6128 = -1.*t3528*t1806*t1118;
  t6139 = t2759*t6069;
  t6144 = t6128 + t6139 + t6140;
  t6146 = -0.18652*t6144;
  t6147 = -1.*t3085*t3528*t1118;
  t6152 = t1010*t6069;
  t6153 = t1053*t6107;
  t6158 = t6147 + t6152 + t6153;
  t6159 = -0.012773*t6158;
  t6161 = t6051 + t6056 + t6057 + t6076 + t6108 + t6125 + t6146 + t6159;
  t6652 = -1.*t27*t70*t465*t563;
  t6653 = t100*t27*t563*t1438;
  t6654 = t6652 + t6653;
  t6694 = t100*t27*t70*t563;
  t6696 = t27*t465*t563*t1438;
  t6697 = t6694 + t6696;
  t6416 = -1.*t27*t1108*t563;
  t6427 = -1.*t27*t2181*t563;
  t6752 = t70*t465*t563*t1118;
  t6753 = -1.*t100*t563*t1118*t1438;
  t6757 = t6752 + t6753;
  t6759 = -1.*t100*t70*t563*t1118;
  t6761 = -1.*t465*t563*t1118*t1438;
  t6762 = t6759 + t6761;
  t6433 = -1.*t27*t1806*t563;
  t6439 = -1.*t3085*t27*t563;
  t6803 = t27*t70*t465;
  t6804 = -1.*t100*t27*t1438;
  t6806 = t6803 + t6804;
  t6808 = -1.*t100*t27*t70;
  t6812 = -1.*t27*t465*t1438;
  t6813 = t6808 + t6812;
  t6858 = -1.*t70*t465*t1118;
  t6859 = t100*t1118*t1438;
  t6860 = t6858 + t6859;
  t6871 = -1.*t100*t70*t1118;
  t6873 = -1.*t465*t1118*t1438;
  t6874 = t6871 + t6873;
  t6907 = t70*t465*t1118;
  t6911 = -1.*t100*t1118*t1438;
  t6913 = t6907 + t6911;
  t6954 = t100*t70*t1118;
  t6956 = t465*t1118*t1438;
  t6957 = t6954 + t6956;
  t6516 = t3528*t27*t70*t1429;
  t6517 = -1.*t3528*t27*t541*t1438;
  t6531 = t2199*t6522;
  t6532 = t1864*t6107;
  t6533 = -0.103955395616*t629*t6522;
  t6534 = t2759*t6107;
  t6536 = t6533 + t6534;
  t6537 = -0.18652*t6536;
  t6538 = t2469*t6522;
  t6540 = t6538 + t6140;
  t6543 = 0.362968*t6540;
  t6544 = t1053*t6522;
  t6547 = t1010*t6107;
  t6548 = t6544 + t6547;
  t6551 = -0.012773*t6548;
  t6552 = t6516 + t6517 + t6531 + t6532 + t6537 + t6543 + t6551;
  t6989 = -1.*t100*t3768;
  t6990 = t6268 + t6989;
  t6232 = -0.103955395616*t629*t6196;
  t3694 = t541*t3669;
  t3844 = t1429*t3768;
  t4115 = t1864*t4100;
  t4223 = t2199*t4160;
  t4291 = -0.103955395616*t629*t4100;
  t4306 = t2469*t4160;
  t4332 = t2759*t4100;
  t4449 = -0.103955395616*t629*t4160;
  t4778 = t1010*t4100;
  t4820 = t1053*t4160;
  t5940 = t1429*t4993;
  t5948 = t541*t5946;
  t5960 = t2199*t5957;
  t5972 = t1864*t5971;
  t5973 = -0.103955395616*t629*t5957;
  t5982 = t2759*t5971;
  t5983 = t5973 + t5982;
  t5985 = -0.18652*t5983;
  t6000 = t2469*t5957;
  t6001 = -0.103955395616*t629*t5971;
  t6002 = t6000 + t6001;
  t6003 = 0.362968*t6002;
  t6006 = t1053*t5957;
  t6021 = t1010*t5971;
  t6023 = t6006 + t6021;
  t6036 = -0.012773*t6023;
  t6039 = t5940 + t5948 + t5960 + t5972 + t5985 + t6003 + t6036;
  t6688 = t27*t70*t1429*t563;
  t6689 = -1.*t27*t541*t563*t1438;
  t6692 = t2199*t2070;
  t6698 = t1864*t6697;
  t6700 = t2759*t6697;
  t6701 = t2402 + t6700;
  t6702 = -0.18652*t6701;
  t6703 = t2469*t2070;
  t6704 = -0.103955395616*t629*t6697;
  t6705 = t6703 + t6704;
  t6707 = 0.362968*t6705;
  t6708 = t1053*t2070;
  t6711 = t1010*t6697;
  t6713 = t6708 + t6711;
  t6714 = -0.012773*t6713;
  t6715 = t6688 + t6689 + t6692 + t6698 + t6702 + t6707 + t6714;
  t6170 = t1429*t6168;
  t6174 = t541*t3768;
  t6178 = t2199*t6177;
  t6197 = t1864*t6196;
  t6199 = -0.103955395616*t629*t6177;
  t6202 = t2759*t6196;
  t6206 = t6199 + t6202;
  t6209 = -0.18652*t6206;
  t6227 = t2469*t6177;
  t6233 = t6227 + t6232;
  t6235 = 0.362968*t6233;
  t6241 = t1053*t6177;
  t6242 = t1010*t6196;
  t6244 = t6241 + t6242;
  t6249 = -0.012773*t6244;
  t6251 = t6170 + t6174 + t6178 + t6197 + t6209 + t6235 + t6249;
  t7075 = t70*t563*t1118;
  t7076 = -1.*t3528*t1438;
  t7080 = t7075 + t7076;
  t7091 = -1.*t465*t7080;
  t7092 = -1.*t100*t5243;
  t7095 = t7091 + t7092;
  t7098 = t100*t7080;
  t7099 = t7098 + t5448;
  t7129 = t465*t7080;
  t7130 = t7129 + t5362;
  t6419 = t541*t4993;
  t6424 = t1429*t5243;
  t6425 = t1864*t5424;
  t6426 = t2199*t5853;
  t6429 = t2469*t5853;
  t6434 = t2759*t5424;
  t6435 = -0.103955395616*t629*t5853;
  t6441 = t1010*t5424;
  t6442 = t1053*t5853;
  t6796 = -1.*t27*t70*t541;
  t6802 = -1.*t27*t1429*t1438;
  t6807 = t1864*t6806;
  t6818 = t2199*t6813;
  t6825 = -0.103955395616*t629*t6806;
  t6828 = t2469*t6813;
  t6837 = t2759*t6806;
  t6838 = -0.103955395616*t629*t6813;
  t6846 = t1010*t6806;
  t6847 = t1053*t6813;
  t7198 = -1.*t27*t70*t465;
  t7199 = t100*t27*t1438;
  t7200 = t7198 + t7199;
  t7206 = t100*t27*t70;
  t7208 = t27*t465*t1438;
  t7209 = t7206 + t7208;
  t6853 = -1.*t70*t1429*t1118;
  t6856 = t541*t1118*t1438;
  t6865 = t2199*t6860;
  t6880 = t1864*t6874;
  t6881 = -0.103955395616*t629*t6860;
  t6882 = t2759*t6874;
  t6883 = t6881 + t6882;
  t6884 = -0.18652*t6883;
  t6886 = t2469*t6860;
  t6887 = -0.103955395616*t629*t6874;
  t6889 = t6886 + t6887;
  t6890 = 0.362968*t6889;
  t6891 = t1053*t6860;
  t6892 = t1010*t6874;
  t6896 = t6891 + t6892;
  t6898 = -0.012773*t6896;
  t6902 = t6853 + t6856 + t6865 + t6880 + t6884 + t6890 + t6898;
  t6457 = t3528*t27*t70*t4938;
  t6471 = t3528*t27*t5141*t1438;
  t6473 = t2199*t6069;
  t6485 = t1864*t6483;
  t6487 = t2759*t6483;
  t6489 = t6116 + t6487;
  t6491 = -0.18652*t6489;
  t6492 = t2469*t6069;
  t6494 = -0.103955395616*t629*t6483;
  t6496 = t6492 + t6494;
  t6498 = 0.362968*t6496;
  t6502 = t1053*t6069;
  t6503 = t1010*t6483;
  t6504 = t6502 + t6503;
  t6510 = -0.012773*t6504;
  t6512 = t6457 + t6471 + t6473 + t6485 + t6491 + t6498 + t6510;
  t6982 = t5141*t6168;
  t6988 = t4938*t3768;
  t6992 = t1864*t6990;
  t6993 = t2199*t6196;
  t6994 = -0.103955395616*t629*t6990;
  t6998 = t2469*t6196;
  t6999 = t6994 + t6998;
  t7000 = 0.362968*t6999;
  t7001 = t2759*t6990;
  t7004 = t7001 + t6232;
  t7005 = -0.18652*t7004;
  t7007 = t1010*t6990;
  t7008 = t1053*t6196;
  t7010 = t7007 + t7008;
  t7013 = -0.012773*t7010;
  t7014 = t6982 + t6988 + t6992 + t6993 + t7000 + t7005 + t7013;
  t7290 = -1.*t100*t6264;
  t7291 = t6176 + t7290;
  t6299 = -0.103955395616*t629*t6284;
  t6378 = -0.103955395616*t705*t6272;
  t5095 = t4938*t4993;
  t5312 = t5141*t5243;
  t5434 = t2199*t5424;
  t5542 = t1864*t5508;
  t5612 = t2759*t5508;
  t5613 = t5604 + t5612;
  t5615 = -0.18652*t5613;
  t5666 = t2469*t5424;
  t5672 = -0.103955395616*t629*t5508;
  t5675 = t5666 + t5672;
  t5682 = 0.362968*t5675;
  t5686 = t1053*t5424;
  t5690 = t1010*t5508;
  t5699 = t5686 + t5690;
  t5714 = -0.012773*t5699;
  t5716 = t5095 + t5312 + t5434 + t5542 + t5615 + t5682 + t5714;
  t6650 = t27*t70*t4938*t563;
  t6651 = t27*t5141*t563*t1438;
  t6655 = t2199*t6654;
  t6656 = t1864*t2265;
  t6659 = -0.103955395616*t629*t6654;
  t6660 = t2759*t2265;
  t6662 = t6659 + t6660;
  t6664 = -0.18652*t6662;
  t6665 = t2469*t6654;
  t6666 = t6665 + t2895;
  t6667 = 0.362968*t6666;
  t6671 = t1053*t6654;
  t6673 = t1010*t2265;
  t6675 = t6671 + t6673;
  t6682 = -0.012773*t6675;
  t6686 = t6650 + t6651 + t6655 + t6656 + t6664 + t6667 + t6682;
  t6257 = t4938*t6168;
  t6265 = t5141*t6264;
  t6273 = t2199*t6272;
  t6285 = t1864*t6284;
  t6287 = -0.103955395616*t629*t6272;
  t6288 = t2759*t6284;
  t6292 = t6287 + t6288;
  t6293 = -0.18652*t6292;
  t6296 = t2469*t6272;
  t6301 = t6296 + t6299;
  t6308 = 0.362968*t6301;
  t6309 = t1053*t6272;
  t6311 = t1010*t6284;
  t6313 = t6309 + t6311;
  t6314 = -0.012773*t6313;
  t6316 = t6257 + t6265 + t6273 + t6285 + t6293 + t6308 + t6314;
  t7086 = t5141*t7080;
  t7089 = t4938*t5243;
  t7097 = t1864*t7095;
  t7100 = t2199*t7099;
  t7104 = -0.103955395616*t629*t7095;
  t7105 = t2469*t7099;
  t7109 = t7104 + t7105;
  t7110 = 0.362968*t7109;
  t7112 = t2759*t7095;
  t7113 = -0.103955395616*t629*t7099;
  t7114 = t7112 + t7113;
  t7116 = -0.18652*t7114;
  t7119 = t1010*t7095;
  t7120 = t1053*t7099;
  t7121 = t7119 + t7120;
  t7125 = -0.012773*t7121;
  t7126 = t7086 + t7089 + t7097 + t7100 + t7110 + t7116 + t7125;
  t7282 = 0.4*t100;
  t7284 = 0.12*t465;
  t7286 = t7282 + t7284;
  t7363 = -1.*t100*t5946;
  t7364 = t7129 + t7363;
  t7370 = -1.*t100*t7080;
  t7371 = t7370 + t5964;
  t7396 = t7091 + t5951;
  t7179 = t6825 + t6828;
  t7181 = 0.362968*t7179;
  t7182 = t6837 + t6838;
  t7183 = -0.18652*t7182;
  t7184 = t6846 + t6847;
  t7187 = -0.012773*t7184;
  t7192 = t27*t70*t5141;
  t7194 = -1.*t27*t4938*t1438;
  t7205 = t1864*t7200;
  t7210 = t2199*t7209;
  t7212 = -0.103955395616*t629*t7200;
  t7216 = t2469*t7209;
  t7218 = t7212 + t7216;
  t7219 = 0.362968*t7218;
  t7220 = t2759*t7200;
  t7224 = -0.103955395616*t629*t7209;
  t7226 = t7220 + t7224;
  t7231 = -0.18652*t7226;
  t7233 = t1010*t7200;
  t7236 = t1053*t7209;
  t7237 = t7233 + t7236;
  t7238 = -0.012773*t7237;
  t7241 = t7192 + t7194 + t7205 + t7210 + t7219 + t7231 + t7238;
  t6948 = -1.*t70*t4938*t1118;
  t6952 = -1.*t5141*t1118*t1438;
  t6953 = t2199*t6913;
  t6959 = t1864*t6957;
  t6960 = -0.103955395616*t629*t6913;
  t6961 = t2759*t6957;
  t6962 = t6960 + t6961;
  t6963 = -0.18652*t6962;
  t6964 = t2469*t6913;
  t6965 = -0.103955395616*t629*t6957;
  t6967 = t6964 + t6965;
  t6968 = 0.362968*t6967;
  t6969 = t1053*t6913;
  t6970 = t1010*t6957;
  t6974 = t6969 + t6970;
  t6975 = -0.012773*t6974;
  t6976 = t6948 + t6952 + t6953 + t6959 + t6963 + t6968 + t6975;
  t6556 = -1.*t3528*t5771*t1118;
  t6562 = t5789*t6069;
  t6564 = t5837*t6107;
  t6565 = 1.0000001112680001*t3528*t705*t1118;
  t6566 = 0.104528*t606*t6069;
  t6569 = 0.994522*t606*t6107;
  t6571 = t6565 + t6566 + t6569;
  t6573 = -0.012773*t6571;
  t6575 = 0.994522*t606*t3528*t1118;
  t6576 = -0.103955395616*t705*t6069;
  t6579 = -0.9890740084840001*t705*t6107;
  t6580 = t6575 + t6576 + t6579;
  t6581 = 0.362968*t6580;
  t6584 = 0.104528*t606*t3528*t1118;
  t6585 = -0.010926102783999999*t705*t6069;
  t6586 = -0.103955395616*t705*t6107;
  t6588 = t6584 + t6585 + t6586;
  t6590 = -0.18652*t6588;
  t6591 = t6556 + t6562 + t6564 + t6573 + t6581 + t6590;
  t7017 = t5837*t6177;
  t7020 = t5789*t6196;
  t7021 = 0.994522*t606*t6177;
  t7023 = 0.104528*t606*t6196;
  t7024 = t7021 + t7023;
  t7025 = -0.012773*t7024;
  t7030 = -0.9890740084840001*t705*t6177;
  t7031 = -0.103955395616*t705*t6196;
  t7032 = t7030 + t7031;
  t7033 = 0.362968*t7032;
  t7035 = -0.103955395616*t705*t6177;
  t7041 = -0.010926102783999999*t705*t6196;
  t7042 = t7035 + t7041;
  t7043 = -0.18652*t7042;
  t7044 = t7017 + t7020 + t7025 + t7033 + t7043;
  t7310 = t5837*t6272;
  t7312 = t5789*t6284;
  t7313 = 0.994522*t606*t6272;
  t7315 = 0.104528*t606*t6284;
  t7316 = t7313 + t7315;
  t7319 = -0.012773*t7316;
  t7321 = -0.9890740084840001*t705*t6272;
  t7326 = -0.103955395616*t705*t6284;
  t7330 = t7321 + t7326;
  t7331 = 0.362968*t7330;
  t7336 = -0.010926102783999999*t705*t6284;
  t7337 = t6378 + t7336;
  t7341 = -0.18652*t7337;
  t7343 = t7310 + t7312 + t7319 + t7331 + t7341;
  t5778 = -1.*t27*t5771*t563;
  t5793 = t5789*t5424;
  t5854 = t5837*t5853;
  t5856 = 1.0000001112680001*t27*t705*t563;
  t5859 = 0.104528*t606*t5424;
  t5866 = 0.994522*t606*t5853;
  t5871 = t5856 + t5859 + t5866;
  t5878 = -0.012773*t5871;
  t5879 = 0.994522*t606*t27*t563;
  t5884 = -0.103955395616*t705*t5424;
  t5887 = -0.9890740084840001*t705*t5853;
  t5889 = t5879 + t5884 + t5887;
  t5897 = 0.362968*t5889;
  t5899 = 0.104528*t606*t27*t563;
  t5910 = -0.010926102783999999*t705*t5424;
  t5914 = -0.103955395616*t705*t5853;
  t5915 = t5899 + t5910 + t5914;
  t5917 = -0.18652*t5915;
  t5923 = t5778 + t5793 + t5854 + t5878 + t5897 + t5917;
  t6717 = -1.*t5771*t563*t1118;
  t6719 = t5789*t6654;
  t6720 = t5837*t6697;
  t6722 = 1.0000001112680001*t705*t563*t1118;
  t6723 = 0.104528*t606*t6654;
  t6727 = 0.994522*t606*t6697;
  t6728 = t6722 + t6723 + t6727;
  t6729 = -0.012773*t6728;
  t6731 = 0.994522*t606*t563*t1118;
  t6732 = -0.103955395616*t705*t6654;
  t6733 = -0.9890740084840001*t705*t6697;
  t6734 = t6731 + t6732 + t6733;
  t6735 = 0.362968*t6734;
  t6736 = 0.104528*t606*t563*t1118;
  t6740 = -0.010926102783999999*t705*t6654;
  t6741 = -0.103955395616*t705*t6697;
  t6743 = t6736 + t6740 + t6741;
  t6744 = -0.18652*t6743;
  t6745 = t6717 + t6719 + t6720 + t6729 + t6735 + t6744;
  t6324 = t3528*t27*t5771;
  t6330 = t5789*t6272;
  t6346 = t5837*t6341;
  t6351 = -1.0000001112680001*t3528*t27*t705;
  t6361 = 0.104528*t606*t6272;
  t6363 = 0.994522*t606*t6341;
  t6365 = t6351 + t6361 + t6363;
  t6368 = -0.012773*t6365;
  t6377 = -0.994522*t606*t3528*t27;
  t6383 = -0.9890740084840001*t705*t6341;
  t6384 = t6377 + t6378 + t6383;
  t6386 = 0.362968*t6384;
  t6389 = -0.104528*t606*t3528*t27;
  t6392 = -0.010926102783999999*t705*t6272;
  t6396 = -0.103955395616*t705*t6341;
  t6402 = t6389 + t6392 + t6396;
  t6405 = -0.18652*t6402;
  t6407 = t6324 + t6330 + t6346 + t6368 + t6386 + t6405;
  t7133 = t5837*t7130;
  t7135 = t5789*t7099;
  t7136 = 0.994522*t606*t7130;
  t7139 = 0.104528*t606*t7099;
  t7141 = t7136 + t7139;
  t7143 = -0.012773*t7141;
  t7144 = -0.9890740084840001*t705*t7130;
  t7147 = -0.103955395616*t705*t7099;
  t7148 = t7144 + t7147;
  t7150 = 0.362968*t7148;
  t7152 = -0.103955395616*t705*t7130;
  t7153 = -0.010926102783999999*t705*t7099;
  t7154 = t7152 + t7153;
  t7155 = -0.18652*t7154;
  t7156 = t7133 + t7135 + t7143 + t7150 + t7155;
  t7397 = t5837*t7396;
  t7399 = t5789*t7371;
  t7400 = 0.994522*t606*t7396;
  t7401 = 0.104528*t606*t7371;
  t7402 = t7400 + t7401;
  t7403 = -0.012773*t7402;
  t7405 = -0.9890740084840001*t705*t7396;
  t7408 = -0.103955395616*t705*t7371;
  t7409 = t7405 + t7408;
  t7413 = 0.362968*t7409;
  t7414 = -0.103955395616*t705*t7396;
  t7417 = -0.010926102783999999*t705*t7371;
  t7419 = t7414 + t7417;
  t7420 = -0.18652*t7419;
  t7423 = t7397 + t7399 + t7403 + t7413 + t7420;
  t7476 = -0.056500534356700764*t606;
  t7479 = -0.3852670428678886*t705;
  t7480 = t7476 + t7479;
  t7483 = 0.04027119345689465*t606;
  t7484 = -0.0059058871981009595*t705;
  t7485 = t7483 + t7484;
  t7487 = 0.38315655000705834*t606;
  t7488 = -0.05619101817723254*t705;
  t7489 = t7487 + t7488;
  t7527 = t465*t5946;
  t7528 = t7098 + t7527;
  t7432 = t5837*t7200;
  t7433 = t5789*t6813;
  t7435 = 0.994522*t606*t7200;
  t7437 = 0.104528*t606*t6813;
  t7438 = t7435 + t7437;
  t7440 = -0.012773*t7438;
  t7441 = -0.9890740084840001*t705*t7200;
  t7442 = -0.103955395616*t705*t6813;
  t7443 = t7441 + t7442;
  t7445 = 0.362968*t7443;
  t7447 = -0.103955395616*t705*t7200;
  t7449 = -0.010926102783999999*t705*t6813;
  t7450 = t7447 + t7449;
  t7451 = -0.18652*t7450;
  t7453 = t7432 + t7433 + t7440 + t7445 + t7451;
  t7244 = t5837*t6806;
  t7247 = t5789*t7209;
  t7251 = 0.994522*t606*t6806;
  t7255 = 0.104528*t606*t7209;
  t7256 = t7251 + t7255;
  t7258 = -0.012773*t7256;
  t7260 = -0.9890740084840001*t705*t6806;
  t7262 = -0.103955395616*t705*t7209;
  t7267 = t7260 + t7262;
  t7268 = 0.362968*t7267;
  t7269 = -0.103955395616*t705*t6806;
  t7270 = -0.010926102783999999*t705*t7209;
  t7271 = t7269 + t7270;
  t7274 = -0.18652*t7271;
  t7275 = t7244 + t7247 + t7258 + t7268 + t7274;
  t6904 = -1.*t27*t5771;
  t6914 = t5789*t6913;
  t6916 = t5837*t6874;
  t6918 = 1.0000001112680001*t27*t705;
  t6919 = 0.104528*t606*t6913;
  t6922 = 0.994522*t606*t6874;
  t6926 = t6918 + t6919 + t6922;
  t6927 = -0.012773*t6926;
  t6928 = 0.994522*t606*t27;
  t6929 = -0.103955395616*t705*t6913;
  t6931 = -0.9890740084840001*t705*t6874;
  t6935 = t6928 + t6929 + t6931;
  t6936 = 0.362968*t6935;
  t6938 = 0.104528*t606*t27;
  t6940 = -0.010926102783999999*t705*t6913;
  t6941 = -0.103955395616*t705*t6874;
  t6943 = t6938 + t6940 + t6941;
  t6944 = -0.18652*t6943;
  t6946 = t6904 + t6914 + t6916 + t6927 + t6936 + t6944;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(t3550 + t3694 + t3844 + t4115 + t4223 + 0.362968*(t4269 + t4291 + t4306) - 0.18652*(t4319 + t4332 + t4449) - 0.012773*(t4769 + t4778 + t4820))*var2[3] + t3399*var2[4] + t6039*var2[5] + t5716*var2[24] + t5923*var2[25];
  p_output1[10]=(t6416 + t6419 + t6424 + t6425 + t6426 + 0.362968*(t5604 + t6427 + t6429) - 0.18652*(t6433 + t6434 + t6435) - 0.012773*(t6439 + t6441 + t6442))*var2[3] + t6161*var2[4] + t6251*var2[5] + t6316*var2[24] + t6407*var2[25];
  p_output1[11]=0;
  p_output1[12]=t3399*var2[3] + (-1.*t1118*t1429*t1438*t3528 + t3550 + t1864*t6611 + t2199*t6618 - 0.012773*(t4769 + t1010*t6611 + t1053*t6618) + 0.362968*(t4269 - 0.103955395616*t629*t6611 + t2469*t6618) - 0.18652*(t4319 + t2759*t6611 - 0.103955395616*t629*t6618) - 1.*t1118*t3528*t541*t70)*var2[4] + t6552*var2[5] + t6512*var2[24] + t6591*var2[25];
  p_output1[13]=t6161*var2[3] + (-1.*t1118*t1429*t1438*t563 + t6416 + t1864*t6757 + t2199*t6762 - 0.012773*(t6439 + t1010*t6757 + t1053*t6762) + 0.362968*(t6427 - 0.103955395616*t629*t6757 + t2469*t6762) - 0.18652*(t6433 + t2759*t6757 - 0.103955395616*t629*t6762) - 1.*t1118*t541*t563*t70)*var2[4] + t6715*var2[5] + t6686*var2[24] + t6745*var2[25];
  p_output1[14]=(t1108*t1118 + t6796 + t6802 + t6807 + t6818 + 0.362968*(t1118*t2181 + t6825 + t6828) - 0.18652*(t1118*t1806 + t6837 + t6838) - 0.012773*(t1118*t3085 + t6846 + t6847))*var2[4] + t6902*var2[5] + t6976*var2[24] + t6946*var2[25];
  p_output1[15]=t6039*var2[3] + t6552*var2[4] + (t3694 + t3844 + t4115 + t4223 + 0.362968*(t4291 + t4306) - 0.18652*(t4332 + t4449) - 0.012773*(t4778 + t4820))*var2[5] + t7014*var2[24] + t7044*var2[25];
  p_output1[16]=t6251*var2[3] + t6715*var2[4] + (t6419 + t6424 + t6425 + t6426 + 0.362968*(t5604 + t6429) - 0.18652*(t6434 + t6435) - 0.012773*(t6441 + t6442))*var2[5] + t7126*var2[24] + t7156*var2[25];
  p_output1[17]=t6902*var2[4] + (t6796 + t6802 + t6807 + t6818 + t7181 + t7183 + t7187)*var2[5] + t7241*var2[24] + t7275*var2[25];
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=t5716*var2[3] + t6512*var2[4] + t7014*var2[5] + (t4938*t6264 + t2199*t6284 + t6168*t7286 + t1864*t7291 - 0.012773*(t1053*t6284 + t1010*t7291) - 0.18652*(t6299 + t2759*t7291) + 0.362968*(t2469*t6284 - 0.103955395616*t629*t7291))*var2[24] + t7343*var2[25];
  p_output1[73]=t6316*var2[3] + t6686*var2[4] + t7126*var2[5] + (t4938*t5946 + t7080*t7286 + t1864*t7364 + t2199*t7371 - 0.012773*(t1010*t7364 + t1053*t7371) + 0.362968*(-0.103955395616*t629*t7364 + t2469*t7371) - 0.18652*(t2759*t7364 - 0.103955395616*t629*t7371))*var2[24] + t7423*var2[25];
  p_output1[74]=t6976*var2[4] + t7241*var2[5] + (t1438*t27*t4938 + t6807 + t6818 + t7181 + t7183 + t7187 + t27*t70*t7286)*var2[24] + t7453*var2[25];
  p_output1[75]=t5923*var2[3] + t6591*var2[4] + t7044*var2[5] + t7343*var2[24] + (-0.18652*(-0.010926102783999999*t606*t6272 - 0.103955395616*t606*t6341 + 0.104528*t27*t3528*t705) + 0.362968*(-0.103955395616*t606*t6272 - 0.9890740084840001*t606*t6341 + 0.994522*t27*t3528*t705) - 0.012773*(-1.0000001112680001*t27*t3528*t606 - 0.104528*t6272*t705 - 0.994522*t6341*t705) + t27*t3528*t7480 + t6272*t7485 + t6341*t7489)*var2[25];
  p_output1[76]=t6407*var2[3] + t6745*var2[4] + t7156*var2[5] + t7423*var2[24] + (t27*t563*t7480 + t7396*t7485 + t7489*t7528 + 0.362968*(0.994522*t27*t563*t705 - 0.103955395616*t606*t7396 - 0.9890740084840001*t606*t7528) - 0.18652*(0.104528*t27*t563*t705 - 0.010926102783999999*t606*t7396 - 0.103955395616*t606*t7528) - 0.012773*(-1.0000001112680001*t27*t563*t606 - 0.104528*t705*t7396 - 0.994522*t705*t7528))*var2[25];
  p_output1[77]=t6946*var2[4] + t7275*var2[5] + t7453*var2[24] + (0.362968*(-0.994522*t1118*t705 - 0.103955395616*t606*t7200 - 0.9890740084840001*t606*t7209) - 0.18652*(-0.104528*t1118*t705 - 0.010926102783999999*t606*t7200 - 0.103955395616*t606*t7209) - 0.012773*(1.0000001112680001*t1118*t606 - 0.104528*t705*t7200 - 0.994522*t705*t7209) - 1.*t1118*t7480 + t7200*t7485 + t7209*t7489)*var2[25];
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void dJp_right_shoulder_pitch_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
