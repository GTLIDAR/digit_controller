/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:09:29 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dJp_right_hip_yaw_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t844;
  double t627;
  double t116;
  double t668;
  double t694;
  double t739;
  double t131;
  double t464;
  double t1266;
  double t1444;
  double t1788;
  double t1850;
  double t1128;
  double t1676;
  double t1689;
  double t1722;
  double t1963;
  double t1969;
  double t2176;
  double t1552;
  double t1556;
  double t905;
  double t928;
  double t941;
  double t972;
  double t798;
  double t934;
  double t980;
  double t994;
  double t487;
  double t573;
  double t3832;
  double t1328;
  double t1332;
  double t1337;
  double t1394;
  double t1453;
  double t1539;
  double t1662;
  double t1669;
  double t3977;
  double t4058;
  double t4084;
  double t4144;
  double t4158;
  double t4204;
  double t1758;
  double t1779;
  double t1852;
  double t1942;
  double t4305;
  double t4340;
  double t4343;
  double t2320;
  double t2427;
  double t4357;
  double t4453;
  double t4619;
  double t2586;
  double t2614;
  double t3038;
  double t3110;
  double t5178;
  double t5193;
  double t5194;
  double t5228;
  double t5270;
  double t5382;
  double t5402;
  double t5406;
  double t5407;
  double t5605;
  double t5608;
  double t5634;
  double t6167;
  double t6174;
  double t6187;
  double t6416;
  double t6430;
  double t6431;
  double t6448;
  double t6455;
  double t6476;
  double t6484;
  double t6536;
  double t6659;
  double t6668;
  double t6675;
  double t6682;
  double t6684;
  double t6688;
  double t6815;
  double t6827;
  double t6832;
  double t6876;
  double t6878;
  double t6897;
  double t6898;
  double t6903;
  double t7026;
  double t7027;
  double t7032;
  double t7038;
  double t7039;
  double t7041;
  double t7048;
  double t7050;
  double t7051;
  double t5987;
  double t5996;
  double t6019;
  double t6065;
  double t6071;
  double t6072;
  double t6115;
  double t6128;
  double t6151;
  double t7101;
  double t7102;
  double t5659;
  double t6743;
  double t7249;
  double t7250;
  double t7252;
  double t7300;
  double t7303;
  double t7304;
  double t6783;
  double t633;
  double t1184;
  double t1452;
  double t1725;
  double t2184;
  double t2210;
  double t2309;
  double t2520;
  double t2552;
  double t2567;
  double t2578;
  double t2687;
  double t2926;
  double t2940;
  double t2969;
  double t3154;
  double t3224;
  double t3406;
  double t3583;
  double t3682;
  double t3724;
  double t3881;
  double t4710;
  double t7381;
  double t7382;
  double t7383;
  double t7387;
  double t7388;
  double t7390;
  double t4953;
  double t5005;
  double t6649;
  double t6651;
  double t6657;
  double t6677;
  double t6719;
  double t6736;
  double t6753;
  double t6756;
  double t6777;
  double t6779;
  double t6781;
  double t6793;
  double t6796;
  double t6797;
  double t6801;
  double t6805;
  double t6810;
  double t6811;
  double t6813;
  double t7432;
  double t7436;
  double t7440;
  double t7474;
  double t7476;
  double t7477;
  double t7180;
  double t7202;
  double t7553;
  double t7554;
  double t7555;
  double t7560;
  double t7561;
  double t7562;
  double t7217;
  double t7229;
  double t7599;
  double t7600;
  double t7601;
  double t7604;
  double t7606;
  double t7607;
  double t7648;
  double t7649;
  double t7650;
  double t7652;
  double t7654;
  double t7657;
  double t7689;
  double t7690;
  double t7693;
  double t7747;
  double t7751;
  double t7754;
  double t7295;
  double t7296;
  double t7305;
  double t7310;
  double t7312;
  double t7314;
  double t7315;
  double t7317;
  double t7318;
  double t7323;
  double t7324;
  double t7325;
  double t7326;
  double t7327;
  double t7329;
  double t7334;
  double t7793;
  double t7794;
  double t6931;
  double t4106;
  double t4244;
  double t4353;
  double t4625;
  double t4714;
  double t4747;
  double t4956;
  double t4972;
  double t5046;
  double t5071;
  double t6395;
  double t6439;
  double t6481;
  double t6542;
  double t6553;
  double t6556;
  double t6572;
  double t6582;
  double t6589;
  double t6593;
  double t6597;
  double t6598;
  double t6599;
  double t6603;
  double t6616;
  double t6623;
  double t6636;
  double t7469;
  double t7471;
  double t7472;
  double t7482;
  double t7484;
  double t7488;
  double t7490;
  double t7491;
  double t7493;
  double t7495;
  double t7498;
  double t7507;
  double t7509;
  double t7513;
  double t7515;
  double t7516;
  double t6865;
  double t6867;
  double t6884;
  double t6906;
  double t6907;
  double t6908;
  double t6912;
  double t6914;
  double t6928;
  double t6934;
  double t6941;
  double t6948;
  double t6962;
  double t6971;
  double t6992;
  double t7002;
  double t7875;
  double t7879;
  double t7880;
  double t7890;
  double t7893;
  double t7894;
  double t7896;
  double t7897;
  double t7914;
  double t7915;
  double t7185;
  double t7186;
  double t7195;
  double t7197;
  double t7207;
  double t7218;
  double t7222;
  double t7230;
  double t7231;
  double t7593;
  double t7596;
  double t7602;
  double t7609;
  double t7615;
  double t7617;
  double t7626;
  double t7629;
  double t7636;
  double t7639;
  double t7970;
  double t7971;
  double t7972;
  double t7974;
  double t7975;
  double t7976;
  double t7646;
  double t7647;
  double t7651;
  double t7661;
  double t7663;
  double t7667;
  double t7668;
  double t7669;
  double t7670;
  double t7671;
  double t7672;
  double t7673;
  double t7674;
  double t7675;
  double t7677;
  double t7679;
  double t7680;
  double t7242;
  double t7244;
  double t7246;
  double t7258;
  double t7259;
  double t7262;
  double t7271;
  double t7272;
  double t7277;
  double t7280;
  double t7281;
  double t7282;
  double t7284;
  double t7289;
  double t7292;
  double t7293;
  double t7787;
  double t7792;
  double t7795;
  double t7796;
  double t7798;
  double t7799;
  double t7801;
  double t7802;
  double t7806;
  double t7807;
  double t7808;
  double t7810;
  double t7811;
  double t7812;
  double t7813;
  double t7814;
  double t8026;
  double t8027;
  double t7076;
  double t7148;
  double t5213;
  double t5391;
  double t5482;
  double t5648;
  double t5672;
  double t5682;
  double t5702;
  double t5713;
  double t5726;
  double t5739;
  double t5763;
  double t5808;
  double t5890;
  double t5895;
  double t5913;
  double t5970;
  double t7430;
  double t7431;
  double t7441;
  double t7443;
  double t7444;
  double t7446;
  double t7447;
  double t7455;
  double t7456;
  double t7457;
  double t7458;
  double t7459;
  double t7460;
  double t7461;
  double t7462;
  double t7465;
  double t7024;
  double t7035;
  double t7047;
  double t7052;
  double t7060;
  double t7062;
  double t7063;
  double t7070;
  double t7072;
  double t7078;
  double t7081;
  double t7084;
  double t7086;
  double t7090;
  double t7094;
  double t7095;
  double t7884;
  double t7889;
  double t7895;
  double t7898;
  double t7899;
  double t7900;
  double t7902;
  double t7903;
  double t7904;
  double t7905;
  double t7906;
  double t7907;
  double t7908;
  double t7909;
  double t7910;
  double t7911;
  double t7912;
  double t8089;
  double t8092;
  double t8095;
  double t8096;
  double t8125;
  double t7955;
  double t7957;
  double t7958;
  double t7959;
  double t7961;
  double t7962;
  double t7966;
  double t7967;
  double t7973;
  double t7977;
  double t7978;
  double t7979;
  double t7980;
  double t7981;
  double t7982;
  double t7984;
  double t7985;
  double t7986;
  double t7988;
  double t7989;
  double t7990;
  double t7991;
  double t7992;
  double t7744;
  double t7745;
  double t7746;
  double t7757;
  double t7760;
  double t7761;
  double t7765;
  double t7766;
  double t7768;
  double t7770;
  double t7771;
  double t7773;
  double t7775;
  double t7776;
  double t7778;
  double t7780;
  double t7781;
  double t7336;
  double t7337;
  double t7339;
  double t7345;
  double t7349;
  double t7350;
  double t7351;
  double t7352;
  double t7355;
  double t7356;
  double t7358;
  double t7360;
  double t7362;
  double t7366;
  double t7367;
  double t7368;
  double t7370;
  double t7371;
  double t7372;
  double t7817;
  double t7818;
  double t7819;
  double t7822;
  double t7826;
  double t7827;
  double t7829;
  double t7831;
  double t7833;
  double t7834;
  double t7836;
  double t7837;
  double t7839;
  double t7840;
  double t7841;
  double t8053;
  double t8057;
  double t8058;
  double t8059;
  double t8060;
  double t8061;
  double t8062;
  double t8063;
  double t8064;
  double t8065;
  double t8066;
  double t8067;
  double t8068;
  double t8070;
  double t6050;
  double t6107;
  double t6201;
  double t6237;
  double t6238;
  double t6257;
  double t6278;
  double t6280;
  double t6301;
  double t6303;
  double t6304;
  double t6320;
  double t6327;
  double t6333;
  double t6337;
  double t6354;
  double t6359;
  double t6370;
  double t6382;
  double t7518;
  double t7519;
  double t7520;
  double t7521;
  double t7523;
  double t7524;
  double t7528;
  double t7529;
  double t7530;
  double t7531;
  double t7532;
  double t7533;
  double t7535;
  double t7539;
  double t7542;
  double t7543;
  double t7545;
  double t7546;
  double t7547;
  double t7099;
  double t7100;
  double t7106;
  double t7110;
  double t7119;
  double t7129;
  double t7135;
  double t7138;
  double t7141;
  double t7151;
  double t7153;
  double t7155;
  double t7158;
  double t7159;
  double t7163;
  double t7167;
  double t7168;
  double t7169;
  double t7917;
  double t7919;
  double t7920;
  double t7921;
  double t7922;
  double t7923;
  double t7924;
  double t7926;
  double t7927;
  double t7929;
  double t7930;
  double t7931;
  double t7932;
  double t7937;
  double t7938;
  double t8126;
  double t8127;
  double t8128;
  double t8129;
  double t8130;
  double t8131;
  double t8132;
  double t8133;
  double t8134;
  double t8135;
  double t8137;
  double t8139;
  double t8140;
  double t8141;
  double t8142;
  double t8190;
  double t8192;
  double t8194;
  double t8198;
  double t8199;
  double t8200;
  double t8207;
  double t8208;
  double t8209;
  double t8261;
  double t8262;
  double t8152;
  double t8154;
  double t8155;
  double t8157;
  double t8159;
  double t8160;
  double t8161;
  double t8162;
  double t8167;
  double t8168;
  double t8171;
  double t8172;
  double t8174;
  double t8175;
  double t8177;
  double t7994;
  double t7995;
  double t7996;
  double t7997;
  double t7998;
  double t7999;
  double t8001;
  double t8002;
  double t8003;
  double t8004;
  double t8005;
  double t8006;
  double t8009;
  double t8010;
  double t8012;
  double t7687;
  double t7697;
  double t7698;
  double t7700;
  double t7703;
  double t7706;
  double t7707;
  double t7709;
  double t7711;
  double t7713;
  double t7715;
  double t7725;
  double t7728;
  double t7729;
  double t7730;
  double t7731;
  double t7734;
  double t7735;
  double t7736;
  t844 = Sin(var1[18]);
  t627 = Sin(var1[3]);
  t116 = Cos(var1[4]);
  t668 = Cos(var1[18]);
  t694 = -1.*t668;
  t739 = 1. + t694;
  t131 = Cos(var1[5]);
  t464 = Sin(var1[17]);
  t1266 = Cos(var1[17]);
  t1444 = Sin(var1[5]);
  t1788 = -0.366501*t844;
  t1850 = 0. + t1788;
  t1128 = Sin(var1[4]);
  t1676 = t116*t131*t464*t627;
  t1689 = -1.*t1266*t116*t627*t1444;
  t1722 = t1676 + t1689;
  t1963 = -1.*t1266*t116*t131*t627;
  t1969 = -1.*t116*t464*t627*t1444;
  t2176 = t1963 + t1969;
  t1552 = 0.930418*t844;
  t1556 = 0. + t1552;
  t905 = -0.930418*t844;
  t928 = 0. + t905;
  t941 = 0.366501*t844;
  t972 = 0. + t941;
  t798 = -0.04500040093286238*t739;
  t934 = -0.07877663122399998*t928;
  t980 = 0.031030906668*t972;
  t994 = 0. + t798 + t934 + t980;
  t487 = -0.091*t464;
  t573 = 0. + t487;
  t3832 = Cos(var1[3]);
  t1328 = -1.*t1266;
  t1332 = 1. + t1328;
  t1337 = -0.091*t1332;
  t1394 = 0. + t1337;
  t1453 = 1.296332362046933e-7*var1[18];
  t1539 = -0.07877668146182712*t739;
  t1662 = -0.045000372235*t1556;
  t1669 = t1453 + t1539 + t1662;
  t3977 = -1.*t3832*t131*t1128;
  t4058 = -1.*t627*t1444;
  t4084 = t3977 + t4058;
  t4144 = t131*t627;
  t4158 = -1.*t3832*t1128*t1444;
  t4204 = t4144 + t4158;
  t1758 = 3.2909349868922137e-7*var1[18];
  t1779 = 0.03103092645718495*t739;
  t1852 = -0.045000372235*t1850;
  t1942 = t1758 + t1779 + t1852;
  t4305 = -1.*t464*t4084;
  t4340 = t1266*t4204;
  t4343 = t4305 + t4340;
  t2320 = -0.134322983001*t739;
  t2427 = 1. + t2320;
  t4357 = t1266*t4084;
  t4453 = t464*t4204;
  t4619 = t4357 + t4453;
  t2586 = -0.8656776547239999*t739;
  t2614 = 1. + t2586;
  t3038 = -1.000000637725*t739;
  t3110 = 1. + t3038;
  t5178 = -1.*t131*t627*t1128;
  t5193 = t3832*t1444;
  t5194 = t5178 + t5193;
  t5228 = -1.*t3832*t131;
  t5270 = -1.*t627*t1128*t1444;
  t5382 = t5228 + t5270;
  t5402 = -1.*t464*t5194;
  t5406 = t1266*t5382;
  t5407 = t5402 + t5406;
  t5605 = -1.*t1266*t5194;
  t5608 = -1.*t464*t5382;
  t5634 = t5605 + t5608;
  t6167 = t1266*t5194;
  t6174 = t464*t5382;
  t6187 = t6167 + t6174;
  t6416 = t3832*t131;
  t6430 = t627*t1128*t1444;
  t6431 = t6416 + t6430;
  t6448 = t464*t5194;
  t6455 = t1266*t6431;
  t6476 = t6448 + t6455;
  t6484 = -1.*t464*t6431;
  t6536 = t6167 + t6484;
  t6659 = -1.*t3832*t116*t131*t464;
  t6668 = t1266*t3832*t116*t1444;
  t6675 = t6659 + t6668;
  t6682 = t1266*t3832*t116*t131;
  t6684 = t3832*t116*t464*t1444;
  t6688 = t6682 + t6684;
  t6815 = t3832*t131*t1128;
  t6827 = t627*t1444;
  t6832 = t6815 + t6827;
  t6876 = t464*t6832;
  t6878 = t6876 + t4340;
  t6897 = t1266*t6832;
  t6898 = -1.*t464*t4204;
  t6903 = t6897 + t6898;
  t7026 = -1.*t131*t627;
  t7027 = t3832*t1128*t1444;
  t7032 = t7026 + t7027;
  t7038 = -1.*t464*t6832;
  t7039 = t1266*t7032;
  t7041 = t7038 + t7039;
  t7048 = -1.*t1266*t6832;
  t7050 = -1.*t464*t7032;
  t7051 = t7048 + t7050;
  t5987 = 0.0846680539949003*t668;
  t5996 = -0.04500040093286238*t844;
  t6019 = t5987 + t5996;
  t6065 = -0.04186915633414423*t668;
  t6071 = -0.07877668146182712*t844;
  t6072 = 1.296332362046933e-7 + t6065 + t6071;
  t6115 = 0.016492681424499736*t668;
  t6128 = 0.03103092645718495*t844;
  t6151 = 3.2909349868922137e-7 + t6115 + t6128;
  t7101 = t464*t7032;
  t7102 = t6897 + t7101;
  t5659 = 0.340999127418*t739*t5407;
  t6743 = 0.340999127418*t739*t6675;
  t7249 = -1.*t1266*t3832*t116*t131;
  t7250 = -1.*t3832*t116*t464*t1444;
  t7252 = t7249 + t7250;
  t7300 = t3832*t116*t131*t464;
  t7303 = -1.*t1266*t3832*t116*t1444;
  t7304 = t7300 + t7303;
  t6783 = 0.340999127418*t739*t6688;
  t633 = -1.*t116*t131*t573*t627;
  t1184 = t994*t627*t1128;
  t1452 = -1.*t1394*t116*t627*t1444;
  t1725 = t1669*t1722;
  t2184 = t1942*t2176;
  t2210 = t1850*t627*t1128;
  t2309 = 0.340999127418*t739*t1722;
  t2520 = t2427*t2176;
  t2552 = t2210 + t2309 + t2520;
  t2567 = -0.086806*t2552;
  t2578 = t1556*t627*t1128;
  t2687 = t2614*t1722;
  t2926 = 0.340999127418*t739*t2176;
  t2940 = t2578 + t2687 + t2926;
  t2969 = -0.123098*t2940;
  t3154 = t3110*t627*t1128;
  t3224 = t928*t1722;
  t3406 = t972*t2176;
  t3583 = t3154 + t3224 + t3406;
  t3682 = -0.04501*t3583;
  t3724 = t633 + t1184 + t1452 + t1725 + t2184 + t2567 + t2969 + t3682;
  t3881 = -1.*t3832*t116*t994;
  t4710 = -1.*t3832*t116*t1850;
  t7381 = t3832*t131*t464*t1128;
  t7382 = -1.*t1266*t3832*t1128*t1444;
  t7383 = t7381 + t7382;
  t7387 = -1.*t1266*t3832*t131*t1128;
  t7388 = -1.*t3832*t464*t1128*t1444;
  t7390 = t7387 + t7388;
  t4953 = -1.*t3832*t116*t1556;
  t5005 = -1.*t3110*t3832*t116;
  t6649 = t3832*t116*t131*t573;
  t6651 = -1.*t3832*t994*t1128;
  t6657 = t1394*t3832*t116*t1444;
  t6677 = t1669*t6675;
  t6719 = t1942*t6688;
  t6736 = -1.*t3832*t1850*t1128;
  t6753 = t2427*t6688;
  t6756 = t6736 + t6743 + t6753;
  t6777 = -0.086806*t6756;
  t6779 = -1.*t3832*t1556*t1128;
  t6781 = t2614*t6675;
  t6793 = t6779 + t6781 + t6783;
  t6796 = -0.123098*t6793;
  t6797 = -1.*t3110*t3832*t1128;
  t6801 = t928*t6675;
  t6805 = t972*t6688;
  t6810 = t6797 + t6801 + t6805;
  t6811 = -0.04501*t6810;
  t6813 = t6649 + t6651 + t6657 + t6677 + t6719 + t6777 + t6796 + t6811;
  t7432 = -1.*t116*t131*t464*t627;
  t7436 = t1266*t116*t627*t1444;
  t7440 = t7432 + t7436;
  t7474 = t1266*t116*t131*t627;
  t7476 = t116*t464*t627*t1444;
  t7477 = t7474 + t7476;
  t7180 = -1.*t116*t994*t627;
  t7202 = -1.*t116*t1850*t627;
  t7553 = t131*t464*t627*t1128;
  t7554 = -1.*t1266*t627*t1128*t1444;
  t7555 = t7553 + t7554;
  t7560 = -1.*t1266*t131*t627*t1128;
  t7561 = -1.*t464*t627*t1128*t1444;
  t7562 = t7560 + t7561;
  t7217 = -1.*t116*t1556*t627;
  t7229 = -1.*t3110*t116*t627;
  t7599 = t116*t131*t464;
  t7600 = -1.*t1266*t116*t1444;
  t7601 = t7599 + t7600;
  t7604 = -1.*t1266*t116*t131;
  t7606 = -1.*t116*t464*t1444;
  t7607 = t7604 + t7606;
  t7648 = -1.*t131*t464*t1128;
  t7649 = t1266*t1128*t1444;
  t7650 = t7648 + t7649;
  t7652 = -1.*t1266*t131*t1128;
  t7654 = -1.*t464*t1128*t1444;
  t7657 = t7652 + t7654;
  t7689 = t131*t464*t1128;
  t7690 = -1.*t1266*t1128*t1444;
  t7693 = t7689 + t7690;
  t7747 = t1266*t131*t1128;
  t7751 = t464*t1128*t1444;
  t7754 = t7747 + t7751;
  t7295 = t1394*t3832*t116*t131;
  t7296 = -1.*t3832*t116*t573*t1444;
  t7305 = t1942*t7304;
  t7310 = t1669*t6688;
  t7312 = 0.340999127418*t739*t7304;
  t7314 = t2614*t6688;
  t7315 = t7312 + t7314;
  t7317 = -0.123098*t7315;
  t7318 = t2427*t7304;
  t7323 = t7318 + t6783;
  t7324 = -0.086806*t7323;
  t7325 = t972*t7304;
  t7326 = t928*t6688;
  t7327 = t7325 + t7326;
  t7329 = -0.04501*t7327;
  t7334 = t7295 + t7296 + t7305 + t7310 + t7317 + t7324 + t7329;
  t7793 = -1.*t1266*t4204;
  t7794 = t7038 + t7793;
  t6931 = 0.340999127418*t739*t6903;
  t4106 = t573*t4084;
  t4244 = t1394*t4204;
  t4353 = t1669*t4343;
  t4625 = t1942*t4619;
  t4714 = 0.340999127418*t739*t4343;
  t4747 = t2427*t4619;
  t4956 = t2614*t4343;
  t4972 = 0.340999127418*t739*t4619;
  t5046 = t928*t4343;
  t5071 = t972*t4619;
  t6395 = t1394*t5194;
  t6439 = t573*t6431;
  t6481 = t1942*t6476;
  t6542 = t1669*t6536;
  t6553 = 0.340999127418*t739*t6476;
  t6556 = t2614*t6536;
  t6572 = t6553 + t6556;
  t6582 = -0.123098*t6572;
  t6589 = t2427*t6476;
  t6593 = 0.340999127418*t739*t6536;
  t6597 = t6589 + t6593;
  t6598 = -0.086806*t6597;
  t6599 = t972*t6476;
  t6603 = t928*t6536;
  t6616 = t6599 + t6603;
  t6623 = -0.04501*t6616;
  t6636 = t6395 + t6439 + t6481 + t6542 + t6582 + t6598 + t6623;
  t7469 = t1394*t116*t131*t627;
  t7471 = -1.*t116*t573*t627*t1444;
  t7472 = t1942*t1722;
  t7482 = t1669*t7477;
  t7484 = t2614*t7477;
  t7488 = t2309 + t7484;
  t7490 = -0.123098*t7488;
  t7491 = t2427*t1722;
  t7493 = 0.340999127418*t739*t7477;
  t7495 = t7491 + t7493;
  t7498 = -0.086806*t7495;
  t7507 = t972*t1722;
  t7509 = t928*t7477;
  t7513 = t7507 + t7509;
  t7515 = -0.04501*t7513;
  t7516 = t7469 + t7471 + t7472 + t7482 + t7490 + t7498 + t7515;
  t6865 = t1394*t6832;
  t6867 = t573*t4204;
  t6884 = t1942*t6878;
  t6906 = t1669*t6903;
  t6907 = 0.340999127418*t739*t6878;
  t6908 = t2614*t6903;
  t6912 = t6907 + t6908;
  t6914 = -0.123098*t6912;
  t6928 = t2427*t6878;
  t6934 = t6928 + t6931;
  t6941 = -0.086806*t6934;
  t6948 = t972*t6878;
  t6962 = t928*t6903;
  t6971 = t6948 + t6962;
  t6992 = -0.04501*t6971;
  t7002 = t6865 + t6867 + t6884 + t6906 + t6914 + t6941 + t6992;
  t7875 = t131*t627*t1128;
  t7879 = -1.*t3832*t1444;
  t7880 = t7875 + t7879;
  t7890 = -1.*t464*t7880;
  t7893 = -1.*t1266*t5382;
  t7894 = t7890 + t7893;
  t7896 = t1266*t7880;
  t7897 = t7896 + t5608;
  t7914 = t464*t7880;
  t7915 = t7914 + t5406;
  t7185 = t573*t5194;
  t7186 = t1394*t5382;
  t7195 = t1669*t5407;
  t7197 = t1942*t6187;
  t7207 = t2427*t6187;
  t7218 = t2614*t5407;
  t7222 = 0.340999127418*t739*t6187;
  t7230 = t928*t5407;
  t7231 = t972*t6187;
  t7593 = -1.*t116*t131*t573;
  t7596 = -1.*t1394*t116*t1444;
  t7602 = t1669*t7601;
  t7609 = t1942*t7607;
  t7615 = 0.340999127418*t739*t7601;
  t7617 = t2427*t7607;
  t7626 = t2614*t7601;
  t7629 = 0.340999127418*t739*t7607;
  t7636 = t928*t7601;
  t7639 = t972*t7607;
  t7970 = -1.*t116*t131*t464;
  t7971 = t1266*t116*t1444;
  t7972 = t7970 + t7971;
  t7974 = t1266*t116*t131;
  t7975 = t116*t464*t1444;
  t7976 = t7974 + t7975;
  t7646 = -1.*t1394*t131*t1128;
  t7647 = t573*t1128*t1444;
  t7651 = t1942*t7650;
  t7661 = t1669*t7657;
  t7663 = 0.340999127418*t739*t7650;
  t7667 = t2614*t7657;
  t7668 = t7663 + t7667;
  t7669 = -0.123098*t7668;
  t7670 = t2427*t7650;
  t7671 = 0.340999127418*t739*t7657;
  t7672 = t7670 + t7671;
  t7673 = -0.086806*t7672;
  t7674 = t972*t7650;
  t7675 = t928*t7657;
  t7677 = t7674 + t7675;
  t7679 = -0.04501*t7677;
  t7680 = t7646 + t7647 + t7651 + t7661 + t7669 + t7673 + t7679;
  t7242 = -0.091*t1266*t3832*t116*t131;
  t7244 = -0.091*t3832*t116*t464*t1444;
  t7246 = t1942*t6675;
  t7258 = t1669*t7252;
  t7259 = t2614*t7252;
  t7262 = t6743 + t7259;
  t7271 = -0.123098*t7262;
  t7272 = t2427*t6675;
  t7277 = 0.340999127418*t739*t7252;
  t7280 = t7272 + t7277;
  t7281 = -0.086806*t7280;
  t7282 = t972*t6675;
  t7284 = t928*t7252;
  t7289 = t7282 + t7284;
  t7292 = -0.04501*t7289;
  t7293 = t7242 + t7244 + t7246 + t7258 + t7271 + t7281 + t7292;
  t7787 = -0.091*t464*t6832;
  t7792 = -0.091*t1266*t4204;
  t7795 = t1669*t7794;
  t7796 = t1942*t6903;
  t7798 = 0.340999127418*t739*t7794;
  t7799 = t2427*t6903;
  t7801 = t7798 + t7799;
  t7802 = -0.086806*t7801;
  t7806 = t2614*t7794;
  t7807 = t7806 + t6931;
  t7808 = -0.123098*t7807;
  t7810 = t928*t7794;
  t7811 = t972*t6903;
  t7812 = t7810 + t7811;
  t7813 = -0.04501*t7812;
  t7814 = t7787 + t7792 + t7795 + t7796 + t7802 + t7808 + t7813;
  t8026 = -1.*t1266*t7032;
  t8027 = t6876 + t8026;
  t7076 = 0.340999127418*t739*t7051;
  t7148 = 0.340999127418*t844*t7041;
  t5213 = -0.091*t1266*t5194;
  t5391 = -0.091*t464*t5382;
  t5482 = t1942*t5407;
  t5648 = t1669*t5634;
  t5672 = t2614*t5634;
  t5682 = t5659 + t5672;
  t5702 = -0.123098*t5682;
  t5713 = t2427*t5407;
  t5726 = 0.340999127418*t739*t5634;
  t5739 = t5713 + t5726;
  t5763 = -0.086806*t5739;
  t5808 = t972*t5407;
  t5890 = t928*t5634;
  t5895 = t5808 + t5890;
  t5913 = -0.04501*t5895;
  t5970 = t5213 + t5391 + t5482 + t5648 + t5702 + t5763 + t5913;
  t7430 = -0.091*t1266*t116*t131*t627;
  t7431 = -0.091*t116*t464*t627*t1444;
  t7441 = t1942*t7440;
  t7443 = t1669*t2176;
  t7444 = 0.340999127418*t739*t7440;
  t7446 = t2614*t2176;
  t7447 = t7444 + t7446;
  t7455 = -0.123098*t7447;
  t7456 = t2427*t7440;
  t7457 = t7456 + t2926;
  t7458 = -0.086806*t7457;
  t7459 = t972*t7440;
  t7460 = t928*t2176;
  t7461 = t7459 + t7460;
  t7462 = -0.04501*t7461;
  t7465 = t7430 + t7431 + t7441 + t7443 + t7455 + t7458 + t7462;
  t7024 = -0.091*t1266*t6832;
  t7035 = -0.091*t464*t7032;
  t7047 = t1942*t7041;
  t7052 = t1669*t7051;
  t7060 = 0.340999127418*t739*t7041;
  t7062 = t2614*t7051;
  t7063 = t7060 + t7062;
  t7070 = -0.123098*t7063;
  t7072 = t2427*t7041;
  t7078 = t7072 + t7076;
  t7081 = -0.086806*t7078;
  t7084 = t972*t7041;
  t7086 = t928*t7051;
  t7090 = t7084 + t7086;
  t7094 = -0.04501*t7090;
  t7095 = t7024 + t7035 + t7047 + t7052 + t7070 + t7081 + t7094;
  t7884 = -0.091*t464*t7880;
  t7889 = -0.091*t1266*t5382;
  t7895 = t1669*t7894;
  t7898 = t1942*t7897;
  t7899 = 0.340999127418*t739*t7894;
  t7900 = t2427*t7897;
  t7902 = t7899 + t7900;
  t7903 = -0.086806*t7902;
  t7904 = t2614*t7894;
  t7905 = 0.340999127418*t739*t7897;
  t7906 = t7904 + t7905;
  t7907 = -0.123098*t7906;
  t7908 = t928*t7894;
  t7909 = t972*t7897;
  t7910 = t7908 + t7909;
  t7911 = -0.04501*t7910;
  t7912 = t7884 + t7889 + t7895 + t7898 + t7903 + t7907 + t7911;
  t8089 = -1.*t1266*t6431;
  t8092 = t7914 + t8089;
  t8095 = -1.*t1266*t7880;
  t8096 = t8095 + t6484;
  t8125 = t7890 + t6455;
  t7955 = t7615 + t7617;
  t7957 = -0.086806*t7955;
  t7958 = t7626 + t7629;
  t7959 = -0.123098*t7958;
  t7961 = t7636 + t7639;
  t7962 = -0.04501*t7961;
  t7966 = -0.091*t116*t131*t464;
  t7967 = 0.091*t1266*t116*t1444;
  t7973 = t1669*t7972;
  t7977 = t1942*t7976;
  t7978 = 0.340999127418*t739*t7972;
  t7979 = t2427*t7976;
  t7980 = t7978 + t7979;
  t7981 = -0.086806*t7980;
  t7982 = t2614*t7972;
  t7984 = 0.340999127418*t739*t7976;
  t7985 = t7982 + t7984;
  t7986 = -0.123098*t7985;
  t7988 = t928*t7972;
  t7989 = t972*t7976;
  t7990 = t7988 + t7989;
  t7991 = -0.04501*t7990;
  t7992 = t7966 + t7967 + t7973 + t7977 + t7981 + t7986 + t7991;
  t7744 = 0.091*t1266*t131*t1128;
  t7745 = 0.091*t464*t1128*t1444;
  t7746 = t1942*t7693;
  t7757 = t1669*t7754;
  t7760 = 0.340999127418*t739*t7693;
  t7761 = t2614*t7754;
  t7765 = t7760 + t7761;
  t7766 = -0.123098*t7765;
  t7768 = t2427*t7693;
  t7770 = 0.340999127418*t739*t7754;
  t7771 = t7768 + t7770;
  t7773 = -0.086806*t7771;
  t7775 = t972*t7693;
  t7776 = t928*t7754;
  t7778 = t7775 + t7776;
  t7780 = -0.04501*t7778;
  t7781 = t7744 + t7745 + t7746 + t7757 + t7766 + t7773 + t7780;
  t7336 = -1.*t3832*t6019*t1128;
  t7337 = t6072*t6675;
  t7339 = t6151*t6688;
  t7345 = 1.000000637725*t3832*t844*t1128;
  t7349 = -0.930418*t668*t6675;
  t7350 = 0.366501*t668*t6688;
  t7351 = t7345 + t7349 + t7350;
  t7352 = -0.04501*t7351;
  t7355 = 0.366501*t668*t3832*t1128;
  t7356 = 0.340999127418*t844*t6675;
  t7358 = -0.134322983001*t844*t6688;
  t7360 = t7355 + t7356 + t7358;
  t7362 = -0.086806*t7360;
  t7366 = -0.930418*t668*t3832*t1128;
  t7367 = -0.8656776547239999*t844*t6675;
  t7368 = 0.340999127418*t844*t6688;
  t7370 = t7366 + t7367 + t7368;
  t7371 = -0.123098*t7370;
  t7372 = t7336 + t7337 + t7339 + t7352 + t7362 + t7371;
  t7817 = t6151*t6878;
  t7818 = t6072*t6903;
  t7819 = 0.366501*t668*t6878;
  t7822 = -0.930418*t668*t6903;
  t7826 = t7819 + t7822;
  t7827 = -0.04501*t7826;
  t7829 = 0.340999127418*t844*t6878;
  t7831 = -0.8656776547239999*t844*t6903;
  t7833 = t7829 + t7831;
  t7834 = -0.123098*t7833;
  t7836 = -0.134322983001*t844*t6878;
  t7837 = 0.340999127418*t844*t6903;
  t7839 = t7836 + t7837;
  t7840 = -0.086806*t7839;
  t7841 = t7817 + t7818 + t7827 + t7834 + t7840;
  t8053 = t6151*t7041;
  t8057 = t6072*t7051;
  t8058 = 0.366501*t668*t7041;
  t8059 = -0.930418*t668*t7051;
  t8060 = t8058 + t8059;
  t8061 = -0.04501*t8060;
  t8062 = -0.8656776547239999*t844*t7051;
  t8063 = t7148 + t8062;
  t8064 = -0.123098*t8063;
  t8065 = -0.134322983001*t844*t7041;
  t8066 = 0.340999127418*t844*t7051;
  t8067 = t8065 + t8066;
  t8068 = -0.086806*t8067;
  t8070 = t8053 + t8057 + t8061 + t8064 + t8068;
  t6050 = -1.*t116*t6019*t627;
  t6107 = t6072*t5407;
  t6201 = t6151*t6187;
  t6237 = 1.000000637725*t116*t844*t627;
  t6238 = -0.930418*t668*t5407;
  t6257 = 0.366501*t668*t6187;
  t6278 = t6237 + t6238 + t6257;
  t6280 = -0.04501*t6278;
  t6301 = 0.366501*t668*t116*t627;
  t6303 = 0.340999127418*t844*t5407;
  t6304 = -0.134322983001*t844*t6187;
  t6320 = t6301 + t6303 + t6304;
  t6327 = -0.086806*t6320;
  t6333 = -0.930418*t668*t116*t627;
  t6337 = -0.8656776547239999*t844*t5407;
  t6354 = 0.340999127418*t844*t6187;
  t6359 = t6333 + t6337 + t6354;
  t6370 = -0.123098*t6359;
  t6382 = t6050 + t6107 + t6201 + t6280 + t6327 + t6370;
  t7518 = -1.*t6019*t627*t1128;
  t7519 = t6072*t7440;
  t7520 = t6151*t7477;
  t7521 = 1.000000637725*t844*t627*t1128;
  t7523 = -0.930418*t668*t7440;
  t7524 = 0.366501*t668*t7477;
  t7528 = t7521 + t7523 + t7524;
  t7529 = -0.04501*t7528;
  t7530 = 0.366501*t668*t627*t1128;
  t7531 = 0.340999127418*t844*t7440;
  t7532 = -0.134322983001*t844*t7477;
  t7533 = t7530 + t7531 + t7532;
  t7535 = -0.086806*t7533;
  t7539 = -0.930418*t668*t627*t1128;
  t7542 = -0.8656776547239999*t844*t7440;
  t7543 = 0.340999127418*t844*t7477;
  t7545 = t7539 + t7542 + t7543;
  t7546 = -0.123098*t7545;
  t7547 = t7518 + t7519 + t7520 + t7529 + t7535 + t7546;
  t7099 = t3832*t116*t6019;
  t7100 = t6072*t7041;
  t7106 = t6151*t7102;
  t7110 = -1.000000637725*t3832*t116*t844;
  t7119 = -0.930418*t668*t7041;
  t7129 = 0.366501*t668*t7102;
  t7135 = t7110 + t7119 + t7129;
  t7138 = -0.04501*t7135;
  t7141 = -0.366501*t668*t3832*t116;
  t7151 = -0.134322983001*t844*t7102;
  t7153 = t7141 + t7148 + t7151;
  t7155 = -0.086806*t7153;
  t7158 = 0.930418*t668*t3832*t116;
  t7159 = -0.8656776547239999*t844*t7041;
  t7163 = 0.340999127418*t844*t7102;
  t7167 = t7158 + t7159 + t7163;
  t7168 = -0.123098*t7167;
  t7169 = t7099 + t7100 + t7106 + t7138 + t7155 + t7168;
  t7917 = t6151*t7915;
  t7919 = t6072*t7897;
  t7920 = 0.366501*t668*t7915;
  t7921 = -0.930418*t668*t7897;
  t7922 = t7920 + t7921;
  t7923 = -0.04501*t7922;
  t7924 = 0.340999127418*t844*t7915;
  t7926 = -0.8656776547239999*t844*t7897;
  t7927 = t7924 + t7926;
  t7929 = -0.123098*t7927;
  t7930 = -0.134322983001*t844*t7915;
  t7931 = 0.340999127418*t844*t7897;
  t7932 = t7930 + t7931;
  t7937 = -0.086806*t7932;
  t7938 = t7917 + t7919 + t7923 + t7929 + t7937;
  t8126 = t6151*t8125;
  t8127 = t6072*t8096;
  t8128 = 0.366501*t668*t8125;
  t8129 = -0.930418*t668*t8096;
  t8130 = t8128 + t8129;
  t8131 = -0.04501*t8130;
  t8132 = 0.340999127418*t844*t8125;
  t8133 = -0.8656776547239999*t844*t8096;
  t8134 = t8132 + t8133;
  t8135 = -0.123098*t8134;
  t8137 = -0.134322983001*t844*t8125;
  t8139 = 0.340999127418*t844*t8096;
  t8140 = t8137 + t8139;
  t8141 = -0.086806*t8140;
  t8142 = t8126 + t8127 + t8131 + t8135 + t8141;
  t8190 = -0.04500040093286238*t668;
  t8192 = -0.0846680539949003*t844;
  t8194 = t8190 + t8192;
  t8198 = -0.07877668146182712*t668;
  t8199 = 0.04186915633414423*t844;
  t8200 = t8198 + t8199;
  t8207 = 0.03103092645718495*t668;
  t8208 = -0.016492681424499736*t844;
  t8209 = t8207 + t8208;
  t8261 = t464*t6431;
  t8262 = t7896 + t8261;
  t8152 = t6151*t7972;
  t8154 = t6072*t7607;
  t8155 = 0.366501*t668*t7972;
  t8157 = -0.930418*t668*t7607;
  t8159 = t8155 + t8157;
  t8160 = -0.04501*t8159;
  t8161 = 0.340999127418*t844*t7972;
  t8162 = -0.8656776547239999*t844*t7607;
  t8167 = t8161 + t8162;
  t8168 = -0.123098*t8167;
  t8171 = -0.134322983001*t844*t7972;
  t8172 = 0.340999127418*t844*t7607;
  t8174 = t8171 + t8172;
  t8175 = -0.086806*t8174;
  t8177 = t8152 + t8154 + t8160 + t8168 + t8175;
  t7994 = t6151*t7601;
  t7995 = t6072*t7976;
  t7996 = 0.366501*t668*t7601;
  t7997 = -0.930418*t668*t7976;
  t7998 = t7996 + t7997;
  t7999 = -0.04501*t7998;
  t8001 = 0.340999127418*t844*t7601;
  t8002 = -0.8656776547239999*t844*t7976;
  t8003 = t8001 + t8002;
  t8004 = -0.123098*t8003;
  t8005 = -0.134322983001*t844*t7601;
  t8006 = 0.340999127418*t844*t7976;
  t8009 = t8005 + t8006;
  t8010 = -0.086806*t8009;
  t8012 = t7994 + t7995 + t7999 + t8004 + t8010;
  t7687 = -1.*t116*t6019;
  t7697 = t6072*t7693;
  t7698 = t6151*t7657;
  t7700 = 1.000000637725*t116*t844;
  t7703 = -0.930418*t668*t7693;
  t7706 = 0.366501*t668*t7657;
  t7707 = t7700 + t7703 + t7706;
  t7709 = -0.04501*t7707;
  t7711 = 0.366501*t668*t116;
  t7713 = 0.340999127418*t844*t7693;
  t7715 = -0.134322983001*t844*t7657;
  t7725 = t7711 + t7713 + t7715;
  t7728 = -0.086806*t7725;
  t7729 = -0.930418*t668*t116;
  t7730 = -0.8656776547239999*t844*t7693;
  t7731 = 0.340999127418*t844*t7657;
  t7734 = t7729 + t7730 + t7731;
  t7735 = -0.123098*t7734;
  t7736 = t7687 + t7697 + t7698 + t7709 + t7728 + t7735;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(t3881 + t4106 + t4244 + t4353 + t4625 - 0.086806*(t4710 + t4714 + t4747) - 0.123098*(t4953 + t4956 + t4972) - 0.04501*(t5005 + t5046 + t5071))*var2[3] + t3724*var2[4] + t6636*var2[5] + t5970*var2[17] + t6382*var2[18];
  p_output1[10]=(t7180 + t7185 + t7186 + t7195 + t7197 - 0.086806*(t5659 + t7202 + t7207) - 0.123098*(t7217 + t7218 + t7222) - 0.04501*(t7229 + t7230 + t7231))*var2[3] + t6813*var2[4] + t7002*var2[5] + t7095*var2[17] + t7169*var2[18];
  p_output1[11]=0;
  p_output1[12]=t3724*var2[3] + (-1.*t1128*t1394*t1444*t3832 + t3881 - 1.*t1128*t131*t3832*t573 + t1669*t7383 + t1942*t7390 - 0.086806*(t4710 + 0.340999127418*t7383*t739 + t2427*t7390) - 0.123098*(t4953 + t2614*t7383 + 0.340999127418*t739*t7390) - 0.04501*(t5005 + t7383*t928 + t7390*t972))*var2[4] + t7334*var2[5] + t7293*var2[17] + t7372*var2[18];
  p_output1[13]=t6813*var2[3] + (-1.*t1128*t1394*t1444*t627 - 1.*t1128*t131*t573*t627 + t7180 + t1669*t7555 + t1942*t7562 - 0.086806*(t7202 + 0.340999127418*t739*t7555 + t2427*t7562) - 0.123098*(t7217 + t2614*t7555 + 0.340999127418*t739*t7562) - 0.04501*(t7229 + t7555*t928 + t7562*t972))*var2[4] + t7516*var2[5] + t7465*var2[17] + t7547*var2[18];
  p_output1[14]=(t7593 + t7596 + t7602 + t7609 - 0.086806*(t1128*t1850 + t7615 + t7617) - 0.123098*(t1128*t1556 + t7626 + t7629) - 0.04501*(t1128*t3110 + t7636 + t7639) + t1128*t994)*var2[4] + t7680*var2[5] + t7781*var2[17] + t7736*var2[18];
  p_output1[15]=t6636*var2[3] + t7334*var2[4] + (t4106 + t4244 + t4353 + t4625 - 0.086806*(t4714 + t4747) - 0.123098*(t4956 + t4972) - 0.04501*(t5046 + t5071))*var2[5] + t7814*var2[17] + t7841*var2[18];
  p_output1[16]=t7002*var2[3] + t7516*var2[4] + (t7185 + t7186 + t7195 + t7197 - 0.086806*(t5659 + t7207) - 0.123098*(t7218 + t7222) - 0.04501*(t7230 + t7231))*var2[5] + t7912*var2[17] + t7938*var2[18];
  p_output1[17]=t7680*var2[4] + (t7593 + t7596 + t7602 + t7609 + t7957 + t7959 + t7962)*var2[5] + t7992*var2[17] + t8012*var2[18];
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=t5970*var2[3] + t7293*var2[4] + t7814*var2[5] + (0.091*t464*t6832 - 0.091*t1266*t7032 + t1942*t7051 + t1669*t8027 - 0.123098*(t7076 + t2614*t8027) - 0.086806*(t2427*t7051 + 0.340999127418*t739*t8027) - 0.04501*(t8027*t928 + t7051*t972))*var2[17] + t8070*var2[18];
  p_output1[52]=t7095*var2[3] + t7465*var2[4] + t7912*var2[5] + (-0.091*t1266*t6431 + 0.091*t464*t7880 + t1669*t8092 + t1942*t8096 - 0.086806*(0.340999127418*t739*t8092 + t2427*t8096) - 0.123098*(t2614*t8092 + 0.340999127418*t739*t8096) - 0.04501*(t8092*t928 + t8096*t972))*var2[17] + t8142*var2[18];
  p_output1[53]=t7781*var2[4] + t7992*var2[5] + (-0.091*t116*t1266*t1444 + 0.091*t116*t131*t464 + t7602 + t7609 + t7957 + t7959 + t7962)*var2[17] + t8177*var2[18];
  p_output1[54]=t6382*var2[3] + t7372*var2[4] + t7841*var2[5] + t8070*var2[17] + (t116*t3832*t8194 + t7041*t8200 + t7102*t8209 - 0.123098*(-0.8656776547239999*t668*t7041 + 0.340999127418*t668*t7102 - 0.930418*t116*t3832*t844) - 0.086806*(0.340999127418*t668*t7041 - 0.134322983001*t668*t7102 + 0.366501*t116*t3832*t844) - 0.04501*(-1.000000637725*t116*t3832*t668 + 0.930418*t7041*t844 - 0.366501*t7102*t844))*var2[18];
  p_output1[55]=t7169*var2[3] + t7547*var2[4] + t7938*var2[5] + t8142*var2[17] + (t116*t627*t8194 + t8125*t8200 + t8209*t8262 - 0.123098*(-0.8656776547239999*t668*t8125 + 0.340999127418*t668*t8262 - 0.930418*t116*t627*t844) - 0.086806*(0.340999127418*t668*t8125 - 0.134322983001*t668*t8262 + 0.366501*t116*t627*t844) - 0.04501*(-1.000000637725*t116*t627*t668 + 0.930418*t8125*t844 - 0.366501*t8262*t844))*var2[18];
  p_output1[56]=t7736*var2[4] + t8012*var2[5] + t8177*var2[17] + (-1.*t1128*t8194 + t7972*t8200 + t7976*t8209 - 0.086806*(0.340999127418*t668*t7972 - 0.134322983001*t668*t7976 - 0.366501*t1128*t844) - 0.123098*(-0.8656776547239999*t668*t7972 + 0.340999127418*t668*t7976 + 0.930418*t1128*t844) - 0.04501*(1.000000637725*t1128*t668 + 0.930418*t7972*t844 - 0.366501*t7976*t844))*var2[18];
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void dJp_right_hip_yaw_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
