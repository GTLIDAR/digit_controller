/*
 * Automatically Generated from Mathematica.
 * Thu 10 Nov 2022 14:43:20 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "R_RightToeBottomBack_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t453;
  double t1275;
  double t1409;
  double t1387;
  double t1411;
  double t1223;
  double t1240;
  double t1247;
  double t1447;
  double t1405;
  double t1414;
  double t1418;
  double t1256;
  double t1514;
  double t1580;
  double t1585;
  double t347;
  double t915;
  double t928;
  double t1422;
  double t1634;
  double t1665;
  double t1713;
  double t1715;
  double t1740;
  double t1975;
  double t1978;
  double t1979;
  double t1026;
  double t1063;
  double t1181;
  double t1693;
  double t1697;
  double t1710;
  double t1750;
  double t1818;
  double t1861;
  double t1863;
  double t1864;
  double t1870;
  double t1879;
  double t1880;
  double t1882;
  double t1924;
  double t1999;
  double t2019;
  double t2031;
  double t2032;
  double t2041;
  double t2043;
  double t2047;
  double t2069;
  double t2070;
  double t2073;
  double t2108;
  double t2110;
  double t2117;
  double t176;
  double t193;
  double t399;
  double t411;
  double t1836;
  double t1845;
  double t1847;
  double t1936;
  double t1980;
  double t1998;
  double t2096;
  double t2099;
  double t2119;
  double t2125;
  double t2158;
  double t2165;
  double t2172;
  double t2174;
  double t2201;
  double t2204;
  double t2226;
  double t2245;
  double t2246;
  double t2248;
  double t2249;
  double t2251;
  double t2278;
  double t2281;
  double t2365;
  double t2372;
  double t2373;
  double t238;
  double t240;
  double t2102;
  double t2214;
  double t2215;
  double t2224;
  double t2286;
  double t2291;
  double t2314;
  double t2336;
  double t2337;
  double t2339;
  double t2347;
  double t2348;
  double t2353;
  double t2360;
  double t2381;
  double t2387;
  double t2394;
  double t2408;
  double t2409;
  double t2411;
  double t2422;
  double t2430;
  double t2434;
  double t2436;
  double t2452;
  double t2453;
  double t2454;
  double t94;
  double t106;
  double t107;
  double t120;
  double t155;
  double t182;
  double t187;
  double t2293;
  double t2295;
  double t2296;
  double t2363;
  double t2377;
  double t2379;
  double t2446;
  double t2448;
  double t2457;
  double t2458;
  double t2460;
  double t2465;
  double t2470;
  double t2473;
  double t2474;
  double t2475;
  double t2512;
  double t2518;
  double t2525;
  double t2530;
  double t2531;
  double t2533;
  double t2536;
  double t2537;
  double t158;
  double t174;
  double t2450;
  double t2476;
  double t2478;
  double t2481;
  double t2541;
  double t2544;
  double t2561;
  double t2563;
  double t2564;
  double t2565;
  double t2567;
  double t2570;
  double t2572;
  double t2575;
  double t2548;
  double t2582;
  double t2583;
  double t2586;
  double t2587;
  double t2588;
  double t2590;
  double t2592;
  double t2597;
  double t2600;
  double t2601;
  double t2607;
  double t110;
  double t121;
  double t123;
  double t2706;
  double t2714;
  double t2720;
  double t2735;
  double t2738;
  double t2742;
  double t2723;
  double t2744;
  double t2745;
  double t2747;
  double t2753;
  double t2754;
  double t2701;
  double t2746;
  double t2755;
  double t2759;
  double t2766;
  double t2767;
  double t2771;
  double t2773;
  double t2779;
  double t2781;
  double t2783;
  double t2784;
  double t2764;
  double t2775;
  double t2789;
  double t2792;
  double t2794;
  double t2795;
  double t2797;
  double t2798;
  double t2816;
  double t2817;
  double t2818;
  double t2823;
  double t2793;
  double t2815;
  double t2826;
  double t2828;
  double t2830;
  double t2846;
  double t2848;
  double t2854;
  double t2872;
  double t2873;
  double t2885;
  double t2896;
  double t2558;
  double t2559;
  double t2829;
  double t2864;
  double t2912;
  double t2914;
  double t2917;
  double t2919;
  double t2920;
  double t2924;
  double t2940;
  double t2941;
  double t2944;
  double t2946;
  double t2578;
  double t2580;
  double t2608;
  double t2609;
  double t2916;
  double t2934;
  double t2947;
  double t2953;
  double t2611;
  double t2613;
  double t2959;
  double t2965;
  double t2966;
  double t2968;
  double t2624;
  double t2626;
  double t2971;
  double t2977;
  double t2980;
  double t2981;
  double t2660;
  double t2665;
  double t2676;
  double t2679;
  double t2685;
  double t2689;
  double t3028;
  double t3031;
  double t3036;
  double t3044;
  double t3048;
  double t3050;
  double t3025;
  double t3042;
  double t3051;
  double t3053;
  double t3055;
  double t3057;
  double t3061;
  double t3066;
  double t3068;
  double t3069;
  double t3071;
  double t3080;
  double t3054;
  double t3067;
  double t3083;
  double t3091;
  double t3101;
  double t3105;
  double t3106;
  double t3109;
  double t3115;
  double t3116;
  double t3118;
  double t3121;
  double t3098;
  double t3111;
  double t3122;
  double t3124;
  double t3126;
  double t3127;
  double t3128;
  double t3130;
  double t3133;
  double t3135;
  double t3137;
  double t3141;
  double t3125;
  double t3132;
  double t3142;
  double t3144;
  double t3156;
  double t3162;
  double t3164;
  double t3167;
  double t3169;
  double t3172;
  double t3173;
  double t3174;
  double t3148;
  double t3168;
  double t3175;
  double t3176;
  double t3183;
  double t3185;
  double t3186;
  double t3188;
  double t3192;
  double t3199;
  double t3205;
  double t3206;
  double t2610;
  double t2618;
  double t2628;
  double t2647;
  double t2674;
  double t2684;
  double t2693;
  double t2697;
  double t2992;
  double t2994;
  double t2995;
  double t3002;
  double t3004;
  double t3012;
  double t3014;
  double t3016;
  double t3221;
  double t3229;
  double t3232;
  double t3233;
  double t3236;
  double t3238;
  double t3242;
  double t3245;
  double t2545;
  double t2576;
  double t2602;
  double t2603;
  double t2956;
  double t2969;
  double t2982;
  double t2983;
  double t3182;
  double t3191;
  double t3209;
  double t3211;
  t453 = Cos(var1[3]);
  t1275 = Cos(var1[5]);
  t1409 = Sin(var1[3]);
  t1387 = Sin(var1[4]);
  t1411 = Sin(var1[5]);
  t1223 = Cos(var1[14]);
  t1240 = -1.*t1223;
  t1247 = 1. + t1240;
  t1447 = Cos(var1[13]);
  t1405 = t453*t1275*t1387;
  t1414 = t1409*t1411;
  t1418 = t1405 + t1414;
  t1256 = Sin(var1[13]);
  t1514 = -1.*t1275*t1409;
  t1580 = t453*t1387*t1411;
  t1585 = t1514 + t1580;
  t347 = Sin(var1[15]);
  t915 = Cos(var1[4]);
  t928 = Sin(var1[14]);
  t1422 = -1.*t1256*t1418;
  t1634 = t1447*t1585;
  t1665 = t1422 + t1634;
  t1713 = t1447*t1418;
  t1715 = t1256*t1585;
  t1740 = t1713 + t1715;
  t1975 = Cos(var1[15]);
  t1978 = -1.*t1975;
  t1979 = 1. + t1978;
  t1026 = -0.366501*t928;
  t1063 = 0. + t1026;
  t1181 = t453*t915*t1063;
  t1693 = 0.340999127418*t1247*t1665;
  t1697 = -0.134322983001*t1247;
  t1710 = 1. + t1697;
  t1750 = t1710*t1740;
  t1818 = t1181 + t1693 + t1750;
  t1861 = 0.930418*t928;
  t1863 = 0. + t1861;
  t1864 = t453*t915*t1863;
  t1870 = -0.8656776547239999*t1247;
  t1879 = 1. + t1870;
  t1880 = t1879*t1665;
  t1882 = 0.340999127418*t1247*t1740;
  t1924 = t1864 + t1880 + t1882;
  t1999 = -1.000000637725*t1247;
  t2019 = 1. + t1999;
  t2031 = t2019*t453*t915;
  t2032 = -0.930418*t928;
  t2041 = 0. + t2032;
  t2043 = t2041*t1665;
  t2047 = 0.366501*t928;
  t2069 = 0. + t2047;
  t2070 = t2069*t1740;
  t2073 = t2031 + t2043 + t2070;
  t2108 = Cos(var1[16]);
  t2110 = -1.*t2108;
  t2117 = 1. + t2110;
  t176 = Sin(var1[17]);
  t193 = Sin(var1[16]);
  t399 = 0.930418*t347;
  t411 = 0. + t399;
  t1836 = t411*t1818;
  t1845 = 0.366501*t347;
  t1847 = 0. + t1845;
  t1936 = t1847*t1924;
  t1980 = -1.000000637725*t1979;
  t1998 = 1. + t1980;
  t2096 = t1998*t2073;
  t2099 = t1836 + t1936 + t2096;
  t2119 = -0.8656776547239999*t1979;
  t2125 = 1. + t2119;
  t2158 = t2125*t1818;
  t2165 = -0.340999127418*t1979*t1924;
  t2172 = -0.930418*t347;
  t2174 = 0. + t2172;
  t2201 = t2174*t2073;
  t2204 = t2158 + t2165 + t2201;
  t2226 = -0.340999127418*t1979*t1818;
  t2245 = -0.134322983001*t1979;
  t2246 = 1. + t2245;
  t2248 = t2246*t1924;
  t2249 = -0.366501*t347;
  t2251 = 0. + t2249;
  t2278 = t2251*t2073;
  t2281 = t2226 + t2248 + t2278;
  t2365 = Cos(var1[17]);
  t2372 = -1.*t2365;
  t2373 = 1. + t2372;
  t238 = 0.366501*t193;
  t240 = 0. + t238;
  t2102 = t240*t2099;
  t2214 = -0.340999127418*t2117*t2204;
  t2215 = -0.134322983001*t2117;
  t2224 = 1. + t2215;
  t2286 = t2224*t2281;
  t2291 = t2102 + t2214 + t2286;
  t2314 = 0.930418*t193;
  t2336 = 0. + t2314;
  t2337 = t2336*t2099;
  t2339 = -0.8656776547239999*t2117;
  t2347 = 1. + t2339;
  t2348 = t2347*t2204;
  t2353 = -0.340999127418*t2117*t2281;
  t2360 = t2337 + t2348 + t2353;
  t2381 = -1.000000637725*t2117;
  t2387 = 1. + t2381;
  t2394 = t2387*t2099;
  t2408 = -0.930418*t193;
  t2409 = 0. + t2408;
  t2411 = t2409*t2204;
  t2422 = -0.366501*t193;
  t2430 = 0. + t2422;
  t2434 = t2430*t2281;
  t2436 = t2394 + t2411 + t2434;
  t2452 = Cos(var1[18]);
  t2453 = -1.*t2452;
  t2454 = 1. + t2453;
  t94 = Cos(var1[19]);
  t106 = -1.*t94;
  t107 = 1. + t106;
  t120 = Sin(var1[19]);
  t155 = Sin(var1[18]);
  t182 = -0.366501*t176;
  t187 = 0. + t182;
  t2293 = t187*t2291;
  t2295 = -0.930418*t176;
  t2296 = 0. + t2295;
  t2363 = t2296*t2360;
  t2377 = -1.000000637725*t2373;
  t2379 = 1. + t2377;
  t2446 = t2379*t2436;
  t2448 = t2293 + t2363 + t2446;
  t2457 = -0.134322983001*t2373;
  t2458 = 1. + t2457;
  t2460 = t2458*t2291;
  t2465 = -0.340999127418*t2373*t2360;
  t2470 = 0.366501*t176;
  t2473 = 0. + t2470;
  t2474 = t2473*t2436;
  t2475 = t2460 + t2465 + t2474;
  t2512 = -0.340999127418*t2373*t2291;
  t2518 = -0.8656776547239999*t2373;
  t2525 = 1. + t2518;
  t2530 = t2525*t2360;
  t2531 = 0.930418*t176;
  t2533 = 0. + t2531;
  t2536 = t2533*t2436;
  t2537 = t2512 + t2530 + t2536;
  t158 = 0.930418*t155;
  t174 = 0. + t158;
  t2450 = t174*t2448;
  t2476 = -0.340999127418*t2454*t2475;
  t2478 = -0.8656776547239999*t2454;
  t2481 = 1. + t2478;
  t2541 = t2481*t2537;
  t2544 = t2450 + t2476 + t2541;
  t2561 = 0.366501*t155;
  t2563 = 0. + t2561;
  t2564 = t2563*t2448;
  t2565 = -0.134322983001*t2454;
  t2567 = 1. + t2565;
  t2570 = t2567*t2475;
  t2572 = -0.340999127418*t2454*t2537;
  t2575 = t2564 + t2570 + t2572;
  t2548 = 0.175248972904*t107;
  t2582 = -1.000000637725*t2454;
  t2583 = 1. + t2582;
  t2586 = t2583*t2448;
  t2587 = -0.366501*t155;
  t2588 = 0. + t2587;
  t2590 = t2588*t2475;
  t2592 = -0.930418*t155;
  t2597 = 0. + t2592;
  t2600 = t2597*t2537;
  t2601 = t2586 + t2590 + t2600;
  t2607 = 0.120666640478*t107;
  t110 = 0.444895486988*t107;
  t121 = -0.218018*t120;
  t123 = t110 + t121;
  t2706 = t1275*t1409*t1387;
  t2714 = -1.*t453*t1411;
  t2720 = t2706 + t2714;
  t2735 = t453*t1275;
  t2738 = t1409*t1387*t1411;
  t2742 = t2735 + t2738;
  t2723 = -1.*t1256*t2720;
  t2744 = t1447*t2742;
  t2745 = t2723 + t2744;
  t2747 = t1447*t2720;
  t2753 = t1256*t2742;
  t2754 = t2747 + t2753;
  t2701 = t915*t1063*t1409;
  t2746 = 0.340999127418*t1247*t2745;
  t2755 = t1710*t2754;
  t2759 = t2701 + t2746 + t2755;
  t2766 = t915*t1863*t1409;
  t2767 = t1879*t2745;
  t2771 = 0.340999127418*t1247*t2754;
  t2773 = t2766 + t2767 + t2771;
  t2779 = t2019*t915*t1409;
  t2781 = t2041*t2745;
  t2783 = t2069*t2754;
  t2784 = t2779 + t2781 + t2783;
  t2764 = t411*t2759;
  t2775 = t1847*t2773;
  t2789 = t1998*t2784;
  t2792 = t2764 + t2775 + t2789;
  t2794 = t2125*t2759;
  t2795 = -0.340999127418*t1979*t2773;
  t2797 = t2174*t2784;
  t2798 = t2794 + t2795 + t2797;
  t2816 = -0.340999127418*t1979*t2759;
  t2817 = t2246*t2773;
  t2818 = t2251*t2784;
  t2823 = t2816 + t2817 + t2818;
  t2793 = t240*t2792;
  t2815 = -0.340999127418*t2117*t2798;
  t2826 = t2224*t2823;
  t2828 = t2793 + t2815 + t2826;
  t2830 = t2336*t2792;
  t2846 = t2347*t2798;
  t2848 = -0.340999127418*t2117*t2823;
  t2854 = t2830 + t2846 + t2848;
  t2872 = t2387*t2792;
  t2873 = t2409*t2798;
  t2885 = t2430*t2823;
  t2896 = t2872 + t2873 + t2885;
  t2558 = 0.553471*t120;
  t2559 = t2548 + t2558;
  t2829 = t187*t2828;
  t2864 = t2296*t2854;
  t2912 = t2379*t2896;
  t2914 = t2829 + t2864 + t2912;
  t2917 = t2458*t2828;
  t2919 = -0.340999127418*t2373*t2854;
  t2920 = t2473*t2896;
  t2924 = t2917 + t2919 + t2920;
  t2940 = -0.340999127418*t2373*t2828;
  t2941 = t2525*t2854;
  t2944 = t2533*t2896;
  t2946 = t2940 + t2941 + t2944;
  t2578 = -0.353861996165*t107;
  t2580 = 1. + t2578;
  t2608 = 0.803828*t120;
  t2609 = t2607 + t2608;
  t2916 = t174*t2914;
  t2934 = -0.340999127418*t2454*t2924;
  t2947 = t2481*t2946;
  t2953 = t2916 + t2934 + t2947;
  t2611 = -0.952469601425*t107;
  t2613 = 1. + t2611;
  t2959 = t2563*t2914;
  t2965 = t2567*t2924;
  t2966 = -0.340999127418*t2454*t2946;
  t2968 = t2959 + t2965 + t2966;
  t2624 = -0.553471*t120;
  t2626 = t2548 + t2624;
  t2971 = t2583*t2914;
  t2977 = t2588*t2924;
  t2980 = t2597*t2946;
  t2981 = t2971 + t2977 + t2980;
  t2660 = -0.693671301908*t107;
  t2665 = 1. + t2660;
  t2676 = -0.803828*t120;
  t2679 = t2607 + t2676;
  t2685 = 0.218018*t120;
  t2689 = t110 + t2685;
  t3028 = -1.*t915*t1275*t1256;
  t3031 = t1447*t915*t1411;
  t3036 = t3028 + t3031;
  t3044 = t1447*t915*t1275;
  t3048 = t915*t1256*t1411;
  t3050 = t3044 + t3048;
  t3025 = -1.*t1063*t1387;
  t3042 = 0.340999127418*t1247*t3036;
  t3051 = t1710*t3050;
  t3053 = t3025 + t3042 + t3051;
  t3055 = -1.*t1863*t1387;
  t3057 = t1879*t3036;
  t3061 = 0.340999127418*t1247*t3050;
  t3066 = t3055 + t3057 + t3061;
  t3068 = -1.*t2019*t1387;
  t3069 = t2041*t3036;
  t3071 = t2069*t3050;
  t3080 = t3068 + t3069 + t3071;
  t3054 = t411*t3053;
  t3067 = t1847*t3066;
  t3083 = t1998*t3080;
  t3091 = t3054 + t3067 + t3083;
  t3101 = t2125*t3053;
  t3105 = -0.340999127418*t1979*t3066;
  t3106 = t2174*t3080;
  t3109 = t3101 + t3105 + t3106;
  t3115 = -0.340999127418*t1979*t3053;
  t3116 = t2246*t3066;
  t3118 = t2251*t3080;
  t3121 = t3115 + t3116 + t3118;
  t3098 = t240*t3091;
  t3111 = -0.340999127418*t2117*t3109;
  t3122 = t2224*t3121;
  t3124 = t3098 + t3111 + t3122;
  t3126 = t2336*t3091;
  t3127 = t2347*t3109;
  t3128 = -0.340999127418*t2117*t3121;
  t3130 = t3126 + t3127 + t3128;
  t3133 = t2387*t3091;
  t3135 = t2409*t3109;
  t3137 = t2430*t3121;
  t3141 = t3133 + t3135 + t3137;
  t3125 = t187*t3124;
  t3132 = t2296*t3130;
  t3142 = t2379*t3141;
  t3144 = t3125 + t3132 + t3142;
  t3156 = t2458*t3124;
  t3162 = -0.340999127418*t2373*t3130;
  t3164 = t2473*t3141;
  t3167 = t3156 + t3162 + t3164;
  t3169 = -0.340999127418*t2373*t3124;
  t3172 = t2525*t3130;
  t3173 = t2533*t3141;
  t3174 = t3169 + t3172 + t3173;
  t3148 = t174*t3144;
  t3168 = -0.340999127418*t2454*t3167;
  t3175 = t2481*t3174;
  t3176 = t3148 + t3168 + t3175;
  t3183 = t2563*t3144;
  t3185 = t2567*t3167;
  t3186 = -0.340999127418*t2454*t3174;
  t3188 = t3183 + t3185 + t3186;
  t3192 = t2583*t3144;
  t3199 = t2588*t3167;
  t3205 = t2597*t3174;
  t3206 = t3192 + t3199 + t3205;
  t2610 = t2609*t2544;
  t2618 = t2613*t2575;
  t2628 = t2626*t2601;
  t2647 = t2610 + t2618 + t2628;
  t2674 = t2665*t2544;
  t2684 = t2679*t2575;
  t2693 = t2689*t2601;
  t2697 = t2674 + t2684 + t2693;
  t2992 = t2609*t2953;
  t2994 = t2613*t2968;
  t2995 = t2626*t2981;
  t3002 = t2992 + t2994 + t2995;
  t3004 = t2665*t2953;
  t3012 = t2679*t2968;
  t3014 = t2689*t2981;
  t3016 = t3004 + t3012 + t3014;
  t3221 = t2609*t3176;
  t3229 = t2613*t3188;
  t3232 = t2626*t3206;
  t3233 = t3221 + t3229 + t3232;
  t3236 = t2665*t3176;
  t3238 = t2679*t3188;
  t3242 = t2689*t3206;
  t3245 = t3236 + t3238 + t3242;
  t2545 = t123*t2544;
  t2576 = t2559*t2575;
  t2602 = t2580*t2601;
  t2603 = t2545 + t2576 + t2602;
  t2956 = t123*t2953;
  t2969 = t2559*t2968;
  t2982 = t2580*t2981;
  t2983 = t2956 + t2969 + t2982;
  t3182 = t123*t3176;
  t3191 = t2559*t3188;
  t3209 = t2580*t3206;
  t3211 = t3182 + t3191 + t3209;
  p_output1[0]=0.993567*t2603 + 0.041508*t2647 + 0.105375*t2697;
  p_output1[1]=0.993567*t2983 + 0.041508*t3002 + 0.105375*t3016;
  p_output1[2]=0.993567*t3211 + 0.041508*t3233 + 0.105375*t3245;
  p_output1[3]=0.930418*t2647 - 0.366501*t2697;
  p_output1[4]=0.930418*t3002 - 0.366501*t3016;
  p_output1[5]=0.930418*t3233 - 0.366501*t3245;
  p_output1[6]=-0.113255*t2603 + 0.364143*t2647 + 0.924432*t2697;
  p_output1[7]=-0.113255*t2983 + 0.364143*t3002 + 0.924432*t3016;
  p_output1[8]=-0.113255*t3211 + 0.364143*t3233 + 0.924432*t3245;
}



void R_RightToeBottomBack_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
