/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:56:49 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jdq_AMWorld_left_hip_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t547;
  double t574;
  double t603;
  double t399;
  double t449;
  double t475;
  double t625;
  double t604;
  double t607;
  double t619;
  double t621;
  double t626;
  double t640;
  double t685;
  double t769;
  double t853;
  double t888;
  double t895;
  double t945;
  double t953;
  double t970;
  double t1005;
  double t1017;
  double t1036;
  double t1047;
  double t1067;
  double t1129;
  double t1150;
  double t1180;
  double t1221;
  double t1224;
  double t1262;
  double t1299;
  double t1319;
  double t1440;
  double t804;
  double t818;
  double t825;
  double t1028;
  double t1040;
  double t1044;
  double t1335;
  double t1371;
  double t276;
  double t1474;
  double t1484;
  double t1498;
  double t1514;
  double t1535;
  double t1554;
  double t1581;
  double t1612;
  double t56;
  double t223;
  double t2127;
  double t2129;
  double t2133;
  double t2218;
  double t2280;
  double t2285;
  double t2337;
  double t2346;
  double t2360;
  double t1674;
  double t2144;
  double t2336;
  double t2396;
  double t2399;
  double t2456;
  double t2460;
  double t2476;
  double t2537;
  double t1796;
  double t1819;
  double t1853;
  double t1875;
  double t1876;
  double t1932;
  double t1941;
  double t2931;
  double t2977;
  double t3007;
  double t3054;
  double t3059;
  double t3113;
  double t3182;
  double t3191;
  double t3197;
  double t3041;
  double t3163;
  double t3207;
  double t3229;
  double t3287;
  double t3291;
  double t3424;
  double t3447;
  double t3988;
  double t3958;
  double t4015;
  double t4028;
  double t4029;
  double t3959;
  double t3994;
  double t4002;
  double t4014;
  double t4059;
  double t4061;
  double t4119;
  double t4155;
  double t4156;
  double t4302;
  double t4307;
  double t4310;
  double t4312;
  double t4107;
  double t4173;
  double t4196;
  double t4208;
  double t4223;
  double t4248;
  double t4253;
  double t4265;
  double t1386;
  double t1644;
  double t1654;
  double t1669;
  double t1712;
  double t1732;
  double t1738;
  double t1742;
  double t1750;
  double t1767;
  double t1868;
  double t1928;
  double t1951;
  double t1972;
  double t1987;
  double t1992;
  double t2446;
  double t2557;
  double t2563;
  double t2566;
  double t2666;
  double t2684;
  double t2702;
  double t2718;
  double t2749;
  double t2786;
  double t2794;
  double t2851;
  double t2859;
  double t2867;
  double t2896;
  double t2899;
  double t3283;
  double t3473;
  double t3493;
  double t3557;
  double t3587;
  double t3588;
  double t3627;
  double t3636;
  double t3663;
  double t3728;
  double t3753;
  double t3754;
  double t3761;
  double t3781;
  double t3818;
  double t3863;
  double t4219;
  double t4278;
  double t4320;
  double t4346;
  double t4428;
  double t4434;
  double t4453;
  double t4528;
  double t4350;
  double t4366;
  double t4396;
  double t4426;
  double t4427;
  double t2000;
  double t2903;
  double t3865;
  double t3953;
  double t5139;
  double t5140;
  double t5170;
  double t5057;
  double t5065;
  double t5123;
  double t5133;
  double t5261;
  double t5264;
  double t5313;
  double t5318;
  double t5348;
  double t5467;
  double t5488;
  double t5510;
  double t5520;
  double t5298;
  double t5363;
  double t5430;
  double t5437;
  double t5452;
  double t5457;
  double t5458;
  double t5462;
  double t4557;
  double t4586;
  double t4643;
  double t4674;
  double t5438;
  double t5466;
  double t5522;
  double t5528;
  double t5660;
  double t5733;
  double t5741;
  double t5743;
  double t4862;
  double t4904;
  double t4934;
  double t4957;
  double t5557;
  double t5600;
  double t5606;
  double t5646;
  double t5648;
  double t5865;
  double t5884;
  double t5887;
  double t5919;
  double t5925;
  double t5930;
  double t6026;
  double t6044;
  double t6053;
  double t6060;
  double t5890;
  double t5935;
  double t5946;
  double t5963;
  double t5986;
  double t5999;
  double t6007;
  double t6018;
  double t5964;
  double t6022;
  double t6073;
  double t6135;
  double t6186;
  double t6192;
  double t6205;
  double t6263;
  double t6149;
  double t6154;
  double t6156;
  double t6168;
  double t6173;
  double t4348;
  double t4536;
  double t4539;
  double t6379;
  double t6382;
  double t6385;
  double t6399;
  double t6405;
  double t6415;
  double t6467;
  double t6474;
  double t6484;
  double t4683;
  double t4684;
  double t4801;
  double t4970;
  double t4986;
  double t4996;
  double t6388;
  double t6416;
  double t6487;
  double t6492;
  double t5534;
  double t5746;
  double t5747;
  double t6526;
  double t6528;
  double t6530;
  double t6537;
  double t5753;
  double t5758;
  double t5761;
  double t6542;
  double t6543;
  double t6548;
  double t6550;
  double t5772;
  double t5807;
  double t5827;
  double t6137;
  double t6267;
  double t6277;
  double t6310;
  double t6312;
  double t6314;
  double t6350;
  double t6351;
  double t6363;
  double t6661;
  double t6674;
  double t6690;
  double t6696;
  double t6703;
  double t6725;
  double t6728;
  double t6740;
  double t6755;
  double t6759;
  double t6766;
  double t6771;
  double t6855;
  double t6856;
  double t6861;
  double t6869;
  double t6882;
  double t6886;
  double t6889;
  double t6913;
  double t6948;
  double t6959;
  double t6970;
  double t6973;
  double t6871;
  double t6934;
  double t6993;
  double t6995;
  double t7006;
  double t7008;
  double t7009;
  double t7011;
  double t7023;
  double t7025;
  double t7026;
  double t7029;
  double t7066;
  double t7074;
  double t7075;
  double t7084;
  double t7086;
  double t7090;
  double t7104;
  double t7127;
  double t7135;
  double t7077;
  double t7094;
  double t7136;
  double t7152;
  double t7157;
  double t7163;
  double t7171;
  double t7172;
  double t7188;
  double t7189;
  double t7194;
  double t7198;
  t547 = Cos(var1[8]);
  t574 = -1.*t547;
  t603 = 1. + t574;
  t399 = Cos(var1[7]);
  t449 = -1.*t399;
  t475 = 1. + t449;
  t625 = Sin(var1[8]);
  t604 = -0.8656776547239999*t603;
  t607 = 1. + t604;
  t619 = -0.657905*t607;
  t621 = 0.0883716288660118*t603;
  t626 = -0.930418*t625;
  t640 = 0. + t626;
  t685 = 0.707107*t640;
  t769 = t619 + t621 + t685;
  t853 = -0.134322983001*t603;
  t888 = 1. + t853;
  t895 = 0.259155*t888;
  t945 = -0.22434503092393926*t603;
  t953 = 0.366501*t625;
  t970 = 0. + t953;
  t1005 = 0.707107*t970;
  t1017 = t895 + t945 + t1005;
  t1036 = Sin(var1[7]);
  t1047 = -1.000000637725*t603;
  t1067 = 1. + t1047;
  t1129 = 0.707107*t1067;
  t1150 = -0.366501*t625;
  t1180 = 0. + t1150;
  t1221 = 0.259155*t1180;
  t1224 = 0.930418*t625;
  t1262 = 0. + t1224;
  t1299 = -0.657905*t1262;
  t1319 = t1129 + t1221 + t1299;
  t1440 = Cos(var1[6]);
  t804 = -0.340999127418*t475*t769;
  t818 = -0.8656776547239999*t475;
  t825 = 1. + t818;
  t1028 = t825*t1017;
  t1040 = -0.930418*t1036;
  t1044 = 0. + t1040;
  t1335 = t1044*t1319;
  t1371 = 0. + t804 + t1028 + t1335;
  t276 = Sin(var1[6]);
  t1474 = -0.134322983001*t475;
  t1484 = 1. + t1474;
  t1498 = t1484*t769;
  t1514 = -0.340999127418*t475*t1017;
  t1535 = -0.366501*t1036;
  t1554 = 0. + t1535;
  t1581 = t1554*t1319;
  t1612 = 0. + t1498 + t1514 + t1581;
  t56 = Cos(var1[4]);
  t223 = Cos(var1[5]);
  t2127 = -0.366501*t607;
  t2129 = -0.3172717261340007*t603;
  t2133 = t2127 + t2129;
  t2218 = -0.930418*t888;
  t2280 = -0.12497652119782442*t603;
  t2285 = t2218 + t2280;
  t2337 = -0.930418*t1180;
  t2346 = -0.366501*t1262;
  t2360 = t2337 + t2346;
  t1674 = Sin(var1[5]);
  t2144 = -0.340999127418*t475*t2133;
  t2336 = t825*t2285;
  t2396 = t1044*t2360;
  t2399 = 0. + t2144 + t2336 + t2396;
  t2456 = t1484*t2133;
  t2460 = -0.340999127418*t475*t2285;
  t2476 = t1554*t2360;
  t2537 = 0. + t2456 + t2460 + t2476;
  t1796 = Sin(var1[4]);
  t1819 = 0.366501*t1036;
  t1853 = 0. + t1819;
  t1875 = 0.930418*t1036;
  t1876 = 0. + t1875;
  t1932 = -1.000000637725*t475;
  t1941 = 1. + t1932;
  t2931 = 0.657905*t607;
  t2977 = -0.0883716288660118*t603;
  t3007 = t2931 + t2977 + t685;
  t3054 = -0.259155*t888;
  t3059 = 0.22434503092393926*t603;
  t3113 = t3054 + t3059 + t1005;
  t3182 = -0.259155*t1180;
  t3191 = 0.657905*t1262;
  t3197 = t1129 + t3182 + t3191;
  t3041 = -0.340999127418*t475*t3007;
  t3163 = t825*t3113;
  t3207 = t1044*t3197;
  t3229 = 0. + t3041 + t3163 + t3207;
  t3287 = t1484*t3007;
  t3291 = -0.340999127418*t475*t3113;
  t3424 = t1554*t3197;
  t3447 = 0. + t3287 + t3291 + t3424;
  t3988 = Cos(var1[3]);
  t3958 = Sin(var1[3]);
  t4015 = t3988*t223*t1796;
  t4028 = t3958*t1674;
  t4029 = t4015 + t4028;
  t3959 = -1.*t223*t3958;
  t3994 = t3988*t1796*t1674;
  t4002 = t3959 + t3994;
  t4014 = t1440*t4002;
  t4059 = -1.*t4029*t276;
  t4061 = t4014 + t4059;
  t4119 = t1440*t4029;
  t4155 = t4002*t276;
  t4156 = t4119 + t4155;
  t4302 = t3988*t56*t1941;
  t4307 = t4061*t1044;
  t4310 = t4156*t1554;
  t4312 = t4302 + t4307 + t4310;
  t4107 = -0.340999127418*t475*t4061;
  t4173 = t1484*t4156;
  t4196 = t3988*t56*t1853;
  t4208 = t4107 + t4173 + t4196;
  t4223 = t825*t4061;
  t4248 = -0.340999127418*t475*t4156;
  t4253 = t3988*t56*t1876;
  t4265 = t4223 + t4248 + t4253;
  t1386 = -1.*t276*t1371;
  t1644 = t1440*t1612;
  t1654 = 0. + t1386 + t1644;
  t1669 = t223*t1654;
  t1712 = t1440*t1371;
  t1732 = t276*t1612;
  t1738 = 0. + t1712 + t1732;
  t1742 = t1674*t1738;
  t1750 = 0. + t1669 + t1742;
  t1767 = t56*t1750;
  t1868 = t1853*t769;
  t1928 = t1876*t1017;
  t1951 = t1941*t1319;
  t1972 = 0. + t1868 + t1928 + t1951;
  t1987 = -1.*t1796*t1972;
  t1992 = 0. + t1767 + t1987;
  t2446 = -1.*t276*t2399;
  t2557 = t1440*t2537;
  t2563 = 0. + t2446 + t2557;
  t2566 = t223*t2563;
  t2666 = t1440*t2399;
  t2684 = t276*t2537;
  t2702 = 0. + t2666 + t2684;
  t2718 = t1674*t2702;
  t2749 = 0. + t2566 + t2718;
  t2786 = t56*t2749;
  t2794 = t2133*t1853;
  t2851 = t2285*t1876;
  t2859 = t1941*t2360;
  t2867 = 0. + t2794 + t2851 + t2859;
  t2896 = -1.*t1796*t2867;
  t2899 = 0. + t2786 + t2896;
  t3283 = -1.*t276*t3229;
  t3473 = t1440*t3447;
  t3493 = 0. + t3283 + t3473;
  t3557 = t223*t3493;
  t3587 = t1440*t3229;
  t3588 = t276*t3447;
  t3627 = 0. + t3587 + t3588;
  t3636 = t1674*t3627;
  t3663 = 0. + t3557 + t3636;
  t3728 = t56*t3663;
  t3753 = t1853*t3007;
  t3754 = t1876*t3113;
  t3761 = t1941*t3197;
  t3781 = 0. + t3753 + t3754 + t3761;
  t3818 = -1.*t1796*t3781;
  t3863 = 0. + t3728 + t3818;
  t4219 = 0.340999127418*t603*t4208;
  t4278 = t888*t4265;
  t4320 = t4312*t1180;
  t4346 = t4219 + t4278 + t4320;
  t4428 = t607*t4208;
  t4434 = 0.340999127418*t603*t4265;
  t4453 = t4312*t1262;
  t4528 = t4428 + t4434 + t4453;
  t4350 = t1067*t4312;
  t4366 = t4208*t640;
  t4396 = t4265*t970;
  t4426 = t4350 + t4366 + t4396;
  t4427 = 0.707107*t4426;
  t2000 = 0.01153*t1992;
  t2903 = 0.00015*t2899;
  t3865 = -0.00017*t3863;
  t3953 = t2000 + t2903 + t3865;
  t5139 = t223*t3958*t1796;
  t5140 = -1.*t3988*t1674;
  t5170 = t5139 + t5140;
  t5057 = t3988*t223;
  t5065 = t3958*t1796*t1674;
  t5123 = t5057 + t5065;
  t5133 = t1440*t5123;
  t5261 = -1.*t5170*t276;
  t5264 = t5133 + t5261;
  t5313 = t1440*t5170;
  t5318 = t5123*t276;
  t5348 = t5313 + t5318;
  t5467 = t56*t1941*t3958;
  t5488 = t5264*t1044;
  t5510 = t5348*t1554;
  t5520 = t5467 + t5488 + t5510;
  t5298 = -0.340999127418*t475*t5264;
  t5363 = t1484*t5348;
  t5430 = t56*t3958*t1853;
  t5437 = t5298 + t5363 + t5430;
  t5452 = t825*t5264;
  t5457 = -0.340999127418*t475*t5348;
  t5458 = t56*t3958*t1876;
  t5462 = t5452 + t5457 + t5458;
  t4557 = 0.00015*t1992;
  t4586 = 0.03396*t2899;
  t4643 = 0.00018*t3863;
  t4674 = t4557 + t4586 + t4643;
  t5438 = 0.340999127418*t603*t5437;
  t5466 = t888*t5462;
  t5522 = t5520*t1180;
  t5528 = t5438 + t5466 + t5522;
  t5660 = t607*t5437;
  t5733 = 0.340999127418*t603*t5462;
  t5741 = t5520*t1262;
  t5743 = t5660 + t5733 + t5741;
  t4862 = -0.00017*t1992;
  t4904 = 0.00018*t2899;
  t4934 = 0.03335*t3863;
  t4957 = t4862 + t4904 + t4934;
  t5557 = t1067*t5520;
  t5600 = t5437*t640;
  t5606 = t5462*t970;
  t5646 = t5557 + t5600 + t5606;
  t5648 = 0.707107*t5646;
  t5865 = t56*t1440*t1674;
  t5884 = -1.*t56*t223*t276;
  t5887 = t5865 + t5884;
  t5919 = t56*t223*t1440;
  t5925 = t56*t1674*t276;
  t5930 = t5919 + t5925;
  t6026 = -1.*t1941*t1796;
  t6044 = t5887*t1044;
  t6053 = t5930*t1554;
  t6060 = t6026 + t6044 + t6053;
  t5890 = -0.340999127418*t475*t5887;
  t5935 = t1484*t5930;
  t5946 = -1.*t1796*t1853;
  t5963 = t5890 + t5935 + t5946;
  t5986 = t825*t5887;
  t5999 = -0.340999127418*t475*t5930;
  t6007 = -1.*t1796*t1876;
  t6018 = t5986 + t5999 + t6007;
  t5964 = 0.340999127418*t603*t5963;
  t6022 = t888*t6018;
  t6073 = t6060*t1180;
  t6135 = t5964 + t6022 + t6073;
  t6186 = t607*t5963;
  t6192 = 0.340999127418*t603*t6018;
  t6205 = t6060*t1262;
  t6263 = t6186 + t6192 + t6205;
  t6149 = t1067*t6060;
  t6154 = t5963*t640;
  t6156 = t6018*t970;
  t6168 = t6149 + t6154 + t6156;
  t6173 = 0.707107*t6168;
  t4348 = 0.259155*t4346;
  t4536 = -0.657905*t4528;
  t4539 = t4348 + t4427 + t4536;
  t6379 = -1.*t1674*t1654;
  t6382 = t223*t1738;
  t6385 = 0. + t6379 + t6382;
  t6399 = -1.*t1674*t2563;
  t6405 = t223*t2702;
  t6415 = 0. + t6399 + t6405;
  t6467 = -1.*t1674*t3493;
  t6474 = t223*t3627;
  t6484 = 0. + t6467 + t6474;
  t4683 = -0.930418*t4346;
  t4684 = -0.366501*t4528;
  t4801 = t4683 + t4684;
  t4970 = -0.259155*t4346;
  t4986 = 0.657905*t4528;
  t4996 = t4970 + t4427 + t4986;
  t6388 = 0.01153*t6385;
  t6416 = 0.00015*t6415;
  t6487 = -0.00017*t6484;
  t6492 = t6388 + t6416 + t6487;
  t5534 = 0.259155*t5528;
  t5746 = -0.657905*t5743;
  t5747 = t5534 + t5648 + t5746;
  t6526 = 0.00015*t6385;
  t6528 = 0.03396*t6415;
  t6530 = 0.00018*t6484;
  t6537 = t6526 + t6528 + t6530;
  t5753 = -0.930418*t5528;
  t5758 = -0.366501*t5743;
  t5761 = t5753 + t5758;
  t6542 = -0.00017*t6385;
  t6543 = 0.00018*t6415;
  t6548 = 0.03335*t6484;
  t6550 = t6542 + t6543 + t6548;
  t5772 = -0.259155*t5528;
  t5807 = 0.657905*t5743;
  t5827 = t5772 + t5648 + t5807;
  t6137 = 0.259155*t6135;
  t6267 = -0.657905*t6263;
  t6277 = t6137 + t6173 + t6267;
  t6310 = -0.930418*t6135;
  t6312 = -0.366501*t6263;
  t6314 = t6310 + t6312;
  t6350 = -0.259155*t6135;
  t6351 = 0.657905*t6263;
  t6363 = t6350 + t6173 + t6351;
  t6661 = 0.01153*t1972;
  t6674 = 0.00015*t2867;
  t6690 = -0.00017*t3781;
  t6696 = t6661 + t6674 + t6690;
  t6703 = 0.00015*t1972;
  t6725 = 0.03396*t2867;
  t6728 = 0.00018*t3781;
  t6740 = t6703 + t6725 + t6728;
  t6755 = -0.00017*t1972;
  t6759 = 0.00018*t2867;
  t6766 = 0.03335*t3781;
  t6771 = t6755 + t6759 + t6766;
  t6855 = -1.*t1853*t769;
  t6856 = -1.*t1876*t1017;
  t6861 = -1.*t1941*t1319;
  t6869 = 0. + t6855 + t6856 + t6861;
  t6882 = -1.*t2133*t1853;
  t6886 = -1.*t2285*t1876;
  t6889 = -1.*t1941*t2360;
  t6913 = 0. + t6882 + t6886 + t6889;
  t6948 = -1.*t1853*t3007;
  t6959 = -1.*t1876*t3113;
  t6970 = -1.*t1941*t3197;
  t6973 = 0. + t6948 + t6959 + t6970;
  t6871 = 0.01153*t6869;
  t6934 = 0.00015*t6913;
  t6993 = -0.00017*t6973;
  t6995 = t6871 + t6934 + t6993;
  t7006 = 0.00015*t6869;
  t7008 = 0.03396*t6913;
  t7009 = 0.00018*t6973;
  t7011 = t7006 + t7008 + t7009;
  t7023 = -0.00017*t6869;
  t7025 = 0.00018*t6913;
  t7026 = 0.03335*t6973;
  t7029 = t7023 + t7025 + t7026;
  t7066 = -0.930418*t2133;
  t7074 = 0.366501*t2285;
  t7075 = 0. + t7066 + t7074;
  t7084 = -0.930418*t769;
  t7086 = 0.366501*t1017;
  t7090 = 0. + t7084 + t7086;
  t7104 = -0.930418*t3007;
  t7127 = 0.366501*t3113;
  t7135 = 0. + t7104 + t7127;
  t7077 = 0.00015*t7075;
  t7094 = 0.01153*t7090;
  t7136 = -0.00017*t7135;
  t7152 = t7077 + t7094 + t7136;
  t7157 = 0.03396*t7075;
  t7163 = 0.00015*t7090;
  t7171 = 0.00018*t7135;
  t7172 = t7157 + t7163 + t7171;
  t7188 = 0.00018*t7075;
  t7189 = -0.00017*t7090;
  t7194 = 0.03335*t7135;
  t7198 = t7188 + t7189 + t7194;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=t3953*t4539 + t4674*t4801 + t4957*t4996;
  p_output1[10]=t3953*t5747 + t4674*t5761 + t4957*t5827;
  p_output1[11]=t3953*t6277 + t4674*t6314 + t4957*t6363;
  p_output1[12]=t4539*t6492 + t4801*t6537 + t4996*t6550;
  p_output1[13]=t5747*t6492 + t5761*t6537 + t5827*t6550;
  p_output1[14]=t6277*t6492 + t6314*t6537 + t6363*t6550;
  p_output1[15]=t4539*t6696 + t4801*t6740 + t4996*t6771;
  p_output1[16]=t5747*t6696 + t5761*t6740 + t5827*t6771;
  p_output1[17]=t6277*t6696 + t6314*t6740 + t6363*t6771;
  p_output1[18]=t4539*t6995 + t4801*t7011 + t4996*t7029;
  p_output1[19]=t5747*t6995 + t5761*t7011 + t5827*t7029;
  p_output1[20]=t6277*t6995 + t6314*t7011 + t6363*t7029;
  p_output1[21]=t4539*t7152 + t4801*t7172 + t4996*t7198;
  p_output1[22]=t5747*t7152 + t5761*t7172 + t5827*t7198;
  p_output1[23]=t6277*t7152 + t6314*t7172 + t6363*t7198;
  p_output1[24]=-0.00015000434995424998*t4539 - 0.03396002164623255*t4801 - 0.00017998792641570004*t4996;
  p_output1[25]=-0.00015000434995424998*t5747 - 0.03396002164623255*t5761 - 0.00017998792641570004*t5827;
  p_output1[26]=-0.00015000434995424998*t6277 - 0.03396002164623255*t6314 - 0.00017998792641570004*t6363;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jdq_AMWorld_left_hip_pitch_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
