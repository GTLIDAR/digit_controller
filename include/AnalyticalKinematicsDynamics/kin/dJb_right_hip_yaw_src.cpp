/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:09:31 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dJb_right_hip_yaw_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t334;
  double t402;
  double t346;
  double t351;
  double t309;
  double t468;
  double t476;
  double t293;
  double t365;
  double t521;
  double t546;
  double t580;
  double t623;
  double t630;
  double t638;
  double t16;
  double t205;
  double t710;
  double t548;
  double t1030;
  double t1067;
  double t1120;
  double t21;
  double t257;
  double t1512;
  double t1545;
  double t1547;
  double t1415;
  double t1457;
  double t1479;
  double t868;
  double t916;
  double t921;
  double t54;
  double t67;
  double t134;
  double t189;
  double t639;
  double t652;
  double t2016;
  double t2024;
  double t2033;
  double t2042;
  double t2072;
  double t1965;
  double t1971;
  double t1979;
  double t1986;
  double t1993;
  double t2150;
  double t2153;
  double t2160;
  double t2009;
  double t2078;
  double t2090;
  double t2469;
  double t2415;
  double t2437;
  double t2450;
  double t2466;
  double t2484;
  double t2630;
  double t2632;
  double t2637;
  double t2674;
  double t2690;
  double t2705;
  double t3015;
  double t3016;
  double t3021;
  double t2978;
  double t2983;
  double t2985;
  double t3287;
  double t3334;
  double t3224;
  double t3242;
  double t3262;
  double t3357;
  double t3359;
  double t3365;
  double t3279;
  double t3339;
  double t3343;
  double t3640;
  double t3560;
  double t3568;
  double t3569;
  double t3639;
  double t3647;
  double t3974;
  double t3990;
  double t4060;
  double t4128;
  double t4148;
  double t4149;
  double t4417;
  double t4419;
  double t4422;
  double t4366;
  double t4381;
  double t4384;
  double t218;
  double t679;
  double t690;
  double t801;
  double t806;
  double t811;
  double t1162;
  double t1172;
  double t1199;
  double t1316;
  double t1358;
  double t1495;
  double t1553;
  double t1600;
  double t1617;
  double t1629;
  double t1644;
  double t1646;
  double t1647;
  double t1696;
  double t1802;
  double t1805;
  double t1842;
  double t2143;
  double t2163;
  double t2179;
  double t2201;
  double t2221;
  double t2254;
  double t2489;
  double t2507;
  double t2538;
  double t2552;
  double t2662;
  double t2716;
  double t2718;
  double t2740;
  double t2829;
  double t2869;
  double t2888;
  double t3013;
  double t3042;
  double t3044;
  double t3064;
  double t3082;
  double t3091;
  double t3143;
  double t3169;
  double t3173;
  double t3353;
  double t3367;
  double t3377;
  double t3500;
  double t3502;
  double t3503;
  double t3678;
  double t3723;
  double t3807;
  double t3835;
  double t4070;
  double t4176;
  double t4178;
  double t4219;
  double t4270;
  double t4307;
  double t4314;
  double t4387;
  double t4429;
  double t4432;
  double t4463;
  double t4465;
  double t4470;
  double t4489;
  double t4502;
  double t5844;
  double t5855;
  double t5881;
  double t5913;
  double t5920;
  double t5921;
  double t5934;
  double t5942;
  double t5973;
  double t5975;
  double t5981;
  double t5982;
  double t5986;
  double t5989;
  double t6072;
  double t6123;
  double t5836;
  double t5969;
  double t6137;
  double t6181;
  double t6183;
  double t6201;
  double t6238;
  double t6161;
  double t6392;
  double t6395;
  double t6405;
  double t6352;
  double t6301;
  double t6304;
  double t6310;
  double t6315;
  double t6328;
  double t6332;
  double t6444;
  double t6455;
  double t6467;
  double t6476;
  double t6477;
  double t6482;
  double t6483;
  double t6515;
  double t6534;
  double t6546;
  double t6548;
  double t6553;
  double t6416;
  double t6174;
  double t6255;
  double t6263;
  double t6337;
  double t6360;
  double t6370;
  double t5825;
  double t6535;
  double t6556;
  double t6572;
  double t6588;
  double t6589;
  double t6598;
  double t6773;
  double t6735;
  double t6743;
  double t6753;
  double t6679;
  double t6684;
  double t6686;
  double t6688;
  double t6698;
  double t6717;
  double t6719;
  double t6725;
  double t5739;
  double t5757;
  double t5784;
  double t5583;
  double t5584;
  double t5596;
  double t6885;
  double t6902;
  double t6903;
  double t6906;
  double t5634;
  double t5658;
  double t5672;
  double t5796;
  double t5808;
  double t6979;
  double t6980;
  double t6992;
  double t7002;
  double t7003;
  double t7006;
  double t7021;
  double t7022;
  double t7024;
  double t7000;
  double t7007;
  double t7014;
  double t7047;
  double t7051;
  double t7052;
  double t7062;
  double t7063;
  double t7070;
  double t7020;
  double t7027;
  double t7035;
  double t7060;
  double t7084;
  double t7086;
  double t7094;
  double t7102;
  double t7105;
  double t7226;
  double t7227;
  double t7228;
  double t7236;
  double t7301;
  double t7304;
  double t7311;
  double t7312;
  double t5527;
  double t5545;
  double t5549;
  double t5485;
  double t5500;
  double t5512;
  double t7507;
  double t7512;
  double t7513;
  double t7515;
  double t7550;
  double t7551;
  double t7553;
  double t7555;
  double t5472;
  double t5475;
  double t5516;
  double t5552;
  double t5565;
  double t5576;
  double t5582;
  double t5619;
  double t5673;
  double t5674;
  double t5682;
  double t5696;
  double t5791;
  double t5811;
  double t5821;
  double t6278;
  double t6373;
  double t6623;
  double t6631;
  double t7744;
  double t7745;
  double t7746;
  double t7750;
  double t7751;
  double t7752;
  double t6756;
  double t6770;
  double t6811;
  double t6813;
  double t7039;
  double t7041;
  double t7151;
  double t7152;
  double t7318;
  double t7325;
  double t7355;
  double t7356;
  double t7852;
  double t7855;
  double t7856;
  double t7195;
  double t7197;
  double t7897;
  double t7898;
  double t7899;
  double t7261;
  double t7268;
  double t7444;
  double t7446;
  double t7465;
  double t7467;
  double t7571;
  double t7576;
  double t7602;
  double t7605;
  double t7943;
  double t7946;
  double t7947;
  double t7486;
  double t7488;
  double t7966;
  double t7967;
  double t7971;
  double t7520;
  double t7523;
  double t7700;
  double t7703;
  double t7721;
  double t7723;
  double t7811;
  double t7822;
  double t7826;
  double t7920;
  double t7923;
  double t7928;
  double t7991;
  double t7992;
  double t7999;
  double t8001;
  double t8226;
  double t8235;
  double t8278;
  t334 = Sin(var1[18]);
  t402 = Sin(var1[17]);
  t346 = -0.366501*t334;
  t351 = 0. + t346;
  t309 = Cos(var1[17]);
  t468 = 0.930418*t334;
  t476 = 0. + t468;
  t293 = Cos(var1[5]);
  t365 = t309*t351;
  t521 = -1.*t402*t476;
  t546 = t365 + t521;
  t580 = t402*t351;
  t623 = t309*t476;
  t630 = t580 + t623;
  t638 = Sin(var1[5]);
  t16 = Cos(var1[3]);
  t205 = Sin(var1[4]);
  t710 = Sin(var1[3]);
  t548 = t293*t546;
  t1030 = -1.*t402*t351;
  t1067 = -1.*t309*t476;
  t1120 = t1030 + t1067;
  t21 = Cos(var1[18]);
  t257 = Cos(var1[4]);
  t1512 = -0.366501*t309*t21;
  t1545 = -0.930418*t21*t402;
  t1547 = t1512 + t1545;
  t1415 = 0.930418*t309*t21;
  t1457 = -0.366501*t21*t402;
  t1479 = t1415 + t1457;
  t868 = t293*t630;
  t916 = -1.*t546*t638;
  t921 = t868 + t916;
  t54 = -1.*t21;
  t67 = 1. + t54;
  t134 = 1.000000637725*t67;
  t189 = -1. + t134;
  t639 = t630*t638;
  t652 = t548 + t639;
  t2016 = -0.134322983001*t67;
  t2024 = 1. + t2016;
  t2033 = -0.366501*t2024;
  t2042 = 0.3172717261340007*t67;
  t2072 = t2033 + t2042;
  t1965 = -0.8656776547239999*t67;
  t1971 = 1. + t1965;
  t1979 = 0.930418*t1971;
  t1986 = -0.12497652119782442*t67;
  t1993 = t1979 + t1986;
  t2150 = t309*t2072;
  t2153 = -1.*t1993*t402;
  t2160 = t2150 + t2153;
  t2009 = -1.*t309*t1993;
  t2078 = -1.*t2072*t402;
  t2090 = t2009 + t2078;
  t2469 = 0. + t2150 + t2153;
  t2415 = t309*t1993;
  t2437 = t2072*t402;
  t2450 = 0. + t2415 + t2437;
  t2466 = t293*t2450;
  t2484 = -1.*t2469*t638;
  t2630 = -0.366501*t351;
  t2632 = 0.930418*t476;
  t2637 = 0. + t2630 + t2632;
  t2674 = t293*t2469;
  t2690 = t2450*t638;
  t2705 = 0. + t2674 + t2690;
  t3015 = 0.3665012337268502*t309*t334;
  t3016 = 0.930418593350819*t402*t334;
  t3021 = t3015 + t3016;
  t2978 = -0.930418593350819*t309*t334;
  t2983 = 0.3665012337268502*t402*t334;
  t2985 = t2978 + t2983;
  t3287 = -0.930418*t2024;
  t3334 = t3287 + t1986;
  t3224 = -0.366501*t1971;
  t3242 = -0.3172717261340007*t67;
  t3262 = t3224 + t3242;
  t3357 = t309*t3334;
  t3359 = -1.*t3262*t402;
  t3365 = t3357 + t3359;
  t3279 = -1.*t309*t3262;
  t3339 = -1.*t3334*t402;
  t3343 = t3279 + t3339;
  t3640 = 0. + t3357 + t3359;
  t3560 = t309*t3262;
  t3568 = t3334*t402;
  t3569 = 0. + t3560 + t3568;
  t3639 = t293*t3569;
  t3647 = -1.*t3640*t638;
  t3974 = -0.930418*t351;
  t3990 = -0.366501*t476;
  t4060 = 0. + t3974 + t3990;
  t4128 = t293*t3640;
  t4148 = t3569*t638;
  t4149 = 0. + t4128 + t4148;
  t4417 = 1.3877787807814457e-17*t309*t334;
  t4419 = -5.551115123125783e-17*t402*t334;
  t4422 = t4417 + t4419;
  t4366 = 5.551115123125783e-17*t309*t334;
  t4381 = 1.3877787807814457e-17*t402*t334;
  t4384 = t4366 + t4381;
  t218 = -1.*t189*t205;
  t679 = t257*t652;
  t690 = t218 + t679;
  t801 = -1.*t293*t546;
  t806 = -1.*t630*t638;
  t811 = t801 + t806;
  t1162 = -1.*t1120*t638;
  t1172 = t548 + t1162;
  t1199 = t293*t1120;
  t1316 = t546*t638;
  t1358 = t1199 + t1316;
  t1495 = t293*t1479;
  t1553 = -1.*t1547*t638;
  t1600 = t1495 + t1553;
  t1617 = 1.000000637725*t257*t334;
  t1629 = t293*t1547;
  t1644 = t1479*t638;
  t1646 = t1629 + t1644;
  t1647 = t205*t1646;
  t1696 = t1617 + t1647;
  t1802 = t189*t257;
  t1805 = t205*t652;
  t1842 = t1802 + t1805;
  t2143 = t293*t2090;
  t2163 = t2160*t638;
  t2179 = t2143 + t2163;
  t2201 = t293*t2160;
  t2221 = -1.*t2090*t638;
  t2254 = t2201 + t2221;
  t2489 = t2466 + t2484;
  t2507 = -1.*t293*t2469;
  t2538 = -1.*t2450*t638;
  t2552 = t2507 + t2538;
  t2662 = -1.*t2637*t205;
  t2716 = t257*t2705;
  t2718 = t2662 + t2716;
  t2740 = 0. + t2466 + t2484;
  t2829 = t257*t2637;
  t2869 = t205*t2705;
  t2888 = 0. + t2829 + t2869;
  t3013 = t293*t2985;
  t3042 = -1.*t3021*t638;
  t3044 = t3013 + t3042;
  t3064 = 1.000000637725*t21*t257;
  t3082 = t293*t3021;
  t3091 = t2985*t638;
  t3143 = t3082 + t3091;
  t3169 = t205*t3143;
  t3173 = t3064 + t3169;
  t3353 = t293*t3343;
  t3367 = t3365*t638;
  t3377 = t3353 + t3367;
  t3500 = t293*t3365;
  t3502 = -1.*t3343*t638;
  t3503 = t3500 + t3502;
  t3678 = t3639 + t3647;
  t3723 = -1.*t293*t3640;
  t3807 = -1.*t3569*t638;
  t3835 = t3723 + t3807;
  t4070 = -1.*t4060*t205;
  t4176 = t257*t4149;
  t4178 = t4070 + t4176;
  t4219 = 0. + t3639 + t3647;
  t4270 = t257*t4060;
  t4307 = t205*t4149;
  t4314 = 0. + t4270 + t4307;
  t4387 = t293*t4384;
  t4429 = -1.*t4422*t638;
  t4432 = t4387 + t4429;
  t4463 = t293*t4422;
  t4465 = t4384*t638;
  t4470 = t4463 + t4465;
  t4489 = t205*t4470;
  t4502 = 0. + t4489;
  t5844 = 3.2909349868922137e-7*var1[18];
  t5855 = -0.086806*t2024;
  t5881 = -0.010945384129716011*t67;
  t5913 = -0.045000372235*t351;
  t5920 = 0.366501*t334;
  t5921 = 0. + t5920;
  t5934 = -0.04501*t5921;
  t5942 = t5844 + t5855 + t5881 + t5913 + t5934;
  t5973 = 1.296332362046933e-7*var1[18];
  t5975 = -0.123098*t1971;
  t5981 = -0.10837745171647402*t67;
  t5982 = -0.930418*t334;
  t5986 = 0. + t5982;
  t5989 = -0.04501*t5986;
  t6072 = -0.045000372235*t476;
  t6123 = t5973 + t5975 + t5981 + t5989 + t6072;
  t5836 = -0.091*t402;
  t5969 = t309*t5942;
  t6137 = -1.*t402*t6123;
  t6181 = -0.091*t309;
  t6183 = -1.*t402*t5942;
  t6201 = -1.*t309*t6123;
  t6238 = t6181 + t6183 + t6201;
  t6161 = t5836 + t5969 + t6137;
  t6392 = t293*t6238;
  t6395 = t6161*t638;
  t6405 = t6392 + t6395;
  t6352 = 0. + t5836 + t5969 + t6137;
  t6301 = -1.*t309;
  t6304 = 1. + t6301;
  t6310 = -0.091*t6304;
  t6315 = t402*t5942;
  t6328 = t309*t6123;
  t6332 = 0. + t6310 + t6315 + t6328;
  t6444 = -1.000000637725*t67;
  t6455 = 1. + t6444;
  t6467 = -0.04501*t6455;
  t6476 = -0.04500040093286238*t67;
  t6477 = -0.07877663122399998*t5986;
  t6482 = -0.086806*t351;
  t6483 = 0.031030906668*t5921;
  t6515 = -0.123098*t476;
  t6534 = 0. + t6467 + t6476 + t6477 + t6482 + t6483 + t6515;
  t6546 = t293*t6352;
  t6548 = t6332*t638;
  t6553 = 0. + t6546 + t6548;
  t6416 = 0. + t4070 + t4176;
  t6174 = t293*t6161;
  t6255 = -1.*t6238*t638;
  t6263 = t6174 + t6255;
  t6337 = t293*t6332;
  t6360 = -1.*t6352*t638;
  t6370 = 0. + t6337 + t6360;
  t5825 = 0. + t2662 + t2716;
  t6535 = -1.*t6534*t205;
  t6556 = t257*t6553;
  t6572 = 0. + t6535 + t6556;
  t6588 = t257*t6534;
  t6589 = t205*t6553;
  t6598 = 0. + t6588 + t6589;
  t6773 = t6337 + t6360;
  t6735 = -1.*t293*t6352;
  t6743 = -1.*t6332*t638;
  t6753 = t6735 + t6743;
  t6679 = t4219*t6370;
  t6684 = t6416*t6572;
  t6686 = t4314*t6598;
  t6688 = t6679 + t6684 + t6686;
  t6698 = -1.*t2740*t6370;
  t6717 = -1.*t5825*t6572;
  t6719 = -1.*t2888*t6598;
  t6725 = t6698 + t6717 + t6719;
  t5739 = -1.*t257*t4060;
  t5757 = -1.*t205*t4149;
  t5784 = t5739 + t5757;
  t5583 = -1.*t257*t2637;
  t5584 = -1.*t205*t2705;
  t5596 = t5583 + t5584;
  t6885 = t6535 + t6556;
  t6902 = -1.*t257*t6534;
  t6903 = -1.*t205*t6553;
  t6906 = t6902 + t6903;
  t5634 = -1.000000637725*t21*t205;
  t5658 = t257*t3143;
  t5672 = t5634 + t5658;
  t5796 = t257*t4470;
  t5808 = 0. + t5796;
  t6979 = 8.957845855771251e-6*t21;
  t6980 = -0.0018142637752590757*t334;
  t6992 = 1.296332362046933e-7 + t6979 + t6980;
  t7002 = -3.5285855002654964e-6*t21;
  t7003 = 0.0007146567326687947*t334;
  t7006 = 3.2909349868922137e-7 + t7002 + t7003;
  t7021 = -1.*t402*t6992;
  t7022 = t309*t7006;
  t7024 = t7021 + t7022;
  t7000 = t309*t6992;
  t7007 = t402*t7006;
  t7014 = t7000 + t7007;
  t7047 = 0.001949944836900308*t21;
  t7051 = 9.627771139865404e-6*t334;
  t7052 = t7047 + t7051;
  t7062 = t293*t7024;
  t7063 = t7014*t638;
  t7070 = t7062 + t7063;
  t7020 = t293*t7014;
  t7027 = -1.*t7024*t638;
  t7035 = t7020 + t7027;
  t7060 = -1.*t7052*t205;
  t7084 = t257*t7070;
  t7086 = t7060 + t7084;
  t7094 = t257*t7052;
  t7102 = t205*t7070;
  t7105 = t7094 + t7102;
  t7226 = -1.*t4219*t6370;
  t7227 = -1.*t6416*t6572;
  t7228 = -1.*t4314*t6598;
  t7236 = t7226 + t7227 + t7228;
  t7301 = t6370*t921;
  t7304 = t6572*t690;
  t7311 = t6598*t1842;
  t7312 = t7301 + t7304 + t7311;
  t5527 = -1.*t189*t257;
  t5545 = -1.*t205*t652;
  t5549 = t5527 + t5545;
  t5485 = -1.000000637725*t334*t205;
  t5500 = t257*t1646;
  t5512 = t5485 + t5500;
  t7507 = t2740*t6370;
  t7512 = t5825*t6572;
  t7513 = t2888*t6598;
  t7515 = t7507 + t7512 + t7513;
  t7550 = -1.*t6370*t921;
  t7551 = -1.*t6572*t690;
  t7553 = -1.*t6598*t1842;
  t7555 = t7550 + t7551 + t7553;
  t5472 = var2[5]*t257*t921;
  t5475 = var2[17]*t257*t1358;
  t5516 = var2[18]*t5512;
  t5552 = var2[4]*t5549;
  t5565 = t5472 + t5475 + t5516 + t5552;
  t5576 = var2[17]*t257*t2179;
  t5582 = var2[5]*t257*t2489;
  t5619 = var2[4]*t5596;
  t5673 = var2[18]*t5672;
  t5674 = t5576 + t5582 + t5619 + t5673;
  t5682 = var2[17]*t257*t3377;
  t5696 = var2[5]*t257*t3678;
  t5791 = var2[4]*t5784;
  t5811 = var2[18]*t5808;
  t5821 = t5682 + t5696 + t5791 + t5811;
  t6278 = t4219*t6263;
  t6373 = t3503*t6370;
  t6623 = -1.*t2740*t6263;
  t6631 = -1.*t2254*t6370;
  t7744 = t4060*t6534;
  t7745 = t4149*t6553;
  t7746 = t7744 + t7745 + t6679;
  t7750 = -1.*t6534*t2637;
  t7751 = -1.*t2705*t6553;
  t7752 = t7750 + t7751 + t6698;
  t6756 = t4219*t6753;
  t6770 = t3835*t6370;
  t6811 = -1.*t2740*t6753;
  t6813 = -1.*t2552*t6370;
  t7039 = t4219*t7035;
  t7041 = t6370*t4432;
  t7151 = -1.*t2740*t7035;
  t7152 = -1.*t6370*t3044;
  t7318 = -1.*t4219*t6753;
  t7325 = -1.*t3835*t6370;
  t7355 = t6370*t811;
  t7356 = t6753*t921;
  t7852 = -1.*t4060*t6534;
  t7855 = -1.*t4149*t6553;
  t7856 = t7852 + t7855 + t7226;
  t7195 = -1.*t4219*t6263;
  t7197 = -1.*t3503*t6370;
  t7897 = t189*t6534;
  t7898 = t6553*t652;
  t7899 = t7897 + t7898 + t7301;
  t7261 = t6370*t1172;
  t7268 = t6263*t921;
  t7444 = t1600*t6370;
  t7446 = t7035*t921;
  t7465 = -1.*t4219*t7035;
  t7467 = -1.*t6370*t4432;
  t7571 = t2740*t6753;
  t7576 = t2552*t6370;
  t7602 = -1.*t6370*t811;
  t7605 = -1.*t6753*t921;
  t7943 = t6534*t2637;
  t7946 = t2705*t6553;
  t7947 = t7943 + t7946 + t7507;
  t7486 = t2740*t6263;
  t7488 = t2254*t6370;
  t7966 = -1.*t189*t6534;
  t7967 = -1.*t6553*t652;
  t7971 = t7966 + t7967 + t7550;
  t7520 = -1.*t6370*t1172;
  t7523 = -1.*t6263*t921;
  t7700 = -1.*t1600*t6370;
  t7703 = -1.*t7035*t921;
  t7721 = t2740*t7035;
  t7723 = t6370*t3044;
  t7811 = t4060*t7052;
  t7822 = -1.000000637725*t21*t6534;
  t7826 = -1.*t2637*t7052;
  t7920 = t189*t7052;
  t7923 = 1.000000637725*t6534*t334;
  t7928 = -1.*t4060*t7052;
  t7991 = -1.*t189*t7052;
  t7992 = -1.000000637725*t6534*t334;
  t7999 = 1.000000637725*t21*t6534;
  t8001 = t2637*t7052;
  t8226 = t3974 + t3990;
  t8235 = t2630 + t2632;
  t8278 = -1. + t134;
  p_output1[0]=(-1.*t1842*t710 - 1.*t16*t921)*var2[3] + t16*t690*var2[4] + (-1.*t710*t811 + t16*t205*t921)*var2[5] + (t1358*t16*t205 - 1.*t1172*t710)*var2[17] + (t16*t1696 - 1.*t1600*t710)*var2[18];
  p_output1[1]=(-1.*t16*t2740 - 1.*t2888*t710)*var2[3] + t16*t2718*var2[4] + (t16*t205*t2489 - 1.*t2552*t710)*var2[5] + (t16*t205*t2179 - 1.*t2254*t710)*var2[17] + (t16*t3173 - 1.*t3044*t710)*var2[18];
  p_output1[2]=(-1.*t16*t4219 - 1.*t4314*t710)*var2[3] + t16*t4178*var2[4] + (t16*t205*t3678 - 1.*t3835*t710)*var2[5] + (t16*t205*t3377 - 1.*t3503*t710)*var2[17] + (t16*t4502 - 1.*t4432*t710)*var2[18];
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=(t16*t1842 - 1.*t710*t921)*var2[3] + t690*t710*var2[4] + (t16*t811 + t205*t710*t921)*var2[5] + (t1172*t16 + t1358*t205*t710)*var2[17] + (t16*t1600 + t1696*t710)*var2[18];
  p_output1[7]=(t16*t2888 - 1.*t2740*t710)*var2[3] + t2718*t710*var2[4] + (t16*t2552 + t205*t2489*t710)*var2[5] + (t16*t2254 + t205*t2179*t710)*var2[17] + (t16*t3044 + t3173*t710)*var2[18];
  p_output1[8]=(t16*t4314 - 1.*t4219*t710)*var2[3] + t4178*t710*var2[4] + (t16*t3835 + t205*t3678*t710)*var2[5] + (t16*t3503 + t205*t3377*t710)*var2[17] + (t16*t4432 + t4502*t710)*var2[18];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t5565;
  p_output1[13]=t5674;
  p_output1[14]=t5821;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(t5596*t6688 + t5784*t6725 + t6416*(-1.*t5596*t6572 - 1.*t2718*t6598 - 1.*t2888*t6885 - 1.*t5825*t6906) + t5825*(t5784*t6572 + t4178*t6598 + t4314*t6885 + t6416*t6906))*var2[4] + (t2489*t257*t6688 + t257*t3678*t6725 + t5825*(t257*t3678*t6572 + t205*t3678*t6598 + t6756 + t6770 + t205*t4314*t6773 + t257*t6416*t6773) + t6416*(-1.*t2489*t257*t6572 - 1.*t205*t2489*t6598 - 1.*t205*t2888*t6773 - 1.*t257*t5825*t6773 + t6811 + t6813))*var2[5] + (t5825*(t6278 + t6373 + t205*t4314*t6405 + t257*t6405*t6416 + t257*t3377*t6572 + t205*t3377*t6598) + t6416*(-1.*t205*t2888*t6405 - 1.*t257*t5825*t6405 - 1.*t2179*t257*t6572 - 1.*t205*t2179*t6598 + t6623 + t6631) + t2179*t257*t6688 + t257*t3377*t6725)*var2[17] + (t5672*t6688 + t5808*t6725 + t5825*(t5808*t6572 + t4502*t6598 + t7039 + t7041 + t6416*t7086 + t4314*t7105) + t6416*(-1.*t5672*t6572 - 1.*t3173*t6598 - 1.*t5825*t7086 - 1.*t2888*t7105 + t7151 + t7152))*var2[18];
  p_output1[19]=(t690*(-1.*t5784*t6572 - 1.*t4178*t6598 - 1.*t4314*t6885 - 1.*t6416*t6906) + t6416*(t5549*t6572 + t1842*t6885 + t6598*t690 + t690*t6906) + t5549*t7236 + t5784*t7312)*var2[4] + (t257*t3678*t7312 + t690*(-1.*t257*t3678*t6572 - 1.*t205*t3678*t6598 - 1.*t205*t4314*t6773 - 1.*t257*t6416*t6773 + t7318 + t7325) + t257*t7236*t921 + t6416*(t1842*t205*t6773 + t257*t6773*t690 + t7355 + t7356 + t257*t6572*t921 + t205*t6598*t921))*var2[5] + (t690*(-1.*t205*t4314*t6405 - 1.*t257*t6405*t6416 - 1.*t257*t3377*t6572 - 1.*t205*t3377*t6598 + t7195 + t7197) + t1358*t257*t7236 + t6416*(t1842*t205*t6405 + t1358*t257*t6572 + t1358*t205*t6598 + t257*t6405*t690 + t7261 + t7268) + t257*t3377*t7312)*var2[17] + (t5512*t7236 + t5808*t7312 + t6416*(t5512*t6572 + t1696*t6598 + t690*t7086 + t1842*t7105 + t7444 + t7446) + t690*(-1.*t5808*t6572 - 1.*t4502*t6598 - 1.*t6416*t7086 - 1.*t4314*t7105 + t7465 + t7467))*var2[18];
  p_output1[20]=(t690*(t5596*t6572 + t2718*t6598 + t2888*t6885 + t5825*t6906) + t5825*(-1.*t5549*t6572 - 1.*t1842*t6885 - 1.*t6598*t690 - 1.*t690*t6906) + t5549*t7515 + t5596*t7555)*var2[4] + (t2489*t257*t7555 + t690*(t2489*t257*t6572 + t205*t2489*t6598 + t205*t2888*t6773 + t257*t5825*t6773 + t7571 + t7576) + t257*t7515*t921 + t5825*(-1.*t1842*t205*t6773 - 1.*t257*t6773*t690 + t7602 + t7605 - 1.*t257*t6572*t921 - 1.*t205*t6598*t921))*var2[5] + (t690*(t205*t2888*t6405 + t257*t5825*t6405 + t2179*t257*t6572 + t205*t2179*t6598 + t7486 + t7488) + t1358*t257*t7515 + t5825*(-1.*t1842*t205*t6405 - 1.*t1358*t257*t6572 - 1.*t1358*t205*t6598 - 1.*t257*t6405*t690 + t7520 + t7523) + t2179*t257*t7555)*var2[17] + (t5512*t7515 + t5672*t7555 + t5825*(-1.*t5512*t6572 - 1.*t1696*t6598 - 1.*t690*t7086 - 1.*t1842*t7105 + t7700 + t7703) + t690*(t5672*t6572 + t3173*t6598 + t5825*t7086 + t2888*t7105 + t7721 + t7723))*var2[18];
  p_output1[21]=t5565;
  p_output1[22]=t5674;
  p_output1[23]=t5821;
  p_output1[24]=(t2740*(t3678*t6553 + t6756 + t6770 + t4149*t6773) + t4219*(-1.*t2489*t6553 - 1.*t2705*t6773 + t6811 + t6813) + t2552*t7746 + t3835*t7752)*var2[5] + (t2740*(t6278 + t6373 + t4149*t6405 + t3377*t6553) + t4219*(-1.*t2705*t6405 - 1.*t2179*t6553 + t6623 + t6631) + t2254*t7746 + t3503*t7752)*var2[17] + (t3044*t7746 + t4432*t7752 + t2740*(0. + t4470*t6553 + t7039 + t7041 + t4149*t7070 + t7811) + t4219*(-1.*t3143*t6553 - 1.*t2705*t7070 + t7151 + t7152 + t7822 + t7826))*var2[18];
  p_output1[25]=(t3835*t7899 + t7856*t811 + (-1.*t3678*t6553 - 1.*t4149*t6773 + t7318 + t7325)*t921 + t4219*(t652*t6773 + t7355 + t7356 + t6553*t921))*var2[5] + (t4219*(t6405*t652 + t1358*t6553 + t7261 + t7268) + t1172*t7856 + t3503*t7899 + (-1.*t4149*t6405 - 1.*t3377*t6553 + t7195 + t7197)*t921)*var2[17] + (t1600*t7856 + t4432*t7899 + t4219*(t1646*t6553 + t652*t7070 + t7444 + t7446 + t7920 + t7923) + (0. - 1.*t4470*t6553 - 1.*t4149*t7070 + t7465 + t7467 + t7928)*t921)*var2[18];
  p_output1[26]=(t2552*t7971 + t7947*t811 + (t2489*t6553 + t2705*t6773 + t7571 + t7576)*t921 + t2740*(-1.*t652*t6773 + t7602 + t7605 - 1.*t6553*t921))*var2[5] + (t2740*(-1.*t6405*t652 - 1.*t1358*t6553 + t7520 + t7523) + t1172*t7947 + t2254*t7971 + (t2705*t6405 + t2179*t6553 + t7486 + t7488)*t921)*var2[17] + (t1600*t7947 + t3044*t7971 + t2740*(-1.*t1646*t6553 - 1.*t652*t7070 + t7700 + t7703 + t7991 + t7992) + (t3143*t6553 + t2705*t7070 + t7721 + t7723 + t7999 + t8001)*t921)*var2[18];
  p_output1[27]=t811*var2[5] + t1172*var2[17] + t1600*var2[18];
  p_output1[28]=t2552*var2[5] + t2254*var2[17] + t3044*var2[18];
  p_output1[29]=t3835*var2[5] + t3503*var2[17] + t4432*var2[18];
  p_output1[30]=(t4060*(-1.*t2450*t6161 - 1.*t2469*t6238 - 1.*t2160*t6332 - 1.*t2090*t6352) + t2637*(t3569*t6161 + t3640*t6238 + t3365*t6332 + t3343*t6352))*var2[17] + (0. + 1.000000637725*t21*(t3569*t6332 + t3640*t6352 + t7744) + t2637*(0. + t4384*t6332 + t4422*t6352 + t3569*t7014 + t3640*t7024 + t7811) + t4060*(-1.*t2985*t6332 - 1.*t3021*t6352 - 1.*t2450*t7014 - 1.*t2469*t7024 + t7822 + t7826))*var2[18];
  p_output1[31]=(t4060*(t546*t6238 + t6161*t630 + t546*t6332 + t1120*t6352) + t189*(-1.*t3569*t6161 - 1.*t3640*t6238 - 1.*t3365*t6332 - 1.*t3343*t6352))*var2[17] + (0. + 1.000000637725*t334*(-1.*t3569*t6332 - 1.*t3640*t6352 + t7852) + t4060*(t1479*t6332 + t1547*t6352 + t630*t7014 + t546*t7024 + t7920 + t7923) + t189*(0. - 1.*t4384*t6332 - 1.*t4422*t6352 - 1.*t3569*t7014 - 1.*t3640*t7024 + t7928))*var2[18];
  p_output1[32]=(t2637*(-1.*t546*t6238 - 1.*t6161*t630 - 1.*t546*t6332 - 1.*t1120*t6352) + t189*(t2450*t6161 + t2469*t6238 + t2160*t6332 + t2090*t6352))*var2[17] + (1.000000637725*t334*(t2450*t6332 + t2469*t6352 + t7943) + 1.000000637725*t21*(-1.*t630*t6332 - 1.*t546*t6352 + t7966) + t2637*(-1.*t1479*t6332 - 1.*t1547*t6352 - 1.*t630*t7014 - 1.*t546*t7024 + t7991 + t7992) + t189*(t2985*t6332 + t3021*t6352 + t2450*t7014 + t2469*t7024 + t7999 + t8001))*var2[18];
  p_output1[33]=1.000000637725*t334*var2[18];
  p_output1[34]=1.000000637725*t21*var2[18];
  p_output1[35]=0.;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=(0. + 0.033351591*t21 - 1.000000637725*t21*(t3334*t5942 + t3262*t6123 + t6534*t8226) - 1.*(0. + 1.3877787807814457e-17*t334*t5942 + 5.551115123125783e-17*t334*t6123 + t3262*t6992 + t3334*t7006 + t7052*t8226)*t8235 - 1.*t8226*(-0.3665012337268502*t334*t5942 + 0.930418593350819*t334*t6123 - 1.*t1993*t6992 - 1.*t2072*t7006 + t7822 - 1.*t7052*t8235))*var2[18];
  p_output1[103]=(0. - 0.03335161226914336*t334 - 1.000000637725*t334*(-1.*t3334*t5942 - 1.*t3262*t6123 - 1.*t6534*t8226) - 1.*(0. - 1.3877787807814457e-17*t334*t5942 - 5.551115123125783e-17*t334*t6123 - 1.*t3262*t6992 - 1.*t3334*t7006 - 1.*t7052*t8226)*t8278 - 1.*t8226*(-0.366501*t21*t5942 + 0.930418*t21*t6123 + t476*t6992 + t351*t7006 + t7923 + t7052*t8278))*var2[18];
  p_output1[104]=(-1.2628786905111155e-18*t334 - 1.000000637725*t334*(t2072*t5942 + t1993*t6123 + t6534*t8235) - 1.*(0.3665012337268502*t334*t5942 - 0.930418593350819*t334*t6123 + t1993*t6992 + t2072*t7006 + t7999 + t7052*t8235)*t8278 - 1.000000637725*t21*(-1.*t351*t5942 - 1.*t476*t6123 - 1.*t6534*t8278) - 1.*t8235*(0.366501*t21*t5942 - 0.930418*t21*t6123 - 1.*t476*t6992 - 1.*t351*t7006 + t7992 - 1.*t7052*t8278))*var2[18];
  p_output1[105]=-1.000000637725*t334*var2[18];
  p_output1[106]=-1.000000637725*t21*var2[18];
  p_output1[107]=0.;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void dJb_right_hip_yaw_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
