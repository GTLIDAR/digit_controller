/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:20:38 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "T_right_toe_roll_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t156;
  double t231;
  double t239;
  double t232;
  double t244;
  double t215;
  double t216;
  double t220;
  double t272;
  double t236;
  double t248;
  double t250;
  double t229;
  double t282;
  double t283;
  double t287;
  double t118;
  double t161;
  double t167;
  double t262;
  double t289;
  double t314;
  double t341;
  double t352;
  double t360;
  double t436;
  double t442;
  double t443;
  double t183;
  double t212;
  double t213;
  double t317;
  double t334;
  double t337;
  double t367;
  double t369;
  double t387;
  double t388;
  double t412;
  double t415;
  double t416;
  double t417;
  double t418;
  double t424;
  double t456;
  double t457;
  double t464;
  double t465;
  double t470;
  double t474;
  double t476;
  double t478;
  double t479;
  double t486;
  double t546;
  double t549;
  double t550;
  double t82;
  double t95;
  double t119;
  double t133;
  double t378;
  double t382;
  double t384;
  double t427;
  double t453;
  double t455;
  double t492;
  double t494;
  double t551;
  double t552;
  double t553;
  double t554;
  double t561;
  double t566;
  double t584;
  double t588;
  double t650;
  double t653;
  double t657;
  double t658;
  double t674;
  double t691;
  double t692;
  double t697;
  double t794;
  double t798;
  double t801;
  double t99;
  double t103;
  double t512;
  double t631;
  double t635;
  double t644;
  double t704;
  double t706;
  double t721;
  double t723;
  double t738;
  double t762;
  double t768;
  double t787;
  double t788;
  double t791;
  double t836;
  double t838;
  double t852;
  double t854;
  double t862;
  double t871;
  double t878;
  double t883;
  double t888;
  double t892;
  double t920;
  double t924;
  double t927;
  double t52;
  double t58;
  double t60;
  double t75;
  double t86;
  double t92;
  double t707;
  double t712;
  double t714;
  double t793;
  double t822;
  double t833;
  double t912;
  double t914;
  double t929;
  double t930;
  double t933;
  double t937;
  double t940;
  double t944;
  double t948;
  double t993;
  double t1009;
  double t1015;
  double t1016;
  double t1018;
  double t1019;
  double t1030;
  double t1035;
  double t1037;
  double t67;
  double t78;
  double t81;
  double t917;
  double t998;
  double t1002;
  double t1005;
  double t1040;
  double t1041;
  double t64;
  double t1075;
  double t1081;
  double t1087;
  double t1094;
  double t1104;
  double t1105;
  double t1107;
  double t1117;
  double t1158;
  double t1163;
  double t1166;
  double t1170;
  double t1187;
  double t1191;
  double t1197;
  double t1199;
  double t1201;
  double t1212;
  double t68;
  double t74;
  double t1311;
  double t1314;
  double t1315;
  double t1322;
  double t1325;
  double t1330;
  double t1317;
  double t1333;
  double t1336;
  double t1341;
  double t1342;
  double t1343;
  double t1307;
  double t1339;
  double t1344;
  double t1348;
  double t1361;
  double t1362;
  double t1377;
  double t1384;
  double t1414;
  double t1429;
  double t1435;
  double t1437;
  double t1354;
  double t1408;
  double t1440;
  double t1442;
  double t1445;
  double t1447;
  double t1448;
  double t1453;
  double t1465;
  double t1466;
  double t1474;
  double t1476;
  double t1443;
  double t1454;
  double t1478;
  double t1479;
  double t1489;
  double t1495;
  double t1497;
  double t1503;
  double t1508;
  double t1513;
  double t1515;
  double t1524;
  double t1052;
  double t1055;
  double t1484;
  double t1507;
  double t1526;
  double t1529;
  double t1537;
  double t1540;
  double t1542;
  double t1549;
  double t1559;
  double t1564;
  double t1573;
  double t1578;
  double t1121;
  double t1139;
  double t1156;
  double t1263;
  double t1264;
  double t1536;
  double t1553;
  double t1579;
  double t1582;
  double t1280;
  double t1281;
  double t1588;
  double t1591;
  double t1598;
  double t1599;
  double t1292;
  double t1294;
  double t1297;
  double t1603;
  double t1611;
  double t1629;
  double t1630;
  double t1675;
  double t1676;
  double t1677;
  double t1679;
  double t1681;
  double t1683;
  double t1667;
  double t1678;
  double t1685;
  double t1686;
  double t1701;
  double t1709;
  double t1712;
  double t1714;
  double t1721;
  double t1722;
  double t1723;
  double t1728;
  double t1698;
  double t1715;
  double t1733;
  double t1734;
  double t1752;
  double t1753;
  double t1754;
  double t1756;
  double t1762;
  double t1764;
  double t1766;
  double t1768;
  double t1749;
  double t1758;
  double t1770;
  double t1776;
  double t1785;
  double t1788;
  double t1790;
  double t1794;
  double t1807;
  double t1812;
  double t1813;
  double t1817;
  double t1779;
  double t1803;
  double t1820;
  double t1829;
  double t1833;
  double t1835;
  double t1837;
  double t1841;
  double t1844;
  double t1851;
  double t1853;
  double t1855;
  double t1832;
  double t1843;
  double t1869;
  double t1875;
  double t1881;
  double t1883;
  double t1884;
  double t1888;
  double t1893;
  double t1896;
  double t1900;
  double t1902;
  double t1051;
  double t1118;
  double t1240;
  double t1244;
  double t1275;
  double t1291;
  double t1299;
  double t1303;
  double t1949;
  double t1954;
  double t1958;
  double t1959;
  double t1965;
  double t1967;
  double t1584;
  double t1600;
  double t1631;
  double t1632;
  double t1635;
  double t1640;
  double t1643;
  double t1645;
  double t1876;
  double t1889;
  double t1911;
  double t1913;
  double t1920;
  double t1921;
  double t1922;
  double t1934;
  double t1955;
  double t1962;
  double t1968;
  double t1972;
  double t1990;
  double t1993;
  double t1995;
  double t2004;
  double t2018;
  double t2020;
  double t2021;
  double t2022;
  double t2349;
  double t2362;
  double t2378;
  double t2090;
  double t2091;
  double t2093;
  double t2094;
  double t2097;
  double t2098;
  double t2118;
  double t2119;
  double t2122;
  double t2131;
  double t2135;
  double t2136;
  double t2137;
  double t2138;
  double t2142;
  double t2144;
  double t2152;
  double t2156;
  double t2160;
  double t2161;
  double t2163;
  double t2164;
  double t2179;
  double t2181;
  double t2186;
  double t2193;
  double t2201;
  double t2204;
  double t2210;
  double t2211;
  double t2214;
  double t2215;
  double t2216;
  double t2217;
  double t2233;
  double t2239;
  double t2244;
  double t2251;
  double t2253;
  double t2254;
  double t2256;
  double t2257;
  double t2261;
  double t2262;
  double t2266;
  double t2267;
  double t2269;
  double t2270;
  double t2271;
  double t2272;
  double t2279;
  double t2281;
  double t2282;
  double t2285;
  double t2291;
  double t2293;
  double t2297;
  double t2300;
  double t2311;
  double t2314;
  double t2315;
  double t2316;
  double t2334;
  double t2337;
  double t2340;
  double t2341;
  double t2346;
  double t2347;
  double t2355;
  double t2357;
  double t2363;
  double t2366;
  double t2369;
  double t2371;
  double t2375;
  double t2382;
  double t2384;
  double t2385;
  double t2386;
  double t2387;
  double t2392;
  double t2393;
  double t2394;
  double t2396;
  double t2402;
  double t2409;
  double t2412;
  t156 = Cos(var1[3]);
  t231 = Cos(var1[5]);
  t239 = Sin(var1[3]);
  t232 = Sin(var1[4]);
  t244 = Sin(var1[5]);
  t215 = Cos(var1[18]);
  t216 = -1.*t215;
  t220 = 1. + t216;
  t272 = Cos(var1[17]);
  t236 = t156*t231*t232;
  t248 = t239*t244;
  t250 = t236 + t248;
  t229 = Sin(var1[17]);
  t282 = -1.*t231*t239;
  t283 = t156*t232*t244;
  t287 = t282 + t283;
  t118 = Sin(var1[19]);
  t161 = Cos(var1[4]);
  t167 = Sin(var1[18]);
  t262 = -1.*t229*t250;
  t289 = t272*t287;
  t314 = t262 + t289;
  t341 = t272*t250;
  t352 = t229*t287;
  t360 = t341 + t352;
  t436 = Cos(var1[19]);
  t442 = -1.*t436;
  t443 = 1. + t442;
  t183 = -0.366501*t167;
  t212 = 0. + t183;
  t213 = t156*t161*t212;
  t317 = 0.340999127418*t220*t314;
  t334 = -0.134322983001*t220;
  t337 = 1. + t334;
  t367 = t337*t360;
  t369 = t213 + t317 + t367;
  t387 = 0.930418*t167;
  t388 = 0. + t387;
  t412 = t156*t161*t388;
  t415 = -0.8656776547239999*t220;
  t416 = 1. + t415;
  t417 = t416*t314;
  t418 = 0.340999127418*t220*t360;
  t424 = t412 + t417 + t418;
  t456 = -1.000000637725*t220;
  t457 = 1. + t456;
  t464 = t457*t156*t161;
  t465 = -0.930418*t167;
  t470 = 0. + t465;
  t474 = t470*t314;
  t476 = 0.366501*t167;
  t478 = 0. + t476;
  t479 = t478*t360;
  t486 = t464 + t474 + t479;
  t546 = Cos(var1[20]);
  t549 = -1.*t546;
  t550 = 1. + t549;
  t82 = Sin(var1[21]);
  t95 = Sin(var1[20]);
  t119 = 0.930418*t118;
  t133 = 0. + t119;
  t378 = t133*t369;
  t382 = 0.366501*t118;
  t384 = 0. + t382;
  t427 = t384*t424;
  t453 = -1.000000637725*t443;
  t455 = 1. + t453;
  t492 = t455*t486;
  t494 = t378 + t427 + t492;
  t551 = -0.8656776547239999*t443;
  t552 = 1. + t551;
  t553 = t552*t369;
  t554 = -0.340999127418*t443*t424;
  t561 = -0.930418*t118;
  t566 = 0. + t561;
  t584 = t566*t486;
  t588 = t553 + t554 + t584;
  t650 = -0.340999127418*t443*t369;
  t653 = -0.134322983001*t443;
  t657 = 1. + t653;
  t658 = t657*t424;
  t674 = -0.366501*t118;
  t691 = 0. + t674;
  t692 = t691*t486;
  t697 = t650 + t658 + t692;
  t794 = Cos(var1[21]);
  t798 = -1.*t794;
  t801 = 1. + t798;
  t99 = 0.366501*t95;
  t103 = 0. + t99;
  t512 = t103*t494;
  t631 = -0.340999127418*t550*t588;
  t635 = -0.134322983001*t550;
  t644 = 1. + t635;
  t704 = t644*t697;
  t706 = t512 + t631 + t704;
  t721 = 0.930418*t95;
  t723 = 0. + t721;
  t738 = t723*t494;
  t762 = -0.8656776547239999*t550;
  t768 = 1. + t762;
  t787 = t768*t588;
  t788 = -0.340999127418*t550*t697;
  t791 = t738 + t787 + t788;
  t836 = -1.000000637725*t550;
  t838 = 1. + t836;
  t852 = t838*t494;
  t854 = -0.930418*t95;
  t862 = 0. + t854;
  t871 = t862*t588;
  t878 = -0.366501*t95;
  t883 = 0. + t878;
  t888 = t883*t697;
  t892 = t852 + t871 + t888;
  t920 = Cos(var1[22]);
  t924 = -1.*t920;
  t927 = 1. + t924;
  t52 = Cos(var1[23]);
  t58 = -1.*t52;
  t60 = 1. + t58;
  t75 = Sin(var1[22]);
  t86 = -0.366501*t82;
  t92 = 0. + t86;
  t707 = t92*t706;
  t712 = -0.930418*t82;
  t714 = 0. + t712;
  t793 = t714*t791;
  t822 = -1.000000637725*t801;
  t833 = 1. + t822;
  t912 = t833*t892;
  t914 = t707 + t793 + t912;
  t929 = -0.134322983001*t801;
  t930 = 1. + t929;
  t933 = t930*t706;
  t937 = -0.340999127418*t801*t791;
  t940 = 0.366501*t82;
  t944 = 0. + t940;
  t948 = t944*t892;
  t993 = t933 + t937 + t948;
  t1009 = -0.340999127418*t801*t706;
  t1015 = -0.8656776547239999*t801;
  t1016 = 1. + t1015;
  t1018 = t1016*t791;
  t1019 = 0.930418*t82;
  t1030 = 0. + t1019;
  t1035 = t1030*t892;
  t1037 = t1009 + t1018 + t1035;
  t67 = Sin(var1[23]);
  t78 = 0.930418*t75;
  t81 = 0. + t78;
  t917 = t81*t914;
  t998 = -0.340999127418*t927*t993;
  t1002 = -0.8656776547239999*t927;
  t1005 = 1. + t1002;
  t1040 = t1005*t1037;
  t1041 = t917 + t998 + t1040;
  t64 = 0.120666640478*t60;
  t1075 = 0.366501*t75;
  t1081 = 0. + t1075;
  t1087 = t1081*t914;
  t1094 = -0.134322983001*t927;
  t1104 = 1. + t1094;
  t1105 = t1104*t993;
  t1107 = -0.340999127418*t927*t1037;
  t1117 = t1087 + t1105 + t1107;
  t1158 = -1.000000637725*t927;
  t1163 = 1. + t1158;
  t1166 = t1163*t914;
  t1170 = -0.366501*t75;
  t1187 = 0. + t1170;
  t1191 = t1187*t993;
  t1197 = -0.930418*t75;
  t1199 = 0. + t1197;
  t1201 = t1199*t1037;
  t1212 = t1166 + t1191 + t1201;
  t68 = 0.803828*t67;
  t74 = t64 + t68;
  t1311 = t231*t239*t232;
  t1314 = -1.*t156*t244;
  t1315 = t1311 + t1314;
  t1322 = t156*t231;
  t1325 = t239*t232*t244;
  t1330 = t1322 + t1325;
  t1317 = -1.*t229*t1315;
  t1333 = t272*t1330;
  t1336 = t1317 + t1333;
  t1341 = t272*t1315;
  t1342 = t229*t1330;
  t1343 = t1341 + t1342;
  t1307 = t161*t212*t239;
  t1339 = 0.340999127418*t220*t1336;
  t1344 = t337*t1343;
  t1348 = t1307 + t1339 + t1344;
  t1361 = t161*t388*t239;
  t1362 = t416*t1336;
  t1377 = 0.340999127418*t220*t1343;
  t1384 = t1361 + t1362 + t1377;
  t1414 = t457*t161*t239;
  t1429 = t470*t1336;
  t1435 = t478*t1343;
  t1437 = t1414 + t1429 + t1435;
  t1354 = t133*t1348;
  t1408 = t384*t1384;
  t1440 = t455*t1437;
  t1442 = t1354 + t1408 + t1440;
  t1445 = t552*t1348;
  t1447 = -0.340999127418*t443*t1384;
  t1448 = t566*t1437;
  t1453 = t1445 + t1447 + t1448;
  t1465 = -0.340999127418*t443*t1348;
  t1466 = t657*t1384;
  t1474 = t691*t1437;
  t1476 = t1465 + t1466 + t1474;
  t1443 = t103*t1442;
  t1454 = -0.340999127418*t550*t1453;
  t1478 = t644*t1476;
  t1479 = t1443 + t1454 + t1478;
  t1489 = t723*t1442;
  t1495 = t768*t1453;
  t1497 = -0.340999127418*t550*t1476;
  t1503 = t1489 + t1495 + t1497;
  t1508 = t838*t1442;
  t1513 = t862*t1453;
  t1515 = t883*t1476;
  t1524 = t1508 + t1513 + t1515;
  t1052 = -0.952469601425*t60;
  t1055 = 1. + t1052;
  t1484 = t92*t1479;
  t1507 = t714*t1503;
  t1526 = t833*t1524;
  t1529 = t1484 + t1507 + t1526;
  t1537 = t930*t1479;
  t1540 = -0.340999127418*t801*t1503;
  t1542 = t944*t1524;
  t1549 = t1537 + t1540 + t1542;
  t1559 = -0.340999127418*t801*t1479;
  t1564 = t1016*t1503;
  t1573 = t1030*t1524;
  t1578 = t1559 + t1564 + t1573;
  t1121 = 0.175248972904*t60;
  t1139 = -0.553471*t67;
  t1156 = t1121 + t1139;
  t1263 = -0.693671301908*t60;
  t1264 = 1. + t1263;
  t1536 = t81*t1529;
  t1553 = -0.340999127418*t927*t1549;
  t1579 = t1005*t1578;
  t1582 = t1536 + t1553 + t1579;
  t1280 = -0.803828*t67;
  t1281 = t64 + t1280;
  t1588 = t1081*t1529;
  t1591 = t1104*t1549;
  t1598 = -0.340999127418*t927*t1578;
  t1599 = t1588 + t1591 + t1598;
  t1292 = 0.444895486988*t60;
  t1294 = 0.218018*t67;
  t1297 = t1292 + t1294;
  t1603 = t1163*t1529;
  t1611 = t1187*t1549;
  t1629 = t1199*t1578;
  t1630 = t1603 + t1611 + t1629;
  t1675 = -1.*t161*t231*t229;
  t1676 = t272*t161*t244;
  t1677 = t1675 + t1676;
  t1679 = t272*t161*t231;
  t1681 = t161*t229*t244;
  t1683 = t1679 + t1681;
  t1667 = -1.*t212*t232;
  t1678 = 0.340999127418*t220*t1677;
  t1685 = t337*t1683;
  t1686 = t1667 + t1678 + t1685;
  t1701 = -1.*t388*t232;
  t1709 = t416*t1677;
  t1712 = 0.340999127418*t220*t1683;
  t1714 = t1701 + t1709 + t1712;
  t1721 = -1.*t457*t232;
  t1722 = t470*t1677;
  t1723 = t478*t1683;
  t1728 = t1721 + t1722 + t1723;
  t1698 = t133*t1686;
  t1715 = t384*t1714;
  t1733 = t455*t1728;
  t1734 = t1698 + t1715 + t1733;
  t1752 = t552*t1686;
  t1753 = -0.340999127418*t443*t1714;
  t1754 = t566*t1728;
  t1756 = t1752 + t1753 + t1754;
  t1762 = -0.340999127418*t443*t1686;
  t1764 = t657*t1714;
  t1766 = t691*t1728;
  t1768 = t1762 + t1764 + t1766;
  t1749 = t103*t1734;
  t1758 = -0.340999127418*t550*t1756;
  t1770 = t644*t1768;
  t1776 = t1749 + t1758 + t1770;
  t1785 = t723*t1734;
  t1788 = t768*t1756;
  t1790 = -0.340999127418*t550*t1768;
  t1794 = t1785 + t1788 + t1790;
  t1807 = t838*t1734;
  t1812 = t862*t1756;
  t1813 = t883*t1768;
  t1817 = t1807 + t1812 + t1813;
  t1779 = t92*t1776;
  t1803 = t714*t1794;
  t1820 = t833*t1817;
  t1829 = t1779 + t1803 + t1820;
  t1833 = t930*t1776;
  t1835 = -0.340999127418*t801*t1794;
  t1837 = t944*t1817;
  t1841 = t1833 + t1835 + t1837;
  t1844 = -0.340999127418*t801*t1776;
  t1851 = t1016*t1794;
  t1853 = t1030*t1817;
  t1855 = t1844 + t1851 + t1853;
  t1832 = t81*t1829;
  t1843 = -0.340999127418*t927*t1841;
  t1869 = t1005*t1855;
  t1875 = t1832 + t1843 + t1869;
  t1881 = t1081*t1829;
  t1883 = t1104*t1841;
  t1884 = -0.340999127418*t927*t1855;
  t1888 = t1881 + t1883 + t1884;
  t1893 = t1163*t1829;
  t1896 = t1187*t1841;
  t1900 = t1199*t1855;
  t1902 = t1893 + t1896 + t1900;
  t1051 = t74*t1041;
  t1118 = t1055*t1117;
  t1240 = t1156*t1212;
  t1244 = t1051 + t1118 + t1240;
  t1275 = t1264*t1041;
  t1291 = t1281*t1117;
  t1299 = t1297*t1212;
  t1303 = t1275 + t1291 + t1299;
  t1949 = -0.218018*t67;
  t1954 = t1292 + t1949;
  t1958 = 0.553471*t67;
  t1959 = t1121 + t1958;
  t1965 = -0.353861996165*t60;
  t1967 = 1. + t1965;
  t1584 = t74*t1582;
  t1600 = t1055*t1599;
  t1631 = t1156*t1630;
  t1632 = t1584 + t1600 + t1631;
  t1635 = t1264*t1582;
  t1640 = t1281*t1599;
  t1643 = t1297*t1630;
  t1645 = t1635 + t1640 + t1643;
  t1876 = t74*t1875;
  t1889 = t1055*t1888;
  t1911 = t1156*t1902;
  t1913 = t1876 + t1889 + t1911;
  t1920 = t1264*t1875;
  t1921 = t1281*t1888;
  t1922 = t1297*t1902;
  t1934 = t1920 + t1921 + t1922;
  t1955 = t1954*t1041;
  t1962 = t1959*t1117;
  t1968 = t1967*t1212;
  t1972 = t1955 + t1962 + t1968;
  t1990 = t1954*t1582;
  t1993 = t1959*t1599;
  t1995 = t1967*t1630;
  t2004 = t1990 + t1993 + t1995;
  t2018 = t1954*t1875;
  t2020 = t1959*t1888;
  t2021 = t1967*t1902;
  t2022 = t2018 + t2020 + t2021;
  t2349 = -0.120666640478*t60;
  t2362 = -0.444895486988*t60;
  t2378 = -0.175248972904*t60;
  t2090 = -0.04500040093286238*t220;
  t2091 = -0.07877663122399998*t470;
  t2093 = 0.031030906668*t478;
  t2094 = 0. + t2090 + t2091 + t2093;
  t2097 = -0.091*t229;
  t2098 = 0. + t2097;
  t2118 = -1.*t272;
  t2119 = 1. + t2118;
  t2122 = -0.091*t2119;
  t2131 = 0. + t2122;
  t2135 = 1.296332362046933e-7*var1[18];
  t2136 = -0.07877668146182712*t220;
  t2137 = -0.045000372235*t388;
  t2138 = t2135 + t2136 + t2137;
  t2142 = 3.2909349868922137e-7*var1[18];
  t2144 = 0.03103092645718495*t220;
  t2152 = -0.045000372235*t212;
  t2156 = t2142 + t2144 + t2152;
  t2160 = -1.296332362046933e-7*var1[19];
  t2161 = -0.14128592423750855*t443;
  t2163 = -0.045000372235*t566;
  t2164 = t2160 + t2161 + t2163;
  t2179 = 3.2909349868922137e-7*var1[19];
  t2181 = -0.055653945343889656*t443;
  t2186 = -0.045000372235*t691;
  t2193 = t2179 + t2181 + t2186;
  t2201 = -0.04500040093286238*t443;
  t2204 = -0.055653909852*t384;
  t2210 = -0.141285834136*t133;
  t2211 = 0. + t2201 + t2204 + t2210;
  t2214 = 0.039853038461262744*t550;
  t2215 = -0.22023459268999998*t862;
  t2216 = -0.086752619205*t883;
  t2217 = 0. + t2214 + t2215 + t2216;
  t2233 = 6.295460977284962e-8*var1[20];
  t2239 = -0.22023473313910558*t550;
  t2244 = 0.039853013046*t723;
  t2251 = t2233 + t2239 + t2244;
  t2253 = -1.5981976069815686e-7*var1[20];
  t2254 = -0.08675267452931407*t550;
  t2256 = 0.039853013046*t103;
  t2257 = t2253 + t2254 + t2256;
  t2261 = 5.7930615939377813e-8*var1[21];
  t2262 = -0.23261833304643187*t801;
  t2266 = -0.262809976934*t944;
  t2267 = t2261 + t2262 + t2266;
  t2269 = -2.281945176511838e-8*var1[21];
  t2270 = -0.5905366811997648*t801;
  t2271 = -0.262809976934*t1030;
  t2272 = t2269 + t2270 + t2271;
  t2279 = -0.26281014453449253*t801;
  t2281 = -0.5905363046000001*t714;
  t2282 = -0.23261818470000004*t92;
  t2285 = 0. + t2279 + t2281 + t2282;
  t2291 = 0.06199697675299678*t927;
  t2293 = -0.823260828522*t1199;
  t2297 = -0.324290713329*t1187;
  t2300 = 0. + t2291 + t2293 + t2297;
  t2311 = 7.500378623168247e-8*var1[22];
  t2314 = -0.32429092013729516*t927;
  t2315 = 0.061996937216*t1081;
  t2316 = t2311 + t2314 + t2315;
  t2334 = -2.95447451120871e-8*var1[22];
  t2337 = -0.8232613535360118*t927;
  t2340 = 0.061996937216*t81;
  t2341 = t2334 + t2337 + t2340;
  t2346 = 7.20503013377005e-8*var1[23];
  t2347 = -0.3667270384178674*t60;
  t2355 = t2349 + t1280;
  t2357 = -0.29871295412*t2355;
  t2363 = t2362 + t1294;
  t2366 = 0.44503472296900004*t2363;
  t2369 = t2346 + t2347 + t2357 + t2366;
  t2371 = 2.838136523330542e-8*var1[23];
  t2375 = -0.2845150083511607*t60;
  t2382 = t2378 + t1139;
  t2384 = 0.44503472296900004*t2382;
  t2385 = t2349 + t68;
  t2386 = -0.5286755231320001*t2385;
  t2387 = t2371 + t2375 + t2384 + t2386;
  t2392 = 1.0464152525368286e-7*var1[23];
  t2393 = 0.15748087543254813*t60;
  t2394 = t2362 + t1949;
  t2396 = -0.5286755231320001*t2394;
  t2402 = t2378 + t1958;
  t2409 = -0.29871295412*t2402;
  t2412 = t2392 + t2393 + t2396 + t2409;
  p_output1[0]=-0.930418*t1244 + 0.366501*t1303;
  p_output1[1]=-0.930418*t1632 + 0.366501*t1645;
  p_output1[2]=-0.930418*t1913 + 0.366501*t1934;
  p_output1[3]=0.;
  p_output1[4]=-0.294604*t1244 - 0.747896*t1303 + 0.594863*t1972;
  p_output1[5]=-0.294604*t1632 - 0.747896*t1645 + 0.594863*t2004;
  p_output1[6]=-0.294604*t1913 - 0.747896*t1934 + 0.594863*t2022;
  p_output1[7]=0.;
  p_output1[8]=0.218018*t1244 + 0.553471*t1303 + 0.803828*t1972;
  p_output1[9]=0.218018*t1632 + 0.553471*t1645 + 0.803828*t2004;
  p_output1[10]=0.218018*t1913 + 0.553471*t1934 + 0.803828*t2022;
  p_output1[11]=0.;
  p_output1[12]=0. - 0.415942*t1244 - 0.826251*t1303 + 0.060052*t1972 + t156*t161*t2094 + t1037*t2341 + t1041*t2369 + t1117*t2387 + t1212*t2412 + t2098*t250 + t2131*t287 + t2138*t314 + t2156*t360 + t2164*t369 + t2193*t424 + t2211*t486 + t2217*t494 + t2251*t588 + t2257*t697 + t2267*t706 + t2272*t791 + t2285*t892 + t2300*t914 + t2316*t993 + var1[0];
  p_output1[13]=0. - 0.415942*t1632 - 0.826251*t1645 + 0.060052*t2004 + t1315*t2098 + t1330*t2131 + t1336*t2138 + t1343*t2156 + t1348*t2164 + t1384*t2193 + t1437*t2211 + t1442*t2217 + t1453*t2251 + t1476*t2257 + t1479*t2267 + t1503*t2272 + t1524*t2285 + t1529*t2300 + t1549*t2316 + t1578*t2341 + t1582*t2369 + t1599*t2387 + t161*t2094*t239 + t1630*t2412 + var1[1];
  p_output1[14]=0. - 0.415942*t1913 - 0.826251*t1934 + 0.060052*t2022 + t1677*t2138 + t1683*t2156 + t1686*t2164 + t1714*t2193 + t1728*t2211 + t1734*t2217 + t1756*t2251 + t1768*t2257 + t1776*t2267 + t1794*t2272 + t1817*t2285 + t1829*t2300 + t161*t2098*t231 + t1841*t2316 - 1.*t2094*t232 + t1855*t2341 + t1875*t2369 + t1888*t2387 + t1902*t2412 + t161*t2131*t244 + var1[2];
  p_output1[15]=1.;
}



void T_right_toe_roll_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
