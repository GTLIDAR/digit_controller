/*
 * Automatically Generated from Mathematica.
 * Thu 10 Nov 2022 14:52:08 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "T_LeftToeBottomFront_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t242;
  double t235;
  double t243;
  double t236;
  double t251;
  double t217;
  double t222;
  double t228;
  double t232;
  double t279;
  double t284;
  double t289;
  double t241;
  double t253;
  double t260;
  double t291;
  double t181;
  double t207;
  double t208;
  double t270;
  double t293;
  double t297;
  double t303;
  double t308;
  double t313;
  double t325;
  double t327;
  double t447;
  double t448;
  double t452;
  double t464;
  double t467;
  double t470;
  double t472;
  double t474;
  double t476;
  double t479;
  double t299;
  double t301;
  double t302;
  double t320;
  double t335;
  double t339;
  double t344;
  double t356;
  double t485;
  double t375;
  double t382;
  double t384;
  double t391;
  double t394;
  double t395;
  double t414;
  double t416;
  double t168;
  double t169;
  double t177;
  double t94;
  double t357;
  double t366;
  double t373;
  double t426;
  double t492;
  double t493;
  double t495;
  double t496;
  double t506;
  double t525;
  double t533;
  double t542;
  double t546;
  double t561;
  double t563;
  double t571;
  double t579;
  double t580;
  double t581;
  double t653;
  double t654;
  double t657;
  double t658;
  double t662;
  double t663;
  double t669;
  double t677;
  double t795;
  double t826;
  double t831;
  double t500;
  double t511;
  double t515;
  double t584;
  double t585;
  double t646;
  double t698;
  double t718;
  double t738;
  double t740;
  double t746;
  double t748;
  double t749;
  double t765;
  double t769;
  double t789;
  double t892;
  double t903;
  double t907;
  double t917;
  double t920;
  double t921;
  double t924;
  double t931;
  double t932;
  double t950;
  double t983;
  double t997;
  double t1000;
  double t24;
  double t49;
  double t75;
  double t79;
  double t89;
  double t106;
  double t167;
  double t723;
  double t729;
  double t734;
  double t794;
  double t836;
  double t859;
  double t958;
  double t976;
  double t1001;
  double t1006;
  double t1013;
  double t1022;
  double t1023;
  double t1032;
  double t1035;
  double t1039;
  double t1075;
  double t1095;
  double t1100;
  double t1104;
  double t1111;
  double t1114;
  double t1115;
  double t1117;
  double t91;
  double t93;
  double t979;
  double t1056;
  double t1058;
  double t1060;
  double t1118;
  double t1121;
  double t1161;
  double t1181;
  double t1185;
  double t1188;
  double t1202;
  double t1205;
  double t1215;
  double t1226;
  double t76;
  double t1241;
  double t1254;
  double t1262;
  double t1268;
  double t1269;
  double t1270;
  double t1275;
  double t1277;
  double t1288;
  double t1289;
  double t1347;
  double t1150;
  double t85;
  double t88;
  double t1476;
  double t1480;
  double t1486;
  double t1453;
  double t1454;
  double t1455;
  double t1457;
  double t1488;
  double t1489;
  double t1492;
  double t1493;
  double t1498;
  double t1534;
  double t1536;
  double t1538;
  double t1539;
  double t1491;
  double t1500;
  double t1501;
  double t1507;
  double t1513;
  double t1520;
  double t1525;
  double t1527;
  double t1509;
  double t1532;
  double t1540;
  double t1546;
  double t1551;
  double t1559;
  double t1568;
  double t1575;
  double t1578;
  double t1584;
  double t1589;
  double t1597;
  double t1549;
  double t1577;
  double t1603;
  double t1613;
  double t1621;
  double t1622;
  double t1625;
  double t1631;
  double t1636;
  double t1640;
  double t1642;
  double t1644;
  double t1153;
  double t1156;
  double t1620;
  double t1633;
  double t1649;
  double t1655;
  double t1657;
  double t1666;
  double t1673;
  double t1678;
  double t1697;
  double t1700;
  double t1701;
  double t1709;
  double t1230;
  double t1234;
  double t1332;
  double t1337;
  double t1656;
  double t1691;
  double t1711;
  double t1713;
  double t1349;
  double t1351;
  double t1719;
  double t1720;
  double t1721;
  double t1722;
  double t1357;
  double t1360;
  double t1731;
  double t1733;
  double t1738;
  double t1750;
  double t1380;
  double t1386;
  double t1395;
  double t1409;
  double t1428;
  double t1431;
  double t1794;
  double t1795;
  double t1797;
  double t1804;
  double t1805;
  double t1808;
  double t1840;
  double t1848;
  double t1851;
  double t1853;
  double t1803;
  double t1809;
  double t1813;
  double t1822;
  double t1832;
  double t1835;
  double t1836;
  double t1837;
  double t1831;
  double t1838;
  double t1854;
  double t1857;
  double t1864;
  double t1870;
  double t1874;
  double t1877;
  double t1879;
  double t1888;
  double t1890;
  double t1891;
  double t1859;
  double t1878;
  double t1896;
  double t1900;
  double t1908;
  double t1909;
  double t1911;
  double t1913;
  double t1919;
  double t1925;
  double t1929;
  double t1932;
  double t1907;
  double t1916;
  double t1933;
  double t1934;
  double t1937;
  double t1938;
  double t1939;
  double t1940;
  double t1959;
  double t1960;
  double t1962;
  double t1964;
  double t1935;
  double t1958;
  double t1965;
  double t1968;
  double t1976;
  double t1982;
  double t1983;
  double t1993;
  double t2002;
  double t2003;
  double t2010;
  double t2013;
  double t1343;
  double t1356;
  double t1366;
  double t1367;
  double t1394;
  double t1427;
  double t1443;
  double t1444;
  double t1756;
  double t1759;
  double t1763;
  double t1765;
  double t1768;
  double t1769;
  double t1775;
  double t1782;
  double t2023;
  double t2024;
  double t2025;
  double t2028;
  double t2035;
  double t2037;
  double t2039;
  double t2041;
  double t1148;
  double t1228;
  double t1321;
  double t1322;
  double t1715;
  double t1723;
  double t1753;
  double t1754;
  double t1974;
  double t2001;
  double t2015;
  double t2020;
  double t2219;
  double t2248;
  double t2214;
  double t2105;
  double t2106;
  double t2111;
  double t2116;
  double t2120;
  double t2126;
  double t2139;
  double t2140;
  double t2141;
  double t2142;
  double t2148;
  double t2160;
  double t2164;
  double t2166;
  double t2169;
  double t2170;
  double t2172;
  double t2182;
  double t2204;
  double t2205;
  double t2216;
  double t2217;
  double t2225;
  double t2231;
  double t2232;
  double t2237;
  double t2245;
  double t2246;
  double t2247;
  double t2249;
  double t2250;
  double t2251;
  double t2258;
  double t2262;
  double t2263;
  double t2264;
  double t2274;
  double t2278;
  double t2279;
  double t2281;
  double t2282;
  double t2284;
  double t2285;
  double t2290;
  double t2302;
  double t2303;
  double t2304;
  double t2306;
  double t2308;
  double t2310;
  double t2312;
  double t2316;
  double t2317;
  double t2318;
  double t2324;
  double t2330;
  double t2331;
  double t2333;
  double t2336;
  double t2343;
  double t2346;
  double t2350;
  double t2357;
  double t2362;
  double t2365;
  double t2376;
  double t2380;
  double t2382;
  double t2383;
  double t2387;
  double t2392;
  double t2399;
  double t2404;
  double t2405;
  double t2408;
  double t2413;
  double t2414;
  double t2416;
  double t2417;
  double t2427;
  double t2428;
  double t2430;
  double t2434;
  double t2437;
  double t2439;
  double t2442;
  double t2444;
  t242 = Cos(var1[3]);
  t235 = Cos(var1[5]);
  t243 = Sin(var1[4]);
  t236 = Sin(var1[3]);
  t251 = Sin(var1[5]);
  t217 = Cos(var1[7]);
  t222 = -1.*t217;
  t228 = 1. + t222;
  t232 = Cos(var1[6]);
  t279 = t242*t235*t243;
  t284 = t236*t251;
  t289 = t279 + t284;
  t241 = -1.*t235*t236;
  t253 = t242*t243*t251;
  t260 = t241 + t253;
  t291 = Sin(var1[6]);
  t181 = Cos(var1[8]);
  t207 = -1.*t181;
  t208 = 1. + t207;
  t270 = t232*t260;
  t293 = -1.*t289*t291;
  t297 = t270 + t293;
  t303 = t232*t289;
  t308 = t260*t291;
  t313 = t303 + t308;
  t325 = Cos(var1[4]);
  t327 = Sin(var1[7]);
  t447 = -1.000000637725*t228;
  t448 = 1. + t447;
  t452 = t242*t325*t448;
  t464 = -0.930418*t327;
  t467 = 0. + t464;
  t470 = t297*t467;
  t472 = -0.366501*t327;
  t474 = 0. + t472;
  t476 = t313*t474;
  t479 = t452 + t470 + t476;
  t299 = -0.340999127418*t228*t297;
  t301 = -0.134322983001*t228;
  t302 = 1. + t301;
  t320 = t302*t313;
  t335 = 0.366501*t327;
  t339 = 0. + t335;
  t344 = t242*t325*t339;
  t356 = t299 + t320 + t344;
  t485 = Sin(var1[8]);
  t375 = -0.8656776547239999*t228;
  t382 = 1. + t375;
  t384 = t382*t297;
  t391 = -0.340999127418*t228*t313;
  t394 = 0.930418*t327;
  t395 = 0. + t394;
  t414 = t242*t325*t395;
  t416 = t384 + t391 + t414;
  t168 = Cos(var1[9]);
  t169 = -1.*t168;
  t177 = 1. + t169;
  t94 = Sin(var1[10]);
  t357 = 0.340999127418*t208*t356;
  t366 = -0.134322983001*t208;
  t373 = 1. + t366;
  t426 = t373*t416;
  t492 = -0.366501*t485;
  t493 = 0. + t492;
  t495 = t479*t493;
  t496 = t357 + t426 + t495;
  t506 = Sin(var1[9]);
  t525 = -1.000000637725*t208;
  t533 = 1. + t525;
  t542 = t533*t479;
  t546 = -0.930418*t485;
  t561 = 0. + t546;
  t563 = t356*t561;
  t571 = 0.366501*t485;
  t579 = 0. + t571;
  t580 = t416*t579;
  t581 = t542 + t563 + t580;
  t653 = -0.8656776547239999*t208;
  t654 = 1. + t653;
  t657 = t654*t356;
  t658 = 0.340999127418*t208*t416;
  t662 = 0.930418*t485;
  t663 = 0. + t662;
  t669 = t479*t663;
  t677 = t657 + t658 + t669;
  t795 = Cos(var1[10]);
  t826 = -1.*t795;
  t831 = 1. + t826;
  t500 = 0.340999127418*t177*t496;
  t511 = -0.930418*t506;
  t515 = 0. + t511;
  t584 = t515*t581;
  t585 = -0.8656776547239999*t177;
  t646 = 1. + t585;
  t698 = t646*t677;
  t718 = t500 + t584 + t698;
  t738 = -0.134322983001*t177;
  t740 = 1. + t738;
  t746 = t740*t496;
  t748 = 0.366501*t506;
  t749 = 0. + t748;
  t765 = t749*t581;
  t769 = 0.340999127418*t177*t677;
  t789 = t746 + t765 + t769;
  t892 = -0.366501*t506;
  t903 = 0. + t892;
  t907 = t903*t496;
  t917 = -1.000000637725*t177;
  t920 = 1. + t917;
  t921 = t920*t581;
  t924 = 0.930418*t506;
  t931 = 0. + t924;
  t932 = t931*t677;
  t950 = t907 + t921 + t932;
  t983 = Cos(var1[11]);
  t997 = -1.*t983;
  t1000 = 1. + t997;
  t24 = Cos(var1[12]);
  t49 = -1.*t24;
  t75 = 1. + t49;
  t79 = Sin(var1[12]);
  t89 = Sin(var1[11]);
  t106 = 0.930418*t94;
  t167 = 0. + t106;
  t723 = t167*t718;
  t729 = -0.366501*t94;
  t734 = 0. + t729;
  t794 = t734*t789;
  t836 = -1.000000637725*t831;
  t859 = 1. + t836;
  t958 = t859*t950;
  t976 = t723 + t794 + t958;
  t1001 = -0.8656776547239999*t831;
  t1006 = 1. + t1001;
  t1013 = t1006*t718;
  t1022 = 0.340999127418*t831*t789;
  t1023 = -0.930418*t94;
  t1032 = 0. + t1023;
  t1035 = t1032*t950;
  t1039 = t1013 + t1022 + t1035;
  t1075 = 0.340999127418*t831*t718;
  t1095 = -0.134322983001*t831;
  t1100 = 1. + t1095;
  t1104 = t1100*t789;
  t1111 = 0.366501*t94;
  t1114 = 0. + t1111;
  t1115 = t1114*t950;
  t1117 = t1075 + t1104 + t1115;
  t91 = 0.366501*t89;
  t93 = 0. + t91;
  t979 = t93*t976;
  t1056 = 0.340999127418*t1000*t1039;
  t1058 = -0.134322983001*t1000;
  t1060 = 1. + t1058;
  t1118 = t1060*t1117;
  t1121 = t979 + t1056 + t1118;
  t1161 = -0.930418*t89;
  t1181 = 0. + t1161;
  t1185 = t1181*t976;
  t1188 = -0.8656776547239999*t1000;
  t1202 = 1. + t1188;
  t1205 = t1202*t1039;
  t1215 = 0.340999127418*t1000*t1117;
  t1226 = t1185 + t1205 + t1215;
  t76 = -0.175248972904*t75;
  t1241 = -1.000000637725*t1000;
  t1254 = 1. + t1241;
  t1262 = t1254*t976;
  t1268 = 0.930418*t89;
  t1269 = 0. + t1268;
  t1270 = t1269*t1039;
  t1275 = -0.366501*t89;
  t1277 = 0. + t1275;
  t1288 = t1277*t1117;
  t1289 = t1262 + t1270 + t1288;
  t1347 = -0.120666640478*t75;
  t1150 = 0.444895486988*t75;
  t85 = 0.553471*t79;
  t88 = t76 + t85;
  t1476 = t235*t236*t243;
  t1480 = -1.*t242*t251;
  t1486 = t1476 + t1480;
  t1453 = t242*t235;
  t1454 = t236*t243*t251;
  t1455 = t1453 + t1454;
  t1457 = t232*t1455;
  t1488 = -1.*t1486*t291;
  t1489 = t1457 + t1488;
  t1492 = t232*t1486;
  t1493 = t1455*t291;
  t1498 = t1492 + t1493;
  t1534 = t325*t448*t236;
  t1536 = t1489*t467;
  t1538 = t1498*t474;
  t1539 = t1534 + t1536 + t1538;
  t1491 = -0.340999127418*t228*t1489;
  t1500 = t302*t1498;
  t1501 = t325*t236*t339;
  t1507 = t1491 + t1500 + t1501;
  t1513 = t382*t1489;
  t1520 = -0.340999127418*t228*t1498;
  t1525 = t325*t236*t395;
  t1527 = t1513 + t1520 + t1525;
  t1509 = 0.340999127418*t208*t1507;
  t1532 = t373*t1527;
  t1540 = t1539*t493;
  t1546 = t1509 + t1532 + t1540;
  t1551 = t533*t1539;
  t1559 = t1507*t561;
  t1568 = t1527*t579;
  t1575 = t1551 + t1559 + t1568;
  t1578 = t654*t1507;
  t1584 = 0.340999127418*t208*t1527;
  t1589 = t1539*t663;
  t1597 = t1578 + t1584 + t1589;
  t1549 = 0.340999127418*t177*t1546;
  t1577 = t515*t1575;
  t1603 = t646*t1597;
  t1613 = t1549 + t1577 + t1603;
  t1621 = t740*t1546;
  t1622 = t749*t1575;
  t1625 = 0.340999127418*t177*t1597;
  t1631 = t1621 + t1622 + t1625;
  t1636 = t903*t1546;
  t1640 = t920*t1575;
  t1642 = t931*t1597;
  t1644 = t1636 + t1640 + t1642;
  t1153 = 0.218018*t79;
  t1156 = t1150 + t1153;
  t1620 = t167*t1613;
  t1633 = t734*t1631;
  t1649 = t859*t1644;
  t1655 = t1620 + t1633 + t1649;
  t1657 = t1006*t1613;
  t1666 = 0.340999127418*t831*t1631;
  t1673 = t1032*t1644;
  t1678 = t1657 + t1666 + t1673;
  t1697 = 0.340999127418*t831*t1613;
  t1700 = t1100*t1631;
  t1701 = t1114*t1644;
  t1709 = t1697 + t1700 + t1701;
  t1230 = -0.353861996165*t75;
  t1234 = 1. + t1230;
  t1332 = -0.952469601425*t75;
  t1337 = 1. + t1332;
  t1656 = t93*t1655;
  t1691 = 0.340999127418*t1000*t1678;
  t1711 = t1060*t1709;
  t1713 = t1656 + t1691 + t1711;
  t1349 = 0.803828*t79;
  t1351 = t1347 + t1349;
  t1719 = t1181*t1655;
  t1720 = t1202*t1678;
  t1721 = 0.340999127418*t1000*t1709;
  t1722 = t1719 + t1720 + t1721;
  t1357 = -0.553471*t79;
  t1360 = t76 + t1357;
  t1731 = t1254*t1655;
  t1733 = t1269*t1678;
  t1738 = t1277*t1709;
  t1750 = t1731 + t1733 + t1738;
  t1380 = -0.803828*t79;
  t1386 = t1347 + t1380;
  t1395 = -0.693671301908*t75;
  t1409 = 1. + t1395;
  t1428 = -0.218018*t79;
  t1431 = t1150 + t1428;
  t1794 = t325*t232*t251;
  t1795 = -1.*t325*t235*t291;
  t1797 = t1794 + t1795;
  t1804 = t325*t235*t232;
  t1805 = t325*t251*t291;
  t1808 = t1804 + t1805;
  t1840 = -1.*t448*t243;
  t1848 = t1797*t467;
  t1851 = t1808*t474;
  t1853 = t1840 + t1848 + t1851;
  t1803 = -0.340999127418*t228*t1797;
  t1809 = t302*t1808;
  t1813 = -1.*t243*t339;
  t1822 = t1803 + t1809 + t1813;
  t1832 = t382*t1797;
  t1835 = -0.340999127418*t228*t1808;
  t1836 = -1.*t243*t395;
  t1837 = t1832 + t1835 + t1836;
  t1831 = 0.340999127418*t208*t1822;
  t1838 = t373*t1837;
  t1854 = t1853*t493;
  t1857 = t1831 + t1838 + t1854;
  t1864 = t533*t1853;
  t1870 = t1822*t561;
  t1874 = t1837*t579;
  t1877 = t1864 + t1870 + t1874;
  t1879 = t654*t1822;
  t1888 = 0.340999127418*t208*t1837;
  t1890 = t1853*t663;
  t1891 = t1879 + t1888 + t1890;
  t1859 = 0.340999127418*t177*t1857;
  t1878 = t515*t1877;
  t1896 = t646*t1891;
  t1900 = t1859 + t1878 + t1896;
  t1908 = t740*t1857;
  t1909 = t749*t1877;
  t1911 = 0.340999127418*t177*t1891;
  t1913 = t1908 + t1909 + t1911;
  t1919 = t903*t1857;
  t1925 = t920*t1877;
  t1929 = t931*t1891;
  t1932 = t1919 + t1925 + t1929;
  t1907 = t167*t1900;
  t1916 = t734*t1913;
  t1933 = t859*t1932;
  t1934 = t1907 + t1916 + t1933;
  t1937 = t1006*t1900;
  t1938 = 0.340999127418*t831*t1913;
  t1939 = t1032*t1932;
  t1940 = t1937 + t1938 + t1939;
  t1959 = 0.340999127418*t831*t1900;
  t1960 = t1100*t1913;
  t1962 = t1114*t1932;
  t1964 = t1959 + t1960 + t1962;
  t1935 = t93*t1934;
  t1958 = 0.340999127418*t1000*t1940;
  t1965 = t1060*t1964;
  t1968 = t1935 + t1958 + t1965;
  t1976 = t1181*t1934;
  t1982 = t1202*t1940;
  t1983 = 0.340999127418*t1000*t1964;
  t1993 = t1976 + t1982 + t1983;
  t2002 = t1254*t1934;
  t2003 = t1269*t1940;
  t2010 = t1277*t1964;
  t2013 = t2002 + t2003 + t2010;
  t1343 = t1337*t1121;
  t1356 = t1351*t1226;
  t1366 = t1360*t1289;
  t1367 = t1343 + t1356 + t1366;
  t1394 = t1386*t1121;
  t1427 = t1409*t1226;
  t1443 = t1431*t1289;
  t1444 = t1394 + t1427 + t1443;
  t1756 = t1337*t1713;
  t1759 = t1351*t1722;
  t1763 = t1360*t1750;
  t1765 = t1756 + t1759 + t1763;
  t1768 = t1386*t1713;
  t1769 = t1409*t1722;
  t1775 = t1431*t1750;
  t1782 = t1768 + t1769 + t1775;
  t2023 = t1337*t1968;
  t2024 = t1351*t1993;
  t2025 = t1360*t2013;
  t2028 = t2023 + t2024 + t2025;
  t2035 = t1386*t1968;
  t2037 = t1409*t1993;
  t2039 = t1431*t2013;
  t2041 = t2035 + t2037 + t2039;
  t1148 = t88*t1121;
  t1228 = t1156*t1226;
  t1321 = t1234*t1289;
  t1322 = t1148 + t1228 + t1321;
  t1715 = t88*t1713;
  t1723 = t1156*t1722;
  t1753 = t1234*t1750;
  t1754 = t1715 + t1723 + t1753;
  t1974 = t88*t1968;
  t2001 = t1156*t1993;
  t2015 = t1234*t2013;
  t2020 = t1974 + t2001 + t2015;
  t2219 = 0.120666640478*t75;
  t2248 = -0.444895486988*t75;
  t2214 = 0.175248972904*t75;
  t2105 = -1.*t232;
  t2106 = 1. + t2105;
  t2111 = 0.091*t2106;
  t2116 = 0. + t2111;
  t2120 = 0.091*t291;
  t2126 = 0. + t2120;
  t2139 = -0.04500040093286238*t228;
  t2140 = 0.07877663122399998*t467;
  t2141 = 0.031030906668*t474;
  t2142 = 0. + t2139 + t2140 + t2141;
  t2148 = -3.2909349868922137e-7*var1[7];
  t2160 = 0.03103092645718495*t228;
  t2164 = -0.045000372235*t339;
  t2166 = t2148 + t2160 + t2164;
  t2169 = 1.296332362046933e-7*var1[7];
  t2170 = 0.07877668146182712*t228;
  t2172 = -0.045000372235*t395;
  t2182 = t2169 + t2170 + t2172;
  t2204 = 2.838136523330542e-8*var1[12];
  t2205 = 0.2845150083511607*t75;
  t2216 = t2214 + t1357;
  t2217 = 0.44503472296900004*t2216;
  t2225 = t2219 + t1349;
  t2231 = -0.5286755231320001*t2225;
  t2232 = t2204 + t2205 + t2217 + t2231;
  t2237 = -7.20503013377005e-8*var1[12];
  t2245 = -0.3667270384178674*t75;
  t2246 = t2219 + t1380;
  t2247 = 0.29871295412*t2246;
  t2249 = t2248 + t1428;
  t2250 = 0.44503472296900004*t2249;
  t2251 = t2237 + t2245 + t2247 + t2250;
  t2258 = -1.0464152525368286e-7*var1[12];
  t2262 = 0.15748087543254813*t75;
  t2263 = t2248 + t1153;
  t2264 = -0.5286755231320001*t2263;
  t2274 = t2214 + t85;
  t2278 = 0.29871295412*t2274;
  t2279 = t2258 + t2262 + t2264 + t2278;
  t2281 = 0.06199697675299678*t1000;
  t2282 = 0.324290713329*t1277;
  t2284 = -0.823260828522*t1269;
  t2285 = 0. + t2281 + t2282 + t2284;
  t2290 = 2.95447451120871e-8*var1[11];
  t2302 = -0.8232613535360118*t1000;
  t2303 = 0.061996937216*t1181;
  t2304 = t2290 + t2302 + t2303;
  t2306 = 7.500378623168247e-8*var1[11];
  t2308 = 0.32429092013729516*t1000;
  t2310 = 0.061996937216*t93;
  t2312 = t2306 + t2308 + t2310;
  t2316 = 2.281945176511838e-8*var1[10];
  t2317 = -0.5905366811997648*t831;
  t2318 = -0.262809976934*t1032;
  t2324 = t2316 + t2317 + t2318;
  t2330 = 5.7930615939377813e-8*var1[10];
  t2331 = 0.23261833304643187*t831;
  t2333 = -0.262809976934*t1114;
  t2336 = t2330 + t2331 + t2333;
  t2343 = -0.26281014453449253*t831;
  t2346 = 0.23261818470000004*t734;
  t2350 = -0.5905363046000001*t167;
  t2357 = 0. + t2343 + t2346 + t2350;
  t2362 = 3.2909349868922137e-7*var1[8];
  t2365 = 0.055653945343889656*t208;
  t2376 = -0.045000372235*t493;
  t2380 = t2362 + t2365 + t2376;
  t2382 = -1.5981976069815686e-7*var1[9];
  t2383 = 0.08675267452931407*t177;
  t2387 = 0.039853013046*t749;
  t2392 = t2382 + t2383 + t2387;
  t2399 = -0.04500040093286238*t208;
  t2404 = -0.141285834136*t561;
  t2405 = 0.055653909852*t579;
  t2408 = 0. + t2399 + t2404 + t2405;
  t2413 = 0.039853038461262744*t177;
  t2414 = 0.086752619205*t903;
  t2416 = -0.22023459268999998*t931;
  t2417 = 0. + t2413 + t2414 + t2416;
  t2427 = 1.296332362046933e-7*var1[8];
  t2428 = -0.14128592423750855*t208;
  t2430 = -0.045000372235*t663;
  t2434 = t2427 + t2428 + t2430;
  t2437 = -6.295460977284962e-8*var1[9];
  t2439 = -0.22023473313910558*t177;
  t2442 = 0.039853013046*t515;
  t2444 = t2437 + t2439 + t2442;
  p_output1[0]=0.993567*t1322 - 0.041508*t1367 + 0.105375*t1444;
  p_output1[1]=0.993567*t1754 - 0.041508*t1765 + 0.105375*t1782;
  p_output1[2]=0.993567*t2020 - 0.041508*t2028 + 0.105375*t2041;
  p_output1[3]=0.;
  p_output1[4]=0.930418*t1367 + 0.366501*t1444;
  p_output1[5]=0.930418*t1765 + 0.366501*t1782;
  p_output1[6]=0.930418*t2028 + 0.366501*t2041;
  p_output1[7]=0.;
  p_output1[8]=-0.113255*t1322 - 0.364143*t1367 + 0.924432*t1444;
  p_output1[9]=-0.113255*t1754 - 0.364143*t1765 + 0.924432*t1782;
  p_output1[10]=-0.113255*t2020 - 0.364143*t2028 + 0.924432*t2041;
  p_output1[11]=0.;
  p_output1[12]=0. + 0.150471*t1322 + 0.425433*t1367 - 0.836729*t1444 + t1121*t2232 + t1226*t2251 + t1289*t2279 + t1039*t2304 + t1117*t2312 + t2116*t260 + t2126*t289 + t2182*t297 + t2166*t313 + t2142*t242*t325 + t2434*t356 + t2380*t416 + t2408*t479 + t2392*t496 + t2417*t581 + t2444*t677 + t2324*t718 + t2336*t789 + t2357*t950 + t2285*t976 + var1[0];
  p_output1[13]=0. + 0.150471*t1754 + 0.425433*t1765 - 0.836729*t1782 + t1455*t2116 + t1486*t2126 + t1498*t2166 + t1489*t2182 + t1713*t2232 + t1722*t2251 + t1750*t2279 + t1655*t2285 + t1678*t2304 + t1709*t2312 + t1613*t2324 + t1631*t2336 + t1644*t2357 + t1527*t2380 + t1546*t2392 + t1539*t2408 + t1575*t2417 + t1507*t2434 + t1597*t2444 + t2142*t236*t325 + var1[1];
  p_output1[14]=0. + 0.150471*t2020 + 0.425433*t2028 - 0.836729*t2041 + t1808*t2166 + t1797*t2182 + t1968*t2232 + t1993*t2251 + t2013*t2279 + t1934*t2285 + t1940*t2304 + t1964*t2312 + t1900*t2324 + t1913*t2336 + t1932*t2357 + t1837*t2380 + t1857*t2392 + t1853*t2408 + t1877*t2417 - 1.*t2142*t243 + t1822*t2434 + t1891*t2444 + t2126*t235*t325 + t2116*t251*t325 + var1[2];
  p_output1[15]=1.;
}



void T_LeftToeBottomFront_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
