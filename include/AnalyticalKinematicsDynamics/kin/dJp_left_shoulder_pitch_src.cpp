/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:08:19 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dJp_left_shoulder_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t939;
  double t622;
  double t59;
  double t213;
  double t342;
  double t464;
  double t520;
  double t701;
  double t709;
  double t716;
  double t202;
  double t1498;
  double t2069;
  double t2083;
  double t1350;
  double t1805;
  double t1846;
  double t1852;
  double t2162;
  double t2212;
  double t2300;
  double t1676;
  double t1678;
  double t1130;
  double t1157;
  double t977;
  double t1081;
  double t845;
  double t1084;
  double t1231;
  double t1320;
  double t485;
  double t543;
  double t582;
  double t3160;
  double t1379;
  double t1386;
  double t1391;
  double t1536;
  double t1554;
  double t1697;
  double t1735;
  double t3205;
  double t3241;
  double t3335;
  double t3356;
  double t3368;
  double t3445;
  double t2039;
  double t2065;
  double t2098;
  double t2115;
  double t3545;
  double t3546;
  double t3567;
  double t2370;
  double t2397;
  double t3581;
  double t3600;
  double t3688;
  double t2461;
  double t2477;
  double t2708;
  double t2978;
  double t5058;
  double t5060;
  double t5107;
  double t5229;
  double t5241;
  double t5248;
  double t5277;
  double t5290;
  double t5296;
  double t5327;
  double t5362;
  double t5368;
  double t5642;
  double t5647;
  double t5651;
  double t5741;
  double t5745;
  double t5750;
  double t5752;
  double t5753;
  double t5754;
  double t5759;
  double t5761;
  double t5877;
  double t5878;
  double t5880;
  double t5885;
  double t5886;
  double t5898;
  double t5979;
  double t5981;
  double t5988;
  double t5992;
  double t5994;
  double t5997;
  double t5999;
  double t6006;
  double t4520;
  double t4522;
  double t4707;
  double t5189;
  double t5223;
  double t6069;
  double t6070;
  double t6073;
  double t6080;
  double t6083;
  double t6084;
  double t6089;
  double t6090;
  double t6092;
  double t5526;
  double t5561;
  double t5567;
  double t5573;
  double t5579;
  double t5600;
  double t5619;
  double t5636;
  double t5639;
  double t6138;
  double t6139;
  double t5400;
  double t5911;
  double t6305;
  double t6307;
  double t6308;
  double t6342;
  double t6347;
  double t6349;
  double t5943;
  double t699;
  double t1373;
  double t1501;
  double t1918;
  double t2303;
  double t2307;
  double t2312;
  double t2426;
  double t2442;
  double t2450;
  double t2451;
  double t2490;
  double t2546;
  double t2604;
  double t2652;
  double t2983;
  double t3036;
  double t3065;
  double t3080;
  double t3093;
  double t3102;
  double t3199;
  double t3857;
  double t6420;
  double t6422;
  double t6423;
  double t6426;
  double t6431;
  double t6432;
  double t4054;
  double t4224;
  double t5873;
  double t5874;
  double t5876;
  double t5881;
  double t5904;
  double t5905;
  double t5914;
  double t5917;
  double t5922;
  double t5927;
  double t5928;
  double t5948;
  double t5949;
  double t5953;
  double t5954;
  double t5955;
  double t5956;
  double t5959;
  double t5965;
  double t6465;
  double t6468;
  double t6469;
  double t6511;
  double t6513;
  double t6514;
  double t6209;
  double t6230;
  double t6588;
  double t6589;
  double t6590;
  double t6592;
  double t6593;
  double t6595;
  double t6245;
  double t6268;
  double t6628;
  double t6630;
  double t6631;
  double t6638;
  double t6639;
  double t6640;
  double t6674;
  double t6677;
  double t6678;
  double t6680;
  double t6682;
  double t6683;
  double t6723;
  double t6725;
  double t6726;
  double t6771;
  double t6772;
  double t6776;
  double t6340;
  double t6341;
  double t6350;
  double t6351;
  double t6352;
  double t6353;
  double t6357;
  double t6358;
  double t6359;
  double t6360;
  double t6364;
  double t6366;
  double t6372;
  double t6377;
  double t6380;
  double t6381;
  double t6814;
  double t6815;
  double t6027;
  double t3337;
  double t3453;
  double t3575;
  double t3850;
  double t3881;
  double t3910;
  double t4106;
  double t4121;
  double t4237;
  double t4278;
  double t5734;
  double t5751;
  double t5758;
  double t5762;
  double t5763;
  double t5766;
  double t5768;
  double t5769;
  double t5775;
  double t5779;
  double t5782;
  double t5785;
  double t5794;
  double t5795;
  double t5803;
  double t5822;
  double t5838;
  double t6503;
  double t6505;
  double t6506;
  double t6516;
  double t6517;
  double t6524;
  double t6526;
  double t6527;
  double t6530;
  double t6531;
  double t6534;
  double t6536;
  double t6537;
  double t6539;
  double t6540;
  double t6541;
  double t5990;
  double t5991;
  double t5996;
  double t6007;
  double t6016;
  double t6017;
  double t6019;
  double t6022;
  double t6024;
  double t6033;
  double t6042;
  double t6045;
  double t6054;
  double t6055;
  double t6056;
  double t6057;
  double t6894;
  double t6895;
  double t6898;
  double t6903;
  double t6905;
  double t6906;
  double t6913;
  double t6914;
  double t6945;
  double t6947;
  double t6212;
  double t6215;
  double t6217;
  double t6220;
  double t6233;
  double t6248;
  double t6252;
  double t6270;
  double t6273;
  double t6620;
  double t6624;
  double t6637;
  double t6641;
  double t6643;
  double t6645;
  double t6649;
  double t6650;
  double t6658;
  double t6659;
  double t7028;
  double t7030;
  double t7031;
  double t7034;
  double t7035;
  double t7037;
  double t6670;
  double t6673;
  double t6679;
  double t6684;
  double t6686;
  double t6687;
  double t6690;
  double t6693;
  double t6695;
  double t6696;
  double t6700;
  double t6704;
  double t6708;
  double t6711;
  double t6713;
  double t6718;
  double t6719;
  double t6293;
  double t6298;
  double t6299;
  double t6312;
  double t6314;
  double t6317;
  double t6318;
  double t6319;
  double t6320;
  double t6321;
  double t6327;
  double t6328;
  double t6329;
  double t6330;
  double t6332;
  double t6338;
  double t6812;
  double t6813;
  double t6816;
  double t6817;
  double t6818;
  double t6820;
  double t6821;
  double t6822;
  double t6823;
  double t6824;
  double t6825;
  double t6827;
  double t6828;
  double t6829;
  double t6831;
  double t6832;
  double t7107;
  double t7108;
  double t6111;
  double t6183;
  double t5155;
  double t5257;
  double t5320;
  double t5387;
  double t5403;
  double t5408;
  double t5417;
  double t5456;
  double t5458;
  double t5467;
  double t5470;
  double t5474;
  double t5476;
  double t5485;
  double t5487;
  double t5506;
  double t6460;
  double t6461;
  double t6470;
  double t6484;
  double t6485;
  double t6487;
  double t6489;
  double t6491;
  double t6492;
  double t6493;
  double t6494;
  double t6495;
  double t6497;
  double t6498;
  double t6499;
  double t6500;
  double t6067;
  double t6076;
  double t6085;
  double t6094;
  double t6095;
  double t6100;
  double t6101;
  double t6104;
  double t6106;
  double t6112;
  double t6113;
  double t6114;
  double t6117;
  double t6123;
  double t6125;
  double t6126;
  double t6899;
  double t6900;
  double t6910;
  double t6915;
  double t6916;
  double t6917;
  double t6919;
  double t6922;
  double t6923;
  double t6925;
  double t6928;
  double t6931;
  double t6934;
  double t6936;
  double t6939;
  double t6940;
  double t6943;
  double t7099;
  double t7100;
  double t7102;
  double t7172;
  double t7173;
  double t7175;
  double t7176;
  double t7204;
  double t7008;
  double t7009;
  double t7012;
  double t7013;
  double t7014;
  double t7017;
  double t7025;
  double t7027;
  double t7032;
  double t7039;
  double t7040;
  double t7041;
  double t7042;
  double t7043;
  double t7044;
  double t7045;
  double t7046;
  double t7047;
  double t7048;
  double t7049;
  double t7050;
  double t7052;
  double t7055;
  double t6764;
  double t6767;
  double t6770;
  double t6778;
  double t6780;
  double t6781;
  double t6783;
  double t6784;
  double t6787;
  double t6788;
  double t6790;
  double t6795;
  double t6798;
  double t6799;
  double t6801;
  double t6802;
  double t6803;
  double t6384;
  double t6385;
  double t6386;
  double t6387;
  double t6388;
  double t6390;
  double t6391;
  double t6393;
  double t6394;
  double t6395;
  double t6396;
  double t6397;
  double t6401;
  double t6404;
  double t6405;
  double t6407;
  double t6409;
  double t6410;
  double t6412;
  double t6836;
  double t6839;
  double t6840;
  double t6841;
  double t6842;
  double t6843;
  double t6844;
  double t6848;
  double t6852;
  double t6853;
  double t6854;
  double t6856;
  double t6857;
  double t6860;
  double t6863;
  double t7130;
  double t7132;
  double t7136;
  double t7137;
  double t7138;
  double t7139;
  double t7140;
  double t7146;
  double t7149;
  double t7151;
  double t7152;
  double t7154;
  double t7155;
  double t7156;
  double t5569;
  double t5617;
  double t5652;
  double t5656;
  double t5657;
  double t5663;
  double t5672;
  double t5673;
  double t5675;
  double t5676;
  double t5680;
  double t5681;
  double t5683;
  double t5688;
  double t5699;
  double t5702;
  double t5705;
  double t5713;
  double t5724;
  double t6543;
  double t6544;
  double t6545;
  double t6546;
  double t6548;
  double t6549;
  double t6551;
  double t6552;
  double t6553;
  double t6556;
  double t6557;
  double t6558;
  double t6559;
  double t6565;
  double t6566;
  double t6567;
  double t6570;
  double t6574;
  double t6577;
  double t6133;
  double t6135;
  double t6146;
  double t6147;
  double t6148;
  double t6153;
  double t6160;
  double t6161;
  double t6170;
  double t6184;
  double t6185;
  double t6187;
  double t6188;
  double t6189;
  double t6190;
  double t6192;
  double t6193;
  double t6196;
  double t6948;
  double t6949;
  double t6952;
  double t6953;
  double t6955;
  double t6956;
  double t6958;
  double t6963;
  double t6965;
  double t6968;
  double t6969;
  double t6971;
  double t6972;
  double t6978;
  double t6980;
  double t7205;
  double t7206;
  double t7207;
  double t7208;
  double t7209;
  double t7210;
  double t7214;
  double t7215;
  double t7216;
  double t7219;
  double t7220;
  double t7223;
  double t7224;
  double t7228;
  double t7231;
  double t7299;
  double t7300;
  double t7302;
  double t7307;
  double t7308;
  double t7311;
  double t7314;
  double t7315;
  double t7316;
  double t7360;
  double t7362;
  double t7250;
  double t7252;
  double t7254;
  double t7259;
  double t7260;
  double t7262;
  double t7263;
  double t7265;
  double t7270;
  double t7277;
  double t7278;
  double t7280;
  double t7281;
  double t7282;
  double t7283;
  double t7058;
  double t7062;
  double t7063;
  double t7064;
  double t7066;
  double t7067;
  double t7071;
  double t7072;
  double t7073;
  double t7076;
  double t7079;
  double t7080;
  double t7081;
  double t7084;
  double t7086;
  double t6722;
  double t6728;
  double t6729;
  double t6730;
  double t6731;
  double t6733;
  double t6737;
  double t6740;
  double t6741;
  double t6742;
  double t6744;
  double t6746;
  double t6752;
  double t6753;
  double t6754;
  double t6755;
  double t6757;
  double t6758;
  double t6759;
  t939 = Sin(var1[14]);
  t622 = Sin(var1[3]);
  t59 = Cos(var1[4]);
  t213 = Cos(var1[13]);
  t342 = -1.*t213;
  t464 = 1. + t342;
  t520 = Sin(var1[13]);
  t701 = Cos(var1[14]);
  t709 = -1.*t701;
  t716 = 1. + t709;
  t202 = Cos(var1[5]);
  t1498 = Sin(var1[5]);
  t2069 = 0.994522*t939;
  t2083 = 0. + t2069;
  t1350 = Sin(var1[4]);
  t1805 = t59*t202*t520*t622;
  t1846 = -1.*t213*t59*t622*t1498;
  t1852 = t1805 + t1846;
  t2162 = -1.*t213*t59*t202*t622;
  t2212 = -1.*t59*t520*t622*t1498;
  t2300 = t2162 + t2212;
  t1676 = -0.104528*t939;
  t1678 = 0. + t1676;
  t1130 = 0.104528*t939;
  t1157 = 0. + t1130;
  t977 = -0.994522*t939;
  t1081 = 0. + t977;
  t845 = -0.056500534356700764*t716;
  t1084 = 0.38315650737400003*t1081;
  t1231 = -0.040271188976*t1157;
  t1320 = 0. + t845 + t1084 + t1231;
  t485 = 0.4*t464;
  t543 = 0.12*t520;
  t582 = 0. + t485 + t543;
  t3160 = Cos(var1[3]);
  t1379 = 0.12*t464;
  t1386 = -0.4*t520;
  t1391 = 0. + t1379 + t1386;
  t1536 = 1.1345904784751044e-7*var1[14];
  t1554 = -0.04027119345689465*t716;
  t1697 = -0.05650052807*t1678;
  t1735 = t1536 + t1554 + t1697;
  t3205 = -1.*t3160*t202*t1350;
  t3241 = -1.*t622*t1498;
  t3335 = t3205 + t3241;
  t3356 = t202*t622;
  t3368 = -1.*t3160*t1350*t1498;
  t3445 = t3356 + t3368;
  t2039 = 1.1924972351948546e-8*var1[14];
  t2065 = 0.38315655000705834*t716;
  t2098 = -0.05650052807*t2083;
  t2115 = t2039 + t2065 + t2098;
  t3545 = -1.*t520*t3335;
  t3546 = t213*t3445;
  t3567 = t3545 + t3546;
  t2370 = -0.9890740084840001*t716;
  t2397 = 1. + t2370;
  t3581 = t213*t3335;
  t3600 = t520*t3445;
  t3688 = t3581 + t3600;
  t2461 = -0.010926102783999999*t716;
  t2477 = 1. + t2461;
  t2708 = -1.0000001112680001*t716;
  t2978 = 1. + t2708;
  t5058 = -1.*t202*t622*t1350;
  t5060 = t3160*t1498;
  t5107 = t5058 + t5060;
  t5229 = -1.*t3160*t202;
  t5241 = -1.*t622*t1350*t1498;
  t5248 = t5229 + t5241;
  t5277 = -1.*t520*t5107;
  t5290 = t213*t5248;
  t5296 = t5277 + t5290;
  t5327 = -1.*t213*t5107;
  t5362 = -1.*t520*t5248;
  t5368 = t5327 + t5362;
  t5642 = t213*t5107;
  t5647 = t520*t5248;
  t5651 = t5642 + t5647;
  t5741 = t3160*t202;
  t5745 = t622*t1350*t1498;
  t5750 = t5741 + t5745;
  t5752 = t520*t5107;
  t5753 = t213*t5750;
  t5754 = t5752 + t5753;
  t5759 = -1.*t520*t5750;
  t5761 = t5642 + t5759;
  t5877 = -1.*t3160*t59*t202*t520;
  t5878 = t213*t3160*t59*t1498;
  t5880 = t5877 + t5878;
  t5885 = t213*t3160*t59*t202;
  t5886 = t3160*t59*t520*t1498;
  t5898 = t5885 + t5886;
  t5979 = t3160*t202*t1350;
  t5981 = t622*t1498;
  t5988 = t5979 + t5981;
  t5992 = t520*t5988;
  t5994 = t5992 + t3546;
  t5997 = t213*t5988;
  t5999 = -1.*t520*t3445;
  t6006 = t5997 + t5999;
  t4520 = 0.12*t213;
  t4522 = 0.4*t520;
  t4707 = t4520 + t4522;
  t5189 = -0.4*t213;
  t5223 = t5189 + t543;
  t6069 = -1.*t202*t622;
  t6070 = t3160*t1350*t1498;
  t6073 = t6069 + t6070;
  t6080 = -1.*t520*t5988;
  t6083 = t213*t6073;
  t6084 = t6080 + t6083;
  t6089 = -1.*t213*t5988;
  t6090 = -1.*t520*t6073;
  t6092 = t6089 + t6090;
  t5526 = -0.3852670428678886*t701;
  t5561 = -0.056500534356700764*t939;
  t5567 = t5526 + t5561;
  t5573 = 0.0059058871981009595*t701;
  t5579 = -0.04027119345689465*t939;
  t5600 = 1.1345904784751044e-7 + t5573 + t5579;
  t5619 = -0.05619101817723254*t701;
  t5636 = 0.38315655000705834*t939;
  t5639 = 1.1924972351948546e-8 + t5619 + t5636;
  t6138 = t520*t6073;
  t6139 = t5997 + t6138;
  t5400 = 0.103955395616*t716*t5296;
  t5911 = 0.103955395616*t716*t5880;
  t6305 = -1.*t213*t3160*t59*t202;
  t6307 = -1.*t3160*t59*t520*t1498;
  t6308 = t6305 + t6307;
  t6342 = t3160*t59*t202*t520;
  t6347 = -1.*t213*t3160*t59*t1498;
  t6349 = t6342 + t6347;
  t5943 = 0.103955395616*t716*t5898;
  t699 = -1.*t59*t202*t582*t622;
  t1373 = t1320*t622*t1350;
  t1501 = -1.*t59*t1391*t622*t1498;
  t1918 = t1735*t1852;
  t2303 = t2115*t2300;
  t2307 = t2083*t622*t1350;
  t2312 = 0.103955395616*t716*t1852;
  t2426 = t2397*t2300;
  t2442 = t2307 + t2312 + t2426;
  t2450 = 0.362968*t2442;
  t2451 = t1678*t622*t1350;
  t2490 = t2477*t1852;
  t2546 = 0.103955395616*t716*t2300;
  t2604 = t2451 + t2490 + t2546;
  t2652 = 0.18652*t2604;
  t2983 = t2978*t622*t1350;
  t3036 = t1157*t1852;
  t3065 = t1081*t2300;
  t3080 = t2983 + t3036 + t3065;
  t3093 = -0.012773*t3080;
  t3102 = t699 + t1373 + t1501 + t1918 + t2303 + t2450 + t2652 + t3093;
  t3199 = -1.*t3160*t59*t1320;
  t3857 = -1.*t3160*t59*t2083;
  t6420 = t3160*t202*t520*t1350;
  t6422 = -1.*t213*t3160*t1350*t1498;
  t6423 = t6420 + t6422;
  t6426 = -1.*t213*t3160*t202*t1350;
  t6431 = -1.*t3160*t520*t1350*t1498;
  t6432 = t6426 + t6431;
  t4054 = -1.*t3160*t59*t1678;
  t4224 = -1.*t2978*t3160*t59;
  t5873 = t3160*t59*t202*t582;
  t5874 = -1.*t3160*t1320*t1350;
  t5876 = t3160*t59*t1391*t1498;
  t5881 = t1735*t5880;
  t5904 = t2115*t5898;
  t5905 = -1.*t3160*t2083*t1350;
  t5914 = t2397*t5898;
  t5917 = t5905 + t5911 + t5914;
  t5922 = 0.362968*t5917;
  t5927 = -1.*t3160*t1678*t1350;
  t5928 = t2477*t5880;
  t5948 = t5927 + t5928 + t5943;
  t5949 = 0.18652*t5948;
  t5953 = -1.*t2978*t3160*t1350;
  t5954 = t1157*t5880;
  t5955 = t1081*t5898;
  t5956 = t5953 + t5954 + t5955;
  t5959 = -0.012773*t5956;
  t5965 = t5873 + t5874 + t5876 + t5881 + t5904 + t5922 + t5949 + t5959;
  t6465 = -1.*t59*t202*t520*t622;
  t6468 = t213*t59*t622*t1498;
  t6469 = t6465 + t6468;
  t6511 = t213*t59*t202*t622;
  t6513 = t59*t520*t622*t1498;
  t6514 = t6511 + t6513;
  t6209 = -1.*t59*t1320*t622;
  t6230 = -1.*t59*t2083*t622;
  t6588 = t202*t520*t622*t1350;
  t6589 = -1.*t213*t622*t1350*t1498;
  t6590 = t6588 + t6589;
  t6592 = -1.*t213*t202*t622*t1350;
  t6593 = -1.*t520*t622*t1350*t1498;
  t6595 = t6592 + t6593;
  t6245 = -1.*t59*t1678*t622;
  t6268 = -1.*t2978*t59*t622;
  t6628 = t59*t202*t520;
  t6630 = -1.*t213*t59*t1498;
  t6631 = t6628 + t6630;
  t6638 = -1.*t213*t59*t202;
  t6639 = -1.*t59*t520*t1498;
  t6640 = t6638 + t6639;
  t6674 = -1.*t202*t520*t1350;
  t6677 = t213*t1350*t1498;
  t6678 = t6674 + t6677;
  t6680 = -1.*t213*t202*t1350;
  t6682 = -1.*t520*t1350*t1498;
  t6683 = t6680 + t6682;
  t6723 = t202*t520*t1350;
  t6725 = -1.*t213*t1350*t1498;
  t6726 = t6723 + t6725;
  t6771 = t213*t202*t1350;
  t6772 = t520*t1350*t1498;
  t6776 = t6771 + t6772;
  t6340 = t3160*t59*t202*t1391;
  t6341 = -1.*t3160*t59*t582*t1498;
  t6350 = t2115*t6349;
  t6351 = t1735*t5898;
  t6352 = 0.103955395616*t716*t6349;
  t6353 = t2477*t5898;
  t6357 = t6352 + t6353;
  t6358 = 0.18652*t6357;
  t6359 = t2397*t6349;
  t6360 = t6359 + t5943;
  t6364 = 0.362968*t6360;
  t6366 = t1081*t6349;
  t6372 = t1157*t5898;
  t6377 = t6366 + t6372;
  t6380 = -0.012773*t6377;
  t6381 = t6340 + t6341 + t6350 + t6351 + t6358 + t6364 + t6380;
  t6814 = -1.*t213*t3445;
  t6815 = t6080 + t6814;
  t6027 = 0.103955395616*t716*t6006;
  t3337 = t582*t3335;
  t3453 = t1391*t3445;
  t3575 = t1735*t3567;
  t3850 = t2115*t3688;
  t3881 = 0.103955395616*t716*t3567;
  t3910 = t2397*t3688;
  t4106 = t2477*t3567;
  t4121 = 0.103955395616*t716*t3688;
  t4237 = t1157*t3567;
  t4278 = t1081*t3688;
  t5734 = t1391*t5107;
  t5751 = t582*t5750;
  t5758 = t2115*t5754;
  t5762 = t1735*t5761;
  t5763 = 0.103955395616*t716*t5754;
  t5766 = t2477*t5761;
  t5768 = t5763 + t5766;
  t5769 = 0.18652*t5768;
  t5775 = t2397*t5754;
  t5779 = 0.103955395616*t716*t5761;
  t5782 = t5775 + t5779;
  t5785 = 0.362968*t5782;
  t5794 = t1081*t5754;
  t5795 = t1157*t5761;
  t5803 = t5794 + t5795;
  t5822 = -0.012773*t5803;
  t5838 = t5734 + t5751 + t5758 + t5762 + t5769 + t5785 + t5822;
  t6503 = t59*t202*t1391*t622;
  t6505 = -1.*t59*t582*t622*t1498;
  t6506 = t2115*t1852;
  t6516 = t1735*t6514;
  t6517 = t2477*t6514;
  t6524 = t2312 + t6517;
  t6526 = 0.18652*t6524;
  t6527 = t2397*t1852;
  t6530 = 0.103955395616*t716*t6514;
  t6531 = t6527 + t6530;
  t6534 = 0.362968*t6531;
  t6536 = t1081*t1852;
  t6537 = t1157*t6514;
  t6539 = t6536 + t6537;
  t6540 = -0.012773*t6539;
  t6541 = t6503 + t6505 + t6506 + t6516 + t6526 + t6534 + t6540;
  t5990 = t1391*t5988;
  t5991 = t582*t3445;
  t5996 = t2115*t5994;
  t6007 = t1735*t6006;
  t6016 = 0.103955395616*t716*t5994;
  t6017 = t2477*t6006;
  t6019 = t6016 + t6017;
  t6022 = 0.18652*t6019;
  t6024 = t2397*t5994;
  t6033 = t6024 + t6027;
  t6042 = 0.362968*t6033;
  t6045 = t1081*t5994;
  t6054 = t1157*t6006;
  t6055 = t6045 + t6054;
  t6056 = -0.012773*t6055;
  t6057 = t5990 + t5991 + t5996 + t6007 + t6022 + t6042 + t6056;
  t6894 = t202*t622*t1350;
  t6895 = -1.*t3160*t1498;
  t6898 = t6894 + t6895;
  t6903 = -1.*t520*t6898;
  t6905 = -1.*t213*t5248;
  t6906 = t6903 + t6905;
  t6913 = t213*t6898;
  t6914 = t6913 + t5362;
  t6945 = t520*t6898;
  t6947 = t6945 + t5290;
  t6212 = t582*t5107;
  t6215 = t1391*t5248;
  t6217 = t1735*t5296;
  t6220 = t2115*t5651;
  t6233 = t2397*t5651;
  t6248 = t2477*t5296;
  t6252 = 0.103955395616*t716*t5651;
  t6270 = t1157*t5296;
  t6273 = t1081*t5651;
  t6620 = -1.*t59*t202*t582;
  t6624 = -1.*t59*t1391*t1498;
  t6637 = t1735*t6631;
  t6641 = t2115*t6640;
  t6643 = 0.103955395616*t716*t6631;
  t6645 = t2397*t6640;
  t6649 = t2477*t6631;
  t6650 = 0.103955395616*t716*t6640;
  t6658 = t1157*t6631;
  t6659 = t1081*t6640;
  t7028 = -1.*t59*t202*t520;
  t7030 = t213*t59*t1498;
  t7031 = t7028 + t7030;
  t7034 = t213*t59*t202;
  t7035 = t59*t520*t1498;
  t7037 = t7034 + t7035;
  t6670 = -1.*t202*t1391*t1350;
  t6673 = t582*t1350*t1498;
  t6679 = t2115*t6678;
  t6684 = t1735*t6683;
  t6686 = 0.103955395616*t716*t6678;
  t6687 = t2477*t6683;
  t6690 = t6686 + t6687;
  t6693 = 0.18652*t6690;
  t6695 = t2397*t6678;
  t6696 = 0.103955395616*t716*t6683;
  t6700 = t6695 + t6696;
  t6704 = 0.362968*t6700;
  t6708 = t1081*t6678;
  t6711 = t1157*t6683;
  t6713 = t6708 + t6711;
  t6718 = -0.012773*t6713;
  t6719 = t6670 + t6673 + t6679 + t6684 + t6693 + t6704 + t6718;
  t6293 = t3160*t59*t202*t4707;
  t6298 = t3160*t59*t5223*t1498;
  t6299 = t2115*t5880;
  t6312 = t1735*t6308;
  t6314 = t2477*t6308;
  t6317 = t5911 + t6314;
  t6318 = 0.18652*t6317;
  t6319 = t2397*t5880;
  t6320 = 0.103955395616*t716*t6308;
  t6321 = t6319 + t6320;
  t6327 = 0.362968*t6321;
  t6328 = t1081*t5880;
  t6329 = t1157*t6308;
  t6330 = t6328 + t6329;
  t6332 = -0.012773*t6330;
  t6338 = t6293 + t6298 + t6299 + t6312 + t6318 + t6327 + t6332;
  t6812 = t5223*t5988;
  t6813 = t4707*t3445;
  t6816 = t1735*t6815;
  t6817 = t2115*t6006;
  t6818 = 0.103955395616*t716*t6815;
  t6820 = t2397*t6006;
  t6821 = t6818 + t6820;
  t6822 = 0.362968*t6821;
  t6823 = t2477*t6815;
  t6824 = t6823 + t6027;
  t6825 = 0.18652*t6824;
  t6827 = t1157*t6815;
  t6828 = t1081*t6006;
  t6829 = t6827 + t6828;
  t6831 = -0.012773*t6829;
  t6832 = t6812 + t6813 + t6816 + t6817 + t6822 + t6825 + t6831;
  t7107 = -1.*t213*t6073;
  t7108 = t5992 + t7107;
  t6111 = 0.103955395616*t716*t6092;
  t6183 = 0.103955395616*t939*t6084;
  t5155 = t4707*t5107;
  t5257 = t5223*t5248;
  t5320 = t2115*t5296;
  t5387 = t1735*t5368;
  t5403 = t2477*t5368;
  t5408 = t5400 + t5403;
  t5417 = 0.18652*t5408;
  t5456 = t2397*t5296;
  t5458 = 0.103955395616*t716*t5368;
  t5467 = t5456 + t5458;
  t5470 = 0.362968*t5467;
  t5474 = t1081*t5296;
  t5476 = t1157*t5368;
  t5485 = t5474 + t5476;
  t5487 = -0.012773*t5485;
  t5506 = t5155 + t5257 + t5320 + t5387 + t5417 + t5470 + t5487;
  t6460 = t59*t202*t4707*t622;
  t6461 = t59*t5223*t622*t1498;
  t6470 = t2115*t6469;
  t6484 = t1735*t2300;
  t6485 = 0.103955395616*t716*t6469;
  t6487 = t2477*t2300;
  t6489 = t6485 + t6487;
  t6491 = 0.18652*t6489;
  t6492 = t2397*t6469;
  t6493 = t6492 + t2546;
  t6494 = 0.362968*t6493;
  t6495 = t1081*t6469;
  t6497 = t1157*t2300;
  t6498 = t6495 + t6497;
  t6499 = -0.012773*t6498;
  t6500 = t6460 + t6461 + t6470 + t6484 + t6491 + t6494 + t6499;
  t6067 = t4707*t5988;
  t6076 = t5223*t6073;
  t6085 = t2115*t6084;
  t6094 = t1735*t6092;
  t6095 = 0.103955395616*t716*t6084;
  t6100 = t2477*t6092;
  t6101 = t6095 + t6100;
  t6104 = 0.18652*t6101;
  t6106 = t2397*t6084;
  t6112 = t6106 + t6111;
  t6113 = 0.362968*t6112;
  t6114 = t1081*t6084;
  t6117 = t1157*t6092;
  t6123 = t6114 + t6117;
  t6125 = -0.012773*t6123;
  t6126 = t6067 + t6076 + t6085 + t6094 + t6104 + t6113 + t6125;
  t6899 = t5223*t6898;
  t6900 = t4707*t5248;
  t6910 = t1735*t6906;
  t6915 = t2115*t6914;
  t6916 = 0.103955395616*t716*t6906;
  t6917 = t2397*t6914;
  t6919 = t6916 + t6917;
  t6922 = 0.362968*t6919;
  t6923 = t2477*t6906;
  t6925 = 0.103955395616*t716*t6914;
  t6928 = t6923 + t6925;
  t6931 = 0.18652*t6928;
  t6934 = t1157*t6906;
  t6936 = t1081*t6914;
  t6939 = t6934 + t6936;
  t6940 = -0.012773*t6939;
  t6943 = t6899 + t6900 + t6910 + t6915 + t6922 + t6931 + t6940;
  t7099 = 0.4*t213;
  t7100 = -0.12*t520;
  t7102 = t7099 + t7100;
  t7172 = -1.*t213*t5750;
  t7173 = t6945 + t7172;
  t7175 = -1.*t213*t6898;
  t7176 = t7175 + t5759;
  t7204 = t6903 + t5753;
  t7008 = t6643 + t6645;
  t7009 = 0.362968*t7008;
  t7012 = t6649 + t6650;
  t7013 = 0.18652*t7012;
  t7014 = t6658 + t6659;
  t7017 = -0.012773*t7014;
  t7025 = t59*t202*t5223;
  t7027 = -1.*t59*t4707*t1498;
  t7032 = t1735*t7031;
  t7039 = t2115*t7037;
  t7040 = 0.103955395616*t716*t7031;
  t7041 = t2397*t7037;
  t7042 = t7040 + t7041;
  t7043 = 0.362968*t7042;
  t7044 = t2477*t7031;
  t7045 = 0.103955395616*t716*t7037;
  t7046 = t7044 + t7045;
  t7047 = 0.18652*t7046;
  t7048 = t1157*t7031;
  t7049 = t1081*t7037;
  t7050 = t7048 + t7049;
  t7052 = -0.012773*t7050;
  t7055 = t7025 + t7027 + t7032 + t7039 + t7043 + t7047 + t7052;
  t6764 = -1.*t202*t4707*t1350;
  t6767 = -1.*t5223*t1350*t1498;
  t6770 = t2115*t6726;
  t6778 = t1735*t6776;
  t6780 = 0.103955395616*t716*t6726;
  t6781 = t2477*t6776;
  t6783 = t6780 + t6781;
  t6784 = 0.18652*t6783;
  t6787 = t2397*t6726;
  t6788 = 0.103955395616*t716*t6776;
  t6790 = t6787 + t6788;
  t6795 = 0.362968*t6790;
  t6798 = t1081*t6726;
  t6799 = t1157*t6776;
  t6801 = t6798 + t6799;
  t6802 = -0.012773*t6801;
  t6803 = t6764 + t6767 + t6770 + t6778 + t6784 + t6795 + t6802;
  t6384 = -1.*t3160*t5567*t1350;
  t6385 = t5600*t5880;
  t6386 = t5639*t5898;
  t6387 = 1.0000001112680001*t3160*t939*t1350;
  t6388 = 0.104528*t701*t5880;
  t6390 = -0.994522*t701*t5898;
  t6391 = t6387 + t6388 + t6390;
  t6393 = -0.012773*t6391;
  t6394 = -0.994522*t701*t3160*t1350;
  t6395 = 0.103955395616*t939*t5880;
  t6396 = -0.9890740084840001*t939*t5898;
  t6397 = t6394 + t6395 + t6396;
  t6401 = 0.362968*t6397;
  t6404 = 0.104528*t701*t3160*t1350;
  t6405 = -0.010926102783999999*t939*t5880;
  t6407 = 0.103955395616*t939*t5898;
  t6409 = t6404 + t6405 + t6407;
  t6410 = 0.18652*t6409;
  t6412 = t6384 + t6385 + t6386 + t6393 + t6401 + t6410;
  t6836 = t5639*t5994;
  t6839 = t5600*t6006;
  t6840 = -0.994522*t701*t5994;
  t6841 = 0.104528*t701*t6006;
  t6842 = t6840 + t6841;
  t6843 = -0.012773*t6842;
  t6844 = 0.103955395616*t939*t5994;
  t6848 = -0.010926102783999999*t939*t6006;
  t6852 = t6844 + t6848;
  t6853 = 0.18652*t6852;
  t6854 = -0.9890740084840001*t939*t5994;
  t6856 = 0.103955395616*t939*t6006;
  t6857 = t6854 + t6856;
  t6860 = 0.362968*t6857;
  t6863 = t6836 + t6839 + t6843 + t6853 + t6860;
  t7130 = t5639*t6084;
  t7132 = t5600*t6092;
  t7136 = -0.994522*t701*t6084;
  t7137 = 0.104528*t701*t6092;
  t7138 = t7136 + t7137;
  t7139 = -0.012773*t7138;
  t7140 = -0.010926102783999999*t939*t6092;
  t7146 = t6183 + t7140;
  t7149 = 0.18652*t7146;
  t7151 = -0.9890740084840001*t939*t6084;
  t7152 = 0.103955395616*t939*t6092;
  t7154 = t7151 + t7152;
  t7155 = 0.362968*t7154;
  t7156 = t7130 + t7132 + t7139 + t7149 + t7155;
  t5569 = -1.*t59*t5567*t622;
  t5617 = t5600*t5296;
  t5652 = t5639*t5651;
  t5656 = 1.0000001112680001*t59*t939*t622;
  t5657 = 0.104528*t701*t5296;
  t5663 = -0.994522*t701*t5651;
  t5672 = t5656 + t5657 + t5663;
  t5673 = -0.012773*t5672;
  t5675 = -0.994522*t701*t59*t622;
  t5676 = 0.103955395616*t939*t5296;
  t5680 = -0.9890740084840001*t939*t5651;
  t5681 = t5675 + t5676 + t5680;
  t5683 = 0.362968*t5681;
  t5688 = 0.104528*t701*t59*t622;
  t5699 = -0.010926102783999999*t939*t5296;
  t5702 = 0.103955395616*t939*t5651;
  t5705 = t5688 + t5699 + t5702;
  t5713 = 0.18652*t5705;
  t5724 = t5569 + t5617 + t5652 + t5673 + t5683 + t5713;
  t6543 = -1.*t5567*t622*t1350;
  t6544 = t5600*t6469;
  t6545 = t5639*t6514;
  t6546 = 1.0000001112680001*t939*t622*t1350;
  t6548 = 0.104528*t701*t6469;
  t6549 = -0.994522*t701*t6514;
  t6551 = t6546 + t6548 + t6549;
  t6552 = -0.012773*t6551;
  t6553 = -0.994522*t701*t622*t1350;
  t6556 = 0.103955395616*t939*t6469;
  t6557 = -0.9890740084840001*t939*t6514;
  t6558 = t6553 + t6556 + t6557;
  t6559 = 0.362968*t6558;
  t6565 = 0.104528*t701*t622*t1350;
  t6566 = -0.010926102783999999*t939*t6469;
  t6567 = 0.103955395616*t939*t6514;
  t6570 = t6565 + t6566 + t6567;
  t6574 = 0.18652*t6570;
  t6577 = t6543 + t6544 + t6545 + t6552 + t6559 + t6574;
  t6133 = t3160*t59*t5567;
  t6135 = t5600*t6084;
  t6146 = t5639*t6139;
  t6147 = -1.0000001112680001*t3160*t59*t939;
  t6148 = 0.104528*t701*t6084;
  t6153 = -0.994522*t701*t6139;
  t6160 = t6147 + t6148 + t6153;
  t6161 = -0.012773*t6160;
  t6170 = 0.994522*t701*t3160*t59;
  t6184 = -0.9890740084840001*t939*t6139;
  t6185 = t6170 + t6183 + t6184;
  t6187 = 0.362968*t6185;
  t6188 = -0.104528*t701*t3160*t59;
  t6189 = -0.010926102783999999*t939*t6084;
  t6190 = 0.103955395616*t939*t6139;
  t6192 = t6188 + t6189 + t6190;
  t6193 = 0.18652*t6192;
  t6196 = t6133 + t6135 + t6146 + t6161 + t6187 + t6193;
  t6948 = t5639*t6947;
  t6949 = t5600*t6914;
  t6952 = -0.994522*t701*t6947;
  t6953 = 0.104528*t701*t6914;
  t6955 = t6952 + t6953;
  t6956 = -0.012773*t6955;
  t6958 = 0.103955395616*t939*t6947;
  t6963 = -0.010926102783999999*t939*t6914;
  t6965 = t6958 + t6963;
  t6968 = 0.18652*t6965;
  t6969 = -0.9890740084840001*t939*t6947;
  t6971 = 0.103955395616*t939*t6914;
  t6972 = t6969 + t6971;
  t6978 = 0.362968*t6972;
  t6980 = t6948 + t6949 + t6956 + t6968 + t6978;
  t7205 = t5639*t7204;
  t7206 = t5600*t7176;
  t7207 = -0.994522*t701*t7204;
  t7208 = 0.104528*t701*t7176;
  t7209 = t7207 + t7208;
  t7210 = -0.012773*t7209;
  t7214 = 0.103955395616*t939*t7204;
  t7215 = -0.010926102783999999*t939*t7176;
  t7216 = t7214 + t7215;
  t7219 = 0.18652*t7216;
  t7220 = -0.9890740084840001*t939*t7204;
  t7223 = 0.103955395616*t939*t7176;
  t7224 = t7220 + t7223;
  t7228 = 0.362968*t7224;
  t7231 = t7205 + t7206 + t7210 + t7219 + t7228;
  t7299 = -0.056500534356700764*t701;
  t7300 = 0.3852670428678886*t939;
  t7302 = t7299 + t7300;
  t7307 = -0.04027119345689465*t701;
  t7308 = -0.0059058871981009595*t939;
  t7311 = t7307 + t7308;
  t7314 = 0.38315655000705834*t701;
  t7315 = 0.05619101817723254*t939;
  t7316 = t7314 + t7315;
  t7360 = t520*t5750;
  t7362 = t6913 + t7360;
  t7250 = t5639*t7031;
  t7252 = t5600*t6640;
  t7254 = -0.994522*t701*t7031;
  t7259 = 0.104528*t701*t6640;
  t7260 = t7254 + t7259;
  t7262 = -0.012773*t7260;
  t7263 = 0.103955395616*t939*t7031;
  t7265 = -0.010926102783999999*t939*t6640;
  t7270 = t7263 + t7265;
  t7277 = 0.18652*t7270;
  t7278 = -0.9890740084840001*t939*t7031;
  t7280 = 0.103955395616*t939*t6640;
  t7281 = t7278 + t7280;
  t7282 = 0.362968*t7281;
  t7283 = t7250 + t7252 + t7262 + t7277 + t7282;
  t7058 = t5639*t6631;
  t7062 = t5600*t7037;
  t7063 = -0.994522*t701*t6631;
  t7064 = 0.104528*t701*t7037;
  t7066 = t7063 + t7064;
  t7067 = -0.012773*t7066;
  t7071 = 0.103955395616*t939*t6631;
  t7072 = -0.010926102783999999*t939*t7037;
  t7073 = t7071 + t7072;
  t7076 = 0.18652*t7073;
  t7079 = -0.9890740084840001*t939*t6631;
  t7080 = 0.103955395616*t939*t7037;
  t7081 = t7079 + t7080;
  t7084 = 0.362968*t7081;
  t7086 = t7058 + t7062 + t7067 + t7076 + t7084;
  t6722 = -1.*t59*t5567;
  t6728 = t5600*t6726;
  t6729 = t5639*t6683;
  t6730 = 1.0000001112680001*t59*t939;
  t6731 = 0.104528*t701*t6726;
  t6733 = -0.994522*t701*t6683;
  t6737 = t6730 + t6731 + t6733;
  t6740 = -0.012773*t6737;
  t6741 = -0.994522*t701*t59;
  t6742 = 0.103955395616*t939*t6726;
  t6744 = -0.9890740084840001*t939*t6683;
  t6746 = t6741 + t6742 + t6744;
  t6752 = 0.362968*t6746;
  t6753 = 0.104528*t701*t59;
  t6754 = -0.010926102783999999*t939*t6726;
  t6755 = 0.103955395616*t939*t6683;
  t6757 = t6753 + t6754 + t6755;
  t6758 = 0.18652*t6757;
  t6759 = t6722 + t6728 + t6729 + t6740 + t6752 + t6758;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(t3199 + t3337 + t3453 + t3575 + t3850 + 0.362968*(t3857 + t3881 + t3910) + 0.18652*(t4054 + t4106 + t4121) - 0.012773*(t4224 + t4237 + t4278))*var2[3] + t3102*var2[4] + t5838*var2[5] + t5506*var2[13] + t5724*var2[14];
  p_output1[10]=(t6209 + t6212 + t6215 + t6217 + t6220 + 0.362968*(t5400 + t6230 + t6233) + 0.18652*(t6245 + t6248 + t6252) - 0.012773*(t6268 + t6270 + t6273))*var2[3] + t5965*var2[4] + t6057*var2[5] + t6126*var2[13] + t6196*var2[14];
  p_output1[11]=0;
  p_output1[12]=t3102*var2[3] + (-1.*t1350*t1391*t1498*t3160 + t3199 - 1.*t1350*t202*t3160*t582 + t1735*t6423 + t2115*t6432 - 0.012773*(t4224 + t1157*t6423 + t1081*t6432) + 0.362968*(t3857 + t2397*t6432 + 0.103955395616*t6423*t716) + 0.18652*(t4054 + t2477*t6423 + 0.103955395616*t6432*t716))*var2[4] + t6381*var2[5] + t6338*var2[13] + t6412*var2[14];
  p_output1[13]=t5965*var2[3] + (t6209 - 1.*t1350*t1391*t1498*t622 - 1.*t1350*t202*t582*t622 + t1735*t6590 + t2115*t6595 - 0.012773*(t6268 + t1157*t6590 + t1081*t6595) + 0.362968*(t6230 + t2397*t6595 + 0.103955395616*t6590*t716) + 0.18652*(t6245 + t2477*t6590 + 0.103955395616*t6595*t716))*var2[4] + t6541*var2[5] + t6500*var2[13] + t6577*var2[14];
  p_output1[14]=(t1320*t1350 + t6620 + t6624 + t6637 + t6641 + 0.362968*(t1350*t2083 + t6643 + t6645) + 0.18652*(t1350*t1678 + t6649 + t6650) - 0.012773*(t1350*t2978 + t6658 + t6659))*var2[4] + t6719*var2[5] + t6803*var2[13] + t6759*var2[14];
  p_output1[15]=t5838*var2[3] + t6381*var2[4] + (t3337 + t3453 + t3575 + t3850 + 0.362968*(t3881 + t3910) + 0.18652*(t4106 + t4121) - 0.012773*(t4237 + t4278))*var2[5] + t6832*var2[13] + t6863*var2[14];
  p_output1[16]=t6057*var2[3] + t6541*var2[4] + (t6212 + t6215 + t6217 + t6220 + 0.362968*(t5400 + t6233) + 0.18652*(t6248 + t6252) - 0.012773*(t6270 + t6273))*var2[5] + t6943*var2[13] + t6980*var2[14];
  p_output1[17]=t6719*var2[4] + (t6620 + t6624 + t6637 + t6641 + t7009 + t7013 + t7017)*var2[5] + t7055*var2[13] + t7086*var2[14];
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t5506*var2[3] + t6338*var2[4] + t6832*var2[5] + (t4707*t6073 + t2115*t6092 + t5988*t7102 + t1735*t7108 - 0.012773*(t1081*t6092 + t1157*t7108) + 0.18652*(t6111 + t2477*t7108) + 0.362968*(t2397*t6092 + 0.103955395616*t7108*t716))*var2[13] + t7156*var2[14];
  p_output1[40]=t6126*var2[3] + t6500*var2[4] + t6943*var2[5] + (t4707*t5750 + t6898*t7102 + t1735*t7173 + t2115*t7176 - 0.012773*(t1157*t7173 + t1081*t7176) + 0.362968*(0.103955395616*t716*t7173 + t2397*t7176) + 0.18652*(t2477*t7173 + 0.103955395616*t716*t7176))*var2[13] + t7231*var2[14];
  p_output1[41]=t6803*var2[4] + t7055*var2[5] + (t1498*t4707*t59 + t6637 + t6641 + t7009 + t7013 + t7017 + t202*t59*t7102)*var2[13] + t7283*var2[14];
  p_output1[42]=t5724*var2[3] + t6412*var2[4] + t6863*var2[5] + t7156*var2[13] + (t3160*t59*t7302 + t6084*t7311 + t6139*t7316 + 0.362968*(0.103955395616*t6084*t701 - 0.9890740084840001*t6139*t701 - 0.994522*t3160*t59*t939) + 0.18652*(-0.010926102783999999*t6084*t701 + 0.103955395616*t6139*t701 + 0.104528*t3160*t59*t939) - 0.012773*(-1.0000001112680001*t3160*t59*t701 - 0.104528*t6084*t939 + 0.994522*t6139*t939))*var2[14];
  p_output1[43]=t6196*var2[3] + t6577*var2[4] + t6980*var2[5] + t7231*var2[13] + (t59*t622*t7302 + t7204*t7311 + t7316*t7362 + 0.362968*(0.103955395616*t701*t7204 - 0.9890740084840001*t701*t7362 - 0.994522*t59*t622*t939) + 0.18652*(-0.010926102783999999*t701*t7204 + 0.103955395616*t701*t7362 + 0.104528*t59*t622*t939) - 0.012773*(-1.0000001112680001*t59*t622*t701 - 0.104528*t7204*t939 + 0.994522*t7362*t939))*var2[14];
  p_output1[44]=t6759*var2[4] + t7086*var2[5] + t7283*var2[13] + (-1.*t1350*t7302 + t7031*t7311 + t7037*t7316 + 0.18652*(-0.010926102783999999*t701*t7031 + 0.103955395616*t701*t7037 - 0.104528*t1350*t939) + 0.362968*(0.103955395616*t701*t7031 - 0.9890740084840001*t701*t7037 + 0.994522*t1350*t939) - 0.012773*(1.0000001112680001*t1350*t701 - 0.104528*t7031*t939 + 0.994522*t7037*t939))*var2[14];
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void dJp_left_shoulder_pitch_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
