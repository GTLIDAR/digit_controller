/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:56:42 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dT_left_hip_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t328;
  double t329;
  double t136;
  double t137;
  double t268;
  double t780;
  double t355;
  double t455;
  double t862;
  double t20;
  double t78;
  double t89;
  double t730;
  double t866;
  double t903;
  double t1065;
  double t1130;
  double t1205;
  double t1244;
  double t1248;
  double t1595;
  double t1599;
  double t1625;
  double t1630;
  double t1650;
  double t1659;
  double t1663;
  double t1678;
  double t1694;
  double t1698;
  double t996;
  double t1004;
  double t1032;
  double t1211;
  double t1257;
  double t1336;
  double t1361;
  double t1438;
  double t1723;
  double t1469;
  double t1483;
  double t1485;
  double t1492;
  double t1496;
  double t1505;
  double t1552;
  double t1559;
  double t1456;
  double t1467;
  double t2224;
  double t2279;
  double t2297;
  double t2312;
  double t2242;
  double t2253;
  double t2269;
  double t2276;
  double t2314;
  double t2327;
  double t2353;
  double t2364;
  double t2374;
  double t1725;
  double t1754;
  double t1840;
  double t1844;
  double t2475;
  double t2494;
  double t2511;
  double t2442;
  double t2444;
  double t2457;
  double t1884;
  double t1894;
  double t2332;
  double t2403;
  double t2431;
  double t1920;
  double t1933;
  double t1995;
  double t1999;
  double t2096;
  double t2103;
  double t2725;
  double t2735;
  double t2740;
  double t2750;
  double t2767;
  double t2815;
  double t2826;
  double t2829;
  double t2830;
  double t2941;
  double t2942;
  double t2948;
  double t2875;
  double t2915;
  double t2933;
  double t2821;
  double t2853;
  double t2858;
  double t3204;
  double t3213;
  double t3267;
  double t3184;
  double t3188;
  double t3192;
  double t3200;
  double t3281;
  double t3288;
  double t3327;
  double t3343;
  double t3345;
  double t3387;
  double t3388;
  double t3408;
  double t3418;
  double t3305;
  double t3352;
  double t3354;
  double t3361;
  double t3366;
  double t3372;
  double t3379;
  double t3383;
  double t3495;
  double t3497;
  double t3550;
  double t3555;
  double t3559;
  double t3564;
  double t3515;
  double t3524;
  double t3541;
  double t3542;
  double t3491;
  double t3492;
  double t3506;
  double t3511;
  double t3732;
  double t3735;
  double t3746;
  double t3756;
  double t3667;
  double t3670;
  double t3671;
  double t3712;
  double t3715;
  double t3717;
  double t3727;
  double t3872;
  double t3877;
  double t3879;
  double t3888;
  double t3899;
  double t3909;
  double t3957;
  double t3962;
  double t3964;
  double t3965;
  double t3883;
  double t3920;
  double t3924;
  double t3935;
  double t3937;
  double t3945;
  double t3947;
  double t3952;
  double t4063;
  double t4064;
  double t4068;
  double t4047;
  double t4050;
  double t4052;
  double t4058;
  double t4070;
  double t4073;
  double t4078;
  double t4091;
  double t4092;
  double t4126;
  double t4131;
  double t4133;
  double t4111;
  double t4115;
  double t4118;
  double t4074;
  double t4094;
  double t4099;
  double t4231;
  double t4233;
  double t4235;
  double t4243;
  double t4247;
  double t4303;
  double t4304;
  double t4313;
  double t4261;
  double t4264;
  double t4274;
  double t4234;
  double t4252;
  double t4255;
  double t4477;
  double t4478;
  double t4527;
  double t4529;
  double t4537;
  double t4540;
  double t4493;
  double t4502;
  double t4514;
  double t4520;
  double t4465;
  double t4468;
  double t4480;
  double t4482;
  double t4653;
  double t4656;
  double t4663;
  double t4668;
  double t4630;
  double t4635;
  double t4638;
  double t4641;
  double t4642;
  double t4644;
  double t4646;
  double t4762;
  double t4765;
  double t4771;
  double t4773;
  double t4778;
  double t4780;
  double t4801;
  double t4803;
  double t4807;
  double t4789;
  double t4791;
  double t4793;
  double t4772;
  double t4784;
  double t4786;
  double t4897;
  double t4906;
  double t4910;
  double t4915;
  double t4916;
  double t4952;
  double t5016;
  double t5049;
  double t5050;
  double t4987;
  double t4995;
  double t5004;
  double t4914;
  double t4967;
  double t4971;
  double t5187;
  double t5196;
  double t5200;
  double t5217;
  double t5220;
  double t5227;
  double t5279;
  double t5283;
  double t5285;
  double t5287;
  double t5209;
  double t5228;
  double t5229;
  double t5231;
  double t5242;
  double t5246;
  double t5254;
  double t5269;
  double t5494;
  double t5496;
  double t5498;
  double t5501;
  double t5470;
  double t5476;
  double t5480;
  double t5482;
  double t5406;
  double t5408;
  double t5425;
  double t5451;
  double t5633;
  double t5635;
  double t5642;
  double t5654;
  double t5591;
  double t5595;
  double t5596;
  double t5613;
  double t5618;
  double t5620;
  double t1443;
  double t1585;
  double t1762;
  double t1826;
  double t1848;
  double t1901;
  double t1955;
  double t1969;
  double t1981;
  double t2060;
  double t2066;
  double t2154;
  double t2155;
  double t2434;
  double t2458;
  double t2515;
  double t2558;
  double t2620;
  double t2636;
  double t2637;
  double t2644;
  double t2671;
  double t2672;
  double t2677;
  double t2678;
  double t2696;
  double t2870;
  double t2937;
  double t2987;
  double t3001;
  double t3032;
  double t3058;
  double t3064;
  double t3069;
  double t3093;
  double t3099;
  double t3108;
  double t3126;
  double t3139;
  double t3364;
  double t3386;
  double t3422;
  double t3433;
  double t3439;
  double t3450;
  double t3452;
  double t3453;
  double t3454;
  double t3455;
  double t3457;
  double t3463;
  double t3479;
  double t3514;
  double t3545;
  double t3566;
  double t3569;
  double t3584;
  double t3592;
  double t3593;
  double t3605;
  double t3610;
  double t3613;
  double t3614;
  double t3621;
  double t3634;
  double t3710;
  double t3731;
  double t3758;
  double t3763;
  double t3764;
  double t3776;
  double t3781;
  double t3787;
  double t3804;
  double t3817;
  double t3827;
  double t3839;
  double t3840;
  double t3936;
  double t3954;
  double t3966;
  double t3970;
  double t3975;
  double t3980;
  double t3987;
  double t3989;
  double t3996;
  double t4006;
  double t4026;
  double t4027;
  double t4032;
  double t4102;
  double t4120;
  double t4137;
  double t4138;
  double t4157;
  double t4158;
  double t4159;
  double t4160;
  double t4167;
  double t4168;
  double t4169;
  double t4171;
  double t4176;
  double t4259;
  double t4276;
  double t4317;
  double t4322;
  double t4328;
  double t4334;
  double t4335;
  double t4343;
  double t4344;
  double t4345;
  double t4356;
  double t4369;
  double t4373;
  double t4384;
  double t4389;
  double t4397;
  double t4398;
  double t4404;
  double t4407;
  double t4413;
  double t4414;
  double t4418;
  double t4424;
  double t4431;
  double t4432;
  double t4442;
  double t4484;
  double t4524;
  double t4559;
  double t4560;
  double t4564;
  double t4565;
  double t4579;
  double t4580;
  double t4587;
  double t4588;
  double t4594;
  double t4601;
  double t4605;
  double t4640;
  double t4652;
  double t4679;
  double t4701;
  double t4706;
  double t4719;
  double t4720;
  double t4729;
  double t4730;
  double t4737;
  double t4738;
  double t4740;
  double t4743;
  double t4788;
  double t4799;
  double t4815;
  double t4816;
  double t4820;
  double t4825;
  double t4827;
  double t4836;
  double t4838;
  double t4841;
  double t4845;
  double t4846;
  double t4877;
  double t4973;
  double t5009;
  double t5068;
  double t5084;
  double t5102;
  double t5103;
  double t5107;
  double t5112;
  double t5120;
  double t5134;
  double t5141;
  double t5160;
  double t5172;
  double t5233;
  double t5278;
  double t5306;
  double t5309;
  double t5323;
  double t5339;
  double t5344;
  double t5350;
  double t5352;
  double t5359;
  double t5376;
  double t5380;
  double t5391;
  double t5457;
  double t5489;
  double t5509;
  double t5519;
  double t5527;
  double t5544;
  double t5546;
  double t5550;
  double t5552;
  double t5553;
  double t5561;
  double t5570;
  double t5576;
  double t5602;
  double t5625;
  double t5657;
  double t5658;
  double t5659;
  double t5668;
  double t5670;
  double t5673;
  double t5675;
  double t5685;
  double t5686;
  double t5688;
  double t5694;
  double t6608;
  double t6621;
  double t6623;
  double t6625;
  double t6628;
  double t6630;
  double t6634;
  double t6644;
  double t6654;
  double t6663;
  double t6672;
  double t6686;
  double t6707;
  double t6709;
  double t6734;
  double t6736;
  double t6744;
  double t6746;
  double t6754;
  double t6763;
  double t6516;
  double t6520;
  double t6530;
  double t6552;
  double t6555;
  double t6566;
  double t6577;
  double t6586;
  double t6590;
  double t6592;
  double t7113;
  double t7115;
  double t7116;
  double t7128;
  double t7155;
  double t7161;
  double t7171;
  double t7180;
  double t7183;
  double t7283;
  double t7303;
  double t7306;
  double t7329;
  double t7333;
  double t7336;
  double t7350;
  double t7374;
  double t7378;
  t328 = Cos(var1[3]);
  t329 = Cos(var1[4]);
  t136 = Cos(var1[7]);
  t137 = -1.*t136;
  t268 = 1. + t137;
  t780 = Cos(var1[5]);
  t355 = Cos(var1[6]);
  t455 = Sin(var1[5]);
  t862 = Sin(var1[6]);
  t20 = Cos(var1[8]);
  t78 = -1.*t20;
  t89 = 1. + t78;
  t730 = t328*t329*t355*t455;
  t866 = -1.*t328*t329*t780*t862;
  t903 = t730 + t866;
  t1065 = t328*t329*t780*t355;
  t1130 = t328*t329*t455*t862;
  t1205 = t1065 + t1130;
  t1244 = Sin(var1[4]);
  t1248 = Sin(var1[7]);
  t1595 = -1.000000637725*t268;
  t1599 = 1. + t1595;
  t1625 = -1.*t328*t1599*t1244;
  t1630 = -0.930418*t1248;
  t1650 = 0. + t1630;
  t1659 = t903*t1650;
  t1663 = -0.366501*t1248;
  t1678 = 0. + t1663;
  t1694 = t1205*t1678;
  t1698 = t1625 + t1659 + t1694;
  t996 = -0.340999127418*t268*t903;
  t1004 = -0.134322983001*t268;
  t1032 = 1. + t1004;
  t1211 = t1032*t1205;
  t1257 = 0.366501*t1248;
  t1336 = 0. + t1257;
  t1361 = -1.*t328*t1244*t1336;
  t1438 = t996 + t1211 + t1361;
  t1723 = Sin(var1[8]);
  t1469 = -0.8656776547239999*t268;
  t1483 = 1. + t1469;
  t1485 = t1483*t903;
  t1492 = -0.340999127418*t268*t1205;
  t1496 = 0.930418*t1248;
  t1505 = 0. + t1496;
  t1552 = -1.*t328*t1244*t1505;
  t1559 = t1485 + t1492 + t1552;
  t1456 = -0.134322983001*t89;
  t1467 = 1. + t1456;
  t2224 = Sin(var1[3]);
  t2279 = t328*t780*t1244;
  t2297 = t2224*t455;
  t2312 = t2279 + t2297;
  t2242 = -1.*t780*t2224;
  t2253 = t328*t1244*t455;
  t2269 = t2242 + t2253;
  t2276 = t355*t2269;
  t2314 = -1.*t2312*t862;
  t2327 = t2276 + t2314;
  t2353 = -1.*t355*t2312;
  t2364 = -1.*t2269*t862;
  t2374 = t2353 + t2364;
  t1725 = -0.366501*t1723;
  t1754 = 0. + t1725;
  t1840 = -1.000000637725*t89;
  t1844 = 1. + t1840;
  t2475 = t2374*t1650;
  t2494 = t2327*t1678;
  t2511 = t2475 + t2494;
  t2442 = t1032*t2327;
  t2444 = -0.340999127418*t268*t2374;
  t2457 = t2442 + t2444;
  t1884 = -0.930418*t1723;
  t1894 = 0. + t1884;
  t2332 = -0.340999127418*t268*t2327;
  t2403 = t1483*t2374;
  t2431 = t2332 + t2403;
  t1920 = 0.366501*t1723;
  t1933 = 0. + t1920;
  t1995 = -0.8656776547239999*t89;
  t1999 = 1. + t1995;
  t2096 = 0.930418*t1723;
  t2103 = 0. + t2096;
  t2725 = t780*t2224;
  t2735 = -1.*t328*t1244*t455;
  t2740 = t2725 + t2735;
  t2750 = t355*t2740;
  t2767 = t2312*t862;
  t2815 = t2750 + t2767;
  t2826 = t355*t2312;
  t2829 = -1.*t2740*t862;
  t2830 = t2826 + t2829;
  t2941 = t2830*t1650;
  t2942 = t2815*t1678;
  t2948 = t2941 + t2942;
  t2875 = t1032*t2815;
  t2915 = -0.340999127418*t268*t2830;
  t2933 = t2875 + t2915;
  t2821 = -0.340999127418*t268*t2815;
  t2853 = t1483*t2830;
  t2858 = t2821 + t2853;
  t3204 = -1.*t780*t2224*t1244;
  t3213 = t328*t455;
  t3267 = t3204 + t3213;
  t3184 = -1.*t328*t780;
  t3188 = -1.*t2224*t1244*t455;
  t3192 = t3184 + t3188;
  t3200 = t355*t3192;
  t3281 = -1.*t3267*t862;
  t3288 = t3200 + t3281;
  t3327 = t355*t3267;
  t3343 = t3192*t862;
  t3345 = t3327 + t3343;
  t3387 = -1.*t329*t1599*t2224;
  t3388 = t3288*t1650;
  t3408 = t3345*t1678;
  t3418 = t3387 + t3388 + t3408;
  t3305 = -0.340999127418*t268*t3288;
  t3352 = t1032*t3345;
  t3354 = -1.*t329*t2224*t1336;
  t3361 = t3305 + t3352 + t3354;
  t3366 = t1483*t3288;
  t3372 = -0.340999127418*t268*t3345;
  t3379 = -1.*t329*t2224*t1505;
  t3383 = t3366 + t3372 + t3379;
  t3495 = t2269*t862;
  t3497 = t2826 + t3495;
  t3550 = -0.930418*t136*t2327;
  t3555 = -0.366501*t136*t3497;
  t3559 = -1.000000637725*t328*t329*t1248;
  t3564 = t3550 + t3555 + t3559;
  t3515 = 0.366501*t328*t329*t136;
  t3524 = -0.340999127418*t2327*t1248;
  t3541 = -0.134322983001*t3497*t1248;
  t3542 = t3515 + t3524 + t3541;
  t3491 = 0.930418*t328*t329*t136;
  t3492 = -0.8656776547239999*t2327*t1248;
  t3506 = -0.340999127418*t3497*t1248;
  t3511 = t3491 + t3492 + t3506;
  t3732 = t328*t329*t1599;
  t3735 = t2327*t1650;
  t3746 = t3497*t1678;
  t3756 = t3732 + t3735 + t3746;
  t3667 = t1032*t3497;
  t3670 = t328*t329*t1336;
  t3671 = t2332 + t3667 + t3670;
  t3712 = t1483*t2327;
  t3715 = -0.340999127418*t268*t3497;
  t3717 = t328*t329*t1505;
  t3727 = t3712 + t3715 + t3717;
  t3872 = t329*t355*t2224*t455;
  t3877 = -1.*t329*t780*t2224*t862;
  t3879 = t3872 + t3877;
  t3888 = t329*t780*t355*t2224;
  t3899 = t329*t2224*t455*t862;
  t3909 = t3888 + t3899;
  t3957 = -1.*t1599*t2224*t1244;
  t3962 = t3879*t1650;
  t3964 = t3909*t1678;
  t3965 = t3957 + t3962 + t3964;
  t3883 = -0.340999127418*t268*t3879;
  t3920 = t1032*t3909;
  t3924 = -1.*t2224*t1244*t1336;
  t3935 = t3883 + t3920 + t3924;
  t3937 = t1483*t3879;
  t3945 = -0.340999127418*t268*t3909;
  t3947 = -1.*t2224*t1244*t1505;
  t3952 = t3937 + t3945 + t3947;
  t4063 = t780*t2224*t1244;
  t4064 = -1.*t328*t455;
  t4068 = t4063 + t4064;
  t4047 = t328*t780;
  t4050 = t2224*t1244*t455;
  t4052 = t4047 + t4050;
  t4058 = t355*t4052;
  t4070 = -1.*t4068*t862;
  t4073 = t4058 + t4070;
  t4078 = -1.*t355*t4068;
  t4091 = -1.*t4052*t862;
  t4092 = t4078 + t4091;
  t4126 = t4092*t1650;
  t4131 = t4073*t1678;
  t4133 = t4126 + t4131;
  t4111 = t1032*t4073;
  t4115 = -0.340999127418*t268*t4092;
  t4118 = t4111 + t4115;
  t4074 = -0.340999127418*t268*t4073;
  t4094 = t1483*t4092;
  t4099 = t4074 + t4094;
  t4231 = t4068*t862;
  t4233 = t3200 + t4231;
  t4235 = t355*t4068;
  t4243 = -1.*t3192*t862;
  t4247 = t4235 + t4243;
  t4303 = t4247*t1650;
  t4304 = t4233*t1678;
  t4313 = t4303 + t4304;
  t4261 = t1032*t4233;
  t4264 = -0.340999127418*t268*t4247;
  t4274 = t4261 + t4264;
  t4234 = -0.340999127418*t268*t4233;
  t4252 = t1483*t4247;
  t4255 = t4234 + t4252;
  t4477 = t4052*t862;
  t4478 = t4235 + t4477;
  t4527 = -0.930418*t136*t4073;
  t4529 = -0.366501*t136*t4478;
  t4537 = -1.000000637725*t329*t2224*t1248;
  t4540 = t4527 + t4529 + t4537;
  t4493 = 0.366501*t329*t136*t2224;
  t4502 = -0.340999127418*t4073*t1248;
  t4514 = -0.134322983001*t4478*t1248;
  t4520 = t4493 + t4502 + t4514;
  t4465 = 0.930418*t329*t136*t2224;
  t4468 = -0.8656776547239999*t4073*t1248;
  t4480 = -0.340999127418*t4478*t1248;
  t4482 = t4465 + t4468 + t4480;
  t4653 = t329*t1599*t2224;
  t4656 = t4073*t1650;
  t4663 = t4478*t1678;
  t4668 = t4653 + t4656 + t4663;
  t4630 = t1032*t4478;
  t4635 = t329*t2224*t1336;
  t4638 = t4074 + t4630 + t4635;
  t4641 = t1483*t4073;
  t4642 = -0.340999127418*t268*t4478;
  t4644 = t329*t2224*t1505;
  t4646 = t4641 + t4642 + t4644;
  t4762 = t329*t355*t455;
  t4765 = -1.*t329*t780*t862;
  t4771 = t4762 + t4765;
  t4773 = -1.*t329*t780*t355;
  t4778 = -1.*t329*t455*t862;
  t4780 = t4773 + t4778;
  t4801 = t4780*t1650;
  t4803 = t4771*t1678;
  t4807 = t4801 + t4803;
  t4789 = t1032*t4771;
  t4791 = -0.340999127418*t268*t4780;
  t4793 = t4789 + t4791;
  t4772 = -0.340999127418*t268*t4771;
  t4784 = t1483*t4780;
  t4786 = t4772 + t4784;
  t4897 = -1.*t329*t355*t455;
  t4906 = t329*t780*t862;
  t4910 = t4897 + t4906;
  t4915 = t329*t780*t355;
  t4916 = t329*t455*t862;
  t4952 = t4915 + t4916;
  t5016 = t4952*t1650;
  t5049 = t4910*t1678;
  t5050 = t5016 + t5049;
  t4987 = t1032*t4910;
  t4995 = -0.340999127418*t268*t4952;
  t5004 = t4987 + t4995;
  t4914 = -0.340999127418*t268*t4910;
  t4967 = t1483*t4952;
  t4971 = t4914 + t4967;
  t5187 = -1.*t355*t1244*t455;
  t5196 = t780*t1244*t862;
  t5200 = t5187 + t5196;
  t5217 = -1.*t780*t355*t1244;
  t5220 = -1.*t1244*t455*t862;
  t5227 = t5217 + t5220;
  t5279 = -1.*t329*t1599;
  t5283 = t5200*t1650;
  t5285 = t5227*t1678;
  t5287 = t5279 + t5283 + t5285;
  t5209 = -0.340999127418*t268*t5200;
  t5228 = t1032*t5227;
  t5229 = -1.*t329*t1336;
  t5231 = t5209 + t5228 + t5229;
  t5242 = t1483*t5200;
  t5246 = -0.340999127418*t268*t5227;
  t5254 = -1.*t329*t1505;
  t5269 = t5242 + t5246 + t5254;
  t5494 = -0.930418*t136*t4771;
  t5496 = -0.366501*t136*t4952;
  t5498 = 1.000000637725*t1244*t1248;
  t5501 = t5494 + t5496 + t5498;
  t5470 = -0.366501*t136*t1244;
  t5476 = -0.340999127418*t4771*t1248;
  t5480 = -0.134322983001*t4952*t1248;
  t5482 = t5470 + t5476 + t5480;
  t5406 = -0.930418*t136*t1244;
  t5408 = -0.8656776547239999*t4771*t1248;
  t5425 = -0.340999127418*t4952*t1248;
  t5451 = t5406 + t5408 + t5425;
  t5633 = -1.*t1599*t1244;
  t5635 = t4771*t1650;
  t5642 = t4952*t1678;
  t5654 = t5633 + t5635 + t5642;
  t5591 = t1032*t4952;
  t5595 = -1.*t1244*t1336;
  t5596 = t4772 + t5591 + t5595;
  t5613 = t1483*t4771;
  t5618 = -1.*t1244*t1505;
  t5620 = t5613 + t4995 + t5618;
  t1443 = 0.340999127418*t89*t1438;
  t1585 = t1467*t1559;
  t1762 = t1698*t1754;
  t1826 = t1443 + t1585 + t1762;
  t1848 = t1844*t1698;
  t1901 = t1438*t1894;
  t1955 = t1559*t1933;
  t1969 = t1848 + t1901 + t1955;
  t1981 = 0.707107*t1969;
  t2060 = t1999*t1438;
  t2066 = 0.340999127418*t89*t1559;
  t2154 = t1698*t2103;
  t2155 = t2060 + t2066 + t2154;
  t2434 = t1467*t2431;
  t2458 = 0.340999127418*t89*t2457;
  t2515 = t2511*t1754;
  t2558 = t2434 + t2458 + t2515;
  t2620 = t1844*t2511;
  t2636 = t2457*t1894;
  t2637 = t2431*t1933;
  t2644 = t2620 + t2636 + t2637;
  t2671 = 0.707107*t2644;
  t2672 = 0.340999127418*t89*t2431;
  t2677 = t1999*t2457;
  t2678 = t2511*t2103;
  t2696 = t2672 + t2677 + t2678;
  t2870 = t1467*t2858;
  t2937 = 0.340999127418*t89*t2933;
  t2987 = t2948*t1754;
  t3001 = t2870 + t2937 + t2987;
  t3032 = t1844*t2948;
  t3058 = t2933*t1894;
  t3064 = t2858*t1933;
  t3069 = t3032 + t3058 + t3064;
  t3093 = 0.707107*t3069;
  t3099 = 0.340999127418*t89*t2858;
  t3108 = t1999*t2933;
  t3126 = t2948*t2103;
  t3139 = t3099 + t3108 + t3126;
  t3364 = 0.340999127418*t89*t3361;
  t3386 = t1467*t3383;
  t3422 = t3418*t1754;
  t3433 = t3364 + t3386 + t3422;
  t3439 = t1844*t3418;
  t3450 = t3361*t1894;
  t3452 = t3383*t1933;
  t3453 = t3439 + t3450 + t3452;
  t3454 = 0.707107*t3453;
  t3455 = t1999*t3361;
  t3457 = 0.340999127418*t89*t3383;
  t3463 = t3418*t2103;
  t3479 = t3455 + t3457 + t3463;
  t3514 = t1467*t3511;
  t3545 = 0.340999127418*t89*t3542;
  t3566 = t3564*t1754;
  t3569 = t3514 + t3545 + t3566;
  t3584 = t1844*t3564;
  t3592 = t3542*t1894;
  t3593 = t3511*t1933;
  t3605 = t3584 + t3592 + t3593;
  t3610 = 0.707107*t3605;
  t3613 = 0.340999127418*t89*t3511;
  t3614 = t1999*t3542;
  t3621 = t3564*t2103;
  t3634 = t3613 + t3614 + t3621;
  t3710 = -0.930418*t20*t3671;
  t3731 = 0.366501*t20*t3727;
  t3758 = -1.000000637725*t3756*t1723;
  t3763 = t3710 + t3731 + t3758;
  t3764 = 0.707107*t3763;
  t3776 = -0.366501*t20*t3756;
  t3781 = 0.340999127418*t3671*t1723;
  t3787 = -0.134322983001*t3727*t1723;
  t3804 = t3776 + t3781 + t3787;
  t3817 = 0.930418*t20*t3756;
  t3827 = -0.8656776547239999*t3671*t1723;
  t3839 = 0.340999127418*t3727*t1723;
  t3840 = t3817 + t3827 + t3839;
  t3936 = 0.340999127418*t89*t3935;
  t3954 = t1467*t3952;
  t3966 = t3965*t1754;
  t3970 = t3936 + t3954 + t3966;
  t3975 = t1844*t3965;
  t3980 = t3935*t1894;
  t3987 = t3952*t1933;
  t3989 = t3975 + t3980 + t3987;
  t3996 = 0.707107*t3989;
  t4006 = t1999*t3935;
  t4026 = 0.340999127418*t89*t3952;
  t4027 = t3965*t2103;
  t4032 = t4006 + t4026 + t4027;
  t4102 = t1467*t4099;
  t4120 = 0.340999127418*t89*t4118;
  t4137 = t4133*t1754;
  t4138 = t4102 + t4120 + t4137;
  t4157 = t1844*t4133;
  t4158 = t4118*t1894;
  t4159 = t4099*t1933;
  t4160 = t4157 + t4158 + t4159;
  t4167 = 0.707107*t4160;
  t4168 = 0.340999127418*t89*t4099;
  t4169 = t1999*t4118;
  t4171 = t4133*t2103;
  t4176 = t4168 + t4169 + t4171;
  t4259 = t1467*t4255;
  t4276 = 0.340999127418*t89*t4274;
  t4317 = t4313*t1754;
  t4322 = t4259 + t4276 + t4317;
  t4328 = t1844*t4313;
  t4334 = t4274*t1894;
  t4335 = t4255*t1933;
  t4343 = t4328 + t4334 + t4335;
  t4344 = 0.707107*t4343;
  t4345 = 0.340999127418*t89*t4255;
  t4356 = t1999*t4274;
  t4369 = t4313*t2103;
  t4373 = t4345 + t4356 + t4369;
  t4384 = 0.340999127418*t89*t3671;
  t4389 = t1467*t3727;
  t4397 = t3756*t1754;
  t4398 = t4384 + t4389 + t4397;
  t4404 = t1844*t3756;
  t4407 = t3671*t1894;
  t4413 = t3727*t1933;
  t4414 = t4404 + t4407 + t4413;
  t4418 = 0.707107*t4414;
  t4424 = t1999*t3671;
  t4431 = 0.340999127418*t89*t3727;
  t4432 = t3756*t2103;
  t4442 = t4424 + t4431 + t4432;
  t4484 = t1467*t4482;
  t4524 = 0.340999127418*t89*t4520;
  t4559 = t4540*t1754;
  t4560 = t4484 + t4524 + t4559;
  t4564 = t1844*t4540;
  t4565 = t4520*t1894;
  t4579 = t4482*t1933;
  t4580 = t4564 + t4565 + t4579;
  t4587 = 0.707107*t4580;
  t4588 = 0.340999127418*t89*t4482;
  t4594 = t1999*t4520;
  t4601 = t4540*t2103;
  t4605 = t4588 + t4594 + t4601;
  t4640 = -0.930418*t20*t4638;
  t4652 = 0.366501*t20*t4646;
  t4679 = -1.000000637725*t4668*t1723;
  t4701 = t4640 + t4652 + t4679;
  t4706 = 0.707107*t4701;
  t4719 = -0.366501*t20*t4668;
  t4720 = 0.340999127418*t4638*t1723;
  t4729 = -0.134322983001*t4646*t1723;
  t4730 = t4719 + t4720 + t4729;
  t4737 = 0.930418*t20*t4668;
  t4738 = -0.8656776547239999*t4638*t1723;
  t4740 = 0.340999127418*t4646*t1723;
  t4743 = t4737 + t4738 + t4740;
  t4788 = t1467*t4786;
  t4799 = 0.340999127418*t89*t4793;
  t4815 = t4807*t1754;
  t4816 = t4788 + t4799 + t4815;
  t4820 = t1844*t4807;
  t4825 = t4793*t1894;
  t4827 = t4786*t1933;
  t4836 = t4820 + t4825 + t4827;
  t4838 = 0.707107*t4836;
  t4841 = 0.340999127418*t89*t4786;
  t4845 = t1999*t4793;
  t4846 = t4807*t2103;
  t4877 = t4841 + t4845 + t4846;
  t4973 = t1467*t4971;
  t5009 = 0.340999127418*t89*t5004;
  t5068 = t5050*t1754;
  t5084 = t4973 + t5009 + t5068;
  t5102 = t1844*t5050;
  t5103 = t5004*t1894;
  t5107 = t4971*t1933;
  t5112 = t5102 + t5103 + t5107;
  t5120 = 0.707107*t5112;
  t5134 = 0.340999127418*t89*t4971;
  t5141 = t1999*t5004;
  t5160 = t5050*t2103;
  t5172 = t5134 + t5141 + t5160;
  t5233 = 0.340999127418*t89*t5231;
  t5278 = t1467*t5269;
  t5306 = t5287*t1754;
  t5309 = t5233 + t5278 + t5306;
  t5323 = t1844*t5287;
  t5339 = t5231*t1894;
  t5344 = t5269*t1933;
  t5350 = t5323 + t5339 + t5344;
  t5352 = 0.707107*t5350;
  t5359 = t1999*t5231;
  t5376 = 0.340999127418*t89*t5269;
  t5380 = t5287*t2103;
  t5391 = t5359 + t5376 + t5380;
  t5457 = t1467*t5451;
  t5489 = 0.340999127418*t89*t5482;
  t5509 = t5501*t1754;
  t5519 = t5457 + t5489 + t5509;
  t5527 = t1844*t5501;
  t5544 = t5482*t1894;
  t5546 = t5451*t1933;
  t5550 = t5527 + t5544 + t5546;
  t5552 = 0.707107*t5550;
  t5553 = 0.340999127418*t89*t5451;
  t5561 = t1999*t5482;
  t5570 = t5501*t2103;
  t5576 = t5553 + t5561 + t5570;
  t5602 = -0.930418*t20*t5596;
  t5625 = 0.366501*t20*t5620;
  t5657 = -1.000000637725*t5654*t1723;
  t5658 = t5602 + t5625 + t5657;
  t5659 = 0.707107*t5658;
  t5668 = -0.366501*t20*t5654;
  t5670 = 0.340999127418*t5596*t1723;
  t5673 = -0.134322983001*t5620*t1723;
  t5675 = t5668 + t5670 + t5673;
  t5685 = 0.930418*t20*t5654;
  t5686 = -0.8656776547239999*t5596*t1723;
  t5688 = 0.340999127418*t5620*t1723;
  t5694 = t5685 + t5686 + t5688;
  t6608 = -3.2909349868922137e-7*var1[7];
  t6621 = 0.03103092645718495*t268;
  t6623 = -0.045000372235*t1336;
  t6625 = t6608 + t6621 + t6623;
  t6628 = 1.296332362046933e-7*var1[7];
  t6630 = 0.07877668146182712*t268;
  t6634 = -0.045000372235*t1505;
  t6644 = t6628 + t6630 + t6634;
  t6654 = 3.2909349868922137e-7*var1[8];
  t6663 = 0.055653945343889656*t89;
  t6672 = -0.045000372235*t1754;
  t6686 = t6654 + t6663 + t6672;
  t6707 = -0.04500040093286238*t89;
  t6709 = -0.141285834136*t1894;
  t6734 = 0.055653909852*t1933;
  t6736 = 0. + t6707 + t6709 + t6734;
  t6744 = 1.296332362046933e-7*var1[8];
  t6746 = -0.14128592423750855*t89;
  t6754 = -0.045000372235*t2103;
  t6763 = t6744 + t6746 + t6754;
  t6516 = -1.*t355;
  t6520 = 1. + t6516;
  t6530 = 0.091*t6520;
  t6552 = 0. + t6530;
  t6555 = 0.091*t862;
  t6566 = 0. + t6555;
  t6577 = -0.04500040093286238*t268;
  t6586 = 0.07877663122399998*t1650;
  t6590 = 0.031030906668*t1678;
  t6592 = 0. + t6577 + t6586 + t6590;
  t7113 = -0.0846680539949003*t136;
  t7115 = -0.04500040093286238*t1248;
  t7116 = t7113 + t7115;
  t7128 = -0.016492681424499736*t136;
  t7155 = 0.03103092645718495*t1248;
  t7161 = -3.2909349868922137e-7 + t7128 + t7155;
  t7171 = -0.04186915633414423*t136;
  t7180 = 0.07877668146182712*t1248;
  t7183 = 1.296332362046933e-7 + t7171 + t7180;
  t7283 = -0.04186915633414423*t20;
  t7303 = -0.14128592423750855*t1723;
  t7306 = 1.296332362046933e-7 + t7283 + t7303;
  t7329 = 0.15185209683981668*t20;
  t7333 = -0.04500040093286238*t1723;
  t7336 = t7329 + t7333;
  t7350 = 0.016492681424499736*t20;
  t7374 = 0.055653945343889656*t1723;
  t7378 = 3.2909349868922137e-7 + t7350 + t7374;
  p_output1[0]=(0.259155*t3433 + t3454 - 0.657905*t3479)*var2[3] + (0.259155*t1826 + t1981 - 0.657905*t2155)*var2[4] + (0.259155*t3001 + t3093 - 0.657905*t3139)*var2[5] + (0.259155*t2558 + t2671 - 0.657905*t2696)*var2[6] + (0.259155*t3569 + t3610 - 0.657905*t3634)*var2[7] + (t3764 + 0.259155*t3804 - 0.657905*t3840)*var2[8];
  p_output1[1]=(0.259155*t4398 + t4418 - 0.657905*t4442)*var2[3] + (0.259155*t3970 + t3996 - 0.657905*t4032)*var2[4] + (0.259155*t4322 + t4344 - 0.657905*t4373)*var2[5] + (0.259155*t4138 + t4167 - 0.657905*t4176)*var2[6] + (0.259155*t4560 + t4587 - 0.657905*t4605)*var2[7] + (t4706 + 0.259155*t4730 - 0.657905*t4743)*var2[8];
  p_output1[2]=(0.259155*t5309 + t5352 - 0.657905*t5391)*var2[4] + (0.259155*t5084 + t5120 - 0.657905*t5172)*var2[5] + (0.259155*t4816 + t4838 - 0.657905*t4877)*var2[6] + (0.259155*t5519 + t5552 - 0.657905*t5576)*var2[7] + (t5659 + 0.259155*t5675 - 0.657905*t5694)*var2[8];
  p_output1[3]=0;
  p_output1[4]=(-0.259155*t3433 + t3454 + 0.657905*t3479)*var2[3] + (-0.259155*t1826 + t1981 + 0.657905*t2155)*var2[4] + (-0.259155*t3001 + t3093 + 0.657905*t3139)*var2[5] + (-0.259155*t2558 + t2671 + 0.657905*t2696)*var2[6] + (-0.259155*t3569 + t3610 + 0.657905*t3634)*var2[7] + (t3764 - 0.259155*t3804 + 0.657905*t3840)*var2[8];
  p_output1[5]=(-0.259155*t4398 + t4418 + 0.657905*t4442)*var2[3] + (-0.259155*t3970 + t3996 + 0.657905*t4032)*var2[4] + (-0.259155*t4322 + t4344 + 0.657905*t4373)*var2[5] + (-0.259155*t4138 + t4167 + 0.657905*t4176)*var2[6] + (-0.259155*t4560 + t4587 + 0.657905*t4605)*var2[7] + (t4706 - 0.259155*t4730 + 0.657905*t4743)*var2[8];
  p_output1[6]=(-0.259155*t5309 + t5352 + 0.657905*t5391)*var2[4] + (-0.259155*t5084 + t5120 + 0.657905*t5172)*var2[5] + (-0.259155*t4816 + t4838 + 0.657905*t4877)*var2[6] + (-0.259155*t5519 + t5552 + 0.657905*t5576)*var2[7] + (t5659 - 0.259155*t5675 + 0.657905*t5694)*var2[8];
  p_output1[7]=0;
  p_output1[8]=(-0.930418*t3433 - 0.366501*t3479)*var2[3] + (-0.930418*t1826 - 0.366501*t2155)*var2[4] + (-0.930418*t3001 - 0.366501*t3139)*var2[5] + (-0.930418*t2558 - 0.366501*t2696)*var2[6] + (-0.930418*t3569 - 0.366501*t3634)*var2[7] + (-0.930418*t3804 - 0.366501*t3840)*var2[8];
  p_output1[9]=(-0.930418*t4398 - 0.366501*t4442)*var2[3] + (-0.930418*t3970 - 0.366501*t4032)*var2[4] + (-0.930418*t4322 - 0.366501*t4373)*var2[5] + (-0.930418*t4138 - 0.366501*t4176)*var2[6] + (-0.930418*t4560 - 0.366501*t4605)*var2[7] + (-0.930418*t4730 - 0.366501*t4743)*var2[8];
  p_output1[10]=(-0.930418*t5309 - 0.366501*t5391)*var2[4] + (-0.930418*t5084 - 0.366501*t5172)*var2[5] + (-0.930418*t4816 - 0.366501*t4877)*var2[6] + (-0.930418*t5519 - 0.366501*t5576)*var2[7] + (-0.930418*t5675 - 0.366501*t5694)*var2[8];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (0.189863*t3433 - 0.001824*t3453 - 0.134034*t3479 + t3192*t6552 + t3267*t6566 - 1.*t2224*t329*t6592 + t3345*t6625 + t3288*t6644 + t3383*t6686 + t3418*t6736 + t3361*t6763)*var2[3] + (0.189863*t1826 - 0.001824*t1969 - 0.134034*t2155 + t328*t329*t455*t6552 - 1.*t1244*t328*t6592 + t1205*t6625 + t1559*t6686 + t1698*t6736 + t1438*t6763 + t328*t329*t6566*t780 + t6644*t903)*var2[4] + (0.189863*t3001 - 0.001824*t3069 - 0.134034*t3139 + t2312*t6552 + t2740*t6566 + t2815*t6625 + t2830*t6644 + t2858*t6686 + t2948*t6736 + t2933*t6763)*var2[5] + (0.189863*t2558 - 0.001824*t2644 - 0.134034*t2696 + 0.091*t2312*t355 + t2327*t6625 + t2374*t6644 + t2431*t6686 + t2511*t6736 + t2457*t6763 + 0.091*t2269*t862)*var2[6] + (0.189863*t3569 - 0.001824*t3605 - 0.134034*t3634 + t3511*t6686 + t3564*t6736 + t3542*t6763 + t328*t329*t7116 + t3497*t7161 + t2327*t7183)*var2[7] + (-0.001824*t3763 + 0.189863*t3804 - 0.134034*t3840 + t3671*t7306 + t3756*t7336 + t3727*t7378)*var2[8];
  p_output1[13]=var2[1] + (0.189863*t4398 - 0.001824*t4414 - 0.134034*t4442 + t2269*t6552 + t2312*t6566 + t328*t329*t6592 + t3497*t6625 + t2327*t6644 + t3727*t6686 + t3756*t6736 + t3671*t6763)*var2[3] + (0.189863*t3970 - 0.001824*t3989 - 0.134034*t4032 + t2224*t329*t455*t6552 - 1.*t1244*t2224*t6592 + t3909*t6625 + t3879*t6644 + t3952*t6686 + t3965*t6736 + t3935*t6763 + t2224*t329*t6566*t780)*var2[4] + (0.189863*t4322 - 0.001824*t4343 - 0.134034*t4373 + t4068*t6552 + t3192*t6566 + t4233*t6625 + t4247*t6644 + t4255*t6686 + t4313*t6736 + t4274*t6763)*var2[5] + (0.091*t355*t4068 + 0.189863*t4138 - 0.001824*t4160 - 0.134034*t4176 + t4073*t6625 + t4092*t6644 + t4099*t6686 + t4133*t6736 + t4118*t6763 + 0.091*t4052*t862)*var2[6] + (0.189863*t4560 - 0.001824*t4580 - 0.134034*t4605 + t4482*t6686 + t4540*t6736 + t4520*t6763 + t2224*t329*t7116 + t4478*t7161 + t4073*t7183)*var2[7] + (-0.001824*t4701 + 0.189863*t4730 - 0.134034*t4743 + t4638*t7306 + t4668*t7336 + t4646*t7378)*var2[8];
  p_output1[14]=var2[2] + (0.189863*t5309 - 0.001824*t5350 - 0.134034*t5391 - 1.*t1244*t455*t6552 - 1.*t329*t6592 + t5227*t6625 + t5200*t6644 + t5269*t6686 + t5287*t6736 + t5231*t6763 - 1.*t1244*t6566*t780)*var2[4] + (0.189863*t5084 - 0.001824*t5112 - 0.134034*t5172 - 1.*t329*t455*t6566 + t4910*t6625 + t4952*t6644 + t4971*t6686 + t5050*t6736 + t5004*t6763 + t329*t6552*t780)*var2[5] + (0.189863*t4816 - 0.001824*t4836 - 0.134034*t4877 + t4771*t6625 + t4780*t6644 + t4786*t6686 + t4807*t6736 + t4793*t6763 + 0.091*t329*t355*t780 + 0.091*t329*t455*t862)*var2[6] + (0.189863*t5519 - 0.001824*t5550 - 0.134034*t5576 + t5451*t6686 + t5501*t6736 + t5482*t6763 - 1.*t1244*t7116 + t4952*t7161 + t4771*t7183)*var2[7] + (-0.001824*t5658 + 0.189863*t5675 - 0.134034*t5694 + t5596*t7306 + t5654*t7336 + t5620*t7378)*var2[8];
  p_output1[15]=0;
}



void dT_left_hip_pitch_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
