/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:22:22 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dT_right_elbow_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t317;
  double t713;
  double t468;
  double t480;
  double t573;
  double t824;
  double t716;
  double t722;
  double t832;
  double t43;
  double t49;
  double t60;
  double t259;
  double t341;
  double t435;
  double t784;
  double t849;
  double t905;
  double t936;
  double t940;
  double t1024;
  double t420;
  double t422;
  double t463;
  double t920;
  double t926;
  double t928;
  double t1025;
  double t1028;
  double t1132;
  double t1136;
  double t1141;
  double t1143;
  double t1150;
  double t1151;
  double t1153;
  double t1170;
  double t196;
  double t1303;
  double t1306;
  double t1316;
  double t1317;
  double t1319;
  double t1323;
  double t1324;
  double t1358;
  double t1372;
  double t1377;
  double t1450;
  double t1481;
  double t1487;
  double t1511;
  double t1047;
  double t8;
  double t265;
  double t268;
  double t1031;
  double t1071;
  double t1123;
  double t1189;
  double t1192;
  double t1292;
  double t1422;
  double t1433;
  double t1497;
  double t1503;
  double t1504;
  double t1525;
  double t1530;
  double t1569;
  double t1578;
  double t1581;
  double t1583;
  double t1586;
  double t1602;
  double t1627;
  double t1656;
  double t1668;
  double t1671;
  double t1679;
  double t1684;
  double t1689;
  double t1695;
  double t1697;
  double t16;
  double t22;
  double t2044;
  double t2043;
  double t2052;
  double t2074;
  double t2084;
  double t2088;
  double t2102;
  double t2077;
  double t2111;
  double t2113;
  double t2151;
  double t2152;
  double t2158;
  double t2120;
  double t2160;
  double t2161;
  double t2166;
  double t2168;
  double t2169;
  double t2189;
  double t2198;
  double t2202;
  double t1596;
  double t1601;
  double t1762;
  double t1776;
  double t2163;
  double t2176;
  double t2217;
  double t2224;
  double t1793;
  double t1794;
  double t2275;
  double t2297;
  double t2299;
  double t2300;
  double t2318;
  double t2334;
  double t2341;
  double t2350;
  double t1849;
  double t1898;
  double t1941;
  double t1950;
  double t1996;
  double t1998;
  double t2493;
  double t2497;
  double t2498;
  double t2467;
  double t2499;
  double t2503;
  double t2534;
  double t2549;
  double t2552;
  double t2532;
  double t2556;
  double t2557;
  double t2569;
  double t2584;
  double t2587;
  double t2599;
  double t2601;
  double t2605;
  double t2558;
  double t2593;
  double t2616;
  double t2617;
  double t2637;
  double t2638;
  double t2642;
  double t2645;
  double t2654;
  double t2683;
  double t2687;
  double t2699;
  double t2802;
  double t2803;
  double t2796;
  double t2804;
  double t2808;
  double t2819;
  double t2825;
  double t2830;
  double t2833;
  double t2841;
  double t2842;
  double t2847;
  double t2854;
  double t2810;
  double t2836;
  double t2859;
  double t2864;
  double t2868;
  double t2870;
  double t2871;
  double t2873;
  double t2885;
  double t2896;
  double t2898;
  double t2899;
  double t2993;
  double t3020;
  double t3082;
  double t2987;
  double t2988;
  double t3002;
  double t3006;
  double t3015;
  double t3026;
  double t3027;
  double t3029;
  double t3052;
  double t3059;
  double t3075;
  double t3078;
  double t3080;
  double t3084;
  double t3087;
  double t3088;
  double t3097;
  double t3099;
  double t3101;
  double t3104;
  double t3106;
  double t3117;
  double t3124;
  double t3126;
  double t3205;
  double t3221;
  double t3248;
  double t3264;
  double t3271;
  double t3274;
  double t3279;
  double t3281;
  double t3284;
  double t3286;
  double t3290;
  double t3297;
  double t3269;
  double t3283;
  double t3299;
  double t3302;
  double t3314;
  double t3315;
  double t3317;
  double t3319;
  double t3360;
  double t3383;
  double t3389;
  double t3392;
  double t3474;
  double t3479;
  double t3481;
  double t3483;
  double t3485;
  double t3497;
  double t3482;
  double t3501;
  double t3502;
  double t3504;
  double t3505;
  double t3506;
  double t3468;
  double t3503;
  double t3507;
  double t3510;
  double t3516;
  double t3517;
  double t3520;
  double t3524;
  double t3526;
  double t3527;
  double t3529;
  double t3531;
  double t3511;
  double t3525;
  double t3543;
  double t3549;
  double t3555;
  double t3557;
  double t3560;
  double t3567;
  double t3573;
  double t3576;
  double t3580;
  double t3581;
  double t3643;
  double t3644;
  double t3645;
  double t3651;
  double t3655;
  double t3656;
  double t3637;
  double t3650;
  double t3658;
  double t3673;
  double t3679;
  double t3680;
  double t3681;
  double t3685;
  double t3689;
  double t3692;
  double t3696;
  double t3701;
  double t3678;
  double t3686;
  double t3703;
  double t3709;
  double t3711;
  double t3713;
  double t3715;
  double t3717;
  double t3725;
  double t3728;
  double t3731;
  double t3737;
  double t3842;
  double t3843;
  double t3847;
  double t3868;
  double t3876;
  double t3881;
  double t3884;
  double t3887;
  double t3880;
  double t3897;
  double t3906;
  double t3928;
  double t3936;
  double t3944;
  double t3964;
  double t3967;
  double t3971;
  double t3926;
  double t3961;
  double t3972;
  double t3981;
  double t3986;
  double t3988;
  double t3989;
  double t4004;
  double t4006;
  double t4007;
  double t4008;
  double t4009;
  double t4083;
  double t4086;
  double t4091;
  double t4079;
  double t4095;
  double t4096;
  double t4107;
  double t4108;
  double t4110;
  double t4104;
  double t4117;
  double t4121;
  double t4130;
  double t4141;
  double t4142;
  double t4145;
  double t4147;
  double t4148;
  double t4124;
  double t4143;
  double t4154;
  double t4166;
  double t4179;
  double t4189;
  double t4197;
  double t4199;
  double t4209;
  double t4227;
  double t4232;
  double t4236;
  double t4282;
  double t4285;
  double t4281;
  double t4286;
  double t4288;
  double t4294;
  double t4299;
  double t4307;
  double t4308;
  double t4325;
  double t4327;
  double t4329;
  double t4332;
  double t4293;
  double t4324;
  double t4334;
  double t4340;
  double t4354;
  double t4355;
  double t4357;
  double t4363;
  double t4369;
  double t4400;
  double t4405;
  double t4407;
  double t4474;
  double t4475;
  double t4479;
  double t4489;
  double t4497;
  double t4499;
  double t4501;
  double t4513;
  double t4525;
  double t4531;
  double t4533;
  double t4535;
  double t4604;
  double t4611;
  double t4612;
  double t4613;
  double t4618;
  double t4620;
  double t4627;
  double t4629;
  double t4644;
  double t4645;
  double t4648;
  double t4654;
  double t4614;
  double t4639;
  double t4661;
  double t4665;
  double t4681;
  double t4683;
  double t4702;
  double t4703;
  double t4718;
  double t4720;
  double t4721;
  double t4728;
  double t4823;
  double t4824;
  double t4825;
  double t4832;
  double t4834;
  double t4835;
  double t4826;
  double t4837;
  double t4841;
  double t4854;
  double t4863;
  double t4868;
  double t4873;
  double t4875;
  double t4879;
  double t4848;
  double t4871;
  double t4891;
  double t4892;
  double t4895;
  double t4896;
  double t4900;
  double t4906;
  double t4914;
  double t4919;
  double t4923;
  double t4930;
  double t4978;
  double t4981;
  double t4985;
  double t4992;
  double t4994;
  double t4997;
  double t4991;
  double t5001;
  double t5003;
  double t5012;
  double t5018;
  double t5022;
  double t5030;
  double t5032;
  double t5036;
  double t5004;
  double t5025;
  double t5044;
  double t5047;
  double t5053;
  double t5059;
  double t5066;
  double t5068;
  double t5095;
  double t5099;
  double t5101;
  double t5112;
  double t5178;
  double t5188;
  double t5193;
  double t5202;
  double t5209;
  double t5212;
  double t5218;
  double t5224;
  double t5229;
  double t5232;
  double t5199;
  double t5217;
  double t5236;
  double t5237;
  double t5242;
  double t5245;
  double t5255;
  double t5263;
  double t5270;
  double t5272;
  double t5275;
  double t5276;
  double t5381;
  double t5390;
  double t5392;
  double t5396;
  double t5412;
  double t5421;
  double t5422;
  double t5426;
  double t5429;
  double t5430;
  double t5438;
  double t5457;
  double t5530;
  double t5534;
  double t5540;
  double t5552;
  double t5568;
  double t5575;
  double t5577;
  double t5578;
  double t5592;
  double t5598;
  double t5612;
  double t5614;
  double t5565;
  double t5584;
  double t5617;
  double t5618;
  double t5631;
  double t5635;
  double t5638;
  double t5648;
  double t5654;
  double t5664;
  double t5673;
  double t5684;
  double t5795;
  double t5796;
  double t5806;
  double t5811;
  double t5814;
  double t5818;
  double t5791;
  double t5807;
  double t5819;
  double t5822;
  double t5831;
  double t5839;
  double t5843;
  double t5847;
  double t5851;
  double t5852;
  double t5855;
  double t5862;
  double t5828;
  double t5848;
  double t5864;
  double t5878;
  double t5882;
  double t5903;
  double t5904;
  double t5905;
  double t5910;
  double t5911;
  double t5912;
  double t5921;
  double t1435;
  double t1595;
  double t1702;
  double t1712;
  double t1782;
  double t1813;
  double t1827;
  double t1828;
  double t1915;
  double t1961;
  double t2007;
  double t2024;
  double t2227;
  double t2316;
  double t2368;
  double t2369;
  double t2386;
  double t2393;
  double t2402;
  double t2405;
  double t2415;
  double t2437;
  double t2441;
  double t2447;
  double t2624;
  double t2650;
  double t2705;
  double t2708;
  double t2713;
  double t2724;
  double t2725;
  double t2736;
  double t2742;
  double t2745;
  double t2749;
  double t2750;
  double t2865;
  double t2883;
  double t2903;
  double t2904;
  double t2912;
  double t2917;
  double t2932;
  double t2939;
  double t2950;
  double t2951;
  double t2954;
  double t2955;
  double t3051;
  double t3095;
  double t3132;
  double t3138;
  double t3152;
  double t3155;
  double t3158;
  double t3162;
  double t3167;
  double t3170;
  double t3171;
  double t3175;
  double t3305;
  double t3331;
  double t3393;
  double t3396;
  double t3400;
  double t3401;
  double t3405;
  double t3409;
  double t3414;
  double t3418;
  double t3434;
  double t3436;
  double t3550;
  double t3571;
  double t3583;
  double t3587;
  double t3589;
  double t3591;
  double t3596;
  double t3599;
  double t3611;
  double t3614;
  double t3615;
  double t3617;
  double t3710;
  double t3719;
  double t3744;
  double t3749;
  double t3760;
  double t3761;
  double t3763;
  double t3768;
  double t3772;
  double t3775;
  double t3778;
  double t3780;
  double t3790;
  double t3792;
  double t3793;
  double t3794;
  double t3812;
  double t3814;
  double t3817;
  double t3819;
  double t3823;
  double t3828;
  double t3830;
  double t3831;
  double t3983;
  double t4005;
  double t4021;
  double t4023;
  double t4026;
  double t4031;
  double t4039;
  double t4045;
  double t4053;
  double t4054;
  double t4055;
  double t4057;
  double t4174;
  double t4203;
  double t4237;
  double t4238;
  double t4245;
  double t4254;
  double t4255;
  double t4256;
  double t4259;
  double t4260;
  double t4265;
  double t4266;
  double t4351;
  double t4367;
  double t4412;
  double t4413;
  double t4421;
  double t4423;
  double t4426;
  double t4435;
  double t4440;
  double t4443;
  double t4446;
  double t4448;
  double t4496;
  double t4523;
  double t4546;
  double t4552;
  double t4560;
  double t4564;
  double t4574;
  double t4576;
  double t4581;
  double t4582;
  double t4586;
  double t4589;
  double t4674;
  double t4713;
  double t4736;
  double t4743;
  double t4747;
  double t4755;
  double t4756;
  double t4761;
  double t4773;
  double t4778;
  double t4782;
  double t4788;
  double t4894;
  double t4908;
  double t4931;
  double t4935;
  double t4945;
  double t4947;
  double t4952;
  double t4954;
  double t4961;
  double t4962;
  double t4965;
  double t4967;
  double t5050;
  double t5084;
  double t5118;
  double t5123;
  double t5129;
  double t5136;
  double t5138;
  double t5140;
  double t5152;
  double t5153;
  double t5155;
  double t5156;
  double t5238;
  double t5264;
  double t5285;
  double t5291;
  double t5302;
  double t5304;
  double t5312;
  double t5315;
  double t5325;
  double t5329;
  double t5332;
  double t5344;
  double t5403;
  double t5428;
  double t5470;
  double t5472;
  double t5474;
  double t5483;
  double t5490;
  double t5491;
  double t5502;
  double t5508;
  double t5509;
  double t5510;
  double t5620;
  double t5651;
  double t5694;
  double t5699;
  double t5705;
  double t5736;
  double t5740;
  double t5748;
  double t5763;
  double t5767;
  double t5770;
  double t5775;
  double t5879;
  double t5906;
  double t5923;
  double t5929;
  double t5933;
  double t5934;
  double t5939;
  double t5940;
  double t5945;
  double t5947;
  double t5950;
  double t5953;
  double t6630;
  double t6632;
  double t6714;
  double t6752;
  double t6727;
  double t6654;
  double t6658;
  double t6663;
  double t6634;
  double t6636;
  double t6637;
  double t6681;
  double t6683;
  double t6699;
  double t6701;
  double t6665;
  double t6666;
  double t6671;
  double t6677;
  double t6740;
  double t6749;
  double t6753;
  double t6754;
  double t6757;
  double t6758;
  double t6763;
  double t6704;
  double t6711;
  double t6716;
  double t6720;
  double t6728;
  double t6730;
  double t6732;
  double t6777;
  double t6778;
  double t6779;
  double t6790;
  double t6792;
  double t6801;
  double t6803;
  double t6828;
  double t6832;
  double t6833;
  double t6836;
  double t6841;
  double t6849;
  double t6850;
  double t6852;
  double t6868;
  double t6870;
  double t6880;
  double t6882;
  double t7069;
  double t7109;
  double t7078;
  double t6641;
  double t6643;
  double t6646;
  double t6649;
  double t6955;
  double t6958;
  double t6960;
  double t6978;
  double t6983;
  double t7016;
  double t7017;
  double t7020;
  double t7023;
  double t7024;
  double t7028;
  double t7034;
  double t7036;
  double t7038;
  double t7073;
  double t7075;
  double t7082;
  double t7087;
  double t7089;
  double t7091;
  double t7103;
  double t7108;
  double t7112;
  double t7114;
  double t7116;
  double t7117;
  double t7122;
  double t7131;
  double t7132;
  double t7134;
  double t7135;
  double t7136;
  double t7166;
  double t7170;
  double t7171;
  double t7179;
  double t7183;
  double t7187;
  double t7192;
  double t7198;
  double t7203;
  t317 = Cos(var1[3]);
  t713 = Cos(var1[4]);
  t468 = Cos(var1[25]);
  t480 = -1.*t468;
  t573 = 1. + t480;
  t824 = Cos(var1[24]);
  t716 = Cos(var1[5]);
  t722 = Sin(var1[24]);
  t832 = Sin(var1[5]);
  t43 = Cos(var1[26]);
  t49 = -1.*t43;
  t60 = 1. + t49;
  t259 = Sin(var1[26]);
  t341 = Sin(var1[25]);
  t435 = Sin(var1[4]);
  t784 = -1.*t317*t713*t716*t722;
  t849 = t824*t317*t713*t832;
  t905 = t784 + t849;
  t936 = t824*t317*t713*t716;
  t940 = t317*t713*t722*t832;
  t1024 = t936 + t940;
  t420 = -0.994522*t341;
  t422 = 0. + t420;
  t463 = -1.*t317*t422*t435;
  t920 = -0.103955395616*t573*t905;
  t926 = -0.9890740084840001*t573;
  t928 = 1. + t926;
  t1025 = t928*t1024;
  t1028 = t463 + t920 + t1025;
  t1132 = -0.104528*t341;
  t1136 = 0. + t1132;
  t1141 = -1.*t317*t1136*t435;
  t1143 = -0.010926102783999999*t573;
  t1150 = 1. + t1143;
  t1151 = t1150*t905;
  t1153 = -0.103955395616*t573*t1024;
  t1170 = t1141 + t1151 + t1153;
  t196 = -0.49726168403800003*t60;
  t1303 = -1.0000001112680001*t573;
  t1306 = 1. + t1303;
  t1316 = -1.*t1306*t317*t435;
  t1317 = 0.104528*t341;
  t1319 = 0. + t1317;
  t1323 = t1319*t905;
  t1324 = 0.994522*t341;
  t1358 = 0. + t1324;
  t1372 = t1358*t1024;
  t1377 = t1316 + t1323 + t1372;
  t1450 = Cos(var1[27]);
  t1481 = -1.*t1450;
  t1487 = 1. + t1481;
  t1511 = 0.051978134642000004*t60;
  t1047 = -0.05226439969100001*t60;
  t8 = Sin(var1[27]);
  t265 = 0.073913*t259;
  t268 = t196 + t265;
  t1031 = t268*t1028;
  t1071 = -0.703234*t259;
  t1123 = t1047 + t1071;
  t1189 = t1123*t1170;
  t1192 = -0.500001190325*t60;
  t1292 = 1. + t1192;
  t1422 = t1292*t1377;
  t1433 = t1031 + t1189 + t1422;
  t1497 = -0.5054634410180001*t60;
  t1503 = 1. + t1497;
  t1504 = t1503*t1028;
  t1525 = -0.707107*t259;
  t1530 = t1511 + t1525;
  t1569 = t1530*t1170;
  t1578 = -0.073913*t259;
  t1581 = t196 + t1578;
  t1583 = t1581*t1377;
  t1586 = t1504 + t1569 + t1583;
  t1602 = 0.707107*t259;
  t1627 = t1511 + t1602;
  t1656 = t1627*t1028;
  t1668 = -0.9945383682050002*t60;
  t1671 = 1. + t1668;
  t1679 = t1671*t1170;
  t1684 = 0.703234*t259;
  t1689 = t1047 + t1684;
  t1695 = t1689*t1377;
  t1697 = t1656 + t1679 + t1695;
  t16 = -0.104528*t8;
  t22 = 0. + t16;
  t2044 = Sin(var1[3]);
  t2043 = t317*t716*t435;
  t2052 = t2044*t832;
  t2074 = t2043 + t2052;
  t2084 = t716*t2044;
  t2088 = -1.*t317*t435*t832;
  t2102 = t2084 + t2088;
  t2077 = t722*t2074;
  t2111 = t824*t2102;
  t2113 = t2077 + t2111;
  t2151 = t824*t2074;
  t2152 = -1.*t722*t2102;
  t2158 = t2151 + t2152;
  t2120 = -0.103955395616*t573*t2113;
  t2160 = t1150*t2158;
  t2161 = t2120 + t2160;
  t2166 = t928*t2113;
  t2168 = -0.103955395616*t573*t2158;
  t2169 = t2166 + t2168;
  t2189 = t1358*t2113;
  t2198 = t1319*t2158;
  t2202 = t2189 + t2198;
  t1596 = -0.010926102783999999*t1487;
  t1601 = 1. + t1596;
  t1762 = -0.994522*t8;
  t1776 = 0. + t1762;
  t2163 = t1123*t2161;
  t2176 = t268*t2169;
  t2217 = t1292*t2202;
  t2224 = t2163 + t2176 + t2217;
  t1793 = -0.9890740084840001*t1487;
  t1794 = 1. + t1793;
  t2275 = t1530*t2161;
  t2297 = t1503*t2169;
  t2299 = t1581*t2202;
  t2300 = t2275 + t2297 + t2299;
  t2318 = t1671*t2161;
  t2334 = t1627*t2169;
  t2341 = t1689*t2202;
  t2350 = t2318 + t2334 + t2341;
  t1849 = -1.0000001112680001*t1487;
  t1898 = 1. + t1849;
  t1941 = 0.994522*t8;
  t1950 = 0. + t1941;
  t1996 = 0.104528*t8;
  t1998 = 0. + t1996;
  t2493 = -1.*t716*t2044;
  t2497 = t317*t435*t832;
  t2498 = t2493 + t2497;
  t2467 = -1.*t722*t2074;
  t2499 = t824*t2498;
  t2503 = t2467 + t2499;
  t2534 = -1.*t824*t2074;
  t2549 = -1.*t722*t2498;
  t2552 = t2534 + t2549;
  t2532 = -0.103955395616*t573*t2503;
  t2556 = t1150*t2552;
  t2557 = t2532 + t2556;
  t2569 = t928*t2503;
  t2584 = -0.103955395616*t573*t2552;
  t2587 = t2569 + t2584;
  t2599 = t1358*t2503;
  t2601 = t1319*t2552;
  t2605 = t2599 + t2601;
  t2558 = t1123*t2557;
  t2593 = t268*t2587;
  t2616 = t1292*t2605;
  t2617 = t2558 + t2593 + t2616;
  t2637 = t1530*t2557;
  t2638 = t1503*t2587;
  t2642 = t1581*t2605;
  t2645 = t2637 + t2638 + t2642;
  t2654 = t1671*t2557;
  t2683 = t1627*t2587;
  t2687 = t1689*t2605;
  t2699 = t2654 + t2683 + t2687;
  t2802 = t722*t2498;
  t2803 = t2151 + t2802;
  t2796 = t317*t713*t422;
  t2804 = t928*t2803;
  t2808 = t2796 + t2532 + t2804;
  t2819 = t317*t713*t1136;
  t2825 = t1150*t2503;
  t2830 = -0.103955395616*t573*t2803;
  t2833 = t2819 + t2825 + t2830;
  t2841 = t1306*t317*t713;
  t2842 = t1319*t2503;
  t2847 = t1358*t2803;
  t2854 = t2841 + t2842 + t2847;
  t2810 = t268*t2808;
  t2836 = t1123*t2833;
  t2859 = t1292*t2854;
  t2864 = t2810 + t2836 + t2859;
  t2868 = t1503*t2808;
  t2870 = t1530*t2833;
  t2871 = t1581*t2854;
  t2873 = t2868 + t2870 + t2871;
  t2885 = t1627*t2808;
  t2896 = t1671*t2833;
  t2898 = t1689*t2854;
  t2899 = t2885 + t2896 + t2898;
  t2993 = 0.051978134642000004*t259;
  t3020 = -0.49726168403800003*t259;
  t3082 = -0.05226439969100001*t259;
  t2987 = -0.5054634410180001*t259*t2808;
  t2988 = -0.707107*t43;
  t3002 = t2988 + t2993;
  t3006 = t3002*t2833;
  t3015 = -0.073913*t43;
  t3026 = t3015 + t3020;
  t3027 = t3026*t2854;
  t3029 = t2987 + t3006 + t3027;
  t3052 = 0.707107*t43;
  t3059 = t3052 + t2993;
  t3075 = t3059*t2808;
  t3078 = -0.9945383682050002*t259*t2833;
  t3080 = 0.703234*t43;
  t3084 = t3080 + t3082;
  t3087 = t3084*t2854;
  t3088 = t3075 + t3078 + t3087;
  t3097 = 0.073913*t43;
  t3099 = t3097 + t3020;
  t3101 = t3099*t2808;
  t3104 = -0.703234*t43;
  t3106 = t3104 + t3082;
  t3117 = t3106*t2833;
  t3124 = -0.500001190325*t259*t2854;
  t3126 = t3101 + t3117 + t3124;
  t3205 = -1.0000001112680001*t317*t713*t341;
  t3221 = 0.104528*t468*t2503;
  t3248 = 0.994522*t468*t2803;
  t3264 = t3205 + t3221 + t3248;
  t3271 = -0.994522*t468*t317*t713;
  t3274 = -0.103955395616*t341*t2503;
  t3279 = -0.9890740084840001*t341*t2803;
  t3281 = t3271 + t3274 + t3279;
  t3284 = -0.104528*t468*t317*t713;
  t3286 = -0.010926102783999999*t341*t2503;
  t3290 = -0.103955395616*t341*t2803;
  t3297 = t3284 + t3286 + t3290;
  t3269 = t1689*t3264;
  t3283 = t1627*t3281;
  t3299 = t1671*t3297;
  t3302 = t3269 + t3283 + t3299;
  t3314 = t1581*t3264;
  t3315 = t1503*t3281;
  t3317 = t1530*t3297;
  t3319 = t3314 + t3315 + t3317;
  t3360 = t1292*t3264;
  t3383 = t268*t3281;
  t3389 = t1123*t3297;
  t3392 = t3360 + t3383 + t3389;
  t3474 = -1.*t716*t2044*t435;
  t3479 = t317*t832;
  t3481 = t3474 + t3479;
  t3483 = -1.*t317*t716;
  t3485 = -1.*t2044*t435*t832;
  t3497 = t3483 + t3485;
  t3482 = -1.*t722*t3481;
  t3501 = t824*t3497;
  t3502 = t3482 + t3501;
  t3504 = t824*t3481;
  t3505 = t722*t3497;
  t3506 = t3504 + t3505;
  t3468 = -1.*t713*t422*t2044;
  t3503 = -0.103955395616*t573*t3502;
  t3507 = t928*t3506;
  t3510 = t3468 + t3503 + t3507;
  t3516 = -1.*t713*t1136*t2044;
  t3517 = t1150*t3502;
  t3520 = -0.103955395616*t573*t3506;
  t3524 = t3516 + t3517 + t3520;
  t3526 = -1.*t1306*t713*t2044;
  t3527 = t1319*t3502;
  t3529 = t1358*t3506;
  t3531 = t3526 + t3527 + t3529;
  t3511 = t268*t3510;
  t3525 = t1123*t3524;
  t3543 = t1292*t3531;
  t3549 = t3511 + t3525 + t3543;
  t3555 = t1503*t3510;
  t3557 = t1530*t3524;
  t3560 = t1581*t3531;
  t3567 = t3555 + t3557 + t3560;
  t3573 = t1627*t3510;
  t3576 = t1671*t3524;
  t3580 = t1689*t3531;
  t3581 = t3573 + t3576 + t3580;
  t3643 = -1.*t713*t716*t722*t2044;
  t3644 = t824*t713*t2044*t832;
  t3645 = t3643 + t3644;
  t3651 = t824*t713*t716*t2044;
  t3655 = t713*t722*t2044*t832;
  t3656 = t3651 + t3655;
  t3637 = -1.*t422*t2044*t435;
  t3650 = -0.103955395616*t573*t3645;
  t3658 = t928*t3656;
  t3673 = t3637 + t3650 + t3658;
  t3679 = -1.*t1136*t2044*t435;
  t3680 = t1150*t3645;
  t3681 = -0.103955395616*t573*t3656;
  t3685 = t3679 + t3680 + t3681;
  t3689 = -1.*t1306*t2044*t435;
  t3692 = t1319*t3645;
  t3696 = t1358*t3656;
  t3701 = t3689 + t3692 + t3696;
  t3678 = t268*t3673;
  t3686 = t1123*t3685;
  t3703 = t1292*t3701;
  t3709 = t3678 + t3686 + t3703;
  t3711 = t1503*t3673;
  t3713 = t1530*t3685;
  t3715 = t1581*t3701;
  t3717 = t3711 + t3713 + t3715;
  t3725 = t1627*t3673;
  t3728 = t1671*t3685;
  t3731 = t1689*t3701;
  t3737 = t3725 + t3728 + t3731;
  t3842 = t716*t2044*t435;
  t3843 = -1.*t317*t832;
  t3847 = t3842 + t3843;
  t3868 = t722*t3847;
  t3876 = t3868 + t3501;
  t3881 = t824*t3847;
  t3884 = -1.*t722*t3497;
  t3887 = t3881 + t3884;
  t3880 = -0.103955395616*t573*t3876;
  t3897 = t1150*t3887;
  t3906 = t3880 + t3897;
  t3928 = t928*t3876;
  t3936 = -0.103955395616*t573*t3887;
  t3944 = t3928 + t3936;
  t3964 = t1358*t3876;
  t3967 = t1319*t3887;
  t3971 = t3964 + t3967;
  t3926 = t1123*t3906;
  t3961 = t268*t3944;
  t3972 = t1292*t3971;
  t3981 = t3926 + t3961 + t3972;
  t3986 = t1530*t3906;
  t3988 = t1503*t3944;
  t3989 = t1581*t3971;
  t4004 = t3986 + t3988 + t3989;
  t4006 = t1671*t3906;
  t4007 = t1627*t3944;
  t4008 = t1689*t3971;
  t4009 = t4006 + t4007 + t4008;
  t4083 = t317*t716;
  t4086 = t2044*t435*t832;
  t4091 = t4083 + t4086;
  t4079 = -1.*t722*t3847;
  t4095 = t824*t4091;
  t4096 = t4079 + t4095;
  t4107 = -1.*t824*t3847;
  t4108 = -1.*t722*t4091;
  t4110 = t4107 + t4108;
  t4104 = -0.103955395616*t573*t4096;
  t4117 = t1150*t4110;
  t4121 = t4104 + t4117;
  t4130 = t928*t4096;
  t4141 = -0.103955395616*t573*t4110;
  t4142 = t4130 + t4141;
  t4145 = t1358*t4096;
  t4147 = t1319*t4110;
  t4148 = t4145 + t4147;
  t4124 = t1123*t4121;
  t4143 = t268*t4142;
  t4154 = t1292*t4148;
  t4166 = t4124 + t4143 + t4154;
  t4179 = t1530*t4121;
  t4189 = t1503*t4142;
  t4197 = t1581*t4148;
  t4199 = t4179 + t4189 + t4197;
  t4209 = t1671*t4121;
  t4227 = t1627*t4142;
  t4232 = t1689*t4148;
  t4236 = t4209 + t4227 + t4232;
  t4282 = t722*t4091;
  t4285 = t3881 + t4282;
  t4281 = t713*t422*t2044;
  t4286 = t928*t4285;
  t4288 = t4281 + t4104 + t4286;
  t4294 = t713*t1136*t2044;
  t4299 = t1150*t4096;
  t4307 = -0.103955395616*t573*t4285;
  t4308 = t4294 + t4299 + t4307;
  t4325 = t1306*t713*t2044;
  t4327 = t1319*t4096;
  t4329 = t1358*t4285;
  t4332 = t4325 + t4327 + t4329;
  t4293 = t268*t4288;
  t4324 = t1123*t4308;
  t4334 = t1292*t4332;
  t4340 = t4293 + t4324 + t4334;
  t4354 = t1503*t4288;
  t4355 = t1530*t4308;
  t4357 = t1581*t4332;
  t4363 = t4354 + t4355 + t4357;
  t4369 = t1627*t4288;
  t4400 = t1671*t4308;
  t4405 = t1689*t4332;
  t4407 = t4369 + t4400 + t4405;
  t4474 = -0.5054634410180001*t259*t4288;
  t4475 = t3002*t4308;
  t4479 = t3026*t4332;
  t4489 = t4474 + t4475 + t4479;
  t4497 = t3059*t4288;
  t4499 = -0.9945383682050002*t259*t4308;
  t4501 = t3084*t4332;
  t4513 = t4497 + t4499 + t4501;
  t4525 = t3099*t4288;
  t4531 = t3106*t4308;
  t4533 = -0.500001190325*t259*t4332;
  t4535 = t4525 + t4531 + t4533;
  t4604 = -1.0000001112680001*t713*t341*t2044;
  t4611 = 0.104528*t468*t4096;
  t4612 = 0.994522*t468*t4285;
  t4613 = t4604 + t4611 + t4612;
  t4618 = -0.994522*t468*t713*t2044;
  t4620 = -0.103955395616*t341*t4096;
  t4627 = -0.9890740084840001*t341*t4285;
  t4629 = t4618 + t4620 + t4627;
  t4644 = -0.104528*t468*t713*t2044;
  t4645 = -0.010926102783999999*t341*t4096;
  t4648 = -0.103955395616*t341*t4285;
  t4654 = t4644 + t4645 + t4648;
  t4614 = t1689*t4613;
  t4639 = t1627*t4629;
  t4661 = t1671*t4654;
  t4665 = t4614 + t4639 + t4661;
  t4681 = t1581*t4613;
  t4683 = t1503*t4629;
  t4702 = t1530*t4654;
  t4703 = t4681 + t4683 + t4702;
  t4718 = t1292*t4613;
  t4720 = t268*t4629;
  t4721 = t1123*t4654;
  t4728 = t4718 + t4720 + t4721;
  t4823 = -1.*t713*t716*t722;
  t4824 = t824*t713*t832;
  t4825 = t4823 + t4824;
  t4832 = -1.*t824*t713*t716;
  t4834 = -1.*t713*t722*t832;
  t4835 = t4832 + t4834;
  t4826 = -0.103955395616*t573*t4825;
  t4837 = t1150*t4835;
  t4841 = t4826 + t4837;
  t4854 = t928*t4825;
  t4863 = -0.103955395616*t573*t4835;
  t4868 = t4854 + t4863;
  t4873 = t1358*t4825;
  t4875 = t1319*t4835;
  t4879 = t4873 + t4875;
  t4848 = t1123*t4841;
  t4871 = t268*t4868;
  t4891 = t1292*t4879;
  t4892 = t4848 + t4871 + t4891;
  t4895 = t1530*t4841;
  t4896 = t1503*t4868;
  t4900 = t1581*t4879;
  t4906 = t4895 + t4896 + t4900;
  t4914 = t1671*t4841;
  t4919 = t1627*t4868;
  t4923 = t1689*t4879;
  t4930 = t4914 + t4919 + t4923;
  t4978 = t713*t716*t722;
  t4981 = -1.*t824*t713*t832;
  t4985 = t4978 + t4981;
  t4992 = t824*t713*t716;
  t4994 = t713*t722*t832;
  t4997 = t4992 + t4994;
  t4991 = -0.103955395616*t573*t4985;
  t5001 = t1150*t4997;
  t5003 = t4991 + t5001;
  t5012 = t928*t4985;
  t5018 = -0.103955395616*t573*t4997;
  t5022 = t5012 + t5018;
  t5030 = t1358*t4985;
  t5032 = t1319*t4997;
  t5036 = t5030 + t5032;
  t5004 = t1123*t5003;
  t5025 = t268*t5022;
  t5044 = t1292*t5036;
  t5047 = t5004 + t5025 + t5044;
  t5053 = t1530*t5003;
  t5059 = t1503*t5022;
  t5066 = t1581*t5036;
  t5068 = t5053 + t5059 + t5066;
  t5095 = t1671*t5003;
  t5099 = t1627*t5022;
  t5101 = t1689*t5036;
  t5112 = t5095 + t5099 + t5101;
  t5178 = -1.*t422*t435;
  t5188 = t928*t4997;
  t5193 = t5178 + t4826 + t5188;
  t5202 = -1.*t1136*t435;
  t5209 = t1150*t4825;
  t5212 = t5202 + t5209 + t5018;
  t5218 = -1.*t1306*t435;
  t5224 = t1319*t4825;
  t5229 = t1358*t4997;
  t5232 = t5218 + t5224 + t5229;
  t5199 = t268*t5193;
  t5217 = t1123*t5212;
  t5236 = t1292*t5232;
  t5237 = t5199 + t5217 + t5236;
  t5242 = t1503*t5193;
  t5245 = t1530*t5212;
  t5255 = t1581*t5232;
  t5263 = t5242 + t5245 + t5255;
  t5270 = t1627*t5193;
  t5272 = t1671*t5212;
  t5275 = t1689*t5232;
  t5276 = t5270 + t5272 + t5275;
  t5381 = -0.5054634410180001*t259*t5193;
  t5390 = t3002*t5212;
  t5392 = t3026*t5232;
  t5396 = t5381 + t5390 + t5392;
  t5412 = t3059*t5193;
  t5421 = -0.9945383682050002*t259*t5212;
  t5422 = t3084*t5232;
  t5426 = t5412 + t5421 + t5422;
  t5429 = t3099*t5193;
  t5430 = t3106*t5212;
  t5438 = -0.500001190325*t259*t5232;
  t5457 = t5429 + t5430 + t5438;
  t5530 = 1.0000001112680001*t341*t435;
  t5534 = 0.104528*t468*t4825;
  t5540 = 0.994522*t468*t4997;
  t5552 = t5530 + t5534 + t5540;
  t5568 = 0.994522*t468*t435;
  t5575 = -0.103955395616*t341*t4825;
  t5577 = -0.9890740084840001*t341*t4997;
  t5578 = t5568 + t5575 + t5577;
  t5592 = 0.104528*t468*t435;
  t5598 = -0.010926102783999999*t341*t4825;
  t5612 = -0.103955395616*t341*t4997;
  t5614 = t5592 + t5598 + t5612;
  t5565 = t1689*t5552;
  t5584 = t1627*t5578;
  t5617 = t1671*t5614;
  t5618 = t5565 + t5584 + t5617;
  t5631 = t1581*t5552;
  t5635 = t1503*t5578;
  t5638 = t1530*t5614;
  t5648 = t5631 + t5635 + t5638;
  t5654 = t1292*t5552;
  t5664 = t268*t5578;
  t5673 = t1123*t5614;
  t5684 = t5654 + t5664 + t5673;
  t5795 = t716*t722*t435;
  t5796 = -1.*t824*t435*t832;
  t5806 = t5795 + t5796;
  t5811 = -1.*t824*t716*t435;
  t5814 = -1.*t722*t435*t832;
  t5818 = t5811 + t5814;
  t5791 = -1.*t713*t422;
  t5807 = -0.103955395616*t573*t5806;
  t5819 = t928*t5818;
  t5822 = t5791 + t5807 + t5819;
  t5831 = -1.*t713*t1136;
  t5839 = t1150*t5806;
  t5843 = -0.103955395616*t573*t5818;
  t5847 = t5831 + t5839 + t5843;
  t5851 = -1.*t1306*t713;
  t5852 = t1319*t5806;
  t5855 = t1358*t5818;
  t5862 = t5851 + t5852 + t5855;
  t5828 = t268*t5822;
  t5848 = t1123*t5847;
  t5864 = t1292*t5862;
  t5878 = t5828 + t5848 + t5864;
  t5882 = t1503*t5822;
  t5903 = t1530*t5847;
  t5904 = t1581*t5862;
  t5905 = t5882 + t5903 + t5904;
  t5910 = t1627*t5822;
  t5911 = t1671*t5847;
  t5912 = t1689*t5862;
  t5921 = t5910 + t5911 + t5912;
  t1435 = t22*t1433;
  t1595 = -0.103955395616*t1487*t1586;
  t1702 = t1601*t1697;
  t1712 = t1435 + t1595 + t1702;
  t1782 = t1776*t1433;
  t1813 = t1794*t1586;
  t1827 = -0.103955395616*t1487*t1697;
  t1828 = t1782 + t1813 + t1827;
  t1915 = t1898*t1433;
  t1961 = t1950*t1586;
  t2007 = t1998*t1697;
  t2024 = t1915 + t1961 + t2007;
  t2227 = t22*t2224;
  t2316 = -0.103955395616*t1487*t2300;
  t2368 = t1601*t2350;
  t2369 = t2227 + t2316 + t2368;
  t2386 = t1776*t2224;
  t2393 = t1794*t2300;
  t2402 = -0.103955395616*t1487*t2350;
  t2405 = t2386 + t2393 + t2402;
  t2415 = t1898*t2224;
  t2437 = t1950*t2300;
  t2441 = t1998*t2350;
  t2447 = t2415 + t2437 + t2441;
  t2624 = t22*t2617;
  t2650 = -0.103955395616*t1487*t2645;
  t2705 = t1601*t2699;
  t2708 = t2624 + t2650 + t2705;
  t2713 = t1776*t2617;
  t2724 = t1794*t2645;
  t2725 = -0.103955395616*t1487*t2699;
  t2736 = t2713 + t2724 + t2725;
  t2742 = t1898*t2617;
  t2745 = t1950*t2645;
  t2749 = t1998*t2699;
  t2750 = t2742 + t2745 + t2749;
  t2865 = -1.0000001112680001*t8*t2864;
  t2883 = 0.994522*t1450*t2873;
  t2903 = 0.104528*t1450*t2899;
  t2904 = t2865 + t2883 + t2903;
  t2912 = -0.994522*t1450*t2864;
  t2917 = -0.9890740084840001*t8*t2873;
  t2932 = -0.103955395616*t8*t2899;
  t2939 = t2912 + t2917 + t2932;
  t2950 = -0.104528*t1450*t2864;
  t2951 = -0.103955395616*t8*t2873;
  t2954 = -0.010926102783999999*t8*t2899;
  t2955 = t2950 + t2951 + t2954;
  t3051 = t1950*t3029;
  t3095 = t1998*t3088;
  t3132 = t1898*t3126;
  t3138 = t3051 + t3095 + t3132;
  t3152 = t1794*t3029;
  t3155 = -0.103955395616*t1487*t3088;
  t3158 = t1776*t3126;
  t3162 = t3152 + t3155 + t3158;
  t3167 = -0.103955395616*t1487*t3029;
  t3170 = t1601*t3088;
  t3171 = t22*t3126;
  t3175 = t3167 + t3170 + t3171;
  t3305 = t1998*t3302;
  t3331 = t1950*t3319;
  t3393 = t1898*t3392;
  t3396 = t3305 + t3331 + t3393;
  t3400 = -0.103955395616*t1487*t3302;
  t3401 = t1794*t3319;
  t3405 = t1776*t3392;
  t3409 = t3400 + t3401 + t3405;
  t3414 = t1601*t3302;
  t3418 = -0.103955395616*t1487*t3319;
  t3434 = t22*t3392;
  t3436 = t3414 + t3418 + t3434;
  t3550 = t22*t3549;
  t3571 = -0.103955395616*t1487*t3567;
  t3583 = t1601*t3581;
  t3587 = t3550 + t3571 + t3583;
  t3589 = t1776*t3549;
  t3591 = t1794*t3567;
  t3596 = -0.103955395616*t1487*t3581;
  t3599 = t3589 + t3591 + t3596;
  t3611 = t1898*t3549;
  t3614 = t1950*t3567;
  t3615 = t1998*t3581;
  t3617 = t3611 + t3614 + t3615;
  t3710 = t22*t3709;
  t3719 = -0.103955395616*t1487*t3717;
  t3744 = t1601*t3737;
  t3749 = t3710 + t3719 + t3744;
  t3760 = t1776*t3709;
  t3761 = t1794*t3717;
  t3763 = -0.103955395616*t1487*t3737;
  t3768 = t3760 + t3761 + t3763;
  t3772 = t1898*t3709;
  t3775 = t1950*t3717;
  t3778 = t1998*t3737;
  t3780 = t3772 + t3775 + t3778;
  t3790 = t22*t2864;
  t3792 = -0.103955395616*t1487*t2873;
  t3793 = t1601*t2899;
  t3794 = t3790 + t3792 + t3793;
  t3812 = t1776*t2864;
  t3814 = t1794*t2873;
  t3817 = -0.103955395616*t1487*t2899;
  t3819 = t3812 + t3814 + t3817;
  t3823 = t1898*t2864;
  t3828 = t1950*t2873;
  t3830 = t1998*t2899;
  t3831 = t3823 + t3828 + t3830;
  t3983 = t22*t3981;
  t4005 = -0.103955395616*t1487*t4004;
  t4021 = t1601*t4009;
  t4023 = t3983 + t4005 + t4021;
  t4026 = t1776*t3981;
  t4031 = t1794*t4004;
  t4039 = -0.103955395616*t1487*t4009;
  t4045 = t4026 + t4031 + t4039;
  t4053 = t1898*t3981;
  t4054 = t1950*t4004;
  t4055 = t1998*t4009;
  t4057 = t4053 + t4054 + t4055;
  t4174 = t22*t4166;
  t4203 = -0.103955395616*t1487*t4199;
  t4237 = t1601*t4236;
  t4238 = t4174 + t4203 + t4237;
  t4245 = t1776*t4166;
  t4254 = t1794*t4199;
  t4255 = -0.103955395616*t1487*t4236;
  t4256 = t4245 + t4254 + t4255;
  t4259 = t1898*t4166;
  t4260 = t1950*t4199;
  t4265 = t1998*t4236;
  t4266 = t4259 + t4260 + t4265;
  t4351 = -1.0000001112680001*t8*t4340;
  t4367 = 0.994522*t1450*t4363;
  t4412 = 0.104528*t1450*t4407;
  t4413 = t4351 + t4367 + t4412;
  t4421 = -0.994522*t1450*t4340;
  t4423 = -0.9890740084840001*t8*t4363;
  t4426 = -0.103955395616*t8*t4407;
  t4435 = t4421 + t4423 + t4426;
  t4440 = -0.104528*t1450*t4340;
  t4443 = -0.103955395616*t8*t4363;
  t4446 = -0.010926102783999999*t8*t4407;
  t4448 = t4440 + t4443 + t4446;
  t4496 = t1950*t4489;
  t4523 = t1998*t4513;
  t4546 = t1898*t4535;
  t4552 = t4496 + t4523 + t4546;
  t4560 = t1794*t4489;
  t4564 = -0.103955395616*t1487*t4513;
  t4574 = t1776*t4535;
  t4576 = t4560 + t4564 + t4574;
  t4581 = -0.103955395616*t1487*t4489;
  t4582 = t1601*t4513;
  t4586 = t22*t4535;
  t4589 = t4581 + t4582 + t4586;
  t4674 = t1998*t4665;
  t4713 = t1950*t4703;
  t4736 = t1898*t4728;
  t4743 = t4674 + t4713 + t4736;
  t4747 = -0.103955395616*t1487*t4665;
  t4755 = t1794*t4703;
  t4756 = t1776*t4728;
  t4761 = t4747 + t4755 + t4756;
  t4773 = t1601*t4665;
  t4778 = -0.103955395616*t1487*t4703;
  t4782 = t22*t4728;
  t4788 = t4773 + t4778 + t4782;
  t4894 = t22*t4892;
  t4908 = -0.103955395616*t1487*t4906;
  t4931 = t1601*t4930;
  t4935 = t4894 + t4908 + t4931;
  t4945 = t1776*t4892;
  t4947 = t1794*t4906;
  t4952 = -0.103955395616*t1487*t4930;
  t4954 = t4945 + t4947 + t4952;
  t4961 = t1898*t4892;
  t4962 = t1950*t4906;
  t4965 = t1998*t4930;
  t4967 = t4961 + t4962 + t4965;
  t5050 = t22*t5047;
  t5084 = -0.103955395616*t1487*t5068;
  t5118 = t1601*t5112;
  t5123 = t5050 + t5084 + t5118;
  t5129 = t1776*t5047;
  t5136 = t1794*t5068;
  t5138 = -0.103955395616*t1487*t5112;
  t5140 = t5129 + t5136 + t5138;
  t5152 = t1898*t5047;
  t5153 = t1950*t5068;
  t5155 = t1998*t5112;
  t5156 = t5152 + t5153 + t5155;
  t5238 = -1.0000001112680001*t8*t5237;
  t5264 = 0.994522*t1450*t5263;
  t5285 = 0.104528*t1450*t5276;
  t5291 = t5238 + t5264 + t5285;
  t5302 = -0.994522*t1450*t5237;
  t5304 = -0.9890740084840001*t8*t5263;
  t5312 = -0.103955395616*t8*t5276;
  t5315 = t5302 + t5304 + t5312;
  t5325 = -0.104528*t1450*t5237;
  t5329 = -0.103955395616*t8*t5263;
  t5332 = -0.010926102783999999*t8*t5276;
  t5344 = t5325 + t5329 + t5332;
  t5403 = t1950*t5396;
  t5428 = t1998*t5426;
  t5470 = t1898*t5457;
  t5472 = t5403 + t5428 + t5470;
  t5474 = t1794*t5396;
  t5483 = -0.103955395616*t1487*t5426;
  t5490 = t1776*t5457;
  t5491 = t5474 + t5483 + t5490;
  t5502 = -0.103955395616*t1487*t5396;
  t5508 = t1601*t5426;
  t5509 = t22*t5457;
  t5510 = t5502 + t5508 + t5509;
  t5620 = t1998*t5618;
  t5651 = t1950*t5648;
  t5694 = t1898*t5684;
  t5699 = t5620 + t5651 + t5694;
  t5705 = -0.103955395616*t1487*t5618;
  t5736 = t1794*t5648;
  t5740 = t1776*t5684;
  t5748 = t5705 + t5736 + t5740;
  t5763 = t1601*t5618;
  t5767 = -0.103955395616*t1487*t5648;
  t5770 = t22*t5684;
  t5775 = t5763 + t5767 + t5770;
  t5879 = t22*t5878;
  t5906 = -0.103955395616*t1487*t5905;
  t5923 = t1601*t5921;
  t5929 = t5879 + t5906 + t5923;
  t5933 = t1776*t5878;
  t5934 = t1794*t5905;
  t5939 = -0.103955395616*t1487*t5921;
  t5940 = t5933 + t5934 + t5939;
  t5945 = t1898*t5878;
  t5947 = t1950*t5905;
  t5950 = t1998*t5921;
  t5953 = t5945 + t5947 + t5950;
  t6630 = -1.*t824;
  t6632 = 1. + t6630;
  t6714 = -0.051978134642000004*t60;
  t6752 = 0.05226439969100001*t60;
  t6727 = 0.49726168403800003*t60;
  t6654 = -0.12*t6632;
  t6658 = -0.4*t722;
  t6663 = 0. + t6654 + t6658;
  t6634 = 0.4*t6632;
  t6636 = -0.12*t722;
  t6637 = 0. + t6634 + t6636;
  t6681 = -1.1924972351948546e-8*var1[25];
  t6683 = 0.38315655000705834*t573;
  t6699 = -0.05650052807*t422;
  t6701 = t6681 + t6683 + t6699;
  t6665 = 1.1345904784751044e-7*var1[25];
  t6666 = 0.04027119345689465*t573;
  t6671 = -0.05650052807*t1136;
  t6677 = t6665 + t6666 + t6671;
  t6740 = 1.639789470231751e-8*var1[26];
  t6749 = -0.22983603018311177*t60;
  t6753 = t6752 + t1684;
  t6754 = 0.164383620275*t6753;
  t6757 = t6714 + t1602;
  t6758 = 0.18957839082800002*t6757;
  t6763 = t6740 + t6749 + t6754 + t6758;
  t6704 = 1.5601527583902087e-7*var1[26];
  t6711 = 0.09582494577057615*t60;
  t6716 = t6714 + t1525;
  t6720 = -0.231098203479*t6716;
  t6728 = t6727 + t1578;
  t6730 = 0.164383620275*t6728;
  t6732 = t6704 + t6711 + t6720 + t6730;
  t6777 = -1.568745163810375e-7*var1[26];
  t6778 = 0.08219200580743281*t60;
  t6779 = t6752 + t1071;
  t6790 = -0.231098203479*t6779;
  t6792 = t6727 + t265;
  t6801 = 0.18957839082800002*t6792;
  t6803 = t6777 + t6778 + t6790 + t6801;
  t6828 = 0.19098732144477495*t1487;
  t6832 = 0.014401763312*t1998;
  t6833 = 0.137024246638*t1950;
  t6836 = 0. + t6828 + t6832 + t6833;
  t6841 = 5.06291820800569e-8*var1[27];
  t6849 = 0.13702426188441388*t1487;
  t6850 = 0.190987300194*t1776;
  t6852 = t6841 + t6849 + t6850;
  t6868 = -4.817066759205414e-7*var1[27];
  t6870 = 0.0144017649144554*t1487;
  t6880 = 0.190987300194*t22;
  t6882 = t6868 + t6870 + t6880;
  t7069 = -0.051978134642000004*t259;
  t7109 = 0.05226439969100001*t259;
  t7078 = 0.49726168403800003*t259;
  t6641 = -0.056500534356700764*t573;
  t6643 = 0.040271188976*t1319;
  t6646 = 0.38315650737400003*t1358;
  t6649 = 0. + t6641 + t6643 + t6646;
  t6955 = -0.12*t824;
  t6958 = 0.4*t722;
  t6960 = t6955 + t6958;
  t6978 = -0.4*t824;
  t6983 = t6978 + t6636;
  t7016 = 0.13777901533039377*t1450;
  t7017 = 0.19098732144477495*t8;
  t7020 = t7016 + t7017;
  t7023 = -0.18994107176353728*t1450;
  t7024 = 0.13702426188441388*t8;
  t7028 = 5.06291820800569e-8 + t7023 + t7024;
  t7034 = -0.019963520514678434*t1450;
  t7036 = 0.0144017649144554*t8;
  t7038 = -4.817066759205414e-7 + t7034 + t7036;
  t7073 = t2988 + t7069;
  t7075 = -0.231098203479*t7073;
  t7082 = t3015 + t7078;
  t7087 = 0.164383620275*t7082;
  t7089 = 0.09582494577057615*t259;
  t7091 = 1.5601527583902087e-7 + t7075 + t7087 + t7089;
  t7103 = t3052 + t7069;
  t7108 = 0.18957839082800002*t7103;
  t7112 = t3080 + t7109;
  t7114 = 0.164383620275*t7112;
  t7116 = -0.22983603018311177*t259;
  t7117 = 1.639789470231751e-8 + t7108 + t7114 + t7116;
  t7122 = t3104 + t7109;
  t7131 = -0.231098203479*t7122;
  t7132 = t3097 + t7078;
  t7134 = 0.18957839082800002*t7132;
  t7135 = 0.08219200580743281*t259;
  t7136 = -1.568745163810375e-7 + t7131 + t7134 + t7135;
  t7166 = 0.3852670428678886*t468;
  t7170 = -0.056500534356700764*t341;
  t7171 = t7166 + t7170;
  t7179 = 0.0059058871981009595*t468;
  t7183 = 0.04027119345689465*t341;
  t7187 = 1.1345904784751044e-7 + t7179 + t7183;
  t7192 = 0.05619101817723254*t468;
  t7198 = 0.38315655000705834*t341;
  t7203 = -1.1924972351948546e-8 + t7192 + t7198;
  p_output1[0]=(0.040001*t3587 + 0.380588*t3599 + 0.92388*t3617)*var2[3] + (0.040001*t1712 + 0.380588*t1828 + 0.92388*t2024)*var2[4] + (0.040001*t2369 + 0.380588*t2405 + 0.92388*t2447)*var2[5] + (0.040001*t2708 + 0.380588*t2736 + 0.92388*t2750)*var2[24] + (0.92388*t3396 + 0.380588*t3409 + 0.040001*t3436)*var2[25] + (0.92388*t3138 + 0.380588*t3162 + 0.040001*t3175)*var2[26] + (0.92388*t2904 + 0.380588*t2939 + 0.040001*t2955)*var2[27];
  p_output1[1]=(0.040001*t3794 + 0.380588*t3819 + 0.92388*t3831)*var2[3] + (0.040001*t3749 + 0.380588*t3768 + 0.92388*t3780)*var2[4] + (0.040001*t4023 + 0.380588*t4045 + 0.92388*t4057)*var2[5] + (0.040001*t4238 + 0.380588*t4256 + 0.92388*t4266)*var2[24] + (0.92388*t4743 + 0.380588*t4761 + 0.040001*t4788)*var2[25] + (0.92388*t4552 + 0.380588*t4576 + 0.040001*t4589)*var2[26] + (0.92388*t4413 + 0.380588*t4435 + 0.040001*t4448)*var2[27];
  p_output1[2]=(0.040001*t5929 + 0.380588*t5940 + 0.92388*t5953)*var2[4] + (0.040001*t5123 + 0.380588*t5140 + 0.92388*t5156)*var2[5] + (0.040001*t4935 + 0.380588*t4954 + 0.92388*t4967)*var2[24] + (0.92388*t5699 + 0.380588*t5748 + 0.040001*t5775)*var2[25] + (0.92388*t5472 + 0.380588*t5491 + 0.040001*t5510)*var2[26] + (0.92388*t5291 + 0.380588*t5315 + 0.040001*t5344)*var2[27];
  p_output1[3]=0;
  p_output1[4]=(0.096572*t3587 + 0.918819*t3599 - 0.382684*t3617)*var2[3] + (0.096572*t1712 + 0.918819*t1828 - 0.382684*t2024)*var2[4] + (0.096572*t2369 + 0.918819*t2405 - 0.382684*t2447)*var2[5] + (0.096572*t2708 + 0.918819*t2736 - 0.382684*t2750)*var2[24] + (-0.382684*t3396 + 0.918819*t3409 + 0.096572*t3436)*var2[25] + (-0.382684*t3138 + 0.918819*t3162 + 0.096572*t3175)*var2[26] + (-0.382684*t2904 + 0.918819*t2939 + 0.096572*t2955)*var2[27];
  p_output1[5]=(0.096572*t3794 + 0.918819*t3819 - 0.382684*t3831)*var2[3] + (0.096572*t3749 + 0.918819*t3768 - 0.382684*t3780)*var2[4] + (0.096572*t4023 + 0.918819*t4045 - 0.382684*t4057)*var2[5] + (0.096572*t4238 + 0.918819*t4256 - 0.382684*t4266)*var2[24] + (-0.382684*t4743 + 0.918819*t4761 + 0.096572*t4788)*var2[25] + (-0.382684*t4552 + 0.918819*t4576 + 0.096572*t4589)*var2[26] + (-0.382684*t4413 + 0.918819*t4435 + 0.096572*t4448)*var2[27];
  p_output1[6]=(0.096572*t5929 + 0.918819*t5940 - 0.382684*t5953)*var2[4] + (0.096572*t5123 + 0.918819*t5140 - 0.382684*t5156)*var2[5] + (0.096572*t4935 + 0.918819*t4954 - 0.382684*t4967)*var2[24] + (-0.382684*t5699 + 0.918819*t5748 + 0.096572*t5775)*var2[25] + (-0.382684*t5472 + 0.918819*t5491 + 0.096572*t5510)*var2[26] + (-0.382684*t5291 + 0.918819*t5315 + 0.096572*t5344)*var2[27];
  p_output1[7]=0;
  p_output1[8]=(-0.994522*t3587 + 0.104528*t3599)*var2[3] + (-0.994522*t1712 + 0.104528*t1828)*var2[4] + (-0.994522*t2369 + 0.104528*t2405)*var2[5] + (-0.994522*t2708 + 0.104528*t2736)*var2[24] + (0.104528*t3409 - 0.994522*t3436)*var2[25] + (0.104528*t3162 - 0.994522*t3175)*var2[26] + (0.104528*t2939 - 0.994522*t2955)*var2[27];
  p_output1[9]=(-0.994522*t3794 + 0.104528*t3819)*var2[3] + (-0.994522*t3749 + 0.104528*t3768)*var2[4] + (-0.994522*t4023 + 0.104528*t4045)*var2[5] + (-0.994522*t4238 + 0.104528*t4256)*var2[24] + (0.104528*t4761 - 0.994522*t4788)*var2[25] + (0.104528*t4576 - 0.994522*t4589)*var2[26] + (0.104528*t4435 - 0.994522*t4448)*var2[27];
  p_output1[10]=(-0.994522*t5929 + 0.104528*t5940)*var2[4] + (-0.994522*t5123 + 0.104528*t5140)*var2[5] + (-0.994522*t4935 + 0.104528*t4954)*var2[24] + (0.104528*t5748 - 0.994522*t5775)*var2[25] + (0.104528*t5491 - 0.994522*t5510)*var2[26] + (0.104528*t5315 - 0.994522*t5344)*var2[27];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (-0.250125*t3587 + 0.206868*t3599 + 0.290567*t3617 + t3481*t6637 + t3497*t6663 + t3502*t6677 + t3506*t6701 + t3510*t6732 + t3524*t6763 + t3531*t6803 + t3549*t6836 + t3567*t6852 + t3581*t6882 - 1.*t2044*t6649*t713)*var2[3] + (-0.250125*t1712 + 0.206868*t1828 + 0.290567*t2024 - 1.*t317*t435*t6649 + t1024*t6701 + t1028*t6732 + t1170*t6763 + t1377*t6803 + t1433*t6836 + t1586*t6852 + t1697*t6882 + t317*t6637*t713*t716 + t317*t6663*t713*t832 + t6677*t905)*var2[4] + (-0.250125*t2369 + 0.206868*t2405 + 0.290567*t2447 + t2102*t6637 + t2074*t6663 + t2158*t6677 + t2113*t6701 + t2169*t6732 + t2161*t6763 + t2202*t6803 + t2224*t6836 + t2300*t6852 + t2350*t6882)*var2[5] + (-0.250125*t2708 + 0.206868*t2736 + 0.290567*t2750 + t2552*t6677 + t2503*t6701 + t2587*t6732 + t2557*t6763 + t2605*t6803 + t2617*t6836 + t2645*t6852 + t2699*t6882 + t2074*t6960 + t2498*t6983)*var2[24] + (0.290567*t3396 + 0.206868*t3409 - 0.250125*t3436 + t3281*t6732 + t3297*t6763 + t3264*t6803 + t3392*t6836 + t3319*t6852 + t3302*t6882 + t317*t713*t7171 + t2503*t7187 + t2803*t7203)*var2[25] + (0.290567*t3138 + 0.206868*t3162 - 0.250125*t3175 + t3126*t6836 + t3029*t6852 + t3088*t6882 + t2808*t7091 + t2833*t7117 + t2854*t7136)*var2[26] + (0.290567*t2904 + 0.206868*t2939 - 0.250125*t2955 + t2864*t7020 + t2873*t7028 + t2899*t7038)*var2[27];
  p_output1[13]=var2[1] + (-0.250125*t3794 + 0.206868*t3819 + 0.290567*t3831 + t2074*t6637 + t2498*t6663 + t2503*t6677 + t2803*t6701 + t2808*t6732 + t2833*t6763 + t2854*t6803 + t2864*t6836 + t2873*t6852 + t2899*t6882 + t317*t6649*t713)*var2[3] + (-0.250125*t3749 + 0.206868*t3768 + 0.290567*t3780 - 1.*t2044*t435*t6649 + t3645*t6677 + t3656*t6701 + t3673*t6732 + t3685*t6763 + t3701*t6803 + t3709*t6836 + t3717*t6852 + t3737*t6882 + t2044*t6637*t713*t716 + t2044*t6663*t713*t832)*var2[4] + (-0.250125*t4023 + 0.206868*t4045 + 0.290567*t4057 + t3497*t6637 + t3847*t6663 + t3887*t6677 + t3876*t6701 + t3944*t6732 + t3906*t6763 + t3971*t6803 + t3981*t6836 + t4004*t6852 + t4009*t6882)*var2[5] + (-0.250125*t4238 + 0.206868*t4256 + 0.290567*t4266 + t4110*t6677 + t4096*t6701 + t4142*t6732 + t4121*t6763 + t4148*t6803 + t4166*t6836 + t4199*t6852 + t4236*t6882 + t3847*t6960 + t4091*t6983)*var2[24] + (0.290567*t4743 + 0.206868*t4761 - 0.250125*t4788 + t4629*t6732 + t4654*t6763 + t4613*t6803 + t4728*t6836 + t4703*t6852 + t4665*t6882 + t2044*t713*t7171 + t4096*t7187 + t4285*t7203)*var2[25] + (0.290567*t4552 + 0.206868*t4576 - 0.250125*t4589 + t4535*t6836 + t4489*t6852 + t4513*t6882 + t4288*t7091 + t4308*t7117 + t4332*t7136)*var2[26] + (0.290567*t4413 + 0.206868*t4435 - 0.250125*t4448 + t4340*t7020 + t4363*t7028 + t4407*t7038)*var2[27];
  p_output1[14]=var2[2] + (-0.250125*t5929 + 0.206868*t5940 + 0.290567*t5953 + t5806*t6677 + t5818*t6701 + t5822*t6732 + t5847*t6763 + t5862*t6803 + t5878*t6836 + t5905*t6852 + t5921*t6882 - 1.*t6649*t713 - 1.*t435*t6637*t716 - 1.*t435*t6663*t832)*var2[4] + (-0.250125*t5123 + 0.206868*t5140 + 0.290567*t5156 + t4997*t6677 + t4985*t6701 + t5022*t6732 + t5003*t6763 + t5036*t6803 + t5047*t6836 + t5068*t6852 + t5112*t6882 + t6663*t713*t716 - 1.*t6637*t713*t832)*var2[5] + (-0.250125*t4935 + 0.206868*t4954 + 0.290567*t4967 + t4835*t6677 + t4825*t6701 + t4868*t6732 + t4841*t6763 + t4879*t6803 + t4892*t6836 + t4906*t6852 + t4930*t6882 + t6960*t713*t716 + t6983*t713*t832)*var2[24] + (0.290567*t5699 + 0.206868*t5748 - 0.250125*t5775 + t5578*t6732 + t5614*t6763 + t5552*t6803 + t5684*t6836 + t5648*t6852 + t5618*t6882 - 1.*t435*t7171 + t4825*t7187 + t4997*t7203)*var2[25] + (0.290567*t5472 + 0.206868*t5491 - 0.250125*t5510 + t5457*t6836 + t5396*t6852 + t5426*t6882 + t5193*t7091 + t5212*t7117 + t5232*t7136)*var2[26] + (0.290567*t5291 + 0.206868*t5315 - 0.250125*t5344 + t5237*t7020 + t5263*t7028 + t5276*t7038)*var2[27];
  p_output1[15]=0;
}



void dT_right_elbow_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
