/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:35:46 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Js_toe_pitch_joint_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t66;
  double t93;
  double t173;
  double t182;
  double t264;
  double t281;
  double t266;
  double t296;
  double t305;
  double t450;
  double t452;
  double t454;
  double t455;
  double t478;
  double t316;
  double t319;
  double t324;
  double t517;
  double t519;
  double t527;
  double t530;
  double t555;
  double t575;
  double t534;
  double t539;
  double t542;
  double t551;
  double t577;
  double t578;
  double t601;
  double t603;
  double t604;
  double t605;
  double t615;
  double t617;
  double t618;
  double t655;
  double t656;
  double t660;
  double t59;
  double t583;
  double t591;
  double t592;
  double t465;
  double t482;
  double t494;
  double t707;
  double t715;
  double t716;
  double t631;
  double t634;
  double t641;
  double t723;
  double t725;
  double t726;
  double t500;
  double t508;
  double t510;
  double t871;
  double t874;
  double t888;
  double t897;
  double t815;
  double t834;
  double t867;
  double t1142;
  double t1059;
  double t1088;
  double t1095;
  double t1201;
  double t1213;
  double t1118;
  double t1143;
  double t1146;
  double t1158;
  double t1170;
  double t1171;
  double t1173;
  double t1174;
  double t1189;
  double t1199;
  double t1215;
  double t1222;
  double t1241;
  double t1245;
  double t1262;
  double t1263;
  double t1269;
  double t1277;
  double t1291;
  double t1292;
  double t1188;
  double t1227;
  double t1278;
  double t1282;
  double t1323;
  double t1337;
  double t1343;
  double t1345;
  double t1405;
  double t1411;
  double t1486;
  double t1496;
  double t1516;
  double t1527;
  double t1356;
  double t1386;
  double t1387;
  double t1393;
  double t1547;
  double t1548;
  double t1563;
  double t1564;
  double t1533;
  double t1537;
  double t1540;
  double t1541;
  double t1575;
  double t1583;
  double t1586;
  double t1590;
  double t1443;
  double t1446;
  double t1453;
  double t1455;
  double t1470;
  double t1471;
  double t1283;
  double t1293;
  double t1298;
  double t1299;
  double t1412;
  double t1422;
  double t1423;
  double t1424;
  double t1690;
  double t1699;
  double t1701;
  double t1704;
  double t1710;
  double t1711;
  double t1718;
  double t1720;
  double t1661;
  double t1666;
  double t1669;
  double t1672;
  double t1859;
  double t1872;
  double t1879;
  double t1881;
  double t1769;
  double t1773;
  double t1783;
  double t1785;
  double t1882;
  double t1885;
  double t1858;
  double t1880;
  double t1887;
  double t1890;
  double t1900;
  double t1901;
  double t1913;
  double t1914;
  double t1917;
  double t1919;
  double t1922;
  double t1923;
  double t1933;
  double t1935;
  double t1937;
  double t1940;
  double t1942;
  double t1948;
  double t1969;
  double t1975;
  double t1896;
  double t1930;
  double t1949;
  double t1960;
  double t1995;
  double t1996;
  double t2000;
  double t2003;
  double t2032;
  double t2035;
  double t1472;
  double t1475;
  double t1482;
  double t1484;
  double t1963;
  double t1984;
  double t1985;
  double t1989;
  double t2103;
  double t2105;
  double t2115;
  double t2119;
  double t2176;
  double t2179;
  double t2190;
  double t2196;
  double t2039;
  double t2041;
  double t2055;
  double t2065;
  double t2215;
  double t2224;
  double t2232;
  double t2233;
  double t2144;
  double t2148;
  double t2153;
  double t2154;
  double t2006;
  double t2011;
  double t2013;
  double t2018;
  double t2127;
  double t2130;
  double t2069;
  double t2075;
  double t2077;
  double t2078;
  double t2319;
  double t2320;
  double t2327;
  double t2328;
  double t2348;
  double t2350;
  double t2351;
  double t2357;
  double t2444;
  double t2445;
  double t2448;
  double t2460;
  double t2379;
  double t2380;
  double t2383;
  double t2391;
  double t2537;
  double t2540;
  double t2287;
  double t2295;
  double t2301;
  double t2306;
  double t2576;
  double t2579;
  double t2438;
  double t2457;
  double t2462;
  double t2464;
  double t2467;
  double t2479;
  double t2484;
  double t2487;
  double t2488;
  double t2494;
  double t2495;
  double t2501;
  double t2502;
  double t2505;
  double t2512;
  double t2515;
  double t2546;
  double t2557;
  double t2482;
  double t2506;
  double t2564;
  double t2567;
  double t2649;
  double t2660;
  double t2623;
  double t2625;
  double t2631;
  double t2632;
  double t2132;
  double t2133;
  double t2135;
  double t2138;
  double t2728;
  double t2734;
  double t2736;
  double t2755;
  double t2603;
  double t2610;
  double t2613;
  double t2618;
  double t2804;
  double t2805;
  double t2806;
  double t2809;
  double t2762;
  double t2766;
  double t2772;
  double t2776;
  double t2696;
  double t2698;
  double t2700;
  double t2707;
  double t2817;
  double t2846;
  double t2851;
  double t2856;
  double t2570;
  double t2575;
  double t2583;
  double t2594;
  double t2664;
  double t2680;
  double t2685;
  double t2687;
  double t2790;
  double t2794;
  double t2936;
  double t2938;
  double t2940;
  double t2943;
  double t2950;
  double t2951;
  double t2954;
  double t2956;
  double t3067;
  double t2781;
  double t2796;
  double t2798;
  double t2799;
  double t3092;
  double t3095;
  double t3096;
  double t3108;
  double t3109;
  double t3120;
  double t3125;
  double t2902;
  double t2904;
  double t2912;
  double t2913;
  double t3146;
  double t3153;
  double t3080;
  double t3085;
  double t3068;
  double t3071;
  double t3010;
  double t3011;
  double t3014;
  double t3016;
  double t3169;
  double t3174;
  double t3177;
  double t3182;
  double t3188;
  double t3191;
  double t3194;
  double t3195;
  double t3203;
  double t3206;
  double t3207;
  double t3211;
  double t3143;
  double t3144;
  double t3186;
  double t3196;
  double t3215;
  double t3217;
  double t3251;
  double t3252;
  double t3254;
  double t3255;
  double t3111;
  double t3112;
  double t3129;
  double t3137;
  double t3220;
  double t3226;
  double t3232;
  double t3240;
  double t3139;
  double t3145;
  double t3155;
  double t3158;
  double t3310;
  double t3318;
  double t3319;
  double t3323;
  double t3279;
  double t3281;
  double t3290;
  double t3292;
  double t3327;
  double t3328;
  double t3330;
  double t3331;
  double t3097;
  double t3098;
  double t3163;
  double t3164;
  double t3165;
  double t3167;
  double t3267;
  double t3268;
  double t3274;
  double t3276;
  double t3408;
  double t3411;
  double t3412;
  double t3418;
  double t3421;
  double t3428;
  double t3431;
  double t3438;
  t66 = Cos(var1[3]);
  t93 = Sin(var1[3]);
  t173 = Cos(var1[4]);
  t182 = Sin(var1[4]);
  t264 = Cos(var1[5]);
  t281 = Sin(var1[5]);
  t266 = t66*t264*t182;
  t296 = t93*t281;
  t305 = t266 + t296;
  t450 = Cos(var1[6]);
  t452 = -1.*t264*t93;
  t454 = t66*t182*t281;
  t455 = t452 + t454;
  t478 = Sin(var1[6]);
  t316 = t264*t93*t182;
  t319 = -1.*t66*t281;
  t324 = t316 + t319;
  t517 = -1.*t450;
  t519 = 1. + t517;
  t527 = 0.091*t519;
  t530 = 0. + t527;
  t555 = 0.091*t478;
  t575 = 0. + t555;
  t534 = t66*t264;
  t539 = t93*t182*t281;
  t542 = t534 + t539;
  t551 = t530*t542;
  t577 = t324*t575;
  t578 = 0. + var1[1] + t551 + t577;
  t601 = -1.*var1[2];
  t603 = -1.*t173*t530*t281;
  t604 = -1.*t173*t264*t575;
  t605 = 0. + t601 + t603 + t604;
  t615 = t450*t542;
  t617 = -1.*t324*t478;
  t618 = t615 + t617;
  t655 = t450*t324;
  t656 = t542*t478;
  t660 = t655 + t656;
  t59 = -1.*var1[0];
  t583 = t173*t450*t281;
  t591 = -1.*t173*t264*t478;
  t592 = t583 + t591;
  t465 = t450*t455;
  t482 = -1.*t305*t478;
  t494 = t465 + t482;
  t707 = -1.*t530*t455;
  t715 = -1.*t305*t575;
  t716 = 0. + t59 + t707 + t715;
  t631 = t173*t264*t450;
  t634 = t173*t281*t478;
  t641 = t631 + t634;
  t723 = t173*t530*t281;
  t725 = t173*t264*t575;
  t726 = 0. + var1[2] + t723 + t725;
  t500 = t450*t305;
  t508 = t455*t478;
  t510 = t500 + t508;
  t871 = -1.*var1[1];
  t874 = -1.*t530*t542;
  t888 = -1.*t324*t575;
  t897 = 0. + t871 + t874 + t888;
  t815 = t530*t455;
  t834 = t305*t575;
  t867 = 0. + var1[0] + t815 + t834;
  t1142 = Sin(var1[7]);
  t1059 = Cos(var1[7]);
  t1088 = -1.*t1059;
  t1095 = 1. + t1088;
  t1201 = 0.366501*t1142;
  t1213 = 0. + t1201;
  t1118 = -0.04500040093286238*t1095;
  t1143 = -0.930418*t1142;
  t1146 = 0. + t1143;
  t1158 = 0.07877663122399998*t1146;
  t1170 = -0.366501*t1142;
  t1171 = 0. + t1170;
  t1173 = 0.031030906668*t1171;
  t1174 = 0. + t1118 + t1158 + t1173;
  t1189 = -3.2909349868922137e-7*var1[7];
  t1199 = 0.03103092645718495*t1095;
  t1215 = -0.045000372235*t1213;
  t1222 = t1189 + t1199 + t1215;
  t1241 = 1.296332362046933e-7*var1[7];
  t1245 = 0.07877668146182712*t1095;
  t1262 = 0.930418*t1142;
  t1263 = 0. + t1262;
  t1269 = -0.045000372235*t1263;
  t1277 = t1241 + t1245 + t1269;
  t1291 = -0.134322983001*t1095;
  t1292 = 1. + t1291;
  t1188 = t182*t1174;
  t1227 = -1.*t641*t1222;
  t1278 = -1.*t592*t1277;
  t1282 = 0. + t601 + t603 + t604 + t1188 + t1227 + t1278;
  t1323 = t173*t93*t1174;
  t1337 = t660*t1222;
  t1343 = t618*t1277;
  t1345 = 0. + var1[1] + t551 + t577 + t1323 + t1337 + t1343;
  t1405 = -0.8656776547239999*t1095;
  t1411 = 1. + t1405;
  t1486 = -0.340999127418*t1095*t494;
  t1496 = t1292*t510;
  t1516 = t66*t173*t1213;
  t1527 = t1486 + t1496 + t1516;
  t1356 = -0.340999127418*t1095*t592;
  t1386 = t1292*t641;
  t1387 = -1.*t182*t1213;
  t1393 = t1356 + t1386 + t1387;
  t1547 = -1.*t182*t1174;
  t1548 = t641*t1222;
  t1563 = t592*t1277;
  t1564 = 0. + var1[2] + t723 + t725 + t1547 + t1548 + t1563;
  t1533 = t1411*t494;
  t1537 = -0.340999127418*t1095*t510;
  t1540 = t66*t173*t1263;
  t1541 = t1533 + t1537 + t1540;
  t1575 = -1.*t66*t173*t1174;
  t1583 = -1.*t510*t1222;
  t1586 = -1.*t494*t1277;
  t1590 = 0. + t59 + t707 + t715 + t1575 + t1583 + t1586;
  t1443 = t1411*t592;
  t1446 = -0.340999127418*t1095*t641;
  t1453 = -1.*t182*t1263;
  t1455 = t1443 + t1446 + t1453;
  t1470 = -1.000000637725*t1095;
  t1471 = 1. + t1470;
  t1283 = -0.340999127418*t1095*t618;
  t1293 = t1292*t660;
  t1298 = t173*t93*t1213;
  t1299 = t1283 + t1293 + t1298;
  t1412 = t1411*t618;
  t1422 = -0.340999127418*t1095*t660;
  t1423 = t173*t93*t1263;
  t1424 = t1412 + t1422 + t1423;
  t1690 = -1.*t173*t93*t1174;
  t1699 = -1.*t660*t1222;
  t1701 = -1.*t618*t1277;
  t1704 = 0. + t871 + t874 + t888 + t1690 + t1699 + t1701;
  t1710 = t66*t173*t1174;
  t1711 = t510*t1222;
  t1718 = t494*t1277;
  t1720 = 0. + var1[0] + t815 + t834 + t1710 + t1711 + t1718;
  t1661 = t173*t1471*t93;
  t1666 = t618*t1146;
  t1669 = t660*t1171;
  t1672 = t1661 + t1666 + t1669;
  t1859 = Cos(var1[8]);
  t1872 = -1.*t1859;
  t1879 = 1. + t1872;
  t1881 = Sin(var1[8]);
  t1769 = -1.*t1471*t182;
  t1773 = t592*t1146;
  t1783 = t641*t1171;
  t1785 = t1769 + t1773 + t1783;
  t1882 = -0.366501*t1881;
  t1885 = 0. + t1882;
  t1858 = 3.2909349868922137e-7*var1[8];
  t1880 = 0.055653945343889656*t1879;
  t1887 = -0.045000372235*t1885;
  t1890 = t1858 + t1880 + t1887;
  t1900 = -0.04500040093286238*t1879;
  t1901 = -0.930418*t1881;
  t1913 = 0. + t1901;
  t1914 = -0.141285834136*t1913;
  t1917 = 0.366501*t1881;
  t1919 = 0. + t1917;
  t1922 = 0.055653909852*t1919;
  t1923 = 0. + t1900 + t1914 + t1922;
  t1933 = 1.296332362046933e-7*var1[8];
  t1935 = -0.14128592423750855*t1879;
  t1937 = 0.930418*t1881;
  t1940 = 0. + t1937;
  t1942 = -0.045000372235*t1940;
  t1948 = t1933 + t1935 + t1942;
  t1969 = -0.134322983001*t1879;
  t1975 = 1. + t1969;
  t1896 = t1424*t1890;
  t1930 = t1672*t1923;
  t1949 = t1299*t1948;
  t1960 = 0. + var1[1] + t551 + t577 + t1323 + t1337 + t1343 + t1896 + t1930 + t1949;
  t1995 = -1.*t1455*t1890;
  t1996 = -1.*t1785*t1923;
  t2000 = -1.*t1393*t1948;
  t2003 = 0. + t601 + t603 + t604 + t1188 + t1227 + t1278 + t1995 + t1996 + t2000;
  t2032 = -0.8656776547239999*t1879;
  t2035 = 1. + t2032;
  t1472 = t66*t173*t1471;
  t1475 = t494*t1146;
  t1482 = t510*t1171;
  t1484 = t1472 + t1475 + t1482;
  t1963 = 0.340999127418*t1879*t1393;
  t1984 = t1975*t1455;
  t1985 = t1785*t1885;
  t1989 = t1963 + t1984 + t1985;
  t2103 = 0.340999127418*t1879*t1527;
  t2105 = t1975*t1541;
  t2115 = t1484*t1885;
  t2119 = t2103 + t2105 + t2115;
  t2176 = -1.*t1541*t1890;
  t2179 = -1.*t1484*t1923;
  t2190 = -1.*t1527*t1948;
  t2196 = 0. + t59 + t707 + t715 + t1575 + t1583 + t1586 + t2176 + t2179 + t2190;
  t2039 = t2035*t1393;
  t2041 = 0.340999127418*t1879*t1455;
  t2055 = t1785*t1940;
  t2065 = t2039 + t2041 + t2055;
  t2215 = t1455*t1890;
  t2224 = t1785*t1923;
  t2232 = t1393*t1948;
  t2233 = 0. + var1[2] + t723 + t725 + t1547 + t1548 + t1563 + t2215 + t2224 + t2232;
  t2144 = t2035*t1527;
  t2148 = 0.340999127418*t1879*t1541;
  t2153 = t1484*t1940;
  t2154 = t2144 + t2148 + t2153;
  t2006 = 0.340999127418*t1879*t1299;
  t2011 = t1975*t1424;
  t2013 = t1672*t1885;
  t2018 = t2006 + t2011 + t2013;
  t2127 = -1.000000637725*t1879;
  t2130 = 1. + t2127;
  t2069 = t2035*t1299;
  t2075 = 0.340999127418*t1879*t1424;
  t2077 = t1672*t1940;
  t2078 = t2069 + t2075 + t2077;
  t2319 = -1.*t1424*t1890;
  t2320 = -1.*t1672*t1923;
  t2327 = -1.*t1299*t1948;
  t2328 = 0. + t871 + t874 + t888 + t1690 + t1699 + t1701 + t2319 + t2320 + t2327;
  t2348 = t1541*t1890;
  t2350 = t1484*t1923;
  t2351 = t1527*t1948;
  t2357 = 0. + var1[0] + t815 + t834 + t1710 + t1711 + t1718 + t2348 + t2350 + t2351;
  t2444 = Cos(var1[9]);
  t2445 = -1.*t2444;
  t2448 = 1. + t2445;
  t2460 = Sin(var1[9]);
  t2379 = t2130*t1785;
  t2380 = t1393*t1913;
  t2383 = t1455*t1919;
  t2391 = t2379 + t2380 + t2383;
  t2537 = -0.930418*t2460;
  t2540 = 0. + t2537;
  t2287 = t2130*t1672;
  t2295 = t1299*t1913;
  t2301 = t1424*t1919;
  t2306 = t2287 + t2295 + t2301;
  t2576 = -0.8656776547239999*t2448;
  t2579 = 1. + t2576;
  t2438 = -1.5981976069815686e-7*var1[9];
  t2457 = 0.08675267452931407*t2448;
  t2462 = 0.366501*t2460;
  t2464 = 0. + t2462;
  t2467 = 0.039853013046*t2464;
  t2479 = t2438 + t2457 + t2467;
  t2484 = 0.039853038461262744*t2448;
  t2487 = -0.366501*t2460;
  t2488 = 0. + t2487;
  t2494 = 0.086752619205*t2488;
  t2495 = 0.930418*t2460;
  t2501 = 0. + t2495;
  t2502 = -0.22023459268999998*t2501;
  t2505 = 0. + t2484 + t2494 + t2502;
  t2512 = -6.295460977284962e-8*var1[9];
  t2515 = -0.22023473313910558*t2448;
  t2546 = 0.039853013046*t2540;
  t2557 = t2512 + t2515 + t2546;
  t2482 = -1.*t2479*t1989;
  t2506 = -1.*t2505*t2391;
  t2564 = -1.*t2557*t2065;
  t2567 = 0. + t601 + t603 + t604 + t1188 + t1227 + t1278 + t1995 + t2482 + t1996 + t2506 + t2000 + t2564;
  t2649 = -0.134322983001*t2448;
  t2660 = 1. + t2649;
  t2623 = t2479*t2018;
  t2625 = t2505*t2306;
  t2631 = t2557*t2078;
  t2632 = 0. + var1[1] + t551 + t577 + t1323 + t1337 + t1343 + t1896 + t2623 + t1930 + t2625 + t1949 + t2631;
  t2132 = t2130*t1484;
  t2133 = t1527*t1913;
  t2135 = t1541*t1919;
  t2138 = t2132 + t2133 + t2135;
  t2728 = 0.340999127418*t2448*t2119;
  t2734 = t2540*t2138;
  t2736 = t2579*t2154;
  t2755 = t2728 + t2734 + t2736;
  t2603 = 0.340999127418*t2448*t1989;
  t2610 = t2540*t2391;
  t2613 = t2579*t2065;
  t2618 = t2603 + t2610 + t2613;
  t2804 = t2479*t1989;
  t2805 = t2505*t2391;
  t2806 = t2557*t2065;
  t2809 = 0. + var1[2] + t723 + t725 + t1547 + t1548 + t1563 + t2215 + t2804 + t2224 + t2805 + t2232 + t2806;
  t2762 = t2660*t2119;
  t2766 = t2464*t2138;
  t2772 = 0.340999127418*t2448*t2154;
  t2776 = t2762 + t2766 + t2772;
  t2696 = t2660*t1989;
  t2698 = t2464*t2391;
  t2700 = 0.340999127418*t2448*t2065;
  t2707 = t2696 + t2698 + t2700;
  t2817 = -1.*t2479*t2119;
  t2846 = -1.*t2505*t2138;
  t2851 = -1.*t2557*t2154;
  t2856 = 0. + t59 + t707 + t715 + t1575 + t1583 + t1586 + t2176 + t2817 + t2179 + t2846 + t2190 + t2851;
  t2570 = 0.340999127418*t2448*t2018;
  t2575 = t2540*t2306;
  t2583 = t2579*t2078;
  t2594 = t2570 + t2575 + t2583;
  t2664 = t2660*t2018;
  t2680 = t2464*t2306;
  t2685 = 0.340999127418*t2448*t2078;
  t2687 = t2664 + t2680 + t2685;
  t2790 = -1.000000637725*t2448;
  t2794 = 1. + t2790;
  t2936 = t2479*t2119;
  t2938 = t2505*t2138;
  t2940 = t2557*t2154;
  t2943 = 0. + var1[0] + t815 + t834 + t1710 + t1711 + t1718 + t2348 + t2936 + t2350 + t2938 + t2351 + t2940;
  t2950 = -1.*t2479*t2018;
  t2951 = -1.*t2505*t2306;
  t2954 = -1.*t2557*t2078;
  t2956 = 0. + t871 + t874 + t888 + t1690 + t1699 + t1701 + t2319 + t2950 + t2320 + t2951 + t2327 + t2954;
  t3067 = Sin(var1[10]);
  t2781 = t2488*t2119;
  t2796 = t2794*t2138;
  t2798 = t2501*t2154;
  t2799 = t2781 + t2796 + t2798;
  t3092 = Cos(var1[10]);
  t3095 = -1.*t3092;
  t3096 = 1. + t3095;
  t3108 = -0.8656776547239999*t3096;
  t3109 = 1. + t3108;
  t3120 = -0.930418*t3067;
  t3125 = 0. + t3120;
  t2902 = t2488*t2018;
  t2904 = t2794*t2306;
  t2912 = t2501*t2078;
  t2913 = t2902 + t2904 + t2912;
  t3146 = 0.366501*t3067;
  t3153 = 0. + t3146;
  t3080 = -0.366501*t3067;
  t3085 = 0. + t3080;
  t3068 = 0.930418*t3067;
  t3071 = 0. + t3068;
  t3010 = t2488*t1989;
  t3011 = t2794*t2391;
  t3014 = t2501*t2065;
  t3016 = t3010 + t3011 + t3014;
  t3169 = 2.281945176511838e-8*var1[10];
  t3174 = -0.5905366811997648*t3096;
  t3177 = -0.262809976934*t3125;
  t3182 = t3169 + t3174 + t3177;
  t3188 = 5.7930615939377813e-8*var1[10];
  t3191 = 0.23261833304643187*t3096;
  t3194 = -0.262809976934*t3153;
  t3195 = t3188 + t3191 + t3194;
  t3203 = -0.26281014453449253*t3096;
  t3206 = 0.23261818470000004*t3085;
  t3207 = -0.5905363046000001*t3071;
  t3211 = 0. + t3203 + t3206 + t3207;
  t3143 = -0.134322983001*t3096;
  t3144 = 1. + t3143;
  t3186 = -1.*t3182*t2618;
  t3196 = -1.*t3195*t2707;
  t3215 = -1.*t3211*t3016;
  t3217 = 0. + t601 + t603 + t604 + t1188 + t1227 + t1278 + t3186 + t3196 + t3215 + t1995 + t2482 + t1996 + t2506 + t2000 + t2564;
  t3251 = t3182*t2594;
  t3252 = t3195*t2687;
  t3254 = t3211*t2913;
  t3255 = 0. + var1[1] + t551 + t577 + t1323 + t1337 + t1343 + t3251 + t3252 + t3254 + t1896 + t2623 + t1930 + t2625 + t1949 + t2631;
  t3111 = t3109*t2755;
  t3112 = 0.340999127418*t3096*t2776;
  t3129 = t3125*t2799;
  t3137 = t3111 + t3112 + t3129;
  t3220 = t3109*t2618;
  t3226 = 0.340999127418*t3096*t2707;
  t3232 = t3125*t3016;
  t3240 = t3220 + t3226 + t3232;
  t3139 = 0.340999127418*t3096*t2755;
  t3145 = t3144*t2776;
  t3155 = t3153*t2799;
  t3158 = t3139 + t3145 + t3155;
  t3310 = t3182*t2618;
  t3318 = t3195*t2707;
  t3319 = t3211*t3016;
  t3323 = 0. + var1[2] + t723 + t725 + t1547 + t1548 + t1563 + t3310 + t3318 + t3319 + t2215 + t2804 + t2224 + t2805 + t2232 + t2806;
  t3279 = 0.340999127418*t3096*t2618;
  t3281 = t3144*t2707;
  t3290 = t3153*t3016;
  t3292 = t3279 + t3281 + t3290;
  t3327 = -1.*t3182*t2755;
  t3328 = -1.*t3195*t2776;
  t3330 = -1.*t3211*t2799;
  t3331 = 0. + t59 + t707 + t715 + t1575 + t1583 + t1586 + t3327 + t3328 + t3330 + t2176 + t2817 + t2179 + t2846 + t2190 + t2851;
  t3097 = -1.000000637725*t3096;
  t3098 = 1. + t3097;
  t3163 = t3109*t2594;
  t3164 = 0.340999127418*t3096*t2687;
  t3165 = t3125*t2913;
  t3167 = t3163 + t3164 + t3165;
  t3267 = 0.340999127418*t3096*t2594;
  t3268 = t3144*t2687;
  t3274 = t3153*t2913;
  t3276 = t3267 + t3268 + t3274;
  t3408 = t3182*t2755;
  t3411 = t3195*t2776;
  t3412 = t3211*t2799;
  t3418 = 0. + var1[0] + t815 + t834 + t1710 + t1711 + t1718 + t3408 + t3411 + t3412 + t2348 + t2936 + t2350 + t2938 + t2351 + t2940;
  t3421 = -1.*t3182*t2594;
  t3428 = -1.*t3195*t2687;
  t3431 = -1.*t3211*t2913;
  t3438 = 0. + t871 + t874 + t888 + t1690 + t1699 + t1701 + t3421 + t3428 + t3431 + t2319 + t2950 + t2320 + t2951 + t2327 + t2954;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=1.;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=1.;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=var1[1];
  p_output1[19]=t59;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=1.;
  p_output1[24]=-1.*t66*var1[2];
  p_output1[25]=-1.*t93*var1[2];
  p_output1[26]=t66*var1[0] + t93*var1[1];
  p_output1[27]=-1.*t93;
  p_output1[28]=t66;
  p_output1[29]=0;
  p_output1[30]=-1.*t182*var1[1] - 1.*t173*t93*var1[2];
  p_output1[31]=t182*var1[0] + t173*t66*var1[2];
  p_output1[32]=t173*t93*var1[0] - 1.*t173*t66*var1[1];
  p_output1[33]=t173*t66;
  p_output1[34]=t173*t93;
  p_output1[35]=-1.*t182;
  p_output1[36]=0.091*t305 + t182*var1[1] + t173*t93*var1[2];
  p_output1[37]=0.091*t324 - 1.*t182*var1[0] - 1.*t173*t66*var1[2];
  p_output1[38]=0.091*t173*t264 - 1.*t173*t93*var1[0] + t173*t66*var1[1];
  p_output1[39]=0. - 1.*t173*t66;
  p_output1[40]=0. - 1.*t173*t93;
  p_output1[41]=0. + t182;
  p_output1[42]=-0.041869*t494 - 0.016493*t510 + 0.366501*(t578*t592 + t605*t618) - 0.084668*t173*t66 - 0.930418*(t578*t641 + t605*t660);
  p_output1[43]=-0.041869*t618 - 0.016493*t660 + 0.366501*(t592*t716 + t494*t726) - 0.930418*(t641*t716 + t510*t726) - 0.084668*t173*t93;
  p_output1[44]=0.084668*t182 - 0.041869*t592 - 0.016493*t641 + 0.366501*(t618*t867 + t494*t897) - 0.930418*(t660*t867 + t510*t897);
  p_output1[45]=0. + 0.366501*t494 - 0.930418*t510;
  p_output1[46]=0. + 0.366501*t618 - 0.930418*t660;
  p_output1[47]=0. + 0.366501*t592 - 0.930418*t641;
  p_output1[48]=0.366501*(t1282*t1299 + t1345*t1393) + 0.930418*(t1282*t1424 + t1345*t1455) + 0.151852*t1484 - 0.041869*t1527 + 0.016493*t1541;
  p_output1[49]=-0.041869*t1299 + 0.016493*t1424 + 0.366501*(t1527*t1564 + t1393*t1590) + 0.930418*(t1541*t1564 + t1455*t1590) + 0.151852*t1672;
  p_output1[50]=-0.041869*t1393 + 0.016493*t1455 + 0.366501*(t1527*t1704 + t1299*t1720) + 0.930418*(t1541*t1704 + t1424*t1720) + 0.151852*t1785;
  p_output1[51]=0. + 0.366501*t1527 + 0.930418*t1541;
  p_output1[52]=0. + 0.366501*t1299 + 0.930418*t1424;
  p_output1[53]=0. + 0.366501*t1393 + 0.930418*t1455;
  p_output1[54]=-0.930418*(t1960*t1989 + t2003*t2018) - 0.366501*(t1960*t2065 + t2003*t2078) + 0.014606*t2119 - 0.236705*t2138 - 0.03708*t2154;
  p_output1[55]=0.014606*t2018 - 0.03708*t2078 - 0.930418*(t1989*t2196 + t2119*t2233) - 0.366501*(t2065*t2196 + t2154*t2233) - 0.236705*t2306;
  p_output1[56]=0.014606*t1989 - 0.03708*t2065 - 0.930418*(t2119*t2328 + t2018*t2357) - 0.366501*(t2154*t2328 + t2078*t2357) - 0.236705*t2391;
  p_output1[57]=0. - 0.930418*t2119 - 0.366501*t2154;
  p_output1[58]=0. - 0.930418*t2018 - 0.366501*t2078;
  p_output1[59]=0. - 0.930418*t1989 - 0.366501*t2065;
  p_output1[60]=-0.366501*(t2567*t2594 + t2618*t2632) - 0.930418*(t2567*t2687 + t2632*t2707) + 0.244523*t2755 - 0.09632*t2776 - 0.6347*t2799;
  p_output1[61]=0.244523*t2594 - 0.09632*t2687 - 0.366501*(t2755*t2809 + t2618*t2856) - 0.930418*(t2776*t2809 + t2707*t2856) - 0.6347*t2913;
  p_output1[62]=0.244523*t2618 - 0.09632*t2707 - 0.366501*(t2594*t2943 + t2755*t2956) - 0.930418*(t2687*t2943 + t2776*t2956) - 0.6347*t3016;
  p_output1[63]=0. - 0.366501*t2755 - 0.930418*t2776;
  p_output1[64]=0. - 0.366501*t2594 - 0.930418*t2687;
  p_output1[65]=0. - 0.366501*t2618 - 0.930418*t2707;
  p_output1[66]=-0.884829*(t2755*t3071 + t2776*t3085 + t2799*t3098) - 0.057683*t3137 + 0.022722*t3158 - 0.366501*(t3167*t3217 + t3240*t3255) - 0.930418*(t3217*t3276 + t3255*t3292);
  p_output1[67]=-0.884829*(t2594*t3071 + t2687*t3085 + t2913*t3098) - 0.057683*t3167 + 0.022722*t3276 - 0.366501*(t3137*t3323 + t3240*t3331) - 0.930418*(t3158*t3323 + t3292*t3331);
  p_output1[68]=-0.884829*(t2618*t3071 + t2707*t3085 + t3016*t3098) - 0.057683*t3240 + 0.022722*t3292 - 0.366501*(t3167*t3418 + t3137*t3438) - 0.930418*(t3276*t3418 + t3158*t3438);
  p_output1[69]=0. - 0.366501*t3137 - 0.930418*t3158;
  p_output1[70]=0. - 0.366501*t3167 - 0.930418*t3276;
  p_output1[71]=0. - 0.366501*t3240 - 0.930418*t3292;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void Js_toe_pitch_joint_left_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
