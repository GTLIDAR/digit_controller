/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:10:10 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Js_right_knee_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t34;
  double t61;
  double t111;
  double t151;
  double t269;
  double t288;
  double t278;
  double t310;
  double t332;
  double t515;
  double t494;
  double t521;
  double t537;
  double t549;
  double t347;
  double t348;
  double t355;
  double t670;
  double t671;
  double t707;
  double t710;
  double t725;
  double t727;
  double t728;
  double t732;
  double t734;
  double t684;
  double t735;
  double t743;
  double t756;
  double t789;
  double t821;
  double t835;
  double t841;
  double t844;
  double t846;
  double t900;
  double t909;
  double t914;
  double t647;
  double t662;
  double t664;
  double t29;
  double t503;
  double t555;
  double t588;
  double t872;
  double t878;
  double t879;
  double t976;
  double t982;
  double t1000;
  double t1008;
  double t1010;
  double t1027;
  double t613;
  double t624;
  double t634;
  double t1104;
  double t1127;
  double t1146;
  double t1170;
  double t1194;
  double t1209;
  double t1219;
  double t1377;
  double t1398;
  double t1411;
  double t1362;
  double t1558;
  double t1562;
  double t1568;
  double t1572;
  double t1469;
  double t1473;
  double t1365;
  double t1366;
  double t1417;
  double t1433;
  double t1580;
  double t1583;
  double t1591;
  double t1592;
  double t1612;
  double t1619;
  double t1622;
  double t1623;
  double t1658;
  double t1662;
  double t1664;
  double t1669;
  double t1596;
  double t1650;
  double t1672;
  double t1675;
  double t1480;
  double t1483;
  double t1719;
  double t1720;
  double t1729;
  double t1748;
  double t1685;
  double t1697;
  double t1698;
  double t1699;
  double t1767;
  double t1771;
  double t1774;
  double t1776;
  double t1522;
  double t1539;
  double t1373;
  double t1414;
  double t1442;
  double t1445;
  double t1708;
  double t1710;
  double t1714;
  double t1717;
  double t1863;
  double t1879;
  double t1915;
  double t1916;
  double t1474;
  double t1491;
  double t1497;
  double t1505;
  double t1784;
  double t1788;
  double t1790;
  double t1802;
  double t1925;
  double t1928;
  double t1930;
  double t1931;
  double t2010;
  double t2012;
  double t2017;
  double t2031;
  double t2045;
  double t2048;
  double t2071;
  double t2076;
  double t2172;
  double t1541;
  double t1566;
  double t1575;
  double t1577;
  double t2260;
  double t2269;
  double t2298;
  double t2325;
  double t2335;
  double t2377;
  double t2380;
  double t1987;
  double t1992;
  double t2000;
  double t2002;
  double t2427;
  double t2429;
  double t2207;
  double t2244;
  double t2173;
  double t2183;
  double t1840;
  double t1843;
  double t1854;
  double t1859;
  double t2476;
  double t2478;
  double t2485;
  double t2495;
  double t2502;
  double t2518;
  double t2525;
  double t2527;
  double t2538;
  double t2551;
  double t2553;
  double t2555;
  double t2421;
  double t2423;
  double t2498;
  double t2532;
  double t2557;
  double t2559;
  double t2565;
  double t2566;
  double t2571;
  double t2573;
  double t2301;
  double t2309;
  double t2576;
  double t2577;
  double t2578;
  double t2583;
  double t2618;
  double t2622;
  double t2662;
  double t2663;
  double t2444;
  double t2446;
  double t2457;
  double t2469;
  double t2349;
  double t2350;
  double t2383;
  double t2391;
  double t2604;
  double t2605;
  double t2610;
  double t2613;
  double t2753;
  double t2774;
  double t2776;
  double t2783;
  double t2790;
  double t2795;
  double t2820;
  double t2824;
  double t2404;
  double t2425;
  double t2433;
  double t2435;
  double t2899;
  double t2900;
  double t2901;
  double t2903;
  double t2912;
  double t2917;
  double t2938;
  double t2942;
  t34 = Cos(var1[3]);
  t61 = Sin(var1[3]);
  t111 = Cos(var1[4]);
  t151 = Sin(var1[4]);
  t269 = Cos(var1[5]);
  t288 = Sin(var1[5]);
  t278 = t34*t269*t151;
  t310 = t61*t288;
  t332 = t278 + t310;
  t515 = Cos(var1[17]);
  t494 = Sin(var1[17]);
  t521 = -1.*t269*t61;
  t537 = t34*t151*t288;
  t549 = t521 + t537;
  t347 = t269*t61*t151;
  t348 = -1.*t34*t288;
  t355 = t347 + t348;
  t670 = -0.091*t494;
  t671 = 0. + t670;
  t707 = -1.*t515;
  t710 = 1. + t707;
  t725 = -0.091*t710;
  t727 = 0. + t725;
  t728 = t34*t269;
  t732 = t61*t151*t288;
  t734 = t728 + t732;
  t684 = t671*t355;
  t735 = t727*t734;
  t743 = 0. + var1[1] + t684 + t735;
  t756 = -1.*var1[2];
  t789 = -1.*t111*t269*t671;
  t821 = -1.*t727*t111*t288;
  t835 = 0. + t756 + t789 + t821;
  t841 = -1.*t494*t355;
  t844 = t515*t734;
  t846 = t841 + t844;
  t900 = t515*t355;
  t909 = t494*t734;
  t914 = t900 + t909;
  t647 = -1.*t111*t269*t494;
  t662 = t515*t111*t288;
  t664 = t647 + t662;
  t29 = -1.*var1[0];
  t503 = -1.*t494*t332;
  t555 = t515*t549;
  t588 = t503 + t555;
  t872 = t515*t111*t269;
  t878 = t111*t494*t288;
  t879 = t872 + t878;
  t976 = -1.*t671*t332;
  t982 = -1.*t727*t549;
  t1000 = 0. + t29 + t976 + t982;
  t1008 = t111*t269*t671;
  t1010 = t727*t111*t288;
  t1027 = 0. + var1[2] + t1008 + t1010;
  t613 = t515*t332;
  t624 = t494*t549;
  t634 = t613 + t624;
  t1104 = -1.*var1[1];
  t1127 = -1.*t671*t355;
  t1146 = -1.*t727*t734;
  t1170 = 0. + t1104 + t1127 + t1146;
  t1194 = t671*t332;
  t1209 = t727*t549;
  t1219 = 0. + var1[0] + t1194 + t1209;
  t1377 = Cos(var1[18]);
  t1398 = -1.*t1377;
  t1411 = 1. + t1398;
  t1362 = Sin(var1[18]);
  t1558 = -0.930418*t1362;
  t1562 = 0. + t1558;
  t1568 = 0.366501*t1362;
  t1572 = 0. + t1568;
  t1469 = 0.930418*t1362;
  t1473 = 0. + t1469;
  t1365 = -0.366501*t1362;
  t1366 = 0. + t1365;
  t1417 = -0.134322983001*t1411;
  t1433 = 1. + t1417;
  t1580 = -0.04500040093286238*t1411;
  t1583 = -0.07877663122399998*t1562;
  t1591 = 0.031030906668*t1572;
  t1592 = 0. + t1580 + t1583 + t1591;
  t1612 = 1.296332362046933e-7*var1[18];
  t1619 = -0.07877668146182712*t1411;
  t1622 = -0.045000372235*t1473;
  t1623 = t1612 + t1619 + t1622;
  t1658 = 3.2909349868922137e-7*var1[18];
  t1662 = 0.03103092645718495*t1411;
  t1664 = -0.045000372235*t1366;
  t1669 = t1658 + t1662 + t1664;
  t1596 = t1592*t151;
  t1650 = -1.*t1623*t664;
  t1672 = -1.*t1669*t879;
  t1675 = 0. + t756 + t789 + t1596 + t821 + t1650 + t1672;
  t1480 = -0.8656776547239999*t1411;
  t1483 = 1. + t1480;
  t1719 = t111*t1592*t61;
  t1720 = t1623*t846;
  t1729 = t1669*t914;
  t1748 = 0. + var1[1] + t1719 + t684 + t735 + t1720 + t1729;
  t1685 = t111*t1366*t61;
  t1697 = 0.340999127418*t1411*t846;
  t1698 = t1433*t914;
  t1699 = t1685 + t1697 + t1698;
  t1767 = t111*t1473*t61;
  t1771 = t1483*t846;
  t1774 = 0.340999127418*t1411*t914;
  t1776 = t1767 + t1771 + t1774;
  t1522 = -1.000000637725*t1411;
  t1539 = 1. + t1522;
  t1373 = t34*t111*t1366;
  t1414 = 0.340999127418*t1411*t588;
  t1442 = t1433*t634;
  t1445 = t1373 + t1414 + t1442;
  t1708 = -1.*t1366*t151;
  t1710 = 0.340999127418*t1411*t664;
  t1714 = t1433*t879;
  t1717 = t1708 + t1710 + t1714;
  t1863 = -1.*t1592*t151;
  t1879 = t1623*t664;
  t1915 = t1669*t879;
  t1916 = 0. + var1[2] + t1008 + t1863 + t1010 + t1879 + t1915;
  t1474 = t34*t111*t1473;
  t1491 = t1483*t588;
  t1497 = 0.340999127418*t1411*t634;
  t1505 = t1474 + t1491 + t1497;
  t1784 = -1.*t1473*t151;
  t1788 = t1483*t664;
  t1790 = 0.340999127418*t1411*t879;
  t1802 = t1784 + t1788 + t1790;
  t1925 = -1.*t34*t111*t1592;
  t1928 = -1.*t1623*t588;
  t1930 = -1.*t1669*t634;
  t1931 = 0. + t29 + t1925 + t976 + t982 + t1928 + t1930;
  t2010 = t34*t111*t1592;
  t2012 = t1623*t588;
  t2017 = t1669*t634;
  t2031 = 0. + var1[0] + t2010 + t1194 + t1209 + t2012 + t2017;
  t2045 = -1.*t111*t1592*t61;
  t2048 = -1.*t1623*t846;
  t2071 = -1.*t1669*t914;
  t2076 = 0. + t1104 + t2045 + t1127 + t1146 + t2048 + t2071;
  t2172 = Sin(var1[19]);
  t1541 = t1539*t34*t111;
  t1566 = t1562*t588;
  t1575 = t1572*t634;
  t1577 = t1541 + t1566 + t1575;
  t2260 = Cos(var1[19]);
  t2269 = -1.*t2260;
  t2298 = 1. + t2269;
  t2325 = -0.8656776547239999*t2298;
  t2335 = 1. + t2325;
  t2377 = -0.930418*t2172;
  t2380 = 0. + t2377;
  t1987 = -1.*t1539*t151;
  t1992 = t1562*t664;
  t2000 = t1572*t879;
  t2002 = t1987 + t1992 + t2000;
  t2427 = -0.366501*t2172;
  t2429 = 0. + t2427;
  t2207 = 0.366501*t2172;
  t2244 = 0. + t2207;
  t2173 = 0.930418*t2172;
  t2183 = 0. + t2173;
  t1840 = t1539*t111*t61;
  t1843 = t1562*t846;
  t1854 = t1572*t914;
  t1859 = t1840 + t1843 + t1854;
  t2476 = -1.296332362046933e-7*var1[19];
  t2478 = -0.14128592423750855*t2298;
  t2485 = -0.045000372235*t2380;
  t2495 = t2476 + t2478 + t2485;
  t2502 = 3.2909349868922137e-7*var1[19];
  t2518 = -0.055653945343889656*t2298;
  t2525 = -0.045000372235*t2429;
  t2527 = t2502 + t2518 + t2525;
  t2538 = -0.04500040093286238*t2298;
  t2551 = -0.055653909852*t2244;
  t2553 = -0.141285834136*t2183;
  t2555 = 0. + t2538 + t2551 + t2553;
  t2421 = -0.134322983001*t2298;
  t2423 = 1. + t2421;
  t2498 = t2495*t1699;
  t2532 = t2527*t1776;
  t2557 = t2555*t1859;
  t2559 = 0. + var1[1] + t1719 + t684 + t735 + t1720 + t1729 + t2498 + t2532 + t2557;
  t2565 = -1.*t2495*t1717;
  t2566 = -1.*t2527*t1802;
  t2571 = -1.*t2555*t2002;
  t2573 = 0. + t756 + t789 + t1596 + t821 + t1650 + t1672 + t2565 + t2566 + t2571;
  t2301 = -1.000000637725*t2298;
  t2309 = 1. + t2301;
  t2576 = t2335*t1699;
  t2577 = -0.340999127418*t2298*t1776;
  t2578 = t2380*t1859;
  t2583 = t2576 + t2577 + t2578;
  t2618 = -0.340999127418*t2298*t1699;
  t2622 = t2423*t1776;
  t2662 = t2429*t1859;
  t2663 = t2618 + t2622 + t2662;
  t2444 = t2335*t1717;
  t2446 = -0.340999127418*t2298*t1802;
  t2457 = t2380*t2002;
  t2469 = t2444 + t2446 + t2457;
  t2349 = t2335*t1445;
  t2350 = -0.340999127418*t2298*t1505;
  t2383 = t2380*t1577;
  t2391 = t2349 + t2350 + t2383;
  t2604 = -0.340999127418*t2298*t1717;
  t2605 = t2423*t1802;
  t2610 = t2429*t2002;
  t2613 = t2604 + t2605 + t2610;
  t2753 = -1.*t2495*t1445;
  t2774 = -1.*t2527*t1505;
  t2776 = -1.*t2555*t1577;
  t2783 = 0. + t29 + t1925 + t976 + t982 + t1928 + t1930 + t2753 + t2774 + t2776;
  t2790 = t2495*t1717;
  t2795 = t2527*t1802;
  t2820 = t2555*t2002;
  t2824 = 0. + var1[2] + t1008 + t1863 + t1010 + t1879 + t1915 + t2790 + t2795 + t2820;
  t2404 = -0.340999127418*t2298*t1445;
  t2425 = t2423*t1505;
  t2433 = t2429*t1577;
  t2435 = t2404 + t2425 + t2433;
  t2899 = -1.*t2495*t1699;
  t2900 = -1.*t2527*t1776;
  t2901 = -1.*t2555*t1859;
  t2903 = 0. + t1104 + t2045 + t1127 + t1146 + t2048 + t2071 + t2899 + t2900 + t2901;
  t2912 = t2495*t1445;
  t2917 = t2527*t1505;
  t2938 = t2555*t1577;
  t2942 = 0. + var1[0] + t2010 + t1194 + t1209 + t2012 + t2017 + t2912 + t2917 + t2938;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=1.;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=1.;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=var1[1];
  p_output1[19]=t29;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=1.;
  p_output1[24]=-1.*t34*var1[2];
  p_output1[25]=-1.*t61*var1[2];
  p_output1[26]=t34*var1[0] + t61*var1[1];
  p_output1[27]=-1.*t61;
  p_output1[28]=t34;
  p_output1[29]=0;
  p_output1[30]=-1.*t151*var1[1] - 1.*t111*t61*var1[2];
  p_output1[31]=t151*var1[0] + t111*t34*var1[2];
  p_output1[32]=t111*t61*var1[0] - 1.*t111*t34*var1[1];
  p_output1[33]=t111*t34;
  p_output1[34]=t111*t61;
  p_output1[35]=-1.*t151;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=-0.091*t332 + t151*var1[1] + t111*t61*var1[2];
  p_output1[103]=-0.091*t355 - 1.*t151*var1[0] - 1.*t111*t34*var1[2];
  p_output1[104]=-0.091*t111*t269 - 1.*t111*t61*var1[0] + t111*t34*var1[1];
  p_output1[105]=0. - 1.*t111*t34;
  p_output1[106]=0. - 1.*t111*t61;
  p_output1[107]=0. + t151;
  p_output1[108]=0.084668*t111*t34 - 0.041869*t588 + 0.016493*t634 - 0.366501*(t664*t743 + t835*t846) - 0.930418*(t743*t879 + t835*t914);
  p_output1[109]=0.084668*t111*t61 - 0.366501*(t1027*t588 + t1000*t664) - 0.041869*t846 - 0.930418*(t1027*t634 + t1000*t879) + 0.016493*t914;
  p_output1[110]=-0.084668*t151 - 0.041869*t664 - 0.366501*(t1170*t588 + t1219*t846) + 0.016493*t879 - 0.930418*(t1170*t634 + t1219*t914);
  p_output1[111]=0. - 0.366501*t588 - 0.930418*t634;
  p_output1[112]=0. - 0.366501*t846 - 0.930418*t914;
  p_output1[113]=0. - 0.366501*t664 - 0.930418*t879;
  p_output1[114]=0.041869*t1445 + 0.016493*t1505 - 0.151852*t1577 + 0.366501*(t1675*t1699 + t1717*t1748) - 0.930418*(t1675*t1776 + t1748*t1802);
  p_output1[115]=0.041869*t1699 + 0.016493*t1776 - 0.151852*t1859 + 0.366501*(t1445*t1916 + t1717*t1931) - 0.930418*(t1505*t1916 + t1802*t1931);
  p_output1[116]=0.041869*t1717 + 0.016493*t1802 - 0.151852*t2002 + 0.366501*(t1699*t2031 + t1445*t2076) - 0.930418*(t1776*t2031 + t1505*t2076);
  p_output1[117]=0. + 0.366501*t1445 - 0.930418*t1505;
  p_output1[118]=0. + 0.366501*t1699 - 0.930418*t1776;
  p_output1[119]=0. + 0.366501*t1717 - 0.930418*t1802;
  p_output1[120]=0.236705*(t1445*t2183 + t1505*t2244 + t1577*t2309) + 0.03708*t2391 + 0.014606*t2435 - 0.366501*(t2469*t2559 + t2573*t2583) + 0.930418*(t2559*t2613 + t2573*t2663);
  p_output1[121]=0.236705*(t1699*t2183 + t1776*t2244 + t1859*t2309) + 0.03708*t2583 + 0.014606*t2663 - 0.366501*(t2469*t2783 + t2391*t2824) + 0.930418*(t2613*t2783 + t2435*t2824);
  p_output1[122]=0.236705*(t1717*t2183 + t1802*t2244 + t2002*t2309) + 0.03708*t2469 + 0.014606*t2613 - 0.366501*(t2391*t2903 + t2583*t2942) + 0.930418*(t2435*t2903 + t2663*t2942);
  p_output1[123]=0. - 0.366501*t2391 + 0.930418*t2435;
  p_output1[124]=0. - 0.366501*t2583 + 0.930418*t2663;
  p_output1[125]=0. - 0.366501*t2469 + 0.930418*t2613;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void Js_right_knee_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
