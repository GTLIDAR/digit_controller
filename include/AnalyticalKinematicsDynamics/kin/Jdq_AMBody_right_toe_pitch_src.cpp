/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:12:47 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jdq_AMBody_right_toe_pitch_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t563;
  double t654;
  double t663;
  double t440;
  double t721;
  double t1152;
  double t1171;
  double t1175;
  double t664;
  double t675;
  double t690;
  double t694;
  double t723;
  double t730;
  double t766;
  double t768;
  double t792;
  double t799;
  double t928;
  double t930;
  double t968;
  double t1016;
  double t1018;
  double t1052;
  double t1331;
  double t1396;
  double t1413;
  double t1440;
  double t1454;
  double t1477;
  double t1480;
  double t1500;
  double t1501;
  double t1522;
  double t1590;
  double t1596;
  double t1610;
  double t310;
  double t337;
  double t490;
  double t506;
  double t769;
  double t773;
  double t788;
  double t1087;
  double t1215;
  double t1274;
  double t1524;
  double t1555;
  double t1627;
  double t1628;
  double t1652;
  double t1653;
  double t1660;
  double t1664;
  double t1677;
  double t1747;
  double t1831;
  double t1842;
  double t1859;
  double t1863;
  double t1928;
  double t1943;
  double t1949;
  double t2111;
  double t2521;
  double t2586;
  double t2618;
  double t342;
  double t343;
  double t1568;
  double t1763;
  double t1778;
  double t1799;
  double t2134;
  double t2138;
  double t2190;
  double t2210;
  double t2212;
  double t2249;
  double t2251;
  double t2252;
  double t2433;
  double t2494;
  double t2658;
  double t2732;
  double t2735;
  double t2758;
  double t2766;
  double t2775;
  double t2779;
  double t2866;
  double t2893;
  double t2900;
  double t2929;
  double t320;
  double t326;
  double t2145;
  double t2147;
  double t2182;
  double t2519;
  double t2639;
  double t2641;
  double t2902;
  double t2905;
  double t99;
  double t216;
  double t220;
  double t2987;
  double t3010;
  double t3031;
  double t3032;
  double t3046;
  double t3062;
  double t3133;
  double t3135;
  double t3265;
  double t3268;
  double t3281;
  double t3284;
  double t3292;
  double t3336;
  double t3338;
  double t3343;
  double t3443;
  double t3375;
  double t3377;
  double t3397;
  double t3404;
  double t3405;
  double t3417;
  double t3418;
  double t3420;
  double t3373;
  double t3448;
  double t3450;
  double t3467;
  double t3468;
  double t3472;
  double t3474;
  double t3486;
  double t3488;
  double t253;
  double t295;
  double t3555;
  double t3559;
  double t3570;
  double t3572;
  double t3581;
  double t3588;
  double t3592;
  double t3595;
  double t3600;
  double t3608;
  double t3612;
  double t3616;
  double t3574;
  double t3598;
  double t3617;
  double t3621;
  double t3625;
  double t3628;
  double t3635;
  double t3636;
  double t3639;
  double t3644;
  double t3646;
  double t3647;
  double t2952;
  double t2983;
  double t3622;
  double t3638;
  double t3656;
  double t3657;
  double t3682;
  double t3693;
  double t3695;
  double t3697;
  double t3708;
  double t3709;
  double t3722;
  double t3729;
  double t3214;
  double t3235;
  double t3357;
  double t3369;
  double t3371;
  double t3667;
  double t3704;
  double t3732;
  double t3735;
  double t3739;
  double t3740;
  double t3753;
  double t3755;
  double t3763;
  double t3767;
  double t3770;
  double t3773;
  double t3790;
  double t3793;
  double t3794;
  double t3795;
  double t3805;
  double t3808;
  double t3812;
  double t3816;
  double t3506;
  double t3866;
  double t3868;
  double t3871;
  double t3858;
  double t3860;
  double t3861;
  double t3880;
  double t3881;
  double t3883;
  double t3863;
  double t3876;
  double t3885;
  double t3886;
  double t3888;
  double t3890;
  double t3892;
  double t3924;
  double t3931;
  double t3934;
  double t3954;
  double t3955;
  double t3887;
  double t3929;
  double t3956;
  double t3962;
  double t3968;
  double t3970;
  double t3971;
  double t3974;
  double t3977;
  double t3980;
  double t3989;
  double t3990;
  double t3965;
  double t3976;
  double t3996;
  double t3997;
  double t4002;
  double t4003;
  double t4005;
  double t4007;
  double t4015;
  double t4016;
  double t4018;
  double t4026;
  double t4036;
  double t4041;
  double t4044;
  double t4045;
  double t4052;
  double t4061;
  double t4063;
  double t4065;
  double t3500;
  double t3501;
  double t3502;
  double t3442;
  double t3489;
  double t3497;
  double t3827;
  double t3829;
  double t3830;
  double t3802;
  double t3817;
  double t3819;
  double t4091;
  double t4092;
  double t4097;
  double t4046;
  double t4067;
  double t4077;
  double t2926;
  double t3210;
  double t3353;
  double t3356;
  double t3737;
  double t3760;
  double t3774;
  double t3781;
  double t4000;
  double t4009;
  double t4027;
  double t4030;
  t563 = Cos(var1[22]);
  t654 = -1.*t563;
  t663 = 1. + t654;
  t440 = Sin(var1[21]);
  t721 = Sin(var1[22]);
  t1152 = Cos(var1[21]);
  t1171 = -1.*t1152;
  t1175 = 1. + t1171;
  t664 = -0.8656776547239999*t663;
  t675 = 1. + t664;
  t690 = 0.553471*t675;
  t694 = -0.07434394776141752*t663;
  t723 = -0.930418*t721;
  t730 = 0. + t723;
  t766 = 0.803828*t730;
  t768 = t690 + t694 + t766;
  t792 = -0.134322983001*t663;
  t799 = 1. + t792;
  t928 = 0.218018*t799;
  t930 = -0.18873312805116788*t663;
  t968 = -0.366501*t721;
  t1016 = 0. + t968;
  t1018 = 0.803828*t1016;
  t1052 = t928 + t930 + t1018;
  t1331 = -1.000000637725*t663;
  t1396 = 1. + t1331;
  t1413 = 0.803828*t1396;
  t1440 = 0.366501*t721;
  t1454 = 0. + t1440;
  t1477 = 0.218018*t1454;
  t1480 = 0.930418*t721;
  t1500 = 0. + t1480;
  t1501 = 0.553471*t1500;
  t1522 = t1413 + t1477 + t1501;
  t1590 = Cos(var1[20]);
  t1596 = -1.*t1590;
  t1610 = 1. + t1596;
  t310 = Sin(var1[19]);
  t337 = Sin(var1[20]);
  t490 = 0.930418*t440;
  t506 = 0. + t490;
  t769 = t506*t768;
  t773 = 0.366501*t440;
  t788 = 0. + t773;
  t1087 = t788*t1052;
  t1215 = -1.000000637725*t1175;
  t1274 = 1. + t1215;
  t1524 = t1274*t1522;
  t1555 = 0. + t769 + t1087 + t1524;
  t1627 = -0.8656776547239999*t1175;
  t1628 = 1. + t1627;
  t1652 = t1628*t768;
  t1653 = -0.340999127418*t1175*t1052;
  t1660 = -0.930418*t440;
  t1664 = 0. + t1660;
  t1677 = t1664*t1522;
  t1747 = 0. + t1652 + t1653 + t1677;
  t1831 = -0.340999127418*t1175*t768;
  t1842 = -0.134322983001*t1175;
  t1859 = 1. + t1842;
  t1863 = t1859*t1052;
  t1928 = -0.366501*t440;
  t1943 = 0. + t1928;
  t1949 = t1943*t1522;
  t2111 = 0. + t1831 + t1863 + t1949;
  t2521 = Cos(var1[19]);
  t2586 = -1.*t2521;
  t2618 = 1. + t2586;
  t342 = -0.366501*t337;
  t343 = 0. + t342;
  t1568 = t343*t1555;
  t1763 = -0.340999127418*t1610*t1747;
  t1778 = -0.134322983001*t1610;
  t1799 = 1. + t1778;
  t2134 = t1799*t2111;
  t2138 = 0. + t1568 + t1763 + t2134;
  t2190 = -0.930418*t337;
  t2210 = 0. + t2190;
  t2212 = t2210*t1555;
  t2249 = -0.8656776547239999*t1610;
  t2251 = 1. + t2249;
  t2252 = t2251*t1747;
  t2433 = -0.340999127418*t1610*t2111;
  t2494 = 0. + t2212 + t2252 + t2433;
  t2658 = -1.000000637725*t1610;
  t2732 = 1. + t2658;
  t2735 = t2732*t1555;
  t2758 = 0.930418*t337;
  t2766 = 0. + t2758;
  t2775 = t2766*t1747;
  t2779 = 0.366501*t337;
  t2866 = 0. + t2779;
  t2893 = t2866*t2111;
  t2900 = 0. + t2735 + t2775 + t2893;
  t2929 = Sin(var1[18]);
  t320 = -0.366501*t310;
  t326 = 0. + t320;
  t2145 = t326*t2138;
  t2147 = -0.930418*t310;
  t2182 = 0. + t2147;
  t2519 = t2182*t2494;
  t2639 = -1.000000637725*t2618;
  t2641 = 1. + t2639;
  t2902 = t2641*t2900;
  t2905 = 0. + t2145 + t2519 + t2902;
  t99 = Cos(var1[18]);
  t216 = -1.*t99;
  t220 = 1. + t216;
  t2987 = -0.134322983001*t2618;
  t3010 = 1. + t2987;
  t3031 = t3010*t2138;
  t3032 = -0.340999127418*t2618*t2494;
  t3046 = 0.366501*t310;
  t3062 = 0. + t3046;
  t3133 = t3062*t2900;
  t3135 = 0. + t3031 + t3032 + t3133;
  t3265 = -0.340999127418*t2618*t2138;
  t3268 = -0.8656776547239999*t2618;
  t3281 = 1. + t3268;
  t3284 = t3281*t2494;
  t3292 = 0.930418*t310;
  t3336 = 0. + t3292;
  t3338 = t3336*t2900;
  t3343 = 0. + t3265 + t3284 + t3338;
  t3443 = Sin(var1[17]);
  t3375 = 0.366501*t2929;
  t3377 = 0. + t3375;
  t3397 = t3377*t2905;
  t3404 = 0.340999127418*t220*t3135;
  t3405 = -0.134322983001*t220;
  t3417 = 1. + t3405;
  t3418 = t3417*t3343;
  t3420 = 0. + t3397 + t3404 + t3418;
  t3373 = Cos(var1[17]);
  t3448 = -0.930418*t2929;
  t3450 = 0. + t3448;
  t3467 = t3450*t2905;
  t3468 = -0.8656776547239999*t220;
  t3472 = 1. + t3468;
  t3474 = t3472*t3135;
  t3486 = 0.340999127418*t220*t3343;
  t3488 = 0. + t3467 + t3474 + t3486;
  t253 = -1.000000637725*t220;
  t295 = 1. + t253;
  t3555 = -0.747896*t675;
  t3559 = 0.10045970693385246*t663;
  t3570 = 0.594863*t730;
  t3572 = t3555 + t3559 + t3570;
  t3581 = -0.294604*t799;
  t3588 = 0.2550318833994125*t663;
  t3592 = 0.594863*t1016;
  t3595 = t3581 + t3588 + t3592;
  t3600 = 0.594863*t1396;
  t3608 = -0.294604*t1454;
  t3612 = -0.747896*t1500;
  t3616 = t3600 + t3608 + t3612;
  t3574 = t506*t3572;
  t3598 = t788*t3595;
  t3617 = t1274*t3616;
  t3621 = 0. + t3574 + t3598 + t3617;
  t3625 = t1628*t3572;
  t3628 = -0.340999127418*t1175*t3595;
  t3635 = t1664*t3616;
  t3636 = 0. + t3625 + t3628 + t3635;
  t3639 = -0.340999127418*t1175*t3572;
  t3644 = t1859*t3595;
  t3646 = t1943*t3616;
  t3647 = 0. + t3639 + t3644 + t3646;
  t2952 = 0.930418*t2929;
  t2983 = 0. + t2952;
  t3622 = t343*t3621;
  t3638 = -0.340999127418*t1610*t3636;
  t3656 = t1799*t3647;
  t3657 = 0. + t3622 + t3638 + t3656;
  t3682 = t2210*t3621;
  t3693 = t2251*t3636;
  t3695 = -0.340999127418*t1610*t3647;
  t3697 = 0. + t3682 + t3693 + t3695;
  t3708 = t2732*t3621;
  t3709 = t2766*t3636;
  t3722 = t2866*t3647;
  t3729 = 0. + t3708 + t3709 + t3722;
  t3214 = -0.366501*t2929;
  t3235 = 0. + t3214;
  t3357 = Sin(var1[4]);
  t3369 = Cos(var1[4]);
  t3371 = Cos(var1[5]);
  t3667 = t326*t3657;
  t3704 = t2182*t3697;
  t3732 = t2641*t3729;
  t3735 = 0. + t3667 + t3704 + t3732;
  t3739 = t3010*t3657;
  t3740 = -0.340999127418*t2618*t3697;
  t3753 = t3062*t3729;
  t3755 = 0. + t3739 + t3740 + t3753;
  t3763 = -0.340999127418*t2618*t3657;
  t3767 = t3281*t3697;
  t3770 = t3336*t3729;
  t3773 = 0. + t3763 + t3767 + t3770;
  t3790 = t3377*t3735;
  t3793 = 0.340999127418*t220*t3755;
  t3794 = t3417*t3773;
  t3795 = 0. + t3790 + t3793 + t3794;
  t3805 = t3450*t3735;
  t3808 = t3472*t3755;
  t3812 = 0.340999127418*t220*t3773;
  t3816 = 0. + t3805 + t3808 + t3812;
  t3506 = Sin(var1[5]);
  t3866 = -0.366501*t675;
  t3868 = -0.3172717261340007*t663;
  t3871 = t3866 + t3868;
  t3858 = 0.930418*t799;
  t3860 = 0.12497652119782442*t663;
  t3861 = t3858 + t3860;
  t3880 = 0.930418*t1454;
  t3881 = -0.366501*t1500;
  t3883 = t3880 + t3881;
  t3863 = t3861*t788;
  t3876 = t3871*t506;
  t3885 = t1274*t3883;
  t3886 = 0. + t3863 + t3876 + t3885;
  t3888 = t1628*t3871;
  t3890 = -0.340999127418*t1175*t3861;
  t3892 = t1664*t3883;
  t3924 = 0. + t3888 + t3890 + t3892;
  t3931 = -0.340999127418*t1175*t3871;
  t3934 = t1859*t3861;
  t3954 = t1943*t3883;
  t3955 = 0. + t3931 + t3934 + t3954;
  t3887 = t343*t3886;
  t3929 = -0.340999127418*t1610*t3924;
  t3956 = t1799*t3955;
  t3962 = 0. + t3887 + t3929 + t3956;
  t3968 = t2210*t3886;
  t3970 = t2251*t3924;
  t3971 = -0.340999127418*t1610*t3955;
  t3974 = 0. + t3968 + t3970 + t3971;
  t3977 = t2732*t3886;
  t3980 = t2766*t3924;
  t3989 = t2866*t3955;
  t3990 = 0. + t3977 + t3980 + t3989;
  t3965 = t326*t3962;
  t3976 = t2182*t3974;
  t3996 = t2641*t3990;
  t3997 = 0. + t3965 + t3976 + t3996;
  t4002 = t3010*t3962;
  t4003 = -0.340999127418*t2618*t3974;
  t4005 = t3062*t3990;
  t4007 = 0. + t4002 + t4003 + t4005;
  t4015 = -0.340999127418*t2618*t3962;
  t4016 = t3281*t3974;
  t4018 = t3336*t3990;
  t4026 = 0. + t4015 + t4016 + t4018;
  t4036 = t3377*t3997;
  t4041 = 0.340999127418*t220*t4007;
  t4044 = t3417*t4026;
  t4045 = 0. + t4036 + t4041 + t4044;
  t4052 = t3450*t3997;
  t4061 = t3472*t4007;
  t4063 = 0.340999127418*t220*t4026;
  t4065 = 0. + t4052 + t4061 + t4063;
  t3500 = t3443*t3420;
  t3501 = t3373*t3488;
  t3502 = 0. + t3500 + t3501;
  t3442 = t3373*t3420;
  t3489 = -1.*t3443*t3488;
  t3497 = 0. + t3442 + t3489;
  t3827 = t3443*t3795;
  t3829 = t3373*t3816;
  t3830 = 0. + t3827 + t3829;
  t3802 = t3373*t3795;
  t3817 = -1.*t3443*t3816;
  t3819 = 0. + t3802 + t3817;
  t4091 = t3443*t4045;
  t4092 = t3373*t4065;
  t4097 = 0. + t4091 + t4092;
  t4046 = t3373*t4045;
  t4067 = -1.*t3443*t4065;
  t4077 = 0. + t4046 + t4067;
  t2926 = t295*t2905;
  t3210 = t2983*t3135;
  t3353 = t3235*t3343;
  t3356 = 0. + t2926 + t3210 + t3353;
  t3737 = t295*t3735;
  t3760 = t2983*t3755;
  t3774 = t3235*t3773;
  t3781 = 0. + t3737 + t3760 + t3774;
  t4000 = t295*t3997;
  t4009 = t2983*t4007;
  t4027 = t3235*t4026;
  t4030 = 0. + t4000 + t4009 + t4027;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0.00001*(0. - 1.*t3356*t3357 + t3369*(0. + t3371*t3497 + t3502*t3506));
  p_output1[10]=0.00001*(0. - 1.*t3357*t3781 + t3369*(0. + t3371*t3819 + t3506*t3830));
  p_output1[11]=0.00001*(0. - 1.*t3357*t4030 + t3369*(0. + t3371*t4077 + t3506*t4097));
  p_output1[12]=0.00001*(0. + t3371*t3502 - 1.*t3497*t3506);
  p_output1[13]=0.00001*(0. - 1.*t3506*t3819 + t3371*t3830);
  p_output1[14]=0.00001*(0. - 1.*t3506*t4077 + t3371*t4097);
  p_output1[15]=0.00001*t3356;
  p_output1[16]=0.00001*t3781;
  p_output1[17]=0.00001*t4030;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0.00001*(0. - 1.*t2905*t295 - 1.*t2983*t3135 - 1.*t3235*t3343);
  p_output1[52]=0.00001*(0. - 1.*t295*t3735 - 1.*t2983*t3755 - 1.*t3235*t3773);
  p_output1[53]=0.00001*(0. - 1.*t295*t3997 - 1.*t2983*t4007 - 1.*t3235*t4026);
  p_output1[54]=0.00001*(0. - 0.366501*t3135 - 0.930418*t3343);
  p_output1[55]=0.00001*(0. - 0.366501*t3755 - 0.930418*t3773);
  p_output1[56]=0.00001*(0. - 0.366501*t4007 - 0.930418*t4026);
  p_output1[57]=0.00001*(0. - 0.930418*t2138 + 0.366501*t2494);
  p_output1[58]=0.00001*(0. - 0.930418*t3657 + 0.366501*t3697);
  p_output1[59]=0.00001*(0. - 0.930418*t3962 + 0.366501*t3974);
  p_output1[60]=0.00001*(0. - 0.366501*t1747 + 0.930418*t2111);
  p_output1[61]=0.00001*(0. - 0.366501*t3636 + 0.930418*t3647);
  p_output1[62]=0.00001*(0. - 0.366501*t3924 + 0.930418*t3955);
  p_output1[63]=0.00001*(0. + 0.930418*t1052 - 0.366501*t768);
  p_output1[64]=0.00001*(0. - 0.366501*t3572 + 0.930418*t3595);
  p_output1[65]=0.00001*(0. + 0.930418*t3861 - 0.366501*t3871);
  p_output1[66]=1.9655299995924306e-12;
  p_output1[67]=-2.3257599990333946e-12;
  p_output1[68]=0.00001000000637725;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jdq_AMBody_right_toe_pitch_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
