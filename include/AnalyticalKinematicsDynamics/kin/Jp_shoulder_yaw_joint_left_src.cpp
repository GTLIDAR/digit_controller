/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:43:54 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_shoulder_yaw_joint_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t478;
  double t1699;
  double t1920;
  double t1957;
  double t1973;
  double t2175;
  double t2361;
  double t2331;
  double t2349;
  double t2389;
  double t39;
  double t119;
  double t239;
  double t2354;
  double t2395;
  double t2442;
  double t2657;
  double t2787;
  double t2884;
  double t3826;
  double t3828;
  double t3855;
  double t3916;
  double t36;
  double t3579;
  double t3607;
  double t3437;
  double t3439;
  double t3447;
  double t3637;
  double t3728;
  double t3737;
  double t3878;
  double t3077;
  double t3304;
  double t4299;
  double t4046;
  double t1576;
  double t1579;
  double t774;
  double t1152;
  double t4974;
  double t4148;
  double t4160;
  double t4177;
  double t4189;
  double t4194;
  double t4276;
  double t4874;
  double t4684;
  double t4724;
  double t4726;
  double t4731;
  double t4750;
  double t4784;
  double t5078;
  double t5098;
  double t5104;
  double t5111;
  double t5116;
  double t5134;
  double t3929;
  double t5145;
  double t4052;
  double t5376;
  double t4544;
  double t5253;
  double t4338;
  double t433;
  double t1190;
  double t1582;
  double t1694;
  double t2010;
  double t2235;
  double t2266;
  double t2446;
  double t2556;
  double t2571;
  double t3045;
  double t3076;
  double t3403;
  double t3411;
  double t5576;
  double t5591;
  double t5597;
  double t5607;
  double t5618;
  double t5621;
  double t3569;
  double t3577;
  double t3626;
  double t3628;
  double t3808;
  double t3868;
  double t4017;
  double t4038;
  double t4063;
  double t4064;
  double t4070;
  double t5656;
  double t5659;
  double t5660;
  double t5665;
  double t5669;
  double t5670;
  double t4279;
  double t4289;
  double t4513;
  double t4514;
  double t4596;
  double t4598;
  double t4639;
  double t4843;
  double t4857;
  double t4884;
  double t4918;
  double t5037;
  double t5062;
  double t5072;
  double t5209;
  double t5686;
  double t5691;
  double t5700;
  double t5703;
  double t5280;
  double t5707;
  double t5710;
  double t5714;
  double t5720;
  double t5329;
  double t5335;
  double t5728;
  double t5740;
  double t5741;
  double t5743;
  double t5362;
  double t5366;
  double t5404;
  double t5427;
  double t5478;
  double t5489;
  double t5496;
  double t5529;
  double t5844;
  double t5854;
  double t5856;
  double t5859;
  double t5877;
  double t5878;
  double t5889;
  double t5891;
  double t5902;
  double t5904;
  double t5915;
  double t5936;
  double t5944;
  double t5947;
  double t5959;
  double t5960;
  double t5961;
  double t5968;
  double t6034;
  double t6038;
  double t6040;
  double t6045;
  double t6047;
  double t6049;
  double t6055;
  double t6057;
  double t6059;
  double t6060;
  double t6068;
  double t6069;
  double t6071;
  double t6072;
  double t6076;
  double t6079;
  double t6080;
  double t6083;
  double t6139;
  double t6140;
  double t6143;
  double t6147;
  double t6148;
  double t6151;
  double t6155;
  double t6156;
  double t6157;
  double t6158;
  double t6178;
  double t6180;
  double t6181;
  double t6182;
  double t6189;
  double t6190;
  double t6191;
  double t6193;
  double t6240;
  double t6242;
  double t6243;
  double t6245;
  double t6246;
  double t6247;
  double t6250;
  double t6251;
  double t6254;
  double t6255;
  double t6258;
  double t6272;
  double t6273;
  double t6274;
  double t6277;
  double t6279;
  double t6281;
  double t6319;
  double t6321;
  double t6323;
  double t6327;
  double t6330;
  double t6333;
  double t6334;
  double t6335;
  double t6338;
  double t6340;
  double t6341;
  double t6343;
  double t6344;
  double t6345;
  double t6351;
  double t6352;
  double t6354;
  double t6400;
  double t6402;
  double t6404;
  double t6407;
  double t6408;
  double t6409;
  double t6413;
  double t6414;
  double t6420;
  double t6422;
  double t6423;
  double t6428;
  double t6430;
  double t6432;
  double t6433;
  double t6486;
  double t6491;
  double t6492;
  double t6494;
  double t6495;
  double t6498;
  double t6501;
  double t6503;
  double t6506;
  double t6508;
  double t6510;
  double t6470;
  double t6472;
  double t6474;
  double t6478;
  double t6479;
  double t6550;
  double t6554;
  double t6555;
  double t6557;
  double t6559;
  double t6560;
  double t6562;
  double t6564;
  double t6565;
  double t6567;
  double t6568;
  double t6569;
  double t6573;
  double t6574;
  double t6575;
  double t6580;
  double t6581;
  double t6582;
  double t6605;
  double t6606;
  double t6607;
  double t6609;
  double t6610;
  double t6611;
  double t6613;
  double t6614;
  double t6616;
  double t6619;
  double t6621;
  double t6623;
  double t6626;
  double t6627;
  double t6629;
  double t6668;
  double t6671;
  double t6673;
  double t6674;
  double t6678;
  double t6680;
  double t6681;
  double t6683;
  double t6686;
  double t6687;
  double t6689;
  double t6690;
  double t6654;
  double t6655;
  double t6656;
  double t6658;
  double t6659;
  double t6660;
  double t6663;
  double t6664;
  double t6665;
  double t6718;
  double t6719;
  double t6724;
  double t6725;
  double t6726;
  double t6727;
  double t6729;
  double t6730;
  double t6732;
  double t6733;
  double t6735;
  double t6736;
  double t6738;
  double t6739;
  double t6769;
  double t6771;
  double t6772;
  double t6774;
  double t6776;
  double t6777;
  double t6780;
  double t6781;
  double t6783;
  double t6784;
  double t6787;
  double t6789;
  double t6821;
  double t6838;
  double t6825;
  double t6820;
  double t6824;
  double t6843;
  double t6868;
  double t6836;
  double t6858;
  double t6871;
  double t6853;
  double t6879;
  double t6822;
  double t6823;
  double t6828;
  double t6830;
  double t6831;
  double t6832;
  double t6840;
  double t6841;
  double t6844;
  double t6845;
  double t6847;
  double t6849;
  double t6855;
  double t6857;
  double t6859;
  double t6860;
  double t6861;
  double t6862;
  double t6899;
  double t6901;
  double t6902;
  double t6869;
  double t6906;
  double t6907;
  double t6910;
  double t6912;
  double t6872;
  double t6914;
  double t6915;
  double t6918;
  double t6919;
  double t6876;
  double t6880;
  double t6889;
  double t6891;
  double t6948;
  double t6949;
  double t6951;
  double t6953;
  double t6954;
  double t6955;
  double t6958;
  double t6960;
  double t6961;
  double t6962;
  t478 = Sin(var1[14]);
  t1699 = Sin(var1[3]);
  t1920 = Cos(var1[13]);
  t1957 = -1.*t1920;
  t1973 = 1. + t1957;
  t2175 = Sin(var1[13]);
  t2361 = Cos(var1[3]);
  t2331 = Cos(var1[5]);
  t2349 = Sin(var1[4]);
  t2389 = Sin(var1[5]);
  t39 = Cos(var1[14]);
  t119 = -1.*t39;
  t239 = 1. + t119;
  t2354 = -1.*t2331*t1699*t2349;
  t2395 = t2361*t2389;
  t2442 = t2354 + t2395;
  t2657 = -1.*t2361*t2331;
  t2787 = -1.*t1699*t2349*t2389;
  t2884 = t2657 + t2787;
  t3826 = Cos(var1[15]);
  t3828 = -1.*t3826;
  t3855 = 1. + t3828;
  t3916 = Sin(var1[15]);
  t36 = Cos(var1[4]);
  t3579 = 0.994522*t478;
  t3607 = 0. + t3579;
  t3437 = -1.*t2175*t2442;
  t3439 = t1920*t2884;
  t3447 = t3437 + t3439;
  t3637 = t1920*t2442;
  t3728 = t2175*t2884;
  t3737 = t3637 + t3728;
  t3878 = 0.051978134642000004*t3855;
  t3077 = -0.104528*t478;
  t3304 = 0. + t3077;
  t4299 = -0.05226439969100001*t3855;
  t4046 = 0.49726168403800003*t3855;
  t1576 = 0.104528*t478;
  t1579 = 0. + t1576;
  t774 = -0.994522*t478;
  t1152 = 0. + t774;
  t4974 = -0.073913*t3916;
  t4148 = -1.*t36*t3607*t1699;
  t4160 = 0.103955395616*t239*t3447;
  t4177 = -0.9890740084840001*t239;
  t4189 = 1. + t4177;
  t4194 = t4189*t3737;
  t4276 = t4148 + t4160 + t4194;
  t4874 = -0.703234*t3916;
  t4684 = -1.*t36*t3304*t1699;
  t4724 = -0.010926102783999999*t239;
  t4726 = 1. + t4724;
  t4731 = t4726*t3447;
  t4750 = 0.103955395616*t239*t3737;
  t4784 = t4684 + t4731 + t4750;
  t5078 = -1.0000001112680001*t239;
  t5098 = 1. + t5078;
  t5104 = -1.*t5098*t36*t1699;
  t5111 = t1579*t3447;
  t5116 = t1152*t3737;
  t5134 = t5104 + t5111 + t5116;
  t3929 = -0.707107*t3916;
  t5145 = -0.49726168403800003*t3855;
  t4052 = 0.073913*t3916;
  t5376 = -0.051978134642000004*t3855;
  t4544 = 0.707107*t3916;
  t5253 = 0.05226439969100001*t3855;
  t4338 = 0.703234*t3916;
  t433 = -0.056500534356700764*t239;
  t1190 = 0.38315650737400003*t1152;
  t1582 = -0.040271188976*t1579;
  t1694 = 0. + t433 + t1190 + t1582;
  t2010 = 0.4*t1973;
  t2235 = 0.12*t2175;
  t2266 = 0. + t2010 + t2235;
  t2446 = 0.12*t1973;
  t2556 = -0.4*t2175;
  t2571 = 0. + t2446 + t2556;
  t3045 = 1.1345904784751044e-7*var1[14];
  t3076 = -0.04027119345689465*t239;
  t3403 = -0.05650052807*t3304;
  t3411 = t3045 + t3076 + t3403;
  t5576 = t2361*t2331*t2349;
  t5591 = t1699*t2389;
  t5597 = t5576 + t5591;
  t5607 = -1.*t2331*t1699;
  t5618 = t2361*t2349*t2389;
  t5621 = t5607 + t5618;
  t3569 = 1.1924972351948546e-8*var1[14];
  t3577 = 0.38315655000705834*t239;
  t3626 = -0.05650052807*t3607;
  t3628 = t3569 + t3577 + t3626;
  t3808 = -1.5601527583902087e-7*var1[15];
  t3868 = 0.09582494577057615*t3855;
  t4017 = t3878 + t3929;
  t4038 = 0.231098203479*t4017;
  t4063 = t4046 + t4052;
  t4064 = 0.164383620275*t4063;
  t4070 = t3808 + t3868 + t4038 + t4064;
  t5656 = -1.*t2175*t5597;
  t5659 = t1920*t5621;
  t5660 = t5656 + t5659;
  t5665 = t1920*t5597;
  t5669 = t2175*t5621;
  t5670 = t5665 + t5669;
  t4279 = 1.639789470231751e-8*var1[15];
  t4289 = 0.22983603018311177*t3855;
  t4513 = t4299 + t4338;
  t4514 = 0.164383620275*t4513;
  t4596 = t3878 + t4544;
  t4598 = 0.18957839082800002*t4596;
  t4639 = t4279 + t4289 + t4514 + t4598;
  t4843 = 1.568745163810375e-7*var1[15];
  t4857 = 0.08219200580743281*t3855;
  t4884 = t4299 + t4874;
  t4918 = 0.231098203479*t4884;
  t5037 = t4046 + t4974;
  t5062 = 0.18957839082800002*t5037;
  t5072 = t4843 + t4857 + t4918 + t5062;
  t5209 = t5145 + t4974;
  t5686 = t2361*t36*t3607;
  t5691 = 0.103955395616*t239*t5660;
  t5700 = t4189*t5670;
  t5703 = t5686 + t5691 + t5700;
  t5280 = t5253 + t4874;
  t5707 = t2361*t36*t3304;
  t5710 = t4726*t5660;
  t5714 = 0.103955395616*t239*t5670;
  t5720 = t5707 + t5710 + t5714;
  t5329 = -0.500001190325*t3855;
  t5335 = 1. + t5329;
  t5728 = t5098*t2361*t36;
  t5740 = t1579*t5660;
  t5741 = t1152*t5670;
  t5743 = t5728 + t5740 + t5741;
  t5362 = -0.5054634410180001*t3855;
  t5366 = 1. + t5362;
  t5404 = t5376 + t3929;
  t5427 = t5145 + t4052;
  t5478 = t5376 + t4544;
  t5489 = -0.9945383682050002*t3855;
  t5496 = 1. + t5489;
  t5529 = t5253 + t4338;
  t5844 = -1.*t2361*t36*t2331*t2175;
  t5854 = t1920*t2361*t36*t2389;
  t5856 = t5844 + t5854;
  t5859 = t1920*t2361*t36*t2331;
  t5877 = t2361*t36*t2175*t2389;
  t5878 = t5859 + t5877;
  t5889 = -1.*t2361*t3607*t2349;
  t5891 = 0.103955395616*t239*t5856;
  t5902 = t4189*t5878;
  t5904 = t5889 + t5891 + t5902;
  t5915 = -1.*t2361*t3304*t2349;
  t5936 = t4726*t5856;
  t5944 = 0.103955395616*t239*t5878;
  t5947 = t5915 + t5936 + t5944;
  t5959 = -1.*t5098*t2361*t2349;
  t5960 = t1579*t5856;
  t5961 = t1152*t5878;
  t5968 = t5959 + t5960 + t5961;
  t6034 = -1.*t36*t2331*t2175*t1699;
  t6038 = t1920*t36*t1699*t2389;
  t6040 = t6034 + t6038;
  t6045 = t1920*t36*t2331*t1699;
  t6047 = t36*t2175*t1699*t2389;
  t6049 = t6045 + t6047;
  t6055 = -1.*t3607*t1699*t2349;
  t6057 = 0.103955395616*t239*t6040;
  t6059 = t4189*t6049;
  t6060 = t6055 + t6057 + t6059;
  t6068 = -1.*t3304*t1699*t2349;
  t6069 = t4726*t6040;
  t6071 = 0.103955395616*t239*t6049;
  t6072 = t6068 + t6069 + t6071;
  t6076 = -1.*t5098*t1699*t2349;
  t6079 = t1579*t6040;
  t6080 = t1152*t6049;
  t6083 = t6076 + t6079 + t6080;
  t6139 = t2331*t2175*t2349;
  t6140 = -1.*t1920*t2349*t2389;
  t6143 = t6139 + t6140;
  t6147 = -1.*t1920*t2331*t2349;
  t6148 = -1.*t2175*t2349*t2389;
  t6151 = t6147 + t6148;
  t6155 = -1.*t36*t3607;
  t6156 = 0.103955395616*t239*t6143;
  t6157 = t4189*t6151;
  t6158 = t6155 + t6156 + t6157;
  t6178 = -1.*t36*t3304;
  t6180 = t4726*t6143;
  t6181 = 0.103955395616*t239*t6151;
  t6182 = t6178 + t6180 + t6181;
  t6189 = -1.*t5098*t36;
  t6190 = t1579*t6143;
  t6191 = t1152*t6151;
  t6193 = t6189 + t6190 + t6191;
  t6240 = t2331*t1699;
  t6242 = -1.*t2361*t2349*t2389;
  t6243 = t6240 + t6242;
  t6245 = t2175*t5597;
  t6246 = t1920*t6243;
  t6247 = t6245 + t6246;
  t6250 = -1.*t2175*t6243;
  t6251 = t5665 + t6250;
  t6254 = 0.103955395616*t239*t6247;
  t6255 = t4726*t6251;
  t6258 = t6254 + t6255;
  t6272 = t4189*t6247;
  t6273 = 0.103955395616*t239*t6251;
  t6274 = t6272 + t6273;
  t6277 = t1152*t6247;
  t6279 = t1579*t6251;
  t6281 = t6277 + t6279;
  t6319 = t2331*t1699*t2349;
  t6321 = -1.*t2361*t2389;
  t6323 = t6319 + t6321;
  t6327 = t2175*t6323;
  t6330 = t6327 + t3439;
  t6333 = t1920*t6323;
  t6334 = -1.*t2175*t2884;
  t6335 = t6333 + t6334;
  t6338 = 0.103955395616*t239*t6330;
  t6340 = t4726*t6335;
  t6341 = t6338 + t6340;
  t6343 = t4189*t6330;
  t6344 = 0.103955395616*t239*t6335;
  t6345 = t6343 + t6344;
  t6351 = t1152*t6330;
  t6352 = t1579*t6335;
  t6354 = t6351 + t6352;
  t6400 = t36*t2331*t2175;
  t6402 = -1.*t1920*t36*t2389;
  t6404 = t6400 + t6402;
  t6407 = t1920*t36*t2331;
  t6408 = t36*t2175*t2389;
  t6409 = t6407 + t6408;
  t6413 = 0.103955395616*t239*t6404;
  t6414 = t4726*t6409;
  t6420 = t6413 + t6414;
  t6422 = t4189*t6404;
  t6423 = 0.103955395616*t239*t6409;
  t6428 = t6422 + t6423;
  t6430 = t1152*t6404;
  t6432 = t1579*t6409;
  t6433 = t6430 + t6432;
  t6486 = -1.*t1920*t5597;
  t6491 = -1.*t2175*t5621;
  t6492 = t6486 + t6491;
  t6494 = t4726*t6492;
  t6495 = t5691 + t6494;
  t6498 = t4189*t5660;
  t6501 = 0.103955395616*t239*t6492;
  t6503 = t6498 + t6501;
  t6506 = t1152*t5660;
  t6508 = t1579*t6492;
  t6510 = t6506 + t6508;
  t6470 = 0.12*t1920;
  t6472 = 0.4*t2175;
  t6474 = t6470 + t6472;
  t6478 = -0.4*t1920;
  t6479 = t6478 + t2235;
  t6550 = t2361*t2331;
  t6554 = t1699*t2349*t2389;
  t6555 = t6550 + t6554;
  t6557 = -1.*t2175*t6323;
  t6559 = t1920*t6555;
  t6560 = t6557 + t6559;
  t6562 = -1.*t1920*t6323;
  t6564 = -1.*t2175*t6555;
  t6565 = t6562 + t6564;
  t6567 = 0.103955395616*t239*t6560;
  t6568 = t4726*t6565;
  t6569 = t6567 + t6568;
  t6573 = t4189*t6560;
  t6574 = 0.103955395616*t239*t6565;
  t6575 = t6573 + t6574;
  t6580 = t1152*t6560;
  t6581 = t1579*t6565;
  t6582 = t6580 + t6581;
  t6605 = -1.*t36*t2331*t2175;
  t6606 = t1920*t36*t2389;
  t6607 = t6605 + t6606;
  t6609 = -1.*t1920*t36*t2331;
  t6610 = -1.*t36*t2175*t2389;
  t6611 = t6609 + t6610;
  t6613 = 0.103955395616*t239*t6607;
  t6614 = t4726*t6611;
  t6616 = t6613 + t6614;
  t6619 = t4189*t6607;
  t6621 = 0.103955395616*t239*t6611;
  t6623 = t6619 + t6621;
  t6626 = t1152*t6607;
  t6627 = t1579*t6611;
  t6629 = t6626 + t6627;
  t6668 = -1.0000001112680001*t2361*t36*t478;
  t6671 = 0.104528*t39*t5660;
  t6673 = -0.994522*t39*t5670;
  t6674 = t6668 + t6671 + t6673;
  t6678 = 0.994522*t39*t2361*t36;
  t6680 = 0.103955395616*t478*t5660;
  t6681 = -0.9890740084840001*t478*t5670;
  t6683 = t6678 + t6680 + t6681;
  t6686 = -0.104528*t39*t2361*t36;
  t6687 = -0.010926102783999999*t478*t5660;
  t6689 = 0.103955395616*t478*t5670;
  t6690 = t6686 + t6687 + t6689;
  t6654 = -0.3852670428678886*t39;
  t6655 = -0.056500534356700764*t478;
  t6656 = t6654 + t6655;
  t6658 = 0.0059058871981009595*t39;
  t6659 = -0.04027119345689465*t478;
  t6660 = 1.1345904784751044e-7 + t6658 + t6659;
  t6663 = -0.05619101817723254*t39;
  t6664 = 0.38315655000705834*t478;
  t6665 = 1.1924972351948546e-8 + t6663 + t6664;
  t6718 = t2175*t6555;
  t6719 = t6333 + t6718;
  t6724 = -1.0000001112680001*t36*t478*t1699;
  t6725 = 0.104528*t39*t6560;
  t6726 = -0.994522*t39*t6719;
  t6727 = t6724 + t6725 + t6726;
  t6729 = 0.994522*t39*t36*t1699;
  t6730 = 0.103955395616*t478*t6560;
  t6732 = -0.9890740084840001*t478*t6719;
  t6733 = t6729 + t6730 + t6732;
  t6735 = -0.104528*t39*t36*t1699;
  t6736 = -0.010926102783999999*t478*t6560;
  t6738 = 0.103955395616*t478*t6719;
  t6739 = t6735 + t6736 + t6738;
  t6769 = 1.0000001112680001*t478*t2349;
  t6771 = 0.104528*t39*t6607;
  t6772 = -0.994522*t39*t6409;
  t6774 = t6769 + t6771 + t6772;
  t6776 = -0.994522*t39*t2349;
  t6777 = 0.103955395616*t478*t6607;
  t6780 = -0.9890740084840001*t478*t6409;
  t6781 = t6776 + t6777 + t6780;
  t6783 = 0.104528*t39*t2349;
  t6784 = -0.010926102783999999*t478*t6607;
  t6787 = 0.103955395616*t478*t6409;
  t6789 = t6783 + t6784 + t6787;
  t6821 = 0.051978134642000004*t3916;
  t6838 = -0.05226439969100001*t3916;
  t6825 = 0.49726168403800003*t3916;
  t6820 = -0.707107*t3826;
  t6824 = 0.073913*t3826;
  t6843 = 0.707107*t3826;
  t6868 = -0.051978134642000004*t3916;
  t6836 = 0.703234*t3826;
  t6858 = -0.073913*t3826;
  t6871 = -0.49726168403800003*t3916;
  t6853 = -0.703234*t3826;
  t6879 = 0.05226439969100001*t3916;
  t6822 = t6820 + t6821;
  t6823 = 0.231098203479*t6822;
  t6828 = t6824 + t6825;
  t6830 = 0.164383620275*t6828;
  t6831 = 0.09582494577057615*t3916;
  t6832 = -1.5601527583902087e-7 + t6823 + t6830 + t6831;
  t6840 = t6836 + t6838;
  t6841 = 0.164383620275*t6840;
  t6844 = t6843 + t6821;
  t6845 = 0.18957839082800002*t6844;
  t6847 = 0.22983603018311177*t3916;
  t6849 = 1.639789470231751e-8 + t6841 + t6845 + t6847;
  t6855 = t6853 + t6838;
  t6857 = 0.231098203479*t6855;
  t6859 = t6858 + t6825;
  t6860 = 0.18957839082800002*t6859;
  t6861 = 0.08219200580743281*t3916;
  t6862 = 1.568745163810375e-7 + t6857 + t6860 + t6861;
  t6899 = t36*t3607*t1699;
  t6901 = t4189*t6719;
  t6902 = t6899 + t6567 + t6901;
  t6869 = t6820 + t6868;
  t6906 = t36*t3304*t1699;
  t6907 = t4726*t6560;
  t6910 = 0.103955395616*t239*t6719;
  t6912 = t6906 + t6907 + t6910;
  t6872 = t6824 + t6871;
  t6914 = t5098*t36*t1699;
  t6915 = t1579*t6560;
  t6918 = t1152*t6719;
  t6919 = t6914 + t6915 + t6918;
  t6876 = t6843 + t6868;
  t6880 = t6836 + t6879;
  t6889 = t6858 + t6871;
  t6891 = t6853 + t6879;
  t6948 = -1.*t3607*t2349;
  t6949 = t4189*t6409;
  t6951 = t6948 + t6613 + t6949;
  t6953 = -1.*t3304*t2349;
  t6954 = t4726*t6607;
  t6955 = t6953 + t6954 + t6423;
  t6958 = -1.*t5098*t2349;
  t6960 = t1579*t6607;
  t6961 = t1152*t6409;
  t6962 = t6958 + t6960 + t6961;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=t2266*t2442 + t2571*t2884 + t3411*t3447 - 1.*t1694*t1699*t36 + t3628*t3737 + t4070*t4276 + t4639*t4784 + t5072*t5134 + 0.060173*(t4276*t5209 + t4784*t5280 + t5134*t5335) + 0.293218*(t4276*t5366 + t4784*t5404 + t5134*t5427) + 0.220205*(t4276*t5478 + t4784*t5496 + t5134*t5529);
  p_output1[10]=t1694*t2361*t36 + t2266*t5597 + t2571*t5621 + t3411*t5660 + t3628*t5670 + t4070*t5703 + t4639*t5720 + t5072*t5743 + 0.060173*(t5209*t5703 + t5280*t5720 + t5335*t5743) + 0.293218*(t5366*t5703 + t5404*t5720 + t5427*t5743) + 0.220205*(t5478*t5703 + t5496*t5720 + t5529*t5743);
  p_output1[11]=0;
  p_output1[12]=-1.*t1694*t2349*t2361 + t2266*t2331*t2361*t36 + t2361*t2389*t2571*t36 + t3411*t5856 + t3628*t5878 + t4070*t5904 + t4639*t5947 + t5072*t5968 + 0.060173*(t5209*t5904 + t5280*t5947 + t5335*t5968) + 0.293218*(t5366*t5904 + t5404*t5947 + t5427*t5968) + 0.220205*(t5478*t5904 + t5496*t5947 + t5529*t5968);
  p_output1[13]=-1.*t1694*t1699*t2349 + t1699*t2266*t2331*t36 + t1699*t2389*t2571*t36 + t3411*t6040 + t3628*t6049 + t4070*t6060 + t4639*t6072 + t5072*t6083 + 0.060173*(t5209*t6060 + t5280*t6072 + t5335*t6083) + 0.293218*(t5366*t6060 + t5404*t6072 + t5427*t6083) + 0.220205*(t5478*t6060 + t5496*t6072 + t5529*t6083);
  p_output1[14]=-1.*t2266*t2331*t2349 - 1.*t2349*t2389*t2571 - 1.*t1694*t36 + t3411*t6143 + t3628*t6151 + t4070*t6158 + t4639*t6182 + t5072*t6193 + 0.060173*(t5209*t6158 + t5280*t6182 + t5335*t6193) + 0.293218*(t5366*t6158 + t5404*t6182 + t5427*t6193) + 0.220205*(t5478*t6158 + t5496*t6182 + t5529*t6193);
  p_output1[15]=t2571*t5597 + t2266*t6243 + t3628*t6247 + t3411*t6251 + t4639*t6258 + t4070*t6274 + t5072*t6281 + 0.060173*(t5280*t6258 + t5209*t6274 + t5335*t6281) + 0.293218*(t5404*t6258 + t5366*t6274 + t5427*t6281) + 0.220205*(t5496*t6258 + t5478*t6274 + t5529*t6281);
  p_output1[16]=t2266*t2884 + t2571*t6323 + t3628*t6330 + t3411*t6335 + t4639*t6341 + t4070*t6345 + t5072*t6354 + 0.060173*(t5280*t6341 + t5209*t6345 + t5335*t6354) + 0.293218*(t5404*t6341 + t5366*t6345 + t5427*t6354) + 0.220205*(t5496*t6341 + t5478*t6345 + t5529*t6354);
  p_output1[17]=-1.*t2266*t2389*t36 + t2331*t2571*t36 + t3628*t6404 + t3411*t6409 + t4639*t6420 + t4070*t6428 + t5072*t6433 + 0.060173*(t5280*t6420 + t5209*t6428 + t5335*t6433) + 0.293218*(t5404*t6420 + t5366*t6428 + t5427*t6433) + 0.220205*(t5496*t6420 + t5478*t6428 + t5529*t6433);
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t3628*t5660 + t5597*t6474 + t5621*t6479 + t3411*t6492 + t4639*t6495 + t4070*t6503 + t5072*t6510 + 0.060173*(t5280*t6495 + t5209*t6503 + t5335*t6510) + 0.293218*(t5404*t6495 + t5366*t6503 + t5427*t6510) + 0.220205*(t5496*t6495 + t5478*t6503 + t5529*t6510);
  p_output1[40]=t6323*t6474 + t6479*t6555 + t3628*t6560 + t3411*t6565 + t4639*t6569 + t4070*t6575 + t5072*t6582 + 0.060173*(t5280*t6569 + t5209*t6575 + t5335*t6582) + 0.293218*(t5404*t6569 + t5366*t6575 + t5427*t6582) + 0.220205*(t5496*t6569 + t5478*t6575 + t5529*t6582);
  p_output1[41]=t2331*t36*t6474 + t2389*t36*t6479 + t3628*t6607 + t3411*t6611 + t4639*t6616 + t4070*t6623 + t5072*t6629 + 0.060173*(t5280*t6616 + t5209*t6623 + t5335*t6629) + 0.293218*(t5404*t6616 + t5366*t6623 + t5427*t6629) + 0.220205*(t5496*t6616 + t5478*t6623 + t5529*t6629);
  p_output1[42]=t2361*t36*t6656 + t5660*t6660 + t5670*t6665 + t5072*t6674 + t4070*t6683 + t4639*t6690 + 0.060173*(t5335*t6674 + t5209*t6683 + t5280*t6690) + 0.293218*(t5427*t6674 + t5366*t6683 + t5404*t6690) + 0.220205*(t5529*t6674 + t5478*t6683 + t5496*t6690);
  p_output1[43]=t1699*t36*t6656 + t6560*t6660 + t6665*t6719 + t5072*t6727 + t4070*t6733 + t4639*t6739 + 0.060173*(t5335*t6727 + t5209*t6733 + t5280*t6739) + 0.293218*(t5427*t6727 + t5366*t6733 + t5404*t6739) + 0.220205*(t5529*t6727 + t5478*t6733 + t5496*t6739);
  p_output1[44]=-1.*t2349*t6656 + t6607*t6660 + t6409*t6665 + t5072*t6774 + t4070*t6781 + t4639*t6789 + 0.060173*(t5335*t6774 + t5209*t6781 + t5280*t6789) + 0.293218*(t5427*t6774 + t5366*t6781 + t5404*t6789) + 0.220205*(t5529*t6774 + t5478*t6781 + t5496*t6789);
  p_output1[45]=t5703*t6832 + t5720*t6849 + t5743*t6862 + 0.293218*(-0.5054634410180001*t3916*t5703 + t5720*t6869 + t5743*t6872) + 0.220205*(-0.9945383682050002*t3916*t5720 + t5703*t6876 + t5743*t6880) + 0.060173*(-0.500001190325*t3916*t5743 + t5703*t6889 + t5720*t6891);
  p_output1[46]=t6832*t6902 + t6849*t6912 + t6862*t6919 + 0.060173*(t6889*t6902 + t6891*t6912 - 0.500001190325*t3916*t6919) + 0.293218*(-0.5054634410180001*t3916*t6902 + t6869*t6912 + t6872*t6919) + 0.220205*(t6876*t6902 - 0.9945383682050002*t3916*t6912 + t6880*t6919);
  p_output1[47]=t6832*t6951 + t6849*t6955 + t6862*t6962 + 0.060173*(t6889*t6951 + t6891*t6955 - 0.500001190325*t3916*t6962) + 0.293218*(-0.5054634410180001*t3916*t6951 + t6869*t6955 + t6872*t6962) + 0.220205*(t6876*t6951 - 0.9945383682050002*t3916*t6955 + t6880*t6962);
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
}



void Jp_shoulder_yaw_joint_left_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
