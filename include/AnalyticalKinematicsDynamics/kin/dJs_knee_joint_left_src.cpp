/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:33:40 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dJs_knee_joint_left_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t76;
  double t203;
  double t317;
  double t366;
  double t716;
  double t789;
  double t1243;
  double t1254;
  double t1400;
  double t1401;
  double t1406;
  double t1358;
  double t1360;
  double t1387;
  double t1003;
  double t1024;
  double t1030;
  double t823;
  double t827;
  double t829;
  double t1045;
  double t1049;
  double t1061;
  double t1247;
  double t1267;
  double t1273;
  double t1559;
  double t1564;
  double t1608;
  double t1616;
  double t1664;
  double t1666;
  double t1620;
  double t1621;
  double t1641;
  double t1661;
  double t1669;
  double t1673;
  double t1293;
  double t1298;
  double t1313;
  double t1714;
  double t1724;
  double t1739;
  double t1750;
  double t1965;
  double t1996;
  double t2010;
  double t2068;
  double t2081;
  double t2085;
  double t2195;
  double t2199;
  double t2232;
  double t774;
  double t799;
  double t802;
  double t1852;
  double t2242;
  double t2246;
  double t2253;
  double t2374;
  double t2529;
  double t2531;
  double t2534;
  double t1493;
  double t1419;
  double t2631;
  double t2645;
  double t2650;
  double t2376;
  double t2386;
  double t1757;
  double t1775;
  double t1783;
  double t1431;
  double t1436;
  double t1453;
  double t2896;
  double t2915;
  double t2920;
  double t2871;
  double t2875;
  double t2881;
  double t2724;
  double t2727;
  double t2731;
  double t2843;
  double t2857;
  double t2862;
  double t1856;
  double t1864;
  double t2033;
  double t2037;
  double t2041;
  double t2320;
  double t2332;
  double t2333;
  double t1922;
  double t1924;
  double t1927;
  double t2088;
  double t2115;
  double t2120;
  double t3130;
  double t3136;
  double t3138;
  double t3142;
  double t3165;
  double t3166;
  double t1944;
  double t1954;
  double t1955;
  double t3172;
  double t3176;
  double t3181;
  double t3184;
  double t2343;
  double t2351;
  double t2359;
  double t3186;
  double t3191;
  double t3192;
  double t2769;
  double t2670;
  double t2700;
  double t2482;
  double t2492;
  double t3274;
  double t3281;
  double t3282;
  double t2437;
  double t2458;
  double t2460;
  double t3290;
  double t3292;
  double t3295;
  double t2789;
  double t2803;
  double t2811;
  double t3462;
  double t3466;
  double t3467;
  double t3407;
  double t3422;
  double t3428;
  double t1499;
  double t1513;
  double t3533;
  double t3535;
  double t3545;
  double t1541;
  double t1544;
  double t1552;
  double t3681;
  double t3682;
  double t3685;
  double t3693;
  double t3702;
  double t3735;
  double t3739;
  double t3740;
  double t3709;
  double t3711;
  double t3728;
  double t3814;
  double t3794;
  double t3795;
  double t3797;
  double t3888;
  double t3889;
  double t3894;
  double t3866;
  double t3869;
  double t3874;
  double t4025;
  double t4026;
  double t4028;
  double t3998;
  double t4003;
  double t4004;
  double t3089;
  double t3105;
  double t3106;
  double t4291;
  double t4303;
  double t4309;
  double t4376;
  double t4379;
  double t4409;
  double t4407;
  double t4417;
  double t4419;
  double t4424;
  double t4431;
  double t4437;
  double t4449;
  double t4454;
  double t4471;
  double t4477;
  double t4479;
  double t4483;
  double t4484;
  double t4489;
  double t4508;
  double t4510;
  double t4522;
  double t4526;
  double t4528;
  double t4533;
  double t4719;
  double t4316;
  double t4317;
  double t4466;
  double t4494;
  double t4535;
  double t4542;
  double t4765;
  double t4593;
  double t4596;
  double t4621;
  double t4626;
  double t4643;
  double t4666;
  double t4712;
  double t4752;
  double t4757;
  double t4764;
  double t4910;
  double t4724;
  double t4726;
  double t4737;
  double t4767;
  double t4772;
  double t4774;
  double t5073;
  double t5074;
  double t5082;
  double t4853;
  double t4882;
  double t4887;
  double t4892;
  double t5096;
  double t5125;
  double t5144;
  double t4909;
  double t4911;
  double t4925;
  double t4312;
  double t5330;
  double t5333;
  double t5341;
  double t5357;
  double t5508;
  double t5532;
  double t5724;
  double t5735;
  double t5742;
  double t5744;
  double t5753;
  double t5774;
  double t5794;
  double t5800;
  double t5457;
  double t5461;
  double t6364;
  double t6367;
  double t6378;
  double t6412;
  double t6414;
  double t6416;
  double t6476;
  double t6494;
  double t6500;
  double t6403;
  double t6429;
  double t6505;
  double t6508;
  double t6516;
  double t6539;
  double t6540;
  double t6556;
  double t4787;
  double t4798;
  double t4390;
  double t4391;
  double t4399;
  double t4380;
  double t4384;
  double t4385;
  double t4555;
  double t4556;
  double t4575;
  double t5306;
  double t5307;
  double t5308;
  double t4328;
  double t4342;
  double t6913;
  double t6938;
  double t6941;
  double t6944;
  double t4815;
  double t4838;
  double t6953;
  double t6965;
  double t6972;
  double t6976;
  double t6990;
  double t6995;
  double t6996;
  double t5389;
  double t5390;
  double t5391;
  double t5397;
  double t7002;
  double t7009;
  double t7011;
  double t5174;
  double t5189;
  double t5196;
  double t5021;
  double t5022;
  double t5029;
  double t4990;
  double t4996;
  double t5015;
  double t5048;
  double t5061;
  double t4971;
  double t4972;
  double t4985;
  double t5214;
  double t5223;
  double t5226;
  double t7179;
  double t7198;
  double t7201;
  double t7209;
  double t7212;
  double t7213;
  double t5487;
  double t5497;
  double t5509;
  double t5518;
  double t5520;
  double t5554;
  double t7313;
  double t7323;
  double t7329;
  double t5689;
  double t5693;
  double t5711;
  double t5718;
  double t6114;
  double t6124;
  double t6131;
  double t6147;
  double t5961;
  double t5963;
  double t5974;
  double t5975;
  double t7491;
  double t7494;
  double t7495;
  double t7509;
  double t7512;
  double t7514;
  double t7516;
  double t7517;
  double t6154;
  double t6164;
  double t6174;
  double t6182;
  double t5810;
  double t5842;
  double t5845;
  double t5866;
  double t6004;
  double t6005;
  double t6010;
  double t6021;
  double t6665;
  double t6684;
  double t6689;
  double t6692;
  double t6789;
  double t6792;
  double t6815;
  double t6825;
  double t6631;
  double t6641;
  double t6650;
  double t6657;
  double t6253;
  double t6263;
  double t6270;
  double t6272;
  double t7628;
  double t7629;
  double t7632;
  double t7633;
  double t7640;
  double t7641;
  double t7644;
  double t7653;
  double t6735;
  double t6737;
  double t6748;
  double t6756;
  double t6318;
  double t6332;
  double t6334;
  double t6344;
  double t7722;
  double t7709;
  double t7717;
  double t7723;
  double t7725;
  double t7727;
  double t7743;
  double t7744;
  double t7754;
  double t7805;
  double t7809;
  double t7810;
  double t7825;
  double t7827;
  double t7831;
  double t7885;
  double t7892;
  double t7893;
  double t7898;
  double t7899;
  double t7901;
  double t7951;
  double t7958;
  double t7959;
  double t7967;
  double t7972;
  double t7975;
  double t7978;
  double t7987;
  double t8141;
  double t8144;
  double t8146;
  double t8147;
  double t8150;
  double t8154;
  double t8156;
  double t8158;
  double t7434;
  double t7440;
  double t7442;
  double t8368;
  double t8370;
  double t8371;
  double t8382;
  double t8383;
  double t8385;
  double t8394;
  double t8397;
  double t8398;
  double t8401;
  double t7544;
  double t7545;
  double t7563;
  double t7571;
  double t8423;
  double t8424;
  double t8376;
  double t8379;
  double t8380;
  double t8381;
  double t8408;
  double t8411;
  double t8446;
  double t8447;
  double t8448;
  double t8449;
  double t8453;
  double t8463;
  double t8464;
  double t8467;
  double t8468;
  double t8471;
  double t8472;
  double t8473;
  double t8480;
  double t8483;
  double t8486;
  double t8487;
  double t8049;
  double t8051;
  double t8054;
  double t8059;
  double t8512;
  double t8513;
  double t8514;
  double t8519;
  double t8451;
  double t8474;
  double t8488;
  double t8492;
  double t8416;
  double t8417;
  double t8418;
  double t8421;
  double t8425;
  double t8436;
  double t8494;
  double t8495;
  double t8500;
  double t8501;
  double t8511;
  double t8520;
  double t8521;
  double t8522;
  double t8530;
  double t8531;
  double t8538;
  double t8540;
  double t6080;
  double t6081;
  double t6087;
  double t6096;
  double t7861;
  double t7864;
  double t7865;
  double t7079;
  double t7083;
  double t7092;
  double t8549;
  double t8550;
  double t8551;
  double t8552;
  double t8648;
  double t8652;
  double t8653;
  double t8654;
  double t8664;
  double t8674;
  double t8676;
  double t8677;
  double t8577;
  double t8578;
  double t8579;
  double t8580;
  double t4935;
  double t4946;
  double t4963;
  double t8603;
  double t8604;
  double t7924;
  double t7929;
  double t7930;
  double t7268;
  double t7276;
  double t7286;
  double t8763;
  double t8765;
  double t8766;
  double t8767;
  double t8782;
  double t8783;
  double t8784;
  double t8787;
  double t5276;
  double t5288;
  double t5293;
  double t7377;
  double t7379;
  double t7380;
  double t7381;
  double t8852;
  double t8855;
  double t8856;
  double t8857;
  double t5464;
  double t5466;
  double t5471;
  double t5472;
  double t7594;
  double t7597;
  double t7599;
  double t7602;
  double t8129;
  double t8130;
  double t8131;
  double t8135;
  double t8922;
  double t8923;
  double t8924;
  double t8925;
  double t8927;
  double t8928;
  double t8929;
  double t8933;
  double t6219;
  double t6231;
  double t6236;
  double t6239;
  double t9008;
  double t9009;
  double t9011;
  double t9013;
  double t9018;
  double t9019;
  double t9021;
  double t9025;
  double t9026;
  double t9012;
  double t9020;
  double t9027;
  double t9031;
  double t9033;
  double t9034;
  double t9035;
  double t9036;
  double t8594;
  double t8595;
  double t8596;
  double t8601;
  double t8523;
  double t8524;
  double t8527;
  double t8528;
  double t8861;
  double t8862;
  double t8863;
  double t8867;
  double t9094;
  double t9095;
  double t9096;
  double t9097;
  double t9099;
  double t9101;
  double t9103;
  double t9104;
  double t8616;
  double t8623;
  double t8624;
  double t8625;
  double t9106;
  double t9110;
  double t9111;
  double t9112;
  double t8564;
  double t8565;
  double t8566;
  double t8569;
  double t9114;
  double t9115;
  double t9116;
  double t9117;
  double t8874;
  double t8883;
  double t8884;
  double t8885;
  double t8502;
  double t8503;
  double t8504;
  double t8505;
  double t8557;
  double t8558;
  double t8561;
  double t8562;
  double t8637;
  double t8640;
  double t8641;
  double t8642;
  double t8713;
  double t8716;
  double t8717;
  double t8718;
  double t8682;
  double t8683;
  double t8684;
  double t8685;
  double t9146;
  double t9147;
  double t9151;
  double t9152;
  double t8737;
  double t8738;
  double t8741;
  double t8744;
  double t9155;
  double t9156;
  double t9157;
  double t9158;
  double t8656;
  double t8657;
  double t8658;
  double t8662;
  double t8688;
  double t8689;
  double t8690;
  double t8694;
  double t8753;
  double t8757;
  double t8758;
  double t8759;
  double t8823;
  double t8824;
  double t8825;
  double t8826;
  double t8794;
  double t8798;
  double t8799;
  double t8800;
  double t9187;
  double t9188;
  double t9189;
  double t9190;
  double t8841;
  double t8844;
  double t8845;
  double t8846;
  double t9193;
  double t9198;
  double t9199;
  double t9200;
  double t8769;
  double t8773;
  double t8774;
  double t8775;
  double t8807;
  double t8808;
  double t8811;
  double t8812;
  double t8889;
  double t8890;
  double t8891;
  double t8892;
  double t9230;
  double t9231;
  double t9232;
  double t9233;
  double t8899;
  double t8900;
  double t8904;
  double t8905;
  double t8970;
  double t8972;
  double t8973;
  double t8974;
  double t8941;
  double t8942;
  double t8944;
  double t8948;
  double t9263;
  double t9264;
  double t9265;
  double t9266;
  double t9268;
  double t9269;
  double t9270;
  double t9271;
  double t8982;
  double t8983;
  double t8987;
  double t8988;
  double t8960;
  double t8962;
  double t8963;
  double t8964;
  double t8935;
  double t8936;
  double t8938;
  double t8939;
  double t8954;
  double t8955;
  double t8956;
  double t8958;
  double t9041;
  double t9042;
  double t9043;
  double t9044;
  double t9056;
  double t9057;
  double t9061;
  double t9062;
  double t8997;
  double t8998;
  double t8999;
  double t9000;
  double t9046;
  double t9047;
  double t9048;
  double t9049;
  double t9314;
  double t9315;
  double t9316;
  double t9317;
  double t9324;
  double t9325;
  double t9326;
  double t9327;
  double t9002;
  double t9003;
  double t9004;
  double t9005;
  double t9064;
  double t9065;
  double t9066;
  double t9067;
  double t9342;
  double t9344;
  double t9346;
  double t9350;
  double t9354;
  double t9358;
  double t9360;
  double t9361;
  double t9362;
  double t9363;
  double t9395;
  double t9396;
  double t9397;
  double t9398;
  double t9400;
  double t9401;
  double t9403;
  double t9404;
  double t9434;
  double t9441;
  double t9442;
  double t9443;
  double t9445;
  double t9449;
  double t9456;
  double t9466;
  double t9502;
  double t9503;
  double t9507;
  double t9508;
  double t9510;
  double t9511;
  double t9512;
  double t9513;
  double t9578;
  double t9585;
  double t9586;
  double t9594;
  double t9596;
  double t9597;
  double t9607;
  double t9608;
  double t9657;
  double t9658;
  double t9659;
  double t9660;
  double t9652;
  double t9653;
  double t9654;
  double t9655;
  double t9226;
  double t9227;
  double t9228;
  t76 = Cos(var1[3]);
  t203 = Sin(var1[3]);
  t317 = Cos(var1[4]);
  t366 = Sin(var1[4]);
  t716 = Cos(var1[5]);
  t789 = Sin(var1[5]);
  t1243 = Cos(var1[6]);
  t1254 = Sin(var1[6]);
  t1400 = t716*t203*t366;
  t1401 = -1.*t76*t789;
  t1406 = t1400 + t1401;
  t1358 = t76*t716;
  t1360 = t203*t366*t789;
  t1387 = t1358 + t1360;
  t1003 = -1.*t76*t716;
  t1024 = -1.*t203*t366*t789;
  t1030 = t1003 + t1024;
  t823 = -1.*t716*t203*t366;
  t827 = t76*t789;
  t829 = t823 + t827;
  t1045 = t76*t716*t366;
  t1049 = t203*t789;
  t1061 = t1045 + t1049;
  t1247 = t317*t1243*t789;
  t1267 = -1.*t317*t716*t1254;
  t1273 = t1247 + t1267;
  t1559 = -1.*t1243;
  t1564 = 1. + t1559;
  t1608 = 0.091*t1564;
  t1616 = 0. + t1608;
  t1664 = 0.091*t1254;
  t1666 = 0. + t1664;
  t1620 = -1.*t716*t203;
  t1621 = t76*t366*t789;
  t1641 = t1620 + t1621;
  t1661 = t1616*t1641;
  t1669 = t1061*t1666;
  t1673 = t1661 + t1669;
  t1293 = t317*t716*t1243;
  t1298 = t317*t789*t1254;
  t1313 = t1293 + t1298;
  t1714 = -1.*var1[2];
  t1724 = -1.*t317*t1616*t789;
  t1739 = -1.*t317*t716*t1666;
  t1750 = 0. + t1714 + t1724 + t1739;
  t1965 = t317*t1616*t203*t789;
  t1996 = t317*t716*t203*t1666;
  t2010 = t1965 + t1996;
  t2068 = t1616*t1387;
  t2081 = t1406*t1666;
  t2085 = 0. + var1[1] + t2068 + t2081;
  t2195 = t1616*t366*t789;
  t2199 = t716*t366*t1666;
  t2232 = t2195 + t2199;
  t774 = t716*t203;
  t799 = -1.*t76*t366*t789;
  t802 = t774 + t799;
  t1852 = t1243*t1061;
  t2242 = t1243*t1387;
  t2246 = -1.*t1406*t1254;
  t2253 = t2242 + t2246;
  t2374 = t1243*t1406;
  t2529 = t1616*t1406;
  t2531 = t1030*t1666;
  t2534 = t2529 + t2531;
  t1493 = t1243*t1030;
  t1419 = t1406*t1254;
  t2631 = -1.*t317*t716*t1616;
  t2645 = t317*t789*t1666;
  t2650 = t2631 + t2645;
  t2376 = t1387*t1254;
  t2386 = t2374 + t2376;
  t1757 = t1243*t1641;
  t1775 = -1.*t1061*t1254;
  t1783 = t1757 + t1775;
  t1431 = -1.*t1243*t1406;
  t1436 = -1.*t1387*t1254;
  t1453 = t1431 + t1436;
  t2896 = 0.091*t1243*t1406;
  t2915 = 0.091*t1387*t1254;
  t2920 = t2896 + t2915;
  t2871 = -0.091*t317*t716*t1243;
  t2875 = -0.091*t317*t789*t1254;
  t2881 = t2871 + t2875;
  t2724 = -1.*t317*t1243*t789;
  t2727 = t317*t716*t1254;
  t2731 = t2724 + t2727;
  t2843 = -1.*t317*t716*t1243;
  t2857 = -1.*t317*t789*t1254;
  t2862 = t2843 + t2857;
  t1856 = t1641*t1254;
  t1864 = t1852 + t1856;
  t2033 = t317*t1243*t203*t789;
  t2037 = -1.*t317*t716*t203*t1254;
  t2041 = t2033 + t2037;
  t2320 = t317*t716*t1243*t203;
  t2332 = t317*t203*t789*t1254;
  t2333 = t2320 + t2332;
  t1922 = t76*t317*t1243*t789;
  t1924 = -1.*t76*t317*t716*t1254;
  t1927 = t1922 + t1924;
  t2088 = -1.*t1243*t366*t789;
  t2115 = t716*t366*t1254;
  t2120 = t2088 + t2115;
  t3130 = -1.*t76*t317*t1616*t789;
  t3136 = -1.*t76*t317*t716*t1666;
  t3138 = t3130 + t3136;
  t3142 = t317*t1616*t789;
  t3165 = t317*t716*t1666;
  t3166 = 0. + var1[2] + t3142 + t3165;
  t1944 = t76*t317*t716*t1243;
  t1954 = t76*t317*t789*t1254;
  t1955 = t1944 + t1954;
  t3172 = -1.*var1[0];
  t3176 = -1.*t1616*t1641;
  t3181 = -1.*t1061*t1666;
  t3184 = 0. + t3172 + t3176 + t3181;
  t2343 = -1.*t716*t1243*t366;
  t2351 = -1.*t366*t789*t1254;
  t2359 = t2343 + t2351;
  t3186 = -1.*t1616*t366*t789;
  t3191 = -1.*t716*t366*t1666;
  t3192 = t3186 + t3191;
  t2769 = t1493 + t1419;
  t2670 = -1.*t1030*t1254;
  t2700 = t2374 + t2670;
  t2482 = -1.*t802*t1254;
  t2492 = t1852 + t2482;
  t3274 = -1.*t1616*t1061;
  t3281 = -1.*t802*t1666;
  t3282 = t3274 + t3281;
  t2437 = t1243*t802;
  t2458 = t1061*t1254;
  t2460 = t2437 + t2458;
  t3290 = t317*t716*t1616;
  t3292 = -1.*t317*t789*t1666;
  t3295 = t3290 + t3292;
  t2789 = -1.*t1243*t1061;
  t2803 = -1.*t1641*t1254;
  t2811 = t2789 + t2803;
  t3462 = -0.091*t1243*t1061;
  t3466 = -0.091*t1641*t1254;
  t3467 = t3462 + t3466;
  t3407 = 0.091*t317*t716*t1243;
  t3422 = 0.091*t317*t789*t1254;
  t3428 = t3407 + t3422;
  t1499 = -1.*t829*t1254;
  t1513 = t1493 + t1499;
  t3533 = -1.*t1616*t1030;
  t3535 = -1.*t829*t1666;
  t3545 = t3533 + t3535;
  t1541 = t1243*t829;
  t1544 = t1030*t1254;
  t1552 = t1541 + t1544;
  t3681 = -1.*var1[1];
  t3682 = -1.*t1616*t1387;
  t3685 = -1.*t1406*t1666;
  t3693 = 0. + t3681 + t3682 + t3685;
  t3702 = 0. + var1[0] + t1661 + t1669;
  t3735 = -1.*t317*t1616*t203*t789;
  t3739 = -1.*t317*t716*t203*t1666;
  t3740 = t3735 + t3739;
  t3709 = t76*t317*t1616*t789;
  t3711 = t76*t317*t716*t1666;
  t3728 = t3709 + t3711;
  t3814 = t3176 + t3181;
  t3794 = t1616*t1030;
  t3795 = t829*t1666;
  t3797 = t3794 + t3795;
  t3888 = -1.*t1616*t1406;
  t3889 = -1.*t1030*t1666;
  t3894 = t3888 + t3889;
  t3866 = t1616*t1061;
  t3869 = t802*t1666;
  t3874 = t3866 + t3869;
  t4025 = -0.091*t1243*t1406;
  t4026 = -0.091*t1387*t1254;
  t4028 = t4025 + t4026;
  t3998 = 0.091*t1243*t1061;
  t4003 = 0.091*t1641*t1254;
  t4004 = t3998 + t4003;
  t3089 = 0.366501*t1783;
  t3105 = -0.930418*t1864;
  t3106 = t3089 + t3105;
  t4291 = Cos(var1[7]);
  t4303 = -1.*t4291;
  t4309 = 1. + t4303;
  t4376 = -0.134322983001*t4309;
  t4379 = 1. + t4376;
  t4409 = Sin(var1[7]);
  t4407 = -0.04500040093286238*t4309;
  t4417 = -0.930418*t4409;
  t4419 = 0. + t4417;
  t4424 = 0.07877663122399998*t4419;
  t4431 = -0.366501*t4409;
  t4437 = 0. + t4431;
  t4449 = 0.031030906668*t4437;
  t4454 = 0. + t4407 + t4424 + t4449;
  t4471 = -3.2909349868922137e-7*var1[7];
  t4477 = 0.03103092645718495*t4309;
  t4479 = 0.366501*t4409;
  t4483 = 0. + t4479;
  t4484 = -0.045000372235*t4483;
  t4489 = t4471 + t4477 + t4484;
  t4508 = 1.296332362046933e-7*var1[7];
  t4510 = 0.07877668146182712*t4309;
  t4522 = 0.930418*t4409;
  t4526 = 0. + t4522;
  t4528 = -0.045000372235*t4526;
  t4533 = t4508 + t4510 + t4528;
  t4719 = -0.340999127418*t4309*t2253;
  t4316 = -0.8656776547239999*t4309;
  t4317 = 1. + t4316;
  t4466 = t366*t4454;
  t4494 = -1.*t1313*t4489;
  t4535 = -1.*t1273*t4533;
  t4542 = 0. + t1714 + t1724 + t1739 + t4466 + t4494 + t4535;
  t4765 = -0.340999127418*t4309*t1273;
  t4593 = t317*t203*t4454;
  t4596 = t2386*t4489;
  t4621 = t2253*t4533;
  t4626 = 0. + var1[1] + t2068 + t2081 + t4593 + t4596 + t4621;
  t4643 = -1.*t1273*t4489;
  t4666 = -1.*t2862*t4533;
  t4712 = t2871 + t2875 + t4643 + t4666;
  t4752 = t2253*t4489;
  t4757 = t1453*t4533;
  t4764 = t2896 + t2915 + t4752 + t4757;
  t4910 = -0.340999127418*t4309*t1313;
  t4724 = t4379*t2386;
  t4726 = t317*t203*t4483;
  t4737 = t4719 + t4724 + t4726;
  t4767 = t4379*t1313;
  t4772 = -1.*t366*t4483;
  t4774 = t4765 + t4767 + t4772;
  t5073 = -1.*t2731*t4489;
  t5074 = -1.*t1313*t4533;
  t5082 = t2631 + t2645 + t5073 + t5074;
  t4853 = t4317*t2253;
  t4882 = -0.340999127418*t4309*t2386;
  t4887 = t317*t203*t4526;
  t4892 = t4853 + t4882 + t4887;
  t5096 = t2769*t4489;
  t5125 = t2700*t4533;
  t5144 = t2529 + t2531 + t5096 + t5125;
  t4909 = t4317*t1273;
  t4911 = -1.*t366*t4526;
  t4925 = t4909 + t4910 + t4911;
  t4312 = -0.340999127418*t4309*t1783;
  t5330 = t76*t317*t4454;
  t5333 = t1864*t4489;
  t5341 = t1783*t4533;
  t5357 = t1661 + t1669 + t5330 + t5333 + t5341;
  t5508 = -1.*t317*t203*t4483;
  t5532 = -1.*t317*t203*t4526;
  t5724 = t317*t4454;
  t5735 = -1.*t2359*t4489;
  t5742 = -1.*t2120*t4533;
  t5744 = t2195 + t2199 + t5724 + t5735 + t5742;
  t5753 = -1.*t203*t366*t4454;
  t5774 = t2333*t4489;
  t5794 = t2041*t4533;
  t5800 = t1965 + t1996 + t5753 + t5774 + t5794;
  t5457 = -1.000000637725*t4309;
  t5461 = 1. + t5457;
  t6364 = -0.0846680539949003*t4291;
  t6367 = -0.04500040093286238*t4409;
  t6378 = t6364 + t6367;
  t6412 = -0.016492681424499736*t4291;
  t6414 = 0.03103092645718495*t4409;
  t6416 = -3.2909349868922137e-7 + t6412 + t6414;
  t6476 = -0.04186915633414423*t4291;
  t6494 = 0.07877668146182712*t4409;
  t6500 = 1.296332362046933e-7 + t6476 + t6494;
  t6403 = t366*t6378;
  t6429 = -1.*t1313*t6416;
  t6505 = -1.*t1273*t6500;
  t6508 = t6403 + t6429 + t6505;
  t6516 = t317*t203*t6378;
  t6539 = t2386*t6416;
  t6540 = t2253*t6500;
  t6556 = t6516 + t6539 + t6540;
  t4787 = t4317*t1453;
  t4798 = t4719 + t4787;
  t4390 = t4379*t2253;
  t4391 = -0.340999127418*t4309*t1453;
  t4399 = t4390 + t4391;
  t4380 = t4379*t1783;
  t4384 = -0.340999127418*t4309*t2811;
  t4385 = t4380 + t4384;
  t4555 = t4379*t1273;
  t4556 = -0.340999127418*t4309*t2862;
  t4575 = t4555 + t4556;
  t5306 = t4379*t1864;
  t5307 = t76*t317*t4483;
  t5308 = t4312 + t5306 + t5307;
  t4328 = t4317*t2811;
  t4342 = t4312 + t4328;
  t6913 = -1.*t366*t4454;
  t6938 = t1313*t4489;
  t6941 = t1273*t4533;
  t6944 = 0. + var1[2] + t3142 + t3165 + t6913 + t6938 + t6941;
  t4815 = t4317*t2862;
  t4838 = t4765 + t4815;
  t6953 = -1.*t76*t317*t4454;
  t6965 = -1.*t1864*t4489;
  t6972 = -1.*t1783*t4533;
  t6976 = 0. + t3172 + t3176 + t3181 + t6953 + t6965 + t6972;
  t6990 = t1273*t4489;
  t6995 = t2862*t4533;
  t6996 = t3407 + t3422 + t6990 + t6995;
  t5389 = t4317*t1783;
  t5390 = -0.340999127418*t4309*t1864;
  t5391 = t76*t317*t4526;
  t5397 = t5389 + t5390 + t5391;
  t7002 = -1.*t1783*t4489;
  t7009 = -1.*t2811*t4533;
  t7011 = t3462 + t3466 + t7002 + t7009;
  t5174 = -0.340999127418*t4309*t2769;
  t5189 = t4317*t2700;
  t5196 = t5174 + t5189;
  t5021 = t4379*t2769;
  t5022 = -0.340999127418*t4309*t2700;
  t5029 = t5021 + t5022;
  t4990 = t4379*t2460;
  t4996 = -0.340999127418*t4309*t2492;
  t5015 = t4990 + t4996;
  t5048 = t4379*t2731;
  t5061 = t5048 + t4910;
  t4971 = -0.340999127418*t4309*t2460;
  t4972 = t4317*t2492;
  t4985 = t4971 + t4972;
  t5214 = -0.340999127418*t4309*t2731;
  t5223 = t4317*t1313;
  t5226 = t5214 + t5223;
  t7179 = t2731*t4489;
  t7198 = t1313*t4533;
  t7201 = t3290 + t3292 + t7179 + t7198;
  t7209 = -1.*t2460*t4489;
  t7212 = -1.*t2492*t4533;
  t7213 = t3274 + t3281 + t7209 + t7212;
  t5487 = -0.340999127418*t4309*t1513;
  t5497 = t4379*t1552;
  t5509 = t5487 + t5497 + t5508;
  t5518 = t4317*t1513;
  t5520 = -0.340999127418*t4309*t1552;
  t5554 = t5518 + t5520 + t5532;
  t7313 = -1.*t1552*t4489;
  t7323 = -1.*t1513*t4533;
  t7329 = t3533 + t3535 + t4593 + t7313 + t7323;
  t5689 = -0.340999127418*t4309*t2120;
  t5693 = t4379*t2359;
  t5711 = -1.*t317*t4483;
  t5718 = t5689 + t5693 + t5711;
  t6114 = -0.340999127418*t4309*t1927;
  t6124 = t4379*t1955;
  t6131 = -1.*t76*t366*t4483;
  t6147 = t6114 + t6124 + t6131;
  t5961 = t4317*t2120;
  t5963 = -0.340999127418*t4309*t2359;
  t5974 = -1.*t317*t4526;
  t5975 = t5961 + t5963 + t5974;
  t7491 = -1.*t317*t4454;
  t7494 = t2359*t4489;
  t7495 = t2120*t4533;
  t7509 = t3186 + t3191 + t7491 + t7494 + t7495;
  t7512 = t76*t366*t4454;
  t7514 = -1.*t1955*t4489;
  t7516 = -1.*t1927*t4533;
  t7517 = t3130 + t3136 + t7512 + t7514 + t7516;
  t6154 = t4317*t1927;
  t6164 = -0.340999127418*t4309*t1955;
  t6174 = -1.*t76*t366*t4526;
  t6182 = t6154 + t6164 + t6174;
  t5810 = -0.340999127418*t4309*t2041;
  t5842 = t4379*t2333;
  t5845 = -1.*t203*t366*t4483;
  t5866 = t5810 + t5842 + t5845;
  t6004 = t4317*t2041;
  t6005 = -0.340999127418*t4309*t2333;
  t6010 = -1.*t203*t366*t4526;
  t6021 = t6004 + t6005 + t6010;
  t6665 = 0.930418*t317*t4291*t203;
  t6684 = -0.8656776547239999*t2253*t4409;
  t6689 = -0.340999127418*t2386*t4409;
  t6692 = t6665 + t6684 + t6689;
  t6789 = 0.366501*t317*t4291*t203;
  t6792 = -0.340999127418*t2253*t4409;
  t6815 = -0.134322983001*t2386*t4409;
  t6825 = t6789 + t6792 + t6815;
  t6631 = -0.930418*t4291*t366;
  t6641 = -0.8656776547239999*t1273*t4409;
  t6650 = -0.340999127418*t1313*t4409;
  t6657 = t6631 + t6641 + t6650;
  t6253 = 0.930418*t76*t317*t4291;
  t6263 = -0.8656776547239999*t1783*t4409;
  t6270 = -0.340999127418*t1864*t4409;
  t6272 = t6253 + t6263 + t6270;
  t7628 = -1.*t366*t6378;
  t7629 = t1313*t6416;
  t7632 = t1273*t6500;
  t7633 = t7628 + t7629 + t7632;
  t7640 = -1.*t76*t317*t6378;
  t7641 = -1.*t1864*t6416;
  t7644 = -1.*t1783*t6500;
  t7653 = t7640 + t7641 + t7644;
  t6735 = -0.366501*t4291*t366;
  t6737 = -0.340999127418*t1273*t4409;
  t6748 = -0.134322983001*t1313*t4409;
  t6756 = t6735 + t6737 + t6748;
  t6318 = 0.366501*t76*t317*t4291;
  t6332 = -0.340999127418*t1783*t4409;
  t6334 = -0.134322983001*t1864*t4409;
  t6344 = t6318 + t6332 + t6334;
  t7722 = -1.*t317*t203*t4454;
  t7709 = t3176 + t3181 + t6953 + t6965 + t6972;
  t7717 = 0. + var1[0] + t1661 + t1669 + t5330 + t5333 + t5341;
  t7723 = -1.*t2386*t4489;
  t7725 = -1.*t2253*t4533;
  t7727 = 0. + t3681 + t3682 + t3685 + t7722 + t7723 + t7725;
  t7743 = t1552*t4489;
  t7744 = t1513*t4533;
  t7754 = t3794 + t3795 + t7722 + t7743 + t7744;
  t7805 = -1.*t2253*t4489;
  t7809 = -1.*t1453*t4533;
  t7810 = t4025 + t4026 + t7805 + t7809;
  t7825 = t1783*t4489;
  t7827 = t2811*t4533;
  t7831 = t3998 + t4003 + t7825 + t7827;
  t7885 = -1.*t2769*t4489;
  t7892 = -1.*t2700*t4533;
  t7893 = t3888 + t3889 + t7885 + t7892;
  t7898 = t2460*t4489;
  t7899 = t2492*t4533;
  t7901 = t3866 + t3869 + t7898 + t7899;
  t7951 = t203*t366*t4454;
  t7958 = -1.*t2333*t4489;
  t7959 = -1.*t2041*t4533;
  t7967 = t3735 + t3739 + t7951 + t7958 + t7959;
  t7972 = -1.*t76*t366*t4454;
  t7975 = t1955*t4489;
  t7978 = t1927*t4533;
  t7987 = t3709 + t3711 + t7972 + t7975 + t7978;
  t8141 = -1.*t317*t203*t6378;
  t8144 = -1.*t2386*t6416;
  t8146 = -1.*t2253*t6500;
  t8147 = t8141 + t8144 + t8146;
  t8150 = t76*t317*t6378;
  t8154 = t1864*t6416;
  t8156 = t1783*t6500;
  t8158 = t8150 + t8154 + t8156;
  t7434 = 0.366501*t5308;
  t7440 = 0.930418*t5397;
  t7442 = t7434 + t7440;
  t8368 = Cos(var1[8]);
  t8370 = -1.*t8368;
  t8371 = 1. + t8370;
  t8382 = -1.*t5461*t366;
  t8383 = t1273*t4419;
  t8385 = t1313*t4437;
  t8394 = t8382 + t8383 + t8385;
  t8397 = Sin(var1[8]);
  t8398 = -0.366501*t8397;
  t8401 = 0. + t8398;
  t7544 = -1.*t5461*t203*t366;
  t7545 = t2041*t4419;
  t7563 = t2333*t4437;
  t7571 = t7544 + t7545 + t7563;
  t8423 = 0.930418*t8397;
  t8424 = 0. + t8423;
  t8376 = 0.340999127418*t8371*t4774;
  t8379 = -0.134322983001*t8371;
  t8380 = 1. + t8379;
  t8381 = t8380*t4925;
  t8408 = t8394*t8401;
  t8411 = t8376 + t8381 + t8408;
  t8446 = 3.2909349868922137e-7*var1[8];
  t8447 = 0.055653945343889656*t8371;
  t8448 = -0.045000372235*t8401;
  t8449 = t8446 + t8447 + t8448;
  t8453 = -0.04500040093286238*t8371;
  t8463 = -0.930418*t8397;
  t8464 = 0. + t8463;
  t8467 = -0.141285834136*t8464;
  t8468 = 0.366501*t8397;
  t8471 = 0. + t8468;
  t8472 = 0.055653909852*t8471;
  t8473 = 0. + t8453 + t8467 + t8472;
  t8480 = 1.296332362046933e-7*var1[8];
  t8483 = -0.14128592423750855*t8371;
  t8486 = -0.045000372235*t8424;
  t8487 = t8480 + t8483 + t8486;
  t8049 = -1.*t317*t5461;
  t8051 = t2120*t4419;
  t8054 = t2359*t4437;
  t8059 = t8049 + t8051 + t8054;
  t8512 = t317*t5461*t203;
  t8513 = t2253*t4419;
  t8514 = t2386*t4437;
  t8519 = t8512 + t8513 + t8514;
  t8451 = t6021*t8449;
  t8474 = t7571*t8473;
  t8488 = t5866*t8487;
  t8492 = t1965 + t1996 + t5753 + t5774 + t5794 + t8451 + t8474 + t8488;
  t8416 = -0.8656776547239999*t8371;
  t8417 = 1. + t8416;
  t8418 = t8417*t4774;
  t8421 = 0.340999127418*t8371*t4925;
  t8425 = t8394*t8424;
  t8436 = t8418 + t8421 + t8425;
  t8494 = -1.*t4925*t8449;
  t8495 = -1.*t8394*t8473;
  t8500 = -1.*t4774*t8487;
  t8501 = 0. + t1714 + t1724 + t1739 + t4466 + t4494 + t4535 + t8494 + t8495 + t8500;
  t8511 = t4892*t8449;
  t8520 = t8519*t8473;
  t8521 = t4737*t8487;
  t8522 = 0. + var1[1] + t2068 + t2081 + t4593 + t4596 + t4621 + t8511 + t8520 + t8521;
  t8530 = -1.*t5975*t8449;
  t8531 = -1.*t8059*t8473;
  t8538 = -1.*t5718*t8487;
  t8540 = t2195 + t2199 + t5724 + t5735 + t5742 + t8530 + t8531 + t8538;
  t6080 = -1.*t76*t5461*t366;
  t6081 = t1927*t4419;
  t6087 = t1955*t4437;
  t6096 = t6080 + t6081 + t6087;
  t7861 = t2862*t4419;
  t7864 = t1273*t4437;
  t7865 = t7861 + t7864;
  t7079 = t1453*t4419;
  t7083 = t2253*t4437;
  t7092 = t7079 + t7083;
  t8549 = 0.340999127418*t8371*t4737;
  t8550 = t8380*t4892;
  t8551 = t8519*t8401;
  t8552 = t8549 + t8550 + t8551;
  t8648 = t4798*t8449;
  t8652 = t7092*t8473;
  t8653 = t4399*t8487;
  t8654 = t2896 + t2915 + t4752 + t4757 + t8648 + t8652 + t8653;
  t8664 = -1.*t4838*t8449;
  t8674 = -1.*t7865*t8473;
  t8676 = -1.*t4575*t8487;
  t8677 = t2871 + t2875 + t4643 + t4666 + t8664 + t8674 + t8676;
  t8577 = t8417*t4737;
  t8578 = 0.340999127418*t8371*t4892;
  t8579 = t8519*t8424;
  t8580 = t8577 + t8578 + t8579;
  t4935 = t2811*t4419;
  t4946 = t1783*t4437;
  t4963 = t4935 + t4946;
  t8603 = -1.000000637725*t8371;
  t8604 = 1. + t8603;
  t7924 = t1313*t4419;
  t7929 = t2731*t4437;
  t7930 = t7924 + t7929;
  t7268 = t2700*t4419;
  t7276 = t2769*t4437;
  t7286 = t7268 + t7276;
  t8763 = t5196*t8449;
  t8765 = t7286*t8473;
  t8766 = t5029*t8487;
  t8767 = t2529 + t2531 + t5096 + t5125 + t8763 + t8765 + t8766;
  t8782 = -1.*t5226*t8449;
  t8783 = -1.*t7930*t8473;
  t8784 = -1.*t5061*t8487;
  t8787 = t2631 + t2645 + t5073 + t5074 + t8782 + t8783 + t8784;
  t5276 = t2492*t4419;
  t5288 = t2460*t4437;
  t5293 = t5276 + t5288;
  t7377 = t76*t317*t5461;
  t7379 = t1783*t4419;
  t7380 = t1864*t4437;
  t7381 = t7377 + t7379 + t7380;
  t8852 = t5397*t8449;
  t8855 = t7381*t8473;
  t8856 = t5308*t8487;
  t8857 = t1661 + t1669 + t5330 + t5333 + t5341 + t8852 + t8855 + t8856;
  t5464 = -1.*t317*t5461*t203;
  t5466 = t1513*t4419;
  t5471 = t1552*t4437;
  t5472 = t5464 + t5466 + t5471;
  t7594 = -0.930418*t4291*t2253;
  t7597 = -0.366501*t4291*t2386;
  t7599 = -1.000000637725*t317*t203*t4409;
  t7602 = t7594 + t7597 + t7599;
  t8129 = -0.930418*t4291*t1273;
  t8130 = -0.366501*t4291*t1313;
  t8131 = 1.000000637725*t366*t4409;
  t8135 = t8129 + t8130 + t8131;
  t8922 = t6692*t8449;
  t8923 = t7602*t8473;
  t8924 = t6825*t8487;
  t8925 = t6516 + t6539 + t6540 + t8922 + t8923 + t8924;
  t8927 = -1.*t6657*t8449;
  t8928 = -1.*t8135*t8473;
  t8929 = -1.*t6756*t8487;
  t8933 = t6403 + t6429 + t6505 + t8927 + t8928 + t8929;
  t6219 = -0.930418*t4291*t1783;
  t6231 = -0.366501*t4291*t1864;
  t6236 = -1.000000637725*t76*t317*t4409;
  t6239 = t6219 + t6231 + t6236;
  t9008 = -0.04186915633414423*t8368;
  t9009 = -0.14128592423750855*t8397;
  t9011 = 1.296332362046933e-7 + t9008 + t9009;
  t9013 = 0.15185209683981668*t8368;
  t9018 = -0.04500040093286238*t8397;
  t9019 = t9013 + t9018;
  t9021 = 0.016492681424499736*t8368;
  t9025 = 0.055653945343889656*t8397;
  t9026 = 3.2909349868922137e-7 + t9021 + t9025;
  t9012 = t4737*t9011;
  t9020 = t8519*t9019;
  t9027 = t4892*t9026;
  t9031 = t9012 + t9020 + t9027;
  t9033 = -1.*t4774*t9011;
  t9034 = -1.*t8394*t9019;
  t9035 = -1.*t4925*t9026;
  t9036 = t9033 + t9034 + t9035;
  t8594 = 0.340999127418*t8371*t6147;
  t8595 = t8380*t6182;
  t8596 = t6096*t8401;
  t8601 = t8594 + t8595 + t8596;
  t8523 = 0.340999127418*t8371*t5718;
  t8524 = t8380*t5975;
  t8527 = t8059*t8401;
  t8528 = t8523 + t8524 + t8527;
  t8861 = 0.340999127418*t8371*t5308;
  t8862 = t8380*t5397;
  t8863 = t7381*t8401;
  t8867 = t8861 + t8862 + t8863;
  t9094 = -1.*t6182*t8449;
  t9095 = -1.*t6096*t8473;
  t9096 = -1.*t6147*t8487;
  t9097 = t3130 + t3136 + t7512 + t7514 + t7516 + t9094 + t9095 + t9096;
  t9099 = t4925*t8449;
  t9101 = t8394*t8473;
  t9103 = t4774*t8487;
  t9104 = 0. + var1[2] + t3142 + t3165 + t6913 + t6938 + t6941 + t9099 + t9101 + t9103;
  t8616 = t8417*t6147;
  t8623 = 0.340999127418*t8371*t6182;
  t8624 = t6096*t8424;
  t8625 = t8616 + t8623 + t8624;
  t9106 = -1.*t5397*t8449;
  t9110 = -1.*t7381*t8473;
  t9111 = -1.*t5308*t8487;
  t9112 = 0. + t3172 + t3176 + t3181 + t6953 + t6965 + t6972 + t9106 + t9110 + t9111;
  t8564 = t8417*t5718;
  t8565 = 0.340999127418*t8371*t5975;
  t8566 = t8059*t8424;
  t8569 = t8564 + t8565 + t8566;
  t9114 = t5975*t8449;
  t9115 = t8059*t8473;
  t9116 = t5718*t8487;
  t9117 = t3186 + t3191 + t7491 + t7494 + t7495 + t9114 + t9115 + t9116;
  t8874 = t8417*t5308;
  t8883 = 0.340999127418*t8371*t5397;
  t8884 = t7381*t8424;
  t8885 = t8874 + t8883 + t8884;
  t8502 = 0.340999127418*t8371*t5866;
  t8503 = t8380*t6021;
  t8504 = t7571*t8401;
  t8505 = t8502 + t8503 + t8504;
  t8557 = t8417*t5866;
  t8558 = 0.340999127418*t8371*t6021;
  t8561 = t7571*t8424;
  t8562 = t8557 + t8558 + t8561;
  t8637 = t8380*t4838;
  t8640 = 0.340999127418*t8371*t4575;
  t8641 = t7865*t8401;
  t8642 = t8637 + t8640 + t8641;
  t8713 = t8380*t4342;
  t8716 = 0.340999127418*t8371*t4385;
  t8717 = t4963*t8401;
  t8718 = t8713 + t8716 + t8717;
  t8682 = 0.340999127418*t8371*t4838;
  t8683 = t8417*t4575;
  t8684 = t7865*t8424;
  t8685 = t8682 + t8683 + t8684;
  t9146 = -1.*t4342*t8449;
  t9147 = -1.*t4963*t8473;
  t9151 = -1.*t4385*t8487;
  t9152 = t3462 + t3466 + t7002 + t7009 + t9146 + t9147 + t9151;
  t8737 = 0.340999127418*t8371*t4342;
  t8738 = t8417*t4385;
  t8741 = t4963*t8424;
  t8744 = t8737 + t8738 + t8741;
  t9155 = t4838*t8449;
  t9156 = t7865*t8473;
  t9157 = t4575*t8487;
  t9158 = t3407 + t3422 + t6990 + t6995 + t9155 + t9156 + t9157;
  t8656 = t8380*t4798;
  t8657 = 0.340999127418*t8371*t4399;
  t8658 = t7092*t8401;
  t8662 = t8656 + t8657 + t8658;
  t8688 = 0.340999127418*t8371*t4798;
  t8689 = t8417*t4399;
  t8690 = t7092*t8424;
  t8694 = t8688 + t8689 + t8690;
  t8753 = t8380*t5226;
  t8757 = 0.340999127418*t8371*t5061;
  t8758 = t7930*t8401;
  t8759 = t8753 + t8757 + t8758;
  t8823 = t8380*t4985;
  t8824 = 0.340999127418*t8371*t5015;
  t8825 = t5293*t8401;
  t8826 = t8823 + t8824 + t8825;
  t8794 = 0.340999127418*t8371*t5226;
  t8798 = t8417*t5061;
  t8799 = t7930*t8424;
  t8800 = t8794 + t8798 + t8799;
  t9187 = -1.*t4985*t8449;
  t9188 = -1.*t5293*t8473;
  t9189 = -1.*t5015*t8487;
  t9190 = t3274 + t3281 + t7209 + t7212 + t9187 + t9188 + t9189;
  t8841 = 0.340999127418*t8371*t4985;
  t8844 = t8417*t5015;
  t8845 = t5293*t8424;
  t8846 = t8841 + t8844 + t8845;
  t9193 = t5226*t8449;
  t9198 = t7930*t8473;
  t9199 = t5061*t8487;
  t9200 = t3290 + t3292 + t7179 + t7198 + t9193 + t9198 + t9199;
  t8769 = t8380*t5196;
  t8773 = 0.340999127418*t8371*t5029;
  t8774 = t7286*t8401;
  t8775 = t8769 + t8773 + t8774;
  t8807 = 0.340999127418*t8371*t5196;
  t8808 = t8417*t5029;
  t8811 = t7286*t8424;
  t8812 = t8807 + t8808 + t8811;
  t8889 = 0.340999127418*t8371*t5509;
  t8890 = t8380*t5554;
  t8891 = t5472*t8401;
  t8892 = t8889 + t8890 + t8891;
  t9230 = -1.*t5554*t8449;
  t9231 = -1.*t5472*t8473;
  t9232 = -1.*t5509*t8487;
  t9233 = t3533 + t3535 + t4593 + t7313 + t7323 + t9230 + t9231 + t9232;
  t8899 = t8417*t5509;
  t8900 = 0.340999127418*t8371*t5554;
  t8904 = t5472*t8424;
  t8905 = t8899 + t8900 + t8904;
  t8970 = t8380*t6272;
  t8972 = 0.340999127418*t8371*t6344;
  t8973 = t6239*t8401;
  t8974 = t8970 + t8972 + t8973;
  t8941 = t8380*t6657;
  t8942 = 0.340999127418*t8371*t6756;
  t8944 = t8135*t8401;
  t8948 = t8941 + t8942 + t8944;
  t9263 = -1.*t6272*t8449;
  t9264 = -1.*t6239*t8473;
  t9265 = -1.*t6344*t8487;
  t9266 = t7640 + t7641 + t7644 + t9263 + t9264 + t9265;
  t9268 = t6657*t8449;
  t9269 = t8135*t8473;
  t9270 = t6756*t8487;
  t9271 = t7628 + t7629 + t7632 + t9268 + t9269 + t9270;
  t8982 = 0.340999127418*t8371*t6272;
  t8983 = t8417*t6344;
  t8987 = t6239*t8424;
  t8988 = t8982 + t8983 + t8987;
  t8960 = 0.340999127418*t8371*t6657;
  t8962 = t8417*t6756;
  t8963 = t8135*t8424;
  t8964 = t8960 + t8962 + t8963;
  t8935 = t8380*t6692;
  t8936 = 0.340999127418*t8371*t6825;
  t8938 = t7602*t8401;
  t8939 = t8935 + t8936 + t8938;
  t8954 = 0.340999127418*t8371*t6692;
  t8955 = t8417*t6825;
  t8956 = t7602*t8424;
  t8958 = t8954 + t8955 + t8956;
  t9041 = -0.366501*t8368*t8519;
  t9042 = 0.340999127418*t4737*t8397;
  t9043 = -0.134322983001*t4892*t8397;
  t9044 = t9041 + t9042 + t9043;
  t9056 = 0.930418*t8368*t8519;
  t9057 = -0.8656776547239999*t4737*t8397;
  t9061 = 0.340999127418*t4892*t8397;
  t9062 = t9056 + t9057 + t9061;
  t8997 = -0.366501*t8368*t7381;
  t8998 = 0.340999127418*t5308*t8397;
  t8999 = -0.134322983001*t5397*t8397;
  t9000 = t8997 + t8998 + t8999;
  t9046 = -0.366501*t8368*t8394;
  t9047 = 0.340999127418*t4774*t8397;
  t9048 = -0.134322983001*t4925*t8397;
  t9049 = t9046 + t9047 + t9048;
  t9314 = -1.*t5308*t9011;
  t9315 = -1.*t7381*t9019;
  t9316 = -1.*t5397*t9026;
  t9317 = t9314 + t9315 + t9316;
  t9324 = t4774*t9011;
  t9325 = t8394*t9019;
  t9326 = t4925*t9026;
  t9327 = t9324 + t9325 + t9326;
  t9002 = 0.930418*t8368*t7381;
  t9003 = -0.8656776547239999*t5308*t8397;
  t9004 = 0.340999127418*t5397*t8397;
  t9005 = t9002 + t9003 + t9004;
  t9064 = 0.930418*t8368*t8394;
  t9065 = -0.8656776547239999*t4774*t8397;
  t9066 = 0.340999127418*t4925*t8397;
  t9067 = t9064 + t9065 + t9066;
  t9342 = t3176 + t3181 + t6953 + t6965 + t6972 + t9106 + t9110 + t9111;
  t9344 = 0. + var1[0] + t1661 + t1669 + t5330 + t5333 + t5341 + t8852 + t8855 + t8856;
  t9346 = -1.*t4892*t8449;
  t9350 = -1.*t8519*t8473;
  t9354 = -1.*t4737*t8487;
  t9358 = 0. + t3681 + t3682 + t3685 + t7722 + t7723 + t7725 + t9346 + t9350 + t9354;
  t9360 = t5554*t8449;
  t9361 = t5472*t8473;
  t9362 = t5509*t8487;
  t9363 = t3794 + t3795 + t7722 + t7743 + t7744 + t9360 + t9361 + t9362;
  t9395 = -1.*t4798*t8449;
  t9396 = -1.*t7092*t8473;
  t9397 = -1.*t4399*t8487;
  t9398 = t4025 + t4026 + t7805 + t7809 + t9395 + t9396 + t9397;
  t9400 = t4342*t8449;
  t9401 = t4963*t8473;
  t9403 = t4385*t8487;
  t9404 = t3998 + t4003 + t7825 + t7827 + t9400 + t9401 + t9403;
  t9434 = -1.*t5196*t8449;
  t9441 = -1.*t7286*t8473;
  t9442 = -1.*t5029*t8487;
  t9443 = t3888 + t3889 + t7885 + t7892 + t9434 + t9441 + t9442;
  t9445 = t4985*t8449;
  t9449 = t5293*t8473;
  t9456 = t5015*t8487;
  t9466 = t3866 + t3869 + t7898 + t7899 + t9445 + t9449 + t9456;
  t9502 = -1.*t6021*t8449;
  t9503 = -1.*t7571*t8473;
  t9507 = -1.*t5866*t8487;
  t9508 = t3735 + t3739 + t7951 + t7958 + t7959 + t9502 + t9503 + t9507;
  t9510 = t6182*t8449;
  t9511 = t6096*t8473;
  t9512 = t6147*t8487;
  t9513 = t3709 + t3711 + t7972 + t7975 + t7978 + t9510 + t9511 + t9512;
  t9578 = -1.*t6692*t8449;
  t9585 = -1.*t7602*t8473;
  t9586 = -1.*t6825*t8487;
  t9594 = t8141 + t8144 + t8146 + t9578 + t9585 + t9586;
  t9596 = t6272*t8449;
  t9597 = t6239*t8473;
  t9607 = t6344*t8487;
  t9608 = t8150 + t8154 + t8156 + t9596 + t9597 + t9607;
  t9657 = -1.*t4737*t9011;
  t9658 = -1.*t8519*t9019;
  t9659 = -1.*t4892*t9026;
  t9660 = t9657 + t9658 + t9659;
  t9652 = t5308*t9011;
  t9653 = t7381*t9019;
  t9654 = t5397*t9026;
  t9655 = t9652 + t9653 + t9654;
  t9226 = -0.930418*t8867;
  t9227 = -0.366501*t8885;
  t9228 = t9226 + t9227;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=var2[1];
  p_output1[19]=-1.*var2[0];
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=-1.*t76*var2[2] + t203*var1[2]*var2[3];
  p_output1[25]=-1.*t203*var2[2] - 1.*t76*var1[2]*var2[3];
  p_output1[26]=t76*var2[0] + t203*var2[1] + (-1.*t203*var1[0] + t76*var1[1])*var2[3];
  p_output1[27]=-1.*t76*var2[3];
  p_output1[28]=-1.*t203*var2[3];
  p_output1[29]=0;
  p_output1[30]=-1.*t366*var2[1] - 1.*t203*t317*var2[2] - 1.*t317*t76*var1[2]*var2[3] + (-1.*t317*var1[1] + t203*t366*var1[2])*var2[4];
  p_output1[31]=t366*var2[0] + t317*t76*var2[2] - 1.*t203*t317*var1[2]*var2[3] + (t317*var1[0] - 1.*t366*t76*var1[2])*var2[4];
  p_output1[32]=t203*t317*var2[0] - 1.*t317*t76*var2[1] + (t317*t76*var1[0] + t203*t317*var1[1])*var2[3] + (-1.*t203*t366*var1[0] + t366*t76*var1[1])*var2[4];
  p_output1[33]=-1.*t203*t317*var2[3] - 1.*t366*t76*var2[4];
  p_output1[34]=t317*t76*var2[3] - 1.*t203*t366*var2[4];
  p_output1[35]=-1.*t317*var2[4];
  p_output1[36]=t366*var2[1] + t203*t317*var2[2] + (0.091*t829 + t317*t76*var1[2])*var2[3] + (0.091*t317*t716*t76 + t317*var1[1] - 1.*t203*t366*var1[2])*var2[4] + 0.091*t802*var2[5];
  p_output1[37]=-1.*t366*var2[0] - 1.*t317*t76*var2[2] + (0.091*t1061 + t203*t317*var1[2])*var2[3] + (0.091*t203*t317*t716 - 1.*t317*var1[0] + t366*t76*var1[2])*var2[4] + 0.091*t1030*var2[5];
  p_output1[38]=-1.*t203*t317*var2[0] + t317*t76*var2[1] + (-1.*t317*t76*var1[0] - 1.*t203*t317*var1[1])*var2[3] + (-0.091*t366*t716 + t203*t366*var1[0] - 1.*t366*t76*var1[1])*var2[4] - 0.091*t317*t789*var2[5];
  p_output1[39]=t203*t317*var2[3] + t366*t76*var2[4];
  p_output1[40]=-1.*t317*t76*var2[3] + t203*t366*var2[4];
  p_output1[41]=t317*var2[4];
  p_output1[42]=(0.366501*t1273 - 0.930418*t1313)*var2[1] + (0.366501*(-1.*t1243*t1387 + t1419) - 0.930418*t1453)*var2[2] + (-0.041869*t1513 - 0.016493*t1552 + 0.366501*(t1273*t1673 + t1750*t1783) - 0.930418*(t1313*t1673 + t1750*t1864) + 0.084668*t203*t317)*var2[3] + (-0.041869*t1927 - 0.016493*t1955 + 0.366501*(t1273*t2010 + t1750*t2041 + t2085*t2120 + t2232*t2253) - 0.930418*(t1313*t2010 + t1750*t2333 + t2085*t2359 + t2232*t2386) + 0.084668*t366*t76)*var2[4] + (-0.016493*t2460 - 0.041869*t2492 + 0.366501*(t1313*t2085 + t1273*t2534 + t2253*t2650 + t1750*t2700) - 0.930418*(t1313*t2534 + t2386*t2650 + t2085*t2731 + t1750*t2769))*var2[5] + (-0.016493*t1783 - 0.041869*t2811 + 0.366501*(t1453*t1750 + t2085*t2862 + t2253*t2881 + t1273*t2920) - 0.930418*(t1273*t2085 + t1750*t2253 + t2386*t2881 + t1313*t2920))*var2[6];
  p_output1[43]=(0.366501*t2731 - 0.930418*t2862)*var2[0] + t3106*var2[2] + (-0.041869*t1783 - 0.016493*t1864 + 0.366501*(t1513*t3166 + t1273*t3545) - 0.930418*(t1552*t3166 + t1313*t3545) - 0.084668*t317*t76)*var2[3] + (-0.041869*t2041 - 0.016493*t2333 + 0.366501*(t1273*t3138 + t1927*t3166 + t2120*t3184 + t1783*t3192) - 0.930418*(t1313*t3138 + t1955*t3166 + t2359*t3184 + t1864*t3192) + 0.084668*t203*t366)*var2[4] + (-0.041869*t2700 - 0.016493*t2769 + 0.366501*(t2492*t3166 + t1313*t3184 + t1273*t3282 + t1783*t3295) - 0.930418*(t2460*t3166 + t2731*t3184 + t1313*t3282 + t1864*t3295))*var2[5] + (-0.041869*t1453 - 0.016493*t2253 + 0.366501*(t2811*t3166 + t2862*t3184 + t1783*t3428 + t1273*t3467) - 0.930418*(t1783*t3166 + t1273*t3184 + t1864*t3428 + t1313*t3467))*var2[6];
  p_output1[44]=(0.366501*t2253 - 0.930418*t2386)*var2[0] + (0.366501*(-1.*t1243*t1641 + t2458) - 0.930418*t2811)*var2[1] + (0.366501*(t1513*t3693 + t1783*t3702 + t2253*t3797 + t1783*t3814) - 0.930418*(t1552*t3693 + t1864*t3702 + t2386*t3797 + t1864*t3814))*var2[3] + (-0.041869*t2120 - 0.016493*t2359 + 0.084668*t317 + 0.366501*(t1927*t3693 + t2041*t3702 + t2253*t3728 + t1783*t3740) - 0.930418*(t1955*t3693 + t2333*t3702 + t2386*t3728 + t1864*t3740))*var2[4] + (-0.041869*t1313 - 0.016493*t2731 + 0.366501*(t2492*t3693 + t2700*t3702 + t2253*t3874 + t1783*t3894) - 0.930418*(t2460*t3693 + t2769*t3702 + t2386*t3874 + t1864*t3894))*var2[5] + (-0.016493*t1273 - 0.041869*t2862 + 0.366501*(t2811*t3693 + t1453*t3702 + t2253*t4004 + t1783*t4028) - 0.930418*(t1783*t3693 + t2253*t3702 + t2386*t4004 + t1864*t4028))*var2[6];
  p_output1[45]=(0.366501*t1513 - 0.930418*t1552)*var2[3] + (0.366501*t1927 - 0.930418*t1955)*var2[4] + (-0.930418*t2460 + 0.366501*t2492)*var2[5] + (-0.930418*t1783 + 0.366501*t2811)*var2[6];
  p_output1[46]=t3106*var2[3] + (0.366501*t2041 - 0.930418*t2333)*var2[4] + (0.366501*t2700 - 0.930418*t2769)*var2[5] + (0.366501*t1453 - 0.930418*t2253)*var2[6];
  p_output1[47]=(0.366501*t2120 - 0.930418*t2359)*var2[4] + (0.366501*t1313 - 0.930418*t2731)*var2[5] + (-0.930418*t1273 + 0.366501*t2862)*var2[6];
  p_output1[48]=(0.366501*t4774 + 0.930418*t4925)*var2[1] + (0.366501*(0.340999127418*t2253*t4309 - 1.*t2386*t4379 + t5508) + 0.930418*(0.340999127418*t2386*t4309 - 1.*t2253*t4317 + t5532))*var2[2] + (0.366501*(t4542*t5308 + t4774*t5357) + 0.930418*(t4925*t5357 + t4542*t5397) + 0.151852*t5472 - 0.041869*t5509 + 0.016493*t5554)*var2[3] + (0.366501*(t4626*t5718 + t4737*t5744 + t4774*t5800 + t4542*t5866) + 0.930418*(t4892*t5744 + t4925*t5800 + t4626*t5975 + t4542*t6021) + 0.151852*t6096 - 0.041869*t6147 + 0.016493*t6182)*var2[4] + (0.016493*t4985 - 0.041869*t5015 + 0.366501*(t4542*t5029 + t4626*t5061 + t4737*t5082 + t4774*t5144) + 0.930418*(t4892*t5082 + t4925*t5144 + t4542*t5196 + t4626*t5226) + 0.151852*t5293)*var2[5] + (0.016493*t4342 - 0.041869*t4385 + 0.366501*(t4399*t4542 + t4575*t4626 + t4712*t4737 + t4764*t4774) + 0.930418*(t4542*t4798 + t4626*t4838 + t4712*t4892 + t4764*t4925) + 0.151852*t4963)*var2[6] + (0.151852*t6239 + 0.016493*t6272 - 0.041869*t6344 + 0.930418*(t4892*t6508 + t4925*t6556 + t4626*t6657 + t4542*t6692) + 0.366501*(t4737*t6508 + t4774*t6556 + t4626*t6756 + t4542*t6825))*var2[7];
  p_output1[49]=(0.366501*(0.340999127418*t1273*t4309 - 1.*t1313*t4379 + t366*t4483) + 0.930418*(0.340999127418*t1313*t4309 - 1.*t1273*t4317 + t366*t4526))*var2[0] + t7442*var2[2] + (-0.041869*t5308 + 0.016493*t5397 + 0.366501*(t5509*t6944 + t4774*t7329) + 0.930418*(t5554*t6944 + t4925*t7329) + 0.151852*t7381)*var2[3] + (-0.041869*t5866 + 0.016493*t6021 + 0.366501*(t6147*t6944 + t5718*t6976 + t5308*t7509 + t4774*t7517) + 0.930418*(t6182*t6944 + t5975*t6976 + t5397*t7509 + t4925*t7517) + 0.151852*t7571)*var2[4] + (-0.041869*t5029 + 0.016493*t5196 + 0.366501*(t5015*t6944 + t5061*t6976 + t5308*t7201 + t4774*t7213) + 0.930418*(t4985*t6944 + t5226*t6976 + t5397*t7201 + t4925*t7213) + 0.151852*t7286)*var2[5] + (-0.041869*t4399 + 0.016493*t4798 + 0.366501*(t4385*t6944 + t4575*t6976 + t5308*t6996 + t4774*t7011) + 0.930418*(t4342*t6944 + t4838*t6976 + t5397*t6996 + t4925*t7011) + 0.151852*t7092)*var2[6] + (0.016493*t6692 - 0.041869*t6825 + 0.151852*t7602 + 0.366501*(t6344*t6944 + t6756*t6976 + t5308*t7633 + t4774*t7653) + 0.930418*(t6272*t6944 + t6657*t6976 + t5397*t7633 + t4925*t7653))*var2[7];
  p_output1[50]=(0.366501*t4737 + 0.930418*t4892)*var2[0] + (0.366501*(0.340999127418*t1783*t4309 - 1.*t1864*t4379 - 1.*t317*t4483*t76) + 0.930418*(0.340999127418*t1864*t4309 - 1.*t1783*t4317 - 1.*t317*t4526*t76))*var2[1] + (0.366501*(t5308*t7709 + t5308*t7717 + t5509*t7727 + t4737*t7754) + 0.930418*(t5397*t7709 + t5397*t7717 + t5554*t7727 + t4892*t7754))*var2[3] + (-0.041869*t5718 + 0.016493*t5975 + 0.366501*(t5866*t7717 + t6147*t7727 + t5308*t7967 + t4737*t7987) + 0.930418*(t6021*t7717 + t6182*t7727 + t5397*t7967 + t4892*t7987) + 0.151852*t8059)*var2[4] + (-0.041869*t5061 + 0.016493*t5226 + 0.366501*(t5029*t7717 + t5015*t7727 + t5308*t7893 + t4737*t7901) + 0.930418*(t5196*t7717 + t4985*t7727 + t5397*t7893 + t4892*t7901) + 0.151852*t7930)*var2[5] + (-0.041869*t4575 + 0.016493*t4838 + 0.366501*(t4399*t7717 + t4385*t7727 + t5308*t7810 + t4737*t7831) + 0.930418*(t4798*t7717 + t4342*t7727 + t5397*t7810 + t4892*t7831) + 0.151852*t7865)*var2[6] + (0.016493*t6657 - 0.041869*t6756 + 0.151852*t8135 + 0.366501*(t6825*t7717 + t6344*t7727 + t5308*t8147 + t4737*t8158) + 0.930418*(t6692*t7717 + t6272*t7727 + t5397*t8147 + t4892*t8158))*var2[7];
  p_output1[51]=(0.366501*t5509 + 0.930418*t5554)*var2[3] + (0.366501*t6147 + 0.930418*t6182)*var2[4] + (0.930418*t4985 + 0.366501*t5015)*var2[5] + (0.930418*t4342 + 0.366501*t4385)*var2[6] + (0.930418*t6272 + 0.366501*t6344)*var2[7];
  p_output1[52]=t7442*var2[3] + (0.366501*t5866 + 0.930418*t6021)*var2[4] + (0.366501*t5029 + 0.930418*t5196)*var2[5] + (0.366501*t4399 + 0.930418*t4798)*var2[6] + (0.930418*t6692 + 0.366501*t6825)*var2[7];
  p_output1[53]=(0.366501*t5718 + 0.930418*t5975)*var2[4] + (0.366501*t5061 + 0.930418*t5226)*var2[5] + (0.366501*t4575 + 0.930418*t4838)*var2[6] + (0.930418*t6657 + 0.366501*t6756)*var2[7];
  p_output1[54]=(-0.930418*t8411 - 0.366501*t8436)*var2[1] + (-0.930418*(-0.340999127418*t4737*t8371 - 1.*t4892*t8380 - 1.*t8401*t8519) - 0.366501*(-0.340999127418*t4892*t8371 - 1.*t4737*t8417 - 1.*t8424*t8519))*var2[2] + (-0.236705*(t5509*t8464 + t5554*t8471 + t5472*t8604) - 0.930418*(t8411*t8857 + t8501*t8867) - 0.366501*(t8436*t8857 + t8501*t8885) + 0.014606*t8892 - 0.03708*t8905)*var2[3] + (-0.930418*(t8411*t8492 + t8501*t8505 + t8522*t8528 + t8540*t8552) - 0.366501*(t8436*t8492 + t8501*t8562 + t8522*t8569 + t8540*t8580) + 0.014606*t8601 - 0.236705*(t6147*t8464 + t6182*t8471 + t6096*t8604) - 0.03708*t8625)*var2[4] + (-0.236705*(t5015*t8464 + t4985*t8471 + t5293*t8604) - 0.930418*(t8522*t8759 + t8411*t8767 + t8501*t8775 + t8552*t8787) - 0.366501*(t8436*t8767 + t8580*t8787 + t8522*t8800 + t8501*t8812) + 0.014606*t8826 - 0.03708*t8846)*var2[5] + (-0.236705*(t4385*t8464 + t4342*t8471 + t4963*t8604) - 0.930418*(t8522*t8642 + t8411*t8654 + t8501*t8662 + t8552*t8677) - 0.366501*(t8436*t8654 + t8580*t8677 + t8522*t8685 + t8501*t8694) + 0.014606*t8718 - 0.03708*t8744)*var2[6] + (-0.236705*(t6344*t8464 + t6272*t8471 + t6239*t8604) - 0.930418*(t8411*t8925 + t8552*t8933 + t8501*t8939 + t8522*t8948) - 0.366501*(t8436*t8925 + t8580*t8933 + t8501*t8958 + t8522*t8964) + 0.014606*t8974 - 0.03708*t8988)*var2[7] + (-0.236705*(-0.930418*t5308*t8368 + 0.366501*t5397*t8368 - 1.000000637725*t7381*t8397) + 0.014606*t9000 - 0.03708*t9005 - 0.930418*(t8411*t9031 + t8552*t9036 + t8501*t9044 + t8522*t9049) - 0.366501*(t8436*t9031 + t8580*t9036 + t8501*t9062 + t8522*t9067))*var2[8];
  p_output1[55]=(-0.930418*(-0.340999127418*t4774*t8371 - 1.*t4925*t8380 - 1.*t8394*t8401) - 0.366501*(-0.340999127418*t4925*t8371 - 1.*t4774*t8417 - 1.*t8394*t8424))*var2[0] + t9228*var2[2] + (-0.236705*(t5308*t8464 + t5397*t8471 + t7381*t8604) + 0.014606*t8867 - 0.03708*t8885 - 0.930418*(t8892*t9104 + t8411*t9233) - 0.366501*(t8905*t9104 + t8436*t9233))*var2[3] + (0.014606*t8505 - 0.03708*t8562 - 0.236705*(t5866*t8464 + t6021*t8471 + t7571*t8604) - 0.930418*(t8411*t9097 + t8601*t9104 + t8528*t9112 + t8867*t9117) - 0.366501*(t8436*t9097 + t8625*t9104 + t8569*t9112 + t8885*t9117))*var2[4] + (-0.236705*(t5029*t8464 + t5196*t8471 + t7286*t8604) + 0.014606*t8775 - 0.03708*t8812 - 0.930418*(t8826*t9104 + t8759*t9112 + t8411*t9190 + t8867*t9200) - 0.366501*(t8846*t9104 + t8800*t9112 + t8436*t9190 + t8885*t9200))*var2[5] + (-0.236705*(t4399*t8464 + t4798*t8471 + t7092*t8604) + 0.014606*t8662 - 0.03708*t8694 - 0.930418*(t8718*t9104 + t8642*t9112 + t8411*t9152 + t8867*t9158) - 0.366501*(t8744*t9104 + t8685*t9112 + t8436*t9152 + t8885*t9158))*var2[6] + (-0.236705*(t6825*t8464 + t6692*t8471 + t7602*t8604) + 0.014606*t8939 - 0.03708*t8958 - 0.930418*(t8974*t9104 + t8948*t9112 + t8411*t9266 + t8867*t9271) - 0.366501*(t8988*t9104 + t8964*t9112 + t8436*t9266 + t8885*t9271))*var2[7] + (-0.236705*(-0.930418*t4737*t8368 + 0.366501*t4892*t8368 - 1.000000637725*t8397*t8519) + 0.014606*t9044 - 0.03708*t9062 - 0.930418*(t9000*t9104 + t9049*t9112 + t8411*t9317 + t8867*t9327) - 0.366501*(t9005*t9104 + t9067*t9112 + t8436*t9317 + t8885*t9327))*var2[8];
  p_output1[56]=(-0.930418*t8552 - 0.366501*t8580)*var2[0] + (-0.930418*(-0.340999127418*t5308*t8371 - 1.*t5397*t8380 - 1.*t7381*t8401) - 0.366501*(-0.340999127418*t5397*t8371 - 1.*t5308*t8417 - 1.*t7381*t8424))*var2[1] + (-0.930418*(t8867*t9342 + t8867*t9344 + t8892*t9358 + t8552*t9363) - 0.366501*(t8885*t9342 + t8885*t9344 + t8905*t9358 + t8580*t9363))*var2[3] + (0.014606*t8528 - 0.03708*t8569 - 0.236705*(t5718*t8464 + t5975*t8471 + t8059*t8604) - 0.930418*(t8505*t9344 + t8601*t9358 + t8867*t9508 + t8552*t9513) - 0.366501*(t8562*t9344 + t8625*t9358 + t8885*t9508 + t8580*t9513))*var2[4] + (-0.236705*(t5061*t8464 + t5226*t8471 + t7930*t8604) + 0.014606*t8759 - 0.03708*t8800 - 0.930418*(t8775*t9344 + t8826*t9358 + t8867*t9443 + t8552*t9466) - 0.366501*(t8812*t9344 + t8846*t9358 + t8885*t9443 + t8580*t9466))*var2[5] + (-0.236705*(t4575*t8464 + t4838*t8471 + t7865*t8604) + 0.014606*t8642 - 0.03708*t8685 - 0.930418*(t8662*t9344 + t8718*t9358 + t8867*t9398 + t8552*t9404) - 0.366501*(t8694*t9344 + t8744*t9358 + t8885*t9398 + t8580*t9404))*var2[6] + (-0.236705*(t6756*t8464 + t6657*t8471 + t8135*t8604) + 0.014606*t8948 - 0.03708*t8964 - 0.930418*(t8939*t9344 + t8974*t9358 + t8867*t9594 + t8552*t9608) - 0.366501*(t8958*t9344 + t8988*t9358 + t8885*t9594 + t8580*t9608))*var2[7] + (-0.236705*(-0.930418*t4774*t8368 + 0.366501*t4925*t8368 - 1.000000637725*t8394*t8397) + 0.014606*t9049 - 0.03708*t9067 - 0.930418*(t9044*t9344 + t9000*t9358 + t8552*t9655 + t8867*t9660) - 0.366501*(t9062*t9344 + t9005*t9358 + t8580*t9655 + t8885*t9660))*var2[8];
  p_output1[57]=(-0.930418*t8892 - 0.366501*t8905)*var2[3] + (-0.930418*t8601 - 0.366501*t8625)*var2[4] + (-0.930418*t8826 - 0.366501*t8846)*var2[5] + (-0.930418*t8718 - 0.366501*t8744)*var2[6] + (-0.930418*t8974 - 0.366501*t8988)*var2[7] + (-0.930418*t9000 - 0.366501*t9005)*var2[8];
  p_output1[58]=t9228*var2[3] + (-0.930418*t8505 - 0.366501*t8562)*var2[4] + (-0.930418*t8775 - 0.366501*t8812)*var2[5] + (-0.930418*t8662 - 0.366501*t8694)*var2[6] + (-0.930418*t8939 - 0.366501*t8958)*var2[7] + (-0.930418*t9044 - 0.366501*t9062)*var2[8];
  p_output1[59]=(-0.930418*t8528 - 0.366501*t8569)*var2[4] + (-0.930418*t8759 - 0.366501*t8800)*var2[5] + (-0.930418*t8642 - 0.366501*t8685)*var2[6] + (-0.930418*t8948 - 0.366501*t8964)*var2[7] + (-0.930418*t9049 - 0.366501*t9067)*var2[8];
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=0;
  p_output1[151]=0;
  p_output1[152]=0;
  p_output1[153]=0;
  p_output1[154]=0;
  p_output1[155]=0;
  p_output1[156]=0;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
}



void dJs_knee_joint_left_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
