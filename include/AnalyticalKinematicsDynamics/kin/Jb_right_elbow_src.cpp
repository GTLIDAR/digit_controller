/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:22:16 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jb_right_elbow_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1007;
  double t603;
  double t635;
  double t725;
  double t770;
  double t911;
  double t935;
  double t938;
  double t401;
  double t560;
  double t595;
  double t948;
  double t982;
  double t1004;
  double t1033;
  double t1042;
  double t1051;
  double t1098;
  double t1109;
  double t1146;
  double t1165;
  double t1355;
  double t1360;
  double t1375;
  double t1417;
  double t1426;
  double t1459;
  double t1494;
  double t1515;
  double t1182;
  double t1606;
  double t1608;
  double t1619;
  double t1624;
  double t1641;
  double t1657;
  double t1662;
  double t1675;
  double t1869;
  double t748;
  double t809;
  double t908;
  double t1174;
  double t1247;
  double t1335;
  double t1560;
  double t1574;
  double t1589;
  double t1688;
  double t1728;
  double t1941;
  double t1945;
  double t1975;
  double t1976;
  double t1983;
  double t1985;
  double t2003;
  double t2011;
  double t2028;
  double t2125;
  double t2173;
  double t2209;
  double t2211;
  double t2222;
  double t2230;
  double t2238;
  double t2285;
  double t2289;
  double t2320;
  double t2357;
  double t2392;
  double t2457;
  double t1736;
  double t1790;
  double t1868;
  double t2138;
  double t2188;
  double t2208;
  double t2402;
  double t2433;
  double t194;
  double t2468;
  double t2471;
  double t2484;
  double t2499;
  double t2539;
  double t2562;
  double t2610;
  double t2613;
  double t155;
  double t2639;
  double t2647;
  double t2648;
  double t2438;
  double t2615;
  double t2626;
  double t2666;
  double t10;
  double t3105;
  double t3122;
  double t3145;
  double t3146;
  double t3174;
  double t3178;
  double t3183;
  double t3252;
  double t3267;
  double t3275;
  double t3289;
  double t3294;
  double t3150;
  double t3253;
  double t3300;
  double t3304;
  double t3335;
  double t3348;
  double t3423;
  double t3453;
  double t3487;
  double t3488;
  double t3500;
  double t3508;
  double t3329;
  double t3471;
  double t3536;
  double t3584;
  double t3629;
  double t3633;
  double t3635;
  double t3638;
  double t2749;
  double t2773;
  double t2817;
  double t2869;
  double t2893;
  double t2897;
  double t2924;
  double t2930;
  double t2983;
  double t3687;
  double t3694;
  double t3697;
  double t3600;
  double t3648;
  double t3661;
  double t4070;
  double t4115;
  double t4116;
  double t4017;
  double t4026;
  double t4040;
  double t4146;
  double t4167;
  double t4192;
  double t4042;
  double t4122;
  double t4230;
  double t4246;
  double t4303;
  double t4306;
  double t4312;
  double t4321;
  double t4362;
  double t4387;
  double t4388;
  double t4389;
  double t4269;
  double t4331;
  double t4395;
  double t4418;
  double t4504;
  double t4505;
  double t4507;
  double t4515;
  double t4599;
  double t4633;
  double t4640;
  double t4503;
  double t4528;
  double t4532;
  double t2630;
  double t2685;
  double t2696;
  double t2886;
  double t2914;
  double t2933;
  double t2949;
  double t2978;
  double t2992;
  double t3001;
  double t3007;
  double t3030;
  double t3072;
  double t3682;
  double t3741;
  double t3745;
  double t3771;
  double t3883;
  double t3886;
  double t3903;
  double t3911;
  double t3912;
  double t3917;
  double t3941;
  double t3953;
  double t3966;
  double t4546;
  double t4651;
  double t4655;
  double t4702;
  double t4723;
  double t4731;
  double t4765;
  double t4773;
  double t4795;
  double t4796;
  double t4831;
  double t4844;
  double t4856;
  double t5063;
  double t5065;
  double t5074;
  double t5255;
  double t5397;
  double t5407;
  double t5419;
  double t5420;
  double t5434;
  double t5445;
  double t5455;
  double t5457;
  double t5458;
  double t5465;
  double t5475;
  double t5478;
  double t5480;
  double t5484;
  double t5507;
  double t5515;
  double t5525;
  double t5537;
  double t5550;
  double t5599;
  double t5338;
  double t5188;
  double t5201;
  double t5319;
  double t5333;
  double t5340;
  double t5344;
  double t5454;
  double t5483;
  double t5558;
  double t5561;
  double t5569;
  double t5589;
  double t5602;
  double t5606;
  double t5630;
  double t5654;
  double t5664;
  double t5666;
  double t5674;
  double t5679;
  double t5716;
  double t5725;
  double t5726;
  double t5737;
  double t5742;
  double t5756;
  double t5770;
  double t5773;
  double t5820;
  double t5824;
  double t5126;
  double t5128;
  double t5150;
  double t5164;
  double t5169;
  double t5563;
  double t5706;
  double t5827;
  double t5835;
  double t5853;
  double t5857;
  double t5880;
  double t5940;
  double t5945;
  double t5960;
  double t5965;
  double t5113;
  double t5119;
  double t5120;
  double t6021;
  double t6035;
  double t6042;
  double t6054;
  double t6057;
  double t5147;
  double t5148;
  double t5836;
  double t5983;
  double t5985;
  double t6090;
  double t6106;
  double t6116;
  double t6120;
  double t6123;
  double t6131;
  double t6140;
  double t6148;
  double t6154;
  double t6176;
  double t6010;
  double t6062;
  double t6074;
  double t6145;
  double t6190;
  double t6235;
  double t6283;
  double t6297;
  double t6333;
  double t5045;
  double t5049;
  double t5054;
  double t6085;
  double t6357;
  double t6435;
  double t6463;
  double t6493;
  double t6557;
  double t6642;
  double t6599;
  double t6687;
  double t6662;
  double t6713;
  double t6702;
  double t7029;
  double t7033;
  double t7035;
  double t7036;
  double t7053;
  double t7057;
  double t7062;
  double t7067;
  double t7116;
  double t7117;
  double t7118;
  double t7119;
  double t7121;
  double t7126;
  double t7130;
  double t7133;
  double t7162;
  double t7164;
  double t7174;
  double t7185;
  double t7194;
  double t7200;
  double t7207;
  double t7210;
  double t7273;
  double t7282;
  double t7299;
  double t7307;
  double t7317;
  double t7318;
  double t7334;
  double t7340;
  double t7396;
  double t7397;
  double t7404;
  double t7424;
  double t7433;
  double t7436;
  double t7438;
  double t7439;
  double t7552;
  double t7553;
  double t7554;
  double t7555;
  double t7532;
  double t7533;
  double t7535;
  double t7540;
  t1007 = Sin(var1[27]);
  t603 = Cos(var1[26]);
  t635 = -1.*t603;
  t725 = 1. + t635;
  t770 = Sin(var1[26]);
  t911 = Cos(var1[27]);
  t935 = -1.*t911;
  t938 = 1. + t935;
  t401 = Cos(var1[25]);
  t560 = -1.*t401;
  t595 = 1. + t560;
  t948 = -1.0000001112680001*t938;
  t982 = 1. + t948;
  t1004 = 0.92388*t982;
  t1033 = -0.994522*t1007;
  t1042 = 0. + t1033;
  t1051 = 0.380588*t1042;
  t1098 = -0.104528*t1007;
  t1109 = 0. + t1098;
  t1146 = 0.040001*t1109;
  t1165 = t1004 + t1051 + t1146;
  t1355 = -0.010926102783999999*t938;
  t1360 = 1. + t1355;
  t1375 = 0.040001*t1360;
  t1417 = -0.0395641761067022*t938;
  t1426 = 0.104528*t1007;
  t1459 = 0. + t1426;
  t1494 = 0.92388*t1459;
  t1515 = t1375 + t1417 + t1494;
  t1182 = 0.051978134642000004*t725;
  t1606 = -0.9890740084840001*t938;
  t1608 = 1. + t1606;
  t1619 = 0.380588*t1608;
  t1624 = -0.004158319780035616*t938;
  t1641 = 0.994522*t1007;
  t1657 = 0. + t1641;
  t1662 = 0.92388*t1657;
  t1675 = t1619 + t1624 + t1662;
  t1869 = -0.05226439969100001*t725;
  t748 = -0.49726168403800003*t725;
  t809 = 0.073913*t770;
  t908 = t748 + t809;
  t1174 = t908*t1165;
  t1247 = 0.707107*t770;
  t1335 = t1182 + t1247;
  t1560 = t1335*t1515;
  t1574 = -0.5054634410180001*t725;
  t1589 = 1. + t1574;
  t1688 = t1589*t1675;
  t1728 = 0. + t1174 + t1560 + t1688;
  t1941 = -0.703234*t770;
  t1945 = t1869 + t1941;
  t1975 = t1945*t1165;
  t1976 = -0.9945383682050002*t725;
  t1983 = 1. + t1976;
  t1985 = t1983*t1515;
  t2003 = -0.707107*t770;
  t2011 = t1182 + t2003;
  t2028 = t2011*t1675;
  t2125 = 0. + t1975 + t1985 + t2028;
  t2173 = Sin(var1[25]);
  t2209 = -0.500001190325*t725;
  t2211 = 1. + t2209;
  t2222 = t2211*t1165;
  t2230 = 0.703234*t770;
  t2238 = t1869 + t2230;
  t2285 = t2238*t1515;
  t2289 = -0.073913*t770;
  t2320 = t748 + t2289;
  t2357 = t2320*t1675;
  t2392 = 0. + t2222 + t2285 + t2357;
  t2457 = Sin(var1[24]);
  t1736 = -0.103955395616*t595*t1728;
  t1790 = -0.010926102783999999*t595;
  t1868 = 1. + t1790;
  t2138 = t1868*t2125;
  t2188 = 0.104528*t2173;
  t2208 = 0. + t2188;
  t2402 = t2208*t2392;
  t2433 = 0. + t1736 + t2138 + t2402;
  t194 = Cos(var1[24]);
  t2468 = -0.9890740084840001*t595;
  t2471 = 1. + t2468;
  t2484 = t2471*t1728;
  t2499 = -0.103955395616*t595*t2125;
  t2539 = 0.994522*t2173;
  t2562 = 0. + t2539;
  t2610 = t2562*t2392;
  t2613 = 0. + t2484 + t2499 + t2610;
  t155 = Cos(var1[5]);
  t2639 = -1.*t2457*t2433;
  t2647 = t194*t2613;
  t2648 = 0. + t2639 + t2647;
  t2438 = t194*t2433;
  t2615 = t2457*t2613;
  t2626 = 0. + t2438 + t2615;
  t2666 = Sin(var1[5]);
  t10 = Sin(var1[3]);
  t3105 = -0.382684*t982;
  t3122 = 0.918819*t1042;
  t3145 = 0.096572*t1109;
  t3146 = t3105 + t3122 + t3145;
  t3174 = 0.096572*t1360;
  t3178 = -0.0955161926444975*t938;
  t3183 = -0.382684*t1459;
  t3252 = t3174 + t3178 + t3183;
  t3267 = 0.918819*t1608;
  t3275 = -0.010039180465428352*t938;
  t3289 = -0.382684*t1657;
  t3294 = t3267 + t3275 + t3289;
  t3150 = t908*t3146;
  t3253 = t1335*t3252;
  t3300 = t1589*t3294;
  t3304 = 0. + t3150 + t3253 + t3300;
  t3335 = t1945*t3146;
  t3348 = t1983*t3252;
  t3423 = t2011*t3294;
  t3453 = 0. + t3335 + t3348 + t3423;
  t3487 = t2211*t3146;
  t3488 = t2238*t3252;
  t3500 = t2320*t3294;
  t3508 = 0. + t3487 + t3488 + t3500;
  t3329 = -0.103955395616*t595*t3304;
  t3471 = t1868*t3453;
  t3536 = t2208*t3508;
  t3584 = 0. + t3329 + t3471 + t3536;
  t3629 = t2471*t3304;
  t3633 = -0.103955395616*t595*t3453;
  t3635 = t2562*t3508;
  t3638 = 0. + t3629 + t3633 + t3635;
  t2749 = Cos(var1[3]);
  t2773 = Cos(var1[4]);
  t2817 = -0.994522*t2173;
  t2869 = 0. + t2817;
  t2893 = -0.104528*t2173;
  t2897 = 0. + t2893;
  t2924 = -1.0000001112680001*t595;
  t2930 = 1. + t2924;
  t2983 = Sin(var1[4]);
  t3687 = -1.*t2457*t3584;
  t3694 = t194*t3638;
  t3697 = 0. + t3687 + t3694;
  t3600 = t194*t3584;
  t3648 = t2457*t3638;
  t3661 = 0. + t3600 + t3648;
  t4070 = -0.994522*t1360;
  t4115 = -0.010866249592949247*t938;
  t4116 = t4070 + t4115;
  t4017 = 0.104528*t1608;
  t4026 = 0.10338592795881554*t938;
  t4040 = t4017 + t4026;
  t4146 = 0.104528*t1042;
  t4167 = -0.994522*t1109;
  t4192 = t4146 + t4167;
  t4042 = t4040*t2320;
  t4122 = t4116*t2238;
  t4230 = t2211*t4192;
  t4246 = 0. + t4042 + t4122 + t4230;
  t4303 = t1983*t4116;
  t4306 = t4040*t2011;
  t4312 = t1945*t4192;
  t4321 = 0. + t4303 + t4306 + t4312;
  t4362 = t1589*t4040;
  t4387 = t4116*t1335;
  t4388 = t908*t4192;
  t4389 = 0. + t4362 + t4387 + t4388;
  t4269 = t2562*t4246;
  t4331 = -0.103955395616*t595*t4321;
  t4395 = t2471*t4389;
  t4418 = 0. + t4269 + t4331 + t4395;
  t4504 = t2208*t4246;
  t4505 = t1868*t4321;
  t4507 = -0.103955395616*t595*t4389;
  t4515 = 0. + t4504 + t4505 + t4507;
  t4599 = t194*t4418;
  t4633 = -1.*t2457*t4515;
  t4640 = 0. + t4599 + t4633;
  t4503 = t2457*t4418;
  t4528 = t194*t4515;
  t4532 = 0. + t4503 + t4528;
  t2630 = t155*t2626;
  t2685 = -1.*t2648*t2666;
  t2696 = 0. + t2630 + t2685;
  t2886 = t2869*t1728;
  t2914 = t2897*t2125;
  t2933 = t2930*t2392;
  t2949 = 0. + t2886 + t2914 + t2933;
  t2978 = t2773*t2949;
  t2992 = t155*t2648;
  t3001 = t2626*t2666;
  t3007 = 0. + t2992 + t3001;
  t3030 = t2983*t3007;
  t3072 = 0. + t2978 + t3030;
  t3682 = t155*t3661;
  t3741 = -1.*t3697*t2666;
  t3745 = 0. + t3682 + t3741;
  t3771 = t2869*t3304;
  t3883 = t2897*t3453;
  t3886 = t2930*t3508;
  t3903 = 0. + t3771 + t3883 + t3886;
  t3911 = t2773*t3903;
  t3912 = t155*t3697;
  t3917 = t3661*t2666;
  t3941 = 0. + t3912 + t3917;
  t3953 = t2983*t3941;
  t3966 = 0. + t3911 + t3953;
  t4546 = t155*t4532;
  t4651 = -1.*t4640*t2666;
  t4655 = 0. + t4546 + t4651;
  t4702 = t2930*t4246;
  t4723 = t2897*t4321;
  t4731 = t2869*t4389;
  t4765 = 0. + t4702 + t4723 + t4731;
  t4773 = t2773*t4765;
  t4795 = t155*t4640;
  t4796 = t4532*t2666;
  t4831 = 0. + t4795 + t4796;
  t4844 = t2983*t4831;
  t4856 = 0. + t4773 + t4844;
  t5063 = -1.*t3903*t2983;
  t5065 = t2773*t3941;
  t5074 = 0. + t5063 + t5065;
  t5255 = -0.051978134642000004*t725;
  t5397 = -4.817066759205414e-7*var1[27];
  t5407 = -0.250125*t1360;
  t5419 = -0.007103279865835288*t938;
  t5420 = 0.190987300194*t1109;
  t5434 = 0.290567*t1459;
  t5445 = t5397 + t5407 + t5419 + t5420 + t5434;
  t5455 = 0.290567*t982;
  t5457 = 0.19098732144477495*t938;
  t5458 = 0.206868*t1042;
  t5465 = -0.250125*t1109;
  t5475 = 0.014401763312*t1459;
  t5478 = 0.137024246638*t1657;
  t5480 = 0. + t5455 + t5457 + t5458 + t5465 + t5475 + t5478;
  t5484 = 5.06291820800569e-8*var1[27];
  t5507 = 0.206868*t1608;
  t5515 = 0.16302610521286587*t938;
  t5525 = 0.190987300194*t1042;
  t5537 = 0.290567*t1657;
  t5550 = t5484 + t5507 + t5515 + t5525 + t5537;
  t5599 = 0.05226439969100001*t725;
  t5338 = 0.49726168403800003*t725;
  t5188 = 1.5601527583902087e-7*var1[26];
  t5201 = 0.09582494577057615*t725;
  t5319 = t5255 + t2003;
  t5333 = -0.231098203479*t5319;
  t5340 = t5338 + t2289;
  t5344 = 0.164383620275*t5340;
  t5454 = t1335*t5445;
  t5483 = t908*t5480;
  t5558 = t1589*t5550;
  t5561 = t5188 + t5201 + t5333 + t5344 + t5454 + t5483 + t5558;
  t5569 = 1.639789470231751e-8*var1[26];
  t5589 = -0.22983603018311177*t725;
  t5602 = t5599 + t2230;
  t5606 = 0.164383620275*t5602;
  t5630 = t5255 + t1247;
  t5654 = 0.18957839082800002*t5630;
  t5664 = t1983*t5445;
  t5666 = t1945*t5480;
  t5674 = t2011*t5550;
  t5679 = t5569 + t5589 + t5606 + t5654 + t5664 + t5666 + t5674;
  t5716 = -1.568745163810375e-7*var1[26];
  t5725 = 0.08219200580743281*t725;
  t5726 = t5599 + t1941;
  t5737 = -0.231098203479*t5726;
  t5742 = t5338 + t809;
  t5756 = 0.18957839082800002*t5742;
  t5770 = t2238*t5445;
  t5773 = t2211*t5480;
  t5820 = t2320*t5550;
  t5824 = t5716 + t5725 + t5737 + t5756 + t5770 + t5773 + t5820;
  t5126 = -1.*t194;
  t5128 = 1. + t5126;
  t5150 = 1.1345904784751044e-7*var1[25];
  t5164 = 0.04027119345689465*t595;
  t5169 = -0.05650052807*t2897;
  t5563 = -0.103955395616*t595*t5561;
  t5706 = t1868*t5679;
  t5827 = t2208*t5824;
  t5835 = t5150 + t5164 + t5169 + t5563 + t5706 + t5827;
  t5853 = -1.1924972351948546e-8*var1[25];
  t5857 = 0.38315655000705834*t595;
  t5880 = -0.05650052807*t2869;
  t5940 = t2471*t5561;
  t5945 = -0.103955395616*t595*t5679;
  t5960 = t2562*t5824;
  t5965 = t5853 + t5857 + t5880 + t5940 + t5945 + t5960;
  t5113 = -1.*t4765*t2983;
  t5119 = t2773*t4831;
  t5120 = 0. + t5113 + t5119;
  t6021 = 0.4*t5128;
  t6035 = -0.12*t2457;
  t6042 = -1.*t2457*t5835;
  t6054 = t194*t5965;
  t6057 = 0. + t6021 + t6035 + t6042 + t6054;
  t5147 = -0.12*t5128;
  t5148 = -0.4*t2457;
  t5836 = t194*t5835;
  t5983 = t2457*t5965;
  t5985 = 0. + t5147 + t5148 + t5836 + t5983;
  t6090 = -0.056500534356700764*t595;
  t6106 = 0.040271188976*t2208;
  t6116 = 0.38315650737400003*t2562;
  t6120 = t2869*t5561;
  t6123 = t2897*t5679;
  t6131 = t2930*t5824;
  t6140 = 0. + t6090 + t6106 + t6116 + t6120 + t6123 + t6131;
  t6148 = t155*t6057;
  t6154 = t5985*t2666;
  t6176 = 0. + t6148 + t6154;
  t6010 = t155*t5985;
  t6062 = -1.*t6057*t2666;
  t6074 = 0. + t6010 + t6062;
  t6145 = -1.*t6140*t2983;
  t6190 = t2773*t6176;
  t6235 = 0. + t6145 + t6190;
  t6283 = t2773*t6140;
  t6297 = t2983*t6176;
  t6333 = 0. + t6283 + t6297;
  t5045 = -1.*t2949*t2983;
  t5049 = t2773*t3007;
  t5054 = 0. + t5045 + t5049;
  t6085 = t4655*t6074;
  t6357 = -1.*t3745*t6074;
  t6435 = -1.*t4655*t6074;
  t6463 = t6074*t2696;
  t6493 = t3745*t6074;
  t6557 = -1.*t6074*t2696;
  t6642 = -1.*t3903*t6140;
  t6599 = t4765*t6140;
  t6687 = t6140*t2949;
  t6662 = -1.*t4765*t6140;
  t6713 = -1.*t6140*t2949;
  t6702 = t3903*t6140;
  t7029 = -1.*t3304*t5561;
  t7033 = -1.*t3453*t5679;
  t7035 = -1.*t3508*t5824;
  t7036 = t7029 + t7033 + t7035;
  t7053 = t4389*t5561;
  t7057 = t4321*t5679;
  t7062 = t4246*t5824;
  t7067 = t7053 + t7057 + t7062;
  t7116 = t5561*t1728;
  t7117 = t5679*t2125;
  t7118 = t5824*t2392;
  t7119 = t7116 + t7117 + t7118;
  t7121 = -1.*t4389*t5561;
  t7126 = -1.*t4321*t5679;
  t7130 = -1.*t4246*t5824;
  t7133 = t7121 + t7126 + t7130;
  t7162 = -1.*t5561*t1728;
  t7164 = -1.*t5679*t2125;
  t7174 = -1.*t5824*t2392;
  t7185 = t7162 + t7164 + t7174;
  t7194 = t3304*t5561;
  t7200 = t3453*t5679;
  t7207 = t3508*t5824;
  t7210 = t7194 + t7200 + t7207;
  t7273 = -1.*t3252*t5445;
  t7282 = -1.*t3146*t5480;
  t7299 = -1.*t3294*t5550;
  t7307 = t7273 + t7282 + t7299;
  t7317 = t4116*t5445;
  t7318 = t4192*t5480;
  t7334 = t4040*t5550;
  t7340 = t7317 + t7318 + t7334;
  t7396 = t5445*t1515;
  t7397 = t1165*t5480;
  t7404 = t5550*t1675;
  t7424 = t7396 + t7397 + t7404;
  t7433 = -1.*t4116*t5445;
  t7436 = -1.*t4192*t5480;
  t7438 = -1.*t4040*t5550;
  t7439 = t7433 + t7436 + t7438;
  t7552 = -1.*t5445*t1515;
  t7553 = -1.*t1165*t5480;
  t7554 = -1.*t5550*t1675;
  t7555 = t7552 + t7553 + t7554;
  t7532 = t3252*t5445;
  t7533 = t3146*t5480;
  t7535 = t3294*t5550;
  t7540 = t7532 + t7533 + t7535;
  p_output1[0]=0. - 1.*t10*t2696 + t2749*t3072;
  p_output1[1]=0. - 1.*t10*t3745 + t2749*t3966;
  p_output1[2]=0. - 1.*t10*t4655 + t2749*t4856;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0. + t2696*t2749 + t10*t3072;
  p_output1[7]=0. + t2749*t3745 + t10*t3966;
  p_output1[8]=0. + t2749*t4655 + t10*t4856;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=t5054;
  p_output1[13]=t5074;
  p_output1[14]=t5120;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=t5074*(t6085 + t5120*t6235 + t4856*t6333) + t5120*(-1.*t5074*t6235 - 1.*t3966*t6333 + t6357);
  p_output1[19]=t5054*(-1.*t5120*t6235 - 1.*t4856*t6333 + t6435) + t5120*(t5054*t6235 + t3072*t6333 + t6463);
  p_output1[20]=t5054*(t5074*t6235 + t3966*t6333 + t6493) + t5074*(-1.*t5054*t6235 - 1.*t3072*t6333 + t6557);
  p_output1[21]=t5054;
  p_output1[22]=t5074;
  p_output1[23]=t5120;
  p_output1[24]=t3745*(t6085 + t4831*t6176 + t6599) + t4655*(-1.*t3941*t6176 + t6357 + t6642);
  p_output1[25]=t2696*(-1.*t4831*t6176 + t6435 + t6662) + t4655*(t3007*t6176 + t6463 + t6687);
  p_output1[26]=t2696*(t3941*t6176 + t6493 + t6702) + t3745*(-1.*t3007*t6176 + t6557 + t6713);
  p_output1[27]=t2696;
  p_output1[28]=t3745;
  p_output1[29]=t4655;
  p_output1[30]=t3903*(t4532*t5985 + t4640*t6057 + t6599) + t4765*(-1.*t3661*t5985 - 1.*t3697*t6057 + t6642);
  p_output1[31]=t2949*(-1.*t4532*t5985 - 1.*t4640*t6057 + t6662) + t4765*(t2626*t5985 + t2648*t6057 + t6687);
  p_output1[32]=t2949*(t3661*t5985 + t3697*t6057 + t6702) + t3903*(-1.*t2626*t5985 - 1.*t2648*t6057 + t6713);
  p_output1[33]=t2949;
  p_output1[34]=t3903;
  p_output1[35]=t4765;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=-0.4*t2433 - 0.12*t2613 - 1.*t3903*(t4515*t5835 + t4418*t5965 + t6599) - 1.*t4765*(-1.*t3584*t5835 - 1.*t3638*t5965 + t6642);
  p_output1[145]=-0.4*t3584 - 0.12*t3638 - 1.*t2949*(-1.*t4515*t5835 - 1.*t4418*t5965 + t6662) - 1.*t4765*(t2433*t5835 + t2613*t5965 + t6687);
  p_output1[146]=-0.12*t4418 - 0.4*t4515 - 1.*t2949*(t3584*t5835 + t3638*t5965 + t6702) - 1.*t3903*(-1.*t2433*t5835 - 1.*t2613*t5965 + t6713);
  p_output1[147]=0. - 1.*t1728*t2869 - 1.*t2125*t2897 - 1.*t2392*t2930;
  p_output1[148]=0. - 1.*t2869*t3304 - 1.*t2897*t3453 - 1.*t2930*t3508;
  p_output1[149]=0. - 1.*t2930*t4246 - 1.*t2897*t4321 - 1.*t2869*t4389;
  p_output1[150]=0.056191*t1728 + 0.005906*t2125 + 0.385267*t2392 + 0.104528*(t4389*t7036 + t3304*t7067) - 0.994522*(t4321*t7036 + t3453*t7067);
  p_output1[151]=0.056191*t3304 + 0.005906*t3453 + 0.385267*t3508 + 0.104528*(t4389*t7119 + t1728*t7133) - 0.994522*(t4321*t7119 + t2125*t7133);
  p_output1[152]=0.385267*t4246 + 0.005906*t4321 + 0.056191*t4389 + 0.104528*(t3304*t7185 + t1728*t7210) - 0.994522*(t3453*t7185 + t2125*t7210);
  p_output1[153]=0. + 0.104528*t1728 - 0.994522*t2125;
  p_output1[154]=0. + 0.104528*t3304 - 0.994522*t3453;
  p_output1[155]=0. - 0.994522*t4321 + 0.104528*t4389;
  p_output1[156]=0.176528*t1165 + 0.249652*t1515 + 0.151261*t1675 + 0.707107*(t4192*t7307 + t3146*t7340) - 0.073913*(t4116*t7307 + t3252*t7340) - 0.703234*(t4040*t7307 + t3294*t7340);
  p_output1[157]=0.176528*t3146 + 0.249652*t3252 + 0.151261*t3294 + 0.707107*(t4192*t7424 + t1165*t7439) - 0.073913*(t4116*t7424 + t1515*t7439) - 0.703234*(t4040*t7424 + t1675*t7439);
  p_output1[158]=0.151261*t4040 + 0.249652*t4116 + 0.176528*t4192 + 0.707107*(t1165*t7540 + t3146*t7555) - 0.073913*(t1515*t7540 + t3252*t7555) - 0.703234*(t1675*t7540 + t3294*t7555);
  p_output1[159]=0. + 0.707107*t1165 - 0.073913*t1515 - 0.703234*t1675;
  p_output1[160]=0. + 0.707107*t3146 - 0.073913*t3252 - 0.703234*t3294;
  p_output1[161]=0. - 0.703234*t4040 - 0.073913*t4116 + 0.707107*t4192;
  p_output1[162]=-0.0005206045180660632;
  p_output1[163]=0.1080000621822442;
  p_output1[164]=7.214438398073231e-7;
  p_output1[165]=2.2794199999731646e-7;
  p_output1[166]=-6.661520000061927e-7;
  p_output1[167]=1.0000001112680001;
}



void Jb_right_elbow_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
