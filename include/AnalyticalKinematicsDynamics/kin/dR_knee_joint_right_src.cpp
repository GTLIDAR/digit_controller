/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:45:03 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dR_knee_joint_right_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t31;
  double t518;
  double t409;
  double t451;
  double t502;
  double t660;
  double t566;
  double t615;
  double t1046;
  double t19;
  double t42;
  double t317;
  double t647;
  double t1114;
  double t1130;
  double t1466;
  double t1576;
  double t1730;
  double t2410;
  double t2415;
  double t2434;
  double t78;
  double t140;
  double t335;
  double t1243;
  double t1310;
  double t1449;
  double t1906;
  double t1928;
  double t2190;
  double t2196;
  double t2223;
  double t2289;
  double t2342;
  double t2356;
  double t2357;
  double t2360;
  double t2482;
  double t2517;
  double t2528;
  double t2633;
  double t2637;
  double t2640;
  double t2645;
  double t2720;
  double t2752;
  double t2765;
  double t2846;
  double t2869;
  double t2893;
  double t6;
  double t20;
  double t28;
  double t2004;
  double t2036;
  double t2177;
  double t2399;
  double t2452;
  double t2480;
  double t2767;
  double t2803;
  double t2894;
  double t2896;
  double t2931;
  double t2951;
  double t2952;
  double t2968;
  double t2974;
  double t2982;
  double t3026;
  double t3030;
  double t3048;
  double t3051;
  double t3054;
  double t3057;
  double t3073;
  double t3076;
  double t7;
  double t18;
  double t3252;
  double t3248;
  double t3253;
  double t3269;
  double t3289;
  double t3293;
  double t3299;
  double t3270;
  double t3300;
  double t3304;
  double t3318;
  double t3322;
  double t3324;
  double t3306;
  double t3326;
  double t3333;
  double t3339;
  double t3343;
  double t3348;
  double t3358;
  double t3359;
  double t3365;
  double t2999;
  double t3012;
  double t3089;
  double t3109;
  double t3338;
  double t3357;
  double t3366;
  double t3368;
  double t3122;
  double t3136;
  double t3370;
  double t3372;
  double t3374;
  double t3384;
  double t3395;
  double t3396;
  double t3403;
  double t3407;
  double t3160;
  double t3161;
  double t3165;
  double t3172;
  double t3179;
  double t3181;
  double t3498;
  double t3501;
  double t3503;
  double t3497;
  double t3505;
  double t3515;
  double t3553;
  double t3562;
  double t3583;
  double t3517;
  double t3584;
  double t3587;
  double t3597;
  double t3598;
  double t3600;
  double t3602;
  double t3612;
  double t3616;
  double t3588;
  double t3601;
  double t3617;
  double t3621;
  double t3631;
  double t3632;
  double t3634;
  double t3637;
  double t3650;
  double t3658;
  double t3660;
  double t3661;
  double t3768;
  double t3769;
  double t3755;
  double t3771;
  double t3775;
  double t3795;
  double t3800;
  double t3806;
  double t3808;
  double t3810;
  double t3818;
  double t3820;
  double t3821;
  double t3787;
  double t3809;
  double t3822;
  double t3825;
  double t3833;
  double t3835;
  double t3836;
  double t3837;
  double t3841;
  double t3842;
  double t3846;
  double t3847;
  double t3899;
  double t3900;
  double t3914;
  double t3919;
  double t3923;
  double t3925;
  double t3930;
  double t3934;
  double t3939;
  double t3946;
  double t3949;
  double t3953;
  double t3999;
  double t4005;
  double t4012;
  double t4020;
  double t4031;
  double t4032;
  double t4033;
  double t4036;
  double t4043;
  double t4051;
  double t4052;
  double t4053;
  double t4025;
  double t4041;
  double t4062;
  double t4072;
  double t4076;
  double t4077;
  double t4078;
  double t4085;
  double t4088;
  double t4090;
  double t4091;
  double t4095;
  double t4224;
  double t4234;
  double t4240;
  double t4246;
  double t4255;
  double t4258;
  double t4241;
  double t4271;
  double t4277;
  double t4295;
  double t4301;
  double t4305;
  double t4218;
  double t4292;
  double t4309;
  double t4310;
  double t4314;
  double t4318;
  double t4319;
  double t4320;
  double t4328;
  double t4335;
  double t4342;
  double t4349;
  double t4313;
  double t4322;
  double t4353;
  double t4359;
  double t4363;
  double t4367;
  double t4368;
  double t4370;
  double t4382;
  double t4383;
  double t4384;
  double t4386;
  double t4460;
  double t4462;
  double t4468;
  double t4478;
  double t4494;
  double t4497;
  double t4458;
  double t4471;
  double t4499;
  double t4508;
  double t4526;
  double t4533;
  double t4536;
  double t4537;
  double t4555;
  double t4561;
  double t4563;
  double t4565;
  double t4510;
  double t4544;
  double t4566;
  double t4570;
  double t4578;
  double t4585;
  double t4587;
  double t4591;
  double t4598;
  double t4601;
  double t4602;
  double t4604;
  double t4753;
  double t4754;
  double t4760;
  double t4773;
  double t4776;
  double t4778;
  double t4786;
  double t4788;
  double t4777;
  double t4794;
  double t4798;
  double t4827;
  double t4831;
  double t4833;
  double t4835;
  double t4839;
  double t4840;
  double t4804;
  double t4834;
  double t4843;
  double t4844;
  double t4861;
  double t4868;
  double t4872;
  double t4875;
  double t4879;
  double t4882;
  double t4884;
  double t4885;
  double t4980;
  double t5001;
  double t5005;
  double t4973;
  double t5007;
  double t5008;
  double t5018;
  double t5022;
  double t5023;
  double t5017;
  double t5025;
  double t5027;
  double t5035;
  double t5045;
  double t5051;
  double t5060;
  double t5063;
  double t5064;
  double t5030;
  double t5052;
  double t5068;
  double t5080;
  double t5082;
  double t5084;
  double t5089;
  double t5096;
  double t5100;
  double t5105;
  double t5109;
  double t5112;
  double t5190;
  double t5197;
  double t5183;
  double t5207;
  double t5229;
  double t5233;
  double t5240;
  double t5242;
  double t5244;
  double t5256;
  double t5277;
  double t5278;
  double t5284;
  double t5231;
  double t5252;
  double t5293;
  double t5296;
  double t5300;
  double t5307;
  double t5308;
  double t5316;
  double t5326;
  double t5330;
  double t5336;
  double t5344;
  double t5400;
  double t5402;
  double t5404;
  double t5409;
  double t5417;
  double t5421;
  double t5428;
  double t5442;
  double t5459;
  double t5471;
  double t5485;
  double t5488;
  double t5550;
  double t5557;
  double t5560;
  double t5561;
  double t5564;
  double t5567;
  double t5573;
  double t5574;
  double t5581;
  double t5586;
  double t5589;
  double t5591;
  double t5562;
  double t5579;
  double t5598;
  double t5601;
  double t5625;
  double t5627;
  double t5634;
  double t5644;
  double t5655;
  double t5659;
  double t5660;
  double t5661;
  double t5761;
  double t5768;
  double t5773;
  double t5778;
  double t5779;
  double t5781;
  double t5777;
  double t5783;
  double t5799;
  double t5810;
  double t5819;
  double t5820;
  double t5824;
  double t5837;
  double t5848;
  double t5800;
  double t5823;
  double t5861;
  double t5863;
  double t5879;
  double t5880;
  double t5882;
  double t5896;
  double t5908;
  double t5909;
  double t5916;
  double t5919;
  double t6018;
  double t6026;
  double t6031;
  double t6046;
  double t6054;
  double t6070;
  double t6039;
  double t6071;
  double t6073;
  double t6080;
  double t6082;
  double t6085;
  double t6092;
  double t6096;
  double t6103;
  double t6077;
  double t6087;
  double t6105;
  double t6106;
  double t6120;
  double t6124;
  double t6131;
  double t6144;
  double t6146;
  double t6175;
  double t6180;
  double t6181;
  double t6280;
  double t6284;
  double t6312;
  double t6317;
  double t6324;
  double t6328;
  double t6347;
  double t6348;
  double t6351;
  double t6353;
  double t6315;
  double t6337;
  double t6356;
  double t6369;
  double t6387;
  double t6388;
  double t6389;
  double t6390;
  double t6394;
  double t6396;
  double t6397;
  double t6398;
  double t6434;
  double t6439;
  double t6449;
  double t6459;
  double t6483;
  double t6489;
  double t6491;
  double t6493;
  double t6497;
  double t6505;
  double t6506;
  double t6507;
  double t6551;
  double t6552;
  double t6554;
  double t6557;
  double t6562;
  double t6563;
  double t6565;
  double t6569;
  double t6579;
  double t6588;
  double t6594;
  double t6596;
  double t6560;
  double t6575;
  double t6598;
  double t6599;
  double t6613;
  double t6614;
  double t6621;
  double t6622;
  double t6626;
  double t6632;
  double t6635;
  double t6637;
  double t6705;
  double t6708;
  double t6710;
  double t6715;
  double t6716;
  double t6721;
  double t6703;
  double t6712;
  double t6724;
  double t6727;
  double t6729;
  double t6732;
  double t6739;
  double t6740;
  double t6745;
  double t6746;
  double t6750;
  double t6753;
  double t6728;
  double t6743;
  double t6764;
  double t6775;
  double t6784;
  double t6789;
  double t6794;
  double t6799;
  double t6802;
  double t6806;
  double t6809;
  double t6812;
  double t2845;
  double t2989;
  double t3078;
  double t3085;
  double t3114;
  double t3148;
  double t3151;
  double t3155;
  double t3162;
  double t3176;
  double t3196;
  double t3206;
  double t3224;
  double t3369;
  double t3385;
  double t3410;
  double t3411;
  double t3421;
  double t3422;
  double t3434;
  double t3443;
  double t3448;
  double t3449;
  double t3451;
  double t3454;
  double t3483;
  double t3630;
  double t3642;
  double t3664;
  double t3672;
  double t3692;
  double t3701;
  double t3705;
  double t3725;
  double t3729;
  double t3732;
  double t3734;
  double t3735;
  double t3741;
  double t3830;
  double t3839;
  double t3850;
  double t3854;
  double t3866;
  double t3867;
  double t3870;
  double t3871;
  double t3873;
  double t3877;
  double t3882;
  double t3884;
  double t3895;
  double t3920;
  double t3937;
  double t3955;
  double t3956;
  double t3958;
  double t3960;
  double t3965;
  double t3970;
  double t3977;
  double t3980;
  double t3981;
  double t3982;
  double t3986;
  double t4074;
  double t4087;
  double t4100;
  double t4102;
  double t4105;
  double t4113;
  double t4118;
  double t4119;
  double t4124;
  double t4130;
  double t4135;
  double t4136;
  double t4137;
  double t4360;
  double t4373;
  double t4389;
  double t4390;
  double t4395;
  double t4400;
  double t4402;
  double t4416;
  double t4432;
  double t4433;
  double t4434;
  double t4435;
  double t4440;
  double t4574;
  double t4592;
  double t4609;
  double t4610;
  double t4617;
  double t4619;
  double t4627;
  double t4628;
  double t4640;
  double t4651;
  double t4658;
  double t4659;
  double t4670;
  double t4680;
  double t4688;
  double t4689;
  double t4696;
  double t4713;
  double t4714;
  double t4715;
  double t4737;
  double t4739;
  double t4740;
  double t4741;
  double t4743;
  double t4746;
  double t4859;
  double t4876;
  double t4891;
  double t4892;
  double t4904;
  double t4908;
  double t4911;
  double t4931;
  double t4940;
  double t4944;
  double t4953;
  double t4955;
  double t4958;
  double t5081;
  double t5099;
  double t5116;
  double t5124;
  double t5137;
  double t5142;
  double t5148;
  double t5153;
  double t5156;
  double t5157;
  double t5170;
  double t5171;
  double t5174;
  double t5298;
  double t5320;
  double t5348;
  double t5350;
  double t5352;
  double t5358;
  double t5363;
  double t5367;
  double t5370;
  double t5373;
  double t5374;
  double t5376;
  double t5381;
  double t5416;
  double t5446;
  double t5502;
  double t5504;
  double t5505;
  double t5513;
  double t5519;
  double t5521;
  double t5524;
  double t5529;
  double t5532;
  double t5535;
  double t5538;
  double t5612;
  double t5646;
  double t5664;
  double t5685;
  double t5688;
  double t5695;
  double t5711;
  double t5715;
  double t5723;
  double t5732;
  double t5739;
  double t5746;
  double t5751;
  double t5877;
  double t5906;
  double t5922;
  double t5928;
  double t5939;
  double t5949;
  double t5952;
  double t5953;
  double t5964;
  double t5973;
  double t5975;
  double t5978;
  double t5995;
  double t6109;
  double t6145;
  double t6192;
  double t6200;
  double t6207;
  double t6215;
  double t6220;
  double t6223;
  double t6234;
  double t6240;
  double t6243;
  double t6251;
  double t6260;
  double t6384;
  double t6393;
  double t6399;
  double t6400;
  double t6403;
  double t6404;
  double t6405;
  double t6407;
  double t6408;
  double t6410;
  double t6411;
  double t6416;
  double t6417;
  double t6471;
  double t6496;
  double t6508;
  double t6511;
  double t6512;
  double t6514;
  double t6522;
  double t6523;
  double t6524;
  double t6529;
  double t6532;
  double t6536;
  double t6537;
  double t6606;
  double t6625;
  double t6647;
  double t6649;
  double t6650;
  double t6652;
  double t6658;
  double t6659;
  double t6664;
  double t6679;
  double t6683;
  double t6686;
  double t6691;
  double t6781;
  double t6800;
  double t6820;
  double t6833;
  double t6845;
  double t6846;
  double t6851;
  double t6853;
  double t6859;
  double t6860;
  double t6864;
  double t6881;
  double t6885;
  t31 = Cos(var1[3]);
  t518 = Cos(var1[4]);
  t409 = Cos(var1[18]);
  t451 = -1.*t409;
  t502 = 1. + t451;
  t660 = Cos(var1[17]);
  t566 = Cos(var1[5]);
  t615 = Sin(var1[17]);
  t1046 = Sin(var1[5]);
  t19 = Sin(var1[19]);
  t42 = Sin(var1[18]);
  t317 = Sin(var1[4]);
  t647 = -1.*t31*t518*t566*t615;
  t1114 = t660*t31*t518*t1046;
  t1130 = t647 + t1114;
  t1466 = t660*t31*t518*t566;
  t1576 = t31*t518*t615*t1046;
  t1730 = t1466 + t1576;
  t2410 = Cos(var1[19]);
  t2415 = -1.*t2410;
  t2434 = 1. + t2415;
  t78 = -0.366501*t42;
  t140 = 0. + t78;
  t335 = -1.*t31*t140*t317;
  t1243 = 0.340999127418*t502*t1130;
  t1310 = -0.134322983001*t502;
  t1449 = 1. + t1310;
  t1906 = t1449*t1730;
  t1928 = t335 + t1243 + t1906;
  t2190 = 0.930418*t42;
  t2196 = 0. + t2190;
  t2223 = -1.*t31*t2196*t317;
  t2289 = -0.8656776547239999*t502;
  t2342 = 1. + t2289;
  t2356 = t2342*t1130;
  t2357 = 0.340999127418*t502*t1730;
  t2360 = t2223 + t2356 + t2357;
  t2482 = -1.000000637725*t502;
  t2517 = 1. + t2482;
  t2528 = -1.*t2517*t31*t317;
  t2633 = -0.930418*t42;
  t2637 = 0. + t2633;
  t2640 = t2637*t1130;
  t2645 = 0.366501*t42;
  t2720 = 0. + t2645;
  t2752 = t2720*t1730;
  t2765 = t2528 + t2640 + t2752;
  t2846 = Cos(var1[20]);
  t2869 = -1.*t2846;
  t2893 = 1. + t2869;
  t6 = Sin(var1[20]);
  t20 = 0.930418*t19;
  t28 = 0. + t20;
  t2004 = t28*t1928;
  t2036 = 0.366501*t19;
  t2177 = 0. + t2036;
  t2399 = t2177*t2360;
  t2452 = -1.000000637725*t2434;
  t2480 = 1. + t2452;
  t2767 = t2480*t2765;
  t2803 = t2004 + t2399 + t2767;
  t2894 = -0.8656776547239999*t2434;
  t2896 = 1. + t2894;
  t2931 = t2896*t1928;
  t2951 = -0.340999127418*t2434*t2360;
  t2952 = -0.930418*t19;
  t2968 = 0. + t2952;
  t2974 = t2968*t2765;
  t2982 = t2931 + t2951 + t2974;
  t3026 = -0.340999127418*t2434*t1928;
  t3030 = -0.134322983001*t2434;
  t3048 = 1. + t3030;
  t3051 = t3048*t2360;
  t3054 = -0.366501*t19;
  t3057 = 0. + t3054;
  t3073 = t3057*t2765;
  t3076 = t3026 + t3051 + t3073;
  t7 = 0.366501*t6;
  t18 = 0. + t7;
  t3252 = Sin(var1[3]);
  t3248 = t31*t566*t317;
  t3253 = t3252*t1046;
  t3269 = t3248 + t3253;
  t3289 = t566*t3252;
  t3293 = -1.*t31*t317*t1046;
  t3299 = t3289 + t3293;
  t3270 = t615*t3269;
  t3300 = t660*t3299;
  t3304 = t3270 + t3300;
  t3318 = t660*t3269;
  t3322 = -1.*t615*t3299;
  t3324 = t3318 + t3322;
  t3306 = 0.340999127418*t502*t3304;
  t3326 = t2342*t3324;
  t3333 = t3306 + t3326;
  t3339 = t1449*t3304;
  t3343 = 0.340999127418*t502*t3324;
  t3348 = t3339 + t3343;
  t3358 = t2720*t3304;
  t3359 = t2637*t3324;
  t3365 = t3358 + t3359;
  t2999 = -0.134322983001*t2893;
  t3012 = 1. + t2999;
  t3089 = 0.930418*t6;
  t3109 = 0. + t3089;
  t3338 = t2177*t3333;
  t3357 = t28*t3348;
  t3366 = t2480*t3365;
  t3368 = t3338 + t3357 + t3366;
  t3122 = -0.8656776547239999*t2893;
  t3136 = 1. + t3122;
  t3370 = -0.340999127418*t2434*t3333;
  t3372 = t2896*t3348;
  t3374 = t2968*t3365;
  t3384 = t3370 + t3372 + t3374;
  t3395 = t3048*t3333;
  t3396 = -0.340999127418*t2434*t3348;
  t3403 = t3057*t3365;
  t3407 = t3395 + t3396 + t3403;
  t3160 = -1.000000637725*t2893;
  t3161 = 1. + t3160;
  t3165 = -0.930418*t6;
  t3172 = 0. + t3165;
  t3179 = -0.366501*t6;
  t3181 = 0. + t3179;
  t3498 = -1.*t566*t3252;
  t3501 = t31*t317*t1046;
  t3503 = t3498 + t3501;
  t3497 = -1.*t615*t3269;
  t3505 = t660*t3503;
  t3515 = t3497 + t3505;
  t3553 = -1.*t660*t3269;
  t3562 = -1.*t615*t3503;
  t3583 = t3553 + t3562;
  t3517 = 0.340999127418*t502*t3515;
  t3584 = t2342*t3583;
  t3587 = t3517 + t3584;
  t3597 = t1449*t3515;
  t3598 = 0.340999127418*t502*t3583;
  t3600 = t3597 + t3598;
  t3602 = t2720*t3515;
  t3612 = t2637*t3583;
  t3616 = t3602 + t3612;
  t3588 = t2177*t3587;
  t3601 = t28*t3600;
  t3617 = t2480*t3616;
  t3621 = t3588 + t3601 + t3617;
  t3631 = -0.340999127418*t2434*t3587;
  t3632 = t2896*t3600;
  t3634 = t2968*t3616;
  t3637 = t3631 + t3632 + t3634;
  t3650 = t3048*t3587;
  t3658 = -0.340999127418*t2434*t3600;
  t3660 = t3057*t3616;
  t3661 = t3650 + t3658 + t3660;
  t3768 = t615*t3503;
  t3769 = t3318 + t3768;
  t3755 = t31*t518*t140;
  t3771 = t1449*t3769;
  t3775 = t3755 + t3517 + t3771;
  t3795 = t31*t518*t2196;
  t3800 = t2342*t3515;
  t3806 = 0.340999127418*t502*t3769;
  t3808 = t3795 + t3800 + t3806;
  t3810 = t2517*t31*t518;
  t3818 = t2637*t3515;
  t3820 = t2720*t3769;
  t3821 = t3810 + t3818 + t3820;
  t3787 = t28*t3775;
  t3809 = t2177*t3808;
  t3822 = t2480*t3821;
  t3825 = t3787 + t3809 + t3822;
  t3833 = t2896*t3775;
  t3835 = -0.340999127418*t2434*t3808;
  t3836 = t2968*t3821;
  t3837 = t3833 + t3835 + t3836;
  t3841 = -0.340999127418*t2434*t3775;
  t3842 = t3048*t3808;
  t3846 = t3057*t3821;
  t3847 = t3841 + t3842 + t3846;
  t3899 = -0.8656776547239999*t19*t3775;
  t3900 = -0.340999127418*t19*t3808;
  t3914 = -0.930418*t2410*t3821;
  t3919 = t3899 + t3900 + t3914;
  t3923 = -0.340999127418*t19*t3775;
  t3925 = -0.134322983001*t19*t3808;
  t3930 = -0.366501*t2410*t3821;
  t3934 = t3923 + t3925 + t3930;
  t3939 = 0.930418*t2410*t3775;
  t3946 = 0.366501*t2410*t3808;
  t3949 = -1.000000637725*t19*t3821;
  t3953 = t3939 + t3946 + t3949;
  t3999 = -1.000000637725*t31*t518*t42;
  t4005 = -0.930418*t409*t3515;
  t4012 = 0.366501*t409*t3769;
  t4020 = t3999 + t4005 + t4012;
  t4031 = -0.366501*t409*t31*t518;
  t4032 = 0.340999127418*t42*t3515;
  t4033 = -0.134322983001*t42*t3769;
  t4036 = t4031 + t4032 + t4033;
  t4043 = 0.930418*t409*t31*t518;
  t4051 = -0.8656776547239999*t42*t3515;
  t4052 = 0.340999127418*t42*t3769;
  t4053 = t4043 + t4051 + t4052;
  t4025 = t3057*t4020;
  t4041 = -0.340999127418*t2434*t4036;
  t4062 = t3048*t4053;
  t4072 = t4025 + t4041 + t4062;
  t4076 = t2968*t4020;
  t4077 = t2896*t4036;
  t4078 = -0.340999127418*t2434*t4053;
  t4085 = t4076 + t4077 + t4078;
  t4088 = t2480*t4020;
  t4090 = t28*t4036;
  t4091 = t2177*t4053;
  t4095 = t4088 + t4090 + t4091;
  t4224 = -1.*t566*t3252*t317;
  t4234 = t31*t1046;
  t4240 = t4224 + t4234;
  t4246 = -1.*t31*t566;
  t4255 = -1.*t3252*t317*t1046;
  t4258 = t4246 + t4255;
  t4241 = -1.*t615*t4240;
  t4271 = t660*t4258;
  t4277 = t4241 + t4271;
  t4295 = t660*t4240;
  t4301 = t615*t4258;
  t4305 = t4295 + t4301;
  t4218 = -1.*t518*t140*t3252;
  t4292 = 0.340999127418*t502*t4277;
  t4309 = t1449*t4305;
  t4310 = t4218 + t4292 + t4309;
  t4314 = -1.*t518*t2196*t3252;
  t4318 = t2342*t4277;
  t4319 = 0.340999127418*t502*t4305;
  t4320 = t4314 + t4318 + t4319;
  t4328 = -1.*t2517*t518*t3252;
  t4335 = t2637*t4277;
  t4342 = t2720*t4305;
  t4349 = t4328 + t4335 + t4342;
  t4313 = t28*t4310;
  t4322 = t2177*t4320;
  t4353 = t2480*t4349;
  t4359 = t4313 + t4322 + t4353;
  t4363 = t2896*t4310;
  t4367 = -0.340999127418*t2434*t4320;
  t4368 = t2968*t4349;
  t4370 = t4363 + t4367 + t4368;
  t4382 = -0.340999127418*t2434*t4310;
  t4383 = t3048*t4320;
  t4384 = t3057*t4349;
  t4386 = t4382 + t4383 + t4384;
  t4460 = -1.*t518*t566*t615*t3252;
  t4462 = t660*t518*t3252*t1046;
  t4468 = t4460 + t4462;
  t4478 = t660*t518*t566*t3252;
  t4494 = t518*t615*t3252*t1046;
  t4497 = t4478 + t4494;
  t4458 = -1.*t140*t3252*t317;
  t4471 = 0.340999127418*t502*t4468;
  t4499 = t1449*t4497;
  t4508 = t4458 + t4471 + t4499;
  t4526 = -1.*t2196*t3252*t317;
  t4533 = t2342*t4468;
  t4536 = 0.340999127418*t502*t4497;
  t4537 = t4526 + t4533 + t4536;
  t4555 = -1.*t2517*t3252*t317;
  t4561 = t2637*t4468;
  t4563 = t2720*t4497;
  t4565 = t4555 + t4561 + t4563;
  t4510 = t28*t4508;
  t4544 = t2177*t4537;
  t4566 = t2480*t4565;
  t4570 = t4510 + t4544 + t4566;
  t4578 = t2896*t4508;
  t4585 = -0.340999127418*t2434*t4537;
  t4587 = t2968*t4565;
  t4591 = t4578 + t4585 + t4587;
  t4598 = -0.340999127418*t2434*t4508;
  t4601 = t3048*t4537;
  t4602 = t3057*t4565;
  t4604 = t4598 + t4601 + t4602;
  t4753 = t566*t3252*t317;
  t4754 = -1.*t31*t1046;
  t4760 = t4753 + t4754;
  t4773 = t615*t4760;
  t4776 = t4773 + t4271;
  t4778 = t660*t4760;
  t4786 = -1.*t615*t4258;
  t4788 = t4778 + t4786;
  t4777 = 0.340999127418*t502*t4776;
  t4794 = t2342*t4788;
  t4798 = t4777 + t4794;
  t4827 = t1449*t4776;
  t4831 = 0.340999127418*t502*t4788;
  t4833 = t4827 + t4831;
  t4835 = t2720*t4776;
  t4839 = t2637*t4788;
  t4840 = t4835 + t4839;
  t4804 = t2177*t4798;
  t4834 = t28*t4833;
  t4843 = t2480*t4840;
  t4844 = t4804 + t4834 + t4843;
  t4861 = -0.340999127418*t2434*t4798;
  t4868 = t2896*t4833;
  t4872 = t2968*t4840;
  t4875 = t4861 + t4868 + t4872;
  t4879 = t3048*t4798;
  t4882 = -0.340999127418*t2434*t4833;
  t4884 = t3057*t4840;
  t4885 = t4879 + t4882 + t4884;
  t4980 = t31*t566;
  t5001 = t3252*t317*t1046;
  t5005 = t4980 + t5001;
  t4973 = -1.*t615*t4760;
  t5007 = t660*t5005;
  t5008 = t4973 + t5007;
  t5018 = -1.*t660*t4760;
  t5022 = -1.*t615*t5005;
  t5023 = t5018 + t5022;
  t5017 = 0.340999127418*t502*t5008;
  t5025 = t2342*t5023;
  t5027 = t5017 + t5025;
  t5035 = t1449*t5008;
  t5045 = 0.340999127418*t502*t5023;
  t5051 = t5035 + t5045;
  t5060 = t2720*t5008;
  t5063 = t2637*t5023;
  t5064 = t5060 + t5063;
  t5030 = t2177*t5027;
  t5052 = t28*t5051;
  t5068 = t2480*t5064;
  t5080 = t5030 + t5052 + t5068;
  t5082 = -0.340999127418*t2434*t5027;
  t5084 = t2896*t5051;
  t5089 = t2968*t5064;
  t5096 = t5082 + t5084 + t5089;
  t5100 = t3048*t5027;
  t5105 = -0.340999127418*t2434*t5051;
  t5109 = t3057*t5064;
  t5112 = t5100 + t5105 + t5109;
  t5190 = t615*t5005;
  t5197 = t4778 + t5190;
  t5183 = t518*t140*t3252;
  t5207 = t1449*t5197;
  t5229 = t5183 + t5017 + t5207;
  t5233 = t518*t2196*t3252;
  t5240 = t2342*t5008;
  t5242 = 0.340999127418*t502*t5197;
  t5244 = t5233 + t5240 + t5242;
  t5256 = t2517*t518*t3252;
  t5277 = t2637*t5008;
  t5278 = t2720*t5197;
  t5284 = t5256 + t5277 + t5278;
  t5231 = t28*t5229;
  t5252 = t2177*t5244;
  t5293 = t2480*t5284;
  t5296 = t5231 + t5252 + t5293;
  t5300 = t2896*t5229;
  t5307 = -0.340999127418*t2434*t5244;
  t5308 = t2968*t5284;
  t5316 = t5300 + t5307 + t5308;
  t5326 = -0.340999127418*t2434*t5229;
  t5330 = t3048*t5244;
  t5336 = t3057*t5284;
  t5344 = t5326 + t5330 + t5336;
  t5400 = -0.8656776547239999*t19*t5229;
  t5402 = -0.340999127418*t19*t5244;
  t5404 = -0.930418*t2410*t5284;
  t5409 = t5400 + t5402 + t5404;
  t5417 = -0.340999127418*t19*t5229;
  t5421 = -0.134322983001*t19*t5244;
  t5428 = -0.366501*t2410*t5284;
  t5442 = t5417 + t5421 + t5428;
  t5459 = 0.930418*t2410*t5229;
  t5471 = 0.366501*t2410*t5244;
  t5485 = -1.000000637725*t19*t5284;
  t5488 = t5459 + t5471 + t5485;
  t5550 = -1.000000637725*t518*t42*t3252;
  t5557 = -0.930418*t409*t5008;
  t5560 = 0.366501*t409*t5197;
  t5561 = t5550 + t5557 + t5560;
  t5564 = -0.366501*t409*t518*t3252;
  t5567 = 0.340999127418*t42*t5008;
  t5573 = -0.134322983001*t42*t5197;
  t5574 = t5564 + t5567 + t5573;
  t5581 = 0.930418*t409*t518*t3252;
  t5586 = -0.8656776547239999*t42*t5008;
  t5589 = 0.340999127418*t42*t5197;
  t5591 = t5581 + t5586 + t5589;
  t5562 = t3057*t5561;
  t5579 = -0.340999127418*t2434*t5574;
  t5598 = t3048*t5591;
  t5601 = t5562 + t5579 + t5598;
  t5625 = t2968*t5561;
  t5627 = t2896*t5574;
  t5634 = -0.340999127418*t2434*t5591;
  t5644 = t5625 + t5627 + t5634;
  t5655 = t2480*t5561;
  t5659 = t28*t5574;
  t5660 = t2177*t5591;
  t5661 = t5655 + t5659 + t5660;
  t5761 = -1.*t518*t566*t615;
  t5768 = t660*t518*t1046;
  t5773 = t5761 + t5768;
  t5778 = -1.*t660*t518*t566;
  t5779 = -1.*t518*t615*t1046;
  t5781 = t5778 + t5779;
  t5777 = 0.340999127418*t502*t5773;
  t5783 = t2342*t5781;
  t5799 = t5777 + t5783;
  t5810 = t1449*t5773;
  t5819 = 0.340999127418*t502*t5781;
  t5820 = t5810 + t5819;
  t5824 = t2720*t5773;
  t5837 = t2637*t5781;
  t5848 = t5824 + t5837;
  t5800 = t2177*t5799;
  t5823 = t28*t5820;
  t5861 = t2480*t5848;
  t5863 = t5800 + t5823 + t5861;
  t5879 = -0.340999127418*t2434*t5799;
  t5880 = t2896*t5820;
  t5882 = t2968*t5848;
  t5896 = t5879 + t5880 + t5882;
  t5908 = t3048*t5799;
  t5909 = -0.340999127418*t2434*t5820;
  t5916 = t3057*t5848;
  t5919 = t5908 + t5909 + t5916;
  t6018 = t518*t566*t615;
  t6026 = -1.*t660*t518*t1046;
  t6031 = t6018 + t6026;
  t6046 = t660*t518*t566;
  t6054 = t518*t615*t1046;
  t6070 = t6046 + t6054;
  t6039 = 0.340999127418*t502*t6031;
  t6071 = t2342*t6070;
  t6073 = t6039 + t6071;
  t6080 = t1449*t6031;
  t6082 = 0.340999127418*t502*t6070;
  t6085 = t6080 + t6082;
  t6092 = t2720*t6031;
  t6096 = t2637*t6070;
  t6103 = t6092 + t6096;
  t6077 = t2177*t6073;
  t6087 = t28*t6085;
  t6105 = t2480*t6103;
  t6106 = t6077 + t6087 + t6105;
  t6120 = -0.340999127418*t2434*t6073;
  t6124 = t2896*t6085;
  t6131 = t2968*t6103;
  t6144 = t6120 + t6124 + t6131;
  t6146 = t3048*t6073;
  t6175 = -0.340999127418*t2434*t6085;
  t6180 = t3057*t6103;
  t6181 = t6146 + t6175 + t6180;
  t6280 = -1.*t140*t317;
  t6284 = t1449*t6070;
  t6312 = t6280 + t5777 + t6284;
  t6317 = -1.*t2196*t317;
  t6324 = t2342*t5773;
  t6328 = t6317 + t6324 + t6082;
  t6347 = -1.*t2517*t317;
  t6348 = t2637*t5773;
  t6351 = t2720*t6070;
  t6353 = t6347 + t6348 + t6351;
  t6315 = t28*t6312;
  t6337 = t2177*t6328;
  t6356 = t2480*t6353;
  t6369 = t6315 + t6337 + t6356;
  t6387 = t2896*t6312;
  t6388 = -0.340999127418*t2434*t6328;
  t6389 = t2968*t6353;
  t6390 = t6387 + t6388 + t6389;
  t6394 = -0.340999127418*t2434*t6312;
  t6396 = t3048*t6328;
  t6397 = t3057*t6353;
  t6398 = t6394 + t6396 + t6397;
  t6434 = -0.8656776547239999*t19*t6312;
  t6439 = -0.340999127418*t19*t6328;
  t6449 = -0.930418*t2410*t6353;
  t6459 = t6434 + t6439 + t6449;
  t6483 = -0.340999127418*t19*t6312;
  t6489 = -0.134322983001*t19*t6328;
  t6491 = -0.366501*t2410*t6353;
  t6493 = t6483 + t6489 + t6491;
  t6497 = 0.930418*t2410*t6312;
  t6505 = 0.366501*t2410*t6328;
  t6506 = -1.000000637725*t19*t6353;
  t6507 = t6497 + t6505 + t6506;
  t6551 = 1.000000637725*t42*t317;
  t6552 = -0.930418*t409*t5773;
  t6554 = 0.366501*t409*t6070;
  t6557 = t6551 + t6552 + t6554;
  t6562 = 0.366501*t409*t317;
  t6563 = 0.340999127418*t42*t5773;
  t6565 = -0.134322983001*t42*t6070;
  t6569 = t6562 + t6563 + t6565;
  t6579 = -0.930418*t409*t317;
  t6588 = -0.8656776547239999*t42*t5773;
  t6594 = 0.340999127418*t42*t6070;
  t6596 = t6579 + t6588 + t6594;
  t6560 = t3057*t6557;
  t6575 = -0.340999127418*t2434*t6569;
  t6598 = t3048*t6596;
  t6599 = t6560 + t6575 + t6598;
  t6613 = t2968*t6557;
  t6614 = t2896*t6569;
  t6621 = -0.340999127418*t2434*t6596;
  t6622 = t6613 + t6614 + t6621;
  t6626 = t2480*t6557;
  t6632 = t28*t6569;
  t6635 = t2177*t6596;
  t6637 = t6626 + t6632 + t6635;
  t6705 = t566*t615*t317;
  t6708 = -1.*t660*t317*t1046;
  t6710 = t6705 + t6708;
  t6715 = -1.*t660*t566*t317;
  t6716 = -1.*t615*t317*t1046;
  t6721 = t6715 + t6716;
  t6703 = -1.*t518*t140;
  t6712 = 0.340999127418*t502*t6710;
  t6724 = t1449*t6721;
  t6727 = t6703 + t6712 + t6724;
  t6729 = -1.*t518*t2196;
  t6732 = t2342*t6710;
  t6739 = 0.340999127418*t502*t6721;
  t6740 = t6729 + t6732 + t6739;
  t6745 = -1.*t2517*t518;
  t6746 = t2637*t6710;
  t6750 = t2720*t6721;
  t6753 = t6745 + t6746 + t6750;
  t6728 = t28*t6727;
  t6743 = t2177*t6740;
  t6764 = t2480*t6753;
  t6775 = t6728 + t6743 + t6764;
  t6784 = t2896*t6727;
  t6789 = -0.340999127418*t2434*t6740;
  t6794 = t2968*t6753;
  t6799 = t6784 + t6789 + t6794;
  t6802 = -0.340999127418*t2434*t6727;
  t6806 = t3048*t6740;
  t6809 = t3057*t6753;
  t6812 = t6802 + t6806 + t6809;
  t2845 = t18*t2803;
  t2989 = -0.340999127418*t2893*t2982;
  t3078 = t3012*t3076;
  t3085 = t2845 + t2989 + t3078;
  t3114 = t3109*t2803;
  t3148 = t3136*t2982;
  t3151 = -0.340999127418*t2893*t3076;
  t3155 = t3114 + t3148 + t3151;
  t3162 = t3161*t2803;
  t3176 = t3172*t2982;
  t3196 = t3181*t3076;
  t3206 = t3162 + t3176 + t3196;
  t3224 = -0.707107*t3206;
  t3369 = t18*t3368;
  t3385 = -0.340999127418*t2893*t3384;
  t3410 = t3012*t3407;
  t3411 = t3369 + t3385 + t3410;
  t3421 = t3109*t3368;
  t3422 = t3136*t3384;
  t3434 = -0.340999127418*t2893*t3407;
  t3443 = t3421 + t3422 + t3434;
  t3448 = t3161*t3368;
  t3449 = t3172*t3384;
  t3451 = t3181*t3407;
  t3454 = t3448 + t3449 + t3451;
  t3483 = -0.707107*t3454;
  t3630 = t18*t3621;
  t3642 = -0.340999127418*t2893*t3637;
  t3664 = t3012*t3661;
  t3672 = t3630 + t3642 + t3664;
  t3692 = t3109*t3621;
  t3701 = t3136*t3637;
  t3705 = -0.340999127418*t2893*t3661;
  t3725 = t3692 + t3701 + t3705;
  t3729 = t3161*t3621;
  t3732 = t3172*t3637;
  t3734 = t3181*t3661;
  t3735 = t3729 + t3732 + t3734;
  t3741 = -0.707107*t3735;
  t3830 = -1.000000637725*t6*t3825;
  t3839 = -0.930418*t2846*t3837;
  t3850 = -0.366501*t2846*t3847;
  t3854 = t3830 + t3839 + t3850;
  t3866 = -0.707107*t3854;
  t3867 = 0.930418*t2846*t3825;
  t3870 = -0.8656776547239999*t6*t3837;
  t3871 = -0.340999127418*t6*t3847;
  t3873 = t3867 + t3870 + t3871;
  t3877 = 0.366501*t2846*t3825;
  t3882 = -0.340999127418*t6*t3837;
  t3884 = -0.134322983001*t6*t3847;
  t3895 = t3877 + t3882 + t3884;
  t3920 = t3172*t3919;
  t3937 = t3181*t3934;
  t3955 = t3161*t3953;
  t3956 = t3920 + t3937 + t3955;
  t3958 = -0.707107*t3956;
  t3960 = -0.340999127418*t2893*t3919;
  t3965 = t3012*t3934;
  t3970 = t18*t3953;
  t3977 = t3960 + t3965 + t3970;
  t3980 = t3136*t3919;
  t3981 = -0.340999127418*t2893*t3934;
  t3982 = t3109*t3953;
  t3986 = t3980 + t3981 + t3982;
  t4074 = t3181*t4072;
  t4087 = t3172*t4085;
  t4100 = t3161*t4095;
  t4102 = t4074 + t4087 + t4100;
  t4105 = -0.707107*t4102;
  t4113 = t3012*t4072;
  t4118 = -0.340999127418*t2893*t4085;
  t4119 = t18*t4095;
  t4124 = t4113 + t4118 + t4119;
  t4130 = -0.340999127418*t2893*t4072;
  t4135 = t3136*t4085;
  t4136 = t3109*t4095;
  t4137 = t4130 + t4135 + t4136;
  t4360 = t18*t4359;
  t4373 = -0.340999127418*t2893*t4370;
  t4389 = t3012*t4386;
  t4390 = t4360 + t4373 + t4389;
  t4395 = t3109*t4359;
  t4400 = t3136*t4370;
  t4402 = -0.340999127418*t2893*t4386;
  t4416 = t4395 + t4400 + t4402;
  t4432 = t3161*t4359;
  t4433 = t3172*t4370;
  t4434 = t3181*t4386;
  t4435 = t4432 + t4433 + t4434;
  t4440 = -0.707107*t4435;
  t4574 = t18*t4570;
  t4592 = -0.340999127418*t2893*t4591;
  t4609 = t3012*t4604;
  t4610 = t4574 + t4592 + t4609;
  t4617 = t3109*t4570;
  t4619 = t3136*t4591;
  t4627 = -0.340999127418*t2893*t4604;
  t4628 = t4617 + t4619 + t4627;
  t4640 = t3161*t4570;
  t4651 = t3172*t4591;
  t4658 = t3181*t4604;
  t4659 = t4640 + t4651 + t4658;
  t4670 = -0.707107*t4659;
  t4680 = t18*t3825;
  t4688 = -0.340999127418*t2893*t3837;
  t4689 = t3012*t3847;
  t4696 = t4680 + t4688 + t4689;
  t4713 = t3109*t3825;
  t4714 = t3136*t3837;
  t4715 = -0.340999127418*t2893*t3847;
  t4737 = t4713 + t4714 + t4715;
  t4739 = t3161*t3825;
  t4740 = t3172*t3837;
  t4741 = t3181*t3847;
  t4743 = t4739 + t4740 + t4741;
  t4746 = -0.707107*t4743;
  t4859 = t18*t4844;
  t4876 = -0.340999127418*t2893*t4875;
  t4891 = t3012*t4885;
  t4892 = t4859 + t4876 + t4891;
  t4904 = t3109*t4844;
  t4908 = t3136*t4875;
  t4911 = -0.340999127418*t2893*t4885;
  t4931 = t4904 + t4908 + t4911;
  t4940 = t3161*t4844;
  t4944 = t3172*t4875;
  t4953 = t3181*t4885;
  t4955 = t4940 + t4944 + t4953;
  t4958 = -0.707107*t4955;
  t5081 = t18*t5080;
  t5099 = -0.340999127418*t2893*t5096;
  t5116 = t3012*t5112;
  t5124 = t5081 + t5099 + t5116;
  t5137 = t3109*t5080;
  t5142 = t3136*t5096;
  t5148 = -0.340999127418*t2893*t5112;
  t5153 = t5137 + t5142 + t5148;
  t5156 = t3161*t5080;
  t5157 = t3172*t5096;
  t5170 = t3181*t5112;
  t5171 = t5156 + t5157 + t5170;
  t5174 = -0.707107*t5171;
  t5298 = -1.000000637725*t6*t5296;
  t5320 = -0.930418*t2846*t5316;
  t5348 = -0.366501*t2846*t5344;
  t5350 = t5298 + t5320 + t5348;
  t5352 = -0.707107*t5350;
  t5358 = 0.930418*t2846*t5296;
  t5363 = -0.8656776547239999*t6*t5316;
  t5367 = -0.340999127418*t6*t5344;
  t5370 = t5358 + t5363 + t5367;
  t5373 = 0.366501*t2846*t5296;
  t5374 = -0.340999127418*t6*t5316;
  t5376 = -0.134322983001*t6*t5344;
  t5381 = t5373 + t5374 + t5376;
  t5416 = t3172*t5409;
  t5446 = t3181*t5442;
  t5502 = t3161*t5488;
  t5504 = t5416 + t5446 + t5502;
  t5505 = -0.707107*t5504;
  t5513 = -0.340999127418*t2893*t5409;
  t5519 = t3012*t5442;
  t5521 = t18*t5488;
  t5524 = t5513 + t5519 + t5521;
  t5529 = t3136*t5409;
  t5532 = -0.340999127418*t2893*t5442;
  t5535 = t3109*t5488;
  t5538 = t5529 + t5532 + t5535;
  t5612 = t3181*t5601;
  t5646 = t3172*t5644;
  t5664 = t3161*t5661;
  t5685 = t5612 + t5646 + t5664;
  t5688 = -0.707107*t5685;
  t5695 = t3012*t5601;
  t5711 = -0.340999127418*t2893*t5644;
  t5715 = t18*t5661;
  t5723 = t5695 + t5711 + t5715;
  t5732 = -0.340999127418*t2893*t5601;
  t5739 = t3136*t5644;
  t5746 = t3109*t5661;
  t5751 = t5732 + t5739 + t5746;
  t5877 = t18*t5863;
  t5906 = -0.340999127418*t2893*t5896;
  t5922 = t3012*t5919;
  t5928 = t5877 + t5906 + t5922;
  t5939 = t3109*t5863;
  t5949 = t3136*t5896;
  t5952 = -0.340999127418*t2893*t5919;
  t5953 = t5939 + t5949 + t5952;
  t5964 = t3161*t5863;
  t5973 = t3172*t5896;
  t5975 = t3181*t5919;
  t5978 = t5964 + t5973 + t5975;
  t5995 = -0.707107*t5978;
  t6109 = t18*t6106;
  t6145 = -0.340999127418*t2893*t6144;
  t6192 = t3012*t6181;
  t6200 = t6109 + t6145 + t6192;
  t6207 = t3109*t6106;
  t6215 = t3136*t6144;
  t6220 = -0.340999127418*t2893*t6181;
  t6223 = t6207 + t6215 + t6220;
  t6234 = t3161*t6106;
  t6240 = t3172*t6144;
  t6243 = t3181*t6181;
  t6251 = t6234 + t6240 + t6243;
  t6260 = -0.707107*t6251;
  t6384 = -1.000000637725*t6*t6369;
  t6393 = -0.930418*t2846*t6390;
  t6399 = -0.366501*t2846*t6398;
  t6400 = t6384 + t6393 + t6399;
  t6403 = -0.707107*t6400;
  t6404 = 0.930418*t2846*t6369;
  t6405 = -0.8656776547239999*t6*t6390;
  t6407 = -0.340999127418*t6*t6398;
  t6408 = t6404 + t6405 + t6407;
  t6410 = 0.366501*t2846*t6369;
  t6411 = -0.340999127418*t6*t6390;
  t6416 = -0.134322983001*t6*t6398;
  t6417 = t6410 + t6411 + t6416;
  t6471 = t3172*t6459;
  t6496 = t3181*t6493;
  t6508 = t3161*t6507;
  t6511 = t6471 + t6496 + t6508;
  t6512 = -0.707107*t6511;
  t6514 = -0.340999127418*t2893*t6459;
  t6522 = t3012*t6493;
  t6523 = t18*t6507;
  t6524 = t6514 + t6522 + t6523;
  t6529 = t3136*t6459;
  t6532 = -0.340999127418*t2893*t6493;
  t6536 = t3109*t6507;
  t6537 = t6529 + t6532 + t6536;
  t6606 = t3181*t6599;
  t6625 = t3172*t6622;
  t6647 = t3161*t6637;
  t6649 = t6606 + t6625 + t6647;
  t6650 = -0.707107*t6649;
  t6652 = t3012*t6599;
  t6658 = -0.340999127418*t2893*t6622;
  t6659 = t18*t6637;
  t6664 = t6652 + t6658 + t6659;
  t6679 = -0.340999127418*t2893*t6599;
  t6683 = t3136*t6622;
  t6686 = t3109*t6637;
  t6691 = t6679 + t6683 + t6686;
  t6781 = t18*t6775;
  t6800 = -0.340999127418*t2893*t6799;
  t6820 = t3012*t6812;
  t6833 = t6781 + t6800 + t6820;
  t6845 = t3109*t6775;
  t6846 = t3136*t6799;
  t6851 = -0.340999127418*t2893*t6812;
  t6853 = t6845 + t6846 + t6851;
  t6859 = t3161*t6775;
  t6860 = t3172*t6799;
  t6864 = t3181*t6812;
  t6881 = t6859 + t6860 + t6864;
  t6885 = -0.707107*t6881;
  p_output1[0]=(-0.259155*t4390 - 0.657905*t4416 + t4440)*var2[3] + (-0.259155*t3085 - 0.657905*t3155 + t3224)*var2[4] + (-0.259155*t3411 - 0.657905*t3443 + t3483)*var2[5] + (-0.259155*t3672 - 0.657905*t3725 + t3741)*var2[17] + (t4105 - 0.259155*t4124 - 0.657905*t4137)*var2[18] + (t3958 - 0.259155*t3977 - 0.657905*t3986)*var2[19] + (t3866 - 0.657905*t3873 - 0.259155*t3895)*var2[20];
  p_output1[1]=(-0.259155*t4696 - 0.657905*t4737 + t4746)*var2[3] + (-0.259155*t4610 - 0.657905*t4628 + t4670)*var2[4] + (-0.259155*t4892 - 0.657905*t4931 + t4958)*var2[5] + (-0.259155*t5124 - 0.657905*t5153 + t5174)*var2[17] + (t5688 - 0.259155*t5723 - 0.657905*t5751)*var2[18] + (t5505 - 0.259155*t5524 - 0.657905*t5538)*var2[19] + (t5352 - 0.657905*t5370 - 0.259155*t5381)*var2[20];
  p_output1[2]=(-0.259155*t6833 - 0.657905*t6853 + t6885)*var2[4] + (-0.259155*t6200 - 0.657905*t6223 + t6260)*var2[5] + (-0.259155*t5928 - 0.657905*t5953 + t5995)*var2[17] + (t6650 - 0.259155*t6664 - 0.657905*t6691)*var2[18] + (t6512 - 0.259155*t6524 - 0.657905*t6537)*var2[19] + (t6403 - 0.657905*t6408 - 0.259155*t6417)*var2[20];
  p_output1[3]=(0.259155*t4390 + 0.657905*t4416 + t4440)*var2[3] + (0.259155*t3085 + 0.657905*t3155 + t3224)*var2[4] + (0.259155*t3411 + 0.657905*t3443 + t3483)*var2[5] + (0.259155*t3672 + 0.657905*t3725 + t3741)*var2[17] + (t4105 + 0.259155*t4124 + 0.657905*t4137)*var2[18] + (t3958 + 0.259155*t3977 + 0.657905*t3986)*var2[19] + (t3866 + 0.657905*t3873 + 0.259155*t3895)*var2[20];
  p_output1[4]=(0.259155*t4696 + 0.657905*t4737 + t4746)*var2[3] + (0.259155*t4610 + 0.657905*t4628 + t4670)*var2[4] + (0.259155*t4892 + 0.657905*t4931 + t4958)*var2[5] + (0.259155*t5124 + 0.657905*t5153 + t5174)*var2[17] + (t5688 + 0.259155*t5723 + 0.657905*t5751)*var2[18] + (t5505 + 0.259155*t5524 + 0.657905*t5538)*var2[19] + (t5352 + 0.657905*t5370 + 0.259155*t5381)*var2[20];
  p_output1[5]=(0.259155*t6833 + 0.657905*t6853 + t6885)*var2[4] + (0.259155*t6200 + 0.657905*t6223 + t6260)*var2[5] + (0.259155*t5928 + 0.657905*t5953 + t5995)*var2[17] + (t6650 + 0.259155*t6664 + 0.657905*t6691)*var2[18] + (t6512 + 0.259155*t6524 + 0.657905*t6537)*var2[19] + (t6403 + 0.657905*t6408 + 0.259155*t6417)*var2[20];
  p_output1[6]=(0.930418*t4390 - 0.366501*t4416)*var2[3] + (0.930418*t3085 - 0.366501*t3155)*var2[4] + (0.930418*t3411 - 0.366501*t3443)*var2[5] + (0.930418*t3672 - 0.366501*t3725)*var2[17] + (0.930418*t4124 - 0.366501*t4137)*var2[18] + (0.930418*t3977 - 0.366501*t3986)*var2[19] + (-0.366501*t3873 + 0.930418*t3895)*var2[20];
  p_output1[7]=(0.930418*t4696 - 0.366501*t4737)*var2[3] + (0.930418*t4610 - 0.366501*t4628)*var2[4] + (0.930418*t4892 - 0.366501*t4931)*var2[5] + (0.930418*t5124 - 0.366501*t5153)*var2[17] + (0.930418*t5723 - 0.366501*t5751)*var2[18] + (0.930418*t5524 - 0.366501*t5538)*var2[19] + (-0.366501*t5370 + 0.930418*t5381)*var2[20];
  p_output1[8]=(0.930418*t6833 - 0.366501*t6853)*var2[4] + (0.930418*t6200 - 0.366501*t6223)*var2[5] + (0.930418*t5928 - 0.366501*t5953)*var2[17] + (0.930418*t6664 - 0.366501*t6691)*var2[18] + (0.930418*t6524 - 0.366501*t6537)*var2[19] + (-0.366501*t6408 + 0.930418*t6417)*var2[20];
}



void dR_knee_joint_right_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
