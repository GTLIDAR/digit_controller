/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:21:59 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dT_right_shoulder_yaw_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t509;
  double t1059;
  double t978;
  double t986;
  double t994;
  double t1206;
  double t1085;
  double t1148;
  double t1209;
  double t174;
  double t266;
  double t276;
  double t398;
  double t606;
  double t709;
  double t1195;
  double t1214;
  double t1215;
  double t1336;
  double t1367;
  double t1392;
  double t646;
  double t655;
  double t952;
  double t1271;
  double t1273;
  double t1290;
  double t1395;
  double t1403;
  double t1586;
  double t1587;
  double t1619;
  double t1633;
  double t1634;
  double t1644;
  double t1668;
  double t1670;
  double t290;
  double t1745;
  double t1749;
  double t1762;
  double t1793;
  double t1796;
  double t1797;
  double t1803;
  double t1805;
  double t1818;
  double t1854;
  double t1897;
  double t1506;
  double t1563;
  double t1577;
  double t2279;
  double t2276;
  double t2292;
  double t2311;
  double t2320;
  double t2329;
  double t2341;
  double t417;
  double t430;
  double t2314;
  double t2344;
  double t2347;
  double t2364;
  double t2369;
  double t2370;
  double t1714;
  double t1720;
  double t1899;
  double t1908;
  double t2349;
  double t2393;
  double t2408;
  double t1875;
  double t1882;
  double t2427;
  double t2428;
  double t2435;
  double t1929;
  double t1954;
  double t2447;
  double t2505;
  double t2512;
  double t2049;
  double t2098;
  double t2028;
  double t2029;
  double t2147;
  double t2168;
  double t2713;
  double t2721;
  double t2744;
  double t2697;
  double t2757;
  double t2764;
  double t2775;
  double t2783;
  double t2802;
  double t2770;
  double t2820;
  double t2821;
  double t2867;
  double t2871;
  double t2872;
  double t2884;
  double t2893;
  double t2899;
  double t3084;
  double t3087;
  double t3122;
  double t3082;
  double t3094;
  double t3106;
  double t3142;
  double t3143;
  double t3149;
  double t3164;
  double t3205;
  double t3211;
  double t3213;
  double t3215;
  double t3190;
  double t3303;
  double t3371;
  double t3375;
  double t3379;
  double t3382;
  double t3402;
  double t3434;
  double t3437;
  double t3444;
  double t3457;
  double t3461;
  double t3462;
  double t3464;
  double t3631;
  double t3646;
  double t3660;
  double t3680;
  double t3684;
  double t3693;
  double t3675;
  double t3696;
  double t3711;
  double t3725;
  double t3737;
  double t3739;
  double t3625;
  double t3712;
  double t3743;
  double t3751;
  double t3782;
  double t3783;
  double t3784;
  double t3788;
  double t3807;
  double t3833;
  double t3846;
  double t3847;
  double t3942;
  double t3946;
  double t3954;
  double t3972;
  double t3981;
  double t3982;
  double t3940;
  double t3958;
  double t3983;
  double t3986;
  double t3989;
  double t3991;
  double t3999;
  double t4001;
  double t4003;
  double t4007;
  double t4012;
  double t4021;
  double t4217;
  double t4240;
  double t4247;
  double t4249;
  double t4254;
  double t4260;
  double t4262;
  double t4264;
  double t4256;
  double t4272;
  double t4278;
  double t4289;
  double t4290;
  double t4307;
  double t4316;
  double t4319;
  double t4324;
  double t4446;
  double t4463;
  double t4469;
  double t4437;
  double t4496;
  double t4497;
  double t4509;
  double t4513;
  double t4519;
  double t4505;
  double t4520;
  double t4530;
  double t4549;
  double t4562;
  double t4563;
  double t4569;
  double t4570;
  double t4572;
  double t3121;
  double t3140;
  double t4643;
  double t4646;
  double t3186;
  double t3202;
  double t3255;
  double t3261;
  double t4639;
  double t4648;
  double t4649;
  double t4657;
  double t4659;
  double t4661;
  double t4665;
  double t3292;
  double t3305;
  double t4668;
  double t4669;
  double t4671;
  double t4675;
  double t3320;
  double t3337;
  double t3345;
  double t3355;
  double t4744;
  double t4752;
  double t4754;
  double t4757;
  double t4760;
  double t4761;
  double t4763;
  double t4770;
  double t4776;
  double t4777;
  double t4782;
  double t4783;
  double t4861;
  double t4863;
  double t4873;
  double t4876;
  double t4879;
  double t4886;
  double t4875;
  double t4898;
  double t4906;
  double t4909;
  double t4911;
  double t4914;
  double t4918;
  double t4921;
  double t4930;
  double t4969;
  double t4971;
  double t4972;
  double t4974;
  double t4975;
  double t4978;
  double t4973;
  double t4990;
  double t4999;
  double t5003;
  double t5004;
  double t5005;
  double t5029;
  double t5040;
  double t5052;
  double t5171;
  double t5174;
  double t5178;
  double t5186;
  double t5214;
  double t5226;
  double t5235;
  double t5239;
  double t5269;
  double t5277;
  double t5405;
  double t5409;
  double t5413;
  double t5416;
  double t5441;
  double t5446;
  double t5449;
  double t5452;
  double t5464;
  double t5467;
  double t5468;
  double t5485;
  double t5609;
  double t5613;
  double t5615;
  double t5620;
  double t5623;
  double t5626;
  double t5597;
  double t5617;
  double t5627;
  double t5631;
  double t5636;
  double t5638;
  double t5646;
  double t5649;
  double t5653;
  double t5655;
  double t5656;
  double t5667;
  double t1887;
  double t1913;
  double t1984;
  double t1996;
  double t2047;
  double t2105;
  double t2175;
  double t2191;
  double t2554;
  double t2557;
  double t2558;
  double t2564;
  double t2578;
  double t2608;
  double t2612;
  double t2628;
  double t2933;
  double t2938;
  double t2942;
  double t2943;
  double t2996;
  double t3018;
  double t3021;
  double t3055;
  double t3117;
  double t3165;
  double t3244;
  double t3250;
  double t3263;
  double t3272;
  double t3306;
  double t3307;
  double t3390;
  double t3451;
  double t3469;
  double t3472;
  double t3502;
  double t3547;
  double t3548;
  double t3551;
  double t3888;
  double t3890;
  double t3896;
  double t3901;
  double t3912;
  double t3918;
  double t3920;
  double t3931;
  double t4037;
  double t4038;
  double t4041;
  double t4062;
  double t4078;
  double t4085;
  double t4087;
  double t4088;
  double t4165;
  double t4184;
  double t4185;
  double t4197;
  double t4200;
  double t4201;
  double t4207;
  double t4208;
  double t4365;
  double t4371;
  double t4379;
  double t4386;
  double t4391;
  double t4393;
  double t4396;
  double t4410;
  double t4607;
  double t4610;
  double t4611;
  double t4612;
  double t4614;
  double t4618;
  double t4619;
  double t4620;
  double t4653;
  double t4666;
  double t4682;
  double t4683;
  double t4689;
  double t4693;
  double t4695;
  double t4696;
  double t4758;
  double t4772;
  double t4784;
  double t4785;
  double t4792;
  double t4800;
  double t4809;
  double t4813;
  double t4939;
  double t4945;
  double t4946;
  double t4948;
  double t4952;
  double t4953;
  double t4954;
  double t4956;
  double t5092;
  double t5094;
  double t5098;
  double t5109;
  double t5124;
  double t5125;
  double t5127;
  double t5137;
  double t5183;
  double t5234;
  double t5284;
  double t5300;
  double t5318;
  double t5328;
  double t5351;
  double t5353;
  double t5427;
  double t5456;
  double t5488;
  double t5490;
  double t5512;
  double t5527;
  double t5528;
  double t5534;
  double t5683;
  double t5687;
  double t5690;
  double t5691;
  double t5697;
  double t5698;
  double t5701;
  double t5702;
  double t1423;
  double t1713;
  double t1859;
  double t1873;
  double t1874;
  double t2417;
  double t2446;
  double t2519;
  double t2529;
  double t2553;
  double t2831;
  double t2873;
  double t2902;
  double t2913;
  double t2928;
  double t3340;
  double t3357;
  double t3358;
  double t3359;
  double t3360;
  double t3558;
  double t3565;
  double t3580;
  double t3581;
  double t3590;
  double t3756;
  double t3806;
  double t3852;
  double t3880;
  double t3885;
  double t3987;
  double t4002;
  double t4024;
  double t4034;
  double t4036;
  double t4113;
  double t4130;
  double t4152;
  double t4153;
  double t4157;
  double t4279;
  double t4308;
  double t4335;
  double t4339;
  double t4354;
  double t4533;
  double t4566;
  double t4581;
  double t4600;
  double t4604;
  double t4707;
  double t4708;
  double t4709;
  double t4710;
  double t4721;
  double t4820;
  double t4822;
  double t4826;
  double t4829;
  double t4833;
  double t4907;
  double t4917;
  double t4931;
  double t4933;
  double t4936;
  double t5000;
  double t5008;
  double t5060;
  double t5064;
  double t5087;
  double t5357;
  double t5361;
  double t5378;
  double t5379;
  double t5380;
  double t5553;
  double t5559;
  double t5565;
  double t5570;
  double t5574;
  double t5634;
  double t5650;
  double t5668;
  double t5670;
  double t5677;
  double t6395;
  double t6397;
  double t6526;
  double t6573;
  double t6532;
  double t6439;
  double t6446;
  double t6447;
  double t6399;
  double t6412;
  double t6413;
  double t6473;
  double t6475;
  double t6476;
  double t6503;
  double t6455;
  double t6459;
  double t6464;
  double t6469;
  double t6560;
  double t6568;
  double t6580;
  double t6582;
  double t6583;
  double t6589;
  double t6599;
  double t6508;
  double t6525;
  double t6528;
  double t6529;
  double t6541;
  double t6549;
  double t6551;
  double t6602;
  double t6627;
  double t6640;
  double t6641;
  double t6645;
  double t6647;
  double t6686;
  double t6888;
  double t6932;
  double t6912;
  double t6417;
  double t6421;
  double t6423;
  double t6427;
  double t6807;
  double t6815;
  double t6821;
  double t6830;
  double t6840;
  double t6895;
  double t6900;
  double t6919;
  double t6920;
  double t6925;
  double t6926;
  double t6929;
  double t6931;
  double t6942;
  double t6946;
  double t6948;
  double t6956;
  double t6968;
  double t6975;
  double t6981;
  double t6982;
  double t6983;
  double t6984;
  double t7026;
  double t7032;
  double t7041;
  double t7049;
  double t7057;
  double t7062;
  double t7076;
  double t7077;
  double t7080;
  t509 = Cos(var1[3]);
  t1059 = Cos(var1[4]);
  t978 = Cos(var1[25]);
  t986 = -1.*t978;
  t994 = 1. + t986;
  t1206 = Cos(var1[24]);
  t1085 = Cos(var1[5]);
  t1148 = Sin(var1[24]);
  t1209 = Sin(var1[5]);
  t174 = Cos(var1[26]);
  t266 = -1.*t174;
  t276 = 1. + t266;
  t398 = Sin(var1[26]);
  t606 = Sin(var1[25]);
  t709 = Sin(var1[4]);
  t1195 = -1.*t509*t1059*t1085*t1148;
  t1214 = t1206*t509*t1059*t1209;
  t1215 = t1195 + t1214;
  t1336 = t1206*t509*t1059*t1085;
  t1367 = t509*t1059*t1148*t1209;
  t1392 = t1336 + t1367;
  t646 = -0.994522*t606;
  t655 = 0. + t646;
  t952 = -1.*t509*t655*t709;
  t1271 = -0.103955395616*t994*t1215;
  t1273 = -0.9890740084840001*t994;
  t1290 = 1. + t1273;
  t1395 = t1290*t1392;
  t1403 = t952 + t1271 + t1395;
  t1586 = -0.104528*t606;
  t1587 = 0. + t1586;
  t1619 = -1.*t509*t1587*t709;
  t1633 = -0.010926102783999999*t994;
  t1634 = 1. + t1633;
  t1644 = t1634*t1215;
  t1668 = -0.103955395616*t994*t1392;
  t1670 = t1619 + t1644 + t1668;
  t290 = -0.49726168403800003*t276;
  t1745 = -1.0000001112680001*t994;
  t1749 = 1. + t1745;
  t1762 = -1.*t1749*t509*t709;
  t1793 = 0.104528*t606;
  t1796 = 0. + t1793;
  t1797 = t1796*t1215;
  t1803 = 0.994522*t606;
  t1805 = 0. + t1803;
  t1818 = t1805*t1392;
  t1854 = t1762 + t1797 + t1818;
  t1897 = 0.051978134642000004*t276;
  t1506 = -0.05226439969100001*t276;
  t1563 = -0.703234*t398;
  t1577 = t1506 + t1563;
  t2279 = Sin(var1[3]);
  t2276 = t509*t1085*t709;
  t2292 = t2279*t1209;
  t2311 = t2276 + t2292;
  t2320 = t1085*t2279;
  t2329 = -1.*t509*t709*t1209;
  t2341 = t2320 + t2329;
  t417 = 0.073913*t398;
  t430 = t290 + t417;
  t2314 = t1148*t2311;
  t2344 = t1206*t2341;
  t2347 = t2314 + t2344;
  t2364 = t1206*t2311;
  t2369 = -1.*t1148*t2341;
  t2370 = t2364 + t2369;
  t1714 = -0.500001190325*t276;
  t1720 = 1. + t1714;
  t1899 = -0.707107*t398;
  t1908 = t1897 + t1899;
  t2349 = -0.103955395616*t994*t2347;
  t2393 = t1634*t2370;
  t2408 = t2349 + t2393;
  t1875 = -0.5054634410180001*t276;
  t1882 = 1. + t1875;
  t2427 = t1290*t2347;
  t2428 = -0.103955395616*t994*t2370;
  t2435 = t2427 + t2428;
  t1929 = -0.073913*t398;
  t1954 = t290 + t1929;
  t2447 = t1805*t2347;
  t2505 = t1796*t2370;
  t2512 = t2447 + t2505;
  t2049 = -0.9945383682050002*t276;
  t2098 = 1. + t2049;
  t2028 = 0.707107*t398;
  t2029 = t1897 + t2028;
  t2147 = 0.703234*t398;
  t2168 = t1506 + t2147;
  t2713 = -1.*t1085*t2279;
  t2721 = t509*t709*t1209;
  t2744 = t2713 + t2721;
  t2697 = -1.*t1148*t2311;
  t2757 = t1206*t2744;
  t2764 = t2697 + t2757;
  t2775 = -1.*t1206*t2311;
  t2783 = -1.*t1148*t2744;
  t2802 = t2775 + t2783;
  t2770 = -0.103955395616*t994*t2764;
  t2820 = t1634*t2802;
  t2821 = t2770 + t2820;
  t2867 = t1290*t2764;
  t2871 = -0.103955395616*t994*t2802;
  t2872 = t2867 + t2871;
  t2884 = t1805*t2764;
  t2893 = t1796*t2802;
  t2899 = t2884 + t2893;
  t3084 = t1148*t2744;
  t3087 = t2364 + t3084;
  t3122 = 0.051978134642000004*t398;
  t3082 = t509*t1059*t655;
  t3094 = t1290*t3087;
  t3106 = t3082 + t2770 + t3094;
  t3142 = t509*t1059*t1587;
  t3143 = t1634*t2764;
  t3149 = -0.103955395616*t994*t3087;
  t3164 = t3142 + t3143 + t3149;
  t3205 = t1749*t509*t1059;
  t3211 = t1796*t2764;
  t3213 = t1805*t3087;
  t3215 = t3205 + t3211 + t3213;
  t3190 = -0.49726168403800003*t398;
  t3303 = -0.05226439969100001*t398;
  t3371 = -1.0000001112680001*t509*t1059*t606;
  t3375 = 0.104528*t978*t2764;
  t3379 = 0.994522*t978*t3087;
  t3382 = t3371 + t3375 + t3379;
  t3402 = -0.994522*t978*t509*t1059;
  t3434 = -0.103955395616*t606*t2764;
  t3437 = -0.9890740084840001*t606*t3087;
  t3444 = t3402 + t3434 + t3437;
  t3457 = -0.104528*t978*t509*t1059;
  t3461 = -0.010926102783999999*t606*t2764;
  t3462 = -0.103955395616*t606*t3087;
  t3464 = t3457 + t3461 + t3462;
  t3631 = -1.*t1085*t2279*t709;
  t3646 = t509*t1209;
  t3660 = t3631 + t3646;
  t3680 = -1.*t509*t1085;
  t3684 = -1.*t2279*t709*t1209;
  t3693 = t3680 + t3684;
  t3675 = -1.*t1148*t3660;
  t3696 = t1206*t3693;
  t3711 = t3675 + t3696;
  t3725 = t1206*t3660;
  t3737 = t1148*t3693;
  t3739 = t3725 + t3737;
  t3625 = -1.*t1059*t655*t2279;
  t3712 = -0.103955395616*t994*t3711;
  t3743 = t1290*t3739;
  t3751 = t3625 + t3712 + t3743;
  t3782 = -1.*t1059*t1587*t2279;
  t3783 = t1634*t3711;
  t3784 = -0.103955395616*t994*t3739;
  t3788 = t3782 + t3783 + t3784;
  t3807 = -1.*t1749*t1059*t2279;
  t3833 = t1796*t3711;
  t3846 = t1805*t3739;
  t3847 = t3807 + t3833 + t3846;
  t3942 = -1.*t1059*t1085*t1148*t2279;
  t3946 = t1206*t1059*t2279*t1209;
  t3954 = t3942 + t3946;
  t3972 = t1206*t1059*t1085*t2279;
  t3981 = t1059*t1148*t2279*t1209;
  t3982 = t3972 + t3981;
  t3940 = -1.*t655*t2279*t709;
  t3958 = -0.103955395616*t994*t3954;
  t3983 = t1290*t3982;
  t3986 = t3940 + t3958 + t3983;
  t3989 = -1.*t1587*t2279*t709;
  t3991 = t1634*t3954;
  t3999 = -0.103955395616*t994*t3982;
  t4001 = t3989 + t3991 + t3999;
  t4003 = -1.*t1749*t2279*t709;
  t4007 = t1796*t3954;
  t4012 = t1805*t3982;
  t4021 = t4003 + t4007 + t4012;
  t4217 = t1085*t2279*t709;
  t4240 = -1.*t509*t1209;
  t4247 = t4217 + t4240;
  t4249 = t1148*t4247;
  t4254 = t4249 + t3696;
  t4260 = t1206*t4247;
  t4262 = -1.*t1148*t3693;
  t4264 = t4260 + t4262;
  t4256 = -0.103955395616*t994*t4254;
  t4272 = t1634*t4264;
  t4278 = t4256 + t4272;
  t4289 = t1290*t4254;
  t4290 = -0.103955395616*t994*t4264;
  t4307 = t4289 + t4290;
  t4316 = t1805*t4254;
  t4319 = t1796*t4264;
  t4324 = t4316 + t4319;
  t4446 = t509*t1085;
  t4463 = t2279*t709*t1209;
  t4469 = t4446 + t4463;
  t4437 = -1.*t1148*t4247;
  t4496 = t1206*t4469;
  t4497 = t4437 + t4496;
  t4509 = -1.*t1206*t4247;
  t4513 = -1.*t1148*t4469;
  t4519 = t4509 + t4513;
  t4505 = -0.103955395616*t994*t4497;
  t4520 = t1634*t4519;
  t4530 = t4505 + t4520;
  t4549 = t1290*t4497;
  t4562 = -0.103955395616*t994*t4519;
  t4563 = t4549 + t4562;
  t4569 = t1805*t4497;
  t4570 = t1796*t4519;
  t4572 = t4569 + t4570;
  t3121 = -0.707107*t174;
  t3140 = t3121 + t3122;
  t4643 = t1148*t4469;
  t4646 = t4260 + t4643;
  t3186 = -0.073913*t174;
  t3202 = t3186 + t3190;
  t3255 = 0.707107*t174;
  t3261 = t3255 + t3122;
  t4639 = t1059*t655*t2279;
  t4648 = t1290*t4646;
  t4649 = t4639 + t4505 + t4648;
  t4657 = t1059*t1587*t2279;
  t4659 = t1634*t4497;
  t4661 = -0.103955395616*t994*t4646;
  t4665 = t4657 + t4659 + t4661;
  t3292 = 0.703234*t174;
  t3305 = t3292 + t3303;
  t4668 = t1749*t1059*t2279;
  t4669 = t1796*t4497;
  t4671 = t1805*t4646;
  t4675 = t4668 + t4669 + t4671;
  t3320 = 0.073913*t174;
  t3337 = t3320 + t3190;
  t3345 = -0.703234*t174;
  t3355 = t3345 + t3303;
  t4744 = -1.0000001112680001*t1059*t606*t2279;
  t4752 = 0.104528*t978*t4497;
  t4754 = 0.994522*t978*t4646;
  t4757 = t4744 + t4752 + t4754;
  t4760 = -0.994522*t978*t1059*t2279;
  t4761 = -0.103955395616*t606*t4497;
  t4763 = -0.9890740084840001*t606*t4646;
  t4770 = t4760 + t4761 + t4763;
  t4776 = -0.104528*t978*t1059*t2279;
  t4777 = -0.010926102783999999*t606*t4497;
  t4782 = -0.103955395616*t606*t4646;
  t4783 = t4776 + t4777 + t4782;
  t4861 = -1.*t1059*t1085*t1148;
  t4863 = t1206*t1059*t1209;
  t4873 = t4861 + t4863;
  t4876 = -1.*t1206*t1059*t1085;
  t4879 = -1.*t1059*t1148*t1209;
  t4886 = t4876 + t4879;
  t4875 = -0.103955395616*t994*t4873;
  t4898 = t1634*t4886;
  t4906 = t4875 + t4898;
  t4909 = t1290*t4873;
  t4911 = -0.103955395616*t994*t4886;
  t4914 = t4909 + t4911;
  t4918 = t1805*t4873;
  t4921 = t1796*t4886;
  t4930 = t4918 + t4921;
  t4969 = t1059*t1085*t1148;
  t4971 = -1.*t1206*t1059*t1209;
  t4972 = t4969 + t4971;
  t4974 = t1206*t1059*t1085;
  t4975 = t1059*t1148*t1209;
  t4978 = t4974 + t4975;
  t4973 = -0.103955395616*t994*t4972;
  t4990 = t1634*t4978;
  t4999 = t4973 + t4990;
  t5003 = t1290*t4972;
  t5004 = -0.103955395616*t994*t4978;
  t5005 = t5003 + t5004;
  t5029 = t1805*t4972;
  t5040 = t1796*t4978;
  t5052 = t5029 + t5040;
  t5171 = -1.*t655*t709;
  t5174 = t1290*t4978;
  t5178 = t5171 + t4875 + t5174;
  t5186 = -1.*t1587*t709;
  t5214 = t1634*t4873;
  t5226 = t5186 + t5214 + t5004;
  t5235 = -1.*t1749*t709;
  t5239 = t1796*t4873;
  t5269 = t1805*t4978;
  t5277 = t5235 + t5239 + t5269;
  t5405 = 1.0000001112680001*t606*t709;
  t5409 = 0.104528*t978*t4873;
  t5413 = 0.994522*t978*t4978;
  t5416 = t5405 + t5409 + t5413;
  t5441 = 0.994522*t978*t709;
  t5446 = -0.103955395616*t606*t4873;
  t5449 = -0.9890740084840001*t606*t4978;
  t5452 = t5441 + t5446 + t5449;
  t5464 = 0.104528*t978*t709;
  t5467 = -0.010926102783999999*t606*t4873;
  t5468 = -0.103955395616*t606*t4978;
  t5485 = t5464 + t5467 + t5468;
  t5609 = t1085*t1148*t709;
  t5613 = -1.*t1206*t709*t1209;
  t5615 = t5609 + t5613;
  t5620 = -1.*t1206*t1085*t709;
  t5623 = -1.*t1148*t709*t1209;
  t5626 = t5620 + t5623;
  t5597 = -1.*t1059*t655;
  t5617 = -0.103955395616*t994*t5615;
  t5627 = t1290*t5626;
  t5631 = t5597 + t5617 + t5627;
  t5636 = -1.*t1059*t1587;
  t5638 = t1634*t5615;
  t5646 = -0.103955395616*t994*t5626;
  t5649 = t5636 + t5638 + t5646;
  t5653 = -1.*t1749*t1059;
  t5655 = t1796*t5615;
  t5656 = t1805*t5626;
  t5667 = t5653 + t5655 + t5656;
  t1887 = t1882*t1403;
  t1913 = t1908*t1670;
  t1984 = t1954*t1854;
  t1996 = t1887 + t1913 + t1984;
  t2047 = t2029*t1403;
  t2105 = t2098*t1670;
  t2175 = t2168*t1854;
  t2191 = t2047 + t2105 + t2175;
  t2554 = t1908*t2408;
  t2557 = t1882*t2435;
  t2558 = t1954*t2512;
  t2564 = t2554 + t2557 + t2558;
  t2578 = t2098*t2408;
  t2608 = t2029*t2435;
  t2612 = t2168*t2512;
  t2628 = t2578 + t2608 + t2612;
  t2933 = t1908*t2821;
  t2938 = t1882*t2872;
  t2942 = t1954*t2899;
  t2943 = t2933 + t2938 + t2942;
  t2996 = t2098*t2821;
  t3018 = t2029*t2872;
  t3021 = t2168*t2899;
  t3055 = t2996 + t3018 + t3021;
  t3117 = -0.5054634410180001*t398*t3106;
  t3165 = t3140*t3164;
  t3244 = t3202*t3215;
  t3250 = t3117 + t3165 + t3244;
  t3263 = t3261*t3106;
  t3272 = -0.9945383682050002*t398*t3164;
  t3306 = t3305*t3215;
  t3307 = t3263 + t3272 + t3306;
  t3390 = t2168*t3382;
  t3451 = t2029*t3444;
  t3469 = t2098*t3464;
  t3472 = t3390 + t3451 + t3469;
  t3502 = t1954*t3382;
  t3547 = t1882*t3444;
  t3548 = t1908*t3464;
  t3551 = t3502 + t3547 + t3548;
  t3888 = t1882*t3751;
  t3890 = t1908*t3788;
  t3896 = t1954*t3847;
  t3901 = t3888 + t3890 + t3896;
  t3912 = t2029*t3751;
  t3918 = t2098*t3788;
  t3920 = t2168*t3847;
  t3931 = t3912 + t3918 + t3920;
  t4037 = t1882*t3986;
  t4038 = t1908*t4001;
  t4041 = t1954*t4021;
  t4062 = t4037 + t4038 + t4041;
  t4078 = t2029*t3986;
  t4085 = t2098*t4001;
  t4087 = t2168*t4021;
  t4088 = t4078 + t4085 + t4087;
  t4165 = t1882*t3106;
  t4184 = t1908*t3164;
  t4185 = t1954*t3215;
  t4197 = t4165 + t4184 + t4185;
  t4200 = t2029*t3106;
  t4201 = t2098*t3164;
  t4207 = t2168*t3215;
  t4208 = t4200 + t4201 + t4207;
  t4365 = t1908*t4278;
  t4371 = t1882*t4307;
  t4379 = t1954*t4324;
  t4386 = t4365 + t4371 + t4379;
  t4391 = t2098*t4278;
  t4393 = t2029*t4307;
  t4396 = t2168*t4324;
  t4410 = t4391 + t4393 + t4396;
  t4607 = t1908*t4530;
  t4610 = t1882*t4563;
  t4611 = t1954*t4572;
  t4612 = t4607 + t4610 + t4611;
  t4614 = t2098*t4530;
  t4618 = t2029*t4563;
  t4619 = t2168*t4572;
  t4620 = t4614 + t4618 + t4619;
  t4653 = -0.5054634410180001*t398*t4649;
  t4666 = t3140*t4665;
  t4682 = t3202*t4675;
  t4683 = t4653 + t4666 + t4682;
  t4689 = t3261*t4649;
  t4693 = -0.9945383682050002*t398*t4665;
  t4695 = t3305*t4675;
  t4696 = t4689 + t4693 + t4695;
  t4758 = t2168*t4757;
  t4772 = t2029*t4770;
  t4784 = t2098*t4783;
  t4785 = t4758 + t4772 + t4784;
  t4792 = t1954*t4757;
  t4800 = t1882*t4770;
  t4809 = t1908*t4783;
  t4813 = t4792 + t4800 + t4809;
  t4939 = t1908*t4906;
  t4945 = t1882*t4914;
  t4946 = t1954*t4930;
  t4948 = t4939 + t4945 + t4946;
  t4952 = t2098*t4906;
  t4953 = t2029*t4914;
  t4954 = t2168*t4930;
  t4956 = t4952 + t4953 + t4954;
  t5092 = t1908*t4999;
  t5094 = t1882*t5005;
  t5098 = t1954*t5052;
  t5109 = t5092 + t5094 + t5098;
  t5124 = t2098*t4999;
  t5125 = t2029*t5005;
  t5127 = t2168*t5052;
  t5137 = t5124 + t5125 + t5127;
  t5183 = -0.5054634410180001*t398*t5178;
  t5234 = t3140*t5226;
  t5284 = t3202*t5277;
  t5300 = t5183 + t5234 + t5284;
  t5318 = t3261*t5178;
  t5328 = -0.9945383682050002*t398*t5226;
  t5351 = t3305*t5277;
  t5353 = t5318 + t5328 + t5351;
  t5427 = t2168*t5416;
  t5456 = t2029*t5452;
  t5488 = t2098*t5485;
  t5490 = t5427 + t5456 + t5488;
  t5512 = t1954*t5416;
  t5527 = t1882*t5452;
  t5528 = t1908*t5485;
  t5534 = t5512 + t5527 + t5528;
  t5683 = t1882*t5631;
  t5687 = t1908*t5649;
  t5690 = t1954*t5667;
  t5691 = t5683 + t5687 + t5690;
  t5697 = t2029*t5631;
  t5698 = t2098*t5649;
  t5701 = t2168*t5667;
  t5702 = t5697 + t5698 + t5701;
  t1423 = t430*t1403;
  t1713 = t1577*t1670;
  t1859 = t1720*t1854;
  t1873 = t1423 + t1713 + t1859;
  t1874 = 0.707107*t1873;
  t2417 = t1577*t2408;
  t2446 = t430*t2435;
  t2519 = t1720*t2512;
  t2529 = t2417 + t2446 + t2519;
  t2553 = 0.707107*t2529;
  t2831 = t1577*t2821;
  t2873 = t430*t2872;
  t2902 = t1720*t2899;
  t2913 = t2831 + t2873 + t2902;
  t2928 = 0.707107*t2913;
  t3340 = t3337*t3106;
  t3357 = t3355*t3164;
  t3358 = -0.500001190325*t398*t3215;
  t3359 = t3340 + t3357 + t3358;
  t3360 = 0.707107*t3359;
  t3558 = t1720*t3382;
  t3565 = t430*t3444;
  t3580 = t1577*t3464;
  t3581 = t3558 + t3565 + t3580;
  t3590 = 0.707107*t3581;
  t3756 = t430*t3751;
  t3806 = t1577*t3788;
  t3852 = t1720*t3847;
  t3880 = t3756 + t3806 + t3852;
  t3885 = 0.707107*t3880;
  t3987 = t430*t3986;
  t4002 = t1577*t4001;
  t4024 = t1720*t4021;
  t4034 = t3987 + t4002 + t4024;
  t4036 = 0.707107*t4034;
  t4113 = t430*t3106;
  t4130 = t1577*t3164;
  t4152 = t1720*t3215;
  t4153 = t4113 + t4130 + t4152;
  t4157 = 0.707107*t4153;
  t4279 = t1577*t4278;
  t4308 = t430*t4307;
  t4335 = t1720*t4324;
  t4339 = t4279 + t4308 + t4335;
  t4354 = 0.707107*t4339;
  t4533 = t1577*t4530;
  t4566 = t430*t4563;
  t4581 = t1720*t4572;
  t4600 = t4533 + t4566 + t4581;
  t4604 = 0.707107*t4600;
  t4707 = t3337*t4649;
  t4708 = t3355*t4665;
  t4709 = -0.500001190325*t398*t4675;
  t4710 = t4707 + t4708 + t4709;
  t4721 = 0.707107*t4710;
  t4820 = t1720*t4757;
  t4822 = t430*t4770;
  t4826 = t1577*t4783;
  t4829 = t4820 + t4822 + t4826;
  t4833 = 0.707107*t4829;
  t4907 = t1577*t4906;
  t4917 = t430*t4914;
  t4931 = t1720*t4930;
  t4933 = t4907 + t4917 + t4931;
  t4936 = 0.707107*t4933;
  t5000 = t1577*t4999;
  t5008 = t430*t5005;
  t5060 = t1720*t5052;
  t5064 = t5000 + t5008 + t5060;
  t5087 = 0.707107*t5064;
  t5357 = t3337*t5178;
  t5361 = t3355*t5226;
  t5378 = -0.500001190325*t398*t5277;
  t5379 = t5357 + t5361 + t5378;
  t5380 = 0.707107*t5379;
  t5553 = t1720*t5416;
  t5559 = t430*t5452;
  t5565 = t1577*t5485;
  t5570 = t5553 + t5559 + t5565;
  t5574 = 0.707107*t5570;
  t5634 = t430*t5631;
  t5650 = t1577*t5649;
  t5668 = t1720*t5667;
  t5670 = t5634 + t5650 + t5668;
  t5677 = 0.707107*t5670;
  t6395 = -1.*t1206;
  t6397 = 1. + t6395;
  t6526 = -0.051978134642000004*t276;
  t6573 = 0.05226439969100001*t276;
  t6532 = 0.49726168403800003*t276;
  t6439 = -0.12*t6397;
  t6446 = -0.4*t1148;
  t6447 = 0. + t6439 + t6446;
  t6399 = 0.4*t6397;
  t6412 = -0.12*t1148;
  t6413 = 0. + t6399 + t6412;
  t6473 = -1.1924972351948546e-8*var1[25];
  t6475 = 0.38315655000705834*t994;
  t6476 = -0.05650052807*t655;
  t6503 = t6473 + t6475 + t6476;
  t6455 = 1.1345904784751044e-7*var1[25];
  t6459 = 0.04027119345689465*t994;
  t6464 = -0.05650052807*t1587;
  t6469 = t6455 + t6459 + t6464;
  t6560 = 1.639789470231751e-8*var1[26];
  t6568 = -0.22983603018311177*t276;
  t6580 = t6573 + t2147;
  t6582 = 0.164383620275*t6580;
  t6583 = t6526 + t2028;
  t6589 = 0.18957839082800002*t6583;
  t6599 = t6560 + t6568 + t6582 + t6589;
  t6508 = 1.5601527583902087e-7*var1[26];
  t6525 = 0.09582494577057615*t276;
  t6528 = t6526 + t1899;
  t6529 = -0.231098203479*t6528;
  t6541 = t6532 + t1929;
  t6549 = 0.164383620275*t6541;
  t6551 = t6508 + t6525 + t6529 + t6549;
  t6602 = -1.568745163810375e-7*var1[26];
  t6627 = 0.08219200580743281*t276;
  t6640 = t6573 + t1563;
  t6641 = -0.231098203479*t6640;
  t6645 = t6532 + t417;
  t6647 = 0.18957839082800002*t6645;
  t6686 = t6602 + t6627 + t6641 + t6647;
  t6888 = -0.051978134642000004*t398;
  t6932 = 0.05226439969100001*t398;
  t6912 = 0.49726168403800003*t398;
  t6417 = -0.056500534356700764*t994;
  t6421 = 0.040271188976*t1796;
  t6423 = 0.38315650737400003*t1805;
  t6427 = 0. + t6417 + t6421 + t6423;
  t6807 = -0.12*t1206;
  t6815 = 0.4*t1148;
  t6821 = t6807 + t6815;
  t6830 = -0.4*t1206;
  t6840 = t6830 + t6412;
  t6895 = t3121 + t6888;
  t6900 = -0.231098203479*t6895;
  t6919 = t3186 + t6912;
  t6920 = 0.164383620275*t6919;
  t6925 = 0.09582494577057615*t398;
  t6926 = 1.5601527583902087e-7 + t6900 + t6920 + t6925;
  t6929 = t3255 + t6888;
  t6931 = 0.18957839082800002*t6929;
  t6942 = t3292 + t6932;
  t6946 = 0.164383620275*t6942;
  t6948 = -0.22983603018311177*t398;
  t6956 = 1.639789470231751e-8 + t6931 + t6946 + t6948;
  t6968 = t3345 + t6932;
  t6975 = -0.231098203479*t6968;
  t6981 = t3320 + t6912;
  t6982 = 0.18957839082800002*t6981;
  t6983 = 0.08219200580743281*t398;
  t6984 = -1.568745163810375e-7 + t6975 + t6982 + t6983;
  t7026 = 0.3852670428678886*t978;
  t7032 = -0.056500534356700764*t606;
  t7041 = t7026 + t7032;
  t7049 = 0.0059058871981009595*t978;
  t7057 = 0.04027119345689465*t606;
  t7062 = 1.1345904784751044e-7 + t7049 + t7057;
  t7076 = 0.05619101817723254*t978;
  t7077 = 0.38315655000705834*t606;
  t7080 = -1.1924972351948546e-8 + t7076 + t7077;
  p_output1[0]=(t3885 + 0.703234*t3901 + 0.073913*t3931)*var2[3] + (t1874 + 0.703234*t1996 + 0.073913*t2191)*var2[4] + (t2553 + 0.703234*t2564 + 0.073913*t2628)*var2[5] + (t2928 + 0.703234*t2943 + 0.073913*t3055)*var2[24] + (0.073913*t3472 + 0.703234*t3551 + t3590)*var2[25] + (0.703234*t3250 + 0.073913*t3307 + t3360)*var2[26];
  p_output1[1]=(t4157 + 0.703234*t4197 + 0.073913*t4208)*var2[3] + (t4036 + 0.703234*t4062 + 0.073913*t4088)*var2[4] + (t4354 + 0.703234*t4386 + 0.073913*t4410)*var2[5] + (t4604 + 0.703234*t4612 + 0.073913*t4620)*var2[24] + (0.073913*t4785 + 0.703234*t4813 + t4833)*var2[25] + (0.703234*t4683 + 0.073913*t4696 + t4721)*var2[26];
  p_output1[2]=(t5677 + 0.703234*t5691 + 0.073913*t5702)*var2[4] + (t5087 + 0.703234*t5109 + 0.073913*t5137)*var2[5] + (t4936 + 0.703234*t4948 + 0.073913*t4956)*var2[24] + (0.073913*t5490 + 0.703234*t5534 + t5574)*var2[25] + (0.703234*t5300 + 0.073913*t5353 + t5380)*var2[26];
  p_output1[3]=0;
  p_output1[4]=(0.104528*t3901 - 0.994522*t3931)*var2[3] + (0.104528*t1996 - 0.994522*t2191)*var2[4] + (0.104528*t2564 - 0.994522*t2628)*var2[5] + (0.104528*t2943 - 0.994522*t3055)*var2[24] + (-0.994522*t3472 + 0.104528*t3551)*var2[25] + (0.104528*t3250 - 0.994522*t3307)*var2[26];
  p_output1[5]=(0.104528*t4197 - 0.994522*t4208)*var2[3] + (0.104528*t4062 - 0.994522*t4088)*var2[4] + (0.104528*t4386 - 0.994522*t4410)*var2[5] + (0.104528*t4612 - 0.994522*t4620)*var2[24] + (-0.994522*t4785 + 0.104528*t4813)*var2[25] + (0.104528*t4683 - 0.994522*t4696)*var2[26];
  p_output1[6]=(0.104528*t5691 - 0.994522*t5702)*var2[4] + (0.104528*t5109 - 0.994522*t5137)*var2[5] + (0.104528*t4948 - 0.994522*t4956)*var2[24] + (-0.994522*t5490 + 0.104528*t5534)*var2[25] + (0.104528*t5300 - 0.994522*t5353)*var2[26];
  p_output1[7]=0;
  p_output1[8]=(t3885 - 0.703234*t3901 - 0.073913*t3931)*var2[3] + (t1874 - 0.703234*t1996 - 0.073913*t2191)*var2[4] + (t2553 - 0.703234*t2564 - 0.073913*t2628)*var2[5] + (t2928 - 0.703234*t2943 - 0.073913*t3055)*var2[24] + (-0.073913*t3472 - 0.703234*t3551 + t3590)*var2[25] + (-0.703234*t3250 - 0.073913*t3307 + t3360)*var2[26];
  p_output1[9]=(t4157 - 0.703234*t4197 - 0.073913*t4208)*var2[3] + (t4036 - 0.703234*t4062 - 0.073913*t4088)*var2[4] + (t4354 - 0.703234*t4386 - 0.073913*t4410)*var2[5] + (t4604 - 0.703234*t4612 - 0.073913*t4620)*var2[24] + (-0.073913*t4785 - 0.703234*t4813 + t4833)*var2[25] + (-0.703234*t4683 - 0.073913*t4696 + t4721)*var2[26];
  p_output1[10]=(t5677 - 0.703234*t5691 - 0.073913*t5702)*var2[4] + (t5087 - 0.703234*t5109 - 0.073913*t5137)*var2[5] + (t4936 - 0.703234*t4948 - 0.073913*t4956)*var2[24] + (-0.073913*t5490 - 0.703234*t5534 + t5574)*var2[25] + (-0.703234*t5300 - 0.073913*t5353 + t5380)*var2[26];
  p_output1[11]=0;
  p_output1[12]=var2[0] + (0.140811*t3880 + 0.213182*t3901 - 0.230568*t3931 + t3660*t6413 - 1.*t1059*t2279*t6427 + t3693*t6447 + t3711*t6469 + t3739*t6503 + t3751*t6551 + t3788*t6599 + t3847*t6686)*var2[3] + (0.140811*t1873 + 0.213182*t1996 - 0.230568*t2191 + t1059*t1085*t509*t6413 + t1059*t1209*t509*t6447 + t1215*t6469 + t1392*t6503 + t1403*t6551 + t1670*t6599 + t1854*t6686 - 1.*t509*t6427*t709)*var2[4] + (0.140811*t2529 + 0.213182*t2564 - 0.230568*t2628 + t2341*t6413 + t2311*t6447 + t2370*t6469 + t2347*t6503 + t2435*t6551 + t2408*t6599 + t2512*t6686)*var2[5] + (0.140811*t2913 + 0.213182*t2943 - 0.230568*t3055 + t2802*t6469 + t2764*t6503 + t2872*t6551 + t2821*t6599 + t2899*t6686 + t2311*t6821 + t2744*t6840)*var2[24] + (-0.230568*t3472 + 0.213182*t3551 + 0.140811*t3581 + t3444*t6551 + t3464*t6599 + t3382*t6686 + t1059*t509*t7041 + t2764*t7062 + t3087*t7080)*var2[25] + (0.213182*t3250 - 0.230568*t3307 + 0.140811*t3359 + t3106*t6926 + t3164*t6956 + t3215*t6984)*var2[26];
  p_output1[13]=var2[1] + (0.140811*t4153 + 0.213182*t4197 - 0.230568*t4208 + t2311*t6413 + t1059*t509*t6427 + t2744*t6447 + t2764*t6469 + t3087*t6503 + t3106*t6551 + t3164*t6599 + t3215*t6686)*var2[3] + (0.140811*t4034 + 0.213182*t4062 - 0.230568*t4088 + t1059*t1085*t2279*t6413 + t1059*t1209*t2279*t6447 + t3954*t6469 + t3982*t6503 + t3986*t6551 + t4001*t6599 + t4021*t6686 - 1.*t2279*t6427*t709)*var2[4] + (0.140811*t4339 + 0.213182*t4386 - 0.230568*t4410 + t3693*t6413 + t4247*t6447 + t4264*t6469 + t4254*t6503 + t4307*t6551 + t4278*t6599 + t4324*t6686)*var2[5] + (0.140811*t4600 + 0.213182*t4612 - 0.230568*t4620 + t4519*t6469 + t4497*t6503 + t4563*t6551 + t4530*t6599 + t4572*t6686 + t4247*t6821 + t4469*t6840)*var2[24] + (-0.230568*t4785 + 0.213182*t4813 + 0.140811*t4829 + t4770*t6551 + t4783*t6599 + t4757*t6686 + t1059*t2279*t7041 + t4497*t7062 + t4646*t7080)*var2[25] + (0.213182*t4683 - 0.230568*t4696 + 0.140811*t4710 + t4649*t6926 + t4665*t6956 + t4675*t6984)*var2[26];
  p_output1[14]=var2[2] + (0.140811*t5670 + 0.213182*t5691 - 0.230568*t5702 - 1.*t1059*t6427 + t5615*t6469 + t5626*t6503 + t5631*t6551 + t5649*t6599 + t5667*t6686 - 1.*t1085*t6413*t709 - 1.*t1209*t6447*t709)*var2[4] + (0.140811*t5064 + 0.213182*t5109 - 0.230568*t5137 - 1.*t1059*t1209*t6413 + t1059*t1085*t6447 + t4978*t6469 + t4972*t6503 + t5005*t6551 + t4999*t6599 + t5052*t6686)*var2[5] + (0.140811*t4933 + 0.213182*t4948 - 0.230568*t4956 + t4886*t6469 + t4873*t6503 + t4914*t6551 + t4906*t6599 + t4930*t6686 + t1059*t1085*t6821 + t1059*t1209*t6840)*var2[24] + (-0.230568*t5490 + 0.213182*t5534 + 0.140811*t5570 + t5452*t6551 + t5485*t6599 + t5416*t6686 + t4873*t7062 + t4978*t7080 - 1.*t7041*t709)*var2[25] + (0.213182*t5300 - 0.230568*t5353 + 0.140811*t5379 + t5178*t6926 + t5226*t6956 + t5277*t6984)*var2[26];
  p_output1[15]=0;
}



void dT_right_shoulder_yaw_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
