/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 20:55:34 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "dR_shoulder_yaw_joint_right_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t940;
  double t1887;
  double t1334;
  double t1755;
  double t1811;
  double t2563;
  double t2360;
  double t2376;
  double t2565;
  double t62;
  double t292;
  double t733;
  double t861;
  double t1011;
  double t1221;
  double t2393;
  double t2566;
  double t2572;
  double t2657;
  double t2664;
  double t2665;
  double t1184;
  double t1190;
  double t1315;
  double t2610;
  double t2653;
  double t2654;
  double t2694;
  double t2754;
  double t2871;
  double t2898;
  double t2904;
  double t2907;
  double t2908;
  double t2915;
  double t2929;
  double t2937;
  double t827;
  double t2983;
  double t2984;
  double t2985;
  double t2999;
  double t3001;
  double t3014;
  double t3017;
  double t3018;
  double t3021;
  double t3030;
  double t3097;
  double t2793;
  double t2812;
  double t2834;
  double t3321;
  double t3317;
  double t3322;
  double t3324;
  double t3339;
  double t3340;
  double t3342;
  double t889;
  double t933;
  double t3334;
  double t3357;
  double t3363;
  double t3381;
  double t3384;
  double t3409;
  double t2965;
  double t2975;
  double t3112;
  double t3122;
  double t3372;
  double t3412;
  double t3415;
  double t3068;
  double t3073;
  double t3453;
  double t3462;
  double t3498;
  double t3126;
  double t3150;
  double t3572;
  double t3576;
  double t3577;
  double t3239;
  double t3243;
  double t3191;
  double t3219;
  double t3260;
  double t3268;
  double t3675;
  double t3687;
  double t3698;
  double t3659;
  double t3711;
  double t3743;
  double t3746;
  double t3750;
  double t3751;
  double t3745;
  double t3752;
  double t3764;
  double t3772;
  double t3789;
  double t3802;
  double t3848;
  double t3849;
  double t3857;
  double t3967;
  double t3972;
  double t4006;
  double t3964;
  double t3977;
  double t3979;
  double t4011;
  double t4036;
  double t4039;
  double t4044;
  double t4063;
  double t4064;
  double t4065;
  double t4069;
  double t4059;
  double t4123;
  double t4233;
  double t4234;
  double t4239;
  double t4242;
  double t4262;
  double t4263;
  double t4268;
  double t4270;
  double t4274;
  double t4277;
  double t4281;
  double t4283;
  double t4443;
  double t4449;
  double t4452;
  double t4458;
  double t4460;
  double t4463;
  double t4455;
  double t4470;
  double t4478;
  double t4499;
  double t4502;
  double t4503;
  double t4437;
  double t4487;
  double t4514;
  double t4536;
  double t4547;
  double t4552;
  double t4554;
  double t4569;
  double t4571;
  double t4572;
  double t4573;
  double t4574;
  double t4657;
  double t4665;
  double t4666;
  double t4671;
  double t4672;
  double t4673;
  double t4656;
  double t4668;
  double t4675;
  double t4678;
  double t4680;
  double t4683;
  double t4686;
  double t4688;
  double t4694;
  double t4701;
  double t4708;
  double t4711;
  double t4877;
  double t4878;
  double t4888;
  double t4891;
  double t4893;
  double t4898;
  double t4900;
  double t4903;
  double t4896;
  double t4911;
  double t4932;
  double t4943;
  double t4952;
  double t4957;
  double t4966;
  double t4967;
  double t4969;
  double t5054;
  double t5067;
  double t5077;
  double t5051;
  double t5084;
  double t5092;
  double t5102;
  double t5105;
  double t5124;
  double t5099;
  double t5133;
  double t5143;
  double t5162;
  double t5163;
  double t5173;
  double t5183;
  double t5192;
  double t5198;
  double t3990;
  double t4009;
  double t5325;
  double t5327;
  double t4058;
  double t4060;
  double t4086;
  double t4092;
  double t5320;
  double t5342;
  double t5356;
  double t5364;
  double t5369;
  double t5385;
  double t5387;
  double t4119;
  double t4139;
  double t5394;
  double t5397;
  double t5399;
  double t5400;
  double t4164;
  double t4169;
  double t4182;
  double t4192;
  double t5499;
  double t5510;
  double t5528;
  double t5532;
  double t5548;
  double t5549;
  double t5576;
  double t5581;
  double t5602;
  double t5645;
  double t5649;
  double t5651;
  double t5754;
  double t5755;
  double t5759;
  double t5777;
  double t5778;
  double t5779;
  double t5765;
  double t5787;
  double t5789;
  double t5813;
  double t5818;
  double t5828;
  double t5838;
  double t5839;
  double t5840;
  double t5912;
  double t5914;
  double t5915;
  double t5919;
  double t5922;
  double t5926;
  double t5918;
  double t5942;
  double t5945;
  double t5956;
  double t5958;
  double t5963;
  double t5970;
  double t5973;
  double t5976;
  double t6037;
  double t6038;
  double t6039;
  double t6042;
  double t6044;
  double t6046;
  double t6066;
  double t6079;
  double t6094;
  double t6102;
  double t6183;
  double t6186;
  double t6194;
  double t6195;
  double t6203;
  double t6208;
  double t6209;
  double t6213;
  double t6218;
  double t6232;
  double t6233;
  double t6258;
  double t6316;
  double t6321;
  double t6337;
  double t6351;
  double t6355;
  double t6356;
  double t6313;
  double t6350;
  double t6358;
  double t6359;
  double t6364;
  double t6377;
  double t6383;
  double t6387;
  double t6396;
  double t6400;
  double t6407;
  double t6408;
  double t3076;
  double t3123;
  double t3155;
  double t3178;
  double t3235;
  double t3247;
  double t3300;
  double t3303;
  double t3603;
  double t3606;
  double t3608;
  double t3610;
  double t3618;
  double t3620;
  double t3626;
  double t3630;
  double t3909;
  double t3912;
  double t3918;
  double t3924;
  double t3940;
  double t3941;
  double t3942;
  double t3948;
  double t3989;
  double t4056;
  double t4070;
  double t4077;
  double t4094;
  double t4109;
  double t4153;
  double t4157;
  double t4254;
  double t4272;
  double t4301;
  double t4311;
  double t4355;
  double t4357;
  double t4364;
  double t4380;
  double t4596;
  double t4600;
  double t4604;
  double t4612;
  double t4619;
  double t4621;
  double t4626;
  double t4628;
  double t4728;
  double t4730;
  double t4735;
  double t4740;
  double t4759;
  double t4763;
  double t4764;
  double t4767;
  double t4822;
  double t4826;
  double t4830;
  double t4831;
  double t4834;
  double t4840;
  double t4845;
  double t4846;
  double t4976;
  double t4978;
  double t4982;
  double t4987;
  double t5010;
  double t5015;
  double t5029;
  double t5033;
  double t5223;
  double t5228;
  double t5230;
  double t5233;
  double t5274;
  double t5275;
  double t5281;
  double t5285;
  double t5361;
  double t5388;
  double t5403;
  double t5407;
  double t5420;
  double t5429;
  double t5450;
  double t5453;
  double t5540;
  double t5601;
  double t5656;
  double t5672;
  double t5676;
  double t5679;
  double t5686;
  double t5689;
  double t5854;
  double t5855;
  double t5862;
  double t5870;
  double t5880;
  double t5884;
  double t5895;
  double t5896;
  double t5995;
  double t6000;
  double t6001;
  double t6002;
  double t6011;
  double t6021;
  double t6022;
  double t6024;
  double t6041;
  double t6058;
  double t6118;
  double t6127;
  double t6135;
  double t6136;
  double t6144;
  double t6145;
  double t6200;
  double t6215;
  double t6259;
  double t6262;
  double t6269;
  double t6270;
  double t6272;
  double t6277;
  double t6420;
  double t6431;
  double t6432;
  double t6435;
  double t6444;
  double t6448;
  double t6453;
  double t6460;
  double t2771;
  double t2940;
  double t3040;
  double t3041;
  double t3045;
  double t3430;
  double t3502;
  double t3587;
  double t3591;
  double t3600;
  double t3771;
  double t3828;
  double t3878;
  double t3895;
  double t3904;
  double t4181;
  double t4197;
  double t4199;
  double t4201;
  double t4203;
  double t4394;
  double t4395;
  double t4400;
  double t4402;
  double t4416;
  double t4540;
  double t4570;
  double t4576;
  double t4592;
  double t4593;
  double t4679;
  double t4690;
  double t4717;
  double t4725;
  double t4727;
  double t4790;
  double t4791;
  double t4799;
  double t4802;
  double t4816;
  double t4939;
  double t4958;
  double t4970;
  double t4973;
  double t4975;
  double t5155;
  double t5179;
  double t5210;
  double t5213;
  double t5218;
  double t5465;
  double t5471;
  double t5480;
  double t5487;
  double t5490;
  double t5699;
  double t5700;
  double t5708;
  double t5710;
  double t5716;
  double t5800;
  double t5833;
  double t5841;
  double t5845;
  double t5852;
  double t5946;
  double t5967;
  double t5977;
  double t5986;
  double t5988;
  double t6156;
  double t6160;
  double t6164;
  double t6169;
  double t6171;
  double t6283;
  double t6290;
  double t6294;
  double t6301;
  double t6304;
  double t6361;
  double t6394;
  double t6413;
  double t6417;
  double t6419;
  t940 = Cos(var1[3]);
  t1887 = Cos(var1[4]);
  t1334 = Cos(var1[25]);
  t1755 = -1.*t1334;
  t1811 = 1. + t1755;
  t2563 = Cos(var1[24]);
  t2360 = Cos(var1[5]);
  t2376 = Sin(var1[24]);
  t2565 = Sin(var1[5]);
  t62 = Cos(var1[26]);
  t292 = -1.*t62;
  t733 = 1. + t292;
  t861 = Sin(var1[26]);
  t1011 = Sin(var1[25]);
  t1221 = Sin(var1[4]);
  t2393 = -1.*t940*t1887*t2360*t2376;
  t2566 = t2563*t940*t1887*t2565;
  t2572 = t2393 + t2566;
  t2657 = t2563*t940*t1887*t2360;
  t2664 = t940*t1887*t2376*t2565;
  t2665 = t2657 + t2664;
  t1184 = -0.994522*t1011;
  t1190 = 0. + t1184;
  t1315 = -1.*t940*t1190*t1221;
  t2610 = -0.103955395616*t1811*t2572;
  t2653 = -0.9890740084840001*t1811;
  t2654 = 1. + t2653;
  t2694 = t2654*t2665;
  t2754 = t1315 + t2610 + t2694;
  t2871 = -0.104528*t1011;
  t2898 = 0. + t2871;
  t2904 = -1.*t940*t2898*t1221;
  t2907 = -0.010926102783999999*t1811;
  t2908 = 1. + t2907;
  t2915 = t2908*t2572;
  t2929 = -0.103955395616*t1811*t2665;
  t2937 = t2904 + t2915 + t2929;
  t827 = -0.49726168403800003*t733;
  t2983 = -1.0000001112680001*t1811;
  t2984 = 1. + t2983;
  t2985 = -1.*t2984*t940*t1221;
  t2999 = 0.104528*t1011;
  t3001 = 0. + t2999;
  t3014 = t3001*t2572;
  t3017 = 0.994522*t1011;
  t3018 = 0. + t3017;
  t3021 = t3018*t2665;
  t3030 = t2985 + t3014 + t3021;
  t3097 = 0.051978134642000004*t733;
  t2793 = -0.05226439969100001*t733;
  t2812 = -0.703234*t861;
  t2834 = t2793 + t2812;
  t3321 = Sin(var1[3]);
  t3317 = t940*t2360*t1221;
  t3322 = t3321*t2565;
  t3324 = t3317 + t3322;
  t3339 = t2360*t3321;
  t3340 = -1.*t940*t1221*t2565;
  t3342 = t3339 + t3340;
  t889 = 0.073913*t861;
  t933 = t827 + t889;
  t3334 = t2376*t3324;
  t3357 = t2563*t3342;
  t3363 = t3334 + t3357;
  t3381 = t2563*t3324;
  t3384 = -1.*t2376*t3342;
  t3409 = t3381 + t3384;
  t2965 = -0.500001190325*t733;
  t2975 = 1. + t2965;
  t3112 = -0.707107*t861;
  t3122 = t3097 + t3112;
  t3372 = -0.103955395616*t1811*t3363;
  t3412 = t2908*t3409;
  t3415 = t3372 + t3412;
  t3068 = -0.5054634410180001*t733;
  t3073 = 1. + t3068;
  t3453 = t2654*t3363;
  t3462 = -0.103955395616*t1811*t3409;
  t3498 = t3453 + t3462;
  t3126 = -0.073913*t861;
  t3150 = t827 + t3126;
  t3572 = t3018*t3363;
  t3576 = t3001*t3409;
  t3577 = t3572 + t3576;
  t3239 = -0.9945383682050002*t733;
  t3243 = 1. + t3239;
  t3191 = 0.707107*t861;
  t3219 = t3097 + t3191;
  t3260 = 0.703234*t861;
  t3268 = t2793 + t3260;
  t3675 = -1.*t2360*t3321;
  t3687 = t940*t1221*t2565;
  t3698 = t3675 + t3687;
  t3659 = -1.*t2376*t3324;
  t3711 = t2563*t3698;
  t3743 = t3659 + t3711;
  t3746 = -1.*t2563*t3324;
  t3750 = -1.*t2376*t3698;
  t3751 = t3746 + t3750;
  t3745 = -0.103955395616*t1811*t3743;
  t3752 = t2908*t3751;
  t3764 = t3745 + t3752;
  t3772 = t2654*t3743;
  t3789 = -0.103955395616*t1811*t3751;
  t3802 = t3772 + t3789;
  t3848 = t3018*t3743;
  t3849 = t3001*t3751;
  t3857 = t3848 + t3849;
  t3967 = t2376*t3698;
  t3972 = t3381 + t3967;
  t4006 = 0.051978134642000004*t861;
  t3964 = t940*t1887*t1190;
  t3977 = t2654*t3972;
  t3979 = t3964 + t3745 + t3977;
  t4011 = t940*t1887*t2898;
  t4036 = t2908*t3743;
  t4039 = -0.103955395616*t1811*t3972;
  t4044 = t4011 + t4036 + t4039;
  t4063 = t2984*t940*t1887;
  t4064 = t3001*t3743;
  t4065 = t3018*t3972;
  t4069 = t4063 + t4064 + t4065;
  t4059 = -0.49726168403800003*t861;
  t4123 = -0.05226439969100001*t861;
  t4233 = -1.0000001112680001*t940*t1887*t1011;
  t4234 = 0.104528*t1334*t3743;
  t4239 = 0.994522*t1334*t3972;
  t4242 = t4233 + t4234 + t4239;
  t4262 = -0.994522*t1334*t940*t1887;
  t4263 = -0.103955395616*t1011*t3743;
  t4268 = -0.9890740084840001*t1011*t3972;
  t4270 = t4262 + t4263 + t4268;
  t4274 = -0.104528*t1334*t940*t1887;
  t4277 = -0.010926102783999999*t1011*t3743;
  t4281 = -0.103955395616*t1011*t3972;
  t4283 = t4274 + t4277 + t4281;
  t4443 = -1.*t2360*t3321*t1221;
  t4449 = t940*t2565;
  t4452 = t4443 + t4449;
  t4458 = -1.*t940*t2360;
  t4460 = -1.*t3321*t1221*t2565;
  t4463 = t4458 + t4460;
  t4455 = -1.*t2376*t4452;
  t4470 = t2563*t4463;
  t4478 = t4455 + t4470;
  t4499 = t2563*t4452;
  t4502 = t2376*t4463;
  t4503 = t4499 + t4502;
  t4437 = -1.*t1887*t1190*t3321;
  t4487 = -0.103955395616*t1811*t4478;
  t4514 = t2654*t4503;
  t4536 = t4437 + t4487 + t4514;
  t4547 = -1.*t1887*t2898*t3321;
  t4552 = t2908*t4478;
  t4554 = -0.103955395616*t1811*t4503;
  t4569 = t4547 + t4552 + t4554;
  t4571 = -1.*t2984*t1887*t3321;
  t4572 = t3001*t4478;
  t4573 = t3018*t4503;
  t4574 = t4571 + t4572 + t4573;
  t4657 = -1.*t1887*t2360*t2376*t3321;
  t4665 = t2563*t1887*t3321*t2565;
  t4666 = t4657 + t4665;
  t4671 = t2563*t1887*t2360*t3321;
  t4672 = t1887*t2376*t3321*t2565;
  t4673 = t4671 + t4672;
  t4656 = -1.*t1190*t3321*t1221;
  t4668 = -0.103955395616*t1811*t4666;
  t4675 = t2654*t4673;
  t4678 = t4656 + t4668 + t4675;
  t4680 = -1.*t2898*t3321*t1221;
  t4683 = t2908*t4666;
  t4686 = -0.103955395616*t1811*t4673;
  t4688 = t4680 + t4683 + t4686;
  t4694 = -1.*t2984*t3321*t1221;
  t4701 = t3001*t4666;
  t4708 = t3018*t4673;
  t4711 = t4694 + t4701 + t4708;
  t4877 = t2360*t3321*t1221;
  t4878 = -1.*t940*t2565;
  t4888 = t4877 + t4878;
  t4891 = t2376*t4888;
  t4893 = t4891 + t4470;
  t4898 = t2563*t4888;
  t4900 = -1.*t2376*t4463;
  t4903 = t4898 + t4900;
  t4896 = -0.103955395616*t1811*t4893;
  t4911 = t2908*t4903;
  t4932 = t4896 + t4911;
  t4943 = t2654*t4893;
  t4952 = -0.103955395616*t1811*t4903;
  t4957 = t4943 + t4952;
  t4966 = t3018*t4893;
  t4967 = t3001*t4903;
  t4969 = t4966 + t4967;
  t5054 = t940*t2360;
  t5067 = t3321*t1221*t2565;
  t5077 = t5054 + t5067;
  t5051 = -1.*t2376*t4888;
  t5084 = t2563*t5077;
  t5092 = t5051 + t5084;
  t5102 = -1.*t2563*t4888;
  t5105 = -1.*t2376*t5077;
  t5124 = t5102 + t5105;
  t5099 = -0.103955395616*t1811*t5092;
  t5133 = t2908*t5124;
  t5143 = t5099 + t5133;
  t5162 = t2654*t5092;
  t5163 = -0.103955395616*t1811*t5124;
  t5173 = t5162 + t5163;
  t5183 = t3018*t5092;
  t5192 = t3001*t5124;
  t5198 = t5183 + t5192;
  t3990 = -0.707107*t62;
  t4009 = t3990 + t4006;
  t5325 = t2376*t5077;
  t5327 = t4898 + t5325;
  t4058 = -0.073913*t62;
  t4060 = t4058 + t4059;
  t4086 = 0.707107*t62;
  t4092 = t4086 + t4006;
  t5320 = t1887*t1190*t3321;
  t5342 = t2654*t5327;
  t5356 = t5320 + t5099 + t5342;
  t5364 = t1887*t2898*t3321;
  t5369 = t2908*t5092;
  t5385 = -0.103955395616*t1811*t5327;
  t5387 = t5364 + t5369 + t5385;
  t4119 = 0.703234*t62;
  t4139 = t4119 + t4123;
  t5394 = t2984*t1887*t3321;
  t5397 = t3001*t5092;
  t5399 = t3018*t5327;
  t5400 = t5394 + t5397 + t5399;
  t4164 = 0.073913*t62;
  t4169 = t4164 + t4059;
  t4182 = -0.703234*t62;
  t4192 = t4182 + t4123;
  t5499 = -1.0000001112680001*t1887*t1011*t3321;
  t5510 = 0.104528*t1334*t5092;
  t5528 = 0.994522*t1334*t5327;
  t5532 = t5499 + t5510 + t5528;
  t5548 = -0.994522*t1334*t1887*t3321;
  t5549 = -0.103955395616*t1011*t5092;
  t5576 = -0.9890740084840001*t1011*t5327;
  t5581 = t5548 + t5549 + t5576;
  t5602 = -0.104528*t1334*t1887*t3321;
  t5645 = -0.010926102783999999*t1011*t5092;
  t5649 = -0.103955395616*t1011*t5327;
  t5651 = t5602 + t5645 + t5649;
  t5754 = -1.*t1887*t2360*t2376;
  t5755 = t2563*t1887*t2565;
  t5759 = t5754 + t5755;
  t5777 = -1.*t2563*t1887*t2360;
  t5778 = -1.*t1887*t2376*t2565;
  t5779 = t5777 + t5778;
  t5765 = -0.103955395616*t1811*t5759;
  t5787 = t2908*t5779;
  t5789 = t5765 + t5787;
  t5813 = t2654*t5759;
  t5818 = -0.103955395616*t1811*t5779;
  t5828 = t5813 + t5818;
  t5838 = t3018*t5759;
  t5839 = t3001*t5779;
  t5840 = t5838 + t5839;
  t5912 = t1887*t2360*t2376;
  t5914 = -1.*t2563*t1887*t2565;
  t5915 = t5912 + t5914;
  t5919 = t2563*t1887*t2360;
  t5922 = t1887*t2376*t2565;
  t5926 = t5919 + t5922;
  t5918 = -0.103955395616*t1811*t5915;
  t5942 = t2908*t5926;
  t5945 = t5918 + t5942;
  t5956 = t2654*t5915;
  t5958 = -0.103955395616*t1811*t5926;
  t5963 = t5956 + t5958;
  t5970 = t3018*t5915;
  t5973 = t3001*t5926;
  t5976 = t5970 + t5973;
  t6037 = -1.*t1190*t1221;
  t6038 = t2654*t5926;
  t6039 = t6037 + t5765 + t6038;
  t6042 = -1.*t2898*t1221;
  t6044 = t2908*t5759;
  t6046 = t6042 + t6044 + t5958;
  t6066 = -1.*t2984*t1221;
  t6079 = t3001*t5759;
  t6094 = t3018*t5926;
  t6102 = t6066 + t6079 + t6094;
  t6183 = 1.0000001112680001*t1011*t1221;
  t6186 = 0.104528*t1334*t5759;
  t6194 = 0.994522*t1334*t5926;
  t6195 = t6183 + t6186 + t6194;
  t6203 = 0.994522*t1334*t1221;
  t6208 = -0.103955395616*t1011*t5759;
  t6209 = -0.9890740084840001*t1011*t5926;
  t6213 = t6203 + t6208 + t6209;
  t6218 = 0.104528*t1334*t1221;
  t6232 = -0.010926102783999999*t1011*t5759;
  t6233 = -0.103955395616*t1011*t5926;
  t6258 = t6218 + t6232 + t6233;
  t6316 = t2360*t2376*t1221;
  t6321 = -1.*t2563*t1221*t2565;
  t6337 = t6316 + t6321;
  t6351 = -1.*t2563*t2360*t1221;
  t6355 = -1.*t2376*t1221*t2565;
  t6356 = t6351 + t6355;
  t6313 = -1.*t1887*t1190;
  t6350 = -0.103955395616*t1811*t6337;
  t6358 = t2654*t6356;
  t6359 = t6313 + t6350 + t6358;
  t6364 = -1.*t1887*t2898;
  t6377 = t2908*t6337;
  t6383 = -0.103955395616*t1811*t6356;
  t6387 = t6364 + t6377 + t6383;
  t6396 = -1.*t2984*t1887;
  t6400 = t3001*t6337;
  t6407 = t3018*t6356;
  t6408 = t6396 + t6400 + t6407;
  t3076 = t3073*t2754;
  t3123 = t3122*t2937;
  t3155 = t3150*t3030;
  t3178 = t3076 + t3123 + t3155;
  t3235 = t3219*t2754;
  t3247 = t3243*t2937;
  t3300 = t3268*t3030;
  t3303 = t3235 + t3247 + t3300;
  t3603 = t3122*t3415;
  t3606 = t3073*t3498;
  t3608 = t3150*t3577;
  t3610 = t3603 + t3606 + t3608;
  t3618 = t3243*t3415;
  t3620 = t3219*t3498;
  t3626 = t3268*t3577;
  t3630 = t3618 + t3620 + t3626;
  t3909 = t3122*t3764;
  t3912 = t3073*t3802;
  t3918 = t3150*t3857;
  t3924 = t3909 + t3912 + t3918;
  t3940 = t3243*t3764;
  t3941 = t3219*t3802;
  t3942 = t3268*t3857;
  t3948 = t3940 + t3941 + t3942;
  t3989 = -0.5054634410180001*t861*t3979;
  t4056 = t4009*t4044;
  t4070 = t4060*t4069;
  t4077 = t3989 + t4056 + t4070;
  t4094 = t4092*t3979;
  t4109 = -0.9945383682050002*t861*t4044;
  t4153 = t4139*t4069;
  t4157 = t4094 + t4109 + t4153;
  t4254 = t3268*t4242;
  t4272 = t3219*t4270;
  t4301 = t3243*t4283;
  t4311 = t4254 + t4272 + t4301;
  t4355 = t3150*t4242;
  t4357 = t3073*t4270;
  t4364 = t3122*t4283;
  t4380 = t4355 + t4357 + t4364;
  t4596 = t3073*t4536;
  t4600 = t3122*t4569;
  t4604 = t3150*t4574;
  t4612 = t4596 + t4600 + t4604;
  t4619 = t3219*t4536;
  t4621 = t3243*t4569;
  t4626 = t3268*t4574;
  t4628 = t4619 + t4621 + t4626;
  t4728 = t3073*t4678;
  t4730 = t3122*t4688;
  t4735 = t3150*t4711;
  t4740 = t4728 + t4730 + t4735;
  t4759 = t3219*t4678;
  t4763 = t3243*t4688;
  t4764 = t3268*t4711;
  t4767 = t4759 + t4763 + t4764;
  t4822 = t3073*t3979;
  t4826 = t3122*t4044;
  t4830 = t3150*t4069;
  t4831 = t4822 + t4826 + t4830;
  t4834 = t3219*t3979;
  t4840 = t3243*t4044;
  t4845 = t3268*t4069;
  t4846 = t4834 + t4840 + t4845;
  t4976 = t3122*t4932;
  t4978 = t3073*t4957;
  t4982 = t3150*t4969;
  t4987 = t4976 + t4978 + t4982;
  t5010 = t3243*t4932;
  t5015 = t3219*t4957;
  t5029 = t3268*t4969;
  t5033 = t5010 + t5015 + t5029;
  t5223 = t3122*t5143;
  t5228 = t3073*t5173;
  t5230 = t3150*t5198;
  t5233 = t5223 + t5228 + t5230;
  t5274 = t3243*t5143;
  t5275 = t3219*t5173;
  t5281 = t3268*t5198;
  t5285 = t5274 + t5275 + t5281;
  t5361 = -0.5054634410180001*t861*t5356;
  t5388 = t4009*t5387;
  t5403 = t4060*t5400;
  t5407 = t5361 + t5388 + t5403;
  t5420 = t4092*t5356;
  t5429 = -0.9945383682050002*t861*t5387;
  t5450 = t4139*t5400;
  t5453 = t5420 + t5429 + t5450;
  t5540 = t3268*t5532;
  t5601 = t3219*t5581;
  t5656 = t3243*t5651;
  t5672 = t5540 + t5601 + t5656;
  t5676 = t3150*t5532;
  t5679 = t3073*t5581;
  t5686 = t3122*t5651;
  t5689 = t5676 + t5679 + t5686;
  t5854 = t3122*t5789;
  t5855 = t3073*t5828;
  t5862 = t3150*t5840;
  t5870 = t5854 + t5855 + t5862;
  t5880 = t3243*t5789;
  t5884 = t3219*t5828;
  t5895 = t3268*t5840;
  t5896 = t5880 + t5884 + t5895;
  t5995 = t3122*t5945;
  t6000 = t3073*t5963;
  t6001 = t3150*t5976;
  t6002 = t5995 + t6000 + t6001;
  t6011 = t3243*t5945;
  t6021 = t3219*t5963;
  t6022 = t3268*t5976;
  t6024 = t6011 + t6021 + t6022;
  t6041 = -0.5054634410180001*t861*t6039;
  t6058 = t4009*t6046;
  t6118 = t4060*t6102;
  t6127 = t6041 + t6058 + t6118;
  t6135 = t4092*t6039;
  t6136 = -0.9945383682050002*t861*t6046;
  t6144 = t4139*t6102;
  t6145 = t6135 + t6136 + t6144;
  t6200 = t3268*t6195;
  t6215 = t3219*t6213;
  t6259 = t3243*t6258;
  t6262 = t6200 + t6215 + t6259;
  t6269 = t3150*t6195;
  t6270 = t3073*t6213;
  t6272 = t3122*t6258;
  t6277 = t6269 + t6270 + t6272;
  t6420 = t3073*t6359;
  t6431 = t3122*t6387;
  t6432 = t3150*t6408;
  t6435 = t6420 + t6431 + t6432;
  t6444 = t3219*t6359;
  t6448 = t3243*t6387;
  t6453 = t3268*t6408;
  t6460 = t6444 + t6448 + t6453;
  t2771 = t933*t2754;
  t2940 = t2834*t2937;
  t3040 = t2975*t3030;
  t3041 = t2771 + t2940 + t3040;
  t3045 = 0.707107*t3041;
  t3430 = t2834*t3415;
  t3502 = t933*t3498;
  t3587 = t2975*t3577;
  t3591 = t3430 + t3502 + t3587;
  t3600 = 0.707107*t3591;
  t3771 = t2834*t3764;
  t3828 = t933*t3802;
  t3878 = t2975*t3857;
  t3895 = t3771 + t3828 + t3878;
  t3904 = 0.707107*t3895;
  t4181 = t4169*t3979;
  t4197 = t4192*t4044;
  t4199 = -0.500001190325*t861*t4069;
  t4201 = t4181 + t4197 + t4199;
  t4203 = 0.707107*t4201;
  t4394 = t2975*t4242;
  t4395 = t933*t4270;
  t4400 = t2834*t4283;
  t4402 = t4394 + t4395 + t4400;
  t4416 = 0.707107*t4402;
  t4540 = t933*t4536;
  t4570 = t2834*t4569;
  t4576 = t2975*t4574;
  t4592 = t4540 + t4570 + t4576;
  t4593 = 0.707107*t4592;
  t4679 = t933*t4678;
  t4690 = t2834*t4688;
  t4717 = t2975*t4711;
  t4725 = t4679 + t4690 + t4717;
  t4727 = 0.707107*t4725;
  t4790 = t933*t3979;
  t4791 = t2834*t4044;
  t4799 = t2975*t4069;
  t4802 = t4790 + t4791 + t4799;
  t4816 = 0.707107*t4802;
  t4939 = t2834*t4932;
  t4958 = t933*t4957;
  t4970 = t2975*t4969;
  t4973 = t4939 + t4958 + t4970;
  t4975 = 0.707107*t4973;
  t5155 = t2834*t5143;
  t5179 = t933*t5173;
  t5210 = t2975*t5198;
  t5213 = t5155 + t5179 + t5210;
  t5218 = 0.707107*t5213;
  t5465 = t4169*t5356;
  t5471 = t4192*t5387;
  t5480 = -0.500001190325*t861*t5400;
  t5487 = t5465 + t5471 + t5480;
  t5490 = 0.707107*t5487;
  t5699 = t2975*t5532;
  t5700 = t933*t5581;
  t5708 = t2834*t5651;
  t5710 = t5699 + t5700 + t5708;
  t5716 = 0.707107*t5710;
  t5800 = t2834*t5789;
  t5833 = t933*t5828;
  t5841 = t2975*t5840;
  t5845 = t5800 + t5833 + t5841;
  t5852 = 0.707107*t5845;
  t5946 = t2834*t5945;
  t5967 = t933*t5963;
  t5977 = t2975*t5976;
  t5986 = t5946 + t5967 + t5977;
  t5988 = 0.707107*t5986;
  t6156 = t4169*t6039;
  t6160 = t4192*t6046;
  t6164 = -0.500001190325*t861*t6102;
  t6169 = t6156 + t6160 + t6164;
  t6171 = 0.707107*t6169;
  t6283 = t2975*t6195;
  t6290 = t933*t6213;
  t6294 = t2834*t6258;
  t6301 = t6283 + t6290 + t6294;
  t6304 = 0.707107*t6301;
  t6361 = t933*t6359;
  t6394 = t2834*t6387;
  t6413 = t2975*t6408;
  t6417 = t6361 + t6394 + t6413;
  t6419 = 0.707107*t6417;
  p_output1[0]=(t4593 + 0.703234*t4612 + 0.073913*t4628)*var2[3] + (t3045 + 0.703234*t3178 + 0.073913*t3303)*var2[4] + (t3600 + 0.703234*t3610 + 0.073913*t3630)*var2[5] + (t3904 + 0.703234*t3924 + 0.073913*t3948)*var2[24] + (0.073913*t4311 + 0.703234*t4380 + t4416)*var2[25] + (0.703234*t4077 + 0.073913*t4157 + t4203)*var2[26];
  p_output1[1]=(t4816 + 0.703234*t4831 + 0.073913*t4846)*var2[3] + (t4727 + 0.703234*t4740 + 0.073913*t4767)*var2[4] + (t4975 + 0.703234*t4987 + 0.073913*t5033)*var2[5] + (t5218 + 0.703234*t5233 + 0.073913*t5285)*var2[24] + (0.073913*t5672 + 0.703234*t5689 + t5716)*var2[25] + (0.703234*t5407 + 0.073913*t5453 + t5490)*var2[26];
  p_output1[2]=(t6419 + 0.703234*t6435 + 0.073913*t6460)*var2[4] + (t5988 + 0.703234*t6002 + 0.073913*t6024)*var2[5] + (t5852 + 0.703234*t5870 + 0.073913*t5896)*var2[24] + (0.073913*t6262 + 0.703234*t6277 + t6304)*var2[25] + (0.703234*t6127 + 0.073913*t6145 + t6171)*var2[26];
  p_output1[3]=(0.104528*t4612 - 0.994522*t4628)*var2[3] + (0.104528*t3178 - 0.994522*t3303)*var2[4] + (0.104528*t3610 - 0.994522*t3630)*var2[5] + (0.104528*t3924 - 0.994522*t3948)*var2[24] + (-0.994522*t4311 + 0.104528*t4380)*var2[25] + (0.104528*t4077 - 0.994522*t4157)*var2[26];
  p_output1[4]=(0.104528*t4831 - 0.994522*t4846)*var2[3] + (0.104528*t4740 - 0.994522*t4767)*var2[4] + (0.104528*t4987 - 0.994522*t5033)*var2[5] + (0.104528*t5233 - 0.994522*t5285)*var2[24] + (-0.994522*t5672 + 0.104528*t5689)*var2[25] + (0.104528*t5407 - 0.994522*t5453)*var2[26];
  p_output1[5]=(0.104528*t6435 - 0.994522*t6460)*var2[4] + (0.104528*t6002 - 0.994522*t6024)*var2[5] + (0.104528*t5870 - 0.994522*t5896)*var2[24] + (-0.994522*t6262 + 0.104528*t6277)*var2[25] + (0.104528*t6127 - 0.994522*t6145)*var2[26];
  p_output1[6]=(t4593 - 0.703234*t4612 - 0.073913*t4628)*var2[3] + (t3045 - 0.703234*t3178 - 0.073913*t3303)*var2[4] + (t3600 - 0.703234*t3610 - 0.073913*t3630)*var2[5] + (t3904 - 0.703234*t3924 - 0.073913*t3948)*var2[24] + (-0.073913*t4311 - 0.703234*t4380 + t4416)*var2[25] + (-0.703234*t4077 - 0.073913*t4157 + t4203)*var2[26];
  p_output1[7]=(t4816 - 0.703234*t4831 - 0.073913*t4846)*var2[3] + (t4727 - 0.703234*t4740 - 0.073913*t4767)*var2[4] + (t4975 - 0.703234*t4987 - 0.073913*t5033)*var2[5] + (t5218 - 0.703234*t5233 - 0.073913*t5285)*var2[24] + (-0.073913*t5672 - 0.703234*t5689 + t5716)*var2[25] + (-0.703234*t5407 - 0.073913*t5453 + t5490)*var2[26];
  p_output1[8]=(t6419 - 0.703234*t6435 - 0.073913*t6460)*var2[4] + (t5988 - 0.703234*t6002 - 0.073913*t6024)*var2[5] + (t5852 - 0.703234*t5870 - 0.073913*t5896)*var2[24] + (-0.073913*t6262 - 0.703234*t6277 + t6304)*var2[25] + (-0.703234*t6127 - 0.073913*t6145 + t6171)*var2[26];
}



void dR_shoulder_yaw_joint_right_src(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}
