/*
 * Automatically Generated from Mathematica.
 * Mon 4 Jul 2022 21:19:00 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "p_right_toe_roll_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t434;
  double t163;
  double t914;
  double t1002;
  double t915;
  double t1020;
  double t324;
  double t325;
  double t329;
  double t764;
  double t919;
  double t1073;
  double t1224;
  double t1269;
  double t1315;
  double t1419;
  double t1436;
  double t164;
  double t1878;
  double t1906;
  double t1639;
  double t1749;
  double t1776;
  double t2157;
  double t2158;
  double t2162;
  double t2233;
  double t2240;
  double t2250;
  double t2342;
  double t1630;
  double t1632;
  double t456;
  double t457;
  double t598;
  double t676;
  double t3585;
  double t3330;
  double t3358;
  double t2499;
  double t2504;
  double t2570;
  double t2575;
  double t2608;
  double t2617;
  double t3137;
  double t3196;
  double t2897;
  double t2898;
  double t2907;
  double t2908;
  double t2920;
  double t2922;
  double t3382;
  double t3428;
  double t3438;
  double t3494;
  double t3502;
  double t3509;
  double t3533;
  double t3545;
  double t3567;
  double t2360;
  double t2389;
  double t2798;
  double t2858;
  double t4145;
  double t4146;
  double t3744;
  double t3746;
  double t3767;
  double t3776;
  double t3801;
  double t3804;
  double t3960;
  double t3972;
  double t4016;
  double t4062;
  double t4069;
  double t4091;
  double t4169;
  double t4187;
  double t4203;
  double t4206;
  double t4211;
  double t4225;
  double t4269;
  double t4270;
  double t4280;
  double t4290;
  double t3923;
  double t3925;
  double t3591;
  double t3603;
  double t3638;
  double t3733;
  double t4588;
  double t4513;
  double t4516;
  double t4311;
  double t4320;
  double t4323;
  double t4340;
  double t4343;
  double t4345;
  double t4509;
  double t4511;
  double t4453;
  double t4476;
  double t4484;
  double t4489;
  double t4499;
  double t4500;
  double t4535;
  double t4548;
  double t4553;
  double t4567;
  double t4572;
  double t4575;
  double t4582;
  double t4584;
  double t4585;
  double t4291;
  double t4292;
  double t4432;
  double t4445;
  double t4921;
  double t4927;
  double t4928;
  double t4944;
  double t4827;
  double t4829;
  double t4662;
  double t4667;
  double t4675;
  double t4676;
  double t4681;
  double t4684;
  double t4739;
  double t4740;
  double t4753;
  double t4759;
  double t4774;
  double t4795;
  double t4870;
  double t4873;
  double t4890;
  double t4891;
  double t4892;
  double t4895;
  double t4931;
  double t4720;
  double t4726;
  double t4974;
  double t5069;
  double t4603;
  double t4606;
  double t4592;
  double t4593;
  double t5189;
  double t4991;
  double t4995;
  double t4998;
  double t5007;
  double t5020;
  double t5025;
  double t5200;
  double t5133;
  double t5134;
  double t5137;
  double t5139;
  double t5152;
  double t5163;
  double t5223;
  double t5230;
  double t5232;
  double t5233;
  double t5240;
  double t5243;
  double t5109;
  double t5261;
  double t5074;
  double t5315;
  double t4946;
  double t5247;
  double t4976;
  double t417;
  double t534;
  double t687;
  double t728;
  double t840;
  double t880;
  double t1279;
  double t1281;
  double t1289;
  double t1301;
  double t1459;
  double t1621;
  double t1633;
  double t1635;
  double t5443;
  double t5447;
  double t5449;
  double t5457;
  double t5459;
  double t5462;
  double t1792;
  double t1831;
  double t2039;
  double t2136;
  double t2208;
  double t2295;
  double t2477;
  double t2479;
  double t5466;
  double t5471;
  double t5477;
  double t5483;
  double t5485;
  double t5489;
  double t2748;
  double t2791;
  double t2868;
  double t2888;
  double t3130;
  double t3201;
  double t3370;
  double t3377;
  double t3579;
  double t3615;
  double t3734;
  double t3736;
  double t5496;
  double t5498;
  double t5500;
  double t5501;
  double t5504;
  double t5506;
  double t5508;
  double t5509;
  double t5518;
  double t5519;
  double t5521;
  double t5526;
  double t3831;
  double t3870;
  double t3931;
  double t3946;
  double t4113;
  double t4114;
  double t4153;
  double t4163;
  double t4235;
  double t4287;
  double t4300;
  double t4306;
  double t5529;
  double t5531;
  double t5549;
  double t5556;
  double t5559;
  double t5560;
  double t5564;
  double t5568;
  double t5574;
  double t5576;
  double t5577;
  double t5581;
  double t4365;
  double t4427;
  double t4448;
  double t4449;
  double t4507;
  double t4512;
  double t4519;
  double t4527;
  double t4586;
  double t4600;
  double t4624;
  double t4635;
  double t5583;
  double t5604;
  double t5606;
  double t5608;
  double t5610;
  double t5611;
  double t5612;
  double t5613;
  double t5617;
  double t5619;
  double t5622;
  double t5627;
  double t4715;
  double t4718;
  double t4728;
  double t4738;
  double t4802;
  double t4823;
  double t4837;
  double t4857;
  double t4907;
  double t4929;
  double t4948;
  double t4954;
  double t4978;
  double t4981;
  double t4986;
  double t5635;
  double t5638;
  double t5639;
  double t5640;
  double t5645;
  double t5647;
  double t5653;
  double t5657;
  double t5665;
  double t5669;
  double t5671;
  double t5672;
  double t5049;
  double t5055;
  double t5087;
  double t5102;
  double t5122;
  double t5123;
  double t5129;
  double t5174;
  double t5175;
  double t5192;
  double t5196;
  double t5202;
  double t5203;
  double t5209;
  double t5248;
  double t5674;
  double t5699;
  double t5701;
  double t5703;
  double t5290;
  double t5707;
  double t5709;
  double t5710;
  double t5718;
  double t5302;
  double t5304;
  double t5723;
  double t5727;
  double t5730;
  double t5739;
  double t5322;
  double t5344;
  double t5353;
  double t5368;
  double t5397;
  double t5410;
  double t5416;
  double t5422;
  double t5815;
  double t5818;
  double t5824;
  double t5830;
  double t5833;
  double t5834;
  double t5845;
  double t5848;
  double t5850;
  double t5851;
  double t5855;
  double t5861;
  double t5870;
  double t5873;
  double t5877;
  double t5878;
  double t5879;
  double t5895;
  double t5897;
  double t5898;
  double t5902;
  double t5903;
  double t5907;
  double t5909;
  double t5910;
  double t5911;
  double t5914;
  double t5916;
  double t5921;
  double t5922;
  double t5925;
  double t5926;
  double t5933;
  double t5934;
  double t5942;
  double t5943;
  double t5953;
  double t5954;
  double t5972;
  double t5982;
  double t5983;
  double t5989;
  double t5999;
  double t6010;
  double t6011;
  double t6012;
  double t6020;
  double t6021;
  double t6035;
  double t6036;
  double t6049;
  double t6050;
  double t6053;
  double t6056;
  double t6062;
  double t6065;
  double t6068;
  double t6070;
  double t6078;
  double t6081;
  double t6086;
  double t6087;
  double t6106;
  double t6107;
  double t6118;
  double t6120;
  t434 = Sin(var1[18]);
  t163 = Cos(var1[3]);
  t914 = Cos(var1[5]);
  t1002 = Sin(var1[3]);
  t915 = Sin(var1[4]);
  t1020 = Sin(var1[5]);
  t324 = Cos(var1[18]);
  t325 = -1.*t324;
  t329 = 1. + t325;
  t764 = Sin(var1[17]);
  t919 = t163*t914*t915;
  t1073 = t1002*t1020;
  t1224 = t919 + t1073;
  t1269 = Cos(var1[17]);
  t1315 = -1.*t914*t1002;
  t1419 = t163*t915*t1020;
  t1436 = t1315 + t1419;
  t164 = Cos(var1[4]);
  t1878 = -0.366501*t434;
  t1906 = 0. + t1878;
  t1639 = -1.*t764*t1224;
  t1749 = t1269*t1436;
  t1776 = t1639 + t1749;
  t2157 = t1269*t1224;
  t2158 = t764*t1436;
  t2162 = t2157 + t2158;
  t2233 = Cos(var1[19]);
  t2240 = -1.*t2233;
  t2250 = 1. + t2240;
  t2342 = Sin(var1[19]);
  t1630 = 0.930418*t434;
  t1632 = 0. + t1630;
  t456 = -0.930418*t434;
  t457 = 0. + t456;
  t598 = 0.366501*t434;
  t676 = 0. + t598;
  t3585 = Sin(var1[20]);
  t3330 = 0.930418*t2342;
  t3358 = 0. + t3330;
  t2499 = t163*t164*t1906;
  t2504 = 0.340999127418*t329*t1776;
  t2570 = -0.134322983001*t329;
  t2575 = 1. + t2570;
  t2608 = t2575*t2162;
  t2617 = t2499 + t2504 + t2608;
  t3137 = 0.366501*t2342;
  t3196 = 0. + t3137;
  t2897 = t163*t164*t1632;
  t2898 = -0.8656776547239999*t329;
  t2907 = 1. + t2898;
  t2908 = t2907*t1776;
  t2920 = 0.340999127418*t329*t2162;
  t2922 = t2897 + t2908 + t2920;
  t3382 = -1.000000637725*t329;
  t3428 = 1. + t3382;
  t3438 = t3428*t163*t164;
  t3494 = t457*t1776;
  t3502 = t676*t2162;
  t3509 = t3438 + t3494 + t3502;
  t3533 = Cos(var1[20]);
  t3545 = -1.*t3533;
  t3567 = 1. + t3545;
  t2360 = -0.930418*t2342;
  t2389 = 0. + t2360;
  t2798 = -0.366501*t2342;
  t2858 = 0. + t2798;
  t4145 = 0.366501*t3585;
  t4146 = 0. + t4145;
  t3744 = t3358*t2617;
  t3746 = t3196*t2922;
  t3767 = -1.000000637725*t2250;
  t3776 = 1. + t3767;
  t3801 = t3776*t3509;
  t3804 = t3744 + t3746 + t3801;
  t3960 = -0.8656776547239999*t2250;
  t3972 = 1. + t3960;
  t4016 = t3972*t2617;
  t4062 = -0.340999127418*t2250*t2922;
  t4069 = t2389*t3509;
  t4091 = t4016 + t4062 + t4069;
  t4169 = -0.340999127418*t2250*t2617;
  t4187 = -0.134322983001*t2250;
  t4203 = 1. + t4187;
  t4206 = t4203*t2922;
  t4211 = t2858*t3509;
  t4225 = t4169 + t4206 + t4211;
  t4269 = Cos(var1[21]);
  t4270 = -1.*t4269;
  t4280 = 1. + t4270;
  t4290 = Sin(var1[21]);
  t3923 = 0.930418*t3585;
  t3925 = 0. + t3923;
  t3591 = -0.930418*t3585;
  t3603 = 0. + t3591;
  t3638 = -0.366501*t3585;
  t3733 = 0. + t3638;
  t4588 = Sin(var1[22]);
  t4513 = -0.366501*t4290;
  t4516 = 0. + t4513;
  t4311 = t4146*t3804;
  t4320 = -0.340999127418*t3567*t4091;
  t4323 = -0.134322983001*t3567;
  t4340 = 1. + t4323;
  t4343 = t4340*t4225;
  t4345 = t4311 + t4320 + t4343;
  t4509 = -0.930418*t4290;
  t4511 = 0. + t4509;
  t4453 = t3925*t3804;
  t4476 = -0.8656776547239999*t3567;
  t4484 = 1. + t4476;
  t4489 = t4484*t4091;
  t4499 = -0.340999127418*t3567*t4225;
  t4500 = t4453 + t4489 + t4499;
  t4535 = -1.000000637725*t3567;
  t4548 = 1. + t4535;
  t4553 = t4548*t3804;
  t4567 = t3603*t4091;
  t4572 = t3733*t4225;
  t4575 = t4553 + t4567 + t4572;
  t4582 = Cos(var1[22]);
  t4584 = -1.*t4582;
  t4585 = 1. + t4584;
  t4291 = 0.366501*t4290;
  t4292 = 0. + t4291;
  t4432 = 0.930418*t4290;
  t4445 = 0. + t4432;
  t4921 = Cos(var1[23]);
  t4927 = -1.*t4921;
  t4928 = 1. + t4927;
  t4944 = Sin(var1[23]);
  t4827 = 0.930418*t4588;
  t4829 = 0. + t4827;
  t4662 = t4516*t4345;
  t4667 = t4511*t4500;
  t4675 = -1.000000637725*t4280;
  t4676 = 1. + t4675;
  t4681 = t4676*t4575;
  t4684 = t4662 + t4667 + t4681;
  t4739 = -0.134322983001*t4280;
  t4740 = 1. + t4739;
  t4753 = t4740*t4345;
  t4759 = -0.340999127418*t4280*t4500;
  t4774 = t4292*t4575;
  t4795 = t4753 + t4759 + t4774;
  t4870 = -0.340999127418*t4280*t4345;
  t4873 = -0.8656776547239999*t4280;
  t4890 = 1. + t4873;
  t4891 = t4890*t4500;
  t4892 = t4445*t4575;
  t4895 = t4870 + t4891 + t4892;
  t4931 = -0.120666640478*t4928;
  t4720 = 0.366501*t4588;
  t4726 = 0. + t4720;
  t4974 = -0.444895486988*t4928;
  t5069 = -0.175248972904*t4928;
  t4603 = -0.366501*t4588;
  t4606 = 0. + t4603;
  t4592 = -0.930418*t4588;
  t4593 = 0. + t4592;
  t5189 = -0.218018*t4944;
  t4991 = t4829*t4684;
  t4995 = -0.340999127418*t4585*t4795;
  t4998 = -0.8656776547239999*t4585;
  t5007 = 1. + t4998;
  t5020 = t5007*t4895;
  t5025 = t4991 + t4995 + t5020;
  t5200 = 0.553471*t4944;
  t5133 = t4726*t4684;
  t5134 = -0.134322983001*t4585;
  t5137 = 1. + t5134;
  t5139 = t5137*t4795;
  t5152 = -0.340999127418*t4585*t4895;
  t5163 = t5133 + t5139 + t5152;
  t5223 = -1.000000637725*t4585;
  t5230 = 1. + t5223;
  t5232 = t5230*t4684;
  t5233 = t4606*t4795;
  t5240 = t4593*t4895;
  t5243 = t5232 + t5233 + t5240;
  t5109 = 0.803828*t4944;
  t5261 = 0.175248972904*t4928;
  t5074 = -0.553471*t4944;
  t5315 = 0.120666640478*t4928;
  t4946 = -0.803828*t4944;
  t5247 = 0.444895486988*t4928;
  t4976 = 0.218018*t4944;
  t417 = -0.04500040093286238*t329;
  t534 = -0.07877663122399998*t457;
  t687 = 0.031030906668*t676;
  t728 = 0. + t417 + t534 + t687;
  t840 = -0.091*t764;
  t880 = 0. + t840;
  t1279 = -1.*t1269;
  t1281 = 1. + t1279;
  t1289 = -0.091*t1281;
  t1301 = 0. + t1289;
  t1459 = 1.296332362046933e-7*var1[18];
  t1621 = -0.07877668146182712*t329;
  t1633 = -0.045000372235*t1632;
  t1635 = t1459 + t1621 + t1633;
  t5443 = t914*t1002*t915;
  t5447 = -1.*t163*t1020;
  t5449 = t5443 + t5447;
  t5457 = t163*t914;
  t5459 = t1002*t915*t1020;
  t5462 = t5457 + t5459;
  t1792 = 3.2909349868922137e-7*var1[18];
  t1831 = 0.03103092645718495*t329;
  t2039 = -0.045000372235*t1906;
  t2136 = t1792 + t1831 + t2039;
  t2208 = -1.296332362046933e-7*var1[19];
  t2295 = -0.14128592423750855*t2250;
  t2477 = -0.045000372235*t2389;
  t2479 = t2208 + t2295 + t2477;
  t5466 = -1.*t764*t5449;
  t5471 = t1269*t5462;
  t5477 = t5466 + t5471;
  t5483 = t1269*t5449;
  t5485 = t764*t5462;
  t5489 = t5483 + t5485;
  t2748 = 3.2909349868922137e-7*var1[19];
  t2791 = -0.055653945343889656*t2250;
  t2868 = -0.045000372235*t2858;
  t2888 = t2748 + t2791 + t2868;
  t3130 = -0.04500040093286238*t2250;
  t3201 = -0.055653909852*t3196;
  t3370 = -0.141285834136*t3358;
  t3377 = 0. + t3130 + t3201 + t3370;
  t3579 = 0.039853038461262744*t3567;
  t3615 = -0.22023459268999998*t3603;
  t3734 = -0.086752619205*t3733;
  t3736 = 0. + t3579 + t3615 + t3734;
  t5496 = t164*t1906*t1002;
  t5498 = 0.340999127418*t329*t5477;
  t5500 = t2575*t5489;
  t5501 = t5496 + t5498 + t5500;
  t5504 = t164*t1632*t1002;
  t5506 = t2907*t5477;
  t5508 = 0.340999127418*t329*t5489;
  t5509 = t5504 + t5506 + t5508;
  t5518 = t3428*t164*t1002;
  t5519 = t457*t5477;
  t5521 = t676*t5489;
  t5526 = t5518 + t5519 + t5521;
  t3831 = 6.295460977284962e-8*var1[20];
  t3870 = -0.22023473313910558*t3567;
  t3931 = 0.039853013046*t3925;
  t3946 = t3831 + t3870 + t3931;
  t4113 = -1.5981976069815686e-7*var1[20];
  t4114 = -0.08675267452931407*t3567;
  t4153 = 0.039853013046*t4146;
  t4163 = t4113 + t4114 + t4153;
  t4235 = 5.7930615939377813e-8*var1[21];
  t4287 = -0.23261833304643187*t4280;
  t4300 = -0.262809976934*t4292;
  t4306 = t4235 + t4287 + t4300;
  t5529 = t3358*t5501;
  t5531 = t3196*t5509;
  t5549 = t3776*t5526;
  t5556 = t5529 + t5531 + t5549;
  t5559 = t3972*t5501;
  t5560 = -0.340999127418*t2250*t5509;
  t5564 = t2389*t5526;
  t5568 = t5559 + t5560 + t5564;
  t5574 = -0.340999127418*t2250*t5501;
  t5576 = t4203*t5509;
  t5577 = t2858*t5526;
  t5581 = t5574 + t5576 + t5577;
  t4365 = -2.281945176511838e-8*var1[21];
  t4427 = -0.5905366811997648*t4280;
  t4448 = -0.262809976934*t4445;
  t4449 = t4365 + t4427 + t4448;
  t4507 = -0.26281014453449253*t4280;
  t4512 = -0.5905363046000001*t4511;
  t4519 = -0.23261818470000004*t4516;
  t4527 = 0. + t4507 + t4512 + t4519;
  t4586 = 0.06199697675299678*t4585;
  t4600 = -0.823260828522*t4593;
  t4624 = -0.324290713329*t4606;
  t4635 = 0. + t4586 + t4600 + t4624;
  t5583 = t4146*t5556;
  t5604 = -0.340999127418*t3567*t5568;
  t5606 = t4340*t5581;
  t5608 = t5583 + t5604 + t5606;
  t5610 = t3925*t5556;
  t5611 = t4484*t5568;
  t5612 = -0.340999127418*t3567*t5581;
  t5613 = t5610 + t5611 + t5612;
  t5617 = t4548*t5556;
  t5619 = t3603*t5568;
  t5622 = t3733*t5581;
  t5627 = t5617 + t5619 + t5622;
  t4715 = 7.500378623168247e-8*var1[22];
  t4718 = -0.32429092013729516*t4585;
  t4728 = 0.061996937216*t4726;
  t4738 = t4715 + t4718 + t4728;
  t4802 = -2.95447451120871e-8*var1[22];
  t4823 = -0.8232613535360118*t4585;
  t4837 = 0.061996937216*t4829;
  t4857 = t4802 + t4823 + t4837;
  t4907 = 7.20503013377005e-8*var1[23];
  t4929 = -0.3667270384178674*t4928;
  t4948 = t4931 + t4946;
  t4954 = -0.29871295412*t4948;
  t4978 = t4974 + t4976;
  t4981 = 0.44503472296900004*t4978;
  t4986 = t4907 + t4929 + t4954 + t4981;
  t5635 = t4516*t5608;
  t5638 = t4511*t5613;
  t5639 = t4676*t5627;
  t5640 = t5635 + t5638 + t5639;
  t5645 = t4740*t5608;
  t5647 = -0.340999127418*t4280*t5613;
  t5653 = t4292*t5627;
  t5657 = t5645 + t5647 + t5653;
  t5665 = -0.340999127418*t4280*t5608;
  t5669 = t4890*t5613;
  t5671 = t4445*t5627;
  t5672 = t5665 + t5669 + t5671;
  t5049 = 2.838136523330542e-8*var1[23];
  t5055 = -0.2845150083511607*t4928;
  t5087 = t5069 + t5074;
  t5102 = 0.44503472296900004*t5087;
  t5122 = t4931 + t5109;
  t5123 = -0.5286755231320001*t5122;
  t5129 = t5049 + t5055 + t5102 + t5123;
  t5174 = 1.0464152525368286e-7*var1[23];
  t5175 = 0.15748087543254813*t4928;
  t5192 = t4974 + t5189;
  t5196 = -0.5286755231320001*t5192;
  t5202 = t5069 + t5200;
  t5203 = -0.29871295412*t5202;
  t5209 = t5174 + t5175 + t5196 + t5203;
  t5248 = t5247 + t5189;
  t5674 = t4829*t5640;
  t5699 = -0.340999127418*t4585*t5657;
  t5701 = t5007*t5672;
  t5703 = t5674 + t5699 + t5701;
  t5290 = t5261 + t5200;
  t5707 = t4726*t5640;
  t5709 = t5137*t5657;
  t5710 = -0.340999127418*t4585*t5672;
  t5718 = t5707 + t5709 + t5710;
  t5302 = -0.353861996165*t4928;
  t5304 = 1. + t5302;
  t5723 = t5230*t5640;
  t5727 = t4606*t5657;
  t5730 = t4593*t5672;
  t5739 = t5723 + t5727 + t5730;
  t5322 = t5315 + t5109;
  t5344 = -0.952469601425*t4928;
  t5353 = 1. + t5344;
  t5368 = t5261 + t5074;
  t5397 = -0.693671301908*t4928;
  t5410 = 1. + t5397;
  t5416 = t5315 + t4946;
  t5422 = t5247 + t4976;
  t5815 = -1.*t164*t914*t764;
  t5818 = t1269*t164*t1020;
  t5824 = t5815 + t5818;
  t5830 = t1269*t164*t914;
  t5833 = t164*t764*t1020;
  t5834 = t5830 + t5833;
  t5845 = -1.*t1906*t915;
  t5848 = 0.340999127418*t329*t5824;
  t5850 = t2575*t5834;
  t5851 = t5845 + t5848 + t5850;
  t5855 = -1.*t1632*t915;
  t5861 = t2907*t5824;
  t5870 = 0.340999127418*t329*t5834;
  t5873 = t5855 + t5861 + t5870;
  t5877 = -1.*t3428*t915;
  t5878 = t457*t5824;
  t5879 = t676*t5834;
  t5895 = t5877 + t5878 + t5879;
  t5897 = t3358*t5851;
  t5898 = t3196*t5873;
  t5902 = t3776*t5895;
  t5903 = t5897 + t5898 + t5902;
  t5907 = t3972*t5851;
  t5909 = -0.340999127418*t2250*t5873;
  t5910 = t2389*t5895;
  t5911 = t5907 + t5909 + t5910;
  t5914 = -0.340999127418*t2250*t5851;
  t5916 = t4203*t5873;
  t5921 = t2858*t5895;
  t5922 = t5914 + t5916 + t5921;
  t5925 = t4146*t5903;
  t5926 = -0.340999127418*t3567*t5911;
  t5933 = t4340*t5922;
  t5934 = t5925 + t5926 + t5933;
  t5942 = t3925*t5903;
  t5943 = t4484*t5911;
  t5953 = -0.340999127418*t3567*t5922;
  t5954 = t5942 + t5943 + t5953;
  t5972 = t4548*t5903;
  t5982 = t3603*t5911;
  t5983 = t3733*t5922;
  t5989 = t5972 + t5982 + t5983;
  t5999 = t4516*t5934;
  t6010 = t4511*t5954;
  t6011 = t4676*t5989;
  t6012 = t5999 + t6010 + t6011;
  t6020 = t4740*t5934;
  t6021 = -0.340999127418*t4280*t5954;
  t6035 = t4292*t5989;
  t6036 = t6020 + t6021 + t6035;
  t6049 = -0.340999127418*t4280*t5934;
  t6050 = t4890*t5954;
  t6053 = t4445*t5989;
  t6056 = t6049 + t6050 + t6053;
  t6062 = t4829*t6012;
  t6065 = -0.340999127418*t4585*t6036;
  t6068 = t5007*t6056;
  t6070 = t6062 + t6065 + t6068;
  t6078 = t4726*t6012;
  t6081 = t5137*t6036;
  t6086 = -0.340999127418*t4585*t6056;
  t6087 = t6078 + t6081 + t6086;
  t6106 = t5230*t6012;
  t6107 = t4606*t6036;
  t6118 = t4593*t6056;
  t6120 = t6106 + t6107 + t6118;
  p_output1[0]=0. + t1301*t1436 + t1635*t1776 + t2136*t2162 + t2479*t2617 + t2888*t2922 + t3377*t3509 + t3736*t3804 + t3946*t4091 + t4163*t4225 + t4306*t4345 + t4449*t4500 + t4527*t4575 + t4635*t4684 + t4738*t4795 + t4857*t4895 + t4986*t5025 + t5129*t5163 + t5209*t5243 + 0.060052*(t5025*t5248 + t5163*t5290 + t5243*t5304) - 0.415942*(t5025*t5322 + t5163*t5353 + t5243*t5368) - 0.826251*(t5025*t5410 + t5163*t5416 + t5243*t5422) + t163*t164*t728 + t1224*t880 + var1[0];
  p_output1[1]=0. + t1301*t5462 + t1635*t5477 + t2136*t5489 + t2479*t5501 + t2888*t5509 + t3377*t5526 + t3736*t5556 + t3946*t5568 + t4163*t5581 + t4306*t5608 + t4449*t5613 + t4527*t5627 + t4635*t5640 + t4738*t5657 + t4857*t5672 + t4986*t5703 + t5129*t5718 + t5209*t5739 + 0.060052*(t5248*t5703 + t5290*t5718 + t5304*t5739) - 0.415942*(t5322*t5703 + t5353*t5718 + t5368*t5739) - 0.826251*(t5410*t5703 + t5416*t5718 + t5422*t5739) + t1002*t164*t728 + t5449*t880 + var1[1];
  p_output1[2]=0. + t1020*t1301*t164 + t1635*t5824 + t2136*t5834 + t2479*t5851 + t2888*t5873 + t3377*t5895 + t3736*t5903 + t3946*t5911 + t4163*t5922 + t4306*t5934 + t4449*t5954 + t4527*t5989 + t4635*t6012 + t4738*t6036 + t4857*t6056 + t4986*t6070 + t5129*t6087 + t5209*t6120 + 0.060052*(t5248*t6070 + t5290*t6087 + t5304*t6120) - 0.415942*(t5322*t6070 + t5353*t6087 + t5368*t6120) - 0.826251*(t5410*t6070 + t5416*t6087 + t5422*t6120) + t164*t880*t914 - 1.*t728*t915 + var1[2];
}



void p_right_toe_roll_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
