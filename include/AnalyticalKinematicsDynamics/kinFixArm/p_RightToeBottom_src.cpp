/*
 * Automatically Generated from Mathematica.
 * Sun 16 Oct 2022 21:27:07 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "p_RightToeBottom_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t398;
  double t91;
  double t844;
  double t1164;
  double t891;
  double t1291;
  double t212;
  double t215;
  double t228;
  double t645;
  double t1079;
  double t1323;
  double t1407;
  double t1675;
  double t2238;
  double t2305;
  double t2398;
  double t208;
  double t2850;
  double t2882;
  double t2614;
  double t2616;
  double t2670;
  double t2999;
  double t3021;
  double t3037;
  double t3291;
  double t3385;
  double t3391;
  double t3439;
  double t2578;
  double t2585;
  double t531;
  double t554;
  double t585;
  double t586;
  double t4243;
  double t4009;
  double t4087;
  double t3522;
  double t3553;
  double t3569;
  double t3597;
  double t3633;
  double t3639;
  double t3985;
  double t4001;
  double t3835;
  double t3885;
  double t3886;
  double t3889;
  double t3895;
  double t3934;
  double t4109;
  double t4116;
  double t4145;
  double t4147;
  double t4169;
  double t4177;
  double t4228;
  double t4234;
  double t4241;
  double t3478;
  double t3487;
  double t3699;
  double t3736;
  double t4559;
  double t4561;
  double t4299;
  double t4302;
  double t4310;
  double t4322;
  double t4349;
  double t4357;
  double t4377;
  double t4382;
  double t4395;
  double t4396;
  double t4429;
  double t4437;
  double t4578;
  double t4582;
  double t4585;
  double t4591;
  double t4616;
  double t4620;
  double t4645;
  double t4650;
  double t4653;
  double t4658;
  double t4368;
  double t4369;
  double t4244;
  double t4245;
  double t4266;
  double t4289;
  double t4993;
  double t4866;
  double t4873;
  double t4734;
  double t4736;
  double t4757;
  double t4763;
  double t4787;
  double t4789;
  double t4860;
  double t4862;
  double t4834;
  double t4835;
  double t4851;
  double t4853;
  double t4854;
  double t4855;
  double t4888;
  double t4889;
  double t4890;
  double t4896;
  double t4903;
  double t4908;
  double t4943;
  double t4944;
  double t4974;
  double t4673;
  double t4674;
  double t4805;
  double t4820;
  double t5235;
  double t5237;
  double t5238;
  double t5247;
  double t5186;
  double t5187;
  double t5035;
  double t5046;
  double t5058;
  double t5062;
  double t5064;
  double t5067;
  double t5107;
  double t5109;
  double t5110;
  double t5132;
  double t5146;
  double t5148;
  double t5210;
  double t5211;
  double t5212;
  double t5217;
  double t5218;
  double t5222;
  double t5244;
  double t5098;
  double t5099;
  double t5255;
  double t5305;
  double t5014;
  double t5023;
  double t4995;
  double t4998;
  double t5386;
  double t5280;
  double t5285;
  double t5286;
  double t5288;
  double t5290;
  double t5291;
  double t5391;
  double t5353;
  double t5354;
  double t5355;
  double t5356;
  double t5360;
  double t5362;
  double t5410;
  double t5411;
  double t5412;
  double t5414;
  double t5415;
  double t5416;
  double t5329;
  double t5432;
  double t5317;
  double t5454;
  double t5249;
  double t5425;
  double t5259;
  double t229;
  double t555;
  double t587;
  double t588;
  double t698;
  double t726;
  double t1764;
  double t1822;
  double t1841;
  double t2084;
  double t2452;
  double t2542;
  double t2591;
  double t2604;
  double t5499;
  double t5503;
  double t5504;
  double t5511;
  double t5514;
  double t5515;
  double t2765;
  double t2775;
  double t2923;
  double t2995;
  double t3255;
  double t3423;
  double t3501;
  double t3506;
  double t5526;
  double t5528;
  double t5529;
  double t5531;
  double t5540;
  double t5541;
  double t3690;
  double t3695;
  double t3747;
  double t3817;
  double t3984;
  double t4004;
  double t4103;
  double t4104;
  double t4242;
  double t4249;
  double t4292;
  double t4294;
  double t5557;
  double t5563;
  double t5564;
  double t5570;
  double t5574;
  double t5577;
  double t5579;
  double t5580;
  double t5586;
  double t5588;
  double t5589;
  double t5590;
  double t4360;
  double t4364;
  double t4370;
  double t4376;
  double t4465;
  double t4469;
  double t4563;
  double t4573;
  double t4640;
  double t4654;
  double t4718;
  double t4730;
  double t5600;
  double t5601;
  double t5603;
  double t5604;
  double t5606;
  double t5610;
  double t5612;
  double t5615;
  double t5617;
  double t5621;
  double t5625;
  double t5626;
  double t4801;
  double t4804;
  double t4826;
  double t4831;
  double t4858;
  double t4864;
  double t4881;
  double t4885;
  double t4977;
  double t5013;
  double t5029;
  double t5033;
  double t5635;
  double t5643;
  double t5644;
  double t5645;
  double t5647;
  double t5648;
  double t5654;
  double t5655;
  double t5664;
  double t5665;
  double t5666;
  double t5670;
  double t5091;
  double t5093;
  double t5104;
  double t5105;
  double t5178;
  double t5179;
  double t5196;
  double t5197;
  double t5228;
  double t5240;
  double t5251;
  double t5252;
  double t5261;
  double t5265;
  double t5278;
  double t5678;
  double t5684;
  double t5688;
  double t5689;
  double t5696;
  double t5706;
  double t5709;
  double t5716;
  double t5728;
  double t5736;
  double t5742;
  double t5749;
  double t5297;
  double t5302;
  double t5325;
  double t5326;
  double t5332;
  double t5337;
  double t5342;
  double t5379;
  double t5383;
  double t5387;
  double t5390;
  double t5394;
  double t5403;
  double t5405;
  double t5430;
  double t5755;
  double t5758;
  double t5759;
  double t5767;
  double t5434;
  double t5777;
  double t5784;
  double t5790;
  double t5793;
  double t5441;
  double t5445;
  double t5815;
  double t5818;
  double t5820;
  double t5823;
  double t5456;
  double t5461;
  double t5465;
  double t5473;
  double t5481;
  double t5482;
  double t5487;
  double t5489;
  double t5877;
  double t5878;
  double t5884;
  double t5895;
  double t5896;
  double t5897;
  double t5902;
  double t5907;
  double t5929;
  double t5931;
  double t5944;
  double t5949;
  double t5952;
  double t5954;
  double t5958;
  double t5960;
  double t5966;
  double t5967;
  double t5971;
  double t5972;
  double t5973;
  double t5974;
  double t5981;
  double t5984;
  double t5989;
  double t5993;
  double t6000;
  double t6002;
  double t6003;
  double t6004;
  double t6008;
  double t6015;
  double t6022;
  double t6037;
  double t6042;
  double t6044;
  double t6048;
  double t6049;
  double t6061;
  double t6062;
  double t6063;
  double t6067;
  double t6070;
  double t6072;
  double t6075;
  double t6083;
  double t6089;
  double t6091;
  double t6092;
  double t6095;
  double t6101;
  double t6104;
  double t6106;
  double t6110;
  double t6117;
  double t6122;
  double t6123;
  double t6124;
  double t6131;
  double t6138;
  double t6140;
  double t6143;
  double t6146;
  double t6150;
  double t6154;
  double t6155;
  t398 = Sin(var1[14]);
  t91 = Cos(var1[3]);
  t844 = Cos(var1[5]);
  t1164 = Sin(var1[3]);
  t891 = Sin(var1[4]);
  t1291 = Sin(var1[5]);
  t212 = Cos(var1[14]);
  t215 = -1.*t212;
  t228 = 1. + t215;
  t645 = Sin(var1[13]);
  t1079 = t91*t844*t891;
  t1323 = t1164*t1291;
  t1407 = t1079 + t1323;
  t1675 = Cos(var1[13]);
  t2238 = -1.*t844*t1164;
  t2305 = t91*t891*t1291;
  t2398 = t2238 + t2305;
  t208 = Cos(var1[4]);
  t2850 = -0.366501*t398;
  t2882 = 0. + t2850;
  t2614 = -1.*t645*t1407;
  t2616 = t1675*t2398;
  t2670 = t2614 + t2616;
  t2999 = t1675*t1407;
  t3021 = t645*t2398;
  t3037 = t2999 + t3021;
  t3291 = Cos(var1[15]);
  t3385 = -1.*t3291;
  t3391 = 1. + t3385;
  t3439 = Sin(var1[15]);
  t2578 = 0.930418*t398;
  t2585 = 0. + t2578;
  t531 = -0.930418*t398;
  t554 = 0. + t531;
  t585 = 0.366501*t398;
  t586 = 0. + t585;
  t4243 = Sin(var1[16]);
  t4009 = 0.930418*t3439;
  t4087 = 0. + t4009;
  t3522 = t91*t208*t2882;
  t3553 = 0.340999127418*t228*t2670;
  t3569 = -0.134322983001*t228;
  t3597 = 1. + t3569;
  t3633 = t3597*t3037;
  t3639 = t3522 + t3553 + t3633;
  t3985 = 0.366501*t3439;
  t4001 = 0. + t3985;
  t3835 = t91*t208*t2585;
  t3885 = -0.8656776547239999*t228;
  t3886 = 1. + t3885;
  t3889 = t3886*t2670;
  t3895 = 0.340999127418*t228*t3037;
  t3934 = t3835 + t3889 + t3895;
  t4109 = -1.000000637725*t228;
  t4116 = 1. + t4109;
  t4145 = t4116*t91*t208;
  t4147 = t554*t2670;
  t4169 = t586*t3037;
  t4177 = t4145 + t4147 + t4169;
  t4228 = Cos(var1[16]);
  t4234 = -1.*t4228;
  t4241 = 1. + t4234;
  t3478 = -0.930418*t3439;
  t3487 = 0. + t3478;
  t3699 = -0.366501*t3439;
  t3736 = 0. + t3699;
  t4559 = 0.366501*t4243;
  t4561 = 0. + t4559;
  t4299 = t4087*t3639;
  t4302 = t4001*t3934;
  t4310 = -1.000000637725*t3391;
  t4322 = 1. + t4310;
  t4349 = t4322*t4177;
  t4357 = t4299 + t4302 + t4349;
  t4377 = -0.8656776547239999*t3391;
  t4382 = 1. + t4377;
  t4395 = t4382*t3639;
  t4396 = -0.340999127418*t3391*t3934;
  t4429 = t3487*t4177;
  t4437 = t4395 + t4396 + t4429;
  t4578 = -0.340999127418*t3391*t3639;
  t4582 = -0.134322983001*t3391;
  t4585 = 1. + t4582;
  t4591 = t4585*t3934;
  t4616 = t3736*t4177;
  t4620 = t4578 + t4591 + t4616;
  t4645 = Cos(var1[17]);
  t4650 = -1.*t4645;
  t4653 = 1. + t4650;
  t4658 = Sin(var1[17]);
  t4368 = 0.930418*t4243;
  t4369 = 0. + t4368;
  t4244 = -0.930418*t4243;
  t4245 = 0. + t4244;
  t4266 = -0.366501*t4243;
  t4289 = 0. + t4266;
  t4993 = Sin(var1[18]);
  t4866 = -0.366501*t4658;
  t4873 = 0. + t4866;
  t4734 = t4561*t4357;
  t4736 = -0.340999127418*t4241*t4437;
  t4757 = -0.134322983001*t4241;
  t4763 = 1. + t4757;
  t4787 = t4763*t4620;
  t4789 = t4734 + t4736 + t4787;
  t4860 = -0.930418*t4658;
  t4862 = 0. + t4860;
  t4834 = t4369*t4357;
  t4835 = -0.8656776547239999*t4241;
  t4851 = 1. + t4835;
  t4853 = t4851*t4437;
  t4854 = -0.340999127418*t4241*t4620;
  t4855 = t4834 + t4853 + t4854;
  t4888 = -1.000000637725*t4241;
  t4889 = 1. + t4888;
  t4890 = t4889*t4357;
  t4896 = t4245*t4437;
  t4903 = t4289*t4620;
  t4908 = t4890 + t4896 + t4903;
  t4943 = Cos(var1[18]);
  t4944 = -1.*t4943;
  t4974 = 1. + t4944;
  t4673 = 0.366501*t4658;
  t4674 = 0. + t4673;
  t4805 = 0.930418*t4658;
  t4820 = 0. + t4805;
  t5235 = Cos(var1[19]);
  t5237 = -1.*t5235;
  t5238 = 1. + t5237;
  t5247 = Sin(var1[19]);
  t5186 = 0.930418*t4993;
  t5187 = 0. + t5186;
  t5035 = t4873*t4789;
  t5046 = t4862*t4855;
  t5058 = -1.000000637725*t4653;
  t5062 = 1. + t5058;
  t5064 = t5062*t4908;
  t5067 = t5035 + t5046 + t5064;
  t5107 = -0.134322983001*t4653;
  t5109 = 1. + t5107;
  t5110 = t5109*t4789;
  t5132 = -0.340999127418*t4653*t4855;
  t5146 = t4674*t4908;
  t5148 = t5110 + t5132 + t5146;
  t5210 = -0.340999127418*t4653*t4789;
  t5211 = -0.8656776547239999*t4653;
  t5212 = 1. + t5211;
  t5217 = t5212*t4855;
  t5218 = t4820*t4908;
  t5222 = t5210 + t5217 + t5218;
  t5244 = -0.120666640478*t5238;
  t5098 = 0.366501*t4993;
  t5099 = 0. + t5098;
  t5255 = -0.444895486988*t5238;
  t5305 = -0.175248972904*t5238;
  t5014 = -0.366501*t4993;
  t5023 = 0. + t5014;
  t4995 = -0.930418*t4993;
  t4998 = 0. + t4995;
  t5386 = -0.218018*t5247;
  t5280 = t5187*t5067;
  t5285 = -0.340999127418*t4974*t5148;
  t5286 = -0.8656776547239999*t4974;
  t5288 = 1. + t5286;
  t5290 = t5288*t5222;
  t5291 = t5280 + t5285 + t5290;
  t5391 = 0.553471*t5247;
  t5353 = t5099*t5067;
  t5354 = -0.134322983001*t4974;
  t5355 = 1. + t5354;
  t5356 = t5355*t5148;
  t5360 = -0.340999127418*t4974*t5222;
  t5362 = t5353 + t5356 + t5360;
  t5410 = -1.000000637725*t4974;
  t5411 = 1. + t5410;
  t5412 = t5411*t5067;
  t5414 = t5023*t5148;
  t5415 = t4998*t5222;
  t5416 = t5412 + t5414 + t5415;
  t5329 = 0.803828*t5247;
  t5432 = 0.175248972904*t5238;
  t5317 = -0.553471*t5247;
  t5454 = 0.120666640478*t5238;
  t5249 = -0.803828*t5247;
  t5425 = 0.444895486988*t5238;
  t5259 = 0.218018*t5247;
  t229 = -0.04500040093286238*t228;
  t555 = -0.07877663122399998*t554;
  t587 = 0.031030906668*t586;
  t588 = 0. + t229 + t555 + t587;
  t698 = -0.091*t645;
  t726 = 0. + t698;
  t1764 = -1.*t1675;
  t1822 = 1. + t1764;
  t1841 = -0.091*t1822;
  t2084 = 0. + t1841;
  t2452 = 1.296332362046933e-7*var1[14];
  t2542 = -0.07877668146182712*t228;
  t2591 = -0.045000372235*t2585;
  t2604 = t2452 + t2542 + t2591;
  t5499 = t844*t1164*t891;
  t5503 = -1.*t91*t1291;
  t5504 = t5499 + t5503;
  t5511 = t91*t844;
  t5514 = t1164*t891*t1291;
  t5515 = t5511 + t5514;
  t2765 = 3.2909349868922137e-7*var1[14];
  t2775 = 0.03103092645718495*t228;
  t2923 = -0.045000372235*t2882;
  t2995 = t2765 + t2775 + t2923;
  t3255 = -1.296332362046933e-7*var1[15];
  t3423 = -0.14128592423750855*t3391;
  t3501 = -0.045000372235*t3487;
  t3506 = t3255 + t3423 + t3501;
  t5526 = -1.*t645*t5504;
  t5528 = t1675*t5515;
  t5529 = t5526 + t5528;
  t5531 = t1675*t5504;
  t5540 = t645*t5515;
  t5541 = t5531 + t5540;
  t3690 = 3.2909349868922137e-7*var1[15];
  t3695 = -0.055653945343889656*t3391;
  t3747 = -0.045000372235*t3736;
  t3817 = t3690 + t3695 + t3747;
  t3984 = -0.04500040093286238*t3391;
  t4004 = -0.055653909852*t4001;
  t4103 = -0.141285834136*t4087;
  t4104 = 0. + t3984 + t4004 + t4103;
  t4242 = 0.039853038461262744*t4241;
  t4249 = -0.22023459268999998*t4245;
  t4292 = -0.086752619205*t4289;
  t4294 = 0. + t4242 + t4249 + t4292;
  t5557 = t208*t2882*t1164;
  t5563 = 0.340999127418*t228*t5529;
  t5564 = t3597*t5541;
  t5570 = t5557 + t5563 + t5564;
  t5574 = t208*t2585*t1164;
  t5577 = t3886*t5529;
  t5579 = 0.340999127418*t228*t5541;
  t5580 = t5574 + t5577 + t5579;
  t5586 = t4116*t208*t1164;
  t5588 = t554*t5529;
  t5589 = t586*t5541;
  t5590 = t5586 + t5588 + t5589;
  t4360 = 6.295460977284962e-8*var1[16];
  t4364 = -0.22023473313910558*t4241;
  t4370 = 0.039853013046*t4369;
  t4376 = t4360 + t4364 + t4370;
  t4465 = -1.5981976069815686e-7*var1[16];
  t4469 = -0.08675267452931407*t4241;
  t4563 = 0.039853013046*t4561;
  t4573 = t4465 + t4469 + t4563;
  t4640 = 5.7930615939377813e-8*var1[17];
  t4654 = -0.23261833304643187*t4653;
  t4718 = -0.262809976934*t4674;
  t4730 = t4640 + t4654 + t4718;
  t5600 = t4087*t5570;
  t5601 = t4001*t5580;
  t5603 = t4322*t5590;
  t5604 = t5600 + t5601 + t5603;
  t5606 = t4382*t5570;
  t5610 = -0.340999127418*t3391*t5580;
  t5612 = t3487*t5590;
  t5615 = t5606 + t5610 + t5612;
  t5617 = -0.340999127418*t3391*t5570;
  t5621 = t4585*t5580;
  t5625 = t3736*t5590;
  t5626 = t5617 + t5621 + t5625;
  t4801 = -2.281945176511838e-8*var1[17];
  t4804 = -0.5905366811997648*t4653;
  t4826 = -0.262809976934*t4820;
  t4831 = t4801 + t4804 + t4826;
  t4858 = -0.26281014453449253*t4653;
  t4864 = -0.5905363046000001*t4862;
  t4881 = -0.23261818470000004*t4873;
  t4885 = 0. + t4858 + t4864 + t4881;
  t4977 = 0.06199697675299678*t4974;
  t5013 = -0.823260828522*t4998;
  t5029 = -0.324290713329*t5023;
  t5033 = 0. + t4977 + t5013 + t5029;
  t5635 = t4561*t5604;
  t5643 = -0.340999127418*t4241*t5615;
  t5644 = t4763*t5626;
  t5645 = t5635 + t5643 + t5644;
  t5647 = t4369*t5604;
  t5648 = t4851*t5615;
  t5654 = -0.340999127418*t4241*t5626;
  t5655 = t5647 + t5648 + t5654;
  t5664 = t4889*t5604;
  t5665 = t4245*t5615;
  t5666 = t4289*t5626;
  t5670 = t5664 + t5665 + t5666;
  t5091 = 7.500378623168247e-8*var1[18];
  t5093 = -0.32429092013729516*t4974;
  t5104 = 0.061996937216*t5099;
  t5105 = t5091 + t5093 + t5104;
  t5178 = -2.95447451120871e-8*var1[18];
  t5179 = -0.8232613535360118*t4974;
  t5196 = 0.061996937216*t5187;
  t5197 = t5178 + t5179 + t5196;
  t5228 = 7.20503013377005e-8*var1[19];
  t5240 = -0.3667270384178674*t5238;
  t5251 = t5244 + t5249;
  t5252 = -0.29871295412*t5251;
  t5261 = t5255 + t5259;
  t5265 = 0.44503472296900004*t5261;
  t5278 = t5228 + t5240 + t5252 + t5265;
  t5678 = t4873*t5645;
  t5684 = t4862*t5655;
  t5688 = t5062*t5670;
  t5689 = t5678 + t5684 + t5688;
  t5696 = t5109*t5645;
  t5706 = -0.340999127418*t4653*t5655;
  t5709 = t4674*t5670;
  t5716 = t5696 + t5706 + t5709;
  t5728 = -0.340999127418*t4653*t5645;
  t5736 = t5212*t5655;
  t5742 = t4820*t5670;
  t5749 = t5728 + t5736 + t5742;
  t5297 = 2.838136523330542e-8*var1[19];
  t5302 = -0.2845150083511607*t5238;
  t5325 = t5305 + t5317;
  t5326 = 0.44503472296900004*t5325;
  t5332 = t5244 + t5329;
  t5337 = -0.5286755231320001*t5332;
  t5342 = t5297 + t5302 + t5326 + t5337;
  t5379 = 1.0464152525368286e-7*var1[19];
  t5383 = 0.15748087543254813*t5238;
  t5387 = t5255 + t5386;
  t5390 = -0.5286755231320001*t5387;
  t5394 = t5305 + t5391;
  t5403 = -0.29871295412*t5394;
  t5405 = t5379 + t5383 + t5390 + t5403;
  t5430 = t5425 + t5386;
  t5755 = t5187*t5689;
  t5758 = -0.340999127418*t4974*t5716;
  t5759 = t5288*t5749;
  t5767 = t5755 + t5758 + t5759;
  t5434 = t5432 + t5391;
  t5777 = t5099*t5689;
  t5784 = t5355*t5716;
  t5790 = -0.340999127418*t4974*t5749;
  t5793 = t5777 + t5784 + t5790;
  t5441 = -0.353861996165*t5238;
  t5445 = 1. + t5441;
  t5815 = t5411*t5689;
  t5818 = t5023*t5716;
  t5820 = t4998*t5749;
  t5823 = t5815 + t5818 + t5820;
  t5456 = t5454 + t5329;
  t5461 = -0.952469601425*t5238;
  t5465 = 1. + t5461;
  t5473 = t5432 + t5317;
  t5481 = -0.693671301908*t5238;
  t5482 = 1. + t5481;
  t5487 = t5454 + t5249;
  t5489 = t5425 + t5259;
  t5877 = -1.*t208*t844*t645;
  t5878 = t1675*t208*t1291;
  t5884 = t5877 + t5878;
  t5895 = t1675*t208*t844;
  t5896 = t208*t645*t1291;
  t5897 = t5895 + t5896;
  t5902 = -1.*t2882*t891;
  t5907 = 0.340999127418*t228*t5884;
  t5929 = t3597*t5897;
  t5931 = t5902 + t5907 + t5929;
  t5944 = -1.*t2585*t891;
  t5949 = t3886*t5884;
  t5952 = 0.340999127418*t228*t5897;
  t5954 = t5944 + t5949 + t5952;
  t5958 = -1.*t4116*t891;
  t5960 = t554*t5884;
  t5966 = t586*t5897;
  t5967 = t5958 + t5960 + t5966;
  t5971 = t4087*t5931;
  t5972 = t4001*t5954;
  t5973 = t4322*t5967;
  t5974 = t5971 + t5972 + t5973;
  t5981 = t4382*t5931;
  t5984 = -0.340999127418*t3391*t5954;
  t5989 = t3487*t5967;
  t5993 = t5981 + t5984 + t5989;
  t6000 = -0.340999127418*t3391*t5931;
  t6002 = t4585*t5954;
  t6003 = t3736*t5967;
  t6004 = t6000 + t6002 + t6003;
  t6008 = t4561*t5974;
  t6015 = -0.340999127418*t4241*t5993;
  t6022 = t4763*t6004;
  t6037 = t6008 + t6015 + t6022;
  t6042 = t4369*t5974;
  t6044 = t4851*t5993;
  t6048 = -0.340999127418*t4241*t6004;
  t6049 = t6042 + t6044 + t6048;
  t6061 = t4889*t5974;
  t6062 = t4245*t5993;
  t6063 = t4289*t6004;
  t6067 = t6061 + t6062 + t6063;
  t6070 = t4873*t6037;
  t6072 = t4862*t6049;
  t6075 = t5062*t6067;
  t6083 = t6070 + t6072 + t6075;
  t6089 = t5109*t6037;
  t6091 = -0.340999127418*t4653*t6049;
  t6092 = t4674*t6067;
  t6095 = t6089 + t6091 + t6092;
  t6101 = -0.340999127418*t4653*t6037;
  t6104 = t5212*t6049;
  t6106 = t4820*t6067;
  t6110 = t6101 + t6104 + t6106;
  t6117 = t5187*t6083;
  t6122 = -0.340999127418*t4974*t6095;
  t6123 = t5288*t6110;
  t6124 = t6117 + t6122 + t6123;
  t6131 = t5099*t6083;
  t6138 = t5355*t6095;
  t6140 = -0.340999127418*t4974*t6110;
  t6143 = t6131 + t6138 + t6140;
  t6146 = t5411*t6083;
  t6150 = t5023*t6095;
  t6154 = t4998*t6110;
  t6155 = t6146 + t6150 + t6154;
  p_output1[0]=0. + t2084*t2398 + t2604*t2670 + t2995*t3037 + t3506*t3639 + t3817*t3934 + t4104*t4177 + t4294*t4357 + t4376*t4437 + t4573*t4620 + t4730*t4789 + t4831*t4855 + t4885*t4908 + t5033*t5067 + t5105*t5148 + t5197*t5222 + t5278*t5291 + t5342*t5362 + t5405*t5416 + 0.061997*(t5291*t5430 + t5362*t5434 + t5416*t5445) - 0.402602*(t5291*t5456 + t5362*t5465 + t5416*t5473) - 0.792413*(t5291*t5482 + t5362*t5487 + t5416*t5489) + t1407*t726 + t208*t588*t91 + var1[0];
  p_output1[1]=0. + t2084*t5515 + t2604*t5529 + t2995*t5541 + t3506*t5570 + t3817*t5580 + t4104*t5590 + t4294*t5604 + t4376*t5615 + t4573*t5626 + t4730*t5645 + t4831*t5655 + t4885*t5670 + t5033*t5689 + t5105*t5716 + t5197*t5749 + t5278*t5767 + t5342*t5793 + t5405*t5823 + 0.061997*(t5430*t5767 + t5434*t5793 + t5445*t5823) - 0.402602*(t5456*t5767 + t5465*t5793 + t5473*t5823) - 0.792413*(t5482*t5767 + t5487*t5793 + t5489*t5823) + t1164*t208*t588 + t5504*t726 + var1[1];
  p_output1[2]=0. + t1291*t208*t2084 + t2604*t5884 + t2995*t5897 + t3506*t5931 + t3817*t5954 + t4104*t5967 + t4294*t5974 + t4376*t5993 + t4573*t6004 + t4730*t6037 + t4831*t6049 + t4885*t6067 + t5033*t6083 + t5105*t6095 + t5197*t6110 + t5278*t6124 + t5342*t6143 + t5405*t6155 + 0.061997*(t5430*t6124 + t5434*t6143 + t5445*t6155) - 0.402602*(t5456*t6124 + t5465*t6143 + t5473*t6155) - 0.792413*(t5482*t6124 + t5487*t6143 + t5489*t6155) + t208*t726*t844 - 1.*t588*t891 + var1[2];
}



void p_RightToeBottom_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
