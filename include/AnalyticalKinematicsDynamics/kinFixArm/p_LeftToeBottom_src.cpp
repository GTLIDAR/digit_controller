/*
 * Automatically Generated from Mathematica.
 * Sun 16 Oct 2022 21:19:06 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "p_LeftToeBottom_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t22;
  double t17;
  double t23;
  double t18;
  double t28;
  double t46;
  double t6;
  double t32;
  double t33;
  double t34;
  double t21;
  double t29;
  double t30;
  double t35;
  double t41;
  double t42;
  double t43;
  double t70;
  double t77;
  double t80;
  double t57;
  double t61;
  double t62;
  double t40;
  double t65;
  double t66;
  double t112;
  double t113;
  double t114;
  double t83;
  double t88;
  double t47;
  double t48;
  double t51;
  double t52;
  double t137;
  double t138;
  double t139;
  double t140;
  double t141;
  double t142;
  double t115;
  double t116;
  double t117;
  double t118;
  double t123;
  double t124;
  double t148;
  double t128;
  double t129;
  double t130;
  double t131;
  double t132;
  double t133;
  double t107;
  double t110;
  double t111;
  double t104;
  double t125;
  double t126;
  double t127;
  double t136;
  double t149;
  double t150;
  double t153;
  double t154;
  double t156;
  double t159;
  double t160;
  double t166;
  double t167;
  double t168;
  double t169;
  double t170;
  double t171;
  double t172;
  double t175;
  double t181;
  double t182;
  double t183;
  double t184;
  double t185;
  double t186;
  double t187;
  double t188;
  double t209;
  double t210;
  double t211;
  double t155;
  double t157;
  double t158;
  double t178;
  double t179;
  double t180;
  double t189;
  double t190;
  double t196;
  double t197;
  double t202;
  double t203;
  double t204;
  double t205;
  double t206;
  double t207;
  double t216;
  double t217;
  double t218;
  double t219;
  double t220;
  double t221;
  double t222;
  double t223;
  double t224;
  double t225;
  double t231;
  double t232;
  double t233;
  double t92;
  double t95;
  double t96;
  double t98;
  double t101;
  double t105;
  double t106;
  double t191;
  double t194;
  double t195;
  double t208;
  double t212;
  double t215;
  double t226;
  double t227;
  double t234;
  double t235;
  double t236;
  double t237;
  double t238;
  double t239;
  double t240;
  double t241;
  double t245;
  double t246;
  double t247;
  double t248;
  double t249;
  double t250;
  double t251;
  double t252;
  double t102;
  double t103;
  double t230;
  double t242;
  double t243;
  double t244;
  double t253;
  double t254;
  double t259;
  double t260;
  double t261;
  double t262;
  double t263;
  double t264;
  double t265;
  double t266;
  double t97;
  double t270;
  double t271;
  double t272;
  double t273;
  double t274;
  double t275;
  double t276;
  double t277;
  double t278;
  double t279;
  double t286;
  double t256;
  double t290;
  double t287;
  double t311;
  double t295;
  double t301;
  double t320;
  double t257;
  double t308;
  double t99;
  double t7;
  double t14;
  double t15;
  double t16;
  double t37;
  double t38;
  double t45;
  double t50;
  double t53;
  double t55;
  double t401;
  double t402;
  double t403;
  double t397;
  double t398;
  double t399;
  double t63;
  double t64;
  double t67;
  double t68;
  double t81;
  double t82;
  double t89;
  double t90;
  double t100;
  double t410;
  double t411;
  double t412;
  double t406;
  double t407;
  double t408;
  double t424;
  double t425;
  double t426;
  double t427;
  double t414;
  double t415;
  double t416;
  double t417;
  double t419;
  double t420;
  double t421;
  double t422;
  double t418;
  double t423;
  double t428;
  double t429;
  double t431;
  double t432;
  double t433;
  double t434;
  double t436;
  double t437;
  double t438;
  double t439;
  double t430;
  double t435;
  double t441;
  double t442;
  double t444;
  double t446;
  double t447;
  double t448;
  double t451;
  double t452;
  double t454;
  double t455;
  double t258;
  double t443;
  double t449;
  double t456;
  double t457;
  double t459;
  double t460;
  double t461;
  double t462;
  double t464;
  double t465;
  double t466;
  double t467;
  double t268;
  double t269;
  double t283;
  double t284;
  double t458;
  double t463;
  double t468;
  double t469;
  double t288;
  double t471;
  double t472;
  double t473;
  double t474;
  double t291;
  double t476;
  double t477;
  double t478;
  double t479;
  double t296;
  double t298;
  double t299;
  double t302;
  double t306;
  double t307;
  double t309;
  double t310;
  double t312;
  double t313;
  double t314;
  double t316;
  double t317;
  double t318;
  double t319;
  double t321;
  double t322;
  double t323;
  double t325;
  double t326;
  double t327;
  double t328;
  double t331;
  double t332;
  double t333;
  double t335;
  double t336;
  double t337;
  double t339;
  double t341;
  double t342;
  double t343;
  double t344;
  double t346;
  double t347;
  double t348;
  double t349;
  double t351;
  double t352;
  double t353;
  double t354;
  double t356;
  double t357;
  double t358;
  double t359;
  double t361;
  double t362;
  double t363;
  double t364;
  double t366;
  double t367;
  double t368;
  double t369;
  double t371;
  double t372;
  double t373;
  double t374;
  double t376;
  double t377;
  double t378;
  double t379;
  double t381;
  double t382;
  double t383;
  double t384;
  double t386;
  double t387;
  double t388;
  double t389;
  double t391;
  double t392;
  double t393;
  double t394;
  double t516;
  double t517;
  double t518;
  double t512;
  double t513;
  double t514;
  double t530;
  double t531;
  double t532;
  double t533;
  double t520;
  double t521;
  double t522;
  double t523;
  double t525;
  double t526;
  double t527;
  double t528;
  double t524;
  double t529;
  double t534;
  double t535;
  double t537;
  double t538;
  double t539;
  double t540;
  double t542;
  double t543;
  double t544;
  double t545;
  double t536;
  double t541;
  double t546;
  double t547;
  double t549;
  double t550;
  double t551;
  double t552;
  double t554;
  double t555;
  double t556;
  double t557;
  double t548;
  double t553;
  double t558;
  double t559;
  double t561;
  double t562;
  double t563;
  double t564;
  double t566;
  double t567;
  double t568;
  double t569;
  double t560;
  double t565;
  double t570;
  double t571;
  double t573;
  double t574;
  double t575;
  double t576;
  double t578;
  double t579;
  double t580;
  double t581;
  t22 = Cos(var1[3]);
  t17 = Cos(var1[5]);
  t23 = Sin(var1[4]);
  t18 = Sin(var1[3]);
  t28 = Sin(var1[5]);
  t46 = Sin(var1[7]);
  t6 = Cos(var1[6]);
  t32 = t22*t17*t23;
  t33 = t18*t28;
  t34 = t32 + t33;
  t21 = -1.*t17*t18;
  t29 = t22*t23*t28;
  t30 = t21 + t29;
  t35 = Sin(var1[6]);
  t41 = Cos(var1[7]);
  t42 = -1.*t41;
  t43 = 1. + t42;
  t70 = t6*t30;
  t77 = -1.*t34*t35;
  t80 = t70 + t77;
  t57 = t6*t34;
  t61 = t30*t35;
  t62 = t57 + t61;
  t40 = Cos(var1[4]);
  t65 = 0.366501*t46;
  t66 = 0. + t65;
  t112 = Cos(var1[8]);
  t113 = -1.*t112;
  t114 = 1. + t113;
  t83 = 0.930418*t46;
  t88 = 0. + t83;
  t47 = -0.930418*t46;
  t48 = 0. + t47;
  t51 = -0.366501*t46;
  t52 = 0. + t51;
  t137 = -1.000000637725*t43;
  t138 = 1. + t137;
  t139 = t22*t40*t138;
  t140 = t80*t48;
  t141 = t62*t52;
  t142 = t139 + t140 + t141;
  t115 = -0.340999127418*t43*t80;
  t116 = -0.134322983001*t43;
  t117 = 1. + t116;
  t118 = t117*t62;
  t123 = t22*t40*t66;
  t124 = t115 + t118 + t123;
  t148 = Sin(var1[8]);
  t128 = -0.8656776547239999*t43;
  t129 = 1. + t128;
  t130 = t129*t80;
  t131 = -0.340999127418*t43*t62;
  t132 = t22*t40*t88;
  t133 = t130 + t131 + t132;
  t107 = Cos(var1[9]);
  t110 = -1.*t107;
  t111 = 1. + t110;
  t104 = Sin(var1[10]);
  t125 = 0.340999127418*t114*t124;
  t126 = -0.134322983001*t114;
  t127 = 1. + t126;
  t136 = t127*t133;
  t149 = -0.366501*t148;
  t150 = 0. + t149;
  t153 = t142*t150;
  t154 = t125 + t136 + t153;
  t156 = Sin(var1[9]);
  t159 = -1.000000637725*t114;
  t160 = 1. + t159;
  t166 = t160*t142;
  t167 = -0.930418*t148;
  t168 = 0. + t167;
  t169 = t124*t168;
  t170 = 0.366501*t148;
  t171 = 0. + t170;
  t172 = t133*t171;
  t175 = t166 + t169 + t172;
  t181 = -0.8656776547239999*t114;
  t182 = 1. + t181;
  t183 = t182*t124;
  t184 = 0.340999127418*t114*t133;
  t185 = 0.930418*t148;
  t186 = 0. + t185;
  t187 = t142*t186;
  t188 = t183 + t184 + t187;
  t209 = Cos(var1[10]);
  t210 = -1.*t209;
  t211 = 1. + t210;
  t155 = 0.340999127418*t111*t154;
  t157 = -0.930418*t156;
  t158 = 0. + t157;
  t178 = t158*t175;
  t179 = -0.8656776547239999*t111;
  t180 = 1. + t179;
  t189 = t180*t188;
  t190 = t155 + t178 + t189;
  t196 = -0.134322983001*t111;
  t197 = 1. + t196;
  t202 = t197*t154;
  t203 = 0.366501*t156;
  t204 = 0. + t203;
  t205 = t204*t175;
  t206 = 0.340999127418*t111*t188;
  t207 = t202 + t205 + t206;
  t216 = -0.366501*t156;
  t217 = 0. + t216;
  t218 = t217*t154;
  t219 = -1.000000637725*t111;
  t220 = 1. + t219;
  t221 = t220*t175;
  t222 = 0.930418*t156;
  t223 = 0. + t222;
  t224 = t223*t188;
  t225 = t218 + t221 + t224;
  t231 = Cos(var1[11]);
  t232 = -1.*t231;
  t233 = 1. + t232;
  t92 = Cos(var1[12]);
  t95 = -1.*t92;
  t96 = 1. + t95;
  t98 = Sin(var1[12]);
  t101 = Sin(var1[11]);
  t105 = 0.930418*t104;
  t106 = 0. + t105;
  t191 = t106*t190;
  t194 = -0.366501*t104;
  t195 = 0. + t194;
  t208 = t195*t207;
  t212 = -1.000000637725*t211;
  t215 = 1. + t212;
  t226 = t215*t225;
  t227 = t191 + t208 + t226;
  t234 = -0.8656776547239999*t211;
  t235 = 1. + t234;
  t236 = t235*t190;
  t237 = 0.340999127418*t211*t207;
  t238 = -0.930418*t104;
  t239 = 0. + t238;
  t240 = t239*t225;
  t241 = t236 + t237 + t240;
  t245 = 0.340999127418*t211*t190;
  t246 = -0.134322983001*t211;
  t247 = 1. + t246;
  t248 = t247*t207;
  t249 = 0.366501*t104;
  t250 = 0. + t249;
  t251 = t250*t225;
  t252 = t245 + t248 + t251;
  t102 = 0.366501*t101;
  t103 = 0. + t102;
  t230 = t103*t227;
  t242 = 0.340999127418*t233*t241;
  t243 = -0.134322983001*t233;
  t244 = 1. + t243;
  t253 = t244*t252;
  t254 = t230 + t242 + t253;
  t259 = -0.930418*t101;
  t260 = 0. + t259;
  t261 = t260*t227;
  t262 = -0.8656776547239999*t233;
  t263 = 1. + t262;
  t264 = t263*t241;
  t265 = 0.340999127418*t233*t252;
  t266 = t261 + t264 + t265;
  t97 = -0.175248972904*t96;
  t270 = -1.000000637725*t233;
  t271 = 1. + t270;
  t272 = t271*t227;
  t273 = 0.930418*t101;
  t274 = 0. + t273;
  t275 = t274*t241;
  t276 = -0.366501*t101;
  t277 = 0. + t276;
  t278 = t277*t252;
  t279 = t272 + t275 + t278;
  t286 = -0.120666640478*t96;
  t256 = 0.444895486988*t96;
  t290 = -0.553471*t98;
  t287 = 0.803828*t98;
  t311 = 0.120666640478*t96;
  t295 = -0.803828*t98;
  t301 = -0.218018*t98;
  t320 = -0.444895486988*t96;
  t257 = 0.218018*t98;
  t308 = 0.175248972904*t96;
  t99 = 0.553471*t98;
  t7 = -1.*t6;
  t14 = 1. + t7;
  t15 = 0.091*t14;
  t16 = 0. + t15;
  t37 = 0.091*t35;
  t38 = 0. + t37;
  t45 = -0.04500040093286238*t43;
  t50 = 0.07877663122399998*t48;
  t53 = 0.031030906668*t52;
  t55 = 0. + t45 + t50 + t53;
  t401 = t17*t18*t23;
  t402 = -1.*t22*t28;
  t403 = t401 + t402;
  t397 = t22*t17;
  t398 = t18*t23*t28;
  t399 = t397 + t398;
  t63 = -3.2909349868922137e-7*var1[7];
  t64 = 0.03103092645718495*t43;
  t67 = -0.045000372235*t66;
  t68 = t63 + t64 + t67;
  t81 = 1.296332362046933e-7*var1[7];
  t82 = 0.07877668146182712*t43;
  t89 = -0.045000372235*t88;
  t90 = t81 + t82 + t89;
  t100 = t97 + t99;
  t410 = t6*t399;
  t411 = -1.*t403*t35;
  t412 = t410 + t411;
  t406 = t6*t403;
  t407 = t399*t35;
  t408 = t406 + t407;
  t424 = t40*t138*t18;
  t425 = t412*t48;
  t426 = t408*t52;
  t427 = t424 + t425 + t426;
  t414 = -0.340999127418*t43*t412;
  t415 = t117*t408;
  t416 = t40*t18*t66;
  t417 = t414 + t415 + t416;
  t419 = t129*t412;
  t420 = -0.340999127418*t43*t408;
  t421 = t40*t18*t88;
  t422 = t419 + t420 + t421;
  t418 = 0.340999127418*t114*t417;
  t423 = t127*t422;
  t428 = t427*t150;
  t429 = t418 + t423 + t428;
  t431 = t160*t427;
  t432 = t417*t168;
  t433 = t422*t171;
  t434 = t431 + t432 + t433;
  t436 = t182*t417;
  t437 = 0.340999127418*t114*t422;
  t438 = t427*t186;
  t439 = t436 + t437 + t438;
  t430 = 0.340999127418*t111*t429;
  t435 = t158*t434;
  t441 = t180*t439;
  t442 = t430 + t435 + t441;
  t444 = t197*t429;
  t446 = t204*t434;
  t447 = 0.340999127418*t111*t439;
  t448 = t444 + t446 + t447;
  t451 = t217*t429;
  t452 = t220*t434;
  t454 = t223*t439;
  t455 = t451 + t452 + t454;
  t258 = t256 + t257;
  t443 = t106*t442;
  t449 = t195*t448;
  t456 = t215*t455;
  t457 = t443 + t449 + t456;
  t459 = t235*t442;
  t460 = 0.340999127418*t211*t448;
  t461 = t239*t455;
  t462 = t459 + t460 + t461;
  t464 = 0.340999127418*t211*t442;
  t465 = t247*t448;
  t466 = t250*t455;
  t467 = t464 + t465 + t466;
  t268 = -0.353861996165*t96;
  t269 = 1. + t268;
  t283 = -0.952469601425*t96;
  t284 = 1. + t283;
  t458 = t103*t457;
  t463 = 0.340999127418*t233*t462;
  t468 = t244*t467;
  t469 = t458 + t463 + t468;
  t288 = t286 + t287;
  t471 = t260*t457;
  t472 = t263*t462;
  t473 = 0.340999127418*t233*t467;
  t474 = t471 + t472 + t473;
  t291 = t97 + t290;
  t476 = t271*t457;
  t477 = t274*t462;
  t478 = t277*t467;
  t479 = t476 + t477 + t478;
  t296 = t286 + t295;
  t298 = -0.693671301908*t96;
  t299 = 1. + t298;
  t302 = t256 + t301;
  t306 = 2.838136523330542e-8*var1[12];
  t307 = 0.2845150083511607*t96;
  t309 = t308 + t290;
  t310 = 0.44503472296900004*t309;
  t312 = t311 + t287;
  t313 = -0.5286755231320001*t312;
  t314 = t306 + t307 + t310 + t313;
  t316 = -7.20503013377005e-8*var1[12];
  t317 = -0.3667270384178674*t96;
  t318 = t311 + t295;
  t319 = 0.29871295412*t318;
  t321 = t320 + t301;
  t322 = 0.44503472296900004*t321;
  t323 = t316 + t317 + t319 + t322;
  t325 = -1.0464152525368286e-7*var1[12];
  t326 = 0.15748087543254813*t96;
  t327 = t320 + t257;
  t328 = -0.5286755231320001*t327;
  t331 = t308 + t99;
  t332 = 0.29871295412*t331;
  t333 = t325 + t326 + t328 + t332;
  t335 = 0.06199697675299678*t233;
  t336 = 0.324290713329*t277;
  t337 = -0.823260828522*t274;
  t339 = 0. + t335 + t336 + t337;
  t341 = 2.95447451120871e-8*var1[11];
  t342 = -0.8232613535360118*t233;
  t343 = 0.061996937216*t260;
  t344 = t341 + t342 + t343;
  t346 = 7.500378623168247e-8*var1[11];
  t347 = 0.32429092013729516*t233;
  t348 = 0.061996937216*t103;
  t349 = t346 + t347 + t348;
  t351 = 2.281945176511838e-8*var1[10];
  t352 = -0.5905366811997648*t211;
  t353 = -0.262809976934*t239;
  t354 = t351 + t352 + t353;
  t356 = 5.7930615939377813e-8*var1[10];
  t357 = 0.23261833304643187*t211;
  t358 = -0.262809976934*t250;
  t359 = t356 + t357 + t358;
  t361 = -0.26281014453449253*t211;
  t362 = 0.23261818470000004*t195;
  t363 = -0.5905363046000001*t106;
  t364 = 0. + t361 + t362 + t363;
  t366 = 3.2909349868922137e-7*var1[8];
  t367 = 0.055653945343889656*t114;
  t368 = -0.045000372235*t150;
  t369 = t366 + t367 + t368;
  t371 = -1.5981976069815686e-7*var1[9];
  t372 = 0.08675267452931407*t111;
  t373 = 0.039853013046*t204;
  t374 = t371 + t372 + t373;
  t376 = -0.04500040093286238*t114;
  t377 = -0.141285834136*t168;
  t378 = 0.055653909852*t171;
  t379 = 0. + t376 + t377 + t378;
  t381 = 0.039853038461262744*t111;
  t382 = 0.086752619205*t217;
  t383 = -0.22023459268999998*t223;
  t384 = 0. + t381 + t382 + t383;
  t386 = 1.296332362046933e-7*var1[8];
  t387 = -0.14128592423750855*t114;
  t388 = -0.045000372235*t186;
  t389 = t386 + t387 + t388;
  t391 = -6.295460977284962e-8*var1[9];
  t392 = -0.22023473313910558*t111;
  t393 = 0.039853013046*t158;
  t394 = t391 + t392 + t393;
  t516 = t40*t6*t28;
  t517 = -1.*t40*t17*t35;
  t518 = t516 + t517;
  t512 = t40*t17*t6;
  t513 = t40*t28*t35;
  t514 = t512 + t513;
  t530 = -1.*t138*t23;
  t531 = t518*t48;
  t532 = t514*t52;
  t533 = t530 + t531 + t532;
  t520 = -0.340999127418*t43*t518;
  t521 = t117*t514;
  t522 = -1.*t23*t66;
  t523 = t520 + t521 + t522;
  t525 = t129*t518;
  t526 = -0.340999127418*t43*t514;
  t527 = -1.*t23*t88;
  t528 = t525 + t526 + t527;
  t524 = 0.340999127418*t114*t523;
  t529 = t127*t528;
  t534 = t533*t150;
  t535 = t524 + t529 + t534;
  t537 = t160*t533;
  t538 = t523*t168;
  t539 = t528*t171;
  t540 = t537 + t538 + t539;
  t542 = t182*t523;
  t543 = 0.340999127418*t114*t528;
  t544 = t533*t186;
  t545 = t542 + t543 + t544;
  t536 = 0.340999127418*t111*t535;
  t541 = t158*t540;
  t546 = t180*t545;
  t547 = t536 + t541 + t546;
  t549 = t197*t535;
  t550 = t204*t540;
  t551 = 0.340999127418*t111*t545;
  t552 = t549 + t550 + t551;
  t554 = t217*t535;
  t555 = t220*t540;
  t556 = t223*t545;
  t557 = t554 + t555 + t556;
  t548 = t106*t547;
  t553 = t195*t552;
  t558 = t215*t557;
  t559 = t548 + t553 + t558;
  t561 = t235*t547;
  t562 = 0.340999127418*t211*t552;
  t563 = t239*t557;
  t564 = t561 + t562 + t563;
  t566 = 0.340999127418*t211*t547;
  t567 = t247*t552;
  t568 = t250*t557;
  t569 = t566 + t567 + t568;
  t560 = t103*t559;
  t565 = 0.340999127418*t233*t564;
  t570 = t244*t569;
  t571 = t560 + t565 + t570;
  t573 = t260*t559;
  t574 = t263*t564;
  t575 = 0.340999127418*t233*t569;
  t576 = t573 + t574 + t575;
  t578 = t271*t559;
  t579 = t274*t564;
  t580 = t277*t569;
  t581 = t578 + t579 + t580;
  p_output1[0]=0. + 0.061997*(t100*t254 + t258*t266 + t269*t279) + 0.402602*(t254*t284 + t266*t288 + t279*t291) + t16*t30 - 0.792413*(t254*t296 + t266*t299 + t279*t302) + t254*t314 + t266*t323 + t279*t333 + t227*t339 + t241*t344 + t252*t349 + t190*t354 + t207*t359 + t225*t364 + t133*t369 + t154*t374 + t142*t379 + t34*t38 + t175*t384 + t124*t389 + t188*t394 + t22*t40*t55 + t62*t68 + t80*t90 + var1[0];
  p_output1[1]=0. + t16*t399 + t38*t403 + t389*t417 + t369*t422 + t379*t427 + t374*t429 + t384*t434 + t394*t439 + t354*t442 + t359*t448 + t364*t455 + t339*t457 + t344*t462 + t349*t467 + t314*t469 + t323*t474 + t333*t479 + 0.061997*(t100*t469 + t258*t474 + t269*t479) + 0.402602*(t284*t469 + t288*t474 + t291*t479) - 0.792413*(t296*t469 + t299*t474 + t302*t479) + t18*t40*t55 + t408*t68 + t412*t90 + var1[1];
  p_output1[2]=0. + t16*t28*t40 + t17*t38*t40 + t389*t523 + t369*t528 + t379*t533 + t374*t535 + t384*t540 + t394*t545 + t354*t547 - 1.*t23*t55 + t359*t552 + t364*t557 + t339*t559 + t344*t564 + t349*t569 + t314*t571 + t323*t576 + t333*t581 + 0.061997*(t100*t571 + t258*t576 + t269*t581) + 0.402602*(t284*t571 + t288*t576 + t291*t581) - 0.792413*(t296*t571 + t299*t576 + t302*t581) + t514*t68 + t518*t90 + var1[2];
}



void p_LeftToeBottom_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
