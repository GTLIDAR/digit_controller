/*
 * Automatically Generated from Mathematica.
 * Sun 16 Oct 2022 21:36:37 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "T_LeftToeBottomBack_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t241;
  double t219;
  double t246;
  double t220;
  double t248;
  double t193;
  double t207;
  double t209;
  double t218;
  double t262;
  double t275;
  double t276;
  double t238;
  double t252;
  double t254;
  double t280;
  double t185;
  double t187;
  double t189;
  double t261;
  double t286;
  double t287;
  double t304;
  double t305;
  double t306;
  double t325;
  double t344;
  double t455;
  double t461;
  double t468;
  double t481;
  double t483;
  double t496;
  double t503;
  double t507;
  double t508;
  double t509;
  double t292;
  double t295;
  double t301;
  double t313;
  double t347;
  double t374;
  double t376;
  double t377;
  double t511;
  double t388;
  double t396;
  double t398;
  double t441;
  double t444;
  double t445;
  double t448;
  double t449;
  double t154;
  double t164;
  double t177;
  double t142;
  double t379;
  double t384;
  double t387;
  double t451;
  double t513;
  double t554;
  double t558;
  double t569;
  double t590;
  double t595;
  double t596;
  double t599;
  double t601;
  double t638;
  double t649;
  double t655;
  double t656;
  double t660;
  double t665;
  double t697;
  double t725;
  double t728;
  double t741;
  double t742;
  double t746;
  double t752;
  double t760;
  double t892;
  double t902;
  double t904;
  double t589;
  double t592;
  double t594;
  double t669;
  double t674;
  double t685;
  double t763;
  double t774;
  double t795;
  double t807;
  double t817;
  double t824;
  double t853;
  double t862;
  double t866;
  double t875;
  double t914;
  double t916;
  double t922;
  double t926;
  double t927;
  double t935;
  double t947;
  double t952;
  double t954;
  double t962;
  double t978;
  double t985;
  double t995;
  double t60;
  double t68;
  double t74;
  double t83;
  double t144;
  double t152;
  double t776;
  double t779;
  double t791;
  double t883;
  double t907;
  double t913;
  double t963;
  double t973;
  double t1004;
  double t1009;
  double t1019;
  double t1033;
  double t1036;
  double t1038;
  double t1044;
  double t1047;
  double t1062;
  double t1070;
  double t1072;
  double t1077;
  double t1078;
  double t1085;
  double t1099;
  double t1101;
  double t1140;
  double t1137;
  double t115;
  double t141;
  double t974;
  double t1048;
  double t1057;
  double t1058;
  double t1112;
  double t1117;
  double t1152;
  double t1153;
  double t1156;
  double t1181;
  double t1185;
  double t1191;
  double t1196;
  double t1200;
  double t1209;
  double t1218;
  double t1223;
  double t1224;
  double t1228;
  double t1234;
  double t1246;
  double t1247;
  double t1252;
  double t1254;
  double t81;
  double t82;
  double t1358;
  double t1364;
  double t1367;
  double t1343;
  double t1345;
  double t1347;
  double t1348;
  double t1371;
  double t1372;
  double t1388;
  double t1389;
  double t1390;
  double t1436;
  double t1441;
  double t1450;
  double t1461;
  double t1376;
  double t1394;
  double t1395;
  double t1398;
  double t1408;
  double t1411;
  double t1412;
  double t1415;
  double t1401;
  double t1424;
  double t1463;
  double t1468;
  double t1496;
  double t1500;
  double t1504;
  double t1505;
  double t1511;
  double t1530;
  double t1541;
  double t1551;
  double t1484;
  double t1508;
  double t1563;
  double t1568;
  double t1571;
  double t1572;
  double t1575;
  double t1576;
  double t1586;
  double t1589;
  double t1593;
  double t1594;
  double t1142;
  double t1146;
  double t1570;
  double t1583;
  double t1600;
  double t1602;
  double t1608;
  double t1609;
  double t1614;
  double t1616;
  double t1622;
  double t1623;
  double t1624;
  double t1633;
  double t1202;
  double t1204;
  double t1206;
  double t1276;
  double t1278;
  double t1605;
  double t1621;
  double t1646;
  double t1662;
  double t1284;
  double t1299;
  double t1674;
  double t1695;
  double t1706;
  double t1708;
  double t1311;
  double t1324;
  double t1326;
  double t1715;
  double t1717;
  double t1719;
  double t1728;
  double t1763;
  double t1765;
  double t1766;
  double t1770;
  double t1771;
  double t1773;
  double t1818;
  double t1821;
  double t1822;
  double t1823;
  double t1767;
  double t1779;
  double t1782;
  double t1783;
  double t1803;
  double t1807;
  double t1808;
  double t1809;
  double t1791;
  double t1810;
  double t1828;
  double t1836;
  double t1840;
  double t1845;
  double t1846;
  double t1849;
  double t1854;
  double t1856;
  double t1863;
  double t1866;
  double t1837;
  double t1853;
  double t1872;
  double t1880;
  double t1897;
  double t1898;
  double t1906;
  double t1907;
  double t1911;
  double t1913;
  double t1916;
  double t1917;
  double t1885;
  double t1908;
  double t1920;
  double t1930;
  double t1932;
  double t1944;
  double t1945;
  double t1950;
  double t1962;
  double t1965;
  double t1975;
  double t1977;
  double t1931;
  double t1954;
  double t1980;
  double t1985;
  double t1988;
  double t1989;
  double t1990;
  double t1991;
  double t2012;
  double t2015;
  double t2017;
  double t2019;
  double t1123;
  double t1201;
  double t1257;
  double t1267;
  double t1283;
  double t1310;
  double t1329;
  double t1333;
  double t2053;
  double t2058;
  double t2066;
  double t2067;
  double t2072;
  double t2073;
  double t1671;
  double t1709;
  double t1735;
  double t1736;
  double t1753;
  double t1754;
  double t1755;
  double t1758;
  double t1987;
  double t2005;
  double t2020;
  double t2021;
  double t2025;
  double t2028;
  double t2029;
  double t2036;
  double t2060;
  double t2070;
  double t2074;
  double t2075;
  double t2086;
  double t2096;
  double t2101;
  double t2110;
  double t2120;
  double t2123;
  double t2124;
  double t2126;
  double t2294;
  double t2336;
  double t2289;
  double t2177;
  double t2178;
  double t2179;
  double t2181;
  double t2183;
  double t2189;
  double t2194;
  double t2202;
  double t2205;
  double t2209;
  double t2216;
  double t2217;
  double t2230;
  double t2232;
  double t2235;
  double t2236;
  double t2238;
  double t2239;
  double t2285;
  double t2286;
  double t2292;
  double t2293;
  double t2300;
  double t2302;
  double t2308;
  double t2323;
  double t2324;
  double t2325;
  double t2333;
  double t2338;
  double t2339;
  double t2343;
  double t2349;
  double t2357;
  double t2359;
  double t2362;
  double t2364;
  double t2370;
  double t2372;
  double t2380;
  double t2385;
  double t2386;
  double t2391;
  double t2404;
  double t2405;
  double t2406;
  double t2408;
  double t2413;
  double t2414;
  double t2416;
  double t2420;
  double t2424;
  double t2425;
  double t2426;
  double t2427;
  double t2430;
  double t2432;
  double t2433;
  double t2438;
  double t2441;
  double t2442;
  double t2444;
  double t2445;
  double t2455;
  double t2464;
  double t2465;
  double t2468;
  double t2471;
  double t2473;
  double t2482;
  double t2483;
  double t2491;
  double t2492;
  double t2493;
  double t2494;
  double t2499;
  double t2500;
  double t2509;
  double t2515;
  double t2520;
  double t2522;
  double t2523;
  double t2526;
  double t2531;
  double t2532;
  double t2535;
  double t2536;
  t241 = Cos(var1[3]);
  t219 = Cos(var1[5]);
  t246 = Sin(var1[4]);
  t220 = Sin(var1[3]);
  t248 = Sin(var1[5]);
  t193 = Cos(var1[7]);
  t207 = -1.*t193;
  t209 = 1. + t207;
  t218 = Cos(var1[6]);
  t262 = t241*t219*t246;
  t275 = t220*t248;
  t276 = t262 + t275;
  t238 = -1.*t219*t220;
  t252 = t241*t246*t248;
  t254 = t238 + t252;
  t280 = Sin(var1[6]);
  t185 = Cos(var1[8]);
  t187 = -1.*t185;
  t189 = 1. + t187;
  t261 = t218*t254;
  t286 = -1.*t276*t280;
  t287 = t261 + t286;
  t304 = t218*t276;
  t305 = t254*t280;
  t306 = t304 + t305;
  t325 = Cos(var1[4]);
  t344 = Sin(var1[7]);
  t455 = -1.000000637725*t209;
  t461 = 1. + t455;
  t468 = t241*t325*t461;
  t481 = -0.930418*t344;
  t483 = 0. + t481;
  t496 = t287*t483;
  t503 = -0.366501*t344;
  t507 = 0. + t503;
  t508 = t306*t507;
  t509 = t468 + t496 + t508;
  t292 = -0.340999127418*t209*t287;
  t295 = -0.134322983001*t209;
  t301 = 1. + t295;
  t313 = t301*t306;
  t347 = 0.366501*t344;
  t374 = 0. + t347;
  t376 = t241*t325*t374;
  t377 = t292 + t313 + t376;
  t511 = Sin(var1[8]);
  t388 = -0.8656776547239999*t209;
  t396 = 1. + t388;
  t398 = t396*t287;
  t441 = -0.340999127418*t209*t306;
  t444 = 0.930418*t344;
  t445 = 0. + t444;
  t448 = t241*t325*t445;
  t449 = t398 + t441 + t448;
  t154 = Cos(var1[9]);
  t164 = -1.*t154;
  t177 = 1. + t164;
  t142 = Sin(var1[10]);
  t379 = 0.340999127418*t189*t377;
  t384 = -0.134322983001*t189;
  t387 = 1. + t384;
  t451 = t387*t449;
  t513 = -0.366501*t511;
  t554 = 0. + t513;
  t558 = t509*t554;
  t569 = t379 + t451 + t558;
  t590 = Sin(var1[9]);
  t595 = -1.000000637725*t189;
  t596 = 1. + t595;
  t599 = t596*t509;
  t601 = -0.930418*t511;
  t638 = 0. + t601;
  t649 = t377*t638;
  t655 = 0.366501*t511;
  t656 = 0. + t655;
  t660 = t449*t656;
  t665 = t599 + t649 + t660;
  t697 = -0.8656776547239999*t189;
  t725 = 1. + t697;
  t728 = t725*t377;
  t741 = 0.340999127418*t189*t449;
  t742 = 0.930418*t511;
  t746 = 0. + t742;
  t752 = t509*t746;
  t760 = t728 + t741 + t752;
  t892 = Cos(var1[10]);
  t902 = -1.*t892;
  t904 = 1. + t902;
  t589 = 0.340999127418*t177*t569;
  t592 = -0.930418*t590;
  t594 = 0. + t592;
  t669 = t594*t665;
  t674 = -0.8656776547239999*t177;
  t685 = 1. + t674;
  t763 = t685*t760;
  t774 = t589 + t669 + t763;
  t795 = -0.134322983001*t177;
  t807 = 1. + t795;
  t817 = t807*t569;
  t824 = 0.366501*t590;
  t853 = 0. + t824;
  t862 = t853*t665;
  t866 = 0.340999127418*t177*t760;
  t875 = t817 + t862 + t866;
  t914 = -0.366501*t590;
  t916 = 0. + t914;
  t922 = t916*t569;
  t926 = -1.000000637725*t177;
  t927 = 1. + t926;
  t935 = t927*t665;
  t947 = 0.930418*t590;
  t952 = 0. + t947;
  t954 = t952*t760;
  t962 = t922 + t935 + t954;
  t978 = Cos(var1[11]);
  t985 = -1.*t978;
  t995 = 1. + t985;
  t60 = Cos(var1[12]);
  t68 = -1.*t60;
  t74 = 1. + t68;
  t83 = Sin(var1[11]);
  t144 = 0.930418*t142;
  t152 = 0. + t144;
  t776 = t152*t774;
  t779 = -0.366501*t142;
  t791 = 0. + t779;
  t883 = t791*t875;
  t907 = -1.000000637725*t904;
  t913 = 1. + t907;
  t963 = t913*t962;
  t973 = t776 + t883 + t963;
  t1004 = -0.8656776547239999*t904;
  t1009 = 1. + t1004;
  t1019 = t1009*t774;
  t1033 = 0.340999127418*t904*t875;
  t1036 = -0.930418*t142;
  t1038 = 0. + t1036;
  t1044 = t1038*t962;
  t1047 = t1019 + t1033 + t1044;
  t1062 = 0.340999127418*t904*t774;
  t1070 = -0.134322983001*t904;
  t1072 = 1. + t1070;
  t1077 = t1072*t875;
  t1078 = 0.366501*t142;
  t1085 = 0. + t1078;
  t1099 = t1085*t962;
  t1101 = t1062 + t1077 + t1099;
  t1140 = Sin(var1[12]);
  t1137 = -0.120666640478*t74;
  t115 = 0.366501*t83;
  t141 = 0. + t115;
  t974 = t141*t973;
  t1048 = 0.340999127418*t995*t1047;
  t1057 = -0.134322983001*t995;
  t1058 = 1. + t1057;
  t1112 = t1058*t1101;
  t1117 = t974 + t1048 + t1112;
  t1152 = -0.930418*t83;
  t1153 = 0. + t1152;
  t1156 = t1153*t973;
  t1181 = -0.8656776547239999*t995;
  t1185 = 1. + t1181;
  t1191 = t1185*t1047;
  t1196 = 0.340999127418*t995*t1101;
  t1200 = t1156 + t1191 + t1196;
  t1209 = -1.000000637725*t995;
  t1218 = 1. + t1209;
  t1223 = t1218*t973;
  t1224 = 0.930418*t83;
  t1228 = 0. + t1224;
  t1234 = t1228*t1047;
  t1246 = -0.366501*t83;
  t1247 = 0. + t1246;
  t1252 = t1247*t1101;
  t1254 = t1223 + t1234 + t1252;
  t81 = -0.952469601425*t74;
  t82 = 1. + t81;
  t1358 = t219*t220*t246;
  t1364 = -1.*t241*t248;
  t1367 = t1358 + t1364;
  t1343 = t241*t219;
  t1345 = t220*t246*t248;
  t1347 = t1343 + t1345;
  t1348 = t218*t1347;
  t1371 = -1.*t1367*t280;
  t1372 = t1348 + t1371;
  t1388 = t218*t1367;
  t1389 = t1347*t280;
  t1390 = t1388 + t1389;
  t1436 = t325*t461*t220;
  t1441 = t1372*t483;
  t1450 = t1390*t507;
  t1461 = t1436 + t1441 + t1450;
  t1376 = -0.340999127418*t209*t1372;
  t1394 = t301*t1390;
  t1395 = t325*t220*t374;
  t1398 = t1376 + t1394 + t1395;
  t1408 = t396*t1372;
  t1411 = -0.340999127418*t209*t1390;
  t1412 = t325*t220*t445;
  t1415 = t1408 + t1411 + t1412;
  t1401 = 0.340999127418*t189*t1398;
  t1424 = t387*t1415;
  t1463 = t1461*t554;
  t1468 = t1401 + t1424 + t1463;
  t1496 = t596*t1461;
  t1500 = t1398*t638;
  t1504 = t1415*t656;
  t1505 = t1496 + t1500 + t1504;
  t1511 = t725*t1398;
  t1530 = 0.340999127418*t189*t1415;
  t1541 = t1461*t746;
  t1551 = t1511 + t1530 + t1541;
  t1484 = 0.340999127418*t177*t1468;
  t1508 = t594*t1505;
  t1563 = t685*t1551;
  t1568 = t1484 + t1508 + t1563;
  t1571 = t807*t1468;
  t1572 = t853*t1505;
  t1575 = 0.340999127418*t177*t1551;
  t1576 = t1571 + t1572 + t1575;
  t1586 = t916*t1468;
  t1589 = t927*t1505;
  t1593 = t952*t1551;
  t1594 = t1586 + t1589 + t1593;
  t1142 = 0.803828*t1140;
  t1146 = t1137 + t1142;
  t1570 = t152*t1568;
  t1583 = t791*t1576;
  t1600 = t913*t1594;
  t1602 = t1570 + t1583 + t1600;
  t1608 = t1009*t1568;
  t1609 = 0.340999127418*t904*t1576;
  t1614 = t1038*t1594;
  t1616 = t1608 + t1609 + t1614;
  t1622 = 0.340999127418*t904*t1568;
  t1623 = t1072*t1576;
  t1624 = t1085*t1594;
  t1633 = t1622 + t1623 + t1624;
  t1202 = -0.175248972904*t74;
  t1204 = -0.553471*t1140;
  t1206 = t1202 + t1204;
  t1276 = -0.803828*t1140;
  t1278 = t1137 + t1276;
  t1605 = t141*t1602;
  t1621 = 0.340999127418*t995*t1616;
  t1646 = t1058*t1633;
  t1662 = t1605 + t1621 + t1646;
  t1284 = -0.693671301908*t74;
  t1299 = 1. + t1284;
  t1674 = t1153*t1602;
  t1695 = t1185*t1616;
  t1706 = 0.340999127418*t995*t1633;
  t1708 = t1674 + t1695 + t1706;
  t1311 = 0.444895486988*t74;
  t1324 = -0.218018*t1140;
  t1326 = t1311 + t1324;
  t1715 = t1218*t1602;
  t1717 = t1228*t1616;
  t1719 = t1247*t1633;
  t1728 = t1715 + t1717 + t1719;
  t1763 = t325*t218*t248;
  t1765 = -1.*t325*t219*t280;
  t1766 = t1763 + t1765;
  t1770 = t325*t219*t218;
  t1771 = t325*t248*t280;
  t1773 = t1770 + t1771;
  t1818 = -1.*t461*t246;
  t1821 = t1766*t483;
  t1822 = t1773*t507;
  t1823 = t1818 + t1821 + t1822;
  t1767 = -0.340999127418*t209*t1766;
  t1779 = t301*t1773;
  t1782 = -1.*t246*t374;
  t1783 = t1767 + t1779 + t1782;
  t1803 = t396*t1766;
  t1807 = -0.340999127418*t209*t1773;
  t1808 = -1.*t246*t445;
  t1809 = t1803 + t1807 + t1808;
  t1791 = 0.340999127418*t189*t1783;
  t1810 = t387*t1809;
  t1828 = t1823*t554;
  t1836 = t1791 + t1810 + t1828;
  t1840 = t596*t1823;
  t1845 = t1783*t638;
  t1846 = t1809*t656;
  t1849 = t1840 + t1845 + t1846;
  t1854 = t725*t1783;
  t1856 = 0.340999127418*t189*t1809;
  t1863 = t1823*t746;
  t1866 = t1854 + t1856 + t1863;
  t1837 = 0.340999127418*t177*t1836;
  t1853 = t594*t1849;
  t1872 = t685*t1866;
  t1880 = t1837 + t1853 + t1872;
  t1897 = t807*t1836;
  t1898 = t853*t1849;
  t1906 = 0.340999127418*t177*t1866;
  t1907 = t1897 + t1898 + t1906;
  t1911 = t916*t1836;
  t1913 = t927*t1849;
  t1916 = t952*t1866;
  t1917 = t1911 + t1913 + t1916;
  t1885 = t152*t1880;
  t1908 = t791*t1907;
  t1920 = t913*t1917;
  t1930 = t1885 + t1908 + t1920;
  t1932 = t1009*t1880;
  t1944 = 0.340999127418*t904*t1907;
  t1945 = t1038*t1917;
  t1950 = t1932 + t1944 + t1945;
  t1962 = 0.340999127418*t904*t1880;
  t1965 = t1072*t1907;
  t1975 = t1085*t1917;
  t1977 = t1962 + t1965 + t1975;
  t1931 = t141*t1930;
  t1954 = 0.340999127418*t995*t1950;
  t1980 = t1058*t1977;
  t1985 = t1931 + t1954 + t1980;
  t1988 = t1153*t1930;
  t1989 = t1185*t1950;
  t1990 = 0.340999127418*t995*t1977;
  t1991 = t1988 + t1989 + t1990;
  t2012 = t1218*t1930;
  t2015 = t1228*t1950;
  t2017 = t1247*t1977;
  t2019 = t2012 + t2015 + t2017;
  t1123 = t82*t1117;
  t1201 = t1146*t1200;
  t1257 = t1206*t1254;
  t1267 = t1123 + t1201 + t1257;
  t1283 = t1278*t1117;
  t1310 = t1299*t1200;
  t1329 = t1326*t1254;
  t1333 = t1283 + t1310 + t1329;
  t2053 = 0.553471*t1140;
  t2058 = t1202 + t2053;
  t2066 = 0.218018*t1140;
  t2067 = t1311 + t2066;
  t2072 = -0.353861996165*t74;
  t2073 = 1. + t2072;
  t1671 = t82*t1662;
  t1709 = t1146*t1708;
  t1735 = t1206*t1728;
  t1736 = t1671 + t1709 + t1735;
  t1753 = t1278*t1662;
  t1754 = t1299*t1708;
  t1755 = t1326*t1728;
  t1758 = t1753 + t1754 + t1755;
  t1987 = t82*t1985;
  t2005 = t1146*t1991;
  t2020 = t1206*t2019;
  t2021 = t1987 + t2005 + t2020;
  t2025 = t1278*t1985;
  t2028 = t1299*t1991;
  t2029 = t1326*t2019;
  t2036 = t2025 + t2028 + t2029;
  t2060 = t2058*t1117;
  t2070 = t2067*t1200;
  t2074 = t2073*t1254;
  t2075 = t2060 + t2070 + t2074;
  t2086 = t2058*t1662;
  t2096 = t2067*t1708;
  t2101 = t2073*t1728;
  t2110 = t2086 + t2096 + t2101;
  t2120 = t2058*t1985;
  t2123 = t2067*t1991;
  t2124 = t2073*t2019;
  t2126 = t2120 + t2123 + t2124;
  t2294 = 0.120666640478*t74;
  t2336 = -0.444895486988*t74;
  t2289 = 0.175248972904*t74;
  t2177 = -1.*t218;
  t2178 = 1. + t2177;
  t2179 = 0.091*t2178;
  t2181 = 0. + t2179;
  t2183 = 0.091*t280;
  t2189 = 0. + t2183;
  t2194 = -0.04500040093286238*t209;
  t2202 = 0.07877663122399998*t483;
  t2205 = 0.031030906668*t507;
  t2209 = 0. + t2194 + t2202 + t2205;
  t2216 = -3.2909349868922137e-7*var1[7];
  t2217 = 0.03103092645718495*t209;
  t2230 = -0.045000372235*t374;
  t2232 = t2216 + t2217 + t2230;
  t2235 = 1.296332362046933e-7*var1[7];
  t2236 = 0.07877668146182712*t209;
  t2238 = -0.045000372235*t445;
  t2239 = t2235 + t2236 + t2238;
  t2285 = 2.838136523330542e-8*var1[12];
  t2286 = 0.2845150083511607*t74;
  t2292 = t2289 + t1204;
  t2293 = 0.44503472296900004*t2292;
  t2300 = t2294 + t1142;
  t2302 = -0.5286755231320001*t2300;
  t2308 = t2285 + t2286 + t2293 + t2302;
  t2323 = -7.20503013377005e-8*var1[12];
  t2324 = -0.3667270384178674*t74;
  t2325 = t2294 + t1276;
  t2333 = 0.29871295412*t2325;
  t2338 = t2336 + t1324;
  t2339 = 0.44503472296900004*t2338;
  t2343 = t2323 + t2324 + t2333 + t2339;
  t2349 = -1.0464152525368286e-7*var1[12];
  t2357 = 0.15748087543254813*t74;
  t2359 = t2336 + t2066;
  t2362 = -0.5286755231320001*t2359;
  t2364 = t2289 + t2053;
  t2370 = 0.29871295412*t2364;
  t2372 = t2349 + t2357 + t2362 + t2370;
  t2380 = 0.06199697675299678*t995;
  t2385 = 0.324290713329*t1247;
  t2386 = -0.823260828522*t1228;
  t2391 = 0. + t2380 + t2385 + t2386;
  t2404 = 2.95447451120871e-8*var1[11];
  t2405 = -0.8232613535360118*t995;
  t2406 = 0.061996937216*t1153;
  t2408 = t2404 + t2405 + t2406;
  t2413 = 7.500378623168247e-8*var1[11];
  t2414 = 0.32429092013729516*t995;
  t2416 = 0.061996937216*t141;
  t2420 = t2413 + t2414 + t2416;
  t2424 = 2.281945176511838e-8*var1[10];
  t2425 = -0.5905366811997648*t904;
  t2426 = -0.262809976934*t1038;
  t2427 = t2424 + t2425 + t2426;
  t2430 = 5.7930615939377813e-8*var1[10];
  t2432 = 0.23261833304643187*t904;
  t2433 = -0.262809976934*t1085;
  t2438 = t2430 + t2432 + t2433;
  t2441 = -0.26281014453449253*t904;
  t2442 = 0.23261818470000004*t791;
  t2444 = -0.5905363046000001*t152;
  t2445 = 0. + t2441 + t2442 + t2444;
  t2455 = 3.2909349868922137e-7*var1[8];
  t2464 = 0.055653945343889656*t189;
  t2465 = -0.045000372235*t554;
  t2468 = t2455 + t2464 + t2465;
  t2471 = -1.5981976069815686e-7*var1[9];
  t2473 = 0.08675267452931407*t177;
  t2482 = 0.039853013046*t853;
  t2483 = t2471 + t2473 + t2482;
  t2491 = -0.04500040093286238*t189;
  t2492 = -0.141285834136*t638;
  t2493 = 0.055653909852*t656;
  t2494 = 0. + t2491 + t2492 + t2493;
  t2499 = 0.039853038461262744*t177;
  t2500 = 0.086752619205*t916;
  t2509 = -0.22023459268999998*t952;
  t2515 = 0. + t2499 + t2500 + t2509;
  t2520 = 1.296332362046933e-7*var1[8];
  t2522 = -0.14128592423750855*t189;
  t2523 = -0.045000372235*t746;
  t2526 = t2520 + t2522 + t2523;
  t2531 = -6.295460977284962e-8*var1[9];
  t2532 = -0.22023473313910558*t177;
  t2535 = 0.039853013046*t594;
  t2536 = t2531 + t2532 + t2535;
  p_output1[0]=0.930418*t1267 + 0.366501*t1333;
  p_output1[1]=0.930418*t1736 + 0.366501*t1758;
  p_output1[2]=0.930418*t2021 + 0.366501*t2036;
  p_output1[3]=0.;
  p_output1[4]=-0.294604*t1267 + 0.747896*t1333 - 0.594863*t2075;
  p_output1[5]=-0.294604*t1736 + 0.747896*t1758 - 0.594863*t2110;
  p_output1[6]=-0.294604*t2021 + 0.747896*t2036 - 0.594863*t2126;
  p_output1[7]=0.;
  p_output1[8]=-0.218018*t1267 + 0.553471*t1333 + 0.803828*t2075;
  p_output1[9]=-0.218018*t1736 + 0.553471*t1758 + 0.803828*t2110;
  p_output1[10]=-0.218018*t2021 + 0.553471*t2036 + 0.803828*t2126;
  p_output1[11]=0.;
  p_output1[12]=0. + 0.323516*t1267 - 0.823565*t1333 + 0.061997*t2075 + t1117*t2308 + t1200*t2343 + t1254*t2372 + t1047*t2408 + t1101*t2420 + t2181*t254 + t2189*t276 + t2239*t287 + t2232*t306 + t2209*t241*t325 + t2526*t377 + t2468*t449 + t2494*t509 + t2483*t569 + t2515*t665 + t2536*t760 + t2427*t774 + t2438*t875 + t2445*t962 + t2391*t973 + var1[0];
  p_output1[13]=0. + 0.323516*t1736 - 0.823565*t1758 + 0.061997*t2110 + t1347*t2181 + t1367*t2189 + t1390*t2232 + t1372*t2239 + t1662*t2308 + t1708*t2343 + t1728*t2372 + t1602*t2391 + t1616*t2408 + t1633*t2420 + t1568*t2427 + t1576*t2438 + t1594*t2445 + t1415*t2468 + t1468*t2483 + t1461*t2494 + t1505*t2515 + t1398*t2526 + t1551*t2536 + t220*t2209*t325 + var1[1];
  p_output1[14]=0. + 0.323516*t2021 - 0.823565*t2036 + 0.061997*t2126 + t1773*t2232 + t1766*t2239 + t1985*t2308 + t1991*t2343 + t2019*t2372 + t1930*t2391 + t1950*t2408 + t1977*t2420 + t1880*t2427 + t1907*t2438 + t1917*t2445 - 1.*t2209*t246 + t1809*t2468 + t1836*t2483 + t1823*t2494 + t1849*t2515 + t1783*t2526 + t1866*t2536 + t2189*t219*t325 + t2181*t248*t325 + var1[2];
  p_output1[15]=1.;
}



void T_LeftToeBottomBack_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
