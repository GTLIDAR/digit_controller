/*
 * Automatically Generated from Mathematica.
 * Sun 16 Oct 2022 21:36:43 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "R_LeftToeBottomBack_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1621;
  double t1608;
  double t1633;
  double t1609;
  double t1662;
  double t1446;
  double t1507;
  double t1568;
  double t1572;
  double t1749;
  double t1766;
  double t1767;
  double t1612;
  double t1674;
  double t1679;
  double t1791;
  double t1436;
  double t1440;
  double t1441;
  double t1692;
  double t1803;
  double t1821;
  double t1856;
  double t1858;
  double t1863;
  double t1897;
  double t1908;
  double t2028;
  double t2050;
  double t2060;
  double t2066;
  double t2074;
  double t2079;
  double t2082;
  double t2085;
  double t2096;
  double t2110;
  double t1845;
  double t1846;
  double t1854;
  double t1871;
  double t1910;
  double t1916;
  double t1917;
  double t1919;
  double t2111;
  double t1954;
  double t1982;
  double t1983;
  double t1985;
  double t1987;
  double t1990;
  double t1991;
  double t2012;
  double t816;
  double t937;
  double t1286;
  double t699;
  double t1922;
  double t1926;
  double t1931;
  double t2015;
  double t2112;
  double t2133;
  double t2135;
  double t2137;
  double t2141;
  double t2168;
  double t2173;
  double t2175;
  double t2184;
  double t2189;
  double t2191;
  double t2194;
  double t2202;
  double t2205;
  double t2211;
  double t2254;
  double t2255;
  double t2263;
  double t2266;
  double t2274;
  double t2292;
  double t2309;
  double t2310;
  double t2372;
  double t2385;
  double t2386;
  double t2139;
  double t2145;
  double t2155;
  double t2216;
  double t2238;
  double t2239;
  double t2311;
  double t2323;
  double t2336;
  double t2338;
  double t2339;
  double t2343;
  double t2345;
  double t2349;
  double t2357;
  double t2359;
  double t2404;
  double t2409;
  double t2411;
  double t2413;
  double t2414;
  double t2416;
  double t2424;
  double t2425;
  double t2426;
  double t2427;
  double t2433;
  double t2438;
  double t2441;
  double t156;
  double t204;
  double t389;
  double t643;
  double t706;
  double t716;
  double t2324;
  double t2325;
  double t2333;
  double t2370;
  double t2391;
  double t2394;
  double t2429;
  double t2430;
  double t2445;
  double t2446;
  double t2455;
  double t2464;
  double t2465;
  double t2468;
  double t2469;
  double t2471;
  double t2483;
  double t2484;
  double t2494;
  double t2498;
  double t2499;
  double t2500;
  double t2501;
  double t2502;
  double t2522;
  double t2520;
  double t654;
  double t696;
  double t2432;
  double t2473;
  double t2480;
  double t2482;
  double t2509;
  double t2515;
  double t2530;
  double t2531;
  double t2536;
  double t2538;
  double t2541;
  double t2542;
  double t2545;
  double t2551;
  double t2558;
  double t2559;
  double t2560;
  double t2561;
  double t2562;
  double t2564;
  double t2565;
  double t2570;
  double t2571;
  double t2577;
  double t494;
  double t642;
  double t2634;
  double t2635;
  double t2636;
  double t2625;
  double t2626;
  double t2630;
  double t2632;
  double t2637;
  double t2642;
  double t2648;
  double t2650;
  double t2655;
  double t2704;
  double t2706;
  double t2709;
  double t2722;
  double t2646;
  double t2657;
  double t2659;
  double t2661;
  double t2676;
  double t2678;
  double t2680;
  double t2691;
  double t2665;
  double t2696;
  double t2725;
  double t2732;
  double t2740;
  double t2748;
  double t2754;
  double t2756;
  double t2759;
  double t2762;
  double t2763;
  double t2774;
  double t2735;
  double t2758;
  double t2780;
  double t2785;
  double t2787;
  double t2788;
  double t2791;
  double t2792;
  double t2803;
  double t2811;
  double t2812;
  double t2818;
  double t2523;
  double t2526;
  double t2786;
  double t2801;
  double t2820;
  double t2821;
  double t2827;
  double t2837;
  double t2839;
  double t2841;
  double t2847;
  double t2853;
  double t2855;
  double t2859;
  double t2554;
  double t2555;
  double t2557;
  double t2586;
  double t2587;
  double t2826;
  double t2846;
  double t2860;
  double t2862;
  double t2589;
  double t2592;
  double t2865;
  double t2869;
  double t2871;
  double t2874;
  double t2599;
  double t2604;
  double t2607;
  double t2879;
  double t2880;
  double t2885;
  double t2889;
  double t2917;
  double t2922;
  double t2924;
  double t2926;
  double t2929;
  double t2931;
  double t2968;
  double t2969;
  double t2970;
  double t2977;
  double t2925;
  double t2932;
  double t2935;
  double t2936;
  double t2949;
  double t2950;
  double t2953;
  double t2958;
  double t2940;
  double t2962;
  double t2979;
  double t2994;
  double t2999;
  double t3000;
  double t3001;
  double t3002;
  double t3009;
  double t3010;
  double t3011;
  double t3017;
  double t2997;
  double t3004;
  double t3018;
  double t3022;
  double t3028;
  double t3030;
  double t3031;
  double t3032;
  double t3034;
  double t3041;
  double t3044;
  double t3053;
  double t3026;
  double t3033;
  double t3055;
  double t3056;
  double t3081;
  double t3087;
  double t3088;
  double t3090;
  double t3093;
  double t3094;
  double t3095;
  double t3101;
  double t3073;
  double t3091;
  double t3102;
  double t3103;
  double t3105;
  double t3106;
  double t3112;
  double t3113;
  double t3116;
  double t3118;
  double t3120;
  double t3123;
  double t2519;
  double t2553;
  double t2581;
  double t2582;
  double t2588;
  double t2593;
  double t2610;
  double t2618;
  double t3157;
  double t3165;
  double t3170;
  double t3172;
  double t3186;
  double t3187;
  double t2863;
  double t2877;
  double t2891;
  double t2893;
  double t2902;
  double t2907;
  double t2908;
  double t2911;
  double t3104;
  double t3115;
  double t3131;
  double t3137;
  double t3143;
  double t3144;
  double t3145;
  double t3152;
  double t3167;
  double t3174;
  double t3192;
  double t3194;
  double t3212;
  double t3217;
  double t3219;
  double t3220;
  double t3234;
  double t3241;
  double t3246;
  double t3249;
  t1621 = Cos(var1[3]);
  t1608 = Cos(var1[5]);
  t1633 = Sin(var1[4]);
  t1609 = Sin(var1[3]);
  t1662 = Sin(var1[5]);
  t1446 = Cos(var1[7]);
  t1507 = -1.*t1446;
  t1568 = 1. + t1507;
  t1572 = Cos(var1[6]);
  t1749 = t1621*t1608*t1633;
  t1766 = t1609*t1662;
  t1767 = t1749 + t1766;
  t1612 = -1.*t1608*t1609;
  t1674 = t1621*t1633*t1662;
  t1679 = t1612 + t1674;
  t1791 = Sin(var1[6]);
  t1436 = Cos(var1[8]);
  t1440 = -1.*t1436;
  t1441 = 1. + t1440;
  t1692 = t1572*t1679;
  t1803 = -1.*t1767*t1791;
  t1821 = t1692 + t1803;
  t1856 = t1572*t1767;
  t1858 = t1679*t1791;
  t1863 = t1856 + t1858;
  t1897 = Cos(var1[4]);
  t1908 = Sin(var1[7]);
  t2028 = -1.000000637725*t1568;
  t2050 = 1. + t2028;
  t2060 = t1621*t1897*t2050;
  t2066 = -0.930418*t1908;
  t2074 = 0. + t2066;
  t2079 = t1821*t2074;
  t2082 = -0.366501*t1908;
  t2085 = 0. + t2082;
  t2096 = t1863*t2085;
  t2110 = t2060 + t2079 + t2096;
  t1845 = -0.340999127418*t1568*t1821;
  t1846 = -0.134322983001*t1568;
  t1854 = 1. + t1846;
  t1871 = t1854*t1863;
  t1910 = 0.366501*t1908;
  t1916 = 0. + t1910;
  t1917 = t1621*t1897*t1916;
  t1919 = t1845 + t1871 + t1917;
  t2111 = Sin(var1[8]);
  t1954 = -0.8656776547239999*t1568;
  t1982 = 1. + t1954;
  t1983 = t1982*t1821;
  t1985 = -0.340999127418*t1568*t1863;
  t1987 = 0.930418*t1908;
  t1990 = 0. + t1987;
  t1991 = t1621*t1897*t1990;
  t2012 = t1983 + t1985 + t1991;
  t816 = Cos(var1[9]);
  t937 = -1.*t816;
  t1286 = 1. + t937;
  t699 = Sin(var1[10]);
  t1922 = 0.340999127418*t1441*t1919;
  t1926 = -0.134322983001*t1441;
  t1931 = 1. + t1926;
  t2015 = t1931*t2012;
  t2112 = -0.366501*t2111;
  t2133 = 0. + t2112;
  t2135 = t2110*t2133;
  t2137 = t1922 + t2015 + t2135;
  t2141 = Sin(var1[9]);
  t2168 = -1.000000637725*t1441;
  t2173 = 1. + t2168;
  t2175 = t2173*t2110;
  t2184 = -0.930418*t2111;
  t2189 = 0. + t2184;
  t2191 = t1919*t2189;
  t2194 = 0.366501*t2111;
  t2202 = 0. + t2194;
  t2205 = t2012*t2202;
  t2211 = t2175 + t2191 + t2205;
  t2254 = -0.8656776547239999*t1441;
  t2255 = 1. + t2254;
  t2263 = t2255*t1919;
  t2266 = 0.340999127418*t1441*t2012;
  t2274 = 0.930418*t2111;
  t2292 = 0. + t2274;
  t2309 = t2110*t2292;
  t2310 = t2263 + t2266 + t2309;
  t2372 = Cos(var1[10]);
  t2385 = -1.*t2372;
  t2386 = 1. + t2385;
  t2139 = 0.340999127418*t1286*t2137;
  t2145 = -0.930418*t2141;
  t2155 = 0. + t2145;
  t2216 = t2155*t2211;
  t2238 = -0.8656776547239999*t1286;
  t2239 = 1. + t2238;
  t2311 = t2239*t2310;
  t2323 = t2139 + t2216 + t2311;
  t2336 = -0.134322983001*t1286;
  t2338 = 1. + t2336;
  t2339 = t2338*t2137;
  t2343 = 0.366501*t2141;
  t2345 = 0. + t2343;
  t2349 = t2345*t2211;
  t2357 = 0.340999127418*t1286*t2310;
  t2359 = t2339 + t2349 + t2357;
  t2404 = -0.366501*t2141;
  t2409 = 0. + t2404;
  t2411 = t2409*t2137;
  t2413 = -1.000000637725*t1286;
  t2414 = 1. + t2413;
  t2416 = t2414*t2211;
  t2424 = 0.930418*t2141;
  t2425 = 0. + t2424;
  t2426 = t2425*t2310;
  t2427 = t2411 + t2416 + t2426;
  t2433 = Cos(var1[11]);
  t2438 = -1.*t2433;
  t2441 = 1. + t2438;
  t156 = Cos(var1[12]);
  t204 = -1.*t156;
  t389 = 1. + t204;
  t643 = Sin(var1[11]);
  t706 = 0.930418*t699;
  t716 = 0. + t706;
  t2324 = t716*t2323;
  t2325 = -0.366501*t699;
  t2333 = 0. + t2325;
  t2370 = t2333*t2359;
  t2391 = -1.000000637725*t2386;
  t2394 = 1. + t2391;
  t2429 = t2394*t2427;
  t2430 = t2324 + t2370 + t2429;
  t2445 = -0.8656776547239999*t2386;
  t2446 = 1. + t2445;
  t2455 = t2446*t2323;
  t2464 = 0.340999127418*t2386*t2359;
  t2465 = -0.930418*t699;
  t2468 = 0. + t2465;
  t2469 = t2468*t2427;
  t2471 = t2455 + t2464 + t2469;
  t2483 = 0.340999127418*t2386*t2323;
  t2484 = -0.134322983001*t2386;
  t2494 = 1. + t2484;
  t2498 = t2494*t2359;
  t2499 = 0.366501*t699;
  t2500 = 0. + t2499;
  t2501 = t2500*t2427;
  t2502 = t2483 + t2498 + t2501;
  t2522 = Sin(var1[12]);
  t2520 = -0.120666640478*t389;
  t654 = 0.366501*t643;
  t696 = 0. + t654;
  t2432 = t696*t2430;
  t2473 = 0.340999127418*t2441*t2471;
  t2480 = -0.134322983001*t2441;
  t2482 = 1. + t2480;
  t2509 = t2482*t2502;
  t2515 = t2432 + t2473 + t2509;
  t2530 = -0.930418*t643;
  t2531 = 0. + t2530;
  t2536 = t2531*t2430;
  t2538 = -0.8656776547239999*t2441;
  t2541 = 1. + t2538;
  t2542 = t2541*t2471;
  t2545 = 0.340999127418*t2441*t2502;
  t2551 = t2536 + t2542 + t2545;
  t2558 = -1.000000637725*t2441;
  t2559 = 1. + t2558;
  t2560 = t2559*t2430;
  t2561 = 0.930418*t643;
  t2562 = 0. + t2561;
  t2564 = t2562*t2471;
  t2565 = -0.366501*t643;
  t2570 = 0. + t2565;
  t2571 = t2570*t2502;
  t2577 = t2560 + t2564 + t2571;
  t494 = -0.952469601425*t389;
  t642 = 1. + t494;
  t2634 = t1608*t1609*t1633;
  t2635 = -1.*t1621*t1662;
  t2636 = t2634 + t2635;
  t2625 = t1621*t1608;
  t2626 = t1609*t1633*t1662;
  t2630 = t2625 + t2626;
  t2632 = t1572*t2630;
  t2637 = -1.*t2636*t1791;
  t2642 = t2632 + t2637;
  t2648 = t1572*t2636;
  t2650 = t2630*t1791;
  t2655 = t2648 + t2650;
  t2704 = t1897*t2050*t1609;
  t2706 = t2642*t2074;
  t2709 = t2655*t2085;
  t2722 = t2704 + t2706 + t2709;
  t2646 = -0.340999127418*t1568*t2642;
  t2657 = t1854*t2655;
  t2659 = t1897*t1609*t1916;
  t2661 = t2646 + t2657 + t2659;
  t2676 = t1982*t2642;
  t2678 = -0.340999127418*t1568*t2655;
  t2680 = t1897*t1609*t1990;
  t2691 = t2676 + t2678 + t2680;
  t2665 = 0.340999127418*t1441*t2661;
  t2696 = t1931*t2691;
  t2725 = t2722*t2133;
  t2732 = t2665 + t2696 + t2725;
  t2740 = t2173*t2722;
  t2748 = t2661*t2189;
  t2754 = t2691*t2202;
  t2756 = t2740 + t2748 + t2754;
  t2759 = t2255*t2661;
  t2762 = 0.340999127418*t1441*t2691;
  t2763 = t2722*t2292;
  t2774 = t2759 + t2762 + t2763;
  t2735 = 0.340999127418*t1286*t2732;
  t2758 = t2155*t2756;
  t2780 = t2239*t2774;
  t2785 = t2735 + t2758 + t2780;
  t2787 = t2338*t2732;
  t2788 = t2345*t2756;
  t2791 = 0.340999127418*t1286*t2774;
  t2792 = t2787 + t2788 + t2791;
  t2803 = t2409*t2732;
  t2811 = t2414*t2756;
  t2812 = t2425*t2774;
  t2818 = t2803 + t2811 + t2812;
  t2523 = 0.803828*t2522;
  t2526 = t2520 + t2523;
  t2786 = t716*t2785;
  t2801 = t2333*t2792;
  t2820 = t2394*t2818;
  t2821 = t2786 + t2801 + t2820;
  t2827 = t2446*t2785;
  t2837 = 0.340999127418*t2386*t2792;
  t2839 = t2468*t2818;
  t2841 = t2827 + t2837 + t2839;
  t2847 = 0.340999127418*t2386*t2785;
  t2853 = t2494*t2792;
  t2855 = t2500*t2818;
  t2859 = t2847 + t2853 + t2855;
  t2554 = -0.175248972904*t389;
  t2555 = -0.553471*t2522;
  t2557 = t2554 + t2555;
  t2586 = -0.803828*t2522;
  t2587 = t2520 + t2586;
  t2826 = t696*t2821;
  t2846 = 0.340999127418*t2441*t2841;
  t2860 = t2482*t2859;
  t2862 = t2826 + t2846 + t2860;
  t2589 = -0.693671301908*t389;
  t2592 = 1. + t2589;
  t2865 = t2531*t2821;
  t2869 = t2541*t2841;
  t2871 = 0.340999127418*t2441*t2859;
  t2874 = t2865 + t2869 + t2871;
  t2599 = 0.444895486988*t389;
  t2604 = -0.218018*t2522;
  t2607 = t2599 + t2604;
  t2879 = t2559*t2821;
  t2880 = t2562*t2841;
  t2885 = t2570*t2859;
  t2889 = t2879 + t2880 + t2885;
  t2917 = t1897*t1572*t1662;
  t2922 = -1.*t1897*t1608*t1791;
  t2924 = t2917 + t2922;
  t2926 = t1897*t1608*t1572;
  t2929 = t1897*t1662*t1791;
  t2931 = t2926 + t2929;
  t2968 = -1.*t2050*t1633;
  t2969 = t2924*t2074;
  t2970 = t2931*t2085;
  t2977 = t2968 + t2969 + t2970;
  t2925 = -0.340999127418*t1568*t2924;
  t2932 = t1854*t2931;
  t2935 = -1.*t1633*t1916;
  t2936 = t2925 + t2932 + t2935;
  t2949 = t1982*t2924;
  t2950 = -0.340999127418*t1568*t2931;
  t2953 = -1.*t1633*t1990;
  t2958 = t2949 + t2950 + t2953;
  t2940 = 0.340999127418*t1441*t2936;
  t2962 = t1931*t2958;
  t2979 = t2977*t2133;
  t2994 = t2940 + t2962 + t2979;
  t2999 = t2173*t2977;
  t3000 = t2936*t2189;
  t3001 = t2958*t2202;
  t3002 = t2999 + t3000 + t3001;
  t3009 = t2255*t2936;
  t3010 = 0.340999127418*t1441*t2958;
  t3011 = t2977*t2292;
  t3017 = t3009 + t3010 + t3011;
  t2997 = 0.340999127418*t1286*t2994;
  t3004 = t2155*t3002;
  t3018 = t2239*t3017;
  t3022 = t2997 + t3004 + t3018;
  t3028 = t2338*t2994;
  t3030 = t2345*t3002;
  t3031 = 0.340999127418*t1286*t3017;
  t3032 = t3028 + t3030 + t3031;
  t3034 = t2409*t2994;
  t3041 = t2414*t3002;
  t3044 = t2425*t3017;
  t3053 = t3034 + t3041 + t3044;
  t3026 = t716*t3022;
  t3033 = t2333*t3032;
  t3055 = t2394*t3053;
  t3056 = t3026 + t3033 + t3055;
  t3081 = t2446*t3022;
  t3087 = 0.340999127418*t2386*t3032;
  t3088 = t2468*t3053;
  t3090 = t3081 + t3087 + t3088;
  t3093 = 0.340999127418*t2386*t3022;
  t3094 = t2494*t3032;
  t3095 = t2500*t3053;
  t3101 = t3093 + t3094 + t3095;
  t3073 = t696*t3056;
  t3091 = 0.340999127418*t2441*t3090;
  t3102 = t2482*t3101;
  t3103 = t3073 + t3091 + t3102;
  t3105 = t2531*t3056;
  t3106 = t2541*t3090;
  t3112 = 0.340999127418*t2441*t3101;
  t3113 = t3105 + t3106 + t3112;
  t3116 = t2559*t3056;
  t3118 = t2562*t3090;
  t3120 = t2570*t3101;
  t3123 = t3116 + t3118 + t3120;
  t2519 = t642*t2515;
  t2553 = t2526*t2551;
  t2581 = t2557*t2577;
  t2582 = t2519 + t2553 + t2581;
  t2588 = t2587*t2515;
  t2593 = t2592*t2551;
  t2610 = t2607*t2577;
  t2618 = t2588 + t2593 + t2610;
  t3157 = 0.553471*t2522;
  t3165 = t2554 + t3157;
  t3170 = 0.218018*t2522;
  t3172 = t2599 + t3170;
  t3186 = -0.353861996165*t389;
  t3187 = 1. + t3186;
  t2863 = t642*t2862;
  t2877 = t2526*t2874;
  t2891 = t2557*t2889;
  t2893 = t2863 + t2877 + t2891;
  t2902 = t2587*t2862;
  t2907 = t2592*t2874;
  t2908 = t2607*t2889;
  t2911 = t2902 + t2907 + t2908;
  t3104 = t642*t3103;
  t3115 = t2526*t3113;
  t3131 = t2557*t3123;
  t3137 = t3104 + t3115 + t3131;
  t3143 = t2587*t3103;
  t3144 = t2592*t3113;
  t3145 = t2607*t3123;
  t3152 = t3143 + t3144 + t3145;
  t3167 = t3165*t2515;
  t3174 = t3172*t2551;
  t3192 = t3187*t2577;
  t3194 = t3167 + t3174 + t3192;
  t3212 = t3165*t2862;
  t3217 = t3172*t2874;
  t3219 = t3187*t2889;
  t3220 = t3212 + t3217 + t3219;
  t3234 = t3165*t3103;
  t3241 = t3172*t3113;
  t3246 = t3187*t3123;
  t3249 = t3234 + t3241 + t3246;
  p_output1[0]=0.930418*t2582 + 0.366501*t2618;
  p_output1[1]=0.930418*t2893 + 0.366501*t2911;
  p_output1[2]=0.930418*t3137 + 0.366501*t3152;
  p_output1[3]=-0.294604*t2582 + 0.747896*t2618 - 0.594863*t3194;
  p_output1[4]=-0.294604*t2893 + 0.747896*t2911 - 0.594863*t3220;
  p_output1[5]=-0.294604*t3137 + 0.747896*t3152 - 0.594863*t3249;
  p_output1[6]=-0.218018*t2582 + 0.553471*t2618 + 0.803828*t3194;
  p_output1[7]=-0.218018*t2893 + 0.553471*t2911 + 0.803828*t3220;
  p_output1[8]=-0.218018*t3137 + 0.553471*t3152 + 0.803828*t3249;
}



void R_LeftToeBottomBack_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
