/*
 * Automatically Generated from Mathematica.
 * Sun 16 Oct 2022 21:34:56 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "p_LeftToeBottomBack_src.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t308;
  double t255;
  double t310;
  double t260;
  double t311;
  double t1066;
  double t192;
  double t329;
  double t332;
  double t337;
  double t264;
  double t312;
  double t315;
  double t435;
  double t915;
  double t1035;
  double t1045;
  double t1802;
  double t1910;
  double t1911;
  double t1588;
  double t1604;
  double t1657;
  double t886;
  double t1700;
  double t1715;
  double t2754;
  double t2757;
  double t2763;
  double t2255;
  double t2256;
  double t1082;
  double t1215;
  double t1231;
  double t1402;
  double t2931;
  double t2944;
  double t2948;
  double t2950;
  double t2969;
  double t2986;
  double t2769;
  double t2783;
  double t2807;
  double t2811;
  double t2812;
  double t2818;
  double t2990;
  double t2868;
  double t2872;
  double t2883;
  double t2892;
  double t2903;
  double t2910;
  double t2721;
  double t2722;
  double t2730;
  double t2633;
  double t2820;
  double t2861;
  double t2862;
  double t2913;
  double t2991;
  double t2992;
  double t2996;
  double t2998;
  double t3004;
  double t3041;
  double t3053;
  double t3054;
  double t3076;
  double t3077;
  double t3080;
  double t3085;
  double t3088;
  double t3092;
  double t3097;
  double t3157;
  double t3165;
  double t3166;
  double t3168;
  double t3169;
  double t3172;
  double t3179;
  double t3182;
  double t3283;
  double t3285;
  double t3295;
  double t3003;
  double t3019;
  double t3032;
  double t3110;
  double t3111;
  double t3120;
  double t3225;
  double t3226;
  double t3246;
  double t3250;
  double t3261;
  double t3270;
  double t3273;
  double t3274;
  double t3276;
  double t3279;
  double t3303;
  double t3304;
  double t3305;
  double t3323;
  double t3328;
  double t3329;
  double t3336;
  double t3355;
  double t3356;
  double t3357;
  double t3373;
  double t3374;
  double t3376;
  double t2456;
  double t2457;
  double t2465;
  double t2571;
  double t2616;
  double t2708;
  double t2717;
  double t3228;
  double t3229;
  double t3245;
  double t3282;
  double t3296;
  double t3300;
  double t3360;
  double t3362;
  double t3379;
  double t3380;
  double t3385;
  double t3388;
  double t3391;
  double t3392;
  double t3393;
  double t3397;
  double t3409;
  double t3413;
  double t3419;
  double t3420;
  double t3423;
  double t3429;
  double t3431;
  double t3434;
  double t2621;
  double t2632;
  double t3365;
  double t3400;
  double t3406;
  double t3407;
  double t3437;
  double t3439;
  double t3459;
  double t3461;
  double t3468;
  double t3474;
  double t3480;
  double t3483;
  double t3485;
  double t3494;
  double t2504;
  double t3501;
  double t3502;
  double t3505;
  double t3509;
  double t3511;
  double t3512;
  double t3513;
  double t3514;
  double t3516;
  double t3517;
  double t3539;
  double t3443;
  double t3547;
  double t3540;
  double t3613;
  double t3567;
  double t3590;
  double t3640;
  double t3447;
  double t3607;
  double t2581;
  double t193;
  double t224;
  double t227;
  double t253;
  double t446;
  double t733;
  double t1065;
  double t1219;
  double t1420;
  double t1529;
  double t3868;
  double t3869;
  double t3876;
  double t3847;
  double t3856;
  double t3863;
  double t1685;
  double t1689;
  double t1747;
  double t1750;
  double t2007;
  double t2242;
  double t2277;
  double t2449;
  double t2605;
  double t3907;
  double t3909;
  double t3911;
  double t3884;
  double t3885;
  double t3887;
  double t3937;
  double t3939;
  double t3940;
  double t3941;
  double t3916;
  double t3919;
  double t3920;
  double t3921;
  double t3923;
  double t3924;
  double t3926;
  double t3929;
  double t3922;
  double t3931;
  double t3945;
  double t3946;
  double t3952;
  double t3956;
  double t3957;
  double t3959;
  double t3964;
  double t3968;
  double t3970;
  double t3973;
  double t3951;
  double t3961;
  double t3976;
  double t3978;
  double t3983;
  double t3984;
  double t3985;
  double t3987;
  double t3990;
  double t3991;
  double t3992;
  double t3996;
  double t3448;
  double t3980;
  double t3989;
  double t3997;
  double t4001;
  double t4007;
  double t4011;
  double t4012;
  double t4014;
  double t4017;
  double t4018;
  double t4019;
  double t4020;
  double t3497;
  double t3498;
  double t3533;
  double t3534;
  double t4004;
  double t4015;
  double t4023;
  double t4024;
  double t3544;
  double t4027;
  double t4032;
  double t4033;
  double t4037;
  double t3551;
  double t4045;
  double t4050;
  double t4053;
  double t4055;
  double t3568;
  double t3571;
  double t3579;
  double t3595;
  double t3605;
  double t3606;
  double t3610;
  double t3611;
  double t3615;
  double t3616;
  double t3621;
  double t3626;
  double t3627;
  double t3629;
  double t3631;
  double t3643;
  double t3647;
  double t3648;
  double t3652;
  double t3653;
  double t3658;
  double t3659;
  double t3664;
  double t3665;
  double t3667;
  double t3670;
  double t3672;
  double t3675;
  double t3679;
  double t3681;
  double t3682;
  double t3683;
  double t3686;
  double t3688;
  double t3690;
  double t3692;
  double t3693;
  double t3699;
  double t3702;
  double t3703;
  double t3706;
  double t3729;
  double t3735;
  double t3738;
  double t3739;
  double t3748;
  double t3750;
  double t3756;
  double t3757;
  double t3760;
  double t3763;
  double t3764;
  double t3765;
  double t3783;
  double t3784;
  double t3785;
  double t3787;
  double t3790;
  double t3793;
  double t3796;
  double t3797;
  double t3801;
  double t3804;
  double t3808;
  double t3810;
  double t3817;
  double t3820;
  double t3821;
  double t3831;
  double t3839;
  double t3840;
  double t3841;
  double t3842;
  double t4173;
  double t4176;
  double t4180;
  double t4154;
  double t4158;
  double t4167;
  double t4203;
  double t4205;
  double t4206;
  double t4209;
  double t4182;
  double t4183;
  double t4189;
  double t4190;
  double t4193;
  double t4197;
  double t4198;
  double t4199;
  double t4191;
  double t4200;
  double t4212;
  double t4216;
  double t4218;
  double t4220;
  double t4223;
  double t4224;
  double t4226;
  double t4227;
  double t4228;
  double t4229;
  double t4217;
  double t4225;
  double t4230;
  double t4234;
  double t4240;
  double t4241;
  double t4244;
  double t4245;
  double t4247;
  double t4248;
  double t4250;
  double t4251;
  double t4238;
  double t4246;
  double t4254;
  double t4255;
  double t4261;
  double t4262;
  double t4263;
  double t4264;
  double t4269;
  double t4270;
  double t4276;
  double t4280;
  double t4256;
  double t4265;
  double t4281;
  double t4288;
  double t4295;
  double t4296;
  double t4298;
  double t4299;
  double t4301;
  double t4302;
  double t4303;
  double t4304;
  t308 = Cos(var1[3]);
  t255 = Cos(var1[5]);
  t310 = Sin(var1[4]);
  t260 = Sin(var1[3]);
  t311 = Sin(var1[5]);
  t1066 = Sin(var1[7]);
  t192 = Cos(var1[6]);
  t329 = t308*t255*t310;
  t332 = t260*t311;
  t337 = t329 + t332;
  t264 = -1.*t255*t260;
  t312 = t308*t310*t311;
  t315 = t264 + t312;
  t435 = Sin(var1[6]);
  t915 = Cos(var1[7]);
  t1035 = -1.*t915;
  t1045 = 1. + t1035;
  t1802 = t192*t315;
  t1910 = -1.*t337*t435;
  t1911 = t1802 + t1910;
  t1588 = t192*t337;
  t1604 = t315*t435;
  t1657 = t1588 + t1604;
  t886 = Cos(var1[4]);
  t1700 = 0.366501*t1066;
  t1715 = 0. + t1700;
  t2754 = Cos(var1[8]);
  t2757 = -1.*t2754;
  t2763 = 1. + t2757;
  t2255 = 0.930418*t1066;
  t2256 = 0. + t2255;
  t1082 = -0.930418*t1066;
  t1215 = 0. + t1082;
  t1231 = -0.366501*t1066;
  t1402 = 0. + t1231;
  t2931 = -1.000000637725*t1045;
  t2944 = 1. + t2931;
  t2948 = t308*t886*t2944;
  t2950 = t1911*t1215;
  t2969 = t1657*t1402;
  t2986 = t2948 + t2950 + t2969;
  t2769 = -0.340999127418*t1045*t1911;
  t2783 = -0.134322983001*t1045;
  t2807 = 1. + t2783;
  t2811 = t2807*t1657;
  t2812 = t308*t886*t1715;
  t2818 = t2769 + t2811 + t2812;
  t2990 = Sin(var1[8]);
  t2868 = -0.8656776547239999*t1045;
  t2872 = 1. + t2868;
  t2883 = t2872*t1911;
  t2892 = -0.340999127418*t1045*t1657;
  t2903 = t308*t886*t2256;
  t2910 = t2883 + t2892 + t2903;
  t2721 = Cos(var1[9]);
  t2722 = -1.*t2721;
  t2730 = 1. + t2722;
  t2633 = Sin(var1[10]);
  t2820 = 0.340999127418*t2763*t2818;
  t2861 = -0.134322983001*t2763;
  t2862 = 1. + t2861;
  t2913 = t2862*t2910;
  t2991 = -0.366501*t2990;
  t2992 = 0. + t2991;
  t2996 = t2986*t2992;
  t2998 = t2820 + t2913 + t2996;
  t3004 = Sin(var1[9]);
  t3041 = -1.000000637725*t2763;
  t3053 = 1. + t3041;
  t3054 = t3053*t2986;
  t3076 = -0.930418*t2990;
  t3077 = 0. + t3076;
  t3080 = t2818*t3077;
  t3085 = 0.366501*t2990;
  t3088 = 0. + t3085;
  t3092 = t2910*t3088;
  t3097 = t3054 + t3080 + t3092;
  t3157 = -0.8656776547239999*t2763;
  t3165 = 1. + t3157;
  t3166 = t3165*t2818;
  t3168 = 0.340999127418*t2763*t2910;
  t3169 = 0.930418*t2990;
  t3172 = 0. + t3169;
  t3179 = t2986*t3172;
  t3182 = t3166 + t3168 + t3179;
  t3283 = Cos(var1[10]);
  t3285 = -1.*t3283;
  t3295 = 1. + t3285;
  t3003 = 0.340999127418*t2730*t2998;
  t3019 = -0.930418*t3004;
  t3032 = 0. + t3019;
  t3110 = t3032*t3097;
  t3111 = -0.8656776547239999*t2730;
  t3120 = 1. + t3111;
  t3225 = t3120*t3182;
  t3226 = t3003 + t3110 + t3225;
  t3246 = -0.134322983001*t2730;
  t3250 = 1. + t3246;
  t3261 = t3250*t2998;
  t3270 = 0.366501*t3004;
  t3273 = 0. + t3270;
  t3274 = t3273*t3097;
  t3276 = 0.340999127418*t2730*t3182;
  t3279 = t3261 + t3274 + t3276;
  t3303 = -0.366501*t3004;
  t3304 = 0. + t3303;
  t3305 = t3304*t2998;
  t3323 = -1.000000637725*t2730;
  t3328 = 1. + t3323;
  t3329 = t3328*t3097;
  t3336 = 0.930418*t3004;
  t3355 = 0. + t3336;
  t3356 = t3355*t3182;
  t3357 = t3305 + t3329 + t3356;
  t3373 = Cos(var1[11]);
  t3374 = -1.*t3373;
  t3376 = 1. + t3374;
  t2456 = Cos(var1[12]);
  t2457 = -1.*t2456;
  t2465 = 1. + t2457;
  t2571 = Sin(var1[12]);
  t2616 = Sin(var1[11]);
  t2708 = 0.930418*t2633;
  t2717 = 0. + t2708;
  t3228 = t2717*t3226;
  t3229 = -0.366501*t2633;
  t3245 = 0. + t3229;
  t3282 = t3245*t3279;
  t3296 = -1.000000637725*t3295;
  t3300 = 1. + t3296;
  t3360 = t3300*t3357;
  t3362 = t3228 + t3282 + t3360;
  t3379 = -0.8656776547239999*t3295;
  t3380 = 1. + t3379;
  t3385 = t3380*t3226;
  t3388 = 0.340999127418*t3295*t3279;
  t3391 = -0.930418*t2633;
  t3392 = 0. + t3391;
  t3393 = t3392*t3357;
  t3397 = t3385 + t3388 + t3393;
  t3409 = 0.340999127418*t3295*t3226;
  t3413 = -0.134322983001*t3295;
  t3419 = 1. + t3413;
  t3420 = t3419*t3279;
  t3423 = 0.366501*t2633;
  t3429 = 0. + t3423;
  t3431 = t3429*t3357;
  t3434 = t3409 + t3420 + t3431;
  t2621 = 0.366501*t2616;
  t2632 = 0. + t2621;
  t3365 = t2632*t3362;
  t3400 = 0.340999127418*t3376*t3397;
  t3406 = -0.134322983001*t3376;
  t3407 = 1. + t3406;
  t3437 = t3407*t3434;
  t3439 = t3365 + t3400 + t3437;
  t3459 = -0.930418*t2616;
  t3461 = 0. + t3459;
  t3468 = t3461*t3362;
  t3474 = -0.8656776547239999*t3376;
  t3480 = 1. + t3474;
  t3483 = t3480*t3397;
  t3485 = 0.340999127418*t3376*t3434;
  t3494 = t3468 + t3483 + t3485;
  t2504 = -0.175248972904*t2465;
  t3501 = -1.000000637725*t3376;
  t3502 = 1. + t3501;
  t3505 = t3502*t3362;
  t3509 = 0.930418*t2616;
  t3511 = 0. + t3509;
  t3512 = t3511*t3397;
  t3513 = -0.366501*t2616;
  t3514 = 0. + t3513;
  t3516 = t3514*t3434;
  t3517 = t3505 + t3512 + t3516;
  t3539 = -0.120666640478*t2465;
  t3443 = 0.444895486988*t2465;
  t3547 = -0.553471*t2571;
  t3540 = 0.803828*t2571;
  t3613 = 0.120666640478*t2465;
  t3567 = -0.803828*t2571;
  t3590 = -0.218018*t2571;
  t3640 = -0.444895486988*t2465;
  t3447 = 0.218018*t2571;
  t3607 = 0.175248972904*t2465;
  t2581 = 0.553471*t2571;
  t193 = -1.*t192;
  t224 = 1. + t193;
  t227 = 0.091*t224;
  t253 = 0. + t227;
  t446 = 0.091*t435;
  t733 = 0. + t446;
  t1065 = -0.04500040093286238*t1045;
  t1219 = 0.07877663122399998*t1215;
  t1420 = 0.031030906668*t1402;
  t1529 = 0. + t1065 + t1219 + t1420;
  t3868 = t255*t260*t310;
  t3869 = -1.*t308*t311;
  t3876 = t3868 + t3869;
  t3847 = t308*t255;
  t3856 = t260*t310*t311;
  t3863 = t3847 + t3856;
  t1685 = -3.2909349868922137e-7*var1[7];
  t1689 = 0.03103092645718495*t1045;
  t1747 = -0.045000372235*t1715;
  t1750 = t1685 + t1689 + t1747;
  t2007 = 1.296332362046933e-7*var1[7];
  t2242 = 0.07877668146182712*t1045;
  t2277 = -0.045000372235*t2256;
  t2449 = t2007 + t2242 + t2277;
  t2605 = t2504 + t2581;
  t3907 = t192*t3863;
  t3909 = -1.*t3876*t435;
  t3911 = t3907 + t3909;
  t3884 = t192*t3876;
  t3885 = t3863*t435;
  t3887 = t3884 + t3885;
  t3937 = t886*t2944*t260;
  t3939 = t3911*t1215;
  t3940 = t3887*t1402;
  t3941 = t3937 + t3939 + t3940;
  t3916 = -0.340999127418*t1045*t3911;
  t3919 = t2807*t3887;
  t3920 = t886*t260*t1715;
  t3921 = t3916 + t3919 + t3920;
  t3923 = t2872*t3911;
  t3924 = -0.340999127418*t1045*t3887;
  t3926 = t886*t260*t2256;
  t3929 = t3923 + t3924 + t3926;
  t3922 = 0.340999127418*t2763*t3921;
  t3931 = t2862*t3929;
  t3945 = t3941*t2992;
  t3946 = t3922 + t3931 + t3945;
  t3952 = t3053*t3941;
  t3956 = t3921*t3077;
  t3957 = t3929*t3088;
  t3959 = t3952 + t3956 + t3957;
  t3964 = t3165*t3921;
  t3968 = 0.340999127418*t2763*t3929;
  t3970 = t3941*t3172;
  t3973 = t3964 + t3968 + t3970;
  t3951 = 0.340999127418*t2730*t3946;
  t3961 = t3032*t3959;
  t3976 = t3120*t3973;
  t3978 = t3951 + t3961 + t3976;
  t3983 = t3250*t3946;
  t3984 = t3273*t3959;
  t3985 = 0.340999127418*t2730*t3973;
  t3987 = t3983 + t3984 + t3985;
  t3990 = t3304*t3946;
  t3991 = t3328*t3959;
  t3992 = t3355*t3973;
  t3996 = t3990 + t3991 + t3992;
  t3448 = t3443 + t3447;
  t3980 = t2717*t3978;
  t3989 = t3245*t3987;
  t3997 = t3300*t3996;
  t4001 = t3980 + t3989 + t3997;
  t4007 = t3380*t3978;
  t4011 = 0.340999127418*t3295*t3987;
  t4012 = t3392*t3996;
  t4014 = t4007 + t4011 + t4012;
  t4017 = 0.340999127418*t3295*t3978;
  t4018 = t3419*t3987;
  t4019 = t3429*t3996;
  t4020 = t4017 + t4018 + t4019;
  t3497 = -0.353861996165*t2465;
  t3498 = 1. + t3497;
  t3533 = -0.952469601425*t2465;
  t3534 = 1. + t3533;
  t4004 = t2632*t4001;
  t4015 = 0.340999127418*t3376*t4014;
  t4023 = t3407*t4020;
  t4024 = t4004 + t4015 + t4023;
  t3544 = t3539 + t3540;
  t4027 = t3461*t4001;
  t4032 = t3480*t4014;
  t4033 = 0.340999127418*t3376*t4020;
  t4037 = t4027 + t4032 + t4033;
  t3551 = t2504 + t3547;
  t4045 = t3502*t4001;
  t4050 = t3511*t4014;
  t4053 = t3514*t4020;
  t4055 = t4045 + t4050 + t4053;
  t3568 = t3539 + t3567;
  t3571 = -0.693671301908*t2465;
  t3579 = 1. + t3571;
  t3595 = t3443 + t3590;
  t3605 = 2.838136523330542e-8*var1[12];
  t3606 = 0.2845150083511607*t2465;
  t3610 = t3607 + t3547;
  t3611 = 0.44503472296900004*t3610;
  t3615 = t3613 + t3540;
  t3616 = -0.5286755231320001*t3615;
  t3621 = t3605 + t3606 + t3611 + t3616;
  t3626 = -7.20503013377005e-8*var1[12];
  t3627 = -0.3667270384178674*t2465;
  t3629 = t3613 + t3567;
  t3631 = 0.29871295412*t3629;
  t3643 = t3640 + t3590;
  t3647 = 0.44503472296900004*t3643;
  t3648 = t3626 + t3627 + t3631 + t3647;
  t3652 = -1.0464152525368286e-7*var1[12];
  t3653 = 0.15748087543254813*t2465;
  t3658 = t3640 + t3447;
  t3659 = -0.5286755231320001*t3658;
  t3664 = t3607 + t2581;
  t3665 = 0.29871295412*t3664;
  t3667 = t3652 + t3653 + t3659 + t3665;
  t3670 = 0.06199697675299678*t3376;
  t3672 = 0.324290713329*t3514;
  t3675 = -0.823260828522*t3511;
  t3679 = 0. + t3670 + t3672 + t3675;
  t3681 = 2.95447451120871e-8*var1[11];
  t3682 = -0.8232613535360118*t3376;
  t3683 = 0.061996937216*t3461;
  t3686 = t3681 + t3682 + t3683;
  t3688 = 7.500378623168247e-8*var1[11];
  t3690 = 0.32429092013729516*t3376;
  t3692 = 0.061996937216*t2632;
  t3693 = t3688 + t3690 + t3692;
  t3699 = 2.281945176511838e-8*var1[10];
  t3702 = -0.5905366811997648*t3295;
  t3703 = -0.262809976934*t3392;
  t3706 = t3699 + t3702 + t3703;
  t3729 = 5.7930615939377813e-8*var1[10];
  t3735 = 0.23261833304643187*t3295;
  t3738 = -0.262809976934*t3429;
  t3739 = t3729 + t3735 + t3738;
  t3748 = -0.26281014453449253*t3295;
  t3750 = 0.23261818470000004*t3245;
  t3756 = -0.5905363046000001*t2717;
  t3757 = 0. + t3748 + t3750 + t3756;
  t3760 = 3.2909349868922137e-7*var1[8];
  t3763 = 0.055653945343889656*t2763;
  t3764 = -0.045000372235*t2992;
  t3765 = t3760 + t3763 + t3764;
  t3783 = -1.5981976069815686e-7*var1[9];
  t3784 = 0.08675267452931407*t2730;
  t3785 = 0.039853013046*t3273;
  t3787 = t3783 + t3784 + t3785;
  t3790 = -0.04500040093286238*t2763;
  t3793 = -0.141285834136*t3077;
  t3796 = 0.055653909852*t3088;
  t3797 = 0. + t3790 + t3793 + t3796;
  t3801 = 0.039853038461262744*t2730;
  t3804 = 0.086752619205*t3304;
  t3808 = -0.22023459268999998*t3355;
  t3810 = 0. + t3801 + t3804 + t3808;
  t3817 = 1.296332362046933e-7*var1[8];
  t3820 = -0.14128592423750855*t2763;
  t3821 = -0.045000372235*t3172;
  t3831 = t3817 + t3820 + t3821;
  t3839 = -6.295460977284962e-8*var1[9];
  t3840 = -0.22023473313910558*t2730;
  t3841 = 0.039853013046*t3032;
  t3842 = t3839 + t3840 + t3841;
  t4173 = t886*t192*t311;
  t4176 = -1.*t886*t255*t435;
  t4180 = t4173 + t4176;
  t4154 = t886*t255*t192;
  t4158 = t886*t311*t435;
  t4167 = t4154 + t4158;
  t4203 = -1.*t2944*t310;
  t4205 = t4180*t1215;
  t4206 = t4167*t1402;
  t4209 = t4203 + t4205 + t4206;
  t4182 = -0.340999127418*t1045*t4180;
  t4183 = t2807*t4167;
  t4189 = -1.*t310*t1715;
  t4190 = t4182 + t4183 + t4189;
  t4193 = t2872*t4180;
  t4197 = -0.340999127418*t1045*t4167;
  t4198 = -1.*t310*t2256;
  t4199 = t4193 + t4197 + t4198;
  t4191 = 0.340999127418*t2763*t4190;
  t4200 = t2862*t4199;
  t4212 = t4209*t2992;
  t4216 = t4191 + t4200 + t4212;
  t4218 = t3053*t4209;
  t4220 = t4190*t3077;
  t4223 = t4199*t3088;
  t4224 = t4218 + t4220 + t4223;
  t4226 = t3165*t4190;
  t4227 = 0.340999127418*t2763*t4199;
  t4228 = t4209*t3172;
  t4229 = t4226 + t4227 + t4228;
  t4217 = 0.340999127418*t2730*t4216;
  t4225 = t3032*t4224;
  t4230 = t3120*t4229;
  t4234 = t4217 + t4225 + t4230;
  t4240 = t3250*t4216;
  t4241 = t3273*t4224;
  t4244 = 0.340999127418*t2730*t4229;
  t4245 = t4240 + t4241 + t4244;
  t4247 = t3304*t4216;
  t4248 = t3328*t4224;
  t4250 = t3355*t4229;
  t4251 = t4247 + t4248 + t4250;
  t4238 = t2717*t4234;
  t4246 = t3245*t4245;
  t4254 = t3300*t4251;
  t4255 = t4238 + t4246 + t4254;
  t4261 = t3380*t4234;
  t4262 = 0.340999127418*t3295*t4245;
  t4263 = t3392*t4251;
  t4264 = t4261 + t4262 + t4263;
  t4269 = 0.340999127418*t3295*t4234;
  t4270 = t3419*t4245;
  t4276 = t3429*t4251;
  t4280 = t4269 + t4270 + t4276;
  t4256 = t2632*t4255;
  t4265 = 0.340999127418*t3376*t4264;
  t4281 = t3407*t4280;
  t4288 = t4256 + t4265 + t4281;
  t4295 = t3461*t4255;
  t4296 = t3480*t4264;
  t4298 = 0.340999127418*t3376*t4280;
  t4299 = t4295 + t4296 + t4298;
  t4301 = t3502*t4255;
  t4302 = t3511*t4264;
  t4303 = t3514*t4280;
  t4304 = t4301 + t4302 + t4303;
  p_output1[0]=0. + t1657*t1750 + t1911*t2449 + t253*t315 + 0.061997*(t2605*t3439 + t3448*t3494 + t3498*t3517) + 0.323516*(t3439*t3534 + t3494*t3544 + t3517*t3551) - 0.823565*(t3439*t3568 + t3494*t3579 + t3517*t3595) + t3439*t3621 + t3494*t3648 + t3517*t3667 + t3362*t3679 + t3397*t3686 + t3434*t3693 + t3226*t3706 + t3279*t3739 + t3357*t3757 + t2910*t3765 + t2998*t3787 + t2986*t3797 + t3097*t3810 + t2818*t3831 + t3182*t3842 + t337*t733 + t1529*t308*t886 + var1[0];
  p_output1[1]=0. + t253*t3863 + t1750*t3887 + t2449*t3911 + t3831*t3921 + t3765*t3929 + t3797*t3941 + t3787*t3946 + t3810*t3959 + t3842*t3973 + t3706*t3978 + t3739*t3987 + t3757*t3996 + t3679*t4001 + t3686*t4014 + t3693*t4020 + t3621*t4024 + t3648*t4037 + t3667*t4055 + 0.061997*(t2605*t4024 + t3448*t4037 + t3498*t4055) + 0.323516*(t3534*t4024 + t3544*t4037 + t3551*t4055) - 0.823565*(t3568*t4024 + t3579*t4037 + t3595*t4055) + t3876*t733 + t1529*t260*t886 + var1[1];
  p_output1[2]=0. - 1.*t1529*t310 + t1750*t4167 + t2449*t4180 + t3831*t4190 + t3765*t4199 + t3797*t4209 + t3787*t4216 + t3810*t4224 + t3842*t4229 + t3706*t4234 + t3739*t4245 + t3757*t4251 + t3679*t4255 + t3686*t4264 + t3693*t4280 + t3621*t4288 + t3648*t4299 + t3667*t4304 + 0.061997*(t2605*t4288 + t3448*t4299 + t3498*t4304) + 0.323516*(t3534*t4288 + t3544*t4299 + t3551*t4304) - 0.823565*(t3568*t4288 + t3579*t4299 + t3595*t4304) + t253*t311*t886 + t255*t733*t886 + var1[2];
}



void p_LeftToeBottomBack_src(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
